uint64_t sub_1005FFDE4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    a1 = a2;
  return swift_bridgeObjectRetain(a1);
}

uint64_t sub_1005FFDF0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1005FFE08(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1005FFE08(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    a1 = a2;
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1005FFE14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;
  __n128 v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD v76[2];

  v72 = a1;
  v74 = a2;
  v3 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v3);
  v73 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  __chkstk_darwin(v5);
  v66 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v7);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimeZone(0);
  __chkstk_darwin(v9);
  v70 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Calendar(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Date.FormatStyle(0);
  v19 = *(_QWORD *)(v69 - 8);
  v20 = __chkstk_darwin(v69);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v66 - v24;
  v75 = v2;
  if ((Album.isPreorder.getter(v23) & 1) != 0)
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 1;
    v47 = v74;
    goto LABEL_20;
  }
  v26 = static ParseableFormatStyle<>.dateTime.getter();
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v26);
  Date.FormatStyle.year(_:)(v18);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  v28 = v22;
  v29 = v69;
  v27(v28, v69);
  v30 = Calendar.musicDefaultCalendar.unsafeMutableAddressor();
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v30, v11);
  v32 = v70;
  Calendar.timeZone.getter(v31);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v33 = Date.FormatStyle.timeZone.setter(v32);
  v34 = (uint64_t)v71;
  v35 = v75;
  Album.releaseDate.getter(v33);
  v36 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36) == 1)
  {
    v38 = v25;
    sub_10004FF60(v34, (uint64_t *)&unk_1011A30A0);
    v40 = v66;
    v39 = v67;
    v41 = v68;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v35, v68);
  }
  else
  {
    v48 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
    v38 = v25;
    Date.formatted<A>(_:)(v76, v25, v29, v48);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v36);
    v44 = v76[0];
    v45 = v76[1];
    v40 = v66;
    v39 = v67;
    v41 = v68;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v35, v68);
    if (v45)
      goto LABEL_8;
  }
  v49 = Album.releaseYear.getter(v42);
  if ((v50 & 1) != 0)
  {
    v53 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    v44 = 0;
    v45 = 0;
    goto LABEL_10;
  }
  v76[0] = v49;
  v51 = sub_1001AA49C();
  v44 = BinaryInteger.description.getter(&type metadata for Int, v51);
  v45 = v52;
LABEL_8:
  v53 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v41);
LABEL_10:
  v54 = v38;
  v55 = (_QWORD *)Album.genreNames.getter(v53);
  v56 = v55;
  if (v55[2])
  {
    v43 = v55[4];
    v46 = v55[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = 0;
    v46 = 0;
  }
  v57 = swift_bridgeObjectRelease(v56);
  if (v45)
  {
    if (v44 == 48 && v45 == 0xE100000000000000)
    {
      ((void (*)(char *, uint64_t, __n128))v27)(v54, v29, v57);
      swift_bridgeObjectRelease(0xE100000000000000);
      v44 = 0;
      v45 = 0;
      v47 = v74;
    }
    else
    {
      v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, 48, 0xE100000000000000, 0);
      v27(v54, v29);
      v47 = v74;
      if ((v58 & 1) != 0)
      {
        swift_bridgeObjectRelease(v45);
        v44 = 0;
        v45 = 0;
      }
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, __n128))v27)(v54, v29, v57);
    v47 = v74;
  }
LABEL_20:
  v59 = Album.audioVariants.getter();
  if (v59)
  {
    v60 = (_QWORD *)v59;
    if (*(_QWORD *)(v59 + 16))
      goto LABEL_26;
    swift_bridgeObjectRelease(v59);
  }
  v61 = v73;
  sub_10004A160(v72, v73, &qword_1011B1F10);
  v62 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62) == 1)
  {
    sub_10004FF60(v61, &qword_1011B1F10);
    v60 = _swiftEmptyArrayStorage;
  }
  else
  {
    v60 = sub_100601514();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
  }
LABEL_26:
  *v47 = v43;
  v47[1] = v46;
  v47[2] = v44;
  v47[3] = v45;
  v47[4] = v60;
  v64 = _s8MetadataV13ConfigurationOMa(0);
  return swift_storeEnumTagMultiPayload(v47, v64, 0);
}

uint64_t sub_10060037C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A58C8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v25 - v10;
  Album.editorialNotes.getter(v9);
  v12 = type metadata accessor for EditorialNotes(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011A58C8);
  }
  else
  {
    EditorialNotes.standard.getter();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (v16)
    {
      v17 = String.trim()();
      countAndFlagsBits = v17._countAndFlagsBits;
      v19 = swift_bridgeObjectRelease(v16);
      v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v26 + 16))(v4, v1, v2, v19);
      if (v17._object)
        goto LABEL_11;
      goto LABEL_7;
    }
  }
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16))(v4, v0, v2);
LABEL_7:
  Album.editorialNotes.getter(v20);
  if (v14(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
    sub_10004FF60((uint64_t)v8, &qword_1011A58C8);
    return 0;
  }
  EditorialNotes.short.getter();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
    return 0;
  }
  countAndFlagsBits = String.trim()()._countAndFlagsBits;
  v21 = swift_bridgeObjectRelease(v23);
LABEL_11:
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v4, v2, v21);
  return countAndFlagsBits;
}

double sub_1006005D8(unsigned __int8 a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char **v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char **v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double result;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char **v126;
  char *v127;
  char *v128;
  uint64_t v129;
  _QWORD v130[7];
  char *v131;

  v116 = a4;
  v8 = a1;
  v9 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v9);
  v123 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v11);
  v120 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v115 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v114 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v17);
  v129 = (uint64_t)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v19);
  v122 = (uint64_t)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v121 = (uint64_t)&v114 - v22;
  __chkstk_darwin(v23);
  v119 = (uint64_t)&v114 - v24;
  __chkstk_darwin(v25);
  v118 = (uint64_t)&v114 - v26;
  __chkstk_darwin(v27);
  v117 = (uint64_t)&v114 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v114 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v114 - v33;
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v35);
  v37 = (char *)&v114 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v128 = (char *)&v114 - v39;
  v40 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v40);
  v42 = (char *)&v114 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = a2;
  v124 = v4;
  if (v8 != 3)
  {
    KeyPath = swift_getKeyPath(&unk_100EC4B50);
    v126 = &v114;
    __chkstk_darwin(KeyPath);
    *(&v114 - 2) = a2;
    *((_BYTE *)&v114 - 8) = a1;
    v130[0] = v127;
    v44 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
    a2 = v127;
    v45 = v124;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v130, KeyPath, sub_100606630, &v114 - 4, (char *)&type metadata for () + 8, v44);
    v124 = v45;
    swift_release();
  }
  v46 = a3;
  sub_10004A160(a3, (uint64_t)v34, &qword_1011A8FA0);
  v47 = type metadata accessor for Album(0);
  v48 = *(char ***)(v47 - 8);
  v125 = v48[6];
  v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v125)(v34, 1, v47);
  v126 = v48;
  if (v49 == 1)
  {
    sub_10004FF60((uint64_t)v34, &qword_1011A8FA0);
    v50 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v128, 1, 1, v50);
  }
  else
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v47, (uint64_t)&protocol witness table for Album, v128);
    ((void (*)(char *, uint64_t))v48[1])(v34, v47);
  }
  v51 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v129, 1, 10, v51);
  v52 = v46;
  sub_10004A160(v46, (uint64_t)v31, &qword_1011A8FA0);
  v53 = v125;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v125)(v31, 1, v47) == 1)
  {
    v54 = &qword_1011A8FA0;
    v55 = (uint64_t)v31;
LABEL_10:
    sub_10004FF60(v55, v54);
    v57 = 0x3FF0000000000000;
    goto LABEL_13;
  }
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v47, (uint64_t)&protocol witness table for Album, v37);
  ((void (*)(char *, uint64_t))v126[1])(v31, v47);
  v56 = type metadata accessor for ArtworkImage.ViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v37, 1, v56) == 1)
  {
    v54 = (uint64_t *)&unk_1011A3E10;
    v55 = (uint64_t)v37;
    goto LABEL_10;
  }
  v57 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
  v59 = v58;
  sub_10005B748((uint64_t)v37, type metadata accessor for ArtworkImage.ViewModel);
  if ((v59 & 1) != 0)
    v57 = 0x3FF0000000000000;
LABEL_13:
  v60 = Corner.large.unsafeMutableAddressor();
  v61 = *v60;
  v62 = v60[1];
  v63 = *((_BYTE *)v60 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v130);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v128, v129, v57, 0, (uint64_t)v130, v61, v62, v63, (uint64_t)v42);
  v64 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v42, 0, 1, v64);
  v65 = swift_getKeyPath(&unk_100EC4A38);
  __chkstk_darwin(v65);
  *(&v114 - 2) = a2;
  *(&v114 - 1) = v42;
  v66 = (uint64_t)&a2[OBJC_IVAR____TtCV5Music6Header13Configuration___observationRegistrar];
  v131 = a2;
  v128 = (char *)sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  v129 = v66;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v65, sub_1006065F4, &v114 - 4, (char *)&type metadata for () + 8, v128);
  swift_release();
  sub_10004FF60((uint64_t)v42, (uint64_t *)&unk_1011C6790);
  v67 = v117;
  sub_10004A160(v52, v117, &qword_1011A8FA0);
  v68 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v53)(v67, 1, v47);
  if ((_DWORD)v68 == 1)
  {
    sub_10004FF60(v67, &qword_1011A8FA0);
    v69 = v114;
    v70 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
    v71 = v115;
    static Locale.current.getter(v70);
    v72 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, 0, v71, 0, 0, 256);
    v74 = v73;
  }
  else
  {
    v72 = Album.title.getter(v68);
    v74 = v75;
    ((void (*)(uint64_t, uint64_t))v126[1])(v67, v47);
  }
  v76 = swift_getKeyPath(&unk_100EC4A60);
  __chkstk_darwin(v76);
  *(&v114 - 4) = a2;
  *(&v114 - 3) = (char *)v72;
  *(&v114 - 2) = v74;
  v131 = a2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v76, sub_100603B90, &v114 - 6, (char *)&type metadata for () + 8, v128);
  swift_release();
  swift_bridgeObjectRelease();
  v77 = v118;
  sub_10004A160(v52, v118, &qword_1011A8FA0);
  v78 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v53)(v77, 1, v47);
  if ((_DWORD)v78 == 1)
  {
    sub_10004FF60(v77, &qword_1011A8FA0);
    v79 = type metadata accessor for MusicFavoriteStatus(0);
    v80 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v120, 1, 1, v79);
  }
  else
  {
    v80 = (uint64_t)v120;
    Album.favoriteStatus.getter(v78);
    ((void (*)(uint64_t, uint64_t))v126[1])(v77, v47);
    v81 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
  }
  v82 = swift_getKeyPath(&unk_100EC4A88);
  __chkstk_darwin(v82);
  *(&v114 - 2) = a2;
  *(&v114 - 1) = (char *)v80;
  v131 = a2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v82, sub_100606608, &v114 - 4, (char *)&type metadata for () + 8, v128);
  swift_release();
  sub_10004FF60(v80, &qword_1011A19A0);
  v83 = v52;
  v84 = v119;
  sub_10004A160(v52, v119, &qword_1011A8FA0);
  v85 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v53)(v84, 1, v47);
  if ((_DWORD)v85 == 1)
  {
    sub_10004FF60(v84, &qword_1011A8FA0);
    v86 = 0;
    v87 = 0;
    v88 = -1;
  }
  else
  {
    v86 = Album.artistName.getter(v85);
    v87 = v89;
    ((void (*)(uint64_t, uint64_t))v126[1])(v84, v47);
    v88 = 1;
  }
  v90 = swift_getKeyPath(&unk_100EC4AB0);
  __chkstk_darwin(v90);
  v92 = v127;
  v91 = v128;
  *(&v114 - 4) = v127;
  *(&v114 - 3) = (char *)v86;
  *(&v114 - 2) = (char *)v87;
  *((_BYTE *)&v114 - 8) = v88;
  v131 = v92;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v90, sub_100603BDC, &v114 - 6, (char *)&type metadata for () + 8, v91);
  sub_1005FFDF0(v86, v87, v88);
  swift_release();
  v93 = v83;
  v94 = v121;
  sub_10004A160(v83, v121, &qword_1011A8FA0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v94, 1, v47) == 1)
  {
    sub_10004FF60(v94, &qword_1011A8FA0);
    v95 = _s8MetadataV13ConfigurationOMa(0);
    v96 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v123, 1, 1, v95);
    v97 = v126;
  }
  else
  {
    v96 = v123;
    sub_1005FFE14(v116, v123);
    v97 = v126;
    ((void (*)(uint64_t, uint64_t))v126[1])(v94, v47);
    v98 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v96, 0, 1, v98);
  }
  v99 = swift_getKeyPath(&unk_100EC4AD8);
  __chkstk_darwin(v99);
  v101 = v127;
  v100 = v128;
  *(&v114 - 2) = v127;
  *(&v114 - 1) = v96;
  v131 = v101;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v99, sub_10060661C, &v114 - 4, (char *)&type metadata for () + 8, v100);
  swift_release();
  sub_10004FF60((uint64_t)v96, &qword_1011BD7F8);
  v102 = v122;
  sub_10004A160(v93, v122, &qword_1011A8FA0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v102, 1, v47) == 1)
  {
    sub_10004FF60(v102, &qword_1011A8FA0);
  }
  else
  {
    v103 = sub_10060037C();
    v105 = v104;
    ((void (*)(uint64_t, uint64_t))v97[1])(v102, v47);
    if (v105)
      goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  v103 = 0;
  v105 = 0xE000000000000000;
LABEL_29:
  v106 = swift_getKeyPath(&unk_100EC4B00);
  v131 = v101;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v131, v106, v128);
  swift_release();
  v107 = (uint64_t *)&v101[OBJC_IVAR____TtCV5Music6Header13Configuration__description];
  v108 = *(_QWORD *)&v101[OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8];
  if (v108)
  {
    v110 = v107[2];
    v109 = v107[3];
    v111 = *v107;
    sub_100445F28(*v107, *(_QWORD *)&v101[OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8], v110, v109);
    swift_bridgeObjectRetain();
    sub_100048AAC(v110, v109);
    swift_bridgeObjectRelease();
    sub_10004BA30(v110, v109);
    sub_100048AAC(v110, v109);
    sub_10044603C(v111, v108, v110, v109);
  }
  else
  {
    v110 = 0;
    v109 = 0;
  }
  v112 = swift_getKeyPath(&unk_100EC4B00);
  __chkstk_darwin(v112);
  *(&v114 - 6) = v101;
  *(&v114 - 5) = (char *)v103;
  *(&v114 - 4) = (char *)v105;
  *(&v114 - 3) = (char *)v110;
  *(&v114 - 2) = (char *)v109;
  v131 = v101;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v131, v112, sub_100603C28, &v114 - 8, (char *)&type metadata for () + 8, v128);
  swift_bridgeObjectRelease();
  sub_10004BA30(v110, v109);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006012FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(a2, (uint64_t)v8, &qword_1011A8FA0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011A8FA0);
    v14 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  else
  {
    sub_1005FFE14(a3, v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    v15 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  KeyPath = swift_getKeyPath(&unk_100EC4AD8);
  __chkstk_darwin(KeyPath);
  *(&v19 - 2) = a1;
  *(&v19 - 1) = (uint64_t)v11;
  v20 = a1;
  v17 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v20, KeyPath, sub_10060661C, &v19 - 4, (char *)&type metadata for () + 8, v17);
  swift_release();
  return sub_10004FF60((uint64_t)v11, &qword_1011BD7F8);
}

_QWORD *sub_100601514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  void (*v51)(_QWORD **, _QWORD);
  uint64_t v52;
  void (*v53)(char *);
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  int v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  int v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v108;
  __n128 v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char v121;
  __n128 v122;
  int64_t v123;
  _QWORD *v124;
  _QWORD *result;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  int v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char v135;
  char *v136;
  uint64_t v137;
  unsigned int v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  int v150;
  char *v151;
  void (*v152)(char *, uint64_t, uint64_t);
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  char *v171;

  v1 = type metadata accessor for AudioVariant(0);
  v167 = *(_QWORD *)(v1 - 8);
  v168 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v166 = (char *)&v136 - v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v136 - v7;
  v147 = type metadata accessor for Song(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v141 = *(_QWORD *)(v142 - 8);
  v10 = __chkstk_darwin(v142);
  v140 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v139 = (char *)&v136 - v12;
  v137 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v149 = *(_QWORD *)(v137 - 8);
  v13 = __chkstk_darwin(v137);
  v144 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v162 = (char *)&v136 - v15;
  v16 = type metadata accessor for Track(0);
  v158 = *(_QWORD *)(v16 - 8);
  v159 = v16;
  v17 = __chkstk_darwin(v16);
  v154 = (char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v156 = (char *)&v136 - v20;
  v21 = __chkstk_darwin(v19);
  v148 = (char *)&v136 - v22;
  v23 = __chkstk_darwin(v21);
  v169 = (uint64_t)&v136 - v24;
  v25 = __chkstk_darwin(v23);
  v161 = (uint64_t)&v136 - v26;
  v27 = __chkstk_darwin(v25);
  v160 = (char *)&v136 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v136 - v29;
  v31 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  __chkstk_darwin(v31);
  v33 = (char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v35 = __chkstk_darwin(v34);
  v153 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v157 = v37;
  v152 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v37 + 2);
  v152((char *)&v136 - v38, v0, v34);
  v39 = (char *)_swiftEmptyArrayStorage;
  v171 = (char *)_swiftEmptyArrayStorage;
  v40 = sub_100606308((unint64_t *)&unk_1011B5730, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v34, v40);
  v41 = &v33[*(int *)(v31 + 36)];
  v42 = sub_100606308((unint64_t *)&qword_1011A9760, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v163 = v33;
  v164 = (uint64_t)v41;
  v43 = *(_QWORD **)v41;
  dispatch thunk of Collection.endIndex.getter(&v170, v34, v42);
  v155 = v4;
  if (v43 != v170)
  {
    v165 = v30;
    v136 = v8;
    v150 = enum case for Track.musicVideo(_:);
    v143 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
    v138 = enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:);
    v44 = v137;
    v45 = (uint64_t)v163;
    v46 = (_QWORD *)v164;
    v151 = (char *)v42;
    while (1)
    {
      v51 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v170, v46, v34, v42);
      v52 = v158;
      v47 = v159;
      v53 = *(void (**)(char *))(v158 + 16);
      v54 = v160;
      v53(v160);
      v51(&v170, 0);
      v55 = v153;
      v152(v153, v45, v34);
      dispatch thunk of Collection.formIndex(after:)(v46, v34, v42);
      (*((void (**)(char *, uint64_t))v157 + 1))(v55, v34);
      v56 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v49 = v165;
      v56(v165, v54, v47);
      v57 = v161;
      ((void (*)(uint64_t, char *, uint64_t))v53)(v161, v49, v47);
      v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v57, v47);
      v59 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v59(v57, v47);
      v48 = v169;
      ((void (*)(uint64_t, char *, uint64_t))v53)(v169, v49, v47);
      if (v58 != v150)
      {
        if (qword_10119B8B0 != -1)
          swift_once(&qword_10119B8B0, sub_1000E948C);
        v60 = v169;
        v61 = Player.state<A>(for:)(v169, v47, (uint64_t)&protocol witness table for Track);
        v62 = v162;
        (*(void (**)(_QWORD *))(*v61 + 256))(v61);
        v63 = swift_release(v61);
        v64 = v149;
        v65 = v144;
        (*(void (**)(char *, char *, uint64_t, __n128))(v149 + 16))(v144, v62, v44, v63);
        v66 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v65, v44);
        v46 = (_QWORD *)v164;
        if (v66 != v143)
        {
          v74 = *(void (**)(char *, uint64_t))(v64 + 8);
          v74(v65, v44);
          goto LABEL_13;
        }
        (*(void (**)(char *, uint64_t))(v64 + 96))(v65, v44);
        v67 = v141;
        v68 = v44;
        v69 = v139;
        v70 = v142;
        (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v139, v65, v142);
        v71 = v140;
        (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v140, v138, v70);
        v72 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v69, v71);
        v73 = *(void (**)(char *, uint64_t))(v67 + 8);
        v73(v71, v70);
        v73(v69, v70);
        v74 = *(void (**)(char *, uint64_t))(v149 + 8);
        if ((v72 & 1) == 0)
        {
          v44 = v68;
          v60 = v169;
LABEL_13:
          v42 = (uint64_t)v151;
          v74(v162, v44);
          v75 = v159;
          v59(v60, v159);
          v56(v148, v165, v75);
          v76 = v171;
          if ((swift_isUniquelyReferenced_nonNull_native(v171) & 1) == 0)
          {
            sub_10035C4CC(0, *((_QWORD *)v76 + 2) + 1, 1);
            v76 = v171;
          }
          v78 = *((_QWORD *)v76 + 2);
          v77 = *((_QWORD *)v76 + 3);
          if (v78 >= v77 >> 1)
          {
            sub_10035C4CC(v77 > 1, v78 + 1, 1);
            v76 = v171;
          }
          *((_QWORD *)v76 + 2) = v78 + 1;
          v56(&v76[((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80))+ *(_QWORD *)(v158 + 72) * v78], v148, v75);
          v171 = v76;
          goto LABEL_5;
        }
        v74(v162, v68);
        v47 = v159;
        v44 = v68;
        v48 = v169;
        v49 = v165;
      }
      v59(v48, v47);
      v59((uint64_t)v49, v47);
      v46 = (_QWORD *)v164;
      v42 = (uint64_t)v151;
LABEL_5:
      v50 = (_QWORD *)*v46;
      v45 = (uint64_t)v163;
      dispatch thunk of Collection.endIndex.getter(&v170, v34, v42);
      if (v50 == v170)
      {
        v39 = v171;
        v4 = v155;
        v8 = v136;
        break;
      }
    }
  }
  v79 = sub_10004FF60((uint64_t)v163, (uint64_t *)&unk_1011ACA90);
  v80 = static AudioVariant.allCases.getter(v79);
  v81 = sub_1006A12A4(v80);
  swift_bridgeObjectRelease(v80);
  v153 = (char *)*((_QWORD *)v39 + 2);
  if (v153)
  {
    v82 = v158;
    v151 = &v39[(*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80)];
    v150 = enum case for Track.song(_:);
    v149 = *(_QWORD *)(v158 + 72);
    v148 = *(char **)(v158 + 16);
    swift_bridgeObjectRetain();
    v144 = v39;
    v83 = swift_retain(v39);
    v84 = 0;
    v152 = (void (*)(char *, uint64_t, uint64_t))v81;
    v161 = v81;
    v86 = v167;
    v85 = v168;
    v87 = v159;
    v88 = v156;
    do
    {
      v157 = v84;
      v93 = (void (*)(char *, char *, uint64_t))v148;
      ((void (*)(char *, char *, uint64_t, __n128))v148)(v88, &v151[v149 * (_QWORD)v84], v87, v83);
      v94 = v154;
      v93(v154, v88, v87);
      v95 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v94, v87);
      if (v95 == v150)
      {
        (*(void (**)(char *, uint64_t))(v82 + 96))(v94, v87);
        v96 = v146;
        v97 = v145;
        v98 = v147;
        (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v145, v94, v147);
        v99 = swift_bridgeObjectRetain();
        v100 = Song.audioVariants.getter(v99);
        v101 = *(void (**)(char *, uint64_t))(v96 + 8);
        v87 = v159;
        v101(v97, v98);
        v102 = (char *)_swiftEmptyArrayStorage;
        if (v100)
          v102 = (char *)v100;
      }
      else
      {
        swift_bridgeObjectRetain();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v94, v87);
        v102 = (char *)_swiftEmptyArrayStorage;
      }
      v160 = v102;
      v103 = *((_QWORD *)v102 + 2);
      v164 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v104 = Set.init(minimumCapacity:)(v103, v85, v164);
      v163 = (char *)*((_QWORD *)v160 + 2);
      if (v163)
      {
        v105 = 0;
        v162 = &v160[(*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80)];
        v169 = *(_QWORD *)(v86 + 72);
        v106 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        do
        {
          v165 = v105;
          v106(v8, &v162[v169 * (_QWORD)v105], v85);
          v112 = *(_QWORD *)(v104 + 40);
          swift_bridgeObjectRetain();
          v113 = dispatch thunk of Hashable._rawHashValue(seed:)(v112, v85, v164);
          v114 = -1 << *(_BYTE *)(v104 + 32);
          v115 = v113 & ~v114;
          if (((*(_QWORD *)(v104 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8)) >> v115) & 1) != 0)
          {
            v116 = ~v114;
            while (1)
            {
              v117 = v168;
              v118 = v166;
              v106(v166, (char *)(*(_QWORD *)(v104 + 48) + v115 * v169), v168);
              v119 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
              v120 = v8;
              v121 = dispatch thunk of static Equatable.== infix(_:_:)(v118, v8, v117, v119);
              v110 = *(void (**)(char *, uint64_t))(v167 + 8);
              v110(v118, v117);
              if ((v121 & 1) != 0)
                break;
              v115 = (v115 + 1) & v116;
              v8 = v120;
              if (((*(_QWORD *)(v104 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8)) >> v115) & 1) == 0)
                goto LABEL_30;
            }
            v109 = swift_bridgeObjectRelease(v104);
            v85 = v168;
            v8 = v120;
          }
          else
          {
LABEL_30:
            swift_bridgeObjectRelease(v104);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v104);
            v108 = (uint64_t)v166;
            v85 = v168;
            v106(v166, v8, v168);
            v170 = (_QWORD *)v104;
            sub_10019B1D8(v108, v115, isUniquelyReferenced_nonNull_native);
            v104 = (uint64_t)v170;
            v109 = swift_bridgeObjectRelease(0x8000000000000000);
            v110 = *(void (**)(char *, uint64_t))(v167 + 8);
          }
          v111 = v165;
          ((void (*)(char *, uint64_t, __n128))v110)(v8, v85, v109);
          v105 = v111 + 1;
        }
        while (v105 != v163);
        swift_bridgeObjectRelease(v160);
        v86 = v167;
        v87 = v159;
      }
      else
      {
        swift_bridgeObjectRelease(v160);
      }
      v89 = v157 + 1;
      v90 = v161;
      v91 = sub_100603C8C(v104, v161);
      v92 = swift_bridgeObjectRelease(v104);
      v82 = v158;
      v88 = v156;
      (*(void (**)(char *, uint64_t, __n128))(v158 + 8))(v156, v87, v92);
      v83 = swift_bridgeObjectRelease(v90);
      v84 = v89;
      v161 = v91;
      v4 = v155;
    }
    while (v89 != v153);
    v122 = swift_bridgeObjectRelease(v152);
    swift_release_n(v144, 2, v122);
    v81 = v91;
    v123 = *(_QWORD *)(v91 + 16);
    if (v123)
      goto LABEL_40;
LABEL_50:
    swift_bridgeObjectRelease(v81);
    return _swiftEmptyArrayStorage;
  }
  swift_release(v39);
  v86 = v167;
  v85 = v168;
  v123 = *(_QWORD *)(v81 + 16);
  if (!v123)
    goto LABEL_50;
LABEL_40:
  v170 = _swiftEmptyArrayStorage;
  sub_10035C4A0(0, v123, 0);
  v124 = v170;
  result = (_QWORD *)sub_100837CE0(v81);
  v126 = (uint64_t)result;
  v128 = v127;
  v130 = v129 & 1;
  v168 = v81 + 56;
  v152 = (void (*)(char *, uint64_t, uint64_t))v81;
  while ((v126 & 0x8000000000000000) == 0 && v126 < 1 << *(_BYTE *)(v81 + 32))
  {
    if (((*(_QWORD *)(v168 + (((unint64_t)v126 >> 3) & 0xFFFFFFFFFFFFF8)) >> v126) & 1) == 0)
      goto LABEL_53;
    if (*(_DWORD *)(v81 + 36) != (_DWORD)v128)
      goto LABEL_54;
    LODWORD(v169) = v130;
    v131 = *(_QWORD *)(v86 + 72);
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v4, *(_QWORD *)(v81 + 48) + v131 * v126, v85);
    v170 = v124;
    v133 = v124[2];
    v132 = v124[3];
    if (v133 >= v132 >> 1)
    {
      sub_10035C4A0(v132 > 1, v133 + 1, 1);
      v124 = v170;
    }
    v124[2] = v133 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))((unint64_t)v124+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ v133 * v131, v4, v85);
    v81 = (uint64_t)v152;
    result = (_QWORD *)sub_100837D84(v126, v128, v169 & 1, v152);
    v126 = (uint64_t)result;
    v128 = v134;
    v130 = v135 & 1;
    if (!--v123)
    {
      sub_10016AE14((uint64_t)result, v134, v130);
      swift_bridgeObjectRelease(v81);
      return v124;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1006022FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t countAndFlagsBits;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;

  v1 = sub_100007E8C(&qword_1011A58C8);
  v2 = __chkstk_darwin(v1);
  v51 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - v4;
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v46 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v46 - v15;
  v17 = Playlist.standardDescription.getter(v14);
  v19 = v18;
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21 = v20(v16, v0, v6);
  if (!v19)
  {
    v50 = v10;
    countAndFlagsBits = Playlist.shortDescription.getter(v21);
    v24 = v23;
    v25 = v20(v13, (uint64_t)v16, v6);
    if (v24)
    {
      v26 = *(void (**)(char *, uint64_t))(v7 + 8);
      v26(v13, v6);
LABEL_16:
      v26(v16, v6);
      return countAndFlagsBits;
    }
    v27 = (uint64_t)v5;
    Playlist.editorialNotes.getter(v25);
    v28 = type metadata accessor for EditorialNotes(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    v31 = v30(v27, 1, v28);
    v48 = v30;
    v49 = v28;
    v47 = v29;
    if (v31 == 1)
    {
      sub_10004FF60(v27, &qword_1011A58C8);
    }
    else
    {
      EditorialNotes.standard.getter();
      v33 = v32;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      if (v33)
      {
        v34 = String.trim()();
        countAndFlagsBits = v34._countAndFlagsBits;
        v35 = swift_bridgeObjectRelease(v33);
        v36 = v50;
        v37 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v20)(v50, v13, v6, v35);
        if (v34._object)
          goto LABEL_15;
        goto LABEL_11;
      }
    }
    v36 = v50;
    v37 = v20(v50, (uint64_t)v13, v6);
LABEL_11:
    v39 = (uint64_t)v51;
    Playlist.editorialNotes.getter(v37);
    v40 = v49;
    if (v48(v39, 1, v49) == 1)
    {
      v41 = *(void (**)(char *, uint64_t))(v7 + 8);
      v41(v36, v6);
      v41(v13, v6);
      v41(v16, v6);
      sub_10004FF60(v39, &qword_1011A58C8);
      return 0;
    }
    EditorialNotes.short.getter();
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v39, v40);
    if (!v43)
    {
      v44 = *(void (**)(char *, uint64_t))(v7 + 8);
      v44(v36, v6);
      v44(v13, v6);
      v44(v16, v6);
      return 0;
    }
    countAndFlagsBits = String.trim()()._countAndFlagsBits;
    v38 = swift_bridgeObjectRelease(v43);
LABEL_15:
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    ((void (*)(char *, uint64_t, __n128))v26)(v36, v6, v38);
    v26(v13, v6);
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  return v17;
}

uint64_t sub_100602650(unsigned __int8 a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  __n128 v108;
  char *v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  char v168;
  _UNKNOWN **v169;
  uint64_t v170;
  Swift::Int v171;
  uint64_t v172;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  v197 = a6;
  v186 = a5;
  v199 = a4;
  v205 = a3;
  v8 = a1;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v9);
  v189 = (char *)&v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for Date(0);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v178 = (char *)&v174 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v12);
  v190 = (char *)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v14);
  v194 = (uint64_t)&v174 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v177 = (char *)&v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v176 = (char *)&v174 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100007E8C(&qword_1011BD800);
  __chkstk_darwin(v193);
  v204 = (uint64_t)&v174 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  v22 = __chkstk_darwin(v21);
  v185 = (uint64_t)&v174 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v182 = (uint64_t)&v174 - v25;
  __chkstk_darwin(v24);
  v198 = (uint64_t)&v174 - v26;
  v27 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v174 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011A30F0);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v174 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v31);
  v184 = (uint64_t)&v174 - v35;
  v36 = __chkstk_darwin(v34);
  v195 = (uint64_t)&v174 - v37;
  v38 = __chkstk_darwin(v36);
  v179 = (uint64_t)&v174 - v39;
  v40 = __chkstk_darwin(v38);
  v180 = (uint64_t)&v174 - v41;
  v42 = __chkstk_darwin(v40);
  v181 = (uint64_t)&v174 - v43;
  v44 = __chkstk_darwin(v42);
  v183 = (uint64_t)&v174 - v45;
  v46 = __chkstk_darwin(v44);
  v48 = (char *)&v174 - v47;
  v49 = __chkstk_darwin(v46);
  v51 = (char *)&v174 - v50;
  __chkstk_darwin(v49);
  v53 = (char *)&v174 - v52;
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v55 = __chkstk_darwin(v54);
  v207 = (uint64_t)&v174 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v208 = (uint64_t)&v174 - v57;
  v58 = type metadata accessor for ArtworkImage.Info(0);
  v59 = __chkstk_darwin(v58);
  v60 = __chkstk_darwin(v59);
  v201 = a2;
  v196 = v33;
  v200 = (uint64_t)&v174 - v61;
  v192 = v60;
  v175 = v62;
  v191 = v63;
  if (v8 != 3)
  {
    KeyPath = swift_getKeyPath(&unk_100EC4B50);
    v206 = &v174;
    __chkstk_darwin(KeyPath);
    *(&v174 - 2) = a2;
    *((_BYTE *)&v174 - 8) = a1;
    v210 = a2;
    v65 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
    v66 = v203;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v210, KeyPath, sub_1002A7958, &v174 - 4, (char *)&type metadata for () + 8, v65);
    v203 = v66;
    swift_release(KeyPath);
  }
  sub_10004A160(v205, (uint64_t)v53, &qword_1011A30F0);
  v67 = type metadata accessor for Playlist(0);
  v68 = *(_QWORD *)(v67 - 8);
  v206 = *(uint64_t **)(v68 + 48);
  v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v206)(v53, 1, v67);
  v202 = v68;
  if (v69 == 1)
  {
    sub_10004FF60((uint64_t)v53, &qword_1011A30F0);
    v70 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v208, 1, 1, v70);
  }
  else
  {
    Playlist.artworkViewModel.getter(v208);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v67);
  }
  sub_10004A160(v205, (uint64_t)v51, &qword_1011A30F0);
  v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v206)(v51, 1, v67);
  if ((_DWORD)v71 == 1)
  {
    sub_10004FF60((uint64_t)v51, &qword_1011A30F0);
    v72 = type metadata accessor for Playlist.Variant(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v29, 1, 1, v72);
    v73 = v202;
  }
  else
  {
    Playlist.variant.getter(v71);
    v73 = v202;
    (*(void (**)(char *, uint64_t))(v202 + 8))(v51, v67);
  }
  v74 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v29, 0, 10, v74);
  sub_10004A160(v205, (uint64_t)v48, &qword_1011A30F0);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v206)(v48, 1, v67) == 1)
  {
    v75 = (uint64_t)v29;
    v76 = &qword_1011A30F0;
LABEL_13:
    sub_10004FF60((uint64_t)v48, v76);
    v81 = 0x3FF0000000000000;
    goto LABEL_16;
  }
  v77 = v207;
  Playlist.artworkViewModel.getter(v207);
  v78 = v48;
  v48 = (char *)v77;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v78, v67);
  v79 = type metadata accessor for ArtworkImage.ViewModel(0);
  v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v77, 1, v79);
  v75 = (uint64_t)v29;
  if (v80 == 1)
  {
    v76 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_13;
  }
  v81 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
  v83 = v82;
  sub_10005B748((uint64_t)v48, type metadata accessor for ArtworkImage.ViewModel);
  if ((v83 & 1) != 0)
    v81 = 0x3FF0000000000000;
LABEL_16:
  v84 = Corner.large.unsafeMutableAddressor();
  v85 = *v84;
  v86 = v84[1];
  v87 = *((_BYTE *)v84 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)&v210);
  v88 = v200;
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v208, v75, v81, 0, (uint64_t)&v210, v85, v86, v87, v200);
  v89 = swift_getKeyPath(&unk_100EC4A38);
  v90 = v201;
  v91 = v201 + OBJC_IVAR____TtCV5Music6Header13Configuration___observationRegistrar;
  v209 = v201;
  v207 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  v208 = v91;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v209, v89, v207);
  swift_release(v89);
  v92 = v90 + OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo;
  swift_beginAccess(v90 + OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo, &v209, 0, 0);
  v93 = v198;
  sub_100603B1C(v88, v198);
  v94 = v191;
  v95 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v191 + 56);
  v96 = v192;
  v95(v93, 0, 1, v192);
  v97 = v204;
  v98 = v204 + *(int *)(v193 + 48);
  sub_10004A160(v92, v204, (uint64_t *)&unk_1011C6790);
  sub_10004A160(v93, v98, (uint64_t *)&unk_1011C6790);
  v99 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  if (v99(v97, 1, v96) == 1)
  {
    sub_10004FF60(v198, (uint64_t *)&unk_1011C6790);
    if (v99(v98, 1, v96) == 1)
      goto LABEL_23;
    goto LABEL_21;
  }
  v100 = v182;
  sub_10004A160(v204, v182, (uint64_t *)&unk_1011C6790);
  if (v99(v98, 1, v96) == 1)
  {
    sub_10004FF60(v198, (uint64_t *)&unk_1011C6790);
    sub_10005B748(v100, type metadata accessor for ArtworkImage.Info);
LABEL_21:
    sub_10004FF60(v204, &qword_1011BD800);
LABEL_22:
    v101 = v185;
    sub_100603B1C(v200, v185);
    v95(v101, 0, 1, v96);
    v102 = swift_getKeyPath(&unk_100EC4A38);
    __chkstk_darwin(v102);
    v103 = v201;
    *(&v174 - 2) = v201;
    *(&v174 - 1) = v101;
    v211 = v103;
    v104 = v203;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v102, sub_100603B60, &v174 - 4, (char *)&type metadata for () + 8, v207);
    v203 = v104;
    swift_release(v102);
    v204 = v101;
LABEL_23:
    sub_10004FF60(v204, (uint64_t *)&unk_1011C6790);
    goto LABEL_24;
  }
  v113 = v175;
  sub_1002834D4(v98, v175);
  v114 = static ArtworkImage.Info.__derived_struct_equals(_:_:)(v100, v113);
  sub_10005B748(v113, type metadata accessor for ArtworkImage.Info);
  sub_10004FF60(v198, (uint64_t *)&unk_1011C6790);
  sub_10005B748(v100, type metadata accessor for ArtworkImage.Info);
  sub_10004FF60(v204, (uint64_t *)&unk_1011C6790);
  if ((v114 & 1) == 0)
    goto LABEL_22;
LABEL_24:
  v204 = v67;
  if ((v199 & 1) != 0)
  {
    v105 = 0;
    v106 = 0xE000000000000000;
  }
  else
  {
    v107 = v183;
    sub_10004A160(v205, v183, &qword_1011A30F0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v107, 1, v67) == 1)
    {
      sub_10004FF60(v107, &qword_1011A30F0);
      v109 = v176;
      v110 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E40A50);
      v111 = v177;
      static Locale.current.getter(v110);
      v105 = String.init(localized:table:bundle:locale:comment:)(v109, 0, 0, 0, v111, 0, 0, 256);
      v106 = v112;
    }
    else
    {
      v105 = Playlist.name.getter(v108);
      v106 = v115;
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v107, v67);
    }
  }
  v116 = v186;
  v117 = v203;
  v118 = swift_getKeyPath(&unk_100EC4A60);
  __chkstk_darwin(v118);
  v119 = v201;
  *(&v174 - 4) = v201;
  *(&v174 - 3) = v105;
  *(&v174 - 2) = v106;
  v211 = v119;
  v120 = v119;
  v121 = v207;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v118, sub_100603B90, &v174 - 6, (char *)&type metadata for () + 8, v207);
  swift_release(v118);
  swift_bridgeObjectRelease(v106);
  v122 = v194;
  sub_10004A160(v116, v194, &qword_1011A19A0);
  v123 = swift_getKeyPath(&unk_100EC4A88);
  __chkstk_darwin(v123);
  *(&v174 - 2) = v120;
  *(&v174 - 1) = v122;
  v211 = v120;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v123, sub_100603BAC, &v174 - 4, (char *)&type metadata for () + 8, v121);
  swift_release(v123);
  sub_10004FF60(v122, &qword_1011A19A0);
  v203 = v117;
  if (v197)
  {
    v124 = 0;
    v125 = 0;
    v126 = v197;
    v127 = v205;
    goto LABEL_44;
  }
  v128 = v205;
  v129 = v181;
  sub_10004A160(v205, v181, &qword_1011A30F0);
  v130 = v204;
  v131 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v206)(v129, 1, v204);
  if ((_DWORD)v131 == 1)
  {
    sub_10004FF60(v129, &qword_1011A30F0);
    v127 = v128;
    v132 = v128;
    v133 = v180;
    sub_10004A160(v132, v180, &qword_1011A30F0);
  }
  else
  {
    v126 = Playlist.curatorName.getter(v131);
    v124 = v134;
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v129, v130);
    v127 = v128;
    v135 = v128;
    v133 = v180;
    sub_10004A160(v135, v180, &qword_1011A30F0);
    if (v124)
    {
      sub_10004FF60(v133, &qword_1011A30F0);
      v125 = 1;
      goto LABEL_44;
    }
  }
  v136 = v179;
  sub_10004A160(v133, v179, &qword_1011A30F0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v136, 1, v130) == 1)
  {
    sub_10004FF60(v133, &qword_1011A30F0);
    sub_10004FF60(v136, &qword_1011A30F0);
  }
  else
  {
    v126 = sub_10031E9D4();
    v124 = v137;
    sub_10004FF60(v133, &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v136, v130);
    if (v124)
    {
LABEL_42:
      v125 = 1;
      goto LABEL_44;
    }
  }
  if ((v199 & 1) != 0)
  {
    v126 = 0xD000000000000011;
    v124 = 0x8000000100E40A70;
    goto LABEL_42;
  }
  v126 = 0;
  v124 = 0;
  v125 = -1;
LABEL_44:
  v138 = swift_getKeyPath(&unk_100EC4AB0);
  __chkstk_darwin(v138);
  *(&v174 - 4) = v120;
  *(&v174 - 3) = v126;
  *(&v174 - 2) = v124;
  *((_BYTE *)&v174 - 8) = v125;
  v211 = v120;
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v138, sub_100603BDC, &v174 - 6, (char *)&type metadata for () + 8, v207);
  sub_1005FFDF0(v126, v124, v125);
  swift_release(v138);
  v139 = v195;
  sub_10004A160(v127, v195, &qword_1011A30F0);
  v140 = v204;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v139, 1, v204) == 1)
  {
    sub_10004FF60(v139, &qword_1011A30F0);
    v141 = (uint64_t)v189;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v187 + 56))(v189, 1, 1, v188);
  }
  else
  {
    v141 = (uint64_t)v189;
    Playlist.lastModifiedDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v139, v140);
    v142 = v187;
    v143 = v188;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48))(v141, 1, v188) != 1)
    {
      v149 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 32);
      v150 = v178;
      v149(v178, v141, v143);
      v146 = (uint64_t)v190;
      v149(v190, (uint64_t)v150, v143);
      v151 = _s8MetadataV13ConfigurationOMa(0);
      swift_storeEnumTagMultiPayload(v146, v151, 1);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v146, 0, 1, v151);
      v145 = v199;
      goto LABEL_51;
    }
  }
  v144 = sub_10004FF60(v141, (uint64_t *)&unk_1011A30A0);
  v145 = v199;
  v146 = (uint64_t)v190;
  if ((v199 & 1) != 0)
  {
    static Date.now.getter(v144);
    v147 = _s8MetadataV13ConfigurationOMa(0);
    swift_storeEnumTagMultiPayload(v146, v147, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v146, 0, 1, v147);
  }
  else
  {
    v148 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v146, 1, 1, v148);
  }
LABEL_51:
  v152 = swift_getKeyPath(&unk_100EC4AD8);
  __chkstk_darwin(v152);
  *(&v174 - 2) = v120;
  *(&v174 - 1) = v146;
  v211 = v120;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v152, sub_100603BF8, &v174 - 4, (char *)&type metadata for () + 8, v207);
  swift_release(v152);
  sub_10004FF60(v146, &qword_1011BD7F8);
  if ((v145 & 1) == 0)
  {
    v153 = v184;
    sub_10004A160(v127, v184, &qword_1011A30F0);
    v154 = v204;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v153, 1, v204) == 1)
    {
      sub_10004FF60(v153, &qword_1011A30F0);
    }
    else
    {
      v155 = sub_1006022FC();
      v157 = v156;
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v153, v154);
      if (v157)
        goto LABEL_57;
    }
    swift_bridgeObjectRelease(0);
  }
  v155 = 0;
  v157 = 0xE000000000000000;
LABEL_57:
  v158 = swift_getKeyPath(&unk_100EC4B00);
  v211 = v120;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v211, v158, v207);
  swift_release(v158);
  v159 = (uint64_t *)(v120 + OBJC_IVAR____TtCV5Music6Header13Configuration__description);
  v160 = *(_QWORD *)(v120 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8);
  if (v160)
  {
    v162 = v159[2];
    v161 = v159[3];
    v163 = *v159;
    sub_100445F28(*v159, *(_QWORD *)(v120 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8), v162, v161);
    swift_bridgeObjectRetain();
    sub_100048AAC(v162, v161);
    swift_bridgeObjectRelease(v160);
    sub_10004BA30(v162, v161);
    sub_100048AAC(v162, v161);
    sub_10044603C(v163, v160, v162, v161);
  }
  else
  {
    v162 = 0;
    v161 = 0;
  }
  v164 = swift_getKeyPath(&unk_100EC4B00);
  __chkstk_darwin(v164);
  *(&v174 - 6) = v120;
  *(&v174 - 5) = v155;
  *(&v174 - 4) = v157;
  *(&v174 - 3) = v162;
  *(&v174 - 2) = v161;
  v211 = v120;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v164, sub_100603C28, &v174 - 8, (char *)&type metadata for () + 8, v207);
  swift_bridgeObjectRelease(v157);
  sub_10004BA30(v162, v161);
  swift_release(v164);
  v165 = (uint64_t)v196;
  sub_10004A160(v205, (uint64_t)v196, &qword_1011A30F0);
  v166 = v204;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v165, 1, v204) == 1)
  {
    sub_10004FF60(v165, &qword_1011A30F0);
  }
  else
  {
    v168 = Playlist.supportsSing.getter(v167);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v165, v166);
    if ((v168 & 1) != 0)
    {
      v169 = &off_1010ACCF0;
      goto LABEL_65;
    }
  }
  v169 = &off_1010ACD18;
LABEL_65:
  v170 = v200;
  v171 = sub_100047028((uint64_t)v169);
  v172 = swift_getKeyPath(&unk_100EC4B28);
  __chkstk_darwin(v172);
  *(&v174 - 2) = v120;
  *(&v174 - 1) = v171;
  v211 = v120;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v211, v172, sub_100604458, &v174 - 4, (char *)&type metadata for () + 8, v207);
  swift_release(v172);
  swift_bridgeObjectRelease(v171);
  return sub_10005B748(v170, type metadata accessor for ArtworkImage.Info);
}

uint64_t sub_100603B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100603B60()
{
  uint64_t v0;

  return sub_1005FF06C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo, (uint64_t *)&unk_1011C6790);
}

uint64_t sub_100603B90()
{
  return sub_10060634C();
}

uint64_t sub_100603BAC()
{
  uint64_t v0;

  return sub_1005FF06C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus, &qword_1011A19A0);
}

uint64_t sub_100603BDC()
{
  return sub_100606394();
}

uint64_t sub_100603BF8()
{
  uint64_t v0;

  return sub_1005FF06C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtCV5Music6Header13Configuration__metadata, &qword_1011BD7F8);
}

uint64_t sub_100603C28()
{
  return sub_1006063F8();
}

uint64_t sub_100603C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10060654C();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100603C8C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_100603E0C((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a2, v3);
    swift_release(a2);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_100603E0C((unint64_t *)v10, v7, a2, v3);
    swift_release(a2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

uint64_t sub_100603E0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  unint64_t j;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(unint64_t, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t i;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v68 = a2;
  v70 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v77 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v68 - v11;
  v13 = __chkstk_darwin(v10);
  v76 = (char *)&v68 - v14;
  result = __chkstk_darwin(v13);
  v72 = (unint64_t)&v68 - v16;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(a4 + 16);
  v78 = a3;
  v79 = a4;
  if (v18 >= v17)
  {
    v73 = 0;
    v43 = 0;
    v44 = *(_QWORD *)(a3 + 56);
    v69 = a3 + 56;
    v45 = 1 << *(_BYTE *)(a3 + 32);
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v47 = v46 & v44;
    v71 = (unint64_t)(v45 + 63) >> 6;
    v76 = (char *)(a4 + 56);
    if (v47)
      goto LABEL_37;
LABEL_38:
    v49 = v43 + 1;
    if (!__OFADD__(v43, 1))
    {
      if (v49 < v71)
      {
        v50 = *(_QWORD *)(v69 + 8 * v49);
        v51 = v43 + 1;
        if (!v50)
        {
          v51 = v49 + 1;
          if (v49 + 1 >= v71)
            goto LABEL_58;
          v50 = *(_QWORD *)(v69 + 8 * v51);
          if (!v50)
          {
            v52 = v49 + 2;
            if (v52 >= v71)
              goto LABEL_58;
            v50 = *(_QWORD *)(v69 + 8 * v52);
            if (!v50)
            {
              while (1)
              {
                v51 = v52 + 1;
                if (__OFADD__(v52, 1))
                  goto LABEL_64;
                if (v51 >= v71)
                  goto LABEL_58;
                v50 = *(_QWORD *)(v69 + 8 * v51);
                ++v52;
                if (v50)
                  goto LABEL_49;
              }
            }
            v51 = v52;
          }
        }
LABEL_49:
        v74 = (v50 - 1) & v50;
        v75 = v51;
        for (i = __clz(__rbit64(v50)) + (v51 << 6); ; i = __clz(__rbit64(v47)) | (v43 << 6))
        {
          v53 = *(_QWORD *)(a3 + 48);
          v54 = *(_QWORD *)(v7 + 72);
          v72 = i;
          v55 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
          v55(v77, v53 + v54 * i, v6);
          v56 = *(_QWORD *)(v79 + 40);
          v57 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
          v58 = dispatch thunk of Hashable._rawHashValue(seed:)(v56, v6, v57);
          v59 = v79;
          v60 = -1 << *(_BYTE *)(v79 + 32);
          v61 = v58 & ~v60;
          if (((*(_QWORD *)&v76[(v61 >> 3) & 0xFFFFFFFFFFFFF8] >> v61) & 1) != 0)
          {
            v62 = ~v60;
            while (1)
            {
              v55(v12, *(_QWORD *)(v59 + 48) + v61 * v54, v6);
              v63 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
              v64 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v77, v6, v63);
              v65 = *(void (**)(char *, uint64_t))(v7 + 8);
              v65(v12, v6);
              if ((v64 & 1) != 0)
                break;
              v61 = (v61 + 1) & v62;
              v59 = v79;
              if (((*(_QWORD *)&v76[(v61 >> 3) & 0xFFFFFFFFFFFFF8] >> v61) & 1) == 0)
                goto LABEL_56;
            }
            result = ((uint64_t (*)(char *, uint64_t))v65)(v77, v6);
            *(unint64_t *)((char *)v70 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
            v47 = v74;
            v24 = __OFADD__(v73++, 1);
            a3 = v78;
            v43 = v75;
            if (v24)
              goto LABEL_63;
            if (!v74)
              goto LABEL_38;
          }
          else
          {
            v65 = *(void (**)(char *, uint64_t))(v7 + 8);
LABEL_56:
            result = ((uint64_t (*)(char *, uint64_t))v65)(v77, v6);
            a3 = v78;
            v47 = v74;
            v43 = v75;
            if (!v74)
              goto LABEL_38;
          }
LABEL_37:
          v74 = (v47 - 1) & v47;
          v75 = v43;
        }
      }
      goto LABEL_58;
    }
  }
  else
  {
    v73 = 0;
    v19 = 0;
    v20 = *(_QWORD *)(a4 + 56);
    v69 = a4 + 56;
    v21 = 1 << *(_BYTE *)(a4 + 32);
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v23 = v22 & v20;
    v71 = (unint64_t)(v21 + 63) >> 6;
    v77 = (char *)(a3 + 56);
    if (v23)
      goto LABEL_9;
LABEL_10:
    v26 = v19 + 1;
    if (!__OFADD__(v19, 1))
    {
      if (v26 < v71)
      {
        v27 = *(_QWORD *)(v69 + 8 * v26);
        v28 = v19 + 1;
        if (v27)
          goto LABEL_21;
        v28 = v19 + 2;
        if (v19 + 2 >= v71)
          goto LABEL_58;
        v27 = *(_QWORD *)(v69 + 8 * v28);
        if (v27)
        {
LABEL_21:
          v74 = (v27 - 1) & v27;
          v75 = v28;
          for (j = __clz(__rbit64(v27)) + (v28 << 6); ; j = __clz(__rbit64(v23)) | (v19 << 6))
          {
            v30 = *(_QWORD *)(a4 + 48);
            v31 = *(_QWORD *)(v7 + 72);
            v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
            v33 = v72;
            v32(v72, v30 + v31 * j, v6);
            (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v76, v33, v6);
            v34 = *(_QWORD *)(a3 + 40);
            v35 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
            v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v6, v35);
            v37 = -1 << *(_BYTE *)(a3 + 32);
            v38 = v36 & ~v37;
            if (((*(_QWORD *)&v77[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) != 0)
            {
              v39 = ~v37;
              while (1)
              {
                v32((unint64_t)v12, *(_QWORD *)(v78 + 48) + v38 * v31, v6);
                v40 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
                v41 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v76, v6, v40);
                v42 = *(void (**)(char *, uint64_t))(v7 + 8);
                v42(v12, v6);
                if ((v41 & 1) != 0)
                  break;
                v38 = (v38 + 1) & v39;
                if (((*(_QWORD *)&v77[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) == 0)
                  goto LABEL_28;
              }
              result = ((uint64_t (*)(char *, uint64_t))v42)(v76, v6);
              *(unint64_t *)((char *)v70 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
              v23 = v74;
              v24 = __OFADD__(v73++, 1);
              a3 = v78;
              a4 = v79;
              v19 = v75;
              if (v24)
                goto LABEL_61;
              if (!v74)
                goto LABEL_10;
            }
            else
            {
              v42 = *(void (**)(char *, uint64_t))(v7 + 8);
LABEL_28:
              result = ((uint64_t (*)(char *, uint64_t))v42)(v76, v6);
              a3 = v78;
              a4 = v79;
              v23 = v74;
              v19 = v75;
              if (!v74)
                goto LABEL_10;
            }
LABEL_9:
            v74 = (v23 - 1) & v23;
            v75 = v19;
          }
        }
        v29 = v19 + 3;
        if (v19 + 3 < v71)
        {
          v27 = *(_QWORD *)(v69 + 8 * v29);
          if (v27)
          {
            v28 = v19 + 3;
            goto LABEL_21;
          }
          while (1)
          {
            v28 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_62;
            if (v28 >= v71)
              break;
            v27 = *(_QWORD *)(v69 + 8 * v28);
            ++v29;
            if (v27)
              goto LABEL_21;
          }
        }
      }
LABEL_58:
      v66 = v68;
      v67 = v73;
      swift_retain(a3);
      return sub_1001A57C8(v70, v66, v67, a3);
    }
    __break(1u);
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_100604458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents) = v1;
  swift_bridgeObjectRetain(v1);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1006044A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[16];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v22 = v21;
  v82 = a8;
  v91 = a7;
  v76 = a6;
  v75 = a5;
  v74 = a4;
  v92 = a3;
  v93 = a2;
  v88 = a20;
  v89 = a21;
  v84 = a16;
  v85 = a15;
  v86 = a18;
  v87 = a19;
  v83 = a17;
  v81 = a14;
  v90 = a13;
  v79 = a12;
  v80 = a11;
  v78 = a10;
  v77 = a9;
  v24 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v24);
  v73 = (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v26);
  v71 = (uint64_t)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v28);
  v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v31);
  v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo;
  v35 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork;
  v37 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus;
  v39 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v40 = v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution;
  *(_QWORD *)v40 = 0;
  *(_QWORD *)(v40 + 8) = 0;
  *(_BYTE *)(v40 + 16) = -1;
  v41 = v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__metadata;
  v42 = _s8MetadataV13ConfigurationOMa(0);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v44 = (uint64_t *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__description);
  *(_OWORD *)v44 = 0u;
  *((_OWORD *)v44 + 1) = 0u;
  v45 = (_QWORD *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider);
  v70 = (uint64_t *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider);
  *v45 = 0;
  v45[1] = 0;
  v46 = v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics;
  *(_QWORD *)v46 = 0;
  *(_QWORD *)(v46 + 8) = 0;
  *(_QWORD *)(v46 + 16) = 0;
  *(_QWORD *)(v46 + 24) = 0x20000;
  *(_QWORD *)(v46 + 40) = 0;
  *(_QWORD *)(v46 + 48) = 0;
  *(_QWORD *)(v46 + 32) = 0;
  *(_BYTE *)(v46 + 56) = 0;
  *(_BYTE *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__shouldIncludeFloatingArtwork) = 0;
  *(_BYTE *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__hidePlaybackControls) = 0;
  v72 = v22 + OBJC_IVAR____TtCV5Music6Header13Configuration___observationRegistrar;
  ObservationRegistrar.init()(v43);
  *(_BYTE *)(v22 + 16) = a1;
  sub_10004A160(v93, (uint64_t)v33, (uint64_t *)&unk_1011C6790);
  sub_10004FF60(v34, (uint64_t *)&unk_1011C6790);
  sub_100065228((uint64_t)v33, v34, (uint64_t *)&unk_1011C6790);
  sub_10004A160(v92, (uint64_t)v30, &qword_1011A1440);
  sub_10004FF60(v36, &qword_1011A1440);
  sub_100065228((uint64_t)v30, v36, &qword_1011A1440);
  *(_QWORD *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__videoArtworks) = v74;
  v47 = (_QWORD *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__title);
  v48 = v76;
  *v47 = v75;
  v47[1] = v48;
  v49 = v71;
  sub_10004A160(v91, v71, &qword_1011A19A0);
  sub_10004FF60(v38, &qword_1011A19A0);
  sub_100065228(v49, v38, &qword_1011A19A0);
  sub_1005FFDF0(*(_QWORD *)v40, *(_QWORD *)(v40 + 8), *(_BYTE *)(v40 + 16));
  v50 = v77;
  *(_QWORD *)v40 = v82;
  *(_QWORD *)(v40 + 8) = v50;
  *(_BYTE *)(v40 + 16) = v78;
  v51 = (_QWORD *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__attributionAction);
  v52 = v79;
  *v51 = v80;
  v51[1] = v52;
  v53 = v73;
  sub_10004A160(v90, v73, &qword_1011BD7F8);
  swift_retain(v52);
  sub_10004FF60(v41, &qword_1011BD7F8);
  sub_100065228(v53, v41, &qword_1011BD7F8);
  v54 = *v44;
  v55 = v44[1];
  v56 = v44[2];
  v57 = v44[3];
  v58 = v81;
  v60 = v84;
  v59 = v85;
  v61 = v83;
  sub_100445F28(v81, v85, v84, v83);
  sub_10044603C(v54, v55, v56, v57);
  *v44 = v58;
  v44[1] = v59;
  v44[2] = v60;
  v44[3] = v61;
  v62 = *v70;
  v63 = v70[1];
  v64 = v70;
  v66 = v86;
  v65 = v87;
  sub_100048AAC(v86, v87);
  sub_10004BA30(v62, v63);
  *v64 = v66;
  v64[1] = v65;
  *(_QWORD *)(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents) = v88;
  KeyPath = swift_getKeyPath(&unk_100EC4B78);
  v95 = v22;
  v96 = v89;
  v97 = v22;
  v68 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v97, KeyPath, sub_100606274, v94, (char *)&type metadata for () + 8, v68);
  swift_release(KeyPath);
  sub_10004FF60(v90, &qword_1011BD7F8);
  sub_10004FF60(v91, &qword_1011A19A0);
  sub_10004FF60(v92, &qword_1011A1440);
  sub_10004FF60(v93, (uint64_t *)&unk_1011C6790);
  return v22;
}

uint64_t sub_100604A5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[56];

  v115 = a5;
  v116 = a8;
  v111 = a3;
  v112 = a7;
  v114 = a6;
  v113 = a2;
  v123 = a1;
  v11 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v11);
  v105 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v13);
  v121 = (uint64_t *)((char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v15);
  v120 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v103 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v22);
  v119 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011A8FA0);
  v28 = __chkstk_darwin(v27);
  v109 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v110 = (unint64_t)&v102 - v31;
  v32 = __chkstk_darwin(v30);
  v108 = (uint64_t)&v102 - v33;
  v34 = __chkstk_darwin(v32);
  v107 = (uint64_t)&v102 - v35;
  v36 = __chkstk_darwin(v34);
  v106 = (uint64_t)&v102 - v37;
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v102 - v39;
  v41 = __chkstk_darwin(v38);
  v43 = (char *)&v102 - v42;
  __chkstk_darwin(v41);
  v45 = (char *)&v102 - v44;
  v46 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v46);
  v48 = (char *)&v102 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v49);
  v122 = (uint64_t)&v102 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v45, &qword_1011A8FA0);
  v51 = type metadata accessor for Album(0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v45, 1, v51);
  v117 = a4;
  v118 = v52;
  v104 = v19;
  if (v54 == 1)
  {
    sub_10004FF60((uint64_t)v45, &qword_1011A8FA0);
    v55 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v48, 1, 1, v55);
  }
  else
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v51, (uint64_t)&protocol witness table for Album, v48);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v51);
  }
  v56 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v26, 1, 10, v56);
  v57 = Corner.large.unsafeMutableAddressor();
  v58 = *v57;
  v59 = v57[1];
  v60 = *((_BYTE *)v57 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v124);
  v61 = v122;
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v48, (uint64_t)v26, 0, 1, (uint64_t)v124, v58, v59, v60, v122);
  v62 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
  v63 = v123;
  sub_10004A160(v123, (uint64_t)v43, &qword_1011A8FA0);
  if (v53(v43, 1, v51) == 1)
  {
    sub_10004FF60((uint64_t)v43, &qword_1011A8FA0);
    v64 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v119, 1, 1, v64);
    v65 = v110;
    v66 = v118;
  }
  else
  {
    Album.staticDetailTallArtwork.getter();
    v66 = v118;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v43, v51);
    v65 = v110;
  }
  v67 = v106;
  sub_10004A160(v63, (uint64_t)v40, &qword_1011A8FA0);
  if (v53(v40, 1, v51) == 1)
  {
    sub_10004FF60((uint64_t)v40, &qword_1011A8FA0);
    v68 = v107;
  }
  else
  {
    v69 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v51, &protocol witness table for Album);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v51);
    v68 = v107;
    if (v69)
      goto LABEL_11;
  }
  v69 = sub_100041D8C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(0);
LABEL_11:
  sub_10004A160(v63, v67, &qword_1011A8FA0);
  v70 = v53((char *)v67, 1, v51);
  v110 = v69;
  if ((_DWORD)v70 == 1)
  {
    sub_10004FF60(v67, &qword_1011A8FA0);
    v71 = v103;
    v72 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
    v73 = v104;
    static Locale.current.getter(v72);
    v107 = String.init(localized:table:bundle:locale:comment:)(v71, 0, 0, 0, v73, 0, 0, 256);
    v106 = v74;
  }
  else
  {
    v107 = Album.title.getter(v70);
    v106 = v75;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v51);
  }
  sub_10004A160(v63, v68, &qword_1011A8FA0);
  if (v53((char *)v68, 1, v51) == 1)
  {
    sub_10004FF60(v68, &qword_1011A8FA0);
    v76 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v120, 1, 1, v76);
  }
  else
  {
    v77 = v120;
    Album.favoriteStatus.getter();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v51);
    v78 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  }
  v79 = v108;
  sub_10004A160(v63, v108, &qword_1011A8FA0);
  v80 = v53((char *)v79, 1, v51);
  if ((_DWORD)v80 == 1)
  {
    sub_10004FF60(v79, &qword_1011A8FA0);
    v81 = 0;
    v82 = 0;
    v83 = -1;
  }
  else
  {
    v84 = Album.artistName.getter(v80);
    v85 = v66;
    v81 = v84;
    v82 = v86;
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v79, v51);
    v83 = 1;
  }
  sub_10004A160(v63, v65, &qword_1011A8FA0);
  if (v53((char *)v65, 1, v51) == 1)
  {
    sub_10004FF60(v65, &qword_1011A8FA0);
    v87 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v121, 1, 1, v87);
  }
  else
  {
    v88 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    v89 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v105, 1, 1, v88);
    v90 = v121;
    sub_1005FFE14(v89, v121);
    sub_10004FF60(v89, &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v65, v51);
    v91 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
  }
  v92 = v109;
  sub_10004A160(v63, v109, &qword_1011A8FA0);
  if (v53((char *)v92, 1, v51) == 1)
  {
    sub_10004FF60(v92, &qword_1011A8FA0);
LABEL_26:
    swift_bridgeObjectRelease(0);
    v93 = 0;
    v95 = 0xE000000000000000;
    goto LABEL_27;
  }
  v93 = sub_10060037C();
  v95 = v94;
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v92, v51);
  if (!v95)
    goto LABEL_26;
LABEL_27:
  v96 = sub_100047028((uint64_t)&off_1010A9D68);
  v97 = _s13ConfigurationCMa(0);
  swift_allocObject(v97, *(unsigned int *)(v97 + 48), *(unsigned __int16 *)(v97 + 52));
  v98 = v116;
  swift_retain(v116);
  v99 = v117;
  swift_retain(v117);
  v100 = sub_1006044A0(v113, v122, v119, v110, v107, v106, v120, v81, v82, v83, v115, v114, (uint64_t)v121, v93, v95, v112, v98, v111, v99,
           v96,
           a9);
  swift_release(v98);
  swift_bridgeObjectRelease(v95);
  swift_release(v99);
  sub_10004FF60(v123, &qword_1011A8FA0);
  return v100;
}

uint64_t sub_1006054A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  __n128 v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(uint64_t, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  __n128 v124;
  char v125;
  _UNKNOWN **v126;
  Swift::Int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE v160[24];

  v151 = a5;
  v152 = a8;
  v147 = a3;
  v148 = a7;
  v150 = a6;
  v153 = a4;
  v149 = a2;
  v136 = type metadata accessor for Date(0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v132 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  v12 = __chkstk_darwin(v11);
  v139 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v145 = (uint64_t)&v132 - v14;
  v15 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v15);
  v154 = (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v17);
  v157 = (uint64_t)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Locale(0);
  __chkstk_darwin(v19);
  v134 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v21);
  v133 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v23);
  v156 = (uint64_t)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011A30F0);
  v29 = __chkstk_darwin(v28);
  v146 = (char *)&v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v138 = (char *)&v132 - v32;
  v33 = __chkstk_darwin(v31);
  v144 = (char *)&v132 - v34;
  v35 = __chkstk_darwin(v33);
  v137 = (char *)&v132 - v36;
  v37 = __chkstk_darwin(v35);
  v142 = (uint64_t)&v132 - v38;
  v39 = __chkstk_darwin(v37);
  v143 = (unint64_t)&v132 - v40;
  v41 = __chkstk_darwin(v39);
  v141 = (uint64_t)&v132 - v42;
  v43 = __chkstk_darwin(v41);
  v140 = (uint64_t)&v132 - v44;
  v45 = __chkstk_darwin(v43);
  v47 = (char *)&v132 - v46;
  v48 = __chkstk_darwin(v45);
  v50 = (char *)&v132 - v49;
  v51 = __chkstk_darwin(v48);
  v53 = (char *)&v132 - v52;
  __chkstk_darwin(v51);
  v55 = (char *)&v132 - v54;
  v56 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v56);
  v58 = (char *)&v132 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v59);
  v155 = (uint64_t)&v132 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v55, &qword_1011A30F0);
  v61 = type metadata accessor for Playlist(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v55, 1, v61);
  v158 = v62;
  if (v64 == 1)
  {
    sub_10004FF60((uint64_t)v55, &qword_1011A30F0);
    v65 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 1, 1, v65);
  }
  else
  {
    Playlist.artworkViewModel.getter((uint64_t)v58);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v61);
  }
  sub_10004A160(a1, (uint64_t)v53, &qword_1011A30F0);
  v66 = v63(v53, 1, v61);
  v159 = a1;
  if ((_DWORD)v66 == 1)
  {
    sub_10004FF60((uint64_t)v53, &qword_1011A30F0);
    v67 = type metadata accessor for Playlist.Variant(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v27, 1, 1, v67);
  }
  else
  {
    Playlist.variant.getter(v66);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v53, v61);
  }
  v68 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v27, 0, 10, v68);
  v69 = Corner.large.unsafeMutableAddressor();
  v70 = *v69;
  v71 = v69[1];
  v72 = *((_BYTE *)v69 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v160);
  v73 = v155;
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v58, (uint64_t)v27, 0, 1, (uint64_t)v160, v70, v71, v72, v155);
  v74 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 0, 1, v74);
  v75 = v159;
  sub_10004A160(v159, (uint64_t)v50, &qword_1011A30F0);
  if (v63(v50, 1, v61) == 1)
  {
    sub_10004FF60((uint64_t)v50, &qword_1011A30F0);
    v76 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v156, 1, 1, v76);
    v77 = v158;
  }
  else
  {
    Playlist.staticDetailTallArtwork.getter();
    v77 = v158;
    (*(void (**)(char *, uint64_t))(v158 + 8))(v50, v61);
  }
  v78 = v143;
  v79 = v141;
  v80 = v140;
  sub_10004A160(v75, (uint64_t)v47, &qword_1011A30F0);
  v81 = v63(v47, 1, v61);
  v82 = (uint64_t)v144;
  if (v81 == 1)
  {
    sub_10004FF60((uint64_t)v47, &qword_1011A30F0);
  }
  else
  {
    v83 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v61, &protocol witness table for Playlist);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v61);
    if (v83)
      goto LABEL_14;
  }
  v83 = sub_100041D8C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(0);
LABEL_14:
  v84 = (uint64_t)v137;
  sub_10004A160(v75, v80, &qword_1011A30F0);
  v85 = v63((char *)v80, 1, v61);
  v143 = v83;
  if (v85 == 1)
  {
    sub_10004FF60(v80, &qword_1011A30F0);
    v87 = v133;
    v88 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E40A50);
    v89 = v134;
    static Locale.current.getter(v88);
    v141 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, 0, v89, 0, 0, 256);
    v140 = v90;
  }
  else
  {
    v141 = Playlist.name.getter(v86);
    v140 = v91;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v80, v61);
  }
  sub_10004A160(v75, v79, &qword_1011A30F0);
  v92 = v63((char *)v79, 1, v61);
  if ((_DWORD)v92 == 1)
  {
    sub_10004FF60(v79, &qword_1011A30F0);
    v93 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v157, 1, 1, v93);
  }
  else
  {
    v94 = v157;
    Playlist.favoriteStatus.getter(v92);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v79, v61);
    v95 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 0, 1, v95);
  }
  sub_10004A160(v75, v78, &qword_1011A30F0);
  if (v63((char *)v78, 1, v61) == 1)
  {
    sub_10004FF60(v78, &qword_1011A30F0);
    v96 = v142;
    v75 = v159;
    sub_10004A160(v159, v142, &qword_1011A30F0);
  }
  else
  {
    v97 = Playlist.curatorName.getter();
    v99 = v98;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v61);
    v96 = v142;
    sub_10004A160(v75, v142, &qword_1011A30F0);
    if (v99)
    {
      sub_10004FF60(v96, &qword_1011A30F0);
      goto LABEL_27;
    }
  }
  sub_10004A160(v96, v84, &qword_1011A30F0);
  if (v63((char *)v84, 1, v61) != 1)
  {
    v97 = sub_10031E9D4();
    v99 = v100;
    sub_10004FF60(v96, &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v84, v61);
    if (!v99)
    {
      v97 = 0;
      goto LABEL_29;
    }
LABEL_27:
    v101 = (uint64_t)v139;
    v102 = 1;
    goto LABEL_30;
  }
  sub_10004FF60(v96, &qword_1011A30F0);
  v75 = v159;
  sub_10004FF60(v84, &qword_1011A30F0);
  v97 = 0;
  v99 = 0;
LABEL_29:
  v102 = -1;
  v101 = (uint64_t)v139;
LABEL_30:
  sub_10004A160(v75, v82, &qword_1011A30F0);
  if (v63((char *)v82, 1, v61) == 1)
  {
    sub_10004FF60(v82, &qword_1011A30F0);
    v103 = _s8MetadataV13ConfigurationOMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v154, 1, 1, v103);
    v104 = (uint64_t)v138;
  }
  else
  {
    v105 = v82;
    v106 = v145;
    Playlist.lastModifiedDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v105, v61);
    sub_10004A160(v106, v101, (uint64_t *)&unk_1011A30A0);
    v107 = v135;
    v108 = v136;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v101, 1, v136) == 1)
    {
      v109 = _s8MetadataV13ConfigurationOMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v154, 1, 1, v109);
    }
    else
    {
      v110 = v132;
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v132, v101, v108);
      v111 = *(void (**)(uint64_t, char *, uint64_t))(v107 + 16);
      v112 = v107;
      v113 = v154;
      v111(v154, v110, v108);
      v114 = _s8MetadataV13ConfigurationOMa(0);
      swift_storeEnumTagMultiPayload(v113, v114, 1);
      v115 = v110;
      v77 = v158;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v115, v108);
      v116 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56);
      v117 = v114;
      v75 = v159;
      v116(v113, 0, 1, v117);
    }
    v104 = (uint64_t)v138;
    sub_10004FF60(v145, (uint64_t *)&unk_1011A30A0);
  }
  sub_10004A160(v75, v104, &qword_1011A30F0);
  if (v63((char *)v104, 1, v61) == 1)
  {
    sub_10004FF60(v104, &qword_1011A30F0);
    v118 = (uint64_t)v146;
  }
  else
  {
    v119 = sub_1006022FC();
    v121 = v120;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v104, v61);
    v118 = (uint64_t)v146;
    if (v121)
      goto LABEL_40;
  }
  swift_bridgeObjectRelease(0);
  v119 = 0;
  v121 = 0xE000000000000000;
LABEL_40:
  sub_10004A160(v75, v118, &qword_1011A30F0);
  v122 = v63((char *)v118, 1, v61);
  v123 = v152;
  v124 = swift_retain(v152);
  if (v122 == 1)
  {
    sub_10004FF60(v118, &qword_1011A30F0);
  }
  else
  {
    v125 = Playlist.supportsSing.getter(v124);
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v118, v61);
    if ((v125 & 1) != 0)
    {
      v126 = &off_1010A9D90;
      goto LABEL_45;
    }
  }
  v126 = &off_1010A9DB8;
LABEL_45:
  v127 = sub_100047028((uint64_t)v126);
  v128 = _s13ConfigurationCMa(0);
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v129 = v153;
  swift_retain(v153);
  v130 = sub_1006044A0(v149, v155, v156, v143, v141, v140, v157, v97, v99, v102, v151, v150, v154, v119, v121, v148, v123, v147, v129,
           v127,
           a9);
  swift_release(v123);
  swift_bridgeObjectRelease(v121);
  swift_release(v129);
  sub_10004FF60(v159, &qword_1011A30F0);
  return v130;
}

uint64_t sub_100606274()
{
  uint64_t v0;

  return sub_100065228(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics, &qword_1011B4788);
}

uint64_t sub_1006062E0()
{
  uint64_t v0;

  return sub_1005FF06C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork, &qword_1011A1440);
}

uint64_t sub_100606308(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100044B54((uint64_t *)&unk_1011A96F0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10060634C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = v0[4];
  v2 = (_QWORD *)(v0[2] + OBJC_IVAR____TtCV5Music6Header13Configuration__title);
  v3 = v2[1];
  *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain(v1);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_100606394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution;
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_BYTE *)(v0 + 40);
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = v2;
  v7 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(v3 + 16) = v6;
  sub_1005FFDCC(v1, v2, v6);
  return sub_1005FFDF0(v4, v5, v7);
}

uint64_t sub_1006063F8()
{
  uint64_t *v0;

  return sub_1005FF51C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

ValueMetadata *type metadata accessor for HeaderModeKey()
{
  return &type metadata for HeaderModeKey;
}

ValueMetadata *_s13ConfigurationC4ModeO4UberOMa()
{
  return &_s13ConfigurationC4ModeO4UberON;
}

uint64_t _s13ConfigurationC4ModeO4UberO4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100606484 + 4 * byte_100EC491C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006064B8 + 4 * byte_100EC4917[v4]))();
}

uint64_t sub_1006064B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006064C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006064C8);
  return result;
}

uint64_t sub_1006064D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006064DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006064E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006064E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationC4ModeO4UberO4ModeOMa()
{
  return &_s13ConfigurationC4ModeO4UberO4ModeON;
}

unint64_t sub_100606508()
{
  unint64_t result;

  result = qword_1011BD808;
  if (!qword_1011BD808)
  {
    result = swift_getWitnessTable(&unk_100EC4CAC, &_s13ConfigurationC4ModeO4UberO4ModeON);
    atomic_store(result, (unint64_t *)&qword_1011BD808);
  }
  return result;
}

unint64_t sub_10060654C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BD810;
  if (!qword_1011BD810)
  {
    v1 = sub_100044B54(&qword_1011BD818);
    sub_1006065B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011BD810);
  }
  return result;
}

unint64_t sub_1006065B0()
{
  unint64_t result;

  result = qword_1011BD820;
  if (!qword_1011BD820)
  {
    result = swift_getWitnessTable(&unk_100EC49F0, &_s13ConfigurationC4ModeON);
    atomic_store(result, (unint64_t *)&qword_1011BD820);
  }
  return result;
}

uint64_t sub_1006065F4()
{
  return sub_100603B60();
}

uint64_t sub_100606608()
{
  return sub_100603BAC();
}

uint64_t sub_10060661C()
{
  return sub_100603BF8();
}

void sub_100606630()
{
  sub_1002A7958();
}

unint64_t sub_100606648()
{
  unint64_t result;

  result = qword_1011BD828;
  if (!qword_1011BD828)
  {
    result = swift_getWitnessTable(&unk_100EC4DEC, &type metadata for CloseNowPlayingAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011BD828);
  }
  return result;
}

unint64_t sub_100606690()
{
  unint64_t result;

  result = qword_1011BD830;
  if (!qword_1011BD830)
  {
    result = swift_getWitnessTable(&unk_100EC4E14, &type metadata for CloseNowPlayingAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011BD830);
  }
  return result;
}

uint64_t sub_1006066D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7204, 1);
}

uint64_t sub_1006066E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA71DC, 1);
}

uint64_t sub_1006066F4()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124D4E0);
  sub_100048B14(v0, (uint64_t)qword_10124D4E0);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x8000000100E40AC0);
}

uint64_t sub_100606754(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v2[14] = a1;
  v2[15] = a2;
  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[16] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v4);
  v2[18] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[19] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[20] = v7;
  v2[21] = v8;
  return swift_task_switch(sub_1006067F4, v7, v8);
}

uint64_t sub_1006067F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  os_log_type_t type;
  uint64_t v35;
  uint64_t v36[2];

  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v1 = v0 + 80;
  v2 = *(_QWORD *)(v0 + 120);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 176) = sub_100048B14(v3, (uint64_t)qword_10124CEC8);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(_QWORD *)(v0 + 120);
  if (v7)
  {
    type = v6;
    v10 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v36[0] = v33;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 104) = &type metadata for CloseNowPlayingAppIntent;
    v11 = sub_100007E8C(&qword_1011BD878);
    v12 = String.init<A>(describing:)(v0 + 104, v11);
    *(_QWORD *)(v0 + 32) = sub_100322200(v12, v13, v36);
    v1 = v0 + 80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 217));
    *(_BYTE *)(v0 + 218) = *(_BYTE *)(v0 + 217);
    v14 = sub_100007E8C(&qword_1011BD880);
    v15 = String.init<A>(describing:)(v0 + 218, v14);
    *(_QWORD *)(v0 + 80) = sub_100322200(v15, v16, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    v17 = swift_bridgeObjectRelease();
    swift_release_n(v9, 2, v17);
    _os_log_impl((void *)&_mh_execute_header, v5, type, "%s closing Now Playing destination %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_release_n(v9, 2, v8);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  *(_QWORD *)(v0 + 184) = v19;
  v20 = v19;

  Strong = swift_unknownObjectWeakLoadStrong(v20 + 40);
  *(_QWORD *)(v0 + 192) = Strong;
  if (Strong)
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 219));
    __asm { BR              X10 }
  }
  swift_release();
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = v1;
    v36[0] = swift_slowAlloc(32, -1);
    v26 = v36[0];
    *(_DWORD *)v25 = 136315138;
    *(_QWORD *)(v0 + 64) = &type metadata for CloseNowPlayingAppIntent;
    v27 = sub_100007E8C(&qword_1011BD878);
    v28 = String.init<A>(describing:)(v0 + 64, v27);
    *(_QWORD *)(v0 + 72) = sub_100322200(v28, v29, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v35);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s Now Playing is not open. Nothing to do.", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  static IntentResult.result<>()(v30);
  swift_release();
  v31 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10060718C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[25];
  (*v1)[26] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_100242458(v2[17]);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_100607264;
  }
  else
  {
    v7 = v2[18];
    sub_100242458(v2[17]);
    sub_100242458(v7);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_100607208;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100607208()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_release(*(_QWORD *)(v0 + 152));
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  static IntentResult.result<>()(v1);

  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100607264()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v26[2];

  v1 = v0;
  v2 = *(void **)(v0 + 192);
  swift_release();

  swift_release();
  v3 = *(_QWORD *)(v1 + 208);
  swift_retain();
  swift_errorRetain(v3);
  swift_retain();
  v4 = swift_errorRetain(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD *)(v1 + 120);
    v9 = swift_slowAlloc(32, -1);
    v10 = swift_slowAlloc(96, -1);
    v26[0] = v10;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v1 + 16) = &type metadata for CloseNowPlayingAppIntent;
    v11 = sub_100007E8C(&qword_1011BD878);
    v12 = String.init<A>(describing:)(v1 + 16, v11);
    *(_QWORD *)(v1 + 24) = sub_100322200(v12, v13, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 216));
    v14 = sub_100007E8C(&qword_1011BD880);
    v15 = String.init<A>(describing:)(v1 + 216, v14);
    *(_QWORD *)(v1 + 40) = sub_100322200(v15, v16, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48);
    v17 = swift_bridgeObjectRelease();
    swift_release_n(v8, 2, v17);
    *(_WORD *)(v9 + 22) = 2082;
    *(_QWORD *)(v1 + 48) = v3;
    swift_errorRetain(v3);
    v18 = sub_100007E8C(&qword_1011A14B0);
    v19 = String.init<A>(describing:)(v1 + 48, v18);
    *(_QWORD *)(v1 + 56) = sub_100322200(v19, v20, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 56, v1 + 64);
    swift_bridgeObjectRelease();
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s close failed, destination: %{public}s error: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy(v10, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v1 + 120), 2, v7);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  v22 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 144);
  v23 = sub_100607AF8();
  swift_allocError(&type metadata for CloseNowPlayingIntentError, v23, 0, 0);
  swift_willThrow(v24);
  swift_errorRelease(v3);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10060755C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C3C0 != -1)
    swift_once(&qword_10119C3C0, sub_1006066F4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124D4E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1006075CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_100007E8C(&qword_1011BD888);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BD890);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, a1, a2);
  v10._countAndFlagsBits = 0x2065736F6C43;
  v10._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath("Pg4");
  v12 = sub_100007E8C(&qword_1011BD898);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release();
  v13._countAndFlagsBits = 0x20776F4E206E6920;
  v13._object = (void *)0xEF676E6979616C50;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_10060773C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011BD86C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_100606754(a1, v4);
}

uint64_t sub_100607794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100607838();
  *a1 = result;
  return result;
}

uint64_t sub_1006077B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100607AB4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CloseNowPlayingAppIntent()
{
  return &type metadata for CloseNowPlayingAppIntent;
}

uint64_t sub_1006077F0()
{
  return sub_100049F28(&qword_1011BD840, &qword_1011BD848, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10060781C()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E40AE0);
}

uint64_t sub_100607838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _BYTE v21[15];
  char v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  v10 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007E8C(&qword_1011BD850);
  LocalizedStringResource.init(stringLiteral:)(0x74616E6974736544, 0xEB000000006E6F69);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100E40A90);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 3;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_100607A70();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v12, &v22, v9, v6, v3, &off_1010ACD40, v19);
}

unint64_t sub_100607A70()
{
  unint64_t result;

  result = qword_1011BD858;
  if (!qword_1011BD858)
  {
    result = swift_getWitnessTable(&unk_100ECCA94, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011BD858);
  }
  return result;
}

unint64_t sub_100607AB4()
{
  unint64_t result;

  result = qword_1011BD860;
  if (!qword_1011BD860)
  {
    result = swift_getWitnessTable(&unk_100EC4D5C, &type metadata for CloseNowPlayingAppIntent);
    atomic_store(result, &qword_1011BD860);
  }
  return result;
}

unint64_t sub_100607AF8()
{
  unint64_t result;

  result = qword_1011BD870;
  if (!qword_1011BD870)
  {
    result = swift_getWitnessTable(&unk_100EC4F2C, &type metadata for CloseNowPlayingIntentError);
    atomic_store(result, (unint64_t *)&qword_1011BD870);
  }
  return result;
}

uint64_t sub_100607B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for CloseNowPlayingIntentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100607BA4 + 4 * byte_100EC4D50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100607BC4 + 4 * byte_100EC4D55[v4]))();
}

_BYTE *sub_100607BA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100607BC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100607BCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100607BD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100607BDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100607BE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CloseNowPlayingIntentError()
{
  return &type metadata for CloseNowPlayingIntentError;
}

unint64_t sub_100607C04()
{
  unint64_t result;

  result = qword_1011BD8A0[0];
  if (!qword_1011BD8A0[0])
  {
    result = swift_getWitnessTable(&unk_100EC4F04, &type metadata for CloseNowPlayingIntentError);
    atomic_store(result, qword_1011BD8A0);
  }
  return result;
}

void sub_100607C48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  sub_1000E3A44(319, (unint64_t *)&qword_10119F940, type metadata accessor for SegueContext, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_100EC4F80;
    v6[3] = &unk_100EC4F98;
    v6[4] = &unk_100EC4F98;
    v6[5] = &unk_100EC4F98;
    v6[6] = &unk_100EC4F98;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F560, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      v6[8] = &unk_100EC4FB0;
      v6[9] = &unk_100EC4F80;
      v6[10] = &unk_100EC4F80;
      v6[11] = &unk_100EC4FB0;
      swift_initStructMetadata(a1, 0, 12, v6, a1 + 32);
    }
  }
}

char *sub_100607D34(char *a1, char **a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  char v78;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for SegueContext(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(char **, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_10119F840);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *a2;
      *(_QWORD *)a1 = *a2;
      v12 = v7[5];
      __dst = &a1[v12];
      v13 = (char *)a2 + v12;
      v14 = type metadata accessor for GenericMusicItem(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v11;
      if (v16(v13, 1, v14))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      a1[v7[6]] = *((_BYTE *)a2 + v7[6]);
      v19 = v7[7];
      v20 = &a1[v19];
      v21 = (char **)((char *)a2 + v19);
      if (*v21)
      {
        v22 = v21[1];
        *(_QWORD *)v20 = *v21;
        *((_QWORD *)v20 + 1) = v22;
        v23 = swift_retain();
      }
      else
      {
        v23 = *(__n128 *)v21;
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v8 + 56))(a1, 0, 1, v7, v23);
    }
    v24 = a3[9];
    v25 = a3[10];
    v26 = &a1[v24];
    v27 = (char **)((char *)a2 + v24);
    v28 = v27[1];
    *(_QWORD *)v26 = *v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = &a1[v25];
    v30 = *(uint64_t *)((char *)a2 + v25);
    v31 = *(uint64_t *)((char *)a2 + v25 + 8);
    v32 = *((_BYTE *)a2 + v25 + 16);
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v30, v31);
    *(_QWORD *)v29 = v30;
    *((_QWORD *)v29 + 1) = v31;
    v29[16] = v32;
    v33 = a3[11];
    v34 = a3[12];
    v35 = &a1[v33];
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = *v36;
    v38 = v36[1];
    *(_QWORD *)v35 = v37;
    *((_QWORD *)v35 + 1) = v38;
    v39 = &a1[v34];
    v40 = (uint64_t *)((char *)a2 + v34);
    v42 = *v40;
    v41 = v40[1];
    *(_QWORD *)v39 = v42;
    *((_QWORD *)v39 + 1) = v41;
    v43 = a3[13];
    v44 = a3[14];
    v45 = &a1[v43];
    v46 = (uint64_t *)((char *)a2 + v43);
    v48 = *v46;
    v47 = v46[1];
    *(_QWORD *)v45 = v48;
    *((_QWORD *)v45 + 1) = v47;
    v49 = &a1[v44];
    v50 = (uint64_t *)((char *)a2 + v44);
    v52 = *v50;
    v51 = v50[1];
    *(_QWORD *)v49 = v52;
    *((_QWORD *)v49 + 1) = v51;
    v53 = a3[15];
    v54 = &a1[v53];
    v55 = (char **)((char *)a2 + v53);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v56 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
    {
      v57 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v54, v55, v57);
      v58 = 1;
    }
    else
    {
      *(_QWORD *)v54 = *v55;
      swift_retain();
      v58 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v56, v58);
    v59 = a3[16];
    v60 = &a1[v59];
    v61 = (char *)a2 + v59;
    v62 = *(id *)v61;
    v63 = v61[8];
    sub_1000A4100(*(id *)v61, v63);
    *(_QWORD *)v60 = v62;
    v60[8] = v63;
    v64 = a3[17];
    v65 = &a1[v64];
    v66 = (char *)a2 + v64;
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    LOBYTE(v60) = v66[16];
    sub_1000A410C(*(_QWORD *)v66, v68, (char)v60);
    *(_QWORD *)v65 = v67;
    *((_QWORD *)v65 + 1) = v68;
    v65[16] = (char)v60;
    v69 = a3[18];
    v70 = &a1[v69];
    v71 = (char *)a2 + v69;
    v72 = *(_QWORD *)v71;
    v73 = *((_QWORD *)v71 + 1);
    LOBYTE(v60) = v71[16];
    sub_1000A411C(*(_QWORD *)v71, v73, (char)v60);
    *(_QWORD *)v70 = v72;
    *((_QWORD *)v70 + 1) = v73;
    v70[16] = (char)v60;
    v74 = a3[19];
    v75 = &a1[v74];
    v76 = (char *)a2 + v74;
    v77 = *(id *)v76;
    v78 = v76[8];
    sub_1000A4100(*(id *)v76, v78);
    *(_QWORD *)v75 = v77;
    v75[8] = v78;
  }
  return a1;
}

void sub_1006080A4(id *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for SegueContext(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {

    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (*(id *)((char *)a1 + *(int *)(v4 + 28)))
      swift_release();
  }
  swift_release();
  sub_1000A6174(*(uint64_t *)((char *)a1 + a2[10]), *(uint64_t *)((char *)a1 + a2[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = (char *)a1 + a2[15];
  v9 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)((char *)a1 + a2[16]), *((_BYTE *)a1 + a2[16] + 8));
  sub_1000A4230(*(uint64_t *)((char *)a1 + a2[17]), *(uint64_t *)((char *)a1 + a2[17] + 8), *((_BYTE *)a1 + a2[17] + 16));
  sub_1000A4240(*(uint64_t *)((char *)a1 + a2[18]), *(unint64_t *)((char *)a1 + a2[18] + 8), *((_BYTE *)a1 + a2[18] + 16));
  sub_1000A4224(*(id *)((char *)a1 + a2[19]), *((_BYTE *)a1 + a2[19] + 8));
}

void **sub_10060824C(void **a1, void **a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  id v60;
  char v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  id v75;
  char v76;
  char *__dst;

  v6 = (int *)type metadata accessor for SegueContext(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(void **, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_10119F840);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = v6[5];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v9;
    if (v14(v11, 1, v12))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v17 = v6[7];
    v18 = (void **)((char *)a1 + v17);
    v19 = (void **)((char *)a2 + v17);
    if (*v19)
    {
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = swift_retain();
    }
    else
    {
      v21 = *(__n128 *)v19;
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v7 + 56))(a1, 0, 1, v6, v21);
  }
  v22 = a3[9];
  v23 = a3[10];
  v24 = (void **)((char *)a1 + v22);
  v25 = (void **)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (char *)a1 + v23;
  v28 = *(uint64_t *)((char *)a2 + v23);
  v29 = *(uint64_t *)((char *)a2 + v23 + 8);
  v30 = *((_BYTE *)a2 + v23 + 16);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v28, v29);
  *(_QWORD *)v27 = v28;
  *((_QWORD *)v27 + 1) = v29;
  v27[16] = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = (void **)((char *)a1 + v31);
  v34 = (uint64_t *)((char *)a2 + v31);
  v35 = *v34;
  v36 = v34[1];
  *v33 = v35;
  v33[1] = v36;
  v37 = (void **)((char *)a1 + v32);
  v38 = (uint64_t *)((char *)a2 + v32);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  v41 = a3[13];
  v42 = a3[14];
  v43 = (void **)((char *)a1 + v41);
  v44 = (uint64_t *)((char *)a2 + v41);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  v47 = (void **)((char *)a1 + v42);
  v48 = (uint64_t *)((char *)a2 + v42);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  v51 = a3[15];
  v52 = (void **)((char *)a1 + v51);
  v53 = (void **)((char *)a2 + v51);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v54 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
  {
    v55 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v52, v53, v55);
    v56 = 1;
  }
  else
  {
    *v52 = *v53;
    swift_retain();
    v56 = 0;
  }
  swift_storeEnumTagMultiPayload(v52, v54, v56);
  v57 = a3[16];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *(id *)v59;
  v61 = v59[8];
  sub_1000A4100(*(id *)v59, v61);
  *(_QWORD *)v58 = v60;
  v58[8] = v61;
  v62 = a3[17];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = *(_QWORD *)v64;
  v66 = *((_QWORD *)v64 + 1);
  LOBYTE(v58) = v64[16];
  sub_1000A410C(*(_QWORD *)v64, v66, (char)v58);
  *(_QWORD *)v63 = v65;
  *((_QWORD *)v63 + 1) = v66;
  v63[16] = (char)v58;
  v67 = a3[18];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = *(_QWORD *)v69;
  v71 = *((_QWORD *)v69 + 1);
  LOBYTE(v58) = v69[16];
  sub_1000A411C(*(_QWORD *)v69, v71, (char)v58);
  *(_QWORD *)v68 = v70;
  *((_QWORD *)v68 + 1) = v71;
  v68[16] = (char)v58;
  v72 = a3[19];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = *(id *)v74;
  v76 = v74[8];
  sub_1000A4100(*(id *)v74, v76);
  *(_QWORD *)v73 = v75;
  v73[8] = v76;
  return a1;
}

void **sub_100608590(void **a1, void **a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, int *);
  int v9;
  int v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  char v70;
  void *v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  char *v90;
  char *v91;
  id v92;
  char v93;
  void *v94;
  char v95;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v6 = (int *)type metadata accessor for SegueContext(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(void **, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v6[5];
      __dst = (char *)a1 + v12;
      v13 = (char *)a2 + v12;
      v14 = type metadata accessor for GenericMusicItem(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v11;
      if (v16(v13, 1, v14))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
      v31 = v6[7];
      v32 = (void **)((char *)a1 + v31);
      v33 = (void **)((char *)a2 + v31);
      if (*v33)
      {
        v34 = v33[1];
        *v32 = *v33;
        v32[1] = v34;
        v35 = swift_retain();
      }
      else
      {
        v35 = *(__n128 *)v33;
        *(_OWORD *)v32 = *(_OWORD *)v33;
      }
      (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v7 + 56))(a1, 0, 1, v6, v35);
      goto LABEL_16;
    }
LABEL_7:
    v19 = sub_100007E8C(&qword_10119F840);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SegueContext);
    goto LABEL_7;
  }
  v20 = *a2;
  v21 = *a1;
  *a1 = *a2;
  v22 = v20;

  v23 = v6[5];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = type metadata accessor for GenericMusicItem(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_24;
  }
  if (v30)
  {
LABEL_24:
    v97 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_25:
  *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
  v98 = v6[7];
  v99 = (void **)((char *)a1 + v98);
  v100 = (char *)a2 + v98;
  v101 = *(uint64_t *)((char *)a1 + v98);
  v102 = *(uint64_t *)((char *)a2 + v98);
  if (v101)
  {
    if (v102)
    {
      v103 = *((_QWORD *)v100 + 1);
      *v99 = v102;
      v99[1] = v103;
      swift_retain();
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v102)
  {
    v104 = *((_QWORD *)v100 + 1);
    *v99 = v102;
    v99[1] = v104;
    swift_retain();
    goto LABEL_16;
  }
  *(_OWORD *)v99 = *(_OWORD *)v100;
LABEL_16:
  v36 = a3[9];
  v37 = (void **)((char *)a1 + v36);
  v38 = (void **)((char *)a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_retain();
  swift_release();
  v40 = a3[10];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = *(_QWORD *)v42;
  v44 = *((_QWORD *)v42 + 1);
  v45 = v42[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v42, v44);
  v46 = *(_QWORD *)v41;
  v47 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v41 = v43;
  *((_QWORD *)v41 + 1) = v44;
  v41[16] = v45;
  sub_1000A6174(v46, v47);
  v48 = a3[11];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *(void **)((char *)a1 + v48) = *(void **)((char *)a2 + v48);
  swift_retain();
  swift_release();
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  v51 = a3[12];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *(void **)((char *)a1 + v51) = *(void **)((char *)a2 + v51);
  swift_retain();
  swift_release();
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  v54 = a3[13];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(void **)((char *)a1 + v54) = *(void **)((char *)a2 + v54);
  swift_retain();
  swift_release();
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  v57 = a3[14];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *(void **)((char *)a1 + v57) = *(void **)((char *)a2 + v57);
  swift_retain();
  swift_release();
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  if (a1 != a2)
  {
    v60 = a3[15];
    v61 = (void **)((char *)a1 + v60);
    v62 = (void **)((char *)a2 + v60);
    sub_10004FF60((uint64_t)a1 + v60, &qword_10119F4E0);
    v63 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v62, v63) == 1)
    {
      v64 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
      v65 = 1;
    }
    else
    {
      *v61 = *v62;
      swift_retain();
      v65 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v63, v65);
  }
  v66 = a3[16];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = *(id *)v68;
  v70 = v68[8];
  sub_1000A4100(*(id *)v68, v70);
  v71 = *(void **)v67;
  v72 = v67[8];
  *(_QWORD *)v67 = v69;
  v67[8] = v70;
  sub_1000A4224(v71, v72);
  v73 = a3[17];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = *(_QWORD *)v75;
  v77 = *((_QWORD *)v75 + 1);
  LOBYTE(v67) = v75[16];
  sub_1000A410C(*(_QWORD *)v75, v77, (char)v67);
  v78 = *(_QWORD *)v74;
  v79 = *((_QWORD *)v74 + 1);
  v80 = v74[16];
  *(_QWORD *)v74 = v76;
  *((_QWORD *)v74 + 1) = v77;
  v74[16] = (char)v67;
  sub_1000A4230(v78, v79, v80);
  v81 = a3[18];
  v82 = (char *)a1 + v81;
  v83 = (char *)a2 + v81;
  v84 = *(_QWORD *)v83;
  v85 = *((_QWORD *)v83 + 1);
  LOBYTE(v67) = v83[16];
  sub_1000A411C(*(_QWORD *)v83, v85, (char)v67);
  v86 = *(_QWORD *)v82;
  v87 = *((_QWORD *)v82 + 1);
  v88 = v82[16];
  *(_QWORD *)v82 = v84;
  *((_QWORD *)v82 + 1) = v85;
  v82[16] = (char)v67;
  sub_1000A4240(v86, v87, v88);
  v89 = a3[19];
  v90 = (char *)a1 + v89;
  v91 = (char *)a2 + v89;
  v92 = *(id *)v91;
  v93 = v91[8];
  sub_1000A4100(*(id *)v91, v93);
  v94 = *(void **)v90;
  v95 = v90[8];
  *(_QWORD *)v90 = v92;
  v90[8] = v93;
  sub_1000A4224(v94, v95);
  return a1;
}

_QWORD *sub_100608AF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;

  v6 = (int *)type metadata accessor for SegueContext(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_10119F840);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = v6[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v15 = v6[7];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = *v17;
    if (*v17)
    {
      v19 = v17[1];
      *v16 = v18;
      v16[1] = v19;
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v20 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  v23 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  v24 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  v25 = a3[15];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload(v26, v28, 1);
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  v30 = a3[16];
  v31 = a3[17];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = (char *)a1 + v31;
  v35 = (char *)a2 + v31;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[18];
  v37 = a3[19];
  v38 = (char *)a1 + v36;
  v39 = (char *)a2 + v36;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  v40 = (char *)a1 + v37;
  v41 = (char *)a2 + v37;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  v40[8] = v41[8];
  return a1;
}

_QWORD *sub_100608D90(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void *v79;
  char v80;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = (int *)type metadata accessor for SegueContext(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = v6[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for GenericMusicItem(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
      v27 = v6[7];
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = *v29;
      if (*v29)
      {
        v31 = v29[1];
        *v28 = v30;
        v28[1] = v31;
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_16;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SegueContext);
LABEL_7:
    v17 = sub_100007E8C(&qword_10119F840);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_16;
  }
  v18 = (void *)*a1;
  *a1 = *a2;

  v19 = v6[5];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
LABEL_23:
    v82 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v20, v21, v22);
LABEL_24:
  *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
  v83 = v6[7];
  v84 = (_QWORD *)((char *)a1 + v83);
  v85 = (char *)a2 + v83;
  v86 = *(_QWORD *)((char *)a1 + v83);
  v87 = *(_QWORD *)((char *)a2 + v83);
  if (v86)
  {
    if (v87)
    {
      v88 = *((_QWORD *)v85 + 1);
      *v84 = v87;
      v84[1] = v88;
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v87)
  {
    v89 = *((_QWORD *)v85 + 1);
    *v84 = v87;
    v84[1] = v89;
    goto LABEL_16;
  }
  *(_OWORD *)v84 = *(_OWORD *)v85;
LABEL_16:
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  swift_release();
  v32 = a3[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = v34[16];
  v36 = *(_QWORD *)v33;
  v37 = *((_QWORD *)v33 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v35;
  sub_1000A6174(v36, v37);
  v38 = a3[11];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  *(_QWORD *)((char *)a1 + v38) = *(_QWORD *)((char *)a2 + v38);
  swift_release();
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  v41 = a3[12];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  swift_release();
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  v44 = a3[13];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *(_QWORD *)((char *)a1 + v44) = *(_QWORD *)((char *)a2 + v44);
  swift_release();
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  v47 = a3[14];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *(_QWORD *)((char *)a1 + v47) = *(_QWORD *)((char *)a2 + v47);
  swift_release();
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  if (a1 != a2)
  {
    v50 = a3[15];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    sub_10004FF60((uint64_t)a1 + v50, &qword_10119F4E0);
    v53 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
    {
      v54 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
      swift_storeEnumTagMultiPayload(v51, v53, 1);
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
  }
  v55 = a3[16];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = *(_QWORD *)v57;
  LOBYTE(v57) = v57[8];
  v59 = *(void **)v56;
  v60 = v56[8];
  *(_QWORD *)v56 = v58;
  v56[8] = (char)v57;
  sub_1000A4224(v59, v60);
  v61 = a3[17];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = v63[16];
  v65 = *(_QWORD *)v62;
  v66 = *((_QWORD *)v62 + 1);
  v67 = v62[16];
  *(_OWORD *)v62 = *(_OWORD *)v63;
  v62[16] = v64;
  sub_1000A4230(v65, v66, v67);
  v68 = a3[18];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = v70[16];
  v72 = *(_QWORD *)v69;
  v73 = *((_QWORD *)v69 + 1);
  v74 = v69[16];
  *(_OWORD *)v69 = *(_OWORD *)v70;
  v69[16] = v71;
  sub_1000A4240(v72, v73, v74);
  v75 = a3[19];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = *(_QWORD *)v77;
  LOBYTE(v77) = v77[8];
  v79 = *(void **)v76;
  v80 = v76[8];
  *(_QWORD *)v76 = v78;
  v76[8] = (char)v77;
  sub_1000A4224(v79, v80);
  return a1;
}

uint64_t sub_100609260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060926C);
}

uint64_t sub_10060926C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100007E8C(&qword_10119F840);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100007E8C(&qword_10119F4F0);
    v10 = a1 + *(int *)(a3 + 60);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10060931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100609328);
}

uint64_t sub_100609328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100007E8C(&qword_10119F840);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    v10 = sub_100007E8C(&qword_10119F4F0);
    v12 = a1 + *(int *)(a4 + 60);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SegueButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SegueButton);
}

uint64_t sub_1006093E0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA72B4, 1);
}

uint64_t sub_100609414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v35;

  v6 = (int *)type metadata accessor for SegueLink(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v8, type metadata accessor for SegueContext);
  v9 = type metadata accessor for TabSelectionManager(0);
  v10 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v11 = EnvironmentObject.init()(v9, v10);
  v13 = v12;
  v14 = &v8[v6[5]];
  *(_QWORD *)v14 = sub_1006096B0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v15 = &v8[v6[6]];
  v16 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v17 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v15 = EnvironmentObject.init()(v16, v17);
  *((_QWORD *)v15 + 1) = v18;
  v19 = &v8[v6[7]];
  v20 = sub_100007E8C(&qword_10119F4E8);
  v21 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v19 = EnvironmentObject.init()(v20, v21);
  *((_QWORD *)v19 + 1) = v22;
  v23 = &v8[v6[8]];
  v24 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v25 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v23 = EnvironmentObject.init()(v24, v25);
  *((_QWORD *)v23 + 1) = v26;
  v27 = (uint64_t *)&v8[v6[9]];
  *v27 = v11;
  v27[1] = v13;
  v28 = &v8[v6[10]];
  *(_QWORD *)v28 = swift_getKeyPath(&unk_100EC50E0);
  v29 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  v30 = &v8[v6[11]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EC5110);
  v30[8] = 0;
  v31 = &v8[v6[12]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EC5138);
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = 0;
  v32 = &v8[v6[13]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EC5160);
  *((_QWORD *)v32 + 1) = 0;
  v32[16] = 0;
  v33 = &v8[v6[14]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100EC5188);
  v33[8] = 0;
  View.modifier<A>(_:)(v8, a2, v6, a3);
  return sub_10005B748((uint64_t)v8, type metadata accessor for SegueLink);
}

uint64_t sub_1006096B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  unint64_t v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD v56[2];

  v3 = v2;
  v49 = a2;
  v50 = type metadata accessor for AccessibilityTraits(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for SegueLink(0);
  v6 = *(_QWORD *)(v43 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v43);
  v8 = sub_100007E8C(&qword_1011BD9E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011BD9F0);
  v44 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011BD9F8);
  v15 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  v46 = v15;
  __chkstk_darwin(v14);
  v42 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011BDA00);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, a1, v17);
  v10[*(int *)(v8 + 36)] = 0;
  v18 = v3;
  sub_10005B704(v3, (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SegueLink);
  v19 = *(unsigned __int8 *)(v6 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_1010D3290, v20 + v7, v19 | 7);
  sub_10005B6C0((uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for SegueLink);
  v22 = sub_10060C9B0();
  View.onTapGesture(count:perform:)(1, sub_10060C984, v21, v8, v22);
  swift_release();
  sub_10004FF60((uint64_t)v10, &qword_1011BD9E8);
  v23 = v18 + *(int *)(v43 + 20);
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(unsigned __int8 *)(v23 + 16);
  v27 = sub_100007E8C(&qword_10119CBF8);
  v28 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v29 = StateObject.wrappedValue.getter(v24, v25, v26, v27, v28);
  swift_retain();
  v51 = ObservedObject.init(wrappedValue:)(v30, v27, v28);
  v52 = v31;
  v56[0] = v8;
  v56[1] = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v56, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v33 = sub_1004E74C0();
  v34 = v42;
  View.viewPresenting<A, B>(_:modifier:)(v29, &v51, v11, &type metadata for Modifier, OpaqueTypeConformance2, v33);
  swift_release();
  v35 = swift_release();
  v36 = (*(uint64_t (**)(char *, uint64_t, __n128))(v44 + 8))(v13, v11, v35);
  v37 = v47;
  static AccessibilityTraits.isButton.getter(v36);
  v38 = sub_100044B54(&qword_1011BD928);
  v51 = v11;
  v52 = v38;
  v53 = &type metadata for Modifier;
  v54 = OpaqueTypeConformance2;
  v55 = v33;
  v39 = swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.viewPresenting<A, B>(_:modifier:)>>, 1);
  v40 = v45;
  View.accessibility(addTraits:)(v37, v45, v39);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v34, v40);
}

uint64_t sub_100609A60(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int *v27;
  int v28;
  char *v29;
  void *v30;
  char v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  void *v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  void *v76;
  void *v77;
  uint64_t result;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  int v96;
  void *v97;
  char *v98;
  uint64_t v99;
  _OWORD v100[3];
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  _QWORD v104[4];

  v2 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v2);
  v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v5);
  v99 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v88 - v8;
  v10 = (int *)type metadata accessor for SegueLink(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C4F8 != -1)
    swift_once(&qword_10119C4F8, sub_10066DE80);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124D548);
  v14 = sub_10005B704((uint64_t)a1, (uint64_t)v12, type metadata accessor for SegueLink);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.info.getter(v15, v16);
  v18 = os_log_type_enabled(v15, v17);
  v98 = v4;
  if (v18)
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v100[0] = v20;
    *(_DWORD *)v19 = 136446210;
    v97 = v19 + 4;
    v21 = type metadata accessor for SegueContext(0);
    sub_10004A160((uint64_t)&v12[*(int *)(v21 + 20)], (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
    v22 = String.init<A>(describing:)(v9, v5);
    v103 = sub_100322200(v22, v23, (uint64_t *)v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104);
    swift_bridgeObjectRelease();
    sub_10005B748((uint64_t)v12, type metadata accessor for SegueLink);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "Initiating segue via link for item: %{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v24 = v20;
    v4 = v98;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    sub_10005B748((uint64_t)v12, type metadata accessor for SegueLink);
  }

  v25 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v26 = *a1;
  v27 = (int *)type metadata accessor for SegueContext(0);
  v28 = *((unsigned __int8 *)a1 + v27[6]);
  v29 = (char *)a1 + v10[14];
  v30 = *(void **)v29;
  v31 = v29[8];
  v32 = v25;
  sub_1000A4100(v30, v31);
  v94 = (void *)sub_1008252B4(v30, v31);
  sub_1000A4224(v30, v31);
  v101 = 0;
  memset(v100, 0, sizeof(v100));
  v102 = xmmword_100EA93A0;
  v33 = (uint64_t *)((char *)a1 + v10[8]);
  v34 = *v33;
  if (!*v33)
  {
    v79 = v33[1];
    v80 = (uint64_t *)&unk_10119CBE0;
    v81 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v82 = &qword_1011C5B90;
    v83 = &unk_100EC0A50;
LABEL_19:
    v84 = sub_100049F28(v82, v80, (uint64_t)v83);
    EnvironmentObject.error()(0, v79, v81, v84);
    __break(1u);
    goto LABEL_20;
  }
  swift_retain();
  sub_100823DD8((uint64_t)v4);
  v35 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 0, 1, v35);
  v36 = sub_10004A160((uint64_t)a1 + v27[5], v99, (uint64_t *)&unk_1011A20D0);
  v37 = *(uint64_t (**)(uint64_t))((char *)a1 + v27[7]);
  v96 = v28;
  v95 = v32;
  if (v37)
    v93 = v37(v36);
  else
    v93 = 0;
  v38 = (char *)a1 + v10[5];
  v39 = *(_QWORD *)v38;
  v40 = *((_QWORD *)v38 + 1);
  v41 = v38[16];
  v42 = sub_100007E8C(&qword_10119CBF8);
  v43 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v44 = StateObject.wrappedValue.getter(v39, v40, v41, v42, v43);
  v45 = (uint64_t *)((char *)a1 + v10[6]);
  v46 = *v45;
  if (!*v45)
  {
    v79 = v45[1];
    v80 = (uint64_t *)&unk_1011B4E40;
    v81 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v82 = (unint64_t *)&unk_10119CC10;
    v83 = &protocol conformance descriptor for PresentedViewState<A>;
    goto LABEL_19;
  }
  v47 = (uint64_t *)((char *)a1 + v10[7]);
  v48 = *v47;
  if (!*v47)
  {
    v79 = v47[1];
    swift_retain();
    v80 = &qword_10119F4E8;
    v81 = sub_100007E8C(&qword_10119F4E8);
    v82 = &qword_1011B4E50;
    v83 = &protocol conformance descriptor for PresentedViewState<A>;
    goto LABEL_19;
  }
  v91 = v44;
  v97 = v26;
  v49 = (char *)a1 + v10[11];
  v50 = *(void **)v49;
  v51 = v49[8];
  v90 = v48;
  swift_retain();
  v92 = v46;
  swift_retain();
  sub_1000A4100(v50, v51);
  v89 = sub_100824044(v50, v51);
  sub_1000A4224(v50, v51);
  v53 = (void **)((char *)a1 + v10[9]);
  if (!*v53)
  {
LABEL_20:
    v85 = v53[1];
    v86 = type metadata accessor for TabSelectionManager(0);
    v87 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    swift_retain();
    result = EnvironmentObject.error()(0, v85, v86, v87);
    __break(1u);
    return result;
  }
  __chkstk_darwin(v52);
  sub_1000502A4();
  KeyPath = swift_getKeyPath(&unk_100EC5028);
  __chkstk_darwin(KeyPath);
  v55 = swift_getKeyPath(&unk_100EC5060);
  swift_retain();
  swift_retain();
  static Published.subscript.getter(&v103, v56, KeyPath, v55);
  swift_release();
  swift_release();
  swift_release();
  v57 = v103;
  v58 = (char *)a1 + v10[12];
  v59 = *(_QWORD *)v58;
  v60 = *((_QWORD *)v58 + 1);
  v61 = v58[16];
  sub_1000A410C(*(_QWORD *)v58, v60, v61);
  sub_100824224(v59, v60, v61);
  sub_1000A4230(v59, v60, v61);
  v62 = (char *)a1 + v10[13];
  v63 = *(_QWORD *)v62;
  v64 = *((_QWORD *)v62 + 1);
  v65 = v62[16];
  sub_1000A411C(*(_QWORD *)v62, v64, v65);
  sub_100824400(v63, v64, v65, &v103);
  sub_1000A4240(v63, v64, v65);
  v66 = v103;
  v67 = v104[0];
  sub_10066D160(v57);
  v69 = v68;
  v71 = v70;
  swift_bridgeObjectRelease();
  if (v67 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v66 = sub_10066D7A8();
    v67 = v72;
    swift_bridgeObjectRelease();
  }
  swift_release();
  sub_1000A411C(v63, v64, v65);
  sub_100824400(v63, v64, v65, &v103);
  sub_1000A4240(v63, v64, v65);
  v73 = v103;
  v74 = v104[0];
  v104[2] = _s18PerformanceConteXtVMa(0);
  v75 = sub_100049F68(&v103);
  sub_1005F5640((uint64_t)v100, v34, (uint64_t)v98, v99, v93, v91, v92, v90, (uint64_t)v75, v89, v69, v71, v66, v67, v73, v74);
  v76 = v94;
  v77 = v95;
  JSSegueCoordinator.initiateSegue(source:type:snapshotImpressions:pageDetailsProvider:performanceContext:)(v97, v96, (uint64_t)_swiftEmptyArrayStorage, v94, (uint64_t)&v103);

  return sub_10004FF60((uint64_t)&v103, &qword_10119DCC0);
}

uint64_t sub_10060A274()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_10119CBF8);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return PresentedViewState.init()();
}

uint64_t sub_10060A2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  char *v37;
  _BOOL8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  ValueMetadata *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v70 = a2;
  v3 = sub_100007E8C(&qword_10119F840);
  __chkstk_darwin(v3);
  v67 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v7);
  v8 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 24);
  v57 = *(_QWORD *)(a1 + 16);
  v56 = v9;
  v10 = type metadata accessor for Button(0, v57, v9);
  v68 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v58 = (char *)&v53 - v11;
  v12 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v59 = v10;
  v13 = type metadata accessor for ModifiedContent(0, v10, v12);
  v69 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v60 = (char *)&v53 - v14;
  v15 = sub_100044B54(&qword_1011BD928);
  v65 = v15;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v10);
  v55 = WitnessTable;
  v17 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v76 = WitnessTable;
  v77 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v62 = v18;
  v64 = sub_1004E74C0();
  v71 = v13;
  v72 = v15;
  v73 = &type metadata for Modifier;
  v74 = v18;
  v75 = v64;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v71, &opaque type descriptor for <<opaque return type of View.viewPresenting<A, B>(_:modifier:)>>, 0);
  v66 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v54 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v63 = (uint64_t)&v53 - v23;
  v24 = v61;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v61, a1, v22);
  v25 = *(unsigned __int8 *)(v5 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = swift_allocObject(&unk_1010D3268, v26 + v6, v25 | 7);
  v28 = v57;
  v29 = v56;
  *(_QWORD *)(v27 + 16) = v57;
  *(_QWORD *)(v27 + 24) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v27 + v26, v8, a1);
  v30 = v24;
  v31 = (_QWORD *)(v24 + *(int *)(a1 + 36));
  v32 = v58;
  Button.init(action:label:)(sub_10060B2A8, v27, *v31, v31[1], v28, v29);
  v33 = v30;
  v34 = v67;
  sub_10004A160(v30, v67, &qword_10119F840);
  v35 = type metadata accessor for SegueContext(0);
  v36 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35) == 1;
  sub_10004FF60(v34, &qword_10119F840);
  v37 = v60;
  v38 = v36;
  v39 = v59;
  View.disabled(_:)(v38, v59, v55);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v32, v39);
  v40 = v33 + *(int *)(a1 + 40);
  v41 = *(_QWORD *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  v43 = *(unsigned __int8 *)(v40 + 16);
  v44 = sub_100007E8C(&qword_10119CBF8);
  v45 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v46 = StateObject.wrappedValue.getter(v41, v42, v43, v44, v45);
  v47 = (uint64_t)v54;
  v48 = v62;
  sub_1004E7400(v46, v13, v62);
  v49 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v37, v13, v49);
  v71 = v13;
  v72 = v65;
  v73 = &type metadata for Modifier;
  v74 = v48;
  v75 = v64;
  swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.viewPresenting<A, B>(_:modifier:)>>, 1);
  v50 = v63;
  sub_10081EB14(v47, OpaqueTypeMetadata2, v63);
  v51 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v51(v47, OpaqueTypeMetadata2);
  sub_1000EA744(v50, OpaqueTypeMetadata2, v70);
  return ((uint64_t (*)(uint64_t, uint64_t))v51)(v50, OpaqueTypeMetadata2);
}

void sub_10060A72C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  void **v44;
  void *v45;
  char v46;
  id v47;
  id v48;
  void *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(__n128);
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char v72;
  uint64_t v73;
  uint64_t KeyPath;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  unint64_t *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint8_t *v114;
  void **v115;
  void *v116;
  id v117;
  char *v118;
  uint64_t v119;
  _OWORD v120[3];
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  _QWORD v124[4];

  v116 = a2;
  v117 = (id)a3;
  v4 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v4);
  v119 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v106 - v10;
  v12 = sub_100007E8C(&qword_10119F840);
  __chkstk_darwin(v12);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for SegueContext(0);
  v16 = *((_QWORD *)v15 - 1);
  __chkstk_darwin(v15);
  v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (void **)((char *)&v106 - v20);
  sub_10004A160(a1, (uint64_t)v14, &qword_10119F840);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15) != 1)
  {
    v118 = v8;
    sub_10005B6C0((uint64_t)v14, (uint64_t)v21, type metadata accessor for SegueContext);
    v28 = v21;
    if (qword_10119C4F8 != -1)
      swift_once(&qword_10119C4F8, sub_10066DE80);
    v29 = type metadata accessor for Logger(0);
    sub_100048B14(v29, (uint64_t)qword_10124D548);
    v30 = sub_10005B704((uint64_t)v21, (uint64_t)v18, type metadata accessor for SegueContext);
    v31 = Logger.logObject.getter(v30);
    v33 = static os_log_type_t.info.getter(v31, v32);
    v34 = os_log_type_enabled(v31, v33);
    v115 = v21;
    if (v34)
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v120[0] = v36;
      *(_DWORD *)v35 = 136446210;
      v114 = v35 + 4;
      sub_10004A160((uint64_t)&v18[v15[5]], (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
      v37 = String.init<A>(describing:)(v11, v6);
      v123 = sub_100322200(v37, v38, (uint64_t *)v120);
      v28 = v115;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, v124);
      swift_bridgeObjectRelease();
      sub_10005B748((uint64_t)v18, type metadata accessor for SegueContext);
      _os_log_impl((void *)&_mh_execute_header, v31, v33, "Initiating segue via link for item: %{public}s", v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_10005B748((uint64_t)v18, type metadata accessor for SegueContext);
    }

    v39 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
    v40 = *v28;
    LODWORD(v114) = *((unsigned __int8 *)v28 + v15[6]);
    v42 = (int *)type metadata accessor for SegueButton(0, (uint64_t)v116, (uint64_t)v117, v41);
    v43 = a1 + v42[19];
    v44 = v28;
    v45 = *(void **)v43;
    v46 = *(_BYTE *)(v43 + 8);
    v47 = v39;
    v48 = v40;
    sub_1000A4100(v45, v46);
    v49 = (void *)sub_1008252B4(v45, v46);
    sub_1000A4224(v45, v46);
    v121 = 0;
    memset(v120, 0, sizeof(v120));
    v122 = xmmword_100EA93A0;
    v50 = (uint64_t *)(a1 + v42[13]);
    if (*v50)
    {
      v51 = *v50;
      swift_retain();
      v52 = v119;
      sub_100823DD8(v119);
      v53 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
      sub_10004A160((uint64_t)v44 + v15[5], (uint64_t)v118, (uint64_t *)&unk_1011A20D0);
      v54 = (char *)v44 + v15[7];
      v55 = *(uint64_t (**)(__n128))v54;
      v116 = v48;
      v113 = v49;
      if (v55)
      {
        v56 = *((_QWORD *)v54 + 1);
        v57 = swift_retain();
        v58 = v55(v57);
        sub_10004BA30((uint64_t)v55, v56);
      }
      else
      {
        v58 = 0;
      }
      v59 = a1 + v42[10];
      v60 = *(_QWORD *)v59;
      v61 = *(_QWORD *)(v59 + 8);
      v62 = *(unsigned __int8 *)(v59 + 16);
      v63 = sub_100007E8C(&qword_10119CBF8);
      v64 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v65 = StateObject.wrappedValue.getter(v60, v61, v62, v63, v64);
      v66 = (uint64_t *)(a1 + v42[11]);
      v67 = *v66;
      if (*v66)
      {
        v110 = v65;
        v112 = v58;
        v117 = v47;
        v68 = (uint64_t *)(a1 + v42[12]);
        v69 = *v68;
        if (*v68)
        {
          v70 = a1 + v42[16];
          v71 = *(void **)v70;
          v72 = *(_BYTE *)(v70 + 8);
          v109 = v69;
          swift_retain();
          v111 = v67;
          swift_retain();
          sub_1000A4100(v71, v72);
          v108 = sub_100824044(v71, v72);
          sub_1000A4224(v71, v72);
          v107 = v51;
          swift_retain();
          v73 = sub_10060B2F8((uint64_t)v42);
          __chkstk_darwin(v73);
          sub_1000502A4();
          KeyPath = swift_getKeyPath(&unk_100EC5028);
          __chkstk_darwin(KeyPath);
          v75 = swift_getKeyPath(&unk_100EC5060);
          swift_retain();
          static Published.subscript.getter(&v123, v76, KeyPath, v75);
          swift_release();
          swift_release();
          swift_release();
          LOBYTE(KeyPath) = v123;
          v77 = a1 + v42[17];
          v78 = *(_QWORD *)v77;
          v79 = *(_QWORD *)(v77 + 8);
          v80 = *(_BYTE *)(v77 + 16);
          sub_1000A410C(*(_QWORD *)v77, v79, v80);
          sub_100824224(v78, v79, v80);
          sub_1000A4230(v78, v79, v80);
          v81 = a1 + v42[18];
          v82 = *(_QWORD *)v81;
          v83 = *(_QWORD *)(v81 + 8);
          v84 = *(_BYTE *)(v81 + 16);
          sub_1000A411C(*(_QWORD *)v81, v83, v84);
          sub_100824400(v82, v83, v84, &v123);
          sub_1000A4240(v82, v83, v84);
          v85 = v123;
          v86 = v124[0];
          v87 = v107;
          sub_10066D160(KeyPath);
          v89 = v88;
          v91 = v90;
          swift_bridgeObjectRelease();
          if (v86 >> 60 == 15)
          {
            swift_bridgeObjectRetain();
            v92 = v87;
            v85 = sub_10066D7A8();
            v86 = v93;
            swift_bridgeObjectRelease();
          }
          else
          {
            v92 = v87;
          }
          swift_release();
          v94 = v117;
          sub_1000A411C(v82, v83, v84);
          sub_100824400(v82, v83, v84, &v123);
          sub_1000A4240(v82, v83, v84);
          v96 = v123;
          v95 = v124[0];
          v124[2] = _s18PerformanceConteXtVMa(0);
          v97 = sub_100049F68(&v123);
          sub_1005F5640((uint64_t)v120, v92, v119, (uint64_t)v118, v112, v110, v111, v109, (uint64_t)v97, v108, v89, v91, v85, v86, v96, v95);
          v98 = v116;
          v99 = v113;
          JSSegueCoordinator.initiateSegue(source:type:snapshotImpressions:pageDetailsProvider:performanceContext:)(v116, (char)v114, (uint64_t)_swiftEmptyArrayStorage, v113, (uint64_t)&v123);

          sub_10005B748((uint64_t)v115, type metadata accessor for SegueContext);
          sub_10004FF60((uint64_t)&v123, &qword_10119DCC0);
          return;
        }
        v100 = v68[1];
        swift_retain();
        v101 = &qword_10119F4E8;
        v102 = sub_100007E8C(&qword_10119F4E8);
        v103 = &qword_1011B4E50;
        v104 = &protocol conformance descriptor for PresentedViewState<A>;
      }
      else
      {
        v100 = v66[1];
        v101 = (uint64_t *)&unk_1011B4E40;
        v102 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
        v103 = (unint64_t *)&unk_10119CC10;
        v104 = &protocol conformance descriptor for PresentedViewState<A>;
      }
    }
    else
    {
      v100 = v50[1];
      v101 = (uint64_t *)&unk_10119CBE0;
      v102 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v103 = &qword_1011C5B90;
      v104 = &unk_100EC0A50;
    }
    v105 = sub_100049F28(v103, v101, (uint64_t)v104);
    EnvironmentObject.error()(0, v100, v102, v105);
    __break(1u);
    return;
  }
  sub_10004FF60((uint64_t)v14, &qword_10119F840);
  if (qword_10119C4F8 != -1)
    swift_once(&qword_10119C4F8, sub_10066DE80);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100048B14(v22, (uint64_t)qword_10124D548);
  v24 = Logger.logObject.getter(v23);
  v26 = static os_log_type_t.info.getter(v24, v25);
  if (os_log_type_enabled(v24, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v26, "nil context for SegueButton", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

}

uint64_t sub_10060B0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = (int *)type metadata accessor for SegueButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (id *)(v4 + v7);
  v10 = type metadata accessor for SegueContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4 + v7, 1, v10))
  {

    v11 = (char *)v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (*(id *)((char *)v9 + *(int *)(v10 + 28)))
      swift_release();
  }
  swift_release();
  sub_1000A6174(*(uint64_t *)((char *)v9 + v5[10]), *(uint64_t *)((char *)v9 + v5[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v14 = (char *)v9 + v5[15];
  v15 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)((char *)v9 + v5[16]), *((_BYTE *)v9 + v5[16] + 8));
  sub_1000A4230(*(uint64_t *)((char *)v9 + v5[17]), *(uint64_t *)((char *)v9 + v5[17] + 8), *((_BYTE *)v9 + v5[17] + 16));
  sub_1000A4240(*(uint64_t *)((char *)v9 + v5[18]), *(unint64_t *)((char *)v9 + v5[18] + 8), *((_BYTE *)v9 + v5[18] + 16));
  sub_1000A4224(*(id *)((char *)v9 + v5[19]), *((_BYTE *)v9 + v5[19] + 8));
  return swift_deallocObject(v4, v7 + v8);
}

void sub_10060B2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(void **)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SegueButton(0, (uint64_t)v5, v6, a4) - 8) + 80);
  sub_10060A72C(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_10060B2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 56));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = type metadata accessor for TabSelectionManager(0);
    v6 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    result = EnvironmentObject.error()(0, v4, v5, v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_10060B368()
{
  return 16;
}

__n128 sub_10060B374(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void **sub_10060B380(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  id v56;
  char v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  char v72;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for SegueContext(0);
    v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    if (v14(v11, 1, v12))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v7 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    v17 = v8[7];
    v18 = (void **)((char *)v7 + v17);
    v19 = (void **)((char *)a2 + v17);
    if (*v19)
    {
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    v21 = a3[5];
    v22 = (char *)v7 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *((_QWORD *)v23 + 1);
    v26 = v23[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    *((_QWORD *)v22 + 1) = v25;
    v22[16] = v26;
    v27 = a3[6];
    v28 = a3[7];
    v29 = (void **)((char *)v7 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = *v30;
    v32 = v30[1];
    *v29 = v31;
    v29[1] = v32;
    v33 = (void **)((char *)v7 + v28);
    v34 = (uint64_t *)((char *)a2 + v28);
    v36 = *v34;
    v35 = v34[1];
    *v33 = v36;
    v33[1] = v35;
    v37 = a3[8];
    v38 = a3[9];
    v39 = (void **)((char *)v7 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v42 = *v40;
    v41 = v40[1];
    *v39 = v42;
    v39[1] = v41;
    v43 = (void **)((char *)v7 + v38);
    v44 = (uint64_t *)((char *)a2 + v38);
    v46 = *v44;
    v45 = v44[1];
    *v43 = v46;
    v43[1] = v45;
    v47 = a3[10];
    v48 = (void **)((char *)v7 + v47);
    v49 = (void **)((char *)a2 + v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v50 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      v52 = 1;
    }
    else
    {
      *v48 = *v49;
      swift_retain();
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v52);
    v53 = a3[11];
    v54 = (char *)v7 + v53;
    v55 = (char *)a2 + v53;
    v56 = *(id *)v55;
    v57 = v55[8];
    sub_1000A4100(*(id *)v55, v57);
    *(_QWORD *)v54 = v56;
    v54[8] = v57;
    v58 = a3[12];
    v59 = (char *)v7 + v58;
    v60 = (char *)a2 + v58;
    v61 = *(_QWORD *)v60;
    v62 = *((_QWORD *)v60 + 1);
    LOBYTE(v54) = v60[16];
    sub_1000A410C(*(_QWORD *)v60, v62, (char)v54);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
    v59[16] = (char)v54;
    v63 = a3[13];
    v64 = (char *)v7 + v63;
    v65 = (char *)a2 + v63;
    v66 = *(_QWORD *)v65;
    v67 = *((_QWORD *)v65 + 1);
    LOBYTE(v54) = v65[16];
    sub_1000A411C(*(_QWORD *)v65, v67, (char)v54);
    *(_QWORD *)v64 = v66;
    *((_QWORD *)v64 + 1) = v67;
    v64[16] = (char)v54;
    v68 = a3[14];
    v69 = (char *)v7 + v68;
    v70 = (char *)a2 + v68;
    v71 = *(id *)v70;
    v72 = v70[8];
    sub_1000A4100(*(id *)v70, v72);
    *(_QWORD *)v69 = v71;
    v69[8] = v72;
  }
  return v7;
}

void sub_10060B670(id *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for SegueContext(0);
  v5 = (char *)a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  if (*(id *)((char *)a1 + *(int *)(v4 + 28)))
    swift_release();
  sub_1000A6174(*(uint64_t *)((char *)a1 + a2[5]), *(uint64_t *)((char *)a1 + a2[5] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = (char *)a1 + a2[10];
  v9 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)((char *)a1 + a2[11]), *((_BYTE *)a1 + a2[11] + 8));
  sub_1000A4230(*(uint64_t *)((char *)a1 + a2[12]), *(uint64_t *)((char *)a1 + a2[12] + 8), *((_BYTE *)a1 + a2[12] + 16));
  sub_1000A4240(*(uint64_t *)((char *)a1 + a2[13]), *(unint64_t *)((char *)a1 + a2[13] + 8), *((_BYTE *)a1 + a2[13] + 16));
  sub_1000A4224(*(id *)((char *)a1 + a2[14]), *((_BYTE *)a1 + a2[14] + 8));
}

void **sub_10060B7EC(void **a1, void **a2, int *a3)
{
  void *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  char v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  id v70;
  char v71;

  v6 = *a2;
  *a1 = *a2;
  v7 = (int *)type metadata accessor for SegueContext(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for GenericMusicItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  if (v13(v10, 1, v11))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
  v16 = v7[7];
  v17 = (void **)((char *)a1 + v16);
  v18 = (void **)((char *)a2 + v16);
  if (*v18)
  {
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v20 = a3[5];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = *((_QWORD *)v22 + 1);
  v25 = v22[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v22, v24);
  *(_QWORD *)v21 = v23;
  *((_QWORD *)v21 + 1) = v24;
  v21[16] = v25;
  v26 = a3[6];
  v27 = a3[7];
  v28 = (void **)((char *)a1 + v26);
  v29 = (uint64_t *)((char *)a2 + v26);
  v30 = *v29;
  v31 = v29[1];
  *v28 = v30;
  v28[1] = v31;
  v32 = (void **)((char *)a1 + v27);
  v33 = (uint64_t *)((char *)a2 + v27);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  v36 = a3[8];
  v37 = a3[9];
  v38 = (void **)((char *)a1 + v36);
  v39 = (uint64_t *)((char *)a2 + v36);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  v42 = (void **)((char *)a1 + v37);
  v43 = (uint64_t *)((char *)a2 + v37);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  v46 = a3[10];
  v47 = (void **)((char *)a1 + v46);
  v48 = (void **)((char *)a2 + v46);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v49 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v47, v48, v50);
    v51 = 1;
  }
  else
  {
    *v47 = *v48;
    swift_retain();
    v51 = 0;
  }
  swift_storeEnumTagMultiPayload(v47, v49, v51);
  v52 = a3[11];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = *(id *)v54;
  v56 = v54[8];
  sub_1000A4100(*(id *)v54, v56);
  *(_QWORD *)v53 = v55;
  v53[8] = v56;
  v57 = a3[12];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *(_QWORD *)v59;
  v61 = *((_QWORD *)v59 + 1);
  LOBYTE(v53) = v59[16];
  sub_1000A410C(*(_QWORD *)v59, v61, (char)v53);
  *(_QWORD *)v58 = v60;
  *((_QWORD *)v58 + 1) = v61;
  v58[16] = (char)v53;
  v62 = a3[13];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = *(_QWORD *)v64;
  v66 = *((_QWORD *)v64 + 1);
  LOBYTE(v53) = v64[16];
  sub_1000A411C(*(_QWORD *)v64, v66, (char)v53);
  *(_QWORD *)v63 = v65;
  *((_QWORD *)v63 + 1) = v66;
  v63[16] = (char)v53;
  v67 = a3[14];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = *(id *)v69;
  v71 = v69[8];
  sub_1000A4100(*(id *)v69, v71);
  *(_QWORD *)v68 = v70;
  v68[8] = v71;
  return a1;
}

void **sub_10060BAB4(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  char v56;
  void *v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  id v78;
  char v79;
  void *v80;
  char v81;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = (int *)type metadata accessor for SegueContext(0);
  v10 = v9[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for GenericMusicItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
  v19 = v9[7];
  v20 = (void **)((char *)a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = *(uint64_t *)((char *)a1 + v19);
  v23 = *(uint64_t *)((char *)a2 + v19);
  if (v22)
  {
    if (v23)
    {
      v24 = *((_QWORD *)v21 + 1);
      *v20 = v23;
      v20[1] = v24;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v23)
  {
    v25 = *((_QWORD *)v21 + 1);
    *v20 = v23;
    v20[1] = v25;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_14:
  v26 = a3[5];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *((_QWORD *)v28 + 1);
  v31 = v28[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v28, v30);
  v32 = *(_QWORD *)v27;
  v33 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v27[16] = v31;
  sub_1000A6174(v32, v33);
  v34 = a3[6];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  *(void **)((char *)a1 + v34) = *(void **)((char *)a2 + v34);
  swift_retain();
  swift_release();
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(void **)((char *)a1 + v37) = *(void **)((char *)a2 + v37);
  swift_retain();
  swift_release();
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  v40 = a3[8];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *(void **)((char *)a1 + v40) = *(void **)((char *)a2 + v40);
  swift_retain();
  swift_release();
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  v43 = a3[9];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  *(void **)((char *)a1 + v43) = *(void **)((char *)a2 + v43);
  swift_retain();
  swift_release();
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  if (a1 != a2)
  {
    v46 = a3[10];
    v47 = (void **)((char *)a1 + v46);
    v48 = (void **)((char *)a2 + v46);
    sub_10004FF60((uint64_t)a1 + v46, &qword_10119F4E0);
    v49 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
    {
      v50 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v47, v48, v50);
      v51 = 1;
    }
    else
    {
      *v47 = *v48;
      swift_retain();
      v51 = 0;
    }
    swift_storeEnumTagMultiPayload(v47, v49, v51);
  }
  v52 = a3[11];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = *(id *)v54;
  v56 = v54[8];
  sub_1000A4100(*(id *)v54, v56);
  v57 = *(void **)v53;
  v58 = v53[8];
  *(_QWORD *)v53 = v55;
  v53[8] = v56;
  sub_1000A4224(v57, v58);
  v59 = a3[12];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = *(_QWORD *)v61;
  v63 = *((_QWORD *)v61 + 1);
  LOBYTE(v53) = v61[16];
  sub_1000A410C(*(_QWORD *)v61, v63, (char)v53);
  v64 = *(_QWORD *)v60;
  v65 = *((_QWORD *)v60 + 1);
  v66 = v60[16];
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v60[16] = (char)v53;
  sub_1000A4230(v64, v65, v66);
  v67 = a3[13];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = *(_QWORD *)v69;
  v71 = *((_QWORD *)v69 + 1);
  LOBYTE(v53) = v69[16];
  sub_1000A411C(*(_QWORD *)v69, v71, (char)v53);
  v72 = *(_QWORD *)v68;
  v73 = *((_QWORD *)v68 + 1);
  v74 = v68[16];
  *(_QWORD *)v68 = v70;
  *((_QWORD *)v68 + 1) = v71;
  v68[16] = (char)v53;
  sub_1000A4240(v72, v73, v74);
  v75 = a3[14];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = *(id *)v77;
  v79 = v77[8];
  sub_1000A4100(*(id *)v77, v79);
  v80 = *(void **)v76;
  v81 = v76[8];
  *(_QWORD *)v76 = v78;
  v76[8] = v79;
  sub_1000A4224(v80, v81);
  return a1;
}

_QWORD *sub_10060BE98(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for SegueContext(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
  v13 = v6[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  v18 = a3[5];
  v19 = a3[6];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  v22 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(_OWORD *)v20 = v22;
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v23 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  v24 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload(v25, v27, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = a3[11];
  v30 = a3[12];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = (char *)a1 + v30;
  v34 = (char *)a2 + v30;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  v35 = a3[13];
  v36 = a3[14];
  v37 = (char *)a1 + v35;
  v38 = (char *)a2 + v35;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  v39 = (char *)a1 + v36;
  v40 = (char *)a2 + v36;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  return a1;
}

void **sub_10060C0C4(void **a1, void **a2, int *a3)
{
  void *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void *v71;
  char v72;

  v6 = *a1;
  *a1 = *a2;

  v7 = (int *)type metadata accessor for SegueContext(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for GenericMusicItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
  v17 = v7[7];
  v18 = (void **)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(uint64_t *)((char *)a1 + v17);
  v21 = *(uint64_t *)((char *)a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *((_QWORD *)v19 + 1);
      *v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *((_QWORD *)v19 + 1);
    *v18 = v21;
    v18[1] = v23;
    goto LABEL_14;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_14:
  v24 = a3[5];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = v26[16];
  v28 = *(_QWORD *)v25;
  v29 = *((_QWORD *)v25 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v27;
  sub_1000A6174(v28, v29);
  v30 = a3[6];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(void **)((char *)a1 + v30) = *(void **)((char *)a2 + v30);
  swift_release();
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(void **)((char *)a1 + v33) = *(void **)((char *)a2 + v33);
  swift_release();
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  v36 = a3[8];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(void **)((char *)a1 + v36) = *(void **)((char *)a2 + v36);
  swift_release();
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  v39 = a3[9];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(void **)((char *)a1 + v39) = *(void **)((char *)a2 + v39);
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  if (a1 != a2)
  {
    v42 = a3[10];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    sub_10004FF60((uint64_t)a1 + v42, &qword_10119F4E0);
    v45 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
    {
      v46 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
      swift_storeEnumTagMultiPayload(v43, v45, 1);
    }
    else
    {
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
  }
  v47 = a3[11];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *(_QWORD *)v49;
  LOBYTE(v49) = v49[8];
  v51 = *(void **)v48;
  v52 = v48[8];
  *(_QWORD *)v48 = v50;
  v48[8] = (char)v49;
  sub_1000A4224(v51, v52);
  v53 = a3[12];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = v55[16];
  v57 = *(_QWORD *)v54;
  v58 = *((_QWORD *)v54 + 1);
  v59 = v54[16];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v54[16] = v56;
  sub_1000A4230(v57, v58, v59);
  v60 = a3[13];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = v62[16];
  v64 = *(_QWORD *)v61;
  v65 = *((_QWORD *)v61 + 1);
  v66 = v61[16];
  *(_OWORD *)v61 = *(_OWORD *)v62;
  v61[16] = v63;
  sub_1000A4240(v64, v65, v66);
  v67 = a3[14];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = *(_QWORD *)v69;
  LOBYTE(v69) = v69[8];
  v71 = *(void **)v68;
  v72 = v68[8];
  *(_QWORD *)v68 = v70;
  v68[8] = (char)v69;
  sub_1000A4224(v71, v72);
  return a1;
}

uint64_t sub_10060C434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060C440);
}

uint64_t sub_10060C440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for SegueContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_10119F4F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v11);
  }
}

uint64_t sub_10060C4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060C504);
}

uint64_t sub_10060C504(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for SegueContext(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = sub_100007E8C(&qword_10119F4F0);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SegueLink(uint64_t a1)
{
  uint64_t result;

  result = qword_1011BD988;
  if (!qword_1011BD988)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SegueLink);
  return result;
}

void sub_10060C5E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  v2 = type metadata accessor for SegueContext(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100EC4F80;
    v6[2] = &unk_100EC4F98;
    v6[3] = &unk_100EC4F98;
    v6[4] = &unk_100EC4F98;
    v6[5] = &unk_100EC4F98;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F560, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_100EC4FB0;
      v6[8] = &unk_100EC4F80;
      v6[9] = &unk_100EC4F80;
      v6[10] = &unk_100EC4FB0;
      swift_initStructMetadata(a1, 256, 11, v6, a1 + 16);
    }
  }
}

uint64_t sub_10060C6AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[7];

  v1 = type metadata accessor for Button(255, *a1, a1[1]);
  v2 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = sub_100044B54(&qword_1011BD928);
  v6[5] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v1);
  v6[6] = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v6[0] = v3;
  v6[1] = v4;
  v6[2] = &type metadata for Modifier;
  v6[3] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  v6[4] = sub_1004E74C0();
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.viewPresenting<A, B>(_:modifier:)>>, 1);
}

uint64_t sub_10060C78C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA72E8, 1);
}

uint64_t sub_10060C7C4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for SegueLink(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;

  v6 = type metadata accessor for SegueContext(0);
  v7 = v0 + v3 + *(int *)(v6 + 20);
  v8 = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (*(_QWORD *)(v5 + *(int *)(v6 + 28)))
    swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + v1[5]), *(_QWORD *)(v5 + v1[5] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = v5 + v1[10];
  v11 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)(v5 + v1[11]), *(_BYTE *)(v5 + v1[11] + 8));
  sub_1000A4230(*(_QWORD *)(v5 + v1[12]), *(_QWORD *)(v5 + v1[12] + 8), *(_BYTE *)(v5 + v1[12] + 16));
  sub_1000A4240(*(_QWORD *)(v5 + v1[13]), *(_QWORD *)(v5 + v1[13] + 8), *(_BYTE *)(v5 + v1[13] + 16));
  sub_1000A4224(*(id *)(v5 + v1[14]), *(_BYTE *)(v5 + v1[14] + 8));
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10060C984()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SegueLink(0) - 8) + 80);
  return sub_100609A60((void **)(v0 + ((v1 + 16) & ~v1)));
}

unint64_t sub_10060C9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDA08;
  if (!qword_1011BDA08)
  {
    v1 = sub_100044B54(&qword_1011BD9E8);
    sub_100049F28(&qword_1011BDA10, &qword_1011BDA00, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011BDA18, &qword_1011BDA20, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDA08);
  }
  return result;
}

unint64_t sub_10060CA50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  unint64_t v10;

  result = qword_1011BDA28;
  if (!qword_1011BDA28)
  {
    v1 = sub_100044B54(&qword_1011BDA30);
    v2 = sub_100044B54(&qword_1011BD9F0);
    v3 = sub_100044B54(&qword_1011BD928);
    v6 = sub_100044B54(&qword_1011BD9E8);
    v7 = sub_10060C9B0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v5 = sub_1004E74C0();
    v6 = v2;
    v7 = v3;
    v8 = &type metadata for Modifier;
    v9 = OpaqueTypeConformance2;
    v10 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.viewPresenting<A, B>(_:modifier:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDA28);
  }
  return result;
}

uint64_t sub_10060CB54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = _s8MetadataV13ConfigurationOMa(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = a2[1];
      if (v13 == 1)
      {
        v14 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
      }
      else
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v13;
        v15 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v16 = *(int *)(a3 + 20);
    v17 = a1 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_10006B3F8(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    *(_BYTE *)(v17 + 8) = v20;
    v21 = *(int *)(a3 + 24);
    v22 = a1 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *(_BYTE *)(v23 + 8);
    sub_10006B3F8(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    *(_BYTE *)(v22 + 8) = v25;
  }
  return a1;
}

uint64_t _s8MetadataV13ConfigurationOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDB50, (uint64_t)&_s8MetadataV13ConfigurationOMn);
}

uint64_t sub_10060CCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = _s8MetadataV13ConfigurationOMa(0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    if (*(_QWORD *)(a1 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_10060CD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v6 = _s8MetadataV13ConfigurationOMa(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 8);
    if (v11 == 1)
    {
      v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v11;
      v13 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_10006B3F8(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v18;
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10006B3F8(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  return a1;
}

uint64_t sub_10060CE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s8MetadataV13ConfigurationOMa);
    v6 = _s8MetadataV13ConfigurationOMa(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      if (*(_QWORD *)(a2 + 8) == 1)
      {
        v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
      }
      else
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10006B3F8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_10006B604(v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10006B3F8(*(_QWORD *)v21, v23);
  v24 = *(_QWORD *)v20;
  v25 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  sub_10006B604(v24, v25);
  return a1;
}

char *sub_10060CFEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;

  v6 = _s8MetadataV13ConfigurationOMa(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

char *sub_10060D0B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s8MetadataV13ConfigurationOMa);
    v6 = _s8MetadataV13ConfigurationOMa(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  v13 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  sub_10006B604(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)v16;
  LOBYTE(v16) = v16[8];
  v18 = *(_QWORD *)v15;
  v19 = v15[8];
  *(_QWORD *)v15 = v17;
  v15[8] = (char)v16;
  sub_10006B604(v18, v19);
  return a1;
}

uint64_t sub_10060D1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060D1C4);
}

uint64_t sub_10060D1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = _s8MetadataV13ConfigurationOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_10060D240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060D24C);
}

uint64_t sub_10060D24C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s8MetadataV13ConfigurationOMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t _s8MetadataVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDAA0, (uint64_t)&_s8MetadataVMn);
}

uint64_t sub_10060D2DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = _s8MetadataV13ConfigurationOMa(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10060D350(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      if (v12 == 1)
      {
        v13 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
      }
      else
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v12;
        v14 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v14;
        swift_bridgeObjectRetain(v12);
        swift_bridgeObjectRetain(v14);
      }
      v15 = a2[4];
      *(_QWORD *)(a1 + 32) = v15;
      swift_bridgeObjectRetain(v15);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10060D440(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    v5 = a1[1];
    if (v5 != 1)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(a1[3]);
    }
    return swift_bridgeObjectRelease(a1[4]);
  }
}

uint64_t sub_10060D4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 8);
    if (v10 == 1)
    {
      v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v10;
      v12 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v12;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v12);
    }
    v13 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v13;
    swift_bridgeObjectRetain(v13);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t sub_10060D56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s8MetadataV13ConfigurationOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      if (*(_QWORD *)(a2 + 8) == 1)
      {
        v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
      }
      else
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_10060D658(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10060D6E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s8MetadataV13ConfigurationOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10060D788(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_10060D7F8@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10060F7F4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for AdaptativeContainerOrientationKey, &type metadata for AdaptativeContainerOrientationKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10060D844(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10060F7F4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for AdaptativeContainerOrientationKey, &type metadata for AdaptativeContainerOrientationKey, v1);
}

uint64_t sub_10060D88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v2 = sub_100007E8C(&qword_1011BDB90);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011BDB98);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011BDBA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011BDBA8);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011BDBB0);
  __chkstk_darwin(v33);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011BDBB8);
  __chkstk_darwin(v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10060DBB8(v1, (uint64_t)v7);
  sub_10060DF3C((uint64_t)v4);
  sub_10004A160((uint64_t)v4, (uint64_t)&v10[*(int *)(v8 + 36)], &qword_1011BDB90);
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011BDB98);
  sub_10004FF60((uint64_t)v4, &qword_1011BDB90);
  sub_10004FF60((uint64_t)v7, &qword_1011BDB98);
  v19 = sub_10060E258();
  KeyPath = swift_getKeyPath(&unk_100EC5278);
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011BDBA0);
  v21 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v21 = KeyPath;
  v21[1] = v19;
  sub_10004FF60((uint64_t)v10, &qword_1011BDBA0);
  v22 = v1 + *(int *)(_s8MetadataVMa(0) + 20);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10006B3F8(*(_QWORD *)v22, v24);
  LOBYTE(KeyPath) = sub_100824E38(v23, v24);
  sub_10006B604(v23, v24);
  v25 = swift_getKeyPath(&unk_100EC52A8);
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_1011BDBA8);
  v26 = v33;
  v27 = &v15[*(int *)(v33 + 36)];
  *(_QWORD *)v27 = v25;
  v27[8] = (KeyPath & 1) == 0;
  sub_10004FF60((uint64_t)v13, &qword_1011BDBA8);
  v28 = AccessibilityIdentifier.containerDetailHeaderMetadata.unsafeMutableAddressor();
  v29 = *v28;
  v30 = v28[1];
  v31 = sub_10060F44C();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v29, v30, v26, v31);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v15, &qword_1011BDBB0);
  return sub_10060F6D4((uint64_t)v18, v34);
}

uint64_t sub_10060DBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];

  v46 = a2;
  v3 = type metadata accessor for Font.TextStyle(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = _s8MetadataV13AlbumMetadataVMa(0);
  __chkstk_darwin(v45);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v44 = (uint64_t)&v41 - v9;
  v10 = sub_100007E8C(&qword_1011BDC08);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s8MetadataV13ConfigurationOMa(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    v21 = v45;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    v22 = Date.lastUpdatedDateString.getter();
    if (v23)
    {
      v47[0] = v22;
      v47[1] = v23;
      v24 = sub_100055B68();
      v25 = Text.init<A>(_:)(v47, &type metadata for String, v24);
      v28 = v27 & 1;
    }
    else
    {
      v25 = 0;
      v28 = 0;
      v26 = 0;
    }
    *v12 = v25;
    v12[1] = v23;
    v12[2] = v28;
    v12[3] = v26;
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    v38 = sub_100007E8C((uint64_t *)&unk_1011B57F0);
    v39 = sub_1001DAEF8();
    v40 = sub_100048748(&qword_1011BDBF0, _s8MetadataV13AlbumMetadataVMa, (uint64_t)&unk_100EC5328);
    _ConditionalContent<>.init(storage:)(v12, v38, v21, v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v29 = *((_QWORD *)v19 + 4);
    v30 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v7 = *(_OWORD *)v19;
    *((_OWORD *)v7 + 1) = v30;
    *((_QWORD *)v7 + 4) = v29;
    *((_QWORD *)v7 + 5) = swift_getKeyPath(&unk_100EC52D8);
    v7[48] = 0;
    v31 = v45;
    v47[0] = 0x4032000000000000;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v5, enum case for Font.TextStyle.caption2(_:), v43);
    v32 = sub_1000E4360();
    ScaledMetric.init(wrappedValue:relativeTo:)(v47, v5, &type metadata for CGFloat, v32);
    v33 = v44;
    sub_10060F7B0((uint64_t)v7, v44);
    sub_10005B704(v33, (uint64_t)v12, _s8MetadataV13AlbumMetadataVMa);
    swift_storeEnumTagMultiPayload(v12, v10, 1);
    v34 = sub_100007E8C((uint64_t *)&unk_1011B57F0);
    v35 = sub_1001DAEF8();
    v36 = sub_100048748(&qword_1011BDBF0, _s8MetadataV13AlbumMetadataVMa, (uint64_t)&unk_100EC5328);
    _ConditionalContent<>.init(storage:)(v12, v34, v31, v35, v36);
    return sub_10005B748(v33, _s8MetadataV13AlbumMetadataVMa);
  }
}

uint64_t sub_10060DF3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  __n128 v21;
  void (*v22)(char *, char *, uint64_t);
  unsigned int *v23;
  float v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  void *v39;
  void *v40;
  __int128 v41;
  void *v42;
  void *v43;

  v37 = a1;
  v2 = type metadata accessor for BlendMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - v10;
  v12 = v1 + *(int *)(_s8MetadataVMa(0) + 24);
  v13 = *(_QWORD *)v12;
  v14 = *(_BYTE *)(v12 + 8);
  sub_10006B3F8(*(_QWORD *)v12, v14);
  v15 = sub_100824E5C(v13, v14);
  v16 = sub_10006B604(v13, v14);
  if ((v15 & 0xFE) == 2)
  {
    v17 = static HierarchicalShapeStyle.secondary.getter(v16);
    v39 = &type metadata for HierarchicalShapeStyle;
    v40 = &protocol witness table for HierarchicalShapeStyle;
    LODWORD(v38) = v17;
  }
  else
  {
    if ((v15 & 1) != 0)
      v18 = static Color.black.getter(v16);
    else
      v18 = static Color.white.getter(v16);
    v42 = &type metadata for Color;
    v43 = &protocol witness table for Color;
    *(_QWORD *)&v41 = v18;
    sub_100064C48(&v41, (uint64_t)&v38);
  }
  sub_100064C48(&v38, (uint64_t)&v41);
  sub_10006B3F8(v13, v14);
  v19 = sub_100824E5C(v13, v14);
  sub_10006B604(v13, v14);
  sub_10006B3F8(v13, v14);
  v20 = sub_100824E5C(v13, v14);
  sub_10006B604(v13, v14);
  if ((v20 & 0xFE) == 2)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for BlendMode.normal(_:), v2);
    v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  }
  else
  {
    v23 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if ((v20 & 1) != 0)
      v23 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *v23, v2);
    v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v22(v8, v5, v2);
  }
  v21.n128_u32[0] = 1055286886;
  if ((v19 & 1) == 0)
    v21.n128_f32[0] = 0.6;
  if ((v19 & 0xFE) == 2)
    v24 = 1.0;
  else
    v24 = v21.n128_f32[0];
  ((void (*)(char *, char *, uint64_t, __n128))v22)(v11, v8, v2, v21);
  v25 = v42;
  v26 = v43;
  v27 = sub_100007E68(&v41, (uint64_t)v42);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v31 + 16))(v30, v28);
  v32 = AnyShapeStyle.init<A>(_:)(v30, v25, v26);
  v33 = sub_100007E8C(&qword_1011BDB90);
  v34 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v37 + *(int *)(v33 + 36), v11, v2);
  *(_QWORD *)v34 = v32;
  *(float *)(v34 + 8) = v24;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v41);
}

uint64_t sub_10060E258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v18;

  v1 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + *(int *)(_s8MetadataVMa(0) + 20);
  v9 = *(_QWORD *)v8;
  v10 = *(_BYTE *)(v8 + 8);
  sub_10006B3F8(*(_QWORD *)v8, v10);
  v11 = sub_100824E38(v9, v10);
  sub_10006B604(v9, v10);
  v12 = (unsigned int *)&enum case for Font.TextStyle.caption2(_:);
  if ((v11 & 1) != 0)
    v12 = (unsigned int *)&enum case for Font.TextStyle.footnote(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v12, v4);
  v13 = type metadata accessor for Font.Design(0);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
  v15 = static Font.Weight.bold.getter(v14);
  v16 = static Font.system(_:design:weight:)(v7, v3, *(_QWORD *)&v15, 0);
  sub_10004FF60((uint64_t)v3, &qword_1011C4F30);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_10060E3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  unsigned int *v9;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_10006B3F8(*(_QWORD *)v4, v6);
  v7 = sub_100824E38(v5, v6);
  sub_10006B604(v5, v6);
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = (unsigned int *)&enum case for Font.TextStyle.caption2(_:);
  if ((v7 & 1) != 0)
    v9 = (unsigned int *)&enum case for Font.TextStyle.footnote(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, *v9, v8);
}

uint64_t sub_10060E460(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011BDB88, _s8MetadataVMa, (uint64_t)&unk_100EC5224);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10060E49C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA73A4, 1);
}

void sub_10060E4AC()
{
  uint64_t *v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v2 = *v0;
  v3 = v0[1];
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 2144194;
  v1._object = (void *)0xA300000000000000;
  String.append(_:)(v1);
  qword_1011BDA38 = v2;
  unk_1011BDA40 = v3;
}

double sub_10060E500@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int v4;
  __n128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  double result;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  _BYTE v50[24];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = sub_1000496EC((uint64_t)&off_1010ACDB8);
  v6 = sub_10060E704(v4, v5);
  swift_bridgeObjectRelease();
  if (qword_10119C3C8 != -1)
    swift_once(&qword_10119C3C8, sub_10060E4AC);
  v8 = qword_1011BDA38;
  v7 = unk_1011BDA40;
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_10006B3F8(v9, v10);
  v11 = sub_100824E38(v9, v10);
  v12 = sub_10006B604(v9, v10);
  if ((v11 & 1) != 0)
    v13 = static HorizontalAlignment.leading.getter(v12);
  else
    v13 = static HorizontalAlignment.center.getter(v12);
  v14 = v13;
  sub_10060EEE4((uint64_t)&v42);
  v15 = v42;
  v17 = v43;
  v16 = v44;
  v18 = v45;
  v19 = *((_QWORD *)&v45 + 1);
  v20 = v46;
  v21 = v47;
  v22 = v49;
  v23 = *(_QWORD *)v50;
  v24 = *(_QWORD *)&v50[8];
  v25 = *(_QWORD *)&v50[16];
  v26 = v48;
  v33 = (unint64_t)v14;
  LOBYTE(v34) = 1;
  *((_QWORD *)&v34 + 1) = v42;
  v35 = v43;
  *(_QWORD *)&v36 = v44;
  BYTE8(v36) = v45;
  *(_QWORD *)&v37 = *((_QWORD *)&v45 + 1);
  BYTE8(v37) = v46;
  *(_QWORD *)&v38 = v47;
  BYTE8(v38) = v48;
  v39 = v49;
  v40 = *(_OWORD *)v50;
  v41 = *(_QWORD *)&v50[16];
  v27 = v34;
  *(_OWORD *)(a2 + 24) = (unint64_t)v14;
  v28 = v38;
  *(_OWORD *)(a2 + 88) = v37;
  v29 = v35;
  *(_OWORD *)(a2 + 72) = v36;
  *(_OWORD *)(a2 + 56) = v29;
  *(_OWORD *)(a2 + 40) = v27;
  v30 = v39;
  v31 = v40;
  *(_QWORD *)(a2 + 152) = v25;
  *(_OWORD *)(a2 + 136) = v31;
  *(_OWORD *)(a2 + 120) = v30;
  *(_OWORD *)(a2 + 104) = v28;
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v7;
  v42 = v14;
  *(_QWORD *)&v43 = 0;
  BYTE8(v43) = 1;
  v44 = v15;
  v45 = v17;
  v46 = v16;
  LOBYTE(v47) = v18;
  v48 = v19;
  LOBYTE(v49) = v20;
  *((_QWORD *)&v49 + 1) = v21;
  v50[0] = v26;
  *(_OWORD *)&v50[8] = v22;
  v51 = v23;
  v52 = v24;
  v53 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100611468(&v33);
  sub_1006114BC(&v42);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_10060E704(uint64_t a1, __n128 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  _OWORD *v30;
  __int128 v31;
  unint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  Swift::String v60;
  Swift::String v61;
  uint64_t *v62;
  void *v63;
  uint64_t v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  char *v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _OWORD *v86;
  __int128 v87;
  __int128 v88;
  __n128 v89;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, unint64_t, uint64_t, __n128);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  _OWORD v99[3];
  _OWORD v100[3];
  _OWORD v101[3];

  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a2);
  __chkstk_darwin(v4);
  v92 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AudioVariant(0);
  v97 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v96 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    return _swiftEmptyArrayStorage;
  v95 = v6;
  v14 = *v2;
  v15 = v2[1];
  v16 = v2[2];
  v17 = v2[3];
  v18 = sub_10075D054(0, a1);
  if (v15 == 1)
  {
    if ((v18 & 1) == 0)
    {
      v22 = _swiftEmptyArrayStorage;
      v26 = v95;
LABEL_22:
      v27 = v96;
      goto LABEL_23;
    }
    v19 = String.LocalizationValue.init(stringLiteral:)(0x676E696D6F637055, 0xEE006D75626C4120);
    static Locale.current.getter(v19);
    v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, "Detail page badge for upcoming album", 36, 2);
    TextArray.Element.init(_:)(v20, v21, (uint64_t)v100);
    v22 = sub_1004333D8(0, 1, 1, _swiftEmptyArrayStorage);
    v24 = v22[2];
    v23 = v22[3];
    v25 = v24 + 1;
    if (v24 >= v23 >> 1)
      v22 = sub_1004333D8((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v26 = v95;
LABEL_21:
    v22[2] = v25;
    v33 = &v22[6 * v24];
    v34 = v100[0];
    v35 = v100[2];
    v33[3] = v100[1];
    v33[4] = v35;
    v33[2] = v34;
    goto LABEL_22;
  }
  v27 = v96;
  if ((v18 & 1) == 0)
  {
    v22 = _swiftEmptyArrayStorage;
    v26 = v95;
    goto LABEL_23;
  }
  if (!v15)
  {
    swift_bridgeObjectRetain();
    v22 = _swiftEmptyArrayStorage;
    v26 = v95;
    if (!v17)
      goto LABEL_23;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TextArray.Element.init(_:)(v14, v15, (uint64_t)v99);
  v22 = sub_1004333D8(0, 1, 1, _swiftEmptyArrayStorage);
  v29 = v22[2];
  v28 = v22[3];
  if (v29 >= v28 >> 1)
    v22 = sub_1004333D8((_QWORD *)(v28 > 1), v29 + 1, 1, v22);
  v26 = v95;
  v22[2] = v29 + 1;
  v30 = &v22[6 * v29];
  v31 = v99[1];
  v30[2] = v99[0];
  v30[3] = v31;
  v30[4] = v99[2];
  if (v17)
  {
LABEL_17:
    TextArray.Element.init(_:)(v16, v17, (uint64_t)v100);
    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      v22 = sub_1004333D8(0, v22[2] + 1, 1, v22);
    v24 = v22[2];
    v32 = v22[3];
    v25 = v24 + 1;
    if (v24 >= v32 >> 1)
      v22 = sub_1004333D8((_QWORD *)(v32 > 1), v24 + 1, 1, v22);
    goto LABEL_21;
  }
LABEL_23:
  if ((sub_10075D054(1, a1) & 1) != 0)
  {
    Array<A>.removingEquivalents()();
    v36 = swift_bridgeObjectRetain();
    v37 = sub_100482040(v36);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v101[0] = v37;
    sub_100610274(v101);
    v38 = swift_bridgeObjectRelease();
    v39 = *(_QWORD *)(*(_QWORD *)&v101[0] + 16);
    if (v39)
    {
      v40 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      v91 = *(_QWORD *)&v101[0];
      v41 = *(_QWORD *)&v101[0] + v40;
      v94 = *(_QWORD *)(v97 + 72);
      v93 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v97 + 16);
      v93(v27, *(_QWORD *)&v101[0] + v40, v26, v38);
      while (1)
      {
        v43 = AudioVariant.symbolString.getter();
        v98 = v22;
        if (v44)
        {
          v45 = v43;
          v46 = v44;
          v47 = qword_10119C1E0;
          swift_bridgeObjectRetain();
          if (v47 != -1)
            swift_once(&qword_10119C1E0, sub_100565C7C);
          v48 = qword_10124D260;
          v49 = (id)qword_10124D260;
          v50 = Image.init(_:bundle:)(v45, v46, v48);
          swift_bridgeObjectRelease();
        }
        else
        {
          v50 = 0;
        }
        v51 = AudioVariant.badgeText.getter();
        v53 = v52;
        v54 = AudioVariant.accessibilityLabel.getter();
        v57 = v56;
        if (v50)
        {
          v58 = swift_retain();
          v59 = v92;
          if (v53)
          {
            LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 3, v58);
            v60._countAndFlagsBits = 0;
            v60._object = (void *)0xE000000000000000;
            LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v60);
            LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v50);
            v61._countAndFlagsBits = 0;
            v61._object = (void *)0xE000000000000000;
            LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v61);
            v62 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
            v64 = *v62;
            v63 = (void *)v62[1];
            swift_bridgeObjectRetain();
            v65._countAndFlagsBits = v64;
            v65._object = v63;
            LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v65);
            swift_bridgeObjectRelease();
            v66._countAndFlagsBits = 0;
            v66._object = (void *)0xE000000000000000;
            LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v66);
            v67._countAndFlagsBits = v51;
            v67._object = v53;
            LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v67);
            swift_bridgeObjectRelease();
          }
          else
          {
            LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v58);
            v73._countAndFlagsBits = 0;
            v73._object = (void *)0xE000000000000000;
            LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v73);
            LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v50);
          }
          v74._countAndFlagsBits = 0;
          v74._object = (void *)0xE000000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v74);
          v72 = LocalizedStringKey.init(stringInterpolation:)(v59);
          swift_release();
        }
        else
        {
          if (!v53)
          {
            (*(void (**)(char *, uint64_t))(v97 + 8))(v27, v26);
            v42 = swift_bridgeObjectRelease();
            v22 = v98;
            goto LABEL_27;
          }
          v68 = v92;
          LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v55);
          v69._countAndFlagsBits = 0;
          v69._object = (void *)0xE000000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v69);
          v70._countAndFlagsBits = v51;
          v70._object = v53;
          LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v70);
          swift_bridgeObjectRelease();
          v71._countAndFlagsBits = 0;
          v71._object = (void *)0xE000000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v71);
          v72 = LocalizedStringKey.init(stringInterpolation:)(v68);
        }
        v75 = Text.init(_:tableName:bundle:comment:)(v72);
        v79 = v75;
        v80 = v76;
        v81 = v77;
        v82 = v77 & 1;
        if (v57)
          v83 = v54;
        else
          v83 = 0;
        TextArray.Element.init(text:accessibilityLabel:)(v75, v76, v77 & 1, v78, v83, v57, (uint64_t)v101);
        sub_100055BBC(v79, v80, v82);
        swift_bridgeObjectRetain();
        v22 = v98;
        if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0)
          v22 = sub_1004333D8(0, v22[2] + 1, 1, v22);
        v85 = v22[2];
        v84 = v22[3];
        if (v85 >= v84 >> 1)
          v22 = sub_1004333D8((_QWORD *)(v84 > 1), v85 + 1, 1, v22);
        v22[2] = v85 + 1;
        v86 = &v22[6 * v85];
        v87 = v101[0];
        v88 = v101[2];
        v86[3] = v101[1];
        v86[4] = v88;
        v86[2] = v87;
        sub_100055BAC(v79, v80, v81 & 1);
        swift_bridgeObjectRelease();
        v89 = swift_release();
        v27 = v96;
        v26 = v95;
        (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v96, v95, v89);
LABEL_27:
        v41 += v94;
        if (!--v39)
          break;
        v93(v27, v41, v26, v42);
      }
    }
    swift_release();
  }
  return v22;
}

double sub_10060EEE4@<D0>(uint64_t a1@<X8>)
{
  Swift::Int v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  Swift::Int v15;
  __n128 v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1000496EC((uint64_t)&off_1010ACD68);
  v23 = sub_10060E704(v2, v3);
  swift_bridgeObjectRelease();
  if (qword_10119C3C8 != -1)
    swift_once(&qword_10119C3C8, sub_10060E4AC);
  v4 = unk_1011BDA40;
  v22 = qword_1011BDA38;
  _s8MetadataV13AlbumMetadataVMa(0);
  swift_bridgeObjectRetain();
  v5 = sub_100007E8C(qword_1011C9550);
  v6 = ScaledMetric.wrappedValue.getter(&v24, v5);
  v7 = v24;
  v8 = static Alignment.center.getter(v6);
  _FrameLayout.init(width:height:alignment:)(&v24, 0, 1, v7, 0, v8, v9);
  v10 = v24;
  v11 = v25;
  v12 = v26;
  v13 = v27;
  v14 = v28;
  v21 = v29;
  v15 = sub_1000496EC((uint64_t)&off_1010ACD90);
  v17 = sub_10060E704(v15, v16);
  swift_bridgeObjectRelease();
  v18 = qword_1011BDA38;
  v19 = unk_1011BDA40;
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v21;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_10060F080@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[10];
  _BYTE v12[167];

  v4 = static Axis.Set.horizontal.getter(a1);
  sub_10060E500(v2, (uint64_t)v11);
  *(_OWORD *)&v12[119] = v11[7];
  *(_OWORD *)&v12[103] = v11[6];
  *(_OWORD *)&v12[55] = v11[3];
  *(_OWORD *)&v12[39] = v11[2];
  *(_OWORD *)&v12[135] = v11[8];
  *(_OWORD *)&v12[151] = v11[9];
  *(_OWORD *)&v12[71] = v11[4];
  *(_OWORD *)&v12[87] = v11[5];
  *(_OWORD *)&v12[7] = v11[0];
  *(_OWORD *)&v12[23] = v11[1];
  v5 = *(_OWORD *)&v12[96];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v12[112];
  v6 = *(_OWORD *)&v12[144];
  *(_OWORD *)(a2 + 129) = *(_OWORD *)&v12[128];
  *(_OWORD *)(a2 + 145) = v6;
  v7 = *(_OWORD *)&v12[32];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v12[48];
  v8 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a2 + 65) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a2 + 81) = v8;
  *(_OWORD *)(a2 + 97) = v5;
  result = *(double *)v12;
  v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a2 + 1) = *(_OWORD *)v12;
  *(_OWORD *)(a2 + 17) = v10;
  *(_BYTE *)a2 = v4;
  *(_QWORD *)(a2 + 160) = *(_QWORD *)&v12[159];
  *(_OWORD *)(a2 + 33) = v7;
  return result;
}

uint64_t sub_10060F148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = type metadata accessor for AudioVariant(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s8MetadataV13ConfigurationOMa(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v0, (uint64_t)v14, v15);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v14, v8);
    Date.lastUpdatedDateString.getter();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = v17 != 0;
    swift_bridgeObjectRelease();
    return v18;
  }
  v19 = v14[1];
  v21 = v14[2];
  v20 = v14[3];
  v22 = v14[4];
  if (v19)
  {
    if (v19 == 1)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      return 1;
    }
    v25 = *v14;
    swift_bridgeObjectRelease();
    v23 = v25;
    v24 = v19;
LABEL_9:
    sub_10060F838(v23, v24, v21, v20);
    return 1;
  }
  v42 = *v14;
  if (v20)
  {
    swift_bridgeObjectRelease();
    v23 = v42;
    v24 = 0;
    goto LABEL_9;
  }
  v27 = *(_QWORD *)(v22 + 16);
  if (v27)
  {
    v41 = v21;
    v28 = v22 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v43 = *(_QWORD *)(v2 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v29(v7, v28, v1);
      AudioVariant.symbolString.getter();
      v31 = v30;
      v32 = swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t, __n128))v29)(v4, v7, v1, v32);
      if (v31)
        break;
      AudioVariant.badgeText.getter();
      v34 = v33;
      v35 = swift_bridgeObjectRelease();
      v36 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
      v36(v4, v1, v35);
      ((void (*)(char *, uint64_t))v36)(v7, v1);
      if (v34)
        goto LABEL_21;
      v28 += v43;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        v38 = v41;
        v37 = v42;
        goto LABEL_19;
      }
    }
    v39 = *(void (**)(char *, uint64_t))(v2 + 8);
    v39(v4, v1);
    v39(v7, v1);
LABEL_21:
    swift_bridgeObjectRelease();
    sub_10060F838(v42, 0, v41, 0);
    goto LABEL_5;
  }
  v37 = v42;
  v38 = v21;
LABEL_19:
  sub_10060F838(v37, 0, v38, 0);
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_10060F44C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDBC0;
  if (!qword_1011BDBC0)
  {
    v1 = sub_100044B54(&qword_1011BDBB0);
    sub_10060F4D0();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDBC0);
  }
  return result;
}

unint64_t sub_10060F4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDBC8;
  if (!qword_1011BDBC8)
  {
    v1 = sub_100044B54(&qword_1011BDBA8);
    sub_10060F554();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDBC8);
  }
  return result;
}

unint64_t sub_10060F554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDBD0;
  if (!qword_1011BDBD0)
  {
    v1 = sub_100044B54(&qword_1011BDBA0);
    sub_10060F5D8();
    sub_100049F28(&qword_1011BDBF8, &qword_1011BDC00, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDBD0);
  }
  return result;
}

unint64_t sub_10060F5D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDBD8;
  if (!qword_1011BDBD8)
  {
    v1 = sub_100044B54(&qword_1011BDB98);
    sub_10060F63C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDBD8);
  }
  return result;
}

unint64_t sub_10060F63C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDBE0;
  if (!qword_1011BDBE0)
  {
    v1 = sub_100044B54(&qword_1011BDBE8);
    sub_1001DAEF8();
    sub_100048748(&qword_1011BDBF0, _s8MetadataV13AlbumMetadataVMa, (uint64_t)&unk_100EC5328);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDBE0);
  }
  return result;
}

uint64_t _s8MetadataV13AlbumMetadataVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDC78, (uint64_t)&_s8MetadataV13AlbumMetadataVMn);
}

uint64_t sub_10060F6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011BDBB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10060F71C@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10060F7F4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for AdaptativeContainerOrientationKey, &type metadata for AdaptativeContainerOrientationKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10060F768(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10060F7F4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for AdaptativeContainerOrientationKey, &type metadata for AdaptativeContainerOrientationKey, v1);
}

uint64_t sub_10060F7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s8MetadataV13AlbumMetadataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10060F7F4()
{
  unint64_t result;

  result = qword_1011BDC10;
  if (!qword_1011BDC10)
  {
    result = swift_getWitnessTable(&unk_100ECDCA8, &type metadata for AdaptativeContainerOrientationKey);
    atomic_store(result, (unint64_t *)&qword_1011BDC10);
  }
  return result;
}

uint64_t sub_10060F838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_10060F86C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 == 1)
    {
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v10 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    v12 = *((_BYTE *)a2 + 48);
    swift_bridgeObjectRetain();
    sub_10006B3F8(v11, v12);
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v12;
    v13 = *(int *)(a3 + 28);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_10060F958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_10006B604(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_10060F9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_10006B3F8(v9, v10);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_10060FA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_10004FF60(a1, &qword_1011BDC18);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_10006B3F8(v9, v10);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  sub_10006B604(v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t sub_10060FBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_10060FC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)(a1 + 8) != 1)
  {
    v6 = *(_QWORD *)(a2 + 8);
    if (v6 != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10004FF60(a1, &qword_1011BDC18);
  }
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v9 = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v9;
  sub_10006B604(v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10060FD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060FD3C);
}

uint64_t sub_10060FD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_10060FDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060FDC8);
}

uint64_t sub_10060FDC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_10060FE40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = " ";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = "\t";
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

unint64_t _s8MetadataV13AlbumMetadataV13ConfigurationOwxx(uint64_t a1)
{
  unint64_t result;
  int v3;

  result = *(_QWORD *)(a1 + 8);
  v3 = -1;
  if (result < 0xFFFFFFFF)
    v3 = result;
  if (v3 - 1 < 0)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  }
  return result;
}

_QWORD *_s8MetadataV13AlbumMetadataV13ConfigurationOwcp(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v6);
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
  }
  return a1;
}

_QWORD *_s8MetadataV13AlbumMetadataV13ConfigurationOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *a1 = *a2;
      v13 = a2[1];
      a1[1] = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v4);
      a1[2] = a2[2];
      v14 = a2[3];
      v15 = a1[3];
      a1[3] = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v15);
      return a1;
    }
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  a1[2] = a2[2];
  v10 = a2[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

_QWORD *_s8MetadataV13AlbumMetadataV13ConfigurationOwta(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v10;
  uint64_t v11;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease(v4);
      v10 = a2[3];
      v11 = a1[3];
      a1[2] = a2[2];
      a1[3] = v10;
      swift_bridgeObjectRelease(v11);
      return a1;
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(a1[3]);
  }
  v8 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
  return a1;
}

uint64_t _s8MetadataV13AlbumMetadataV13ConfigurationOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t _s8MetadataV13AlbumMetadataV13ConfigurationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

_QWORD *sub_10061019C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *_s8MetadataV13AlbumMetadataV13ConfigurationOMa()
{
  return &_s8MetadataV13AlbumMetadataV13ConfigurationON;
}

unint64_t sub_1006101E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDCB8;
  if (!qword_1011BDCB8)
  {
    v1 = sub_100044B54(&qword_1011BDBB8);
    sub_10060F44C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDCB8);
  }
  return result;
}

uint64_t sub_100610264(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA73F0, 1);
}

void sub_100610274(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for AudioVariant(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1008A7CCC(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1006102F4(v5);
  *a1 = v3;
}

void sub_1006102F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Swift::Int v19;
  unint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  Swift::Int v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Int v59;
  uint64_t v60;
  Swift::Int v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  _QWORD *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  Swift::Int v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  Swift::Int v134;
  char *v135;
  char *v136;
  char *v137;
  Swift::Int v138;
  unint64_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  _QWORD *v147;
  uint64_t v148;
  char *v149;
  Swift::Int v150;
  uint64_t v151;
  uint64_t v152;

  v3 = type metadata accessor for AudioVariant(0);
  v152 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v137 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v149 = (char *)&v132 - v6;
  __chkstk_darwin(v7);
  v145 = (char *)&v132 - v8;
  __chkstk_darwin(v9);
  v144 = (char *)&v132 - v10;
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_140;
    if (v11)
      sub_100610D40(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_148;
  v14 = v12;
  v148 = v3;
  v140 = v1;
  if (v11 < 2)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
    v133 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v20 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v20 >= 2)
      {
        v124 = *a1;
        do
        {
          v125 = v20 - 2;
          if (v20 < 2)
            goto LABEL_135;
          v126 = v140;
          if (!v124)
            goto LABEL_147;
          v127 = v18;
          v128 = *(_QWORD *)&v18[16 * v125 + 32];
          v129 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_100610F94(v124 + *(_QWORD *)(v152 + 72) * v128, v124 + *(_QWORD *)(v152 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v124 + *(_QWORD *)(v152 + 72) * v129, v139);
          if (v126)
            goto LABEL_103;
          if (v129 < v128)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v127 = sub_1008A77EC((uint64_t)v18);
          if (v125 >= *((_QWORD *)v127 + 2))
            goto LABEL_137;
          v130 = &v127[16 * v125 + 32];
          *(_QWORD *)v130 = v128;
          *((_QWORD *)v130 + 1) = v129;
          v131 = *((_QWORD *)v127 + 2);
          if (v20 > v131)
            goto LABEL_138;
          v18 = v127;
          memmove(&v127[16 * v20 + 16], &v127[16 * v20 + 32], 16 * (v131 - v20));
          *((_QWORD *)v127 + 2) = v131 - 1;
          v20 = v131 - 1;
          v140 = 0;
        }
        while (v131 > 2);
      }
      swift_bridgeObjectRelease();
      v133[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v15 = v13 >> 1;
    v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v152 + 80);
    v133 = (_QWORD *)v16;
    v139 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  v147 = a1;
  v134 = v14;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    v135 = v18;
    if (v19 + 1 >= v11)
    {
      ++v19;
      v42 = v140;
    }
    else
    {
      v23 = *a1;
      v24 = v152;
      v25 = v19;
      v26 = *(_QWORD *)(v152 + 72);
      v27 = *a1 + v26 * v22;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
      v29 = v144;
      v150 = v11;
      v30 = v148;
      v28(v144, v27, v148);
      v31 = v145;
      v28(v145, v23 + v26 * v25, v30);
      LODWORD(v146) = static AudioVariant.< infix(_:_:)(v29, v31);
      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32(v31, v30);
      v33 = v30;
      v11 = v150;
      v32(v29, v33);
      v19 = v25 + 2;
      v142 = v23;
      v151 = v26;
      if (v25 + 2 >= v11)
      {
        a1 = v147;
        v42 = v140;
        v41 = v26;
        v21 = v25;
        v14 = v134;
      }
      else
      {
        v138 = v25;
        v143 = v26 * v22;
        v34 = v23;
        v35 = v26 * v19;
        while (1)
        {
          v36 = v19;
          v37 = v144;
          v38 = v148;
          v28(v144, v34 + v35, v148);
          v39 = v145;
          v28(v145, v34 + v143, v38);
          v40 = static AudioVariant.< infix(_:_:)(v37, v39);
          v32(v39, v38);
          v32(v37, v38);
          if (((v146 ^ v40) & 1) != 0)
            break;
          v19 = v36 + 1;
          v41 = v151;
          v34 += v151;
          if (v150 == v36 + 1)
          {
            v11 = v150;
            v19 = v150;
            a1 = v147;
            v42 = v140;
            v14 = v134;
            v21 = v138;
            goto LABEL_24;
          }
        }
        a1 = v147;
        v42 = v140;
        v14 = v134;
        v19 = v36;
        v21 = v138;
        v11 = v150;
        v41 = v151;
      }
LABEL_24:
      v18 = v135;
      if ((v146 & 1) != 0)
      {
        if (v19 < v21)
          goto LABEL_141;
        if (v21 < v19)
        {
          v43 = 0;
          v44 = v41 * (v19 - 1);
          v45 = v19 * v41;
          v46 = v21;
          v138 = v21;
          v47 = v21 * v41;
          do
          {
            if (v46 != v19 + v43 - 1)
            {
              v140 = v42;
              v50 = v142;
              if (!v142)
                goto LABEL_146;
              v51 = v142 + v47;
              v52 = v142 + v44;
              v146 = *(char **)(v152 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v146)(v137, v142 + v47, v148);
              if (v47 < v44 || v51 >= v50 + v45)
              {
                v48 = v50 + v47;
                v49 = v148;
                swift_arrayInitWithTakeFrontToBack(v48);
              }
              else
              {
                v49 = v148;
                if (v47 != v44)
                  swift_arrayInitWithTakeBackToFront(v51);
              }
              ((void (*)(uint64_t, char *, uint64_t))v146)(v52, v137, v49);
              a1 = v147;
              v18 = v135;
              v42 = v140;
              v41 = v151;
            }
            ++v46;
            --v43;
            v44 -= v41;
            v45 -= v41;
            v47 += v41;
          }
          while (v46 < v19 + v43);
          v14 = v134;
          v11 = v150;
          v21 = v138;
        }
      }
    }
    if (v19 < v11)
    {
      if (__OFSUB__(v19, v21))
        goto LABEL_139;
      if (v19 - v21 < v14)
        break;
    }
LABEL_56:
    if (v19 < v21)
      goto LABEL_134;
    v71 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v140 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1008A71C4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v74 = *((_QWORD *)v18 + 2);
    v73 = *((_QWORD *)v18 + 3);
    v20 = v74 + 1;
    if (v74 >= v73 >> 1)
      v18 = sub_1008A71C4((char *)(v73 > 1), v74 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v75 = v18 + 32;
    v76 = &v18[16 * v74 + 32];
    *(_QWORD *)v76 = v71;
    *((_QWORD *)v76 + 1) = v19;
    if (v74)
    {
      while (1)
      {
        v77 = v20 - 1;
        if (v20 >= 4)
        {
          v82 = &v75[16 * v20];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_123;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_124;
          v89 = v20 - 2;
          v90 = &v75[16 * v20 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_126;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_129;
          if (v94 >= v85)
          {
            v112 = &v75[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_133;
            v105 = v80 < v115;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v106 = *((_QWORD *)v18 + 4);
            v107 = *((_QWORD *)v18 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
            goto LABEL_87;
          }
          v79 = *((_QWORD *)v18 + 4);
          v78 = *((_QWORD *)v18 + 5);
          v88 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          v81 = v88;
        }
        if ((v81 & 1) != 0)
          goto LABEL_125;
        v89 = v20 - 2;
        v95 = &v75[16 * v20 - 32];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v98 = __OFSUB__(v96, v97);
        v99 = v96 - v97;
        v100 = v98;
        if (v98)
          goto LABEL_128;
        v101 = &v75[16 * v77];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v88 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v88)
          goto LABEL_131;
        if (__OFADD__(v99, v104))
          goto LABEL_132;
        if (v99 + v104 >= v80)
        {
          v105 = v80 < v104;
LABEL_93:
          if (v105)
            v77 = v89;
          goto LABEL_95;
        }
LABEL_87:
        if ((v100 & 1) != 0)
          goto LABEL_127;
        v108 = &v75[16 * v77];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v88 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v88)
          goto LABEL_130;
        if (v111 < v99)
          goto LABEL_14;
LABEL_95:
        v116 = v77 - 1;
        if (v77 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v117 = *a1;
        if (!*a1)
          goto LABEL_145;
        v118 = &v75[16 * v116];
        v119 = *(_QWORD *)v118;
        v120 = &v75[16 * v77];
        v121 = *((_QWORD *)v120 + 1);
        v122 = v140;
        sub_100610F94(v117 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v118, v117 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v120, v117 + *(_QWORD *)(v152 + 72) * v121, v139);
        v140 = v122;
        if (v122)
        {
LABEL_103:
          swift_bridgeObjectRelease();
          v133[2] = 0;
          swift_bridgeObjectRelease();
          return;
        }
        if (v121 < v119)
          goto LABEL_120;
        if (v77 > *((_QWORD *)v18 + 2))
          goto LABEL_121;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v75[16 * v116 + 8] = v121;
        v123 = *((_QWORD *)v18 + 2);
        if (v77 >= v123)
          goto LABEL_122;
        v20 = v123 - 1;
        memmove(&v75[16 * v77], v120 + 16, 16 * (v123 - 1 - v77));
        *((_QWORD *)v18 + 2) = v123 - 1;
        a1 = v147;
        if (v123 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v11 = a1[1];
    v14 = v134;
    if (v19 >= v11)
      goto LABEL_105;
  }
  if (__OFADD__(v21, v14))
    goto LABEL_142;
  if (v21 + v14 >= v11)
    v53 = v11;
  else
    v53 = v21 + v14;
  if (v53 >= v21)
  {
    if (v19 != v53)
    {
      v138 = v21;
      v54 = *(_QWORD *)(v152 + 72);
      v55 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
      v140 = v42;
      v141 = v55;
      v151 = v54 * (v19 - 1);
      v146 = (char *)v19;
      v142 = v54;
      v56 = v19 * v54;
      v57 = v148;
      v136 = (char *)v53;
      do
      {
        v58 = 0;
        v59 = v138;
        v143 = v56;
        while (1)
        {
          v150 = v59;
          v60 = *a1;
          v61 = v56 + v58 + *a1;
          v62 = v144;
          v63 = v141;
          v141(v144, v61, v57);
          v64 = a1;
          v65 = v145;
          v63(v145, v151 + v58 + v60, v57);
          LOBYTE(v63) = static AudioVariant.< infix(_:_:)(v62, v65);
          v66 = *(void (**)(char *, uint64_t))(v152 + 8);
          v66(v65, v57);
          v66(v62, v57);
          if ((v63 & 1) == 0)
            break;
          v67 = *v64;
          if (!*v64)
            goto LABEL_144;
          v56 = v143;
          v68 = v67 + v143 + v58;
          v69 = (char *)(v67 + v151 + v58);
          v70 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 32);
          v57 = v148;
          v70(v149, v68, v148);
          swift_arrayInitWithTakeFrontToBack(v68);
          v70(v69, (uint64_t)v149, v57);
          v58 -= v142;
          v59 = v150 + 1;
          a1 = v147;
          if (v146 == (char *)(v150 + 1))
            goto LABEL_49;
        }
        v57 = v148;
        a1 = v64;
        v56 = v143;
LABEL_49:
        v151 += v142;
        v56 += v142;
        ++v146;
      }
      while (v146 != v136);
      v19 = (Swift::Int)v136;
      v42 = v140;
      v18 = v135;
      v21 = v138;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100610D40(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v7 = type metadata accessor for AudioVariant(0);
  v37 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v36 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v33 = (char *)&v27 - v11;
  result = __chkstk_darwin(v10);
  v32 = (char *)&v27 - v13;
  v35 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v14 = v37[9];
    v30 = (void (*)(char *, uint64_t, uint64_t))v37[2];
    v31 = a4;
    v39 = v14 * (v35 - 1);
    v34 = v14;
    v38 = v14 * v35;
LABEL_5:
    v15 = 0;
    v16 = v29;
    while (1)
    {
      v17 = *a4;
      v18 = v32;
      v19 = v30;
      v30(v32, v38 + v15 + *a4, v7);
      v20 = v33;
      v19(v33, v39 + v15 + v17, v7);
      LOBYTE(v17) = static AudioVariant.< infix(_:_:)(v18, v20);
      v21 = (void (*)(char *, uint64_t))v37[1];
      v22 = v20;
      a4 = v31;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v39 += v34;
        v38 += v34;
        if (++v35 == v28)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = v23 + v39 + v15;
      v26 = (void (*)(char *, uint64_t, uint64_t))v37[4];
      v26(v36, v24, v7);
      swift_arrayInitWithTakeFrontToBack(v24);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v25, v36, v7);
      v15 -= v34;
      if (v35 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100610F94(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v49 = (char *)&v44 - v11;
  v51 = v12;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v54 = a1;
  v53 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v30 = a4 + v18;
      v52 = a4 + v18;
      v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v13;
        v45 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
        v46 = a1;
        v47 = a4;
        v33 = v49;
        do
        {
          v48 = a3 + v32;
          v34 = v45;
          v45(v33, v30 + v32, v8);
          v35 = a2 + v32;
          v36 = v50;
          v34(v50, a2 + v32, v8);
          v37 = static AudioVariant.< infix(_:_:)(v33, v36);
          v38 = *(void (**)(char *, uint64_t))(v51 + 8);
          v38(v36, v8);
          v38(v33, v8);
          if ((v37 & 1) != 0)
          {
            v39 = v48;
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v48);
              v41 = v46;
              v40 = v47;
            }
            else
            {
              v41 = v46;
              v40 = v47;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v48);
            }
            v54 += v32;
          }
          else
          {
            v42 = v52;
            v52 += v32;
            v39 = v48;
            if (a3 < v42 || v48 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v48);
              v35 = a2;
              v41 = v46;
              v40 = v47;
            }
            else
            {
              v41 = v46;
              v40 = v47;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v48);
              v35 = a2;
            }
          }
          v30 = v52;
          if (v52 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v48 = a4 + v17;
    v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
      do
      {
        v21 = a3;
        v22 = a4;
        v23 = v49;
        v20(v49, a2, v8);
        v24 = v50;
        v20(v50, v22, v8);
        v25 = static AudioVariant.< infix(_:_:)(v23, v24);
        v26 = *(void (**)(char *, uint64_t))(v51 + 8);
        v26(v24, v8);
        v26(v23, v8);
        v27 = v54;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v13;
          if (v54 < a2 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v54);
          }
          else if (v54 == a2)
          {
            v27 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v54);
          }
        }
        else
        {
          v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack(v54);
          }
          else if (v54 != v53)
          {
            swift_arrayInitWithTakeBackToFront(v54);
          }
          v53 = v29;
          v28 = a2;
        }
        v54 = v27 + v13;
        a4 = v53;
        if (v53 >= v48)
          break;
        a3 = v21;
        a2 = v28;
      }
      while (v28 < v21);
    }
LABEL_60:
    sub_1008A749C(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100611468(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[5];
  v3 = a1[14];
  v4 = a1[16];
  swift_bridgeObjectRetain(a1[3]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *sub_1006114BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[14];
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t _s8MetadataV13AlbumMetadataV7ElementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10061155C + 4 * byte_100EC51B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100611590 + 4 * byte_100EC51B0[v4]))();
}

uint64_t sub_100611590(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100611598(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006115A0);
  return result;
}

uint64_t sub_1006115AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006115B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006115B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006115C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8MetadataV13AlbumMetadataV7ElementOMa()
{
  return &_s8MetadataV13AlbumMetadataV7ElementON;
}

uint64_t sub_1006115DC()
{
  return sub_100049F28(&qword_1011BDCC0, &qword_1011BDCC8, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
}

unint64_t sub_10061160C()
{
  unint64_t result;

  result = qword_1011BDCD0;
  if (!qword_1011BDCD0)
  {
    result = swift_getWitnessTable(&unk_100EC53C0, &_s8MetadataV13AlbumMetadataV7ElementON);
    atomic_store(result, (unint64_t *)&qword_1011BDCD0);
  }
  return result;
}

id sub_100611650()
{
  Class isa;
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  _QWORD v6[2];

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v1 = objc_msgSend(v5, "cellForItemAtIndexPath:", isa);

  if (v1
    && (v6[0] = 0xD000000000000019,
        v6[1] = 0x8000000100E40BB0,
        v2 = v1,
        v3 = UIView.findPresentationSourceView<A>(id:)(v6, &type metadata for String, &protocol witness table for String), v2, v2, v3))
  {
    return (id)v3;
  }
  else
  {
    return v5;
  }
}

uint64_t sub_10061170C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  _BYTE v29[24];
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v6 = sub_100007E8C(&qword_1011BDD18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v8);
  v13 = &v29[-v12];
  __chkstk_darwin(v11);
  v15 = &v29[-v14];
  v16 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v16 = a1 & 0xFFFFFFFFFFFFLL;
  v29[16] = v16 == 0;
  v30 = a1;
  v31 = a2;
  if (v16)
    v17 = 9.0;
  else
    v17 = 0.0;
  v18 = sub_100007E8C(&qword_1011BDD20);
  v19 = sub_10062155C();
  v20 = UIHostingConfiguration<>.init(content:)(sub_100621550, v29, v18, v19);
  v21 = static Edge.Set.horizontal.getter(v20);
  UIHostingConfiguration.margins(_:_:)(v21, v6, 0.0);
  v22 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
  v23 = v22(v10, v6);
  v24 = static Edge.Set.vertical.getter(v23);
  UIHostingConfiguration.margins(_:_:)(v24, v6, v17);
  v25 = v22(v13, v6);
  v26 = static Color.clear.getter(v25);
  v32 = v26;
  a3[3] = sub_100007E8C(&qword_1011BDD38);
  a3[4] = sub_100049F28(qword_1011BDD40, &qword_1011BDD38, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100049F68(a3);
  UIHostingConfiguration.background<A>(_:)(&v32, v6, &type metadata for Color, &protocol witness table for Color);
  v27 = swift_release(v26);
  return ((uint64_t (*)(_BYTE *, uint64_t, __n128))v22)(v15, v6, v27);
}

uint64_t sub_1006118FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t KeyPath;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[64];
  _QWORD v82[3];

  v80 = a1;
  v2 = type metadata accessor for AccessibilityTraits(0);
  v78 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  __chkstk_darwin(v2);
  v76 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AccessibilityChildBehavior(0);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v68 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BE068);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011BE070);
  __chkstk_darwin(v65);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011BE078);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011BE080);
  v18 = *(_QWORD *)(v17 - 8);
  v70 = v17;
  v71 = v18;
  __chkstk_darwin(v17);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011BE088);
  __chkstk_darwin(v72);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011BE090);
  __chkstk_darwin(v77);
  v69 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011BE098);
  __chkstk_darwin(v24);
  v73 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v27 = &v11[*(int *)(sub_100007E8C(&qword_1011BE0A0) + 44)];
  v67 = v1;
  sub_100611E98(v1, v27);
  v28 = _s8GridCellVMa(0);
  v29 = sub_1008237B8((uint64_t)v8);
  v30 = DynamicTypeSize.isAccessibilitySize.getter(v29);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v66);
  if ((v30 & 1) != 0)
    v31 = 2;
  else
    v31 = 1;
  KeyPath = swift_getKeyPath(&unk_100EC56F0);
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011BE068);
  v33 = &v13[*(int *)(v65 + 36)];
  *(_QWORD *)v33 = KeyPath;
  *((_QWORD *)v33 + 1) = v31;
  v33[16] = 0;
  v34 = sub_10004FF60((uint64_t)v11, &qword_1011BE068);
  v35 = static Font.footnote.getter(v34);
  v36 = swift_getKeyPath(&unk_100EC5720);
  sub_10004A160((uint64_t)v13, (uint64_t)v16, &qword_1011BE070);
  v37 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *v37 = v36;
  v37[1] = v35;
  v38 = sub_10004FF60((uint64_t)v13, &qword_1011BE070);
  v39 = v68;
  static AccessibilityChildBehavior.combine.getter(v38);
  v40 = sub_1006292AC();
  View.accessibilityElement(children:)(v39, v14, v40);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v75);
  v41 = sub_10004FF60((uint64_t)v16, &qword_1011BE078);
  v42 = v76;
  static AccessibilityTraits.isButton.getter(v41);
  v82[0] = v14;
  v82[1] = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v82, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v44 = v70;
  View.accessibilityAddTraits(_:)(v42, v70, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v79);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v44);
  v45 = AccessibilityIdentifier.libraryGridCell.unsafeMutableAddressor();
  v46 = *v45;
  v47 = v45[1];
  v48 = sub_1006293CC();
  swift_bridgeObjectRetain();
  v49 = (uint64_t)v69;
  View.accessibilityIdentifier(_:)(v46, v47, v72, v48);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v22, &qword_1011BE088);
  v50 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v50, v81);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v52 = v67;
  v53 = (_QWORD *)(v67 + *(int *)(v28 + 24));
  v54 = v53[1];
  *(_QWORD *)(inited + 32) = *v53;
  v55 = inited + 32;
  *(_QWORD *)(inited + 40) = v54;
  v56 = (_QWORD *)(v52 + *(int *)(v28 + 28));
  v57 = v56[1];
  *(_QWORD *)(inited + 48) = *v56;
  *(_QWORD *)(inited + 56) = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = static Text.compact(_:)(inited);
  swift_setDeallocating(inited);
  v59 = *(_QWORD *)(inited + 16);
  v60 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v55, v59, v60);
  v61 = sub_100629478();
  v62 = (uint64_t)v73;
  View.accessibilityInputLabels(_:)(v58, v77, v61);
  swift_bridgeObjectRelease();
  sub_10004FF60(v49, &qword_1011BE090);
  return sub_100065228(v62, v80, &qword_1011BE098);
}

uint64_t sub_100611E98@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void *v39;
  char **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t OpaqueTypeConformance2;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int *v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _OWORD *v134;
  __int128 v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  char v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t);
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;

  v199 = a2;
  v3 = sub_100007E8C(&qword_1011BE0D0);
  __chkstk_darwin(v3);
  v200 = (uint64_t)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v198 = (char *)&v175 - v6;
  v7 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v7);
  v182 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B8D50);
  v10 = __chkstk_darwin(v9);
  v181 = (uint64_t)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for Text.Suffix(0, v10);
  v188 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v183 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100007E8C(&qword_1011A5320);
  v190 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v184 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100007E8C(&qword_1011C6950);
  __chkstk_darwin(v187);
  v185 = (char *)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_100007E8C(&qword_1011BE0D8);
  __chkstk_darwin(v191);
  v186 = (uint64_t)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_100007E8C(&qword_1011BE0E0);
  __chkstk_darwin(v194);
  v193 = (uint64_t)&v175 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011BE0E8);
  __chkstk_darwin(v17);
  v197 = (uint64_t)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v195 = (char *)&v175 - v20;
  __chkstk_darwin(v21);
  v204 = (uint64_t)&v175 - v22;
  v175 = sub_100007E8C(&qword_1011BE0F0);
  __chkstk_darwin(v175);
  v24 = (char *)&v175 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011BE0F8);
  __chkstk_darwin(v25);
  v27 = (char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_100007E8C(&qword_1011BE100);
  v178 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v29 = (char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011BE108);
  v180 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v31 = (char *)&v175 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011BE110);
  v205 = *(_QWORD *)(v32 - 8);
  v206 = v32;
  __chkstk_darwin(v32);
  v196 = (char *)&v175 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v176 = (char *)&v175 - v35;
  __chkstk_darwin(v36);
  v203 = (char *)&v175 - v37;
  v38 = sub_100612C74();
  v39 = (void *)objc_opt_self(UIColor);
  v40 = &selRef_systemFillColor;
  if ((v38 & 1) == 0)
    v40 = &selRef_clearColor;
  v41 = Color.init(_:)(objc_msgSend(v39, *v40));
  v201 = (int *)_s8GridCellVMa(0);
  v42 = *(_QWORD *)(a1 + v201[5]);
  v43 = static Alignment.center.getter(v201);
  v45 = v44;
  v202 = a1;
  sub_100612EA4(a1, (uint64_t)v24);
  v46 = (uint64_t *)&v24[*(int *)(v175 + 36)];
  *v46 = v43;
  v46[1] = v45;
  sub_10004A160((uint64_t)v24, (uint64_t)&v27[*(int *)(v25 + 36)], &qword_1011BE0F0);
  *(_QWORD *)v27 = v41;
  *((_QWORD *)v27 + 1) = v42;
  *((_WORD *)v27 + 8) = 0;
  sub_10004FF60((uint64_t)v24, &qword_1011BE0F0);
  v47 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32);
  v48 = *(_QWORD *)v47;
  v49 = *(_QWORD *)(v47 + 8);
  v50 = *(_BYTE *)(v47 + 16);
  v51 = sub_1006294FC();
  View.corner(_:)(v48, v49, v50, v25, v51);
  sub_10004FF60((uint64_t)v27, &qword_1011BE0F8);
  v52 = Border.artwork.unsafeMutableAddressor();
  v53 = *v52;
  v54 = *((double *)v52 + 1);
  v55 = *(_QWORD *)v47;
  v56 = *(_QWORD *)(v47 + 8);
  v57 = *(_BYTE *)(v47 + 16);
  LOBYTE(v47) = *((_BYTE *)v52 + 16);
  swift_retain();
  *(_QWORD *)&v211 = v25;
  *((_QWORD *)&v211 + 1) = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v211, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v59 = v177;
  View.border(_:corner:)(v53, v47, v55, v56, v57, v177, OpaqueTypeConformance2, v54);
  v60 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v178 + 8))(v29, v59, v60);
  *(_QWORD *)&v211 = 0xD000000000000019;
  *((_QWORD *)&v211 + 1) = 0x8000000100E40BB0;
  v207 = v59;
  v208 = OpaqueTypeConformance2;
  v61 = swift_getOpaqueTypeConformance2(&v207, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v62 = v176;
  v63 = v179;
  View.presentationSource<A>(id:)(&v211, v179, &type metadata for String, v61, &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v31, v63);
  (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v203, v62, v206);
  v64 = v201;
  v65 = v202;
  v66 = (_QWORD *)(v202 + v201[6]);
  v67 = v66[1];
  *(_QWORD *)&v211 = *v66;
  *((_QWORD *)&v211 + 1) = v67;
  v68 = sub_100055B68();
  swift_bridgeObjectRetain();
  v179 = v68;
  v69 = Text.init<A>(_:)(&v211, &type metadata for String, v68);
  v71 = v70;
  v73 = v72;
  v75 = v74 & 1;
  v76 = static Font.Weight.medium.getter();
  v77 = Text.fontWeight(_:)(*(_QWORD *)&v76, 0, v69, v71, v75, v73);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  sub_100055BAC(v69, v71, v75);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v211 = v77;
  *((_QWORD *)&v211 + 1) = v79;
  LOBYTE(v212) = v81 & 1;
  *((_QWORD *)&v212 + 1) = v83;
  v84 = v64;
  v85 = v65;
  v86 = v181;
  sub_10004A160(v65 + v64[9], v181, &qword_1011B8D50);
  v87 = TextBadge.init(for:isPlayable:)(v86, 1);
  v88 = TextBadge.view.getter(v87);
  v90 = v89;
  v92 = v91;
  v181 = v91;
  v94 = v93 & 1;
  LODWORD(v180) = v93 & 1;
  LODWORD(v84) = *(unsigned __int8 *)(v85 + v84[8]);
  v95 = type metadata accessor for MusicFavoriteStatus(0);
  v96 = *(_QWORD *)(v95 - 8);
  v97 = (unsigned int *)&enum case for MusicFavoriteStatus.favorited(_:);
  if (!(_DWORD)v84)
    v97 = (unsigned int *)&enum case for MusicFavoriteStatus.neutral(_:);
  v98 = v182;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v182, *v97, v95);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v98, 0, 1, v95);
  v99 = TextBadge.init(for:)(v98);
  v100 = TextBadge.view.getter(v99);
  v102 = v101;
  v104 = v103 & 1;
  v106 = static Text.+ infix(_:_:)(v88, v90, v94, v92, v100, v101, v104, v105);
  v108 = v107;
  v110 = v109;
  v112 = v111 & 1;
  sub_100055BAC(v100, v102, v104);
  swift_bridgeObjectRelease();
  sub_100055BAC(v88, v90, v180);
  swift_bridgeObjectRelease();
  v113 = v183;
  static Text.Suffix.alwaysVisible(_:)(v106, v108, v112, v110);
  sub_100055BAC(v106, v108, v112);
  swift_bridgeObjectRelease();
  v114 = v184;
  View.textSuffix(_:)(v113, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v188 + 8))(v113, v189);
  sub_100055BAC(v211, *((uint64_t *)&v211 + 1), v212);
  v115 = swift_bridgeObjectRelease();
  LODWORD(v110) = static HierarchicalShapeStyle.primary.getter(v115);
  v116 = v190;
  v117 = (uint64_t)v185;
  v118 = v192;
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v185, v114, v192);
  *(_DWORD *)(v117 + *(int *)(v187 + 36)) = v110;
  v119 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v114, v118);
  LOBYTE(v110) = static Edge.Set.top.getter(v119);
  v120 = EdgeInsets.init(_all:)(5.0);
  v122 = v121;
  v124 = v123;
  v126 = v125;
  v127 = v186;
  sub_10004A160(v117, v186, &qword_1011C6950);
  v128 = v127 + *(int *)(v191 + 36);
  *(_BYTE *)v128 = v110;
  *(double *)(v128 + 8) = v120;
  *(_QWORD *)(v128 + 16) = v122;
  *(_QWORD *)(v128 + 24) = v124;
  *(_QWORD *)(v128 + 32) = v126;
  *(_BYTE *)(v128 + 40) = 0;
  v129 = sub_10004FF60(v117, &qword_1011C6950);
  v130 = static Alignment.leading.getter(v129);
  _FrameLayout.init(width:height:alignment:)(&v211, 0, 1, 0, 1, v130, v131);
  v132 = v193;
  sub_10004A160(v127, v193, &qword_1011BE0D8);
  v133 = v194;
  v134 = (_OWORD *)(v132 + *(int *)(v194 + 36));
  v135 = v212;
  *v134 = v211;
  v134[1] = v135;
  v134[2] = v213;
  sub_10004FF60(v127, &qword_1011BE0D8);
  v136 = AccessibilityIdentifier.libraryGridCellTitle.unsafeMutableAddressor();
  v137 = *v136;
  v138 = v136[1];
  v139 = sub_10005610C(&qword_1011BE138, &qword_1011BE0E0, (void (*)(void))sub_1006295A0);
  swift_bridgeObjectRetain();
  v140 = (uint64_t)v195;
  View.accessibilityIdentifier(_:)(v137, v138, v133, v139);
  swift_bridgeObjectRelease();
  sub_10004FF60(v132, &qword_1011BE0E0);
  sub_100065228(v140, v204, &qword_1011BE0E8);
  v141 = (uint64_t *)(v202 + v201[7]);
  v142 = v141[1];
  if (v142)
  {
    v207 = *v141;
    v208 = v142;
    swift_bridgeObjectRetain();
    v143 = Text.init<A>(_:)(&v207, &type metadata for String, v179);
    v145 = v144;
    v147 = v146;
    v149 = v148 & 1;
    LODWORD(v207) = static HierarchicalShapeStyle.secondary.getter(v143);
    v150 = Text.foregroundStyle<A>(_:)(&v207, v143, v145, v149, v147, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v152 = v151;
    v154 = v153;
    v156 = v155 & 1;
    sub_100055BAC(v143, v145, v149);
    swift_bridgeObjectRelease();
    v207 = v150;
    v208 = v152;
    v209 = v156;
    v210 = v154;
    v157 = AccessibilityIdentifier.libraryGridCellSubtitle.unsafeMutableAddressor();
    v158 = *v157;
    v159 = v157[1];
    swift_bridgeObjectRetain();
    v160 = (uint64_t)v198;
    View.accessibilityIdentifier(_:)(v158, v159, &type metadata for Text, &protocol witness table for Text);
    swift_bridgeObjectRelease();
    sub_100055BAC(v150, v152, v156);
    swift_bridgeObjectRelease();
    v161 = sub_100007E8C(&qword_1011A2988);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v160, 0, 1, v161);
  }
  else
  {
    v162 = sub_100007E8C(&qword_1011A2988);
    v160 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v198, 1, 1, v162);
  }
  v164 = v205;
  v163 = v206;
  v165 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
  v166 = v196;
  v167 = v203;
  v165(v196, v203, v206);
  v168 = v204;
  v169 = v197;
  sub_10004A160(v204, v197, &qword_1011BE0E8);
  v170 = v200;
  sub_10004A160(v160, v200, &qword_1011BE0D0);
  v171 = v199;
  v165(v199, v166, v163);
  v172 = sub_100007E8C(&qword_1011BE150);
  sub_10004A160(v169, (uint64_t)&v171[*(int *)(v172 + 48)], &qword_1011BE0E8);
  sub_10004A160(v170, (uint64_t)&v171[*(int *)(v172 + 64)], &qword_1011BE0D0);
  sub_10004FF60(v160, &qword_1011BE0D0);
  sub_10004FF60(v168, &qword_1011BE0E8);
  v173 = *(void (**)(char *, uint64_t))(v164 + 8);
  v173(v167, v163);
  sub_10004FF60(v170, &qword_1011BE0D0);
  sub_10004FF60(v169, &qword_1011BE0E8);
  return ((uint64_t (*)(char *, uint64_t))v173)(v166, v163);
}

uint64_t sub_100612C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD v25[4];

  v1 = v0;
  v2 = type metadata accessor for Artwork(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v1, (uint64_t)v8, (uint64_t *)&unk_1011A3E10);
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    v13 = (uint64_t *)&unk_1011A3E10;
    v14 = (uint64_t)v8;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.ViewModel);
    Artwork.url(width:height:)(0, 0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15);
    if ((_DWORD)v17 != 1)
    {
      v19 = URL.absoluteString.getter(v17);
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
      v25[2] = v19;
      v25[3] = v21;
      v25[0] = 0x6E6569736E617274;
      v25[1] = 0xE900000000000074;
      v22 = sub_100055B68();
      v23 = StringProtocol.contains<A>(_:)(v25, &type metadata for String, &type metadata for String, v22, v22);
      swift_bridgeObjectRelease();
      v18 = v23 ^ 1;
      return v18 & 1;
    }
    v13 = &qword_10119E460;
    v14 = (uint64_t)v11;
  }
  sub_10004FF60(v14, v13);
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_100612EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  __int128 v28;
  _OWORD v29[2];

  v27[1] = a2;
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = sub_100007E8C(&qword_1011A0D80);
  __chkstk_darwin(v27[0]);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v14 = a1 + v13[5];
  v15 = (__int128 *)(a1 + v13[7]);
  v16 = *(__int128 *)((char *)v15 + 26);
  v17 = v15[1];
  v28 = *v15;
  v29[0] = v17;
  *(_OWORD *)((char *)v29 + 10) = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v3);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(a1, v14, (uint64_t)&v28, (uint64_t)v6, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = a1 + v13[6];
  v19 = *(_QWORD *)v18;
  LOBYTE(v14) = *(_BYTE *)(v18 + 8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v7);
  v20 = v27[0];
  v21 = &v12[*(int *)(v27[0] + 36)];
  *(_QWORD *)v21 = v19;
  v21[8] = v14;
  v21[9] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22 = AccessibilityIdentifier.libraryGridCellArtwork.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = sub_1000F3E9C();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v23, v24, v20, v25);
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v12, &qword_1011A0D80);
}

uint64_t sub_1006130A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t inited;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char v88[64];
  uint64_t v89;
  _QWORD v90[2];

  v87 = a1;
  v81 = type metadata accessor for AccessibilityTraits(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v77 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for AccessibilityChildBehavior(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for DynamicTypeSize(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A2D90);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011A2D98);
  __chkstk_darwin(v70);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011BE158);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011BE160);
  __chkstk_darwin(v73);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011BE168);
  __chkstk_darwin(v78);
  v79 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_1011BE170);
  __chkstk_darwin(v84);
  v86 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011BE178);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void *)objc_opt_self(UIFont);
  v19 = (int *)_s8ListCellVMa(0);
  v20 = (uint64_t *)(v1 + v19[9]);
  v89 = *v20;
  v21 = v89;
  sub_100064C78((uint64_t)(v20 + 1), (uint64_t)v90);
  v22 = v21;
  v23 = v1;
  v24 = objc_msgSend(v18, "preferredFontForTextStyle:", v22);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v90);
  v25 = sub_1008237B8((uint64_t)v5);
  v26 = DynamicTypeSize.isAccessibilitySize.getter(v25);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v5, v68);
  if ((v26 & 1) != 0)
    v28 = static VerticalAlignment.top.getter(v27);
  else
    v28 = static VerticalAlignment.center.getter(v27);
  v29 = v28;
  if (qword_10119C3D0 != -1)
    swift_once(&qword_10119C3D0, sub_1006154C8);
  v30 = qword_1011BDCD8;
  *(_QWORD *)v8 = v29;
  *((_QWORD *)v8 + 1) = v30;
  v8[16] = 0;
  v31 = (uint64_t)&v8[*(int *)(sub_100007E8C(&qword_1011BE180) + 44)];
  v69 = v24;
  v32 = sub_1006137BC(v23, v24, v31);
  v33 = static Alignment.leading.getter(v32);
  sub_10014ADE8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v33, v34);
  v35 = sub_10004FF60((uint64_t)v8, &qword_1011A2D90);
  v36 = v74;
  static AccessibilityChildBehavior.combine.getter(v35);
  v37 = sub_10062966C();
  v38 = v70;
  View.accessibilityElement(children:)(v36, v70, v37);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v76);
  v39 = sub_10004FF60((uint64_t)v10, &qword_1011A2D98);
  v40 = v77;
  static AccessibilityTraits.isButton.getter(v39);
  v89 = v38;
  v90[0] = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v42 = v72;
  View.accessibilityAddTraits(_:)(v40, v72, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v81);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v12, v42);
  v43 = AccessibilityIdentifier.libraryListCell.unsafeMutableAddressor();
  v44 = *v43;
  v45 = v43[1];
  v46 = sub_1006296F0();
  swift_bridgeObjectRetain();
  v47 = (uint64_t)v79;
  View.accessibilityIdentifier(_:)(v44, v45, v73, v46);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v14, &qword_1011BE160);
  v48 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v48, v88);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v50 = (_QWORD *)(v23 + v19[5]);
  v51 = v50[1];
  *(_QWORD *)(inited + 32) = *v50;
  v52 = inited + 32;
  *(_QWORD *)(inited + 40) = v51;
  v53 = (_QWORD *)(v23 + v19[6]);
  v54 = v53[1];
  *(_QWORD *)(inited + 48) = *v53;
  *(_QWORD *)(inited + 56) = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = static Text.compact(_:)(inited);
  swift_setDeallocating(inited);
  v56 = *(_QWORD *)(inited + 16);
  v57 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v52, v56, v57);
  v58 = sub_10062979C();
  v59 = (uint64_t)v86;
  View.accessibilityInputLabels(_:)(v55, v78, v58);
  swift_bridgeObjectRelease();
  v60 = sub_10004FF60(v47, &qword_1011BE168);
  __chkstk_darwin(v60);
  v66[2] = v23;
  v61 = _s17ContextMenuButtonVMa(0);
  v62 = sub_10062983C();
  v63 = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  v64 = v82;
  View.accessibilityActions<A>(_:)(sub_100629820, v66, v84, v61, v62, v63);

  sub_10004FF60(v59, &qword_1011BE170);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v83 + 32))(v87, v64, v85);
}

uint64_t sub_1006137BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  void *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD v160[2];
  _OWORD v161[7];
  __int128 v162;
  _BYTE v163[26];

  v148 = a2;
  v157 = a3;
  v129 = _s17ContextMenuButtonVMa(0);
  __chkstk_darwin(v129);
  v131 = (uint64_t)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v130 = (uint64_t *)((char *)&v128 - v6);
  v7 = sub_100007E8C(&qword_1011BE1B8);
  __chkstk_darwin(v7);
  v156 = (uint64_t *)((char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v154 = (uint64_t)&v128 - v10;
  v11 = sub_100007E8C(&qword_1011BE1C0);
  __chkstk_darwin(v11);
  v155 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v152 = (uint64_t *)((char *)&v128 - v14);
  __chkstk_darwin(v15);
  v159 = (uint64_t)&v128 - v16;
  v17 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v134 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v139 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v25 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v133 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v135);
  v132 = (char *)&v128 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100007E8C((uint64_t *)&unk_1011C6970);
  __chkstk_darwin(v141);
  v140 = (uint64_t)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C(&qword_1011BE1C8);
  __chkstk_darwin(v143);
  v142 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011BE1D0);
  v149 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v147 = (char *)&v128 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_1011BE1D8);
  __chkstk_darwin(v145);
  v150 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100007E8C(&qword_1011BE1E0);
  __chkstk_darwin(v144);
  v153 = (uint64_t)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v146 = (char *)&v128 - v34;
  __chkstk_darwin(v35);
  v158 = (uint64_t)&v128 - v36;
  v37 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v38 = a1 + v37[5];
  v39 = (__int128 *)(a1 + v37[7]);
  v40 = *(__int128 *)((char *)v39 + 26);
  v41 = v39[1];
  v162 = *v39;
  *(_OWORD *)v163 = v41;
  *(_OWORD *)&v163[10] = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v17);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(a1, v38, (uint64_t)&v162, (uint64_t)v20, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v42 = a1 + v37[8];
  v43 = *(_QWORD *)v42;
  v44 = *(_QWORD *)(v42 + 8);
  LOBYTE(v38) = *(_BYTE *)(v42 + 16);
  v45 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v46 = sub_1000E4264();
  *(_QWORD *)&v161[0] = v45;
  *((_QWORD *)&v161[0] + 1) = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v161, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(v43, v44, v38, v21, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v23, v21);
  v48 = Border.artwork.unsafeMutableAddressor();
  v49 = *v48;
  v50 = *((double *)v48 + 1);
  v51 = *(_QWORD *)v42;
  v52 = *(_QWORD *)(v42 + 8);
  LOBYTE(v38) = *(_BYTE *)(v42 + 16);
  LOBYTE(v42) = *((_BYTE *)v48 + 16);
  swift_retain();
  *(_QWORD *)&v161[0] = v21;
  *((_QWORD *)&v161[0] + 1) = OpaqueTypeConformance2;
  v53 = swift_getOpaqueTypeConformance2(v161, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v54 = v133;
  v55 = v42;
  v56 = v136;
  View.border(_:corner:)(v49, v55, v51, v52, v38, v136, v53, v50);
  v57 = (uint64_t)v132;
  v58 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v25, v56, v58);
  v59 = a1 + v37[6];
  v60 = *(_QWORD *)v59;
  LOBYTE(v51) = *(_BYTE *)(v59 + 8);
  v61 = v137;
  v62 = v138;
  (*(void (**)(uint64_t, char *, uint64_t))(v137 + 16))(v57, v54, v138);
  v63 = v57 + *(int *)(v135 + 36);
  *(_QWORD *)v63 = v60;
  *(_BYTE *)(v63 + 8) = v51;
  *(_BYTE *)(v63 + 9) = 0;
  v64 = v148;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v62);
  v65 = objc_msgSend(v64, "lineHeight");
  v67 = v66;
  v68 = static Alignment.center.getter(v65);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v161, 0, 1, 0, 1, 0, 1, v67, 0, 0, 1, 0, 1, v68, v69);
  v70 = v140;
  sub_10004A160(v57, v140, &qword_1011A0628);
  v71 = v141;
  v72 = (_OWORD *)(v70 + *(int *)(v141 + 36));
  v73 = v161[5];
  v72[4] = v161[4];
  v72[5] = v73;
  v72[6] = v161[6];
  v74 = v161[1];
  *v72 = v161[0];
  v72[1] = v74;
  v75 = v161[3];
  v72[2] = v161[2];
  v72[3] = v75;
  sub_10004FF60(v57, &qword_1011A0628);
  v76 = AccessibilityIdentifier.libraryListCellArtwork.unsafeMutableAddressor();
  v77 = *v76;
  v78 = v76[1];
  v79 = sub_10005610C((unint64_t *)&qword_1011C6980, (uint64_t *)&unk_1011C6970, (void (*)(void))sub_100238A3C);
  swift_bridgeObjectRetain();
  v80 = (uint64_t)v142;
  View.accessibilityIdentifier(_:)(v77, v78, v71, v79);
  swift_bridgeObjectRelease();
  sub_10004FF60(v70, (uint64_t *)&unk_1011C6970);
  v160[0] = 0xD000000000000019;
  v160[1] = 0x8000000100E40BB0;
  v81 = sub_1006298C0();
  v82 = v147;
  View.presentationSource<A>(id:)(v160, v143, &type metadata for String, v81, &protocol witness table for String);
  v83 = sub_10004FF60(v80, &qword_1011BE1C8);
  v84 = static Edge.Set.leading.getter(v83);
  v85 = _s8ListCellVMa(0);
  v86 = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(v85 + 36) + 96))
    v86 = 6.0;
  v87 = EdgeInsets.init(_all:)(v86);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v94 = v149;
  v95 = (uint64_t)v150;
  v96 = v151;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v150, v82, v151);
  v97 = v95 + *(int *)(v145 + 36);
  *(_BYTE *)v97 = v84;
  *(double *)(v97 + 8) = v87;
  *(_QWORD *)(v97 + 16) = v89;
  *(_QWORD *)(v97 + 24) = v91;
  *(_QWORD *)(v97 + 32) = v93;
  *(_BYTE *)(v97 + 40) = 0;
  v98 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v82, v96);
  v99 = static Alignment.trailing.getter(v98);
  v101 = v100;
  v102 = (uint64_t)v146;
  v103 = (uint64_t)&v146[*(int *)(v144 + 36)];
  sub_100614470(a1, v103);
  v104 = (uint64_t *)(v103 + *(int *)(sub_100007E8C(&qword_1011BE1F0) + 36));
  *v104 = v99;
  v104[1] = v101;
  sub_100065228(v95, v102, &qword_1011BE1D8);
  v105 = v158;
  v106 = sub_100065228(v102, v158, &qword_1011BE1E0);
  v107 = static HorizontalAlignment.leading.getter(v106);
  v108 = (uint64_t)v152;
  *v152 = v107;
  *(_QWORD *)(v108 + 8) = 0;
  *(_BYTE *)(v108 + 16) = 0;
  v109 = sub_100007E8C(&qword_1011BE1F8);
  sub_100614674(a1, (uint64_t *)v64, v108 + *(int *)(v109 + 44));
  sub_100065228(v108, v159, &qword_1011BE1C0);
  v110 = (uint64_t *)(a1 + *(int *)(v85 + 40));
  v111 = *v110;
  if (*v110)
  {
    v112 = v110[1];
    v113 = (uint64_t)v130;
    *v130 = v111;
    *(_QWORD *)(v113 + 8) = v112;
    v160[0] = 0x4046000000000000;
    v114 = sub_1000E4360();
    swift_retain_n(v112, 2);
    ScaledMetric.init(wrappedValue:)(v160, &type metadata for CGFloat, v114);
    v160[0] = 0x403C000000000000;
    ScaledMetric.init(wrappedValue:)(v160, &type metadata for CGFloat, v114);
    v115 = v131;
    sub_10005B704(v113, v131, _s17ContextMenuButtonVMa);
    v116 = (uint64_t)v156;
    *v156 = 0;
    *(_BYTE *)(v116 + 8) = 1;
    v117 = sub_100007E8C(&qword_1011BE210);
    sub_10005B704(v115, v116 + *(int *)(v117 + 48), _s17ContextMenuButtonVMa);
    sub_10004BA30(v111, v112);
    sub_10005B748(v113, _s17ContextMenuButtonVMa);
    sub_10005B748(v115, _s17ContextMenuButtonVMa);
    v118 = sub_100007E8C(&qword_1011BE200);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v116, 0, 1, v118);
    v119 = v154;
    sub_100065228(v116, v154, &qword_1011BE1B8);
  }
  else
  {
    v120 = sub_100007E8C(&qword_1011BE200);
    v119 = v154;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v154, 1, 1, v120);
    v116 = (uint64_t)v156;
  }
  v121 = v105;
  v122 = v153;
  sub_10004A160(v121, v153, &qword_1011BE1E0);
  v123 = v159;
  v124 = v155;
  sub_10004A160(v159, v155, &qword_1011BE1C0);
  sub_10004A160(v119, v116, &qword_1011BE1B8);
  v125 = v157;
  sub_10004A160(v122, v157, &qword_1011BE1E0);
  v126 = sub_100007E8C(&qword_1011BE208);
  sub_10004A160(v124, v125 + *(int *)(v126 + 48), &qword_1011BE1C0);
  sub_10004A160(v116, v125 + *(int *)(v126 + 64), &qword_1011BE1B8);
  sub_10004FF60(v119, &qword_1011BE1B8);
  sub_10004FF60(v123, &qword_1011BE1C0);
  sub_10004FF60(v158, &qword_1011BE1E0);
  sub_10004FF60(v116, &qword_1011BE1B8);
  sub_10004FF60(v124, &qword_1011BE1C0);
  return sub_10004FF60(v122, &qword_1011BE1E0);
}

uint64_t sub_100614470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s13FavoriteBadgeVMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (double *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - v13;
  v15 = _s8ListCellVMa(0);
  if (*(_BYTE *)(a1 + *(int *)(v15 + 28)) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  v16 = v15;
  v17 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 28);
  v18 = *(double *)v17;
  v19 = 0.0;
  if (*(_BYTE *)(v17 + 8))
    v18 = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(v16 + 36) + 96))
    v19 = 6.0;
  *v11 = v18 + v19;
  *((_BYTE *)v11 + 8) = 0;
  v23 = 0x4020000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.largeTitle(_:), v4);
  v20 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v23, v7, &type metadata for CGFloat, v20);
  *(double *)((char *)v11 + *(int *)(v8 + 24)) = 4.0;
  sub_10005B6C0((uint64_t)v11, (uint64_t)v14, _s13FavoriteBadgeVMa);
  sub_10005B6C0((uint64_t)v14, a2, _s13FavoriteBadgeVMa);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
}

uint64_t sub_100614674@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int *v52;
  uint64_t v53;
  double v54;
  _QWORD *v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  unint64_t v72;
  char *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  void *v104;
  uint64_t *v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  double v114;
  _QWORD *v115;
  __n128 v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  double v132;
  double v133;
  double v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;

  v169 = a2;
  v181 = a3;
  v179 = sub_100007E8C(&qword_1011BE218);
  v177 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v159 = (char *)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v158 = (uint64_t)&v157 - v6;
  v7 = sub_100007E8C(&qword_1011BE220);
  __chkstk_darwin(v7);
  v180 = (uint64_t)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v178 = (uint64_t)&v157 - v10;
  v183 = type metadata accessor for DynamicTypeSize(0);
  v175 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v182 = (uint64_t)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B8D50);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for Text.Suffix(0, v13);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v17 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_1011A5320);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v19 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100007E8C(&qword_1011BE228);
  __chkstk_darwin(v165);
  v21 = (char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011BE230);
  __chkstk_darwin(v22);
  v168 = (uint64_t)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_100007E8C(&qword_1011BE238);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (char *)&v157 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011A2DA0);
  __chkstk_darwin(v170);
  v174 = (char *)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100007E8C(&qword_1011A2DA8);
  __chkstk_darwin(v161);
  v162 = (char *)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011BE240);
  __chkstk_darwin(v27);
  v176 = (uint64_t)&v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v160 = (char *)&v157 - v30;
  __chkstk_darwin(v31);
  v184 = (uint64_t)&v157 - v32;
  v33 = (int *)_s8ListCellVMa(0);
  v34 = (uint64_t *)(a1 + v33[5]);
  v35 = v34[1];
  v185 = *v34;
  v186 = v35;
  v36 = sub_100055B68();
  swift_bridgeObjectRetain();
  v157 = v36;
  v185 = Text.init<A>(_:)(&v185, &type metadata for String, v36);
  v186 = v37;
  v187 = v38 & 1;
  v188 = v39;
  sub_10004A160(a1 + v33[8], (uint64_t)v15, &qword_1011B8D50);
  v40 = TextBadge.init(for:isPlayable:)(v15, 1);
  v41 = TextBadge.view.getter(v40);
  v43 = v42;
  LOBYTE(v36) = v44 & 1;
  static Text.Suffix.alwaysVisible(_:)(v41, v42, v44 & 1, v45);
  sub_100055BAC(v41, v43, v36);
  swift_bridgeObjectRelease();
  View.textSuffix(_:)(v17, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v17, v164);
  sub_100055BAC(v185, v186, v187);
  swift_bridgeObjectRelease();
  v46 = v169;
  v47 = Font.init(_:)(v46);
  KeyPath = swift_getKeyPath(&unk_100EC5720);
  v49 = v166;
  v50 = v167;
  (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v21, v19, v167);
  v51 = (uint64_t *)&v21[*(int *)(v165 + 36)];
  *v51 = KeyPath;
  v51[1] = v47;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
  v52 = v33;
  v169 = (uint64_t *)(a1 + v33[9]);
  v185 = *v169;
  sub_100064C78((uint64_t)(v169 + 1), (uint64_t)&v186);
  v53 = v189;
  v54 = v190;
  v55 = sub_100007E68(&v186, v189);
  v56 = __chkstk_darwin(v55);
  v58 = (char *)&v157 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v59 + 16))(v58, v56);
  v60 = v54;
  v61 = a1;
  v62 = AnyShapeStyle.init<A>(_:)(v58, v53, *(_QWORD *)&v60);
  v63 = v168;
  sub_10004A160((uint64_t)v21, v168, &qword_1011BE228);
  *(_QWORD *)(v63 + *(int *)(v22 + 36)) = v62;
  sub_10004FF60((uint64_t)v21, &qword_1011BE228);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v186);
  objc_msgSend(v46, "lineHeight");
  v65 = v64;
  objc_msgSend(v46, "leading");
  v67 = fabs(v66);
  v68 = v61 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 28);
  v69 = *(double *)(v68 + 16);
  v70 = 0.0;
  if (*(_BYTE *)(v68 + 24))
    v69 = 0.0;
  if (v69 <= v65 + v67)
  {
    if (*(_BYTE *)(v68 + 8))
      v71 = 0.0;
    else
      v71 = *(double *)v68;
    if (qword_10119C3D0 != -1)
      swift_once(&qword_10119C3D0, sub_1006154C8);
    v70 = v71 + *(double *)&qword_1011BDCD8;
  }
  v72 = sub_100629964();
  v73 = v171;
  v74.n128_f64[0] = v70;
  View.bodyHeadOutdent(_:)(v22, v72, v74);
  sub_10004FF60(v63, &qword_1011BE230);
  v75 = swift_getKeyPath(&unk_100EC56F0);
  v76 = v172;
  v77 = (uint64_t)v174;
  v78 = v173;
  (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v174, v73, v173);
  v79 = v77 + *(int *)(v170 + 36);
  *(_QWORD *)v79 = v75;
  *(_QWORD *)(v79 + 8) = 2;
  *(_BYTE *)(v79 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v78);
  v80 = v182;
  v173 = v61 + v33[11];
  v81 = sub_1008237B8(v182);
  LOBYTE(v75) = DynamicTypeSize.isAccessibilitySize.getter(v81);
  v175 = *(_QWORD *)(v175 + 8);
  v82 = ((uint64_t (*)(uint64_t, uint64_t))v175)(v80, v183);
  v83 = 1;
  v167 = v68;
  if ((v75 & 1) != 0)
  {
    v84 = *(double *)(v68 + 16);
    v85 = *(_BYTE *)(v68 + 24);
  }
  else
  {
    v84 = 0.0;
    v85 = 1;
  }
  v86 = (uint64_t)v162;
  v87 = v161;
  v88 = (uint64_t)v160;
  v89 = static Alignment.leading.getter(v82);
  sub_10014AE4C(0.0, 1, 0.0, 1, 0.0, 1, v84, v85, v86, 0.0, 1, 0.0, 1, v89, v90);
  sub_10004FF60(v77, &qword_1011A2DA0);
  v91 = AccessibilityIdentifier.libraryListCellTitle.unsafeMutableAddressor();
  v92 = *v91;
  v93 = v91[1];
  v94 = sub_10005610C(&qword_1011BE268, &qword_1011A2DA8, (void (*)(void))sub_100629A90);
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v92, v93, v87, v94);
  swift_bridgeObjectRelease();
  sub_10004FF60(v86, &qword_1011A2DA8);
  sub_100065228(v88, v184, &qword_1011BE240);
  v95 = (uint64_t *)(v61 + v52[6]);
  v96 = v95[1];
  if (v96)
  {
    v185 = *v95;
    v186 = v96;
    swift_bridgeObjectRetain();
    v97 = Text.init<A>(_:)(&v185, &type metadata for String, v157);
    v99 = v98;
    v101 = v100;
    v103 = v102 & 1;
    v104 = (void *)objc_opt_self(UIFont);
    v105 = v169;
    v185 = v169[6];
    v106 = v185;
    sub_100064C78((uint64_t)(v169 + 7), (uint64_t)&v186);
    v107 = objc_msgSend(v104, "preferredFontForTextStyle:", v106);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v186);
    v108 = Font.init(_:)(v107);
    v109 = Text.font(_:)(v108, v97, v99, v103, v101);
    v172 = v110;
    LOBYTE(v107) = v111;
    v174 = v112;
    swift_release();
    sub_100055BAC(v97, v99, v103);
    swift_bridgeObjectRelease();
    v185 = v105[6];
    sub_100064C78((uint64_t)(v105 + 7), (uint64_t)&v186);
    v113 = v189;
    v114 = v190;
    v115 = sub_100007E68(&v186, v189);
    v116 = __chkstk_darwin(v115);
    v118 = (char *)&v157 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v119 + 16))(v118, v116);
    v198 = AnyShapeStyle.init<A>(_:)(v118, v113, *(_QWORD *)&v114);
    v120 = v172;
    v121 = Text.foregroundStyle<A>(_:)(&v198, v109, v172, v107 & 1, v174, &type metadata for AnyShapeStyle, &protocol witness table for AnyShapeStyle);
    v123 = v122;
    v125 = v124;
    v127 = v126;
    sub_100055BAC(v109, v120, v107 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    v128 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v186);
    v129 = static Edge.Set.leading.getter(v128);
    v130 = v182;
    v131 = sub_1008237B8(v182);
    LOBYTE(v113) = DynamicTypeSize.isAccessibilitySize.getter(v131);
    ((void (*)(uint64_t, uint64_t))v175)(v130, v183);
    v132 = 0.0;
    if ((v113 & 1) != 0)
    {
      if (*(_BYTE *)(v167 + 8))
        v133 = 0.0;
      else
        v133 = *(double *)v167;
      if (qword_10119C3D0 != -1)
        swift_once(&qword_10119C3D0, sub_1006154C8);
      v132 = -(v133 + *(double *)&qword_1011BDCD8);
    }
    v134 = EdgeInsets.init(_all:)(v132);
    v136 = v135;
    v138 = v137;
    v140 = v139;
    v141 = swift_getKeyPath(&unk_100EC56F0);
    v185 = v121;
    v186 = v123;
    v142 = v125 & 1;
    v187 = v142;
    v188 = v127;
    LOBYTE(v189) = v129;
    v190 = v134;
    v191 = v136;
    v192 = v138;
    v193 = v140;
    v194 = 0;
    v195 = v141;
    v196 = 1;
    v197 = 0;
    v143 = AccessibilityIdentifier.libraryListCellSubtitle.unsafeMutableAddressor();
    v144 = *v143;
    v145 = v143[1];
    swift_bridgeObjectRetain();
    v146 = sub_100007E8C(&qword_1011BE280);
    v147 = sub_100629B3C();
    v148 = (uint64_t)v159;
    View.accessibilityIdentifier(_:)(v144, v145, v146, v147);
    swift_bridgeObjectRelease();
    sub_100055BAC(v121, v123, v142);
    swift_release();
    swift_bridgeObjectRelease();
    v149 = v158;
    sub_100065228(v148, v158, &qword_1011BE218);
    v150 = v178;
    sub_100065228(v149, v178, &qword_1011BE218);
    v83 = 0;
  }
  else
  {
    v150 = v178;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v150, v83, 1, v179);
  v151 = v184;
  v152 = v176;
  sub_10004A160(v184, v176, &qword_1011BE240);
  v153 = v180;
  sub_10004A160(v150, v180, &qword_1011BE220);
  v154 = v181;
  sub_10004A160(v152, v181, &qword_1011BE240);
  v155 = sub_100007E8C(&qword_1011BE278);
  sub_10004A160(v153, v154 + *(int *)(v155 + 48), &qword_1011BE220);
  sub_10004FF60(v150, &qword_1011BE220);
  sub_10004FF60(v151, &qword_1011BE240);
  sub_10004FF60(v153, &qword_1011BE220);
  return sub_10004FF60(v152, &qword_1011BE240);
}

uint64_t sub_10061540C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v3 = (uint64_t *)(a1 + *(int *)(_s8ListCellVMa(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  _s17ContextMenuButtonVMa(0);
  v8 = 0x4046000000000000;
  sub_100048AAC(v4, v5);
  v6 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v8, &type metadata for CGFloat, v6);
  v8 = 0x403C000000000000;
  return ScaledMetric.init(wrappedValue:)(&v8, &type metadata for CGFloat, v6);
}

void sub_1006154C8()
{
  qword_1011BDCD8 = 0x4028000000000000;
}

uint64_t sub_1006154DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t TupleTypeMetadata2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t OpaqueTypeConformance2;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t inited;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD v155[6];
  _QWORD v156[8];
  char v157[64];
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;

  v154 = a2;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v151 = *(_QWORD *)(v3 - 8);
  v152 = v3;
  __chkstk_darwin(v3);
  v150 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for AccessibilityChildBehavior(0);
  v147 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v146 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100044B54(&qword_1011BE348);
  v153 = a1;
  v7 = a1[2];
  v144 = a1[3];
  v145 = v7;
  v8 = a1[4];
  v142 = v6;
  v143 = v8;
  v9 = _s9TrackCellV13TrailingIconsVMa(255, v7, v144, v8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v6, &type metadata for Spacer, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v13 = type metadata accessor for HStack(255, v11, WitnessTable);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _FrameLayout);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = sub_100044B54(&qword_1011A2988);
  v17 = sub_100044B54(&qword_1011BE350);
  v18 = swift_getTupleTypeMetadata3(255, v15, v16, v17, 0, 0);
  v19 = type metadata accessor for TupleView(255, v18);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v139 = type metadata accessor for VStack(255, v19);
  v140 = type metadata accessor for ModifiedContent(255, v139, &type metadata for _FlexFrameLayout);
  v20 = sub_100044B54(&qword_1011A2DC8);
  v21 = swift_getTupleTypeMetadata3(255, v20, &type metadata for Spacer, v9, 0, 0);
  v22 = type metadata accessor for TupleView(255, v21);
  v23 = sub_100044B54(&qword_1011BE358);
  v24 = sub_100044B54(&qword_1011A2DE8);
  v25 = sub_100044B54(&qword_1011BE360);
  v26 = sub_100044B54(&qword_1011BE368);
  v27 = swift_getTupleTypeMetadata3(255, v26, &type metadata for Spacer, v9, 0, 0);
  v28 = type metadata accessor for TupleView(255, v27);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v28);
  v30 = type metadata accessor for HStack(255, v28, v29);
  v31 = type metadata accessor for ModifiedContent(255, v30, &type metadata for _FlexFrameLayout);
  v32 = swift_getTupleTypeMetadata3(255, v24, v25, v31, 0, 0);
  v33 = type metadata accessor for TupleView(255, v32);
  v34 = sub_100049F28(&qword_1011BE370, &qword_1011BE358, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v35 = type metadata accessor for _VariadicView.Tree(255, v23, v33, v34);
  v36 = sub_100044B54((uint64_t *)&unk_1011BF930);
  v37 = type metadata accessor for ModifiedContent(255, v35, v36);
  v38 = sub_100044B54(&qword_1011BE378);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v37, v38, 0, 0);
  v40 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v41 = type metadata accessor for _ConditionalContent(255, v22, v40);
  v42 = swift_getTupleTypeMetadata2(255, v142, v41, 0, 0);
  v43 = type metadata accessor for TupleView(255, v42);
  v44 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v43);
  v45 = type metadata accessor for HStack(255, v43, v44);
  v46 = v140;
  v47 = type metadata accessor for _ConditionalContent(255, v140, v45);
  v130 = v47;
  v48 = type metadata accessor for Group(0, v47);
  v141 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v137 = (char *)&v117 - v49;
  v169 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v139);
  v170 = &protocol witness table for _FlexFrameLayout;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v51 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v45);
  v167 = v50;
  v168 = v51;
  v129 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v47);
  v166 = v129;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v48);
  v158 = v48;
  v159 = v52;
  v53 = v52;
  v117 = v52;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v158, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v132 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v128 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v56 = (char *)&v117 - v55;
  v57 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v58 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v57);
  v135 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v126 = (char *)&v117 - v59;
  v122 = v58;
  v60 = type metadata accessor for ModifiedContent(0, v58, v57);
  v138 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v127 = (char *)&v117 - v61;
  v62 = _s17ContextMenuButtonVMa(255);
  v121 = v62;
  v158 = v48;
  v159 = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v158, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v118 = OpaqueTypeConformance2;
  v64 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v164 = OpaqueTypeConformance2;
  v165 = v64;
  v65 = v64;
  v142 = v64;
  v120 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v58);
  v162 = v120;
  v163 = v65;
  v125 = v60;
  v66 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v60);
  v124 = v66;
  v123 = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  v158 = v60;
  v159 = v62;
  v160 = v66;
  v161 = v123;
  v67 = swift_getOpaqueTypeMetadata2(0, &v158, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 0);
  v139 = *(_QWORD *)(v67 - 8);
  v133 = v67;
  __chkstk_darwin(v67);
  v119 = (char *)&v117 - v68;
  v134 = type metadata accessor for ModifiedContent(0, v69, v57);
  v140 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v117 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __chkstk_darwin(v71);
  v136 = (uint64_t)&v117 - v73;
  v74 = v144;
  v75 = v145;
  v156[2] = v145;
  v156[3] = v144;
  v76 = v143;
  v77 = v148;
  v156[4] = v143;
  v156[5] = v148;
  v78 = v137;
  v79 = Group<A>.init(content:)(sub_100629EA0, v156, v130, v129, v72);
  v80 = v146;
  static AccessibilityChildBehavior.combine.getter(v79);
  v81 = v56;
  View.accessibilityElement(children:)(v80, v48, v117);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v80, v149);
  v82 = (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v78, v48);
  v83 = v150;
  static AccessibilityTraits.isButton.getter(v82);
  v84 = v126;
  v85 = v128;
  View.accessibilityAddTraits(_:)(v83, v128, v118);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v83, v152);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v81, v85);
  v86 = AccessibilityIdentifier.libraryTrackCell.unsafeMutableAddressor();
  v87 = *v86;
  v88 = v86[1];
  swift_bridgeObjectRetain();
  v89 = v127;
  v90 = v122;
  View.accessibilityIdentifier(_:)(v87, v88, v122, v120);
  v91 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v135 + 8))(v84, v90, v91);
  v155[2] = v75;
  v155[3] = v74;
  v155[4] = v76;
  v155[5] = v77;
  v92 = swift_checkMetadataState(0, v121);
  v93 = v119;
  v95 = v124;
  v94 = v125;
  v96 = v123;
  View.accessibilityActions<A>(_:)(sub_100629EAC, v155, v125, v92, v124, v123);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v89, v94);
  v97 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v97, v157);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v99 = v153;
  v100 = v77;
  v101 = (_QWORD *)(v77 + *((int *)v153 + 11));
  v102 = v101[1];
  *(_QWORD *)(inited + 32) = *v101;
  v103 = inited + 32;
  *(_QWORD *)(inited + 40) = v102;
  v104 = (_QWORD *)(v100 + *((int *)v99 + 12));
  v105 = v104[1];
  *(_QWORD *)(inited + 48) = *v104;
  *(_QWORD *)(inited + 56) = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v106 = static Text.compact(_:)(inited);
  swift_setDeallocating(inited);
  v107 = *(_QWORD *)(inited + 16);
  v108 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v103, v107, v108);
  v158 = v94;
  v159 = v92;
  v160 = v95;
  v161 = v96;
  v109 = swift_getOpaqueTypeConformance2(&v158, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
  v110 = (uint64_t)v131;
  v111 = v133;
  View.accessibilityInputLabels(_:)(v106, v133, v109);
  v112 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v93, v111, v112);
  v156[6] = v109;
  v156[7] = v142;
  v113 = v134;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v134);
  v114 = v136;
  sub_10081EB14(v110, v113, v136);
  v115 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
  v115(v110, v113);
  sub_1000EA744(v114, v113, v154);
  return ((uint64_t (*)(uint64_t, uint64_t))v115)(v114, v113);
}

uint64_t sub_100615ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t KeyPath;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t *v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t OpaqueTypeConformance2;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  double v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char v178;
  uint64_t v179;
  char v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char v193;
  uint64_t v194;
  __n128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  __n128 v204;
  int v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  char v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  unint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  char v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  char v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  char v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  char v276;
  char *v277;
  uint64_t v278;
  char *v279;
  __n128 v280;
  int v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _OWORD *v291;
  __int128 v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void (*v304)(uint64_t, uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  char *v319;
  _QWORD v320[3];
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  char *v353;
  char *v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  __int128 v361;
  char *v362;
  char *v363;
  uint64_t *v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  uint64_t v374;
  char *v375;
  char *v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383[8];
  uint64_t v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  void *v389;
  uint64_t v390;
  void *v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;

  v380 = a4;
  v379 = a3;
  v378 = a2;
  v382 = a1;
  v372 = a5;
  v8 = sub_100044B54(&qword_1011BE348);
  v9 = sub_100044B54(&qword_1011A2DC8);
  v10 = _s9TrackCellV13TrailingIconsVMa(255, a2, a3, a4);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v9, &type metadata for Spacer, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v13 = sub_100044B54(&qword_1011BE358);
  v14 = sub_100044B54(&qword_1011A2DE8);
  v15 = sub_100044B54(&qword_1011BE360);
  v16 = sub_100044B54(&qword_1011BE368);
  v17 = swift_getTupleTypeMetadata3(255, v16, &type metadata for Spacer, v10, 0, 0);
  v18 = type metadata accessor for TupleView(255, v17);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v20 = type metadata accessor for HStack(255, v18, WitnessTable);
  v21 = type metadata accessor for ModifiedContent(255, v20, &type metadata for _FlexFrameLayout);
  v22 = swift_getTupleTypeMetadata3(255, v14, v15, v21, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  v24 = sub_100049F28(&qword_1011BE370, &qword_1011BE358, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v25 = type metadata accessor for _VariadicView.Tree(255, v13, v23, v24);
  v26 = sub_100044B54((uint64_t *)&unk_1011BF930);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = sub_100044B54(&qword_1011BE378);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v27, v28, 0, 0);
  v30 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v31 = type metadata accessor for _ConditionalContent(255, v12, v30);
  v32 = swift_getTupleTypeMetadata2(255, v8, v31, 0, 0);
  v337 = type metadata accessor for TupleView(255, v32);
  v336 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v337);
  v33 = type metadata accessor for HStack(0, v337, v336);
  v338 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v340 = (char *)v320 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v339 = (uint64_t)v320 - v37;
  v328 = type metadata accessor for Text.Suffix(0, v36);
  v327 = *(_QWORD *)(v328 - 8);
  __chkstk_darwin(v328);
  v326 = (char *)v320 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = sub_100007E8C(&qword_1011A5320);
  v331 = *(_QWORD *)(v332 - 8);
  __chkstk_darwin(v332);
  v330 = (char *)v320 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = sub_100007E8C(&qword_1011C6950);
  __chkstk_darwin(v329);
  v333 = (char *)v320 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v334 = sub_100007E8C(&qword_1011BE380);
  __chkstk_darwin(v334);
  v335 = (uint64_t)v320 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011BE388);
  __chkstk_darwin(v42);
  v365 = (uint64_t)v320 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v8;
  v45 = swift_getTupleTypeMetadata3(255, v8, &type metadata for Spacer, v10, 0, 0);
  v46 = type metadata accessor for TupleView(255, v45);
  v47 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v46);
  v48 = type metadata accessor for HStack(255, v46, v47);
  v49 = type metadata accessor for ModifiedContent(255, v48, &type metadata for _FrameLayout);
  v50 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _PaddingLayout);
  v51 = sub_100044B54(&qword_1011A2988);
  v52 = sub_100044B54(&qword_1011BE350);
  v53 = swift_getTupleTypeMetadata3(255, v50, v51, v52, 0, 0);
  v54 = type metadata accessor for TupleView(255, v53);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v54);
  v320[2] = v54;
  v320[1] = v55;
  v56 = type metadata accessor for VStack(0, v54);
  v322 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v321 = (char *)v320 - v57;
  v370 = v58;
  v59 = type metadata accessor for ModifiedContent(0, v58, &type metadata for _FlexFrameLayout);
  v323 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v325 = (char *)v320 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v324 = (uint64_t)v320 - v62;
  v367 = v63;
  v371 = v33;
  v369 = type metadata accessor for _ConditionalContent(0, v63, v33);
  v368 = *(_QWORD *)(v369 - 8);
  __chkstk_darwin(v369);
  v366 = (char *)v320 - v64;
  v65 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v65);
  v374 = (uint64_t)v320 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v376 = (char *)v320 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69);
  v375 = (char *)v320 - v70;
  v345 = type metadata accessor for WaveformState(0);
  v344 = *(_QWORD *)(v345 - 8);
  __chkstk_darwin(v345);
  v356 = (char *)v320 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v351 = sub_100007E8C(&qword_1011BE390);
  __chkstk_darwin(v351);
  v353 = (char *)v320 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v73);
  v75 = (char *)v320 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v76);
  v341 = (uint64_t)v320 - v77;
  v78 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v79 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v81 = (char *)v320 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v349 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v348 = *(_QWORD *)(v349 - 8);
  __chkstk_darwin(v349);
  v83 = (char *)v320 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_100007E8C(&qword_1011BE398);
  __chkstk_darwin(v350);
  v85 = (char *)v320 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v357 = sub_100007E8C(&qword_1011BE3A0);
  v355 = *(_QWORD *)(v357 - 8);
  __chkstk_darwin(v357);
  v352 = (char *)v320 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  v359 = sub_100007E8C(&qword_1011BE3A8);
  v358 = *(_QWORD *)(v359 - 8);
  __chkstk_darwin(v359);
  v354 = (char *)v320 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v360 = sub_100007E8C(&qword_1011BE3B0);
  __chkstk_darwin(v360);
  v346 = (char *)v320 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v361 + 1) = sub_100007E8C(&qword_1011BE3B8);
  __chkstk_darwin(*((_QWORD *)&v361 + 1));
  v362 = (char *)v320 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100007E8C(&qword_1011BE3C0);
  __chkstk_darwin(v90);
  v363 = (char *)v320 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v361 = sub_100007E8C(&qword_1011BE3C8);
  __chkstk_darwin(v361);
  v364 = (_QWORD *)((char *)v320 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  v373 = v44;
  __chkstk_darwin(v93);
  v377 = (char *)v320 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v342 = type metadata accessor for ArtworkImage.Info(0);
  v95 = v382;
  v96 = v382 + *(int *)(v342 + 20);
  v97 = _s9TrackCellVMa(0, v378, v379, v380);
  v98 = sub_100617A04(v97, &v392);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v79 + 104))(v81, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v78, v98);
  v347 = v83;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v95, v96, (uint64_t)&v392, (uint64_t)v81, (uint64_t)v83);
  v99 = *(void (**)(char *, uint64_t))(v79 + 8);
  v100 = v95;
  v99(v81, v78);
  v381 = v97;
  v343 = *(int *)(v97 + 76);
  v101 = *(_QWORD *)(v95 + v343);
  if (v101)
  {
    KeyPath = swift_getKeyPath(&unk_100EC5780);
    *(_QWORD *)&v393 = v101;
    v103 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v393, KeyPath, v103);
    swift_release();
    v104 = v101 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
    swift_beginAccess(v101 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v383, 0, 0);
    v105 = v341;
    sub_10004A160(v104, v341, &qword_1011A6AD8);
    v106 = v345;
    v107 = v344;
  }
  else
  {
    v107 = v344;
    v105 = v341;
    v106 = v345;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v344 + 56))(v341, 1, 1, v345);
  }
  sub_10004A160(v105, (uint64_t)v75, &qword_1011A6AD8);
  v108 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48))(v75, 1, v106);
  v109 = v356;
  if (v108 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v356, enum case for WaveformState.hidden(_:), v106);
    v110 = sub_10004FF60((uint64_t)v75, &qword_1011A6AD8);
  }
  else
  {
    v110 = (*(uint64_t (**)(char *, char *, uint64_t))(v107 + 32))(v356, v75, v106);
  }
  static Color.black.getter(v110);
  v111 = Color.opacity(_:)(0.35);
  v112 = swift_release();
  v113 = (uint64_t)v353;
  *(_QWORD *)&v353[*(int *)(v351 + 36)] = v111;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v107 + 32))(v113, v109, v106, v112);
  v114 = v348;
  v115 = v347;
  v116 = v349;
  (*(void (**)(char *, char *, uint64_t))(v348 + 16))(v85, v347, v349);
  v117 = v350;
  sub_100065228(v113, (uint64_t)&v85[*(int *)(v350 + 36)], &qword_1011BE390);
  sub_10004FF60(v105, &qword_1011A6AD8);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v115, v116);
  v118 = v342;
  v119 = v100 + *(int *)(v342 + 32);
  v120 = *(_QWORD *)v119;
  v121 = *(_QWORD *)(v119 + 8);
  LOBYTE(v114) = *(_BYTE *)(v119 + 16);
  v122 = sub_100629EB8();
  v123 = v352;
  View.corner(_:)(v120, v121, v114, v117, v122);
  sub_10004FF60((uint64_t)v85, &qword_1011BE398);
  v124 = Border.artwork.unsafeMutableAddressor();
  v125 = *v124;
  v126 = *((double *)v124 + 1);
  v127 = *(_QWORD *)v119;
  v128 = *(_QWORD *)(v119 + 8);
  LOBYTE(v119) = *(_BYTE *)(v119 + 16);
  v129 = *((_BYTE *)v124 + 16);
  swift_retain();
  *(_QWORD *)&v393 = v117;
  *((_QWORD *)&v393 + 1) = v122;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v393, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v131 = v354;
  v132 = v128;
  v133 = v357;
  View.border(_:corner:)(v125, v129, v127, v132, v119, v357, OpaqueTypeConformance2, v126);
  v134 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v355 + 8))(v123, v133, v134);
  v135 = v100 + *(int *)(v118 + 24);
  v136 = *(_QWORD *)v135;
  LOBYTE(v127) = *(_BYTE *)(v135 + 8);
  v137 = v358;
  v138 = (uint64_t)v346;
  v139 = v359;
  (*(void (**)(char *, char *, uint64_t))(v358 + 16))(v346, v131, v359);
  v140 = v360;
  v141 = v138 + *(int *)(v360 + 36);
  *(_QWORD *)v141 = v136;
  *(_BYTE *)(v141 + 8) = v127;
  *(_BYTE *)(v141 + 9) = 0;
  (*(void (**)(char *, uint64_t))(v137 + 8))(v131, v139);
  v142 = AccessibilityIdentifier.libraryTrackCellArtwork.unsafeMutableAddressor();
  v143 = *v142;
  v144 = v142[1];
  v145 = sub_100629F64();
  swift_bridgeObjectRetain();
  v146 = (uint64_t)v362;
  View.accessibilityIdentifier(_:)(v143, v144, v140, v145);
  swift_bridgeObjectRelease();
  sub_10004FF60(v138, &qword_1011BE3B0);
  v147 = *(_QWORD *)(v100 + v343);
  if (v147)
  {
    v147 = sub_1001F4A98();
    v149 = v148;
  }
  else
  {
    v149 = 0;
  }
  v150 = (uint64_t)v377;
  v151 = v381;
  v152 = sub_10062A028();
  v153 = (uint64_t)v363;
  View.accessibilityLabel(_:)(v147, v149, *((uint64_t *)&v361 + 1), v152);
  swift_bridgeObjectRelease();
  v154 = sub_10004FF60(v146, &qword_1011BE3B8);
  v155 = static Alignment.trailing.getter(v154);
  v157 = v156;
  v158 = (uint64_t)v364;
  v159 = (uint64_t)v364 + *(int *)(v361 + 36);
  sub_100617B48(v100, v378, v379, v380, v159);
  v160 = (uint64_t *)(v159 + *(int *)(sub_100007E8C(&qword_1011BE1F0) + 36));
  *v160 = v155;
  v160[1] = v157;
  sub_100065228(v153, v158, &qword_1011BE3C0);
  LOBYTE(v155) = static Edge.Set.trailing.getter(v161);
  v162 = EdgeInsets.init(_all:)(12.0);
  v164 = v163;
  v166 = v165;
  v168 = v167;
  sub_10004A160(v158, v150, &qword_1011BE3C8);
  v169 = v150 + *(int *)(v373 + 36);
  *(_BYTE *)v169 = v155;
  *(double *)(v169 + 8) = v162;
  *(_QWORD *)(v169 + 16) = v164;
  *(_QWORD *)(v169 + 24) = v166;
  *(_QWORD *)(v169 + 32) = v168;
  *(_BYTE *)(v169 + 40) = 0;
  sub_10004FF60(v158, &qword_1011BE3C8);
  v170 = (_QWORD *)(v100 + *(int *)(v151 + 44));
  v171 = v170[1];
  *(_QWORD *)&v361 = *v170;
  *(_QWORD *)&v393 = v361;
  *((_QWORD *)&v393 + 1) = v171;
  v172 = sub_100055B68();
  *((_QWORD *)&v361 + 1) = v171;
  swift_bridgeObjectRetain();
  v373 = v172;
  v173 = Text.init<A>(_:)(&v393, &type metadata for String, v172);
  v175 = v174;
  v177 = v176;
  v362 = v176;
  LODWORD(v364) = v178 & 1;
  v360 = v100 + *(int *)(v151 + 64);
  v179 = v374;
  sub_10004A160(v360, v374, &qword_1011B8D50);
  v180 = sub_100617CDC(v151);
  v181 = TextBadge.init(for:isPlayable:)(v179, v180 & 1);
  v182 = TextBadge.view.getter(v181);
  v184 = v183;
  v186 = v185 & 1;
  v187 = (char)v364;
  v189 = static Text.+ infix(_:_:)(v173, v175, v364, v177, v182, v183, v186, v188);
  v191 = v190;
  v363 = v192;
  v194 = v193 & 1;
  sub_100055BAC(v182, v184, v186);
  swift_bridgeObjectRelease();
  sub_100055BAC(v173, v175, v187);
  v195 = swift_bridgeObjectRelease();
  v196 = static Font.callout.getter(v195);
  v197 = Text.font(_:)(v196, v189, v191, v194, v363);
  v199 = v198;
  v201 = v200;
  v203 = v202;
  swift_release();
  sub_100055BAC(v189, v191, v194);
  swift_bridgeObjectRelease();
  if ((sub_100617CDC(v381) & 1) != 0)
    v205 = static HierarchicalShapeStyle.primary.getter(v204);
  else
    v205 = static HierarchicalShapeStyle.tertiary.getter();
  LODWORD(v393) = v205;
  v206 = v201 & 1;
  v207 = Text.foregroundStyle<A>(_:)(&v393, v197, v199, v201 & 1, v203, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v209 = v208;
  v211 = v210;
  v213 = v212 & 1;
  sub_100055BAC(v197, v199, v206);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v393 = v207;
  *((_QWORD *)&v393 + 1) = v209;
  LOBYTE(v394) = v213;
  *((_QWORD *)&v394 + 1) = v211;
  v214 = AccessibilityIdentifier.libraryTrackCellTitle.unsafeMutableAddressor();
  v215 = *v214;
  v216 = v214[1];
  v364 = v214;
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v215, v216, &type metadata for Text, &protocol witness table for Text);
  swift_bridgeObjectRelease();
  sub_100055BAC(v207, v209, v213);
  swift_bridgeObjectRelease();
  v217 = v381;
  v218 = (uint64_t *)(v382 + *(int *)(v381 + 48));
  v219 = v218[1];
  if (v219)
  {
    v220 = *v218;
    v221 = v219;
  }
  else
  {
    v220 = 0;
    v221 = 0xE000000000000000;
  }
  *(_QWORD *)&v393 = v220;
  *((_QWORD *)&v393 + 1) = v221;
  swift_bridgeObjectRetain();
  v222 = Text.init<A>(_:)(&v393, &type metadata for String, v373);
  v224 = v223;
  v226 = v225;
  v228 = v227;
  v229 = sub_100617CDC(v217);
  if ((v229 & 1) != 0)
    v230 = static HierarchicalShapeStyle.secondary.getter(v229);
  else
    v230 = static HierarchicalShapeStyle.tertiary.getter();
  LODWORD(v393) = v230;
  v231 = v226 & 1;
  v232 = Text.foregroundStyle<A>(_:)(&v393, v222, v224, v226 & 1, v228, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v234 = v233;
  v236 = v235;
  v238 = v237 & 1;
  sub_100055BAC(v222, v224, v231);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v393 = v232;
  *((_QWORD *)&v393 + 1) = v234;
  LOBYTE(v394) = v238;
  *((_QWORD *)&v394 + 1) = v236;
  v239 = AccessibilityIdentifier.libraryTrackCellSubtitle.unsafeMutableAddressor();
  v240 = *v239;
  v241 = v239[1];
  swift_bridgeObjectRetain();
  v242 = (uint64_t)v376;
  View.accessibilityIdentifier(_:)(v240, v241, &type metadata for Text, &protocol witness table for Text);
  swift_bridgeObjectRelease();
  sub_100055BAC(v232, v234, v238);
  swift_bridgeObjectRelease();
  v243 = v381;
  v244 = v382;
  v245 = sub_100617DD8(v381);
  if ((v245 & 1) != 0)
  {
    v246 = static HorizontalAlignment.leading.getter(v245);
    __chkstk_darwin(v246);
    LODWORD(v313) = v379;
    LODWORD(v315) = (_DWORD)v377;
    v247 = (uint64_t)v375;
    v248 = v321;
    v250 = VStack.init(alignment:spacing:content:)(v249, 0, 0, sub_10062A0C0);
    v251 = static Alignment.leading.getter(v250);
    v253 = v252;
    v254 = v370;
    v255 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v370);
    LOBYTE(v315) = 1;
    LOBYTE(v313) = 1;
    v256 = (uint64_t)v325;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v313, 0, (_DWORD)v315, v251, v253, v254, v255);
    (*(void (**)(char *, uint64_t))(v322 + 8))(v248, v254);
    v384 = v255;
    v385 = &protocol witness table for _FlexFrameLayout;
    v257 = v367;
    v258 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v367);
    v259 = v324;
    sub_10081EB14(v256, v257, v324);
    v260 = *(void (**)(uint64_t, uint64_t))(v323 + 8);
    v260(v256, v257);
    sub_1000EA744(v259, v257, v256);
    v261 = v371;
    v262 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v371);
    v263 = (uint64_t)v366;
    sub_100817130(v256, v257, v261, v258, v262);
    v264 = v256;
    v265 = (uint64_t)v377;
    v260(v264, v257);
    v260(v259, v257);
  }
  else
  {
    v393 = v361;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v393 = Text.init<A>(_:)(&v393, &type metadata for String, v373);
    *((_QWORD *)&v393 + 1) = v266;
    LOBYTE(v394) = v267 & 1;
    *((_QWORD *)&v394 + 1) = v268;
    v269 = v374;
    sub_10004A160(v360, v374, &qword_1011B8D50);
    v270 = sub_100617CDC(v243);
    v271 = TextBadge.init(for:isPlayable:)(v269, v270 & 1);
    v272 = TextBadge.view.getter(v271);
    v274 = v273;
    v276 = v275 & 1;
    v277 = v326;
    static Text.Suffix.alwaysVisible(_:)(v272, v273, v275 & 1, v278);
    sub_100055BAC(v272, v274, v276);
    swift_bridgeObjectRelease();
    v279 = v330;
    View.textSuffix(_:)(v277, &type metadata for Text, &protocol witness table for Text);
    (*(void (**)(char *, uint64_t))(v327 + 8))(v277, v328);
    sub_100055BAC(v393, *((uint64_t *)&v393 + 1), v394);
    swift_bridgeObjectRelease();
    if ((sub_100617CDC(v243) & 1) != 0)
      v281 = static HierarchicalShapeStyle.primary.getter(v280);
    else
      v281 = static HierarchicalShapeStyle.tertiary.getter();
    v282 = v281;
    v283 = v331;
    v284 = (uint64_t)v333;
    v285 = v332;
    (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v333, v279, v332);
    *(_DWORD *)(v284 + *(int *)(v329 + 36)) = v282;
    v286 = (*(uint64_t (**)(char *, uint64_t))(v283 + 8))(v279, v285);
    v287 = static Alignment.leading.getter(v286);
    _FrameLayout.init(width:height:alignment:)(&v393, 0, 1, 0, 1, v287, v288);
    v289 = v335;
    sub_10004A160(v284, v335, &qword_1011C6950);
    v290 = v334;
    v291 = (_OWORD *)(v289 + *(int *)(v334 + 36));
    v292 = v394;
    *v291 = v393;
    v291[1] = v292;
    v291[2] = v395;
    sub_10004FF60(v284, &qword_1011C6950);
    v293 = *v364;
    v294 = v364[1];
    v295 = sub_10005610C(&qword_1011BE3F0, &qword_1011BE380, (void (*)(void))sub_1006295C4);
    swift_bridgeObjectRetain();
    v296 = v365;
    View.accessibilityIdentifier(_:)(v293, v294, v290, v295);
    swift_bridgeObjectRelease();
    v297 = sub_10004FF60(v289, &qword_1011BE380);
    v298 = static VerticalAlignment.center.getter(v297);
    __chkstk_darwin(v298);
    v312 = v378;
    v313 = v379;
    v265 = (uint64_t)v377;
    v314 = v380;
    v315 = v377;
    v299 = v375;
    v316 = v244;
    v317 = v375;
    v318 = v296;
    v319 = v376;
    v300 = (uint64_t)v340;
    HStack.init(alignment:spacing:content:)(v301, 0, 0, sub_10062A0AC, &v320[-10], v337, v336);
    v261 = v371;
    v302 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v371);
    v303 = v339;
    sub_10081EB14(v300, v261, v339);
    v304 = *(void (**)(uint64_t, uint64_t))(v338 + 8);
    v304(v300, v261);
    sub_1000EA744(v303, v261, v300);
    v254 = v370;
    v390 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v370);
    v391 = &protocol witness table for _FlexFrameLayout;
    v257 = v367;
    v305 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v367);
    v263 = (uint64_t)v366;
    sub_1008171F4(v300, v257, v261, v305, v302);
    v306 = v300;
    v247 = (uint64_t)v299;
    v304(v306, v261);
    v307 = v303;
    v242 = (uint64_t)v376;
    v304(v307, v261);
    sub_10004FF60(v365, &qword_1011BE388);
  }
  v388 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v254);
  v389 = &protocol witness table for _FlexFrameLayout;
  v308 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v257);
  v309 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v261);
  v386 = v308;
  v387 = v309;
  v310 = v369;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v369);
  sub_1000EA744(v263, v310, v372);
  (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v263, v310);
  sub_10004FF60(v242, &qword_1011A2988);
  sub_10004FF60(v247, &qword_1011A2988);
  return sub_10004FF60(v265, &qword_1011BE348);
}

double sub_100617A04@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  double v11;
  int v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  __int128 v17;
  double result;
  __int128 v19;
  _OWORD v20[2];

  v5 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100617DD8(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  if ((v9 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
LABEL_7:
    v14 = 1.0;
    goto LABEL_8;
  }
  v10 = &v7[*(int *)(type metadata accessor for ArtworkImage.Info(0) + 28)];
  v11 = *(double *)v10;
  v12 = v10[8];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  v13 = 0.0;
  if (!v12)
    v13 = v11;
  v14 = 1.5;
  if (v13 > 48.0)
    goto LABEL_7;
LABEL_8:
  v15 = v2 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 28);
  v16 = 0.0;
  if ((*(_BYTE *)(v15 + 8) & 1) == 0)
    v16 = *(double *)v15;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(COERCE__INT64(v14 * v16), 0, COERCE__INT64(v14 * v16), 0, 0, 1, 2, (uint64_t)&v19);
  v17 = v20[0];
  *a2 = v19;
  a2[1] = v17;
  result = *(double *)((char *)v20 + 10);
  *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v20 + 10);
  return result;
}

uint64_t sub_100617B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _BYTE v22[16];

  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s9TrackCellVMa(0, a2, a3, a4);
  if (*(_BYTE *)(a1 + *(int *)(v14 + 60)) == 1)
  {
    sub_100617A04(v14, v21);
    sub_100065228((uint64_t)v21, (uint64_t)v22, &qword_1011AD450);
    sub_100065228((uint64_t)v22, a5, &qword_1011AD450);
    v15 = _s13FavoriteBadgeVMa(0);
    v20 = 0x4020000000000000;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Font.TextStyle.largeTitle(_:), v10);
    v16 = sub_1000E4360();
    ScaledMetric.init(wrappedValue:relativeTo:)(&v20, v13, &type metadata for CGFloat, v16);
    *(_QWORD *)(a5 + *(int *)(v15 + 24)) = 0x4010000000000000;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a5, 0, 1, v15);
  }
  else
  {
    v18 = _s13FavoriteBadgeVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a5, 1, 1, v18);
  }
}

uint64_t sub_100617CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(v1 + *(int *)(a1 + 72) + 8);
  v11 = *(void (**)(uint64_t))(*(_QWORD *)v10 + 256);
  v12 = swift_retain(v10);
  v11(v12);
  swift_release(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3);
  LOBYTE(v10) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v9, v7);
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v7, v3);
  v13(v9, v3);
  return v10 & 1;
}

uint64_t sub_100617DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v4 = type metadata accessor for UserInterfaceSizeClass(0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v46);
  v47 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v7);
  v44 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (uint64_t)&v42 - v10;
  __chkstk_darwin(v11);
  v45 = (uint64_t)&v42 - v12;
  v13 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DynamicTypeSize(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v42 - v22;
  sub_1008237B8((uint64_t)&v42 - v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for DynamicTypeSize.accessibility3(_:), v17);
  v24 = sub_100048748(&qword_1011A4FF0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v25 = dispatch thunk of static Comparable.< infix(_:_:)(v23, v20, v17, v24);
  v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v20, v17);
  v26(v23, v17);
  v51 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v2, a1);
  if ((v25 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, a1);
LABEL_9:
    v34 = 0;
    return v34 & 1;
  }
  v27 = v45;
  sub_100824BE4(v45);
  v28 = v48;
  v29 = v49;
  v30 = v50;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v50, enum case for UserInterfaceSizeClass.compact(_:), v49);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v29);
  v31 = v47;
  v32 = v47 + *(int *)(v46 + 48);
  sub_10004A160(v27, v47, (uint64_t *)&unk_1011A33B8);
  sub_10004A160(v30, v32, (uint64_t *)&unk_1011A33B8);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v33(v31, 1, v29) != 1)
  {
    v35 = v31;
    v36 = v31;
    v37 = v44;
    sub_10004A160(v35, v44, (uint64_t *)&unk_1011A33B8);
    if (v33(v32, 1, v29) != 1)
    {
      v39 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v43, v32, v29);
      v40 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v39, v29, v40);
      v41 = *(void (**)(char *, uint64_t))(v28 + 8);
      v41(v39, v29);
      sub_10004FF60(v50, (uint64_t *)&unk_1011A33B8);
      sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, a1);
      v41((char *)v37, v29);
      sub_10004FF60(v36, (uint64_t *)&unk_1011A33B8);
      return v34 & 1;
    }
    sub_10004FF60(v50, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, a1);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v29);
    v31 = v36;
    goto LABEL_8;
  }
  sub_10004FF60(v30, (uint64_t *)&unk_1011A33B8);
  sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v16, a1);
  if (v33(v32, 1, v29) != 1)
  {
LABEL_8:
    sub_10004FF60(v31, &qword_1011A49C0);
    goto LABEL_9;
  }
  sub_10004FF60(v31, (uint64_t *)&unk_1011A33B8);
  v34 = 1;
  return v34 & 1;
}

uint64_t sub_100618288@<X0>(void (*a1)(_QWORD, _QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata3;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t WitnessTable;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(_QWORD, _QWORD);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[16];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];
  uint64_t v95[7];
  __int128 v96;
  uint64_t v97;
  unsigned __int8 v98;

  v67 = a4;
  v76 = a3;
  v84 = a2;
  v75 = a1;
  v82 = a8;
  v79 = sub_100007E8C(&qword_1011BE350);
  __chkstk_darwin(v79);
  v83 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v80 = (uint64_t)&v67 - v13;
  v78 = sub_100007E8C(&qword_1011A2988);
  __chkstk_darwin(v78);
  v81 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v74 = (char *)&v67 - v16;
  v17 = sub_100044B54(&qword_1011BE348);
  v18 = _s9TrackCellV13TrailingIconsVMa(255, a5, a6, a7);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v17, &type metadata for Spacer, v18, 0, 0);
  v20 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v21 = type metadata accessor for HStack(0, v20, WitnessTable);
  v71 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v67 - v22;
  v24 = type metadata accessor for ModifiedContent(0, v21, &type metadata for _FrameLayout);
  v73 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v67 - v25;
  v68 = type metadata accessor for ModifiedContent(0, v24, &type metadata for _PaddingLayout);
  v72 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v77 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (uint64_t *)((char *)&v67 - v29);
  __chkstk_darwin(v31);
  v70 = (uint64_t)&v67 - v32;
  v34 = static VerticalAlignment.center.getter(v33);
  v86 = a5;
  v87 = a6;
  v88 = a7;
  v89 = v75;
  v90 = v84;
  HStack.init(alignment:spacing:content:)(v34, 0, 0, sub_10062A0DC, v85, v20, WitnessTable);
  WitnessTable = _s9TrackCellVMa(0, a5, a6, a7);
  sub_100617A04(WitnessTable, &v96);
  v35 = v97;
  v36 = v98;
  v38 = static Alignment.center.getter(v37);
  v40 = v39;
  v41 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v21);
  v42 = v40;
  v43 = (uint64_t)v74;
  View.frame(width:height:alignment:)(0, 1, v35, v36, v38, v42, v21, v41);
  v44 = v23;
  v45 = v68;
  v46 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v44, v21);
  v47 = static Edge.Set.bottom.getter(v46);
  v95[5] = v41;
  v95[6] = (uint64_t)&protocol witness table for _FrameLayout;
  v48 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  View.padding(_:_:)(v30, v47, 0x4024000000000000, 0, v24, v48);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v26, v24);
  v95[3] = v48;
  v95[4] = (uint64_t)&protocol witness table for _PaddingLayout;
  v49 = v72;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v45);
  v51 = v70;
  sub_10081EB14((uint64_t)v30, v45, v70);
  v75 = *(void (**)(_QWORD, _QWORD))(v49 + 8);
  v75(v30, v45);
  v52 = v43;
  v53 = sub_10004A160(v76, v43, &qword_1011A2988);
  if (*(_QWORD *)(v84 + *(int *)(WitnessTable + 48) + 8))
  {
    v54 = static Font.footnote.getter(v53);
    KeyPath = swift_getKeyPath(&unk_100EC5720);
    v56 = v80;
    sub_10004A160(v67, v80, &qword_1011A2988);
    v57 = sub_100007E8C(&qword_1011BE3F8);
    v58 = (uint64_t *)(v56 + *(int *)(v57 + 36));
    *v58 = KeyPath;
    v58[1] = v54;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
  }
  else
  {
    v59 = sub_100007E8C(&qword_1011BE3F8);
    v56 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v80, 1, 1, v59);
  }
  v60 = (uint64_t)v77;
  v61 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v77, v51, v45);
  v95[0] = v60;
  v62 = v52;
  v63 = v81;
  sub_10004A160(v52, v81, &qword_1011A2988);
  v95[1] = v63;
  v64 = v83;
  sub_10004A160(v56, v83, &qword_1011BE350);
  v95[2] = v64;
  v94[0] = v45;
  v94[1] = v78;
  v94[2] = v79;
  v91 = v50;
  v92 = sub_10062A9B4((unint64_t *)&qword_1011A5378, &qword_1011A2988);
  v93 = sub_10062A594(&qword_1011BE400, &qword_1011BE350, (void (*)(void))sub_10062A0E8);
  sub_1004D49B8(v95, 3uLL, (uint64_t)v94);
  sub_10004FF60(v56, &qword_1011BE350);
  sub_10004FF60(v62, &qword_1011A2988);
  v65 = (uint64_t (*)(uint64_t, uint64_t))v75;
  v75(v61, v45);
  sub_10004FF60(v64, &qword_1011BE350);
  sub_10004FF60(v63, &qword_1011A2988);
  return v65(v60, v45);
}

uint64_t sub_10061892C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  char v41;
  uint64_t v42[3];

  v32 = a1;
  v35 = a6;
  v10 = _s9TrackCellV13TrailingIconsVMa(0, a3, a4, a5);
  v33 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  v34 = sub_100007E8C(&qword_1011BE348);
  __chkstk_darwin(v34);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v31 - v19;
  sub_10004A160(v32, (uint64_t)&v31 - v19, &qword_1011BE348);
  v21 = (int *)_s9TrackCellVMa(0, a3, a4, a5);
  v22 = *(uint64_t **)(a2 + v21[18] + 8);
  v23 = *(_QWORD **)(a2 + v21[17] + 8);
  v24 = (uint64_t *)(a2 + v21[20]);
  v25 = *v24;
  v26 = v24[1];
  swift_retain();
  swift_retain();
  sub_100048AAC(v25, v26);
  sub_100618BD4(v22, v23, 0, 0, 1, v25, v26, (uint64_t)v12);
  WitnessTable = swift_getWitnessTable(&unk_100EC5908, v10);
  sub_10081EB14((uint64_t)v12, v10, (uint64_t)v15);
  v28 = v33;
  v29 = *(void (**)(char *, uint64_t))(v33 + 8);
  v29(v12, v10);
  sub_10004A160((uint64_t)v20, (uint64_t)v17, &qword_1011BE348);
  v40 = 0;
  v41 = 1;
  v42[0] = (uint64_t)v17;
  v42[1] = (uint64_t)&v40;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v12, v15, v10);
  v42[2] = (uint64_t)v12;
  v39[0] = v34;
  v39[1] = &type metadata for Spacer;
  v39[2] = v10;
  v36 = sub_10005610C(&qword_1011BE410, &qword_1011BE348, (void (*)(void))sub_10062A184);
  v37 = &protocol witness table for Spacer;
  v38 = WitnessTable;
  sub_1004D49B8(v42, 3uLL, (uint64_t)v39);
  v29(v15, v10);
  sub_10004FF60((uint64_t)v20, &qword_1011BE348);
  v29(v12, v10);
  return sub_10004FF60((uint64_t)v17, &qword_1011BE348);
}

uint64_t sub_100618BD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v15 = *a1;
  v16 = *(_QWORD *)(class metadata base offset for MusicLibrary.ItemState + *a2 + 8);
  *(_QWORD *)a8 = sub_10061B9D8((uint64_t)a1, v16, a3, a4);
  *(_QWORD *)(a8 + 8) = v17;
  v18 = *(_QWORD *)(v15 + 88);
  *(_QWORD *)(a8 + 16) = sub_10061BA24(a2);
  *(_QWORD *)(a8 + 24) = v19;
  *(_QWORD *)(a8 + 32) = a3;
  *(_QWORD *)(a8 + 40) = a4;
  *(_BYTE *)(a8 + 48) = a5 & 1;
  *(_QWORD *)(a8 + 56) = a6;
  *(_QWORD *)(a8 + 64) = a7;
  v20 = (_QWORD *)(a8 + *(int *)(_s9TrackCellV13TrailingIconsVMa(0, *(_QWORD *)(v15 + 80), v18, v16) + 56));
  *v20 = swift_getKeyPath(&unk_100EC57A8);
  v21 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v20, v21, 0);
}

uint64_t sub_100618CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  int *v86;
  char *v87;
  uint64_t v88;
  char v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void *v119;
  uint64_t *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  _UNKNOWN **v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, void *);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int *v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;

  v211 = a8;
  v198 = a5;
  v195 = a4;
  v191 = a3;
  v212 = a2;
  v209 = a9;
  v210 = (int *)a1;
  v12 = sub_100044B54(&qword_1011BE358);
  v13 = sub_100044B54(&qword_1011A2DE8);
  v14 = sub_100044B54(&qword_1011BE360);
  v15 = sub_100044B54(&qword_1011BE368);
  v16 = _s9TrackCellV13TrailingIconsVMa(255, a6, a7, a8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v15, &type metadata for Spacer, v16, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v20 = type metadata accessor for HStack(255, v18, WitnessTable);
  v21 = type metadata accessor for ModifiedContent(255, v20, &type metadata for _FlexFrameLayout);
  v22 = swift_getTupleTypeMetadata3(255, v13, v14, v21, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  v24 = sub_100049F28(&qword_1011BE370, &qword_1011BE358, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v175 = v23;
  v25 = type metadata accessor for _VariadicView.Tree(255, v12, v23, v24);
  v26 = sub_100044B54((uint64_t *)&unk_1011BF930);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = sub_100044B54(&qword_1011BE378);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v27, v28, 0, 0);
  v30 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v180 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v179 = (char *)&v165 - v31;
  v178 = (void *)v28;
  __chkstk_darwin(v32);
  v177 = (uint64_t)&v165 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v168 = (uint64_t *)((char *)&v165 - v35);
  v166 = v25;
  v174 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v36);
  v172 = (char *)&v165 - v37;
  v171 = type metadata accessor for SplitPercentageLayout(0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v165 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = v27;
  v181 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v39);
  v176 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v173 = (char *)&v165 - v42;
  __chkstk_darwin(v43);
  v193 = (uint64_t)&v165 - v44;
  v45 = sub_100044B54(&qword_1011A2DC8);
  v46 = swift_getTupleTypeMetadata3(255, v45, &type metadata for Spacer, v16, 0, 0);
  v47 = type metadata accessor for TupleView(0, v46);
  v190 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v189 = (char *)&v165 - v48;
  v192 = v16;
  v184 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v49);
  v185 = (uint64_t)&v165 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v188 = (uint64_t)&v165 - v52;
  v53 = sub_100007E8C(&qword_1011A2DC0);
  __chkstk_darwin(v53);
  v182 = (uint64_t *)((char *)&v165 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v187 = v45;
  __chkstk_darwin(v55);
  v183 = (uint64_t)&v165 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v186 = (uint64_t)&v165 - v58;
  v196 = a6;
  v197 = a7;
  v59 = _s9TrackCellVMa(0, a6, a7, v211);
  v205 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v204 = (char *)&v165 - v60;
  v61 = type metadata accessor for UserInterfaceSizeClass(0);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v165 = (char *)&v165 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v64);
  v66 = (char *)&v165 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v67);
  v69 = (char *)&v165 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  v72 = (char *)&v165 - v71;
  __chkstk_darwin(v73);
  v75 = (char *)&v165 - v74;
  v202 = v47;
  v203 = v30;
  v194 = type metadata accessor for _ConditionalContent(0, v47, v30);
  v208 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v201 = (char *)&v165 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v77);
  v200 = (char *)&v165 - v78;
  v199 = sub_100007E8C(&qword_1011BE348);
  __chkstk_darwin(v199);
  v207 = (uint64_t)&v165 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80);
  v206 = (uint64_t)&v165 - v81;
  sub_10004A160((uint64_t)v210, (uint64_t)&v165 - v81, &qword_1011BE348);
  v210 = (int *)v59;
  sub_100824BE4((uint64_t)v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v72, enum case for UserInterfaceSizeClass.compact(_:), v61);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v72, 0, 1, v61);
  v82 = (uint64_t)&v66[*(int *)(v64 + 48)];
  sub_10004A160((uint64_t)v75, (uint64_t)v66, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v72, v82, (uint64_t *)&unk_1011A33B8);
  v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v83((uint64_t)v66, 1, v61) == 1)
  {
    sub_10004FF60((uint64_t)v72, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60((uint64_t)v75, (uint64_t *)&unk_1011A33B8);
    if (v83(v82, 1, v61) == 1)
    {
      sub_10004FF60((uint64_t)v66, (uint64_t *)&unk_1011A33B8);
      v84 = v205;
      v85 = v204;
      v86 = v210;
      (*(void (**)(char *, uint64_t, int *))(v205 + 16))(v204, v212, v210);
LABEL_8:
      v91 = (*(uint64_t (**)(char *, int *))(v84 + 8))(v85, v86);
LABEL_10:
      v93 = static HorizontalAlignment.leading.getter(v91);
      v94 = (uint64_t)v182;
      *v182 = v93;
      *(_QWORD *)(v94 + 8) = 0;
      *(_BYTE *)(v94 + 16) = 0;
      v95 = sub_100007E8C(&qword_1011BE440);
      v96 = v212;
      v97 = sub_100619F9C(v212, v191, v195, v198, v196, v197, v211, v94 + *(int *)(v95 + 44));
      v98 = static Alignment.leading.getter(v97);
      v99 = v183;
      sub_10014AEB0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v183, 0.0, 1, 0.0, 1, v98, v100);
      sub_10004FF60(v94, &qword_1011A2DC0);
      v101 = v186;
      sub_100065228(v99, v186, &qword_1011A2DC8);
      v102 = *(uint64_t **)(v96 + v86[18] + 8);
      v103 = *(_QWORD **)(v96 + v86[17] + 8);
      v104 = (uint64_t *)(v96 + v86[20]);
      v105 = *v104;
      v106 = v104[1];
      swift_retain();
      swift_retain();
      sub_100048AAC(v105, v106);
      v107 = v185;
      sub_100618BD4(v102, v103, 0, 0, 1, v105, v106, v185);
      v108 = v192;
      v109 = swift_getWitnessTable(&unk_100EC5908, v192);
      v110 = v188;
      sub_10081EB14(v107, v108, v188);
      v111 = v184;
      v112 = *(void (**)(uint64_t, uint64_t))(v184 + 8);
      v112(v107, v108);
      sub_10004A160(v101, v99, &qword_1011A2DC8);
      v219 = 0;
      v220 = 1;
      v221 = v99;
      v222 = &v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v107, v110, v108);
      v223 = v107;
      v216 = v187;
      v217 = &type metadata for Spacer;
      v218 = v108;
      v213 = sub_10062A320();
      v214 = &protocol witness table for Spacer;
      v215 = v109;
      v113 = (uint64_t)v189;
      sub_1004D49B8(&v221, 3uLL, (uint64_t)&v216);
      v112(v107, v108);
      sub_10004FF60(v99, &qword_1011A2DC8);
      v114 = v202;
      v115 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v202);
      v116 = v203;
      v117 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v203);
      v118 = v200;
      sub_100817130(v113, v114, v116, v115, v117);
      (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v113, v114);
      v112(v110, v108);
      sub_10004FF60(v101, &qword_1011A2DC8);
      v119 = (void *)v194;
      v120 = (uint64_t *)v201;
      v121 = v199;
      v122 = v118;
      goto LABEL_18;
    }
    goto LABEL_6;
  }
  sub_10004A160((uint64_t)v66, (uint64_t)v69, (uint64_t *)&unk_1011A33B8);
  if (v83(v82, 1, v61) == 1)
  {
    sub_10004FF60((uint64_t)v72, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60((uint64_t)v75, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v61);
LABEL_6:
    sub_10004FF60((uint64_t)v66, &qword_1011A49C0);
    v84 = v205;
    v85 = v204;
    v86 = v210;
    (*(void (**)(char *, uint64_t, int *))(v205 + 16))(v204, v212, v210);
    goto LABEL_9;
  }
  v87 = v165;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v165, v82, v61);
  v88 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v89 = dispatch thunk of static Equatable.== infix(_:_:)(v69, v87, v61, v88);
  v90 = *(void (**)(char *, uint64_t))(v62 + 8);
  v90(v87, v61);
  sub_10004FF60((uint64_t)v72, (uint64_t *)&unk_1011A33B8);
  sub_10004FF60((uint64_t)v75, (uint64_t *)&unk_1011A33B8);
  v90(v69, v61);
  sub_10004FF60((uint64_t)v66, (uint64_t *)&unk_1011A33B8);
  v84 = v205;
  v85 = v204;
  v86 = v210;
  (*(void (**)(char *, uint64_t, int *))(v205 + 16))(v204, v212, v210);
  if ((v89 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v92 = sub_100619F04();
  v91 = (*(uint64_t (**)(char *, int *))(v84 + 8))(v85, v86);
  if ((v92 & 1) != 0)
    goto LABEL_10;
  if (*(double *)(v212 + v86[21]) >= 800.0)
  {
    v124 = &off_1010ACDE0;
  }
  else
  {
    v123 = sub_100007E8C(&qword_1011AE320);
    v124 = (_UNKNOWN **)swift_allocObject(v123, 48, 7);
    *((_OWORD *)v124 + 1) = xmmword_100EA7A80;
    *((_OWORD *)v124 + 2) = xmmword_100EC53F0;
  }
  v125 = v167;
  v126 = v166;
  v127 = (uint64_t)v169;
  SplitPercentageLayout.init(axis:locations:)(0, v124);
  v128 = sub_10061A5A4(v127, v196, v197, v211);
  v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v170 + 8))(v127, v171);
  v130 = __chkstk_darwin(v129);
  v131 = v212;
  v132 = v172;
  ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), __n128))v128)(sub_10062A294, v130);
  swift_release();
  v133 = sub_100049F28(&qword_1011BE430, &qword_1011BE358, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v134 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v175);
  v228 = v133;
  v229 = v134;
  v135 = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v126);
  v136 = (uint64_t)v173;
  View.lineLimit(_:)(1, 0, v126, v135);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v132, v126);
  v137 = sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v226 = v135;
  v227 = v137;
  v138 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v125);
  sub_10081EB14(v136, v125, v193);
  v139 = *(void (**)(uint64_t, uint64_t))(v181 + 8);
  v139(v136, v125);
  v140 = (uint64_t *)(v131 + v210[20]);
  v141 = *v140;
  if (*v140)
  {
    v142 = v140[1];
    v143 = v168;
    *v168 = v141;
    v143[1] = v142;
    v144 = _s17ContextMenuButtonVMa(0);
    v221 = 0x4046000000000000;
    v145 = sub_1000E4360();
    swift_retain_n(v142, 2);
    ScaledMetric.init(wrappedValue:)(&v221, &type metadata for CGFloat, v145);
    v221 = 0x403C000000000000;
    ScaledMetric.init(wrappedValue:)(&v221, &type metadata for CGFloat, v145);
    v146 = v142;
    v147 = (uint64_t)v143;
    sub_10004BA30(v141, v146);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v143, 0, 1, v144);
  }
  else
  {
    v148 = _s17ContextMenuButtonVMa(0);
    v147 = (uint64_t)v168;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v168, 1, 1, v148);
  }
  v119 = (void *)v194;
  v149 = (uint64_t)v176;
  (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v176, v193, v125);
  v221 = v149;
  v150 = v177;
  sub_10004A160(v147, v177, &qword_1011BE378);
  v222 = (uint64_t *)v150;
  v216 = v125;
  v217 = v178;
  v213 = v138;
  v214 = (void *)sub_10062A2A4();
  v151 = (uint64_t)v179;
  sub_1004D49B8(&v221, 2uLL, (uint64_t)&v216);
  sub_10004FF60(v150, &qword_1011BE378);
  v139(v149, v125);
  v114 = v202;
  v152 = v125;
  v153 = v147;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v202);
  v116 = v203;
  v155 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v203);
  v122 = v200;
  sub_1008171F4(v151, v114, v116, v154, v155);
  (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v151, v116);
  sub_10004FF60(v153, &qword_1011BE378);
  v139(v193, v152);
  v121 = v199;
  v120 = (uint64_t *)v201;
LABEL_18:
  v156 = v206;
  v157 = v207;
  sub_10004A160(v206, v207, &qword_1011BE348);
  v221 = v157;
  v158 = v208;
  (*(void (**)(uint64_t *, char *, void *))(v208 + 16))(v120, v122, v119);
  v222 = v120;
  v216 = v121;
  v217 = v119;
  v213 = sub_10005610C(&qword_1011BE410, &qword_1011BE348, (void (*)(void))sub_10062A184);
  v159 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v114);
  v160 = v120;
  v161 = v159;
  v162 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v116);
  v224 = v161;
  v225 = v162;
  v214 = (void *)swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v119);
  sub_1004D49B8(&v221, 2uLL, (uint64_t)&v216);
  v163 = *(void (**)(char *, void *))(v158 + 8);
  v163(v122, v119);
  sub_10004FF60(v156, &qword_1011BE348);
  v163((char *)v160, v119);
  return sub_10004FF60(v157, &qword_1011BE348);
}

uint64_t sub_100619F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1008237B8((uint64_t)v3);
  v5 = DynamicTypeSize.isAccessibilitySize.getter(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 & 1;
}

uint64_t sub_100619F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v82 = a6;
  v83 = a7;
  v73 = a4;
  v70 = a2;
  v71 = a3;
  v86 = a8;
  v72 = sub_100007E8C(&qword_1011BE3F8);
  __chkstk_darwin(v72);
  v76 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011BE458);
  v85 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v74 = (uint64_t)&v69 - v13;
  v14 = sub_100007E8C(&qword_1011BE460);
  __chkstk_darwin(v14);
  v81 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v79 = (char *)&v69 - v17;
  v18 = sub_100007E8C(&qword_1011BE468);
  __chkstk_darwin(v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011BE470);
  __chkstk_darwin(v78);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - v24;
  v26 = sub_100007E8C(&qword_1011BE478);
  __chkstk_darwin(v26);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011A2988);
  __chkstk_darwin(v77);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_1011BE480);
  __chkstk_darwin(v31);
  v84 = (uint64_t)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v69 - v34;
  v36 = _s9TrackCellVMa(0, a5, v82, v83);
  v83 = a1;
  if ((sub_100619F04() & 1) != 0)
  {
    v38 = &qword_1011A2988;
    sub_10004A160(v70, (uint64_t)v30, &qword_1011A2988);
    sub_10004A160((uint64_t)v30, (uint64_t)v28, &qword_1011A2988);
    swift_storeEnumTagMultiPayload(v28, v26, 0);
    v39 = sub_10062A9B4((unint64_t *)&qword_1011A5378, &qword_1011A2988);
    v40 = sub_10062A3A4();
    _ConditionalContent<>.init(storage:)(v28, v77, v78, v39, v40);
    v41 = (uint64_t)v30;
  }
  else
  {
    v42 = static Font.callout.getter(v37);
    KeyPath = swift_getKeyPath(&unk_100EC5720);
    sub_10004A160(v71, (uint64_t)v20, &qword_1011BE388);
    v44 = (uint64_t *)&v20[*(int *)(v18 + 36)];
    *v44 = KeyPath;
    v44[1] = v42;
    v45 = swift_getKeyPath(&unk_100EC56F0);
    sub_10004A160((uint64_t)v20, (uint64_t)v22, &qword_1011BE468);
    v46 = v78;
    v47 = &v22[*(int *)(v78 + 36)];
    *(_QWORD *)v47 = v45;
    *((_QWORD *)v47 + 1) = 1;
    v47[16] = 0;
    sub_10004FF60((uint64_t)v20, &qword_1011BE468);
    v38 = &qword_1011BE470;
    sub_100065228((uint64_t)v22, (uint64_t)v25, &qword_1011BE470);
    sub_10004A160((uint64_t)v25, (uint64_t)v28, &qword_1011BE470);
    swift_storeEnumTagMultiPayload(v28, v26, 1);
    v48 = sub_10062A9B4((unint64_t *)&qword_1011A5378, &qword_1011A2988);
    v49 = sub_10062A3A4();
    _ConditionalContent<>.init(storage:)(v28, v77, v46, v48, v49);
    v41 = (uint64_t)v25;
  }
  v50 = sub_10004FF60(v41, v38);
  v51 = v86;
  v53 = v80;
  v52 = (uint64_t)v81;
  v54 = (uint64_t)v79;
  v55 = (uint64_t)v35;
  if (*(_QWORD *)(v83 + *(int *)(v36 + 48) + 8))
  {
    v56 = static Font.footnote.getter(v50);
    v57 = swift_getKeyPath(&unk_100EC5720);
    v58 = v76;
    sub_10004A160(v73, v76, &qword_1011A2988);
    v59 = (uint64_t *)(v58 + *(int *)(v72 + 36));
    *v59 = v57;
    v59[1] = v56;
    v60 = sub_100619F04();
    v61 = swift_getKeyPath(&unk_100EC56F0);
    v62 = v75;
    sub_10004A160(v58, v75, &qword_1011BE3F8);
    v63 = v62 + *(int *)(v53 + 36);
    *(_QWORD *)v63 = v61;
    *(_QWORD *)(v63 + 8) = (v60 & 1) == 0;
    *(_BYTE *)(v63 + 16) = v60 & 1;
    v51 = v86;
    sub_10004FF60(v58, &qword_1011BE3F8);
    v64 = v74;
    sub_100065228(v62, v74, &qword_1011BE458);
    sub_100065228(v64, v54, &qword_1011BE458);
    v65 = 0;
  }
  else
  {
    v65 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v54, v65, 1, v53);
  v66 = v84;
  sub_10004A160(v55, v84, &qword_1011BE480);
  sub_10004A160(v54, v52, &qword_1011BE460);
  sub_10004A160(v66, v51, &qword_1011BE480);
  v67 = sub_100007E8C(&qword_1011BE4A0);
  sub_10004A160(v52, v51 + *(int *)(v67 + 48), &qword_1011BE460);
  sub_10004FF60(v54, &qword_1011BE460);
  sub_10004FF60(v55, &qword_1011BE480);
  sub_10004FF60(v52, &qword_1011BE460);
  return sub_10004FF60(v66, &qword_1011BE480);
}

uint64_t (*sub_10061A5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v8 = type metadata accessor for SplitPercentageLayout(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_1010D3618, v13 + v10, v12 | 7);
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  return sub_10062A7DC;
}

uint64_t sub_10061A688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v12 = type metadata accessor for SplitPercentageLayout(0);
  v13 = sub_100044B54(&qword_1011A2DE8);
  v14 = sub_100044B54(&qword_1011BE360);
  v15 = sub_100044B54(&qword_1011BE368);
  v16 = _s9TrackCellV13TrailingIconsVMa(255, a3, a4, a5);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v15, &type metadata for Spacer, v16, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v20 = type metadata accessor for HStack(255, v18, WitnessTable);
  v21 = type metadata accessor for ModifiedContent(255, v20, &type metadata for _FlexFrameLayout);
  v22 = swift_getTupleTypeMetadata3(255, v13, v14, v21, 0, 0);
  v23 = type metadata accessor for TupleView(0, v22);
  v24 = sub_100048748(&qword_1011BE4E8, (uint64_t (*)(uint64_t))&type metadata accessor for SplitPercentageLayout, (uint64_t)&protocol conformance descriptor for SplitPercentageLayout);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v23);
  return sub_10061A818(a1, a2, v12, v23, v24, v25, a6);
}

uint64_t sub_10061A818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8 = v7;
  v26[0] = a6;
  v26[1] = a7;
  v14 = *(_QWORD *)(a3 - 8);
  v15 = __chkstk_darwin(a1);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for _LayoutRoot(0, v18, v19, v15);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v26 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v8, a3, v21);
  _LayoutRoot.init(_:)(v17, a3, a5);
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v31 = v26[0];
  v32 = a1;
  v33 = a2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _LayoutRoot<A>, v20);
  return _VariadicView.Tree.init(_:content:)(v23, sub_10062A854, v27, v20, a4, WitnessTable);
}

uint64_t sub_10061A948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  char v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t WitnessTable;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[3];
  uint64_t v114[5];

  v91 = a3;
  v95 = a2;
  v97 = (char *)a1;
  v108 = a7;
  v10 = sub_100044B54(&qword_1011BE368);
  v11 = _s9TrackCellV13TrailingIconsVMa(255, a4, a5, a6);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v10, &type metadata for Spacer, v11, 0, 0);
  v100 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v100);
  v13 = type metadata accessor for HStack(0, v100, WitnessTable);
  v103 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v102 = (char *)&v88 - v14;
  v101 = type metadata accessor for ModifiedContent(0, v13, &type metadata for _FlexFrameLayout);
  v107 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v104 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v105 = (uint64_t)&v88 - v17;
  v89 = sub_100007E8C(&qword_1011A2DD0);
  __chkstk_darwin(v89);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011A2DD8);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v90 = (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011BE360);
  __chkstk_darwin(v98);
  v106 = (uint64_t)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v109 = (uint64_t)&v88 - v23;
  v24 = sub_100007E8C(&qword_1011A2DE0);
  __chkstk_darwin(v24);
  v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_1011A2DE8);
  __chkstk_darwin(v96);
  v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v30 = __chkstk_darwin(v29).n128_u64[0];
  v32 = (char *)&v88 - v31;
  v33 = static Edge.Set.trailing.getter(v30);
  v34 = EdgeInsets.init(_all:)(10.0);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = sub_10004A160((uint64_t)v97, (uint64_t)v26, &qword_1011BE388);
  v42 = &v26[*(int *)(v24 + 36)];
  *v42 = v33;
  v43 = a5;
  v44 = v91;
  *((double *)v42 + 1) = v34;
  *((_QWORD *)v42 + 2) = v36;
  *((_QWORD *)v42 + 3) = v38;
  *((_QWORD *)v42 + 4) = v40;
  v42[40] = 0;
  v45 = static Alignment.center.getter(v41);
  sub_10014AF14(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v28, 0.0, 1, INFINITY, 0, v45, v46);
  sub_10004FF60((uint64_t)v26, &qword_1011A2DE0);
  v97 = v28;
  v94 = v32;
  sub_100065228((uint64_t)v28, (uint64_t)v32, &qword_1011A2DE8);
  v47 = _s9TrackCellVMa(0, a4, a5, a6);
  v48 = *(double *)(v95 + *(int *)(v47 + 84));
  v49 = 1;
  if (v48 >= 800.0)
  {
    v50 = static Edge.Set.trailing.getter(v48);
    v51 = EdgeInsets.init(_all:)(10.0);
    v53 = v52;
    v55 = v54;
    v57 = v56;
    v58 = sub_10004A160(v44, (uint64_t)v19, &qword_1011A2988);
    v59 = &v19[*(int *)(v89 + 36)];
    *v59 = v50;
    *((double *)v59 + 1) = v51;
    *((_QWORD *)v59 + 2) = v53;
    *((_QWORD *)v59 + 3) = v55;
    *((_QWORD *)v59 + 4) = v57;
    v59[40] = 0;
    v60 = static Alignment.center.getter(v58);
    v61 = v90;
    sub_10014AF78(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v90, 0.0, 1, INFINITY, 0, v60, v62);
    sub_10004FF60((uint64_t)v19, &qword_1011A2DD0);
    sub_100065228(v61, v109, &qword_1011A2DD8);
    v49 = 0;
  }
  v63 = v109;
  v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v109, v49, 1, v93);
  v65 = static VerticalAlignment.center.getter(v64);
  __chkstk_darwin(v65);
  v87 = v43;
  v66 = v102;
  v68 = HStack.init(alignment:spacing:content:)(v67, 0, 0, sub_10062A550, &v85, v100, WitnessTable);
  v69 = static Alignment.center.getter(v68);
  v71 = v70;
  v72 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v13);
  LOBYTE(v87) = 0;
  LOBYTE(v86) = 1;
  v73 = (uint64_t)v104;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, v86, 0x7FF0000000000000, v87, v69, v71, v13, v72);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v66, v13);
  v114[3] = v72;
  v114[4] = (uint64_t)&protocol witness table for _FlexFrameLayout;
  v74 = v101;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v101);
  v76 = v105;
  sub_10081EB14(v73, v74, v105);
  v77 = v107;
  v78 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
  v78(v73, v74);
  v79 = (uint64_t)v94;
  v80 = (uint64_t)v97;
  sub_10004A160((uint64_t)v94, (uint64_t)v97, &qword_1011A2DE8);
  v114[0] = v80;
  v81 = v63;
  v82 = v63;
  v83 = v106;
  sub_10004A160(v82, v106, &qword_1011BE360);
  v114[1] = v83;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v73, v76, v74);
  v114[2] = v73;
  v113[0] = v96;
  v113[1] = v98;
  v113[2] = v74;
  v110 = sub_10005610C(&qword_1011BE4A8, &qword_1011A2DE8, (void (*)(void))sub_10062A570);
  v111 = sub_10062A594(&qword_1011BE4B8, &qword_1011BE360, (void (*)(void))sub_10062A5F8);
  v112 = v75;
  sub_1004D49B8(v114, 3uLL, (uint64_t)v113);
  v78(v76, v74);
  sub_10004FF60(v81, &qword_1011BE360);
  sub_10004FF60(v79, &qword_1011A2DE8);
  v78(v73, v74);
  sub_10004FF60(v83, &qword_1011BE360);
  return sub_10004FF60(v80, &qword_1011A2DE8);
}

uint64_t sub_10061B114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int *v30;
  double v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  char v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t WitnessTable;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  char v129;
  _BYTE v130[7];
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  char v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char v156;

  v106 = (char *)a2;
  v118 = a6;
  v10 = _s9TrackCellV13TrailingIconsVMa(0, a3, a4, a5);
  v115 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v117 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v116 = (uint64_t)&v104 - v13;
  v104 = sub_100007E8C(&qword_1011A2DD0);
  __chkstk_darwin(v104);
  v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100007E8C(&qword_1011A2DD8);
  __chkstk_darwin(v111);
  v105 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v107 = (char *)&v104 - v18;
  v110 = sub_100007E8C(&qword_1011BE4D0);
  __chkstk_darwin(v110);
  v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011AFAD8);
  __chkstk_darwin(v21);
  v108 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v109 = (uint64_t)&v104 - v24;
  v112 = sub_100007E8C(&qword_1011BE368);
  __chkstk_darwin(v112);
  v113 = (uint64_t)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v104 - v27;
  v29 = _s9TrackCellVMa(0, a3, a4, a5);
  v30 = (int *)v29;
  v31 = *(double *)(a1 + *(int *)(v29 + 84));
  v119 = v10;
  v114 = a1;
  if (v31 >= 800.0)
  {
    v105 = v21;
    v106 = v20;
    v107 = v28;
    v50 = (uint64_t *)(a1 + *(int *)(v29 + 52));
    v51 = v50[1];
    if (v51)
    {
      v52 = *v50;
      v53 = v51;
    }
    else
    {
      v52 = 0;
      v53 = 0xE000000000000000;
    }
    *(_QWORD *)&v120 = v52;
    *((_QWORD *)&v120 + 1) = v53;
    v54 = sub_100055B68();
    swift_bridgeObjectRetain();
    v55 = Text.init<A>(_:)(&v120, &type metadata for String, v54);
    v57 = v56;
    v59 = v58;
    v61 = v60;
    v62 = sub_100617CDC((uint64_t)v30);
    if ((v62 & 1) != 0)
      v63 = static HierarchicalShapeStyle.secondary.getter(v62);
    else
      v63 = static HierarchicalShapeStyle.tertiary.getter();
    LODWORD(v120) = v63;
    v64 = v59 & 1;
    v65 = Text.foregroundStyle<A>(_:)(&v120, v55, v57, v59 & 1, v61, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v67 = v66;
    v69 = v68;
    v71 = v70 & 1;
    sub_100055BAC(v55, v57, v64);
    swift_bridgeObjectRelease();
    v73 = static Alignment.center.getter(v72);
    sub_100149C8C(0, 1, 0.0, 1, 0.0, 1, 0, 1, (uint64_t)&v146, v75, 0.0, 1, INFINITY, 0, v73, v74, v65, v67, v71,
      v69);
    sub_100055BAC(v65, v67, v71);
    swift_bridgeObjectRelease();
    v142 = v152;
    v143 = v153;
    v144 = v154;
    v138 = v148;
    v139 = v149;
    v140 = v150;
    v141 = v151;
    v136 = v146;
    v137 = v147;
    v76 = static Edge.Set.trailing.getter(*(double *)&v147);
    v77 = EdgeInsets.init(_all:)(10.0);
    v126 = v142;
    v127 = v143;
    v128 = v144;
    v122 = v138;
    v123 = v139;
    v124 = v140;
    v125 = v141;
    v120 = v136;
    v121 = v137;
    v145 = 0;
    v129 = v76;
    *(_DWORD *)v130 = v155;
    *(_DWORD *)&v130[3] = *(_DWORD *)((char *)&v155 + 3);
    v131 = v77;
    v132 = v78;
    v133 = v79;
    v134 = v80;
    v135 = 0;
    v81 = AccessibilityIdentifier.libraryTrackCellDetailText.unsafeMutableAddressor();
    v82 = *v81;
    v83 = v81[1];
    swift_bridgeObjectRetain();
    v84 = sub_100007E8C(&qword_1011AFB88);
    v85 = sub_1003AC7CC();
    v86 = (uint64_t)v108;
    View.accessibilityIdentifier(_:)(v82, v83, v84, v85);
    swift_bridgeObjectRelease();
    sub_1003630A4((uint64_t)&v136);
    v45 = &qword_1011AFAD8;
    v87 = v109;
    sub_100065228(v86, v109, &qword_1011AFAD8);
    v88 = (uint64_t)v106;
    sub_10004A160(v87, (uint64_t)v106, &qword_1011AFAD8);
    swift_storeEnumTagMultiPayload(v88, v110, 0);
    v89 = sub_10062A6F8();
    v90 = sub_10062A5F8();
    v28 = v107;
    _ConditionalContent<>.init(storage:)(v88, v105, v111, v89, v90);
    v49 = v87;
  }
  else
  {
    v32 = static Edge.Set.trailing.getter(v31);
    v33 = EdgeInsets.init(_all:)(10.0);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v40 = sub_10004A160((uint64_t)v106, (uint64_t)v15, &qword_1011A2988);
    v41 = &v15[*(int *)(v104 + 36)];
    *v41 = v32;
    *((double *)v41 + 1) = v33;
    *((_QWORD *)v41 + 2) = v35;
    *((_QWORD *)v41 + 3) = v37;
    *((_QWORD *)v41 + 4) = v39;
    v41[40] = 0;
    v42 = static Alignment.center.getter(v40);
    v43 = v105;
    sub_10014AF78(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v105, 0.0, 1, INFINITY, 0, v42, v44);
    sub_10004FF60((uint64_t)v15, &qword_1011A2DD0);
    v45 = &qword_1011A2DD8;
    v46 = (uint64_t)v107;
    sub_100065228(v43, (uint64_t)v107, &qword_1011A2DD8);
    sub_10004A160(v46, (uint64_t)v20, &qword_1011A2DD8);
    swift_storeEnumTagMultiPayload(v20, v110, 1);
    v47 = sub_10062A6F8();
    v48 = sub_10062A5F8();
    _ConditionalContent<>.init(storage:)(v20, v21, v111, v47, v48);
    v49 = v46;
  }
  sub_10004FF60(v49, v45);
  v91 = *(uint64_t **)(v114 + v30[18] + 8);
  v92 = *(_QWORD **)(v114 + v30[17] + 8);
  v93 = (uint64_t *)(v114 + v30[14]);
  v94 = *v93;
  v95 = v93[1];
  swift_retain();
  swift_retain();
  v96 = v117;
  sub_100618BD4(v91, v92, v94, v95, 0, 0, 0, v117);
  v97 = v119;
  WitnessTable = swift_getWitnessTable(&unk_100EC5908, v119);
  v99 = v116;
  sub_10081EB14(v96, v97, v116);
  v100 = v115;
  v101 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
  v101(v96, v97);
  v102 = v113;
  sub_10004A160((uint64_t)v28, v113, &qword_1011BE368);
  v155 = 0;
  v156 = 0;
  *(_QWORD *)&v120 = v102;
  *((_QWORD *)&v120 + 1) = &v155;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v96, v99, v97);
  *(_QWORD *)&v121 = v96;
  *(_QWORD *)&v146 = v112;
  *((_QWORD *)&v146 + 1) = &type metadata for Spacer;
  *(_QWORD *)&v147 = v97;
  *(_QWORD *)&v136 = sub_10015FD08(&qword_1011BE4E0, &qword_1011BE368, (void (*)(void))sub_10062A6F8, (void (*)(void))sub_10062A5F8);
  *((_QWORD *)&v136 + 1) = &protocol witness table for Spacer;
  *(_QWORD *)&v137 = WitnessTable;
  sub_1004D49B8((uint64_t *)&v120, 3uLL, (uint64_t)&v146);
  v101(v99, v97);
  sub_10004FF60((uint64_t)v28, &qword_1011BE368);
  v101(v96, v97);
  return sub_10004FF60(v102, &qword_1011BE368);
}

uint64_t sub_10061B91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v6 = (uint64_t *)(a1 + *(int *)(_s9TrackCellVMa(0, a2, a3, a4) + 80));
  v7 = *v6;
  v8 = v6[1];
  *a5 = *v6;
  a5[1] = v8;
  _s17ContextMenuButtonVMa(0);
  v11 = 0x4046000000000000;
  sub_100048AAC(v7, v8);
  v9 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v11, &type metadata for CGFloat, v9);
  v11 = 0x403C000000000000;
  return ScaledMetric.init(wrappedValue:)(&v11, &type metadata for CGFloat, v9);
}

uint64_t sub_10061B9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t WitnessTable;

  v5 = type metadata accessor for MusicItemState(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemState<A>, v5);
  return ObservedObject.init(wrappedValue:)(a1, v5, WitnessTable);
}

uint64_t sub_10061BA24(_QWORD *a1)
{
  uint64_t v2;
  uint64_t WitnessTable;

  v2 = type metadata accessor for MusicLibrary.ItemState(0, *(_QWORD *)(*a1 + class metadata base offset for MusicLibrary.ItemState), *(_QWORD *)(*a1 + class metadata base offset for MusicLibrary.ItemState + 8));
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrary.ItemState<A>, v2);
  return ObservedObject.init(wrappedValue:)(a1, v2, WitnessTable);
}

uint64_t sub_10061BA80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v3 = v2;
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2ED0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2ED8);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1008237B8((uint64_t)v9);
  v17 = DynamicTypeSize.isAccessibilitySize.getter(v16);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v18);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = v17 & 1;
  v19 = sub_100007E8C(&qword_1011BE850);
  v20 = sub_10061BC48(v3, a1[2], a1[3], a1[4], (uint64_t)&v12[*(int *)(v19 + 44)]);
  v21 = static Alignment.center.getter(v20);
  sub_10014AFDC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v21, v22);
  sub_10004FF60((uint64_t)v12, &qword_1011A2ED0);
  return sub_100065228((uint64_t)v15, a2, &qword_1011A2ED8);
}

uint64_t sub_10061BC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__n128);
  __n128 v41;
  __n128 v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(__n128);
  __n128 v84;
  char *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  int v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  char v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  _OWORD v149[12];
  uint64_t v150;
  _OWORD v151[12];
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char v168;
  double v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;

  v145 = a4;
  v135 = a3;
  v143 = a5;
  v7 = sub_100007E8C(&qword_1011BE378);
  __chkstk_darwin(v7);
  v144 = (uint64_t)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v146 = (uint64_t *)((char *)&v129 - v10);
  v11 = sub_100007E8C(&qword_1011BE858);
  v139 = *(_QWORD *)(v11 - 8);
  v140 = v11;
  __chkstk_darwin(v11);
  v133 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v132 = (uint64_t)&v129 - v14;
  v15 = sub_100007E8C(&qword_1011BE860);
  __chkstk_darwin(v15);
  v142 = (uint64_t)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v148 = (uint64_t)&v129 - v18;
  v138 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v138);
  v134 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011BE868);
  __chkstk_darwin(v136);
  v137 = (uint64_t)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v131 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v130 = (char *)&v129 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v129 - v27;
  v29 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v129 - v34;
  v36 = sub_100007E8C(&qword_1011BE870);
  __chkstk_darwin(v36);
  v141 = (uint64_t)&v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v147 = (uint64_t)&v129 - v39;
  _s9TrackCellV13TrailingIconsVMa(0, a2, v135, v145);
  v145 = a1;
  v40 = *(void (**)(__n128))(**(_QWORD **)(a1 + 8) + 256);
  v41 = swift_retain();
  v40(v41);
  v42 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, __n128))(v22 + 88))(v28, v21, v42) == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v35, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.userUploadRequired(_:), v29);
    v43 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v35, v32);
    v44 = *(void (**)(char *, uint64_t))(v30 + 8);
    v44(v32, v29);
    if ((v43 & 1) != 0)
    {
      v45 = v137;
      swift_storeEnumTagMultiPayload(v137, v136, 0);
      v46 = sub_10062D0C4();
      v47 = sub_100048748(&qword_1011BE880, _s27DownloadStatusIndicatorViewVMa, (uint64_t)&unk_100EC555C);
      _ConditionalContent<>.init(storage:)(v45, &_s19UploadRequiredImageVN, v138, v46, v47);
      v44(v35, v29);
      v48 = v145;
      v49 = v146;
      goto LABEL_7;
    }
    v44(v35, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  }
  v48 = v145;
  v50 = swift_retain();
  v51 = (uint64_t)v134;
  dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v50);
  swift_release();
  v52 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  v53 = v138;
  *(_QWORD *)&v149[0] = 0x4000000000000000;
  v54 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(v149, &type metadata for CGFloat, v54);
  *(_QWORD *)&v149[0] = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)(v149, &type metadata for CGFloat, v54);
  v55 = v137;
  sub_10005B704(v51, v137, _s27DownloadStatusIndicatorViewVMa);
  swift_storeEnumTagMultiPayload(v55, v136, 1);
  v56 = sub_10062D0C4();
  v57 = sub_100048748(&qword_1011BE880, _s27DownloadStatusIndicatorViewVMa, (uint64_t)&unk_100EC555C);
  _ConditionalContent<>.init(storage:)(v55, &_s19UploadRequiredImageVN, v53, v56, v57);
  sub_10005B748(v51, _s27DownloadStatusIndicatorViewVMa);
  v49 = v146;
LABEL_7:
  if (*(_BYTE *)(v48 + 48) != 1)
  {
    v137 = v22;
    v138 = v21;
    v62 = *(_QWORD *)(v48 + 32);
    v63 = *(_QWORD *)(v48 + 40);
    if (qword_10119BFD0 != -1)
      swift_once(&qword_10119BFD0, sub_10040FE08);
    v64 = objc_msgSend((id)qword_10124CF88, "stringFromSeconds:", (double)Duration.components.getter(v62, v63));
    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v67 = v66;

    *(_QWORD *)&v149[0] = v65;
    *((_QWORD *)&v149[0] + 1) = v67;
    v68 = sub_100055B68();
    v69 = Text.init<A>(_:)(v149, &type metadata for String, v68);
    v71 = v70;
    v73 = v72 & 1;
    v76 = Text.monospacedDigit()(v69, v70, v72 & 1, v74, v75);
    v78 = v77;
    v80 = v79;
    v82 = v81;
    sub_100055BAC(v69, v71, v73);
    swift_bridgeObjectRelease();
    v83 = *(void (**)(__n128))(**(_QWORD **)(v48 + 8) + 256);
    v84 = swift_retain();
    v85 = v130;
    v83(v84);
    v86 = swift_release();
    v87 = v137;
    v88 = v138;
    v89 = v131;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v137 + 104))(v131, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v138, v86);
    LOBYTE(v69) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v85, v89);
    v90 = *(void (**)(char *, uint64_t))(v87 + 8);
    v90(v89, v88);
    v91 = ((uint64_t (*)(char *, uint64_t))v90)(v85, v88);
    if ((v69 & 1) != 0)
      v92 = static HierarchicalShapeStyle.secondary.getter(v91);
    else
      v92 = static HierarchicalShapeStyle.tertiary.getter(v91);
    LODWORD(v149[0]) = v92;
    v93 = v80 & 1;
    v94 = Text.foregroundStyle<A>(_:)(v149, v76, v78, v80 & 1, v82, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v96 = v95;
    v98 = v97;
    v100 = v99 & 1;
    sub_100055BAC(v76, v78, v93);
    swift_bridgeObjectRelease();
    v102 = static Edge.Set.horizontal.getter(v101);
    v103 = EdgeInsets.init(_all:)(8.0);
    v164 = v94;
    v165 = v96;
    v166 = v100;
    v167 = v98;
    v168 = v102;
    v169 = v103;
    v170 = v104;
    v171 = v105;
    v172 = v106;
    v173 = 0;
    v108 = static Alignment.center.getter(v107);
    sub_10014B040(0, 1, 0.0, 1, 0.0, 1, 0, 1, &v152, v110, 0.0, 1, INFINITY, 0, v108, v109);
    sub_100055BAC(v94, v96, v100);
    swift_bridgeObjectRelease();
    v151[8] = v160;
    v151[9] = v161;
    v151[10] = v162;
    v151[11] = v163;
    v151[4] = v156;
    v151[5] = v157;
    v151[6] = v158;
    v151[7] = v159;
    v151[0] = v152;
    v151[1] = v153;
    v151[2] = v154;
    v151[3] = v155;
    v149[8] = v160;
    v149[9] = v161;
    v149[10] = v162;
    v149[11] = v163;
    v149[4] = v156;
    v149[5] = v157;
    v149[6] = v158;
    v149[7] = v159;
    v149[0] = v152;
    v149[1] = v153;
    v149[2] = v154;
    v149[3] = v155;
    v150 = 0x3FF0000000000000;
    v111 = AccessibilityIdentifier.libraryTrackCellDuration.unsafeMutableAddressor();
    v112 = *v111;
    v113 = v111[1];
    swift_bridgeObjectRetain();
    v114 = sub_100007E8C(&qword_1011BE890);
    v115 = sub_10062D108();
    v116 = (uint64_t)v133;
    View.accessibilityIdentifier(_:)(v112, v113, v114, v115);
    swift_bridgeObjectRelease();
    sub_1003630A4((uint64_t)v151);
    v117 = v132;
    sub_100065228(v116, v132, &qword_1011BE858);
    v118 = v117;
    v119 = v148;
    sub_100065228(v118, v148, &qword_1011BE858);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v139 + 56))(v119, 0, 1, v140);
    v48 = v145;
    v49 = v146;
    v58 = *(_QWORD *)(v145 + 56);
    if (v58)
      goto LABEL_9;
LABEL_16:
    v120 = _s17ContextMenuButtonVMa(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v49, 1, 1, v120);
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56))(v148, 1, 1, v140);
  v58 = *(_QWORD *)(v48 + 56);
  if (!v58)
    goto LABEL_16;
LABEL_9:
  v59 = *(_QWORD *)(v48 + 64);
  *v49 = v58;
  v49[1] = v59;
  v60 = _s17ContextMenuButtonVMa(0);
  *(_QWORD *)&v149[0] = 0x4046000000000000;
  v61 = sub_1000E4360();
  swift_retain_n(v59, 2);
  ScaledMetric.init(wrappedValue:)(v149, &type metadata for CGFloat, v61);
  *(_QWORD *)&v149[0] = 0x403C000000000000;
  ScaledMetric.init(wrappedValue:)(v149, &type metadata for CGFloat, v61);
  sub_10004BA30(v58, v59);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v49, 0, 1, v60);
LABEL_17:
  v121 = v147;
  v122 = v141;
  sub_10004A160(v147, v141, &qword_1011BE870);
  v123 = v148;
  v124 = v142;
  sub_10004A160(v148, v142, &qword_1011BE860);
  v125 = v144;
  sub_10004A160((uint64_t)v49, v144, &qword_1011BE378);
  v126 = v143;
  sub_10004A160(v122, v143, &qword_1011BE870);
  v127 = sub_100007E8C(&qword_1011BE888);
  sub_10004A160(v124, v126 + *(int *)(v127 + 48), &qword_1011BE860);
  sub_10004A160(v125, v126 + *(int *)(v127 + 64), &qword_1011BE378);
  sub_10004FF60((uint64_t)v49, &qword_1011BE378);
  sub_10004FF60(v123, &qword_1011BE860);
  sub_10004FF60(v121, &qword_1011BE870);
  sub_10004FF60(v125, &qword_1011BE378);
  sub_10004FF60(v124, &qword_1011BE860);
  return sub_10004FF60(v122, &qword_1011BE870);
}

uint64_t sub_10061C7A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];

  v52 = a1;
  v2 = type metadata accessor for AccessibilityTraits(0);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  __chkstk_darwin(v2);
  v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AccessibilityChildBehavior(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_1011BE290);
  __chkstk_darwin(v43);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011BE298);
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011BE2A0);
  __chkstk_darwin(v44);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011BE2A8);
  __chkstk_darwin(v18);
  v42 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", v1[4]);
  _s8TextCellVMa(0);
  v21 = v1;
  v22 = sub_1008237B8((uint64_t)v10);
  v23 = DynamicTypeSize.isAccessibilitySize.getter(v22);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v23 & 1) != 0)
    v25 = static VerticalAlignment.firstTextLineCenter.getter(v24);
  else
    v25 = static VerticalAlignment.center.getter(v24);
  *(_QWORD *)v12 = v25;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v26 = sub_100007E8C(&qword_1011BE2B0);
  v27 = sub_10061CB44(v21, v20, (uint64_t)&v12[*(int *)(v26 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v27);
  v28 = sub_100049F28(&qword_1011BE2B8, &qword_1011BE290, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v29 = v43;
  View.accessibilityElement(children:)(v6, v43, v28);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v48);
  sub_10004FF60((uint64_t)v12, &qword_1011BE290);
  v30 = AccessibilityIdentifier.libraryTextCell.unsafeMutableAddressor();
  v31 = *v30;
  v32 = v30[1];
  swift_bridgeObjectRetain();
  v53[0] = v29;
  v53[1] = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v53, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v34 = v46;
  View.accessibilityIdentifier(_:)(v31, v32, v46, OpaqueTypeConformance2);
  v35 = swift_bridgeObjectRelease();
  v36 = (*(uint64_t (**)(char *, uint64_t, __n128))(v45 + 8))(v15, v34, v35);
  v37 = v49;
  static AccessibilityTraits.isButton.getter(v36);
  v38 = sub_100629BF4();
  v39 = (uint64_t)v42;
  View.accessibilityAddTraits(_:)(v37, v44, v38);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v51);
  sub_10004FF60((uint64_t)v17, &qword_1011BE2A0);
  return sub_100065228(v39, v52, &qword_1011BE2A8);
}

uint64_t sub_10061CB44@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  _QWORD *v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD v185[7];

  v175 = a2;
  v5 = _s8TextCellVMa(0);
  __chkstk_darwin(v5);
  v167 = (uint64_t)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = type metadata accessor for DynamicTypeSize(0);
  v176 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v166 = (uint64_t)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100007E8C(&qword_1011AF5D8);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100007E8C(&qword_1011BE2C8);
  __chkstk_darwin(v168);
  v174 = (uint64_t)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v169 = (char *)&v146 - v11;
  __chkstk_darwin(v12);
  v173 = (uint64_t)&v146 - v13;
  v152 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v152);
  v161 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v154);
  v16 = (uint64_t *)((char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for Image.Scale(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011BE2D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100007E8C(&qword_1011BE2D8);
  __chkstk_darwin(v153);
  v25 = (uint64_t *)((char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v155 = sub_100007E8C(&qword_1011BE2E0);
  __chkstk_darwin(v155);
  v156 = (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011BE2E8);
  __chkstk_darwin(v157);
  v158 = (uint64_t)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011BE2F0);
  __chkstk_darwin(v160);
  v159 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011BE2F8);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_100007E8C(&qword_1011BE300);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v148 = (char *)&v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v147 = (uint64_t)&v146 - v32;
  v33 = sub_100007E8C(&qword_1011BE308);
  __chkstk_darwin(v33);
  v165 = (uint64_t)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v179 = (uint64_t)&v146 - v36;
  v37 = a1[1];
  v162 = a3;
  v178 = v5;
  if (!v37)
  {
    v93 = 1;
    v92 = v179;
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56))(v92, v93, 1, v164);
    v94 = a1[3];
    v181 = a1[2];
    v182 = v94;
    v95 = sub_100055B68();
    swift_bridgeObjectRetain();
    v96 = Text.init<A>(_:)(&v181, &type metadata for String, v95);
    v98 = v97;
    v100 = v99;
    v102 = v101 & 1;
    v103 = Font.init(_:)(v175);
    v104 = (uint64_t)a1;
    v105 = Text.font(_:)(v103, v96, v98, v102, v100);
    v107 = v106;
    v109 = v108;
    v111 = v110;
    swift_release();
    v112 = v109 & 1;
    sub_100055BAC(v96, v98, v102);
    swift_bridgeObjectRelease();
    v181 = *(_QWORD *)(v104 + 40);
    swift_retain();
    v113 = Text.foregroundStyle<A>(_:)(&v181, v105, v107, v109 & 1, v111, &type metadata for Color, &protocol witness table for Color);
    v115 = v114;
    LOBYTE(v102) = v116;
    v118 = v117;
    sub_100055BAC(v105, v107, v112);
    swift_release();
    swift_bridgeObjectRelease();
    v181 = v113;
    v182 = v115;
    LOBYTE(v183) = v102 & 1;
    v184 = v118;
    v119 = v166;
    v120 = sub_1008237B8(v166);
    LOBYTE(v96) = DynamicTypeSize.isAccessibilitySize.getter(v120);
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v119, v177);
    v121 = v167;
    sub_10005B704(v104, v167, _s8TextCellVMa);
    if ((v96 & 1) != 0)
    {
      v122 = *(_QWORD *)(v121 + 8);
      sub_10005B748(v121, _s8TextCellVMa);
      if (v122)
      {
        v124 = sub_100007E8C(qword_1011C9550);
        ScaledMetric.wrappedValue.getter(&v180, v124);
        v123.n128_u64[0] = v180;
LABEL_10:
        v125 = v179;
        v126 = v162;
        v127 = v170;
        View.bodyHeadOutdent(_:)(&type metadata for Text, &protocol witness table for Text, v123);
        sub_100055BAC(v181, v182, v183);
        swift_bridgeObjectRelease();
        v129 = static Edge.Set.vertical.getter(v128);
        v130 = sub_100007E8C(qword_1011C9550);
        ScaledMetric.wrappedValue.getter(&v181, v130);
        v131 = EdgeInsets.init(_all:)(*(double *)&v181);
        v133 = v132;
        v135 = v134;
        v137 = v136;
        v138 = v171;
        v139 = (uint64_t)v169;
        v140 = v172;
        (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v169, v127, v172);
        v141 = v139 + *(int *)(v168 + 36);
        *(_BYTE *)v141 = v129;
        *(double *)(v141 + 8) = v131;
        *(_QWORD *)(v141 + 16) = v133;
        *(_QWORD *)(v141 + 24) = v135;
        *(_QWORD *)(v141 + 32) = v137;
        *(_BYTE *)(v141 + 40) = 0;
        (*(void (**)(char *, uint64_t))(v138 + 8))(v127, v140);
        v142 = v173;
        sub_100065228(v139, v173, &qword_1011BE2C8);
        v143 = v165;
        sub_10004A160(v125, v165, &qword_1011BE308);
        v144 = v174;
        sub_10004A160(v142, v174, &qword_1011BE2C8);
        sub_10004A160(v143, v126, &qword_1011BE308);
        v145 = sub_100007E8C(&qword_1011BE310);
        sub_10004A160(v144, v126 + *(int *)(v145 + 48), &qword_1011BE2C8);
        sub_10004FF60(v142, &qword_1011BE2C8);
        sub_10004FF60(v125, &qword_1011BE308);
        sub_10004FF60(v144, &qword_1011BE2C8);
        return sub_10004FF60(v143, &qword_1011BE308);
      }
    }
    else
    {
      sub_10005B748(v121, _s8TextCellVMa);
    }
    v123.n128_u64[0] = 0;
    goto LABEL_10;
  }
  v38 = *a1;
  swift_bridgeObjectRetain();
  v39 = Image.init(systemName:)(v38, v37);
  v40 = (char *)a1 + *(int *)(v5 + 32);
  v41 = type metadata accessor for SymbolRenderingMode(0);
  v146 = a1;
  v42 = v41;
  v43 = *(_QWORD *)(v41 - 8);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v23, v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v23, 0, 1, v42);
  v44 = Image.symbolRenderingMode(_:)(v23, v39);
  swift_release();
  v45 = sub_10004FF60((uint64_t)v23, &qword_1011BE2D0);
  v46 = static Font.title2.getter(v45);
  KeyPath = swift_getKeyPath(&unk_100EC5720);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for Image.Scale.medium(_:), v17);
  v48 = swift_getKeyPath(&unk_100EC5750);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))((char *)v16 + *(int *)(v154 + 28), v20, v17);
  *v16 = v48;
  sub_10004A160((uint64_t)v16, (uint64_t)v25 + *(int *)(v153 + 36), (uint64_t *)&unk_1011C94A0);
  *v25 = v44;
  v25[1] = KeyPath;
  v25[2] = v46;
  swift_retain();
  swift_retain();
  swift_retain();
  a1 = v146;
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release();
  swift_release();
  swift_release();
  v51 = static Color.accentColor.getter(v49, v50);
  v52 = v156;
  sub_10004A160((uint64_t)v25, v156, &qword_1011BE2D8);
  *(_QWORD *)(v52 + *(int *)(v155 + 36)) = v51;
  sub_10004FF60((uint64_t)v25, &qword_1011BE2D8);
  v53 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v185, v53);
  v54 = *(_QWORD *)&v185[0];
  objc_msgSend(v175, "lineHeight");
  v56 = v55;
  v57 = ScaledMetric.wrappedValue.getter(v185, v53);
  v58 = v56 + *(double *)v185 + *(double *)v185;
  v59 = static Alignment.center.getter(v57);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v185, v54, 0, 0, 1, 0, 1, *(_QWORD *)&v58, 0, 0, 1, 0, 1, v59, v60);
  v61 = v158;
  sub_10004A160(v52, v158, &qword_1011BE2E0);
  v62 = (_OWORD *)(v61 + *(int *)(v157 + 36));
  v63 = v185[5];
  v64 = v185[6];
  v62[4] = v185[4];
  v62[5] = v63;
  v62[6] = v64;
  v65 = v185[1];
  *v62 = v185[0];
  v62[1] = v65;
  v66 = v185[3];
  v62[2] = v185[2];
  v62[3] = v66;
  sub_10004FF60(v52, &qword_1011BE2E0);
  LOBYTE(v59) = static Edge.Set.trailing.getter(v67);
  v68 = EdgeInsets.init(_all:)(4.0);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v159;
  sub_10004A160(v61, v159, &qword_1011BE2E8);
  v76 = v160;
  v77 = v75 + *(int *)(v160 + 36);
  *(_BYTE *)v77 = v59;
  *(double *)(v77 + 8) = v68;
  *(_QWORD *)(v77 + 16) = v70;
  *(_QWORD *)(v77 + 24) = v72;
  *(_QWORD *)(v77 + 32) = v74;
  *(_BYTE *)(v77 + 40) = 0;
  sub_10004FF60(v61, &qword_1011BE2E8);
  v78 = (uint64_t)v161;
  v79 = v177;
  (*(void (**)(char *, _QWORD, uint64_t))(v176 + 104))(v161, enum case for DynamicTypeSize.accessibility2(_:), v177);
  v80 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v78, v78, v79, v80);
  if ((result & 1) != 0)
  {
    v82 = v75;
    v83 = sub_10005610C(&qword_1011BE318, &qword_1011BE2F0, (void (*)(void))sub_100629CC8);
    v84 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v85 = v149;
    v86 = v152;
    View.dynamicTypeSize<A>(_:)(v78, v76, v152, v83, v84);
    sub_10004FF60(v78, &qword_1011C92A0);
    sub_10004FF60(v82, &qword_1011BE2F0);
    v181 = v76;
    v182 = v86;
    v183 = v83;
    v184 = v84;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v181, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v88 = (uint64_t)v148;
    v89 = v151;
    View.accessibilityHidden(_:)(1, v151, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v85, v89);
    v90 = v147;
    sub_100065228(v88, v147, &qword_1011BE300);
    v91 = v90;
    v92 = v179;
    sub_100065228(v91, v179, &qword_1011BE300);
    v93 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10061D97C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;

  v8 = type metadata accessor for AccessibilityTraits(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A2988);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A2CC8);
  __chkstk_darwin(v15);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 56))(a4, 1, 1);
  v69 = a2;
  v70 = a3;
  v67 = v17;
  v68 = v16;
  v66 = v19;
  v21 = sub_100055B68();
  swift_bridgeObjectRetain();
  v22 = Text.init<A>(_:)(&v69, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = static Font.body.getter(v22);
  v65 = a4;
  v30 = v29;
  v31 = Text.font(_:)(v29, v22, v24, v28, v26);
  v62 = v14;
  v63 = v9;
  v33 = v32;
  v35 = v34;
  v64 = v8;
  v37 = v36;
  swift_release(v30);
  LOBYTE(v30) = v35 & 1;
  sub_100055BAC(v22, v24, v28);
  swift_bridgeObjectRelease(v26);
  v39 = static Font.Weight.semibold.getter(v38);
  v40 = Text.fontWeight(_:)(*(_QWORD *)&v39, 0, v31, v33, v35 & 1, v37);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_100055BAC(v31, v33, v30);
  v47 = swift_bridgeObjectRelease(v37);
  LODWORD(v69) = static HierarchicalShapeStyle.primary.getter(v47);
  v48 = Text.foregroundStyle<A>(_:)(&v69, v40, v42, v46, v44, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v50 = v49;
  LOBYTE(v37) = v51;
  v53 = v52;
  sub_100055BAC(v40, v42, v46);
  v54 = swift_bridgeObjectRelease(v44);
  v69 = v48;
  v70 = v50;
  v71 = v37 & 1;
  v72 = v53;
  static AccessibilityTraits.isHeader.getter(v54);
  v55 = (uint64_t)v62;
  View.accessibilityAddTraits(_:)(v11, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v64);
  sub_100055BAC(v69, v70, v71);
  swift_bridgeObjectRelease(v72);
  v57 = static Alignment.leading.getter(v56);
  v58 = (uint64_t)v66;
  sub_10014B1EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v66, 0.0, 1, 0.0, 1, v57, v59);
  sub_10004FF60(v55, &qword_1011A2988);
  v60 = v58;
  v61 = v65;
  sub_100065228(v60, v65, &qword_1011A2CC8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v61, 0, 1, v68);
}

void sub_10061DCDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = sub_100007E8C(&qword_1011A9A10);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v11, &qword_1011A9A10);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1010D34F8, v14 + 16, v12 | 7);
  sub_100065228((uint64_t)v11, v15 + v13, &qword_1011A9A10);
  v16 = (uint64_t *)(v15 + v14);
  *v16 = a2;
  v16[1] = a3;
  sub_100048AAC(a2, a3);
  v17 = static PlayIntentButtonStack.playShuffle(_:)((uint64_t)sub_1006216D0, v15);
  v19 = v18;
  v21 = v20;
  swift_release();
  LOBYTE(v15) = static Edge.Set.vertical.getter(v22);
  v23 = EdgeInsets.init(_all:)(16.0);
  *(_QWORD *)a4 = v17;
  *(_QWORD *)(a4 + 8) = v19;
  *(_QWORD *)(a4 + 16) = v21;
  *(_BYTE *)(a4 + 24) = v15;
  *(double *)(a4 + 32) = v23;
  *(_QWORD *)(a4 + 40) = v24;
  *(_QWORD *)(a4 + 48) = v25;
  *(_QWORD *)(a4 + 56) = v26;
  *(_BYTE *)(a4 + 64) = 0;
}

uint64_t sub_10061DE0C(unsigned __int8 a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void *v21;
  void *v22;
  BOOL v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(void);
  char *v39;
  uint64_t v40;

  v40 = a4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlaybackIntentDescriptor(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a2, (uint64_t)v18, &qword_1011A9A10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (!v19(v18, 1, v9))
  {
    v38 = a3;
    v20 = a1;
    v21 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v21, "setShuffleMode:", v20 == 1);

    v22 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v22, "setRepeatMode:", 0);

    v23 = v20 == 2;
    a3 = v38;
    v24 = v23;
    v18[*(int *)(v9 + 32)] = v24;
  }
  if (!v19(v18, 1, v9))
  {
    sub_10005B704((uint64_t)v18, (uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    v26 = type metadata accessor for TaskPriority(0);
    v27 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v39, 1, 1, v26);
    sub_10005B704((uint64_t)v15, (uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor);
    type metadata accessor for MainActor(0);
    v29 = static MainActor.shared.getter(v28);
    v30 = *(unsigned __int8 *)(v10 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = a3;
    v33 = (v11 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject(&unk_1010D3520, v34 + 16, v30 | 7);
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0((uint64_t)v12, v35 + v31, type metadata accessor for PlaybackIntentDescriptor);
    *(_QWORD *)(v35 + v33) = 0;
    a3 = v32;
    v36 = (_QWORD *)(v35 + v34);
    *v36 = 0;
    v36[1] = 0;
    sub_100166D14(v27, (uint64_t)&unk_1011A3D90, v35);
    swift_release();
    sub_10005B748((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    if (!v32)
      return sub_10004FF60((uint64_t)v18, &qword_1011A9A10);
    goto LABEL_8;
  }
  if (a3)
LABEL_8:
    a3();
  return sub_10004FF60((uint64_t)v18, &qword_1011A9A10);
}

uint64_t sub_10061E0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[7];

  v34 = a1;
  v2 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011BE908);
  __chkstk_darwin(v33);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BE910);
  __chkstk_darwin(v7);
  v32 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  v11 = static Color.accentColor.getter(v9, v10);
  KeyPath = swift_getKeyPath(&unk_100EC59A8);
  v13 = _s13FavoriteBadgeVMa(0);
  v14 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v35, v14);
  v15 = *(double *)v35;
  v16 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  v17 = static Font.system(size:weight:design:)(0, 1, v4, v15);
  sub_10004FF60((uint64_t)v4, &qword_1011C4F30);
  v18 = swift_getKeyPath(&unk_100EC5720);
  v19 = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    v19 = 0.0;
  v20 = -(v19 + *(double *)(v1 + *(int *)(v13 + 24)));
  v35[0] = v9;
  v35[1] = KeyPath;
  v35[2] = v11;
  v35[3] = v18;
  v35[4] = v17;
  *(double *)&v35[5] = v20;
  v35[6] = 0;
  v21 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain();
  v24 = sub_100007E8C(&qword_1011BE918);
  v25 = sub_10005610C(&qword_1011BE920, &qword_1011BE918, (void (*)(void))sub_1001C3E78);
  View.accessibilityLabel(_:)(v22, v23, v24, v25);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v26 = AccessibilityIdentifier.libraryFavoriteBadge.unsafeMutableAddressor();
  v27 = *v26;
  v28 = v26[1];
  v29 = sub_10062D3FC();
  swift_bridgeObjectRetain();
  v30 = (uint64_t)v32;
  View.accessibilityIdentifier(_:)(v27, v28, v33, v29);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v6, &qword_1011BE908);
  return sub_100065228(v30, v34, &qword_1011BE910);
}

uint64_t sub_10061E3D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v27 = sub_100007E8C(&qword_1011BE828);
  __chkstk_darwin(v27);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = static Color.clear.getter(v4);
  KeyPath = swift_getKeyPath(&unk_100EC59A8);
  _s17ContextMenuButtonVMa(0);
  v5 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(&v29, v5);
  v6 = v29;
  v7 = ScaledMetric.wrappedValue.getter(&v29, v5);
  v8 = v29;
  v9 = static Alignment.center.getter(v7);
  v11 = _FrameLayout.init(width:height:alignment:)(&v29, v6, 0, v8, 0, v9, v10);
  v12 = v29;
  v13 = v30;
  v14 = v31;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = static Alignment.center.getter(v11);
  v20 = v19;
  sub_10061E560(v25);
  v21 = (uint64_t *)&v3[*(int *)(v27 + 36)];
  *v21 = v18;
  v21[1] = v20;
  v22 = sub_100007E8C(&qword_1011BE830);
  sub_10004A160((uint64_t)v3, a1 + *(int *)(v22 + 36), &qword_1011BE828);
  v23 = v28;
  *(_QWORD *)a1 = KeyPath;
  *(_QWORD *)(a1 + 8) = v23;
  *(_QWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  return sub_10004FF60((uint64_t)v3, &qword_1011BE828);
}

uint64_t sub_10061E560(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v1 = *a1;
  v2 = a1[1];
  _s17ContextMenuButtonVMa(0);
  sub_100048AAC(v1, v2);
  v3 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v14, v3);
  v4 = v14[0];
  ScaledMetric.wrappedValue.getter(v14, v3);
  v5 = v14[0];
  ScaledMetric.wrappedValue.getter(v14, v3);
  v6 = v14[0];
  v7 = ScaledMetric.wrappedValue.getter(v14, v3);
  v8 = v14[0];
  v9 = static Alignment.center.getter(v7);
  _FrameLayout.init(width:height:alignment:)(&v21, v6, 0, v8, 0, v9, v10);
  v14[0] = v1;
  v14[1] = v2;
  v14[2] = v4;
  v14[3] = v5;
  v15 = 0;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  v19 = v24;
  v20 = v25;
  v11 = sub_100007E8C(&qword_1011BE838);
  v12 = sub_10005610C(&qword_1011BE840, &qword_1011BE838, (void (*)(void))sub_10062D080);
  View.accessibilityHidden(_:)(1, v11, v12);
  return sub_10004BA30(v1, v2);
}

uint64_t sub_10061E6D0(uint64_t result, uint64_t a2, char a3)
{
  char *v3;
  double *v4;
  double v5;
  double v6;
  int v7;
  double v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = (double *)&v3[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  v5 = *(double *)&v3[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  v6 = *(double *)&v3[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
                    + 8];
  v7 = v3[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
                         + 16];
  *v4 = *(double *)&result;
  v4[1] = *(double *)&a2;
  *((_BYTE *)v4 + 16) = a3 & 1;
  if ((a3 & 1) != 0)
  {
    if (!v7)
    {
LABEL_11:
      objc_msgSend(v3, "setPointerInteractionEnabled:", 1, v5, v6);
      v9 = *v4;
      v10 = *((_QWORD *)v4 + 1);
      v11 = *((_BYTE *)v4 + 16);
      v12 = swift_allocObject(&unk_1010D3840, 33, 7);
      *(double *)(v12 + 16) = v9;
      *(_QWORD *)(v12 + 24) = v10;
      *(_BYTE *)(v12 + 32) = v11;
      UIButton.pointerStyleProvider.setter(sub_10062DAC8, v12);
      *(double *)&result = COERCE_DOUBLE(objc_msgSend(v3, "setNeedsLayout"));
    }
  }
  else
  {
    if ((v7 & 1) != 0)
      goto LABEL_11;
    if (v5 != *(double *)&result || v6 != *(double *)&a2)
      goto LABEL_11;
  }
  return result;
}

id sub_10061E798(_BYTE *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  char v11;
  id result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  double v18;
  double v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v3 = *v1;
  v4 = v1[1];
  v5 = (uint64_t *)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
  v6 = *(_QWORD *)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider
                    + 8];
  *v5 = *v1;
  v5[1] = v4;
  sub_100048AAC(v3, v4);
  sub_10004BA30(v6, v7);
  sub_100065228((uint64_t)(v1 + 2), (uint64_t)v20, &qword_1011B2580);
  v8 = &a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  v10 = *(double *)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  v9 = *(double *)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
                    + 8];
  v11 = a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
         + 16];
  sub_100065228((uint64_t)v20, (uint64_t)&a1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize], &qword_1011B2580);
  result = (id)sub_100065228((uint64_t)v20, (uint64_t)v21, &qword_1011B2580);
  if ((v21[16] & 1) != 0)
  {
    if ((v11 & 1) != 0)
      return result;
LABEL_7:
    objc_msgSend(a1, "setPointerInteractionEnabled:", 1, v13);
    v14 = *(_QWORD *)v8;
    v15 = *((_QWORD *)v8 + 1);
    v16 = v8[16];
    v17 = swift_allocObject(&unk_1010D3818, 33, 7);
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = v15;
    *(_BYTE *)(v17 + 32) = v16;
    UIButton.pointerStyleProvider.setter(sub_10062DAC8, v17);
    return objc_msgSend(a1, "setNeedsLayout");
  }
  result = (id)sub_100065228((uint64_t)v20, (uint64_t)&v18, &qword_1011B2580);
  if ((v11 & 1) != 0)
    goto LABEL_7;
  v13 = v18;
  if (v18 != v10)
    goto LABEL_7;
  v13 = v19;
  if (v19 != v9)
    goto LABEL_7;
  return result;
}

char *sub_10061E8DC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  NSString v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v29;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v0[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v0[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v29.receiver = v0;
  v29.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v29, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  static UIButton.Configuration.plain()(v15);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  UIButton.Configuration.baseForegroundColor.setter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
  UIButton.Configuration.cornerStyle.setter(v8);
  v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  if (v18 == (id)6)
  {
    v19 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  }
  else
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
    v19 = (id)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCallout, UIFontWeightSemibold);
  }
  v20 = v19;
  v21 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v19, 2);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v22, v21);

  UIButton.Configuration.image.setter(v23);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  v24 = (char *)v15;
  UIButton.configuration.setter(v4);

  objc_msgSend(v24, "setContextMenuInteractionEnabled:", 1);
  objc_msgSend(v24, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v24, "setPointerInteractionEnabled:", 1);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  v26 = *(_QWORD *)&v24[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
                      + 8];
  LOBYTE(v23) = v24[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
                  + 16];
  v27 = swift_allocObject(&unk_1010D3598, 33, 7);
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v26;
  *(_BYTE *)(v27 + 32) = (_BYTE)v23;
  UIButton.pointerStyleProvider.setter(sub_100621A4C, v27);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v24;
}

uint64_t sub_10061ECBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  double v29;
  double v30;
  double v31;
  double Width;
  double Height;
  id v34;
  double v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v11 = sub_100007E8C(&qword_1011AFF50);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIPointerEffect(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "bounds", v17);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = (double *)SymbolButton.Configuration.hitRectMinimumSize.unsafeMutableAddressor();
  if ((a6 & 1) != 0)
  {
    v29 = *v28;
    v31 = v28[1];
    v51.origin.x = v21;
    v51.origin.y = v23;
    v51.size.width = v25;
    v51.size.height = v27;
    Width = CGRectGetWidth(v51);
    if (v29 >= Width)
      v29 = Width;
    v52.origin.x = v21;
    v52.origin.y = v23;
    v52.size.width = v25;
    v52.size.height = v27;
    Height = CGRectGetHeight(v52);
    if (v31 < Height)
      v30 = v31;
    else
      v30 = Height;
  }
  else
  {
    v29 = *(double *)&a4;
    v30 = *(double *)&a5;
  }
  v34 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v34, "displayScale");
  v36 = v35;

  v37 = CGRect.centeringAlong(axes:bounds:scale:)(3, v21, v23, v25, v27, v36, 0.0, 0.0, v29, v30);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a2, v15);
  v53.origin.x = v37;
  v53.origin.y = v39;
  v53.size.width = v41;
  v53.size.height = v43;
  v44 = CGRectGetWidth(v53);
  v54.origin.x = v37;
  v54.origin.y = v39;
  v54.size.width = v41;
  v54.size.height = v43;
  v45 = CGRectGetHeight(v54);
  if (v45 < v44)
    v44 = v45;
  sub_10004A07C(0, &qword_1011AFF58, UIPointerStyle_ptr);
  *(CGFloat *)v14 = v37;
  *((CGFloat *)v14 + 1) = v39;
  *((CGFloat *)v14 + 2) = v41;
  *((CGFloat *)v14 + 3) = v43;
  *((double *)v14 + 4) = v44 * 0.5;
  v46 = enum case for UIPointerShape.roundedRect(_:);
  v47 = type metadata accessor for UIPointerShape(0);
  v48 = *(_QWORD *)(v47 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v14, v46, v47);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v14, 0, 1, v47);
  return UIPointerStyle.init(effect:shape:)(v19, v14);
}

uint64_t sub_10061EF4C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  double *v18;
  double leading;
  double top;
  double bottom;
  double trailing;
  double v23;
  double v24;
  CGFloat v25;
  uint64_t v26;
  unsigned int (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void (*v40)(_BYTE *, _QWORD);
  _BYTE v41[32];
  objc_super v42;
  CGRect v43;
  CGRect v44;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for UIBackgroundConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v7);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v41[-v11];
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = &v41[-v15];
  v42.receiver = v1;
  v42.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v42, "layoutSubviews", v14);
  v18 = (double *)&v1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize];
  if ((v1[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_preferredVisualSize
         + 16] & 1) != 0)
  {
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  else
  {
    v24 = *v18;
    v23 = v18[1];
    objc_msgSend(v1, "bounds");
    v25 = CGRectGetWidth(v43) - v24;
    objc_msgSend(v1, "bounds");
    bottom = (CGRectGetHeight(v44) - v23) * 0.5;
    trailing = v25 * 0.5;
    leading = trailing;
    top = bottom;
  }
  UIButton.configuration.getter(v17);
  v26 = type metadata accessor for UIButton.Configuration(0);
  v27 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  if (v27(v16, 1, v26))
  {
    result = sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A2250);
LABEL_16:
    UIButton.configuration.getter(result);
    if (v27(v12, 1, v26))
    {
      sub_10004A160((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1011A2250);
      UIButton.configuration.setter(v9);
      return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A2250);
    }
    else
    {
      v40 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v41);
      UIBackgroundConfiguration.backgroundInsets.setter(top);
      v40(v41, 0);
      return UIButton.configuration.setter(v12);
    }
  }
  v29 = UIButton.Configuration.background.getter();
  v30 = UIBackgroundConfiguration.backgroundInsets.getter(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  result = sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A2250);
  if (v30 != top || v32 != leading || v34 != bottom || v36 != trailing)
    goto LABEL_16;
  return result;
}

void *sub_10061F24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  uint64_t (*v5)(_QWORD *);
  uint64_t v6;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  v4 = Strong;
  if (Strong)
  {
    v5 = *(uint64_t (**)(_QWORD *))&Strong[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
    if (v5)
    {
      v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider
                            + 8];
      sub_100048AAC(*(_QWORD *)&Strong[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider], v6);

      v4 = (void *)v5(_swiftEmptyArrayStorage);
      sub_10004BA30((uint64_t)v5, v6);
    }
    else
    {

      return 0;
    }
  }
  return v4;
}

uint64_t _s17ContextMenuButtonV6ButtonV15UIContextButtonCMa()
{
  return objc_opt_self(_TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton);
}

id sub_10061F42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)_s17ContextMenuButtonV6ButtonV15UIContextButtonCMa()), "init");
  v7 = (uint64_t *)&v6[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider];
  v9 = *(_QWORD *)&v6[OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library17ContextMenuButtonP33_D5F4B96DB6B3519CEF4067078A2950BC6Button15UIContextButton_menuProvider
                    + 8];
  *v7 = v1;
  v7[1] = v2;
  sub_100048AAC(v1, v2);
  sub_10004BA30(v8, v9);
  sub_10061E6D0(v3, v4, v5);
  v10 = AccessibilityIdentifier.libraryContextMenuButton.unsafeMutableAddressor();
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain();
  v13 = UIView.withAccessibilityIdentifier(_:)(v11, v12);

  swift_bridgeObjectRelease();
  return v13;
}

id sub_10061F4F0(_BYTE *a1)
{
  return sub_10061E798(a1);
}

uint64_t sub_10061F528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10062DA60();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10061F578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10062DA60();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10061F5C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10062DA60();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10061F5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t WitnessTable;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  char v74;
  char v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102[16];
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v101 = a2;
  v98 = type metadata accessor for Image.Scale(0);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v80 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C(&qword_1011BE8B8);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011BE8C0);
  __chkstk_darwin(v79);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100007E8C(&qword_1011BE8C8);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v78 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011BE8D0);
  __chkstk_darwin(v83);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100007E8C(&qword_1011BE8D8);
  __chkstk_darwin(v89);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011BE8E0);
  v84 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 24);
  v86 = *(_QWORD *)(a1 + 16);
  v87 = v20;
  v94 = type metadata accessor for _OverlayModifier(255, v86, v20);
  v21 = type metadata accessor for ModifiedContent(0, v17, v94);
  v22 = *(_QWORD *)(v21 - 8);
  v92 = v21;
  v99 = v22;
  __chkstk_darwin(v21);
  v88 = (char *)&v76 - v23;
  v85 = type metadata accessor for ModifiedContent(0, v24, &type metadata for _FlexFrameLayout);
  v100 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v93 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v97 = (uint64_t)&v76 - v27;
  v28 = v2;
  v77 = v2;
  v29 = *v2;
  v30 = v28[1];
  swift_bridgeObjectRetain();
  v110 = Image.init(systemName:)(v29, v30);
  static AccessibilityChildBehavior.ignore.getter(v110);
  View.accessibilityElement(children:)(v7, &type metadata for Image, &protocol witness table for Image);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v7, v5);
  v31 = swift_release();
  v32 = static Font.caption.getter(v31);
  KeyPath = swift_getKeyPath(&unk_100EC5720);
  v34 = v81;
  v35 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v11, v9, v82);
  v36 = v79;
  v37 = (uint64_t *)&v11[*(int *)(v79 + 36)];
  *v37 = KeyPath;
  v37[1] = v32;
  v38 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v9, v35);
  v39 = static Font.Weight.bold.getter(v38);
  v40 = sub_10062D218();
  v41 = v78;
  View.fontWeight(_:)(*(_QWORD *)&v39, 0, v36, v40);
  sub_10004FF60((uint64_t)v11, &qword_1011BE8C0);
  v43 = v95;
  v42 = v96;
  v44 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, enum case for Image.Scale.medium(_:), v98);
  v45 = swift_getKeyPath(&unk_100EC5750);
  v46 = (uint64_t *)&v14[*(int *)(v83 + 36)];
  v47 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))((char *)v46 + *(int *)(v47 + 28), v43, v44);
  *v46 = v45;
  v48 = v90;
  v49 = v91;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v14, v41, v91);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v41, v49);
  LODWORD(v49) = static HierarchicalShapeStyle.tertiary.getter(v50);
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011BE8D0);
  *(_DWORD *)&v16[*(int *)(v89 + 36)] = v49;
  sub_10004FF60((uint64_t)v14, &qword_1011BE8D0);
  v51 = v77;
  v52 = v77[2];
  sub_10004A160((uint64_t)v16, (uint64_t)v19, &qword_1011BE8D8);
  v53 = v84;
  *(_QWORD *)&v19[*(int *)(v84 + 36)] = v52;
  v54 = sub_10004FF60((uint64_t)v16, &qword_1011BE8D8);
  v55 = v86;
  v56 = v87;
  v103 = v86;
  v104 = v87;
  v105 = v51;
  v57 = static Alignment.center.getter(v54);
  v59 = v58;
  v60 = sub_10005610C(&qword_1011BE8F0, &qword_1011BE8E0, (void (*)(void))sub_10062D2CC);
  v61 = v88;
  View.overlay<A>(alignment:content:)(v57, v59, sub_10062D2C0, v102, v53, v55, v60, v56);
  v62 = sub_10004FF60((uint64_t)v19, &qword_1011BE8E0);
  v63 = static Alignment.center.getter(v62);
  v65 = v64;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v94);
  v108 = v60;
  v109 = WitnessTable;
  v67 = v92;
  v68 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v92);
  v75 = 1;
  v74 = 1;
  v69 = (uint64_t)v93;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0x403C000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v74, 0, v75, v63, v65, v67, v68);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v61, v67);
  v106 = v68;
  v107 = &protocol witness table for _FlexFrameLayout;
  v70 = v85;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v85);
  v71 = v97;
  sub_10081EB14(v69, v70, v97);
  v72 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v72(v69, v70);
  sub_1000EA744(v71, v70, v101);
  return ((uint64_t (*)(uint64_t, uint64_t))v72)(v71, v70);
}

uint64_t sub_10061FD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s15StatusIndicatorVMa(0, v9, v10, v11);
  sub_10081EB14(a1 + *(int *)(v12 + 40), a2, (uint64_t)v8);
  sub_1000EA744((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10061FDE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  __n128 v21;
  _QWORD v23[3];
  _QWORD v24[3];

  v23[1] = a1;
  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011BE508);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v24, "xmark.icloud");
  BYTE5(v24[1]) = 0;
  HIWORD(v24[1]) = -5120;
  v24[2] = 0x3FF0000000000000;
  static AccessibilityChildBehavior.ignore.getter(v9);
  v10 = sub_100007E8C(&qword_1011BE578);
  v11 = sub_100049F28(&qword_1011BE580, &qword_1011BE578, (uint64_t)&unk_100EC58B8);
  View.accessibilityElement(children:)(v4, v10, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  v12 = LocalizedStringKey.init(stringLiteral:)(0x6F6C705520746F4ELL, 0xEC00000064656461);
  v13 = Text.init(_:tableName:bundle:comment:)(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v24[0] = v10;
  v24[1] = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v24, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibility(label:)(v13, v15, v19, v17, v5, OpaqueTypeConformance2);
  sub_100055BAC(v13, v15, v19);
  v21 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v21);
}

uint64_t sub_10061FFF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t result;
  double v73;
  uint64_t v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t OpaqueTypeConformance2;
  uint64_t v135;
  uint64_t v136;
  __n128 v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD v192[2];
  uint64_t v193;

  v2 = v1;
  v190 = a1;
  v187 = sub_100007E8C(&qword_1011BE4F0);
  __chkstk_darwin(v187);
  v183 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100007E8C(&qword_1011BE4F8);
  __chkstk_darwin(v185);
  v186 = (uint64_t)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100007E8C(&qword_1011BE500);
  __chkstk_darwin(v189);
  v188 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100007E8C(&qword_1011BE508);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v152 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_1011BE510);
  __chkstk_darwin(v156);
  v157 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100007E8C(&qword_1011BE518);
  __chkstk_darwin(v184);
  v153 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v158 = (uint64_t)&v148 - v10;
  v169 = type metadata accessor for AccessibilityTraits(0);
  v167 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v166 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = type metadata accessor for AccessibilityChildBehavior(0);
  v176 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v175 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011BE520);
  __chkstk_darwin(v170);
  v14 = (uint64_t *)((char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = sub_100007E8C(&qword_1011BE528);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100007E8C(&qword_1011BE530);
  __chkstk_darwin(v165);
  v174 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v162 = (char *)&v148 - v18;
  __chkstk_darwin(v19);
  v164 = (char *)&v148 - v20;
  v181 = sub_100007E8C(&qword_1011BE538);
  __chkstk_darwin(v181);
  v163 = (char *)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v168 = (uint64_t)&v148 - v23;
  v24 = sub_100007E8C(&qword_1011BE540);
  __chkstk_darwin(v24);
  v26 = (char *)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011BE548);
  __chkstk_darwin(v179);
  v180 = (uint64_t)&v148 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011BE550);
  __chkstk_darwin(v28);
  v182 = (char *)&v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011BE558);
  __chkstk_darwin(v160);
  v31 = (char *)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100007E8C(&qword_1011BE560);
  __chkstk_darwin(v178);
  v159 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v161 = (uint64_t)&v148 - v34;
  v35 = sub_100007E8C(&qword_1011BDFC0);
  __chkstk_darwin(v35);
  v37 = (double *)((char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  v40 = (char *)&v148 - v39;
  v41 = v2;
  sub_10004A160(v2, (uint64_t)&v148 - v39, &qword_1011BDFC0);
  v42 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
    goto LABEL_2;
  v149 = v24;
  v150 = v28;
  v151 = v26;
  sub_10004A160((uint64_t)v40, (uint64_t)v37, &qword_1011BDFC0);
  v53 = (*(uint64_t (**)(double *, uint64_t))(v43 + 88))(v37, v42);
  if ((_DWORD)v53 != enum case for MusicLibrary.DownloadStatus.downloading(_:))
  {
    if ((_DWORD)v53 == enum case for MusicLibrary.DownloadStatus.downloadWaiting(_:))
    {
      strcpy((char *)v192, "circle.dashed");
      HIWORD(v192[1]) = -4864;
      v193 = 0x3FF0000000000000;
      v96 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000013, 0x8000000100E3A490);
      v97 = Text.init(_:tableName:bundle:comment:)(v96);
      v99 = v98;
      v101 = v100;
      v103 = v102 & 1;
      v104 = v40;
      v105 = sub_100007E8C(&qword_1011BE578);
      v106 = sub_100049F28(&qword_1011BE580, &qword_1011BE578, (uint64_t)&unk_100EC58B8);
      v107 = v105;
      v40 = v104;
      View.accessibility(label:)(v97, v99, v103, v101, v107, v106);
      sub_100055BAC(v97, v99, v103);
      swift_bridgeObjectRelease();
      v108 = AccessibilityIdentifier.downloadStatus.unsafeMutableAddressor();
      v109 = *v108;
      v110 = v108[1];
      v111 = sub_10062AAD8();
      swift_bridgeObjectRetain();
      v112 = (uint64_t)v159;
      View.accessibilityIdentifier(_:)(v109, v110, v160, v111);
      swift_bridgeObjectRelease();
      sub_10004FF60((uint64_t)v31, &qword_1011BE558);
      v113 = v161;
      sub_100065228(v112, v161, &qword_1011BE560);
      v114 = v180;
      sub_10004A160(v113, v180, &qword_1011BE560);
      swift_storeEnumTagMultiPayload(v114, v179, 0);
      v115 = sub_10062AA54();
      v116 = sub_10062AB74();
      v117 = (uint64_t)v182;
      _ConditionalContent<>.init(storage:)(v114, v178, v181, v115, v116);
      v118 = (uint64_t)v151;
      sub_10004A160(v117, (uint64_t)v151, &qword_1011BE550);
      swift_storeEnumTagMultiPayload(v118, v149, 0);
      v119 = sub_10062AA30();
      v120 = sub_10062ACC4();
      _ConditionalContent<>.init(storage:)(v118, v150, v189, v119, v120);
      sub_10004FF60(v117, &qword_1011BE550);
      v52 = v113;
      v121 = &qword_1011BE560;
LABEL_14:
      sub_10004FF60(v52, v121);
      return sub_10004FF60((uint64_t)v40, &qword_1011BDFC0);
    }
    if ((_DWORD)v53 != enum case for MusicLibrary.DownloadStatus.downloaded(_:))
    {
      (*(void (**)(double *, uint64_t))(v43 + 8))(v37, v42);
      v26 = v151;
      v28 = v150;
      v24 = v149;
LABEL_2:
      v44 = (uint64_t)v183;
      View.accessibility(hidden:)(1, &type metadata for EmptyView, &protocol witness table for EmptyView);
      v45 = &qword_1011BE4F0;
      v46 = v186;
      sub_10004A160(v44, v186, &qword_1011BE4F0);
      swift_storeEnumTagMultiPayload(v46, v185, 1);
      v47 = sub_10062A864();
      v48 = sub_10062A9B4(&qword_1011BE588, &qword_1011BE4F0);
      v49 = (uint64_t)v188;
      _ConditionalContent<>.init(storage:)(v46, v184, v187, v47, v48);
      sub_10004A160(v49, (uint64_t)v26, &qword_1011BE500);
      swift_storeEnumTagMultiPayload(v26, v24, 1);
      v50 = sub_10062AA30();
      v51 = sub_10062ACC4();
      _ConditionalContent<>.init(storage:)(v26, v28, v189, v50, v51);
      sub_10004FF60(v49, &qword_1011BE500);
      v52 = v44;
LABEL_13:
      v121 = v45;
      goto LABEL_14;
    }
    v192[0] = 0xD000000000000016;
    v192[1] = 0x8000000100E40C10;
    v193 = 0x3FF0000000000000;
    v122 = v175;
    static AccessibilityChildBehavior.ignore.getter(v53);
    v123 = sub_100007E8C(&qword_1011BE578);
    v124 = sub_100049F28(&qword_1011BE580, &qword_1011BE578, (uint64_t)&unk_100EC58B8);
    v125 = v152;
    View.accessibilityElement(children:)(v122, v123, v124);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v122, v177);
    swift_bridgeObjectRelease();
    v126 = LocalizedStringKey.init(stringLiteral:)(0x64616F6C6E776F44, 0xEA00000000006465);
    v127 = Text.init(_:tableName:bundle:comment:)(v126);
    v129 = v128;
    v131 = v130;
    v133 = v132 & 1;
    v192[0] = v123;
    v192[1] = v124;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v192, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v135 = (uint64_t)v157;
    v136 = v155;
    View.accessibility(label:)(v127, v129, v133, v131, v155, OpaqueTypeConformance2);
    sub_100055BAC(v127, v129, v133);
    v137 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v125, v136, v137);
    v138 = AccessibilityIdentifier.downloadStatus.unsafeMutableAddressor();
    v139 = *v138;
    v140 = v138[1];
    v141 = sub_10062A8E8();
    swift_bridgeObjectRetain();
    v142 = (uint64_t)v153;
    View.accessibilityIdentifier(_:)(v139, v140, v156, v141);
    swift_bridgeObjectRelease();
    sub_10004FF60(v135, &qword_1011BE510);
    v45 = &qword_1011BE518;
    v86 = v158;
    sub_100065228(v142, v158, &qword_1011BE518);
    v143 = v186;
    sub_10004A160(v86, v186, &qword_1011BE518);
    swift_storeEnumTagMultiPayload(v143, v185, 0);
    v144 = sub_10062A864();
    v145 = sub_10062A9B4(&qword_1011BE588, &qword_1011BE4F0);
    v90 = (uint64_t)v188;
    _ConditionalContent<>.init(storage:)(v143, v184, v187, v144, v145);
    v91 = &qword_1011BE500;
    v92 = (uint64_t)v151;
    sub_10004A160(v90, (uint64_t)v151, &qword_1011BE500);
    v93 = v92;
    v94 = v149;
    v95 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v93, v94, v95);
    v146 = sub_10062AA30();
    v147 = sub_10062ACC4();
    _ConditionalContent<>.init(storage:)(v92, v150, v189, v146, v147);
    sub_10004FF60(v90, v91);
    v52 = v86;
    goto LABEL_13;
  }
  (*(void (**)(double *, uint64_t))(v43 + 96))(v37, v42);
  v54 = *v37;
  *v14 = 0xD000000000000016;
  v14[1] = 0x8000000100E40C10;
  v14[2] = 0;
  v55 = v170;
  v56 = sub_1006210A4(v41, (uint64_t)v14 + *(int *)(v170 + 40), v54);
  v57 = v175;
  static AccessibilityChildBehavior.ignore.getter(v56);
  v58 = sub_100049F28(&qword_1011BE5B8, &qword_1011BE520, (uint64_t)&unk_100EC58B8);
  v59 = v171;
  View.accessibilityElement(children:)(v57, v55, v58);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v57, v177);
  sub_10004FF60((uint64_t)v14, &qword_1011BE520);
  v60 = LocalizedStringKey.init(stringLiteral:)(0x64616F6C6E776F44, 0xEB00000000676E69);
  v61 = Text.init(_:tableName:bundle:comment:)(v60);
  v63 = v62;
  v65 = v64;
  v67 = v66 & 1;
  v192[0] = v55;
  v192[1] = v58;
  v68 = swift_getOpaqueTypeConformance2(v192, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v69 = (uint64_t)v174;
  v70 = v173;
  View.accessibility(label:)(v61, v63, v67, v65, v173, v68);
  sub_100055BAC(v61, v63, v67);
  v71 = swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v172 + 8))(v59, v70, v71);
  v73 = round(v54 * 100.0);
  if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v73 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v73 < 9.22337204e18)
  {
    v191 = (uint64_t)v73;
    v192[0] = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v192[1] = v74;
    v75._countAndFlagsBits = 37;
    v75._object = (void *)0xE100000000000000;
    String.append(_:)(v75);
    v76 = (uint64_t)v162;
    v77 = v165;
    ModifiedContent<>.accessibility(value:)(v192[0], v192[1], 0, _swiftEmptyArrayStorage, v165);
    swift_bridgeObjectRelease();
    v78 = sub_10004FF60(v69, &qword_1011BE530);
    v79 = v166;
    static AccessibilityTraits.updatesFrequently.getter(v78);
    v80 = (uint64_t)v164;
    ModifiedContent<>.accessibilityAddTraits(_:)(v79, v77);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v79, v169);
    sub_10004FF60(v76, &qword_1011BE530);
    v81 = AccessibilityIdentifier.downloadStatus.unsafeMutableAddressor();
    v82 = *v81;
    v83 = v81[1];
    v84 = sub_10062ABF8();
    swift_bridgeObjectRetain();
    v85 = (uint64_t)v163;
    View.accessibilityIdentifier(_:)(v82, v83, v77, v84);
    swift_bridgeObjectRelease();
    sub_10004FF60(v80, &qword_1011BE530);
    v45 = &qword_1011BE538;
    v86 = v168;
    sub_100065228(v85, v168, &qword_1011BE538);
    v87 = v180;
    sub_10004A160(v86, v180, &qword_1011BE538);
    swift_storeEnumTagMultiPayload(v87, v179, 1);
    v88 = sub_10062AA54();
    v89 = sub_10062AB74();
    v90 = (uint64_t)v182;
    _ConditionalContent<>.init(storage:)(v87, v178, v181, v88, v89);
    v91 = &qword_1011BE550;
    v92 = (uint64_t)v151;
    sub_10004A160(v90, (uint64_t)v151, &qword_1011BE550);
    v93 = v92;
    v94 = v149;
    v95 = 0;
    goto LABEL_12;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1006210A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;

  v40 = a1;
  v46 = a2;
  v4 = type metadata accessor for TintShapeStyle(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CircularProgressView.LineStyle(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for CircularProgressView(0);
  v10 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011BE5C8);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(float *)&v16 = a3;
  v39 = v16;
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v18 = Color.init(_:)(v17);
  _s27DownloadStatusIndicatorViewVMa(0);
  v19 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(&v47, v19);
  v20 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v9, enum case for CircularProgressView.LineStyle.round(_:), v42);
  LOBYTE(v47) = 0;
  v21 = CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(v39, v18, v9, v20);
  TintShapeStyle.init()(v21);
  v22 = &v15[*(int *)(v13 + 36)];
  v24 = v44;
  v23 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v22, v6, v45);
  v25 = v43;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v43);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  v26 = ScaledMetric.wrappedValue.getter(&v47, v19);
  v27 = v47;
  LOBYTE(v23) = static Edge.Set.all.getter(v26);
  v28 = EdgeInsets.init(_all:)(v27);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v35 = v46;
  sub_10004A160((uint64_t)v15, v46, &qword_1011BE5C8);
  v36 = v35 + *(int *)(sub_100007E8C(&qword_1011BE5D0) + 36);
  *(_BYTE *)v36 = v23;
  *(double *)(v36 + 8) = v28;
  *(_QWORD *)(v36 + 16) = v30;
  *(_QWORD *)(v36 + 24) = v32;
  *(_QWORD *)(v36 + 32) = v34;
  *(_BYTE *)(v36 + 40) = 0;
  return sub_10004FF60((uint64_t)v15, &qword_1011BE5C8);
}

uint64_t sub_100621374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v7 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIBackgroundConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v26 - v16;
  v18 = UICellConfigurationState.isFocused.getter(v15);
  if ((v18 & 1) != 0
    && (v19 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
        v20 = objc_msgSend(v19, "userInterfaceIdiom"),
        v19,
        v20 != (id)6))
  {
    static UIBackgroundConfiguration.clear()(v18);
    v21 = *(double *)&a3;
    if ((a5 & 1) != 0)
      v21 = 8.0;
    UIBackgroundConfiguration.cornerRadius.setter(v21);
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v23 = UIBackgroundConfiguration.strokeColor.setter(v22);
    v24 = UIBackgroundConfiguration.strokeWidth.setter(v23, 3.0);
    UIBackgroundConfiguration.strokeOutset.setter(v24, 5.0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v13, v10);
  }
  else
  {
    static UIBackgroundConfiguration.clear()(v18);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v17, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  UICollectionViewCell.backgroundConfiguration.setter(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t sub_100621550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10061D97C(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_10062155C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BDD28;
  if (!qword_1011BDD28)
  {
    v1 = sub_100044B54(&qword_1011BDD20);
    sub_10062A67C(&qword_1011BDD30, &qword_1011A2CC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011BDD28);
  }
  return result;
}

uint64_t sub_1006215D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011A9A10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (id *)(v0 + v2);
  v5 = type metadata accessor for PlaybackIntentDescriptor(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(v4, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
    else
    {

    }
    v8 = (id *)((char *)v4 + *(int *)(v5 + 28));
    if (v8[3])
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v8);
  }
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  return swift_deallocObject(v0, v3 + 16);
}

uint64_t sub_1006216D0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_100007E8C(&qword_1011A9A10) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10061DE0C(a1, v1 + v4, *(void (**)(void))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_100621728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

uint64_t sub_100621810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(__n128);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v15 - v10;
  v12(v9);
  sub_10081EB14((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_1000EA744((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

id sub_1006218E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _QWORD v5[6];

  v0 = swift_allocObject(&unk_1010D3548, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v5[4] = sub_100621A1C;
  v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100968BE4;
  v5[3] = &unk_1010D3560;
  v2 = _Block_copy(v5);
  swift_retain_n(v0, 2);
  v3 = objc_msgSend(v1, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v2, swift_release().n128_f64[0]);
  swift_release();
  _Block_release(v2);
  objc_msgSend(v3, "setPreferredMenuElementOrder:", 2, swift_release().n128_f64[0]);
  return v3;
}

uint64_t sub_1006219F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void *sub_100621A1C(uint64_t a1)
{
  uint64_t v1;

  return sub_10061F24C(a1, v1);
}

uint64_t sub_100621A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100621A34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100621A3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100621A4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10061ECBC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
}

void sub_100621A58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[14];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100EC5450;
    v10[2] = &unk_100EC5468;
    v10[3] = &unk_100EC5468;
    v10[4] = &unk_100EC5480;
    v10[5] = &unk_100EC5498;
    sub_1000E3A44(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      v10[7] = &unk_100EC5450;
      v10[8] = &unk_100EC5450;
      v10[9] = &unk_100EC54B0;
      v10[10] = &unk_100EC5468;
      v10[11] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[12] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001C17C8(319);
        if (v9 <= 0x3F)
        {
          v10[13] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 0, 14, v10, a1 + 40);
        }
      }
    }
  }
}

uint64_t *sub_100621B90(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[11];
    v39 = a3[12];
    v40 = (uint64_t *)((char *)a1 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (uint64_t *)((char *)a1 + v39);
    v44 = (uint64_t *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[13];
    v47 = a3[14];
    v48 = (uint64_t *)((char *)a1 + v46);
    v49 = (uint64_t *)((char *)a2 + v46);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    *(_OWORD *)((char *)a1 + v47) = *(_OWORD *)((char *)a2 + v47);
    v51 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    __dst = (char *)a1 + v51;
    v52 = (char *)a2 + v51;
    v53 = type metadata accessor for ContentRating(0);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v55(v52, 1, v53))
    {
      v56 = sub_100007E8C(&qword_1011B8D50);
      memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v53);
    }
    v57 = a3[17];
    v58 = a3[18];
    v59 = (uint64_t *)((char *)a1 + v57);
    v60 = (uint64_t *)((char *)a2 + v57);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = (uint64_t *)((char *)a1 + v58);
    v63 = (uint64_t *)((char *)a2 + v58);
    v64 = *v63;
    v65 = v63[1];
    v66 = a3[19];
    v67 = a3[20];
    v68 = *(uint64_t *)((char *)a2 + v66);
    *v62 = v64;
    v62[1] = v65;
    *(uint64_t *)((char *)a1 + v66) = v68;
    v69 = (uint64_t *)((char *)a1 + v67);
    v70 = (char *)a2 + v67;
    v71 = *(uint64_t *)((char *)a2 + v67);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v71)
    {
      v72 = *((_QWORD *)v70 + 1);
      *v69 = v71;
      v69[1] = v72;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)v70;
    }
    v73 = a3[22];
    *(uint64_t *)((char *)a1 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
    v74 = (uint64_t *)((char *)a1 + v73);
    v75 = (uint64_t *)((char *)a2 + v73);
    v76 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v75, v76) == 1)
    {
      v77 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v74, v75, v77);
      v78 = 1;
    }
    else
    {
      *v74 = *v75;
      swift_retain();
      v78 = 0;
    }
    swift_storeEnumTagMultiPayload(v74, v76, v78);
    v79 = a3[23];
    v80 = (uint64_t *)((char *)a1 + v79);
    v81 = (uint64_t *)((char *)a2 + v79);
    v82 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v81, v82) == 1)
    {
      v83 = type metadata accessor for UserInterfaceSizeClass(0);
      v84 = *(_QWORD *)(v83 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83))
      {
        v85 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v84 + 16))(v80, v81, v83);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
      }
      v86 = v80;
      v87 = v82;
      v88 = 1;
    }
    else
    {
      *v80 = *v81;
      swift_retain();
      v86 = v80;
      v87 = v82;
      v88 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v87, v88);
  }
  return a1;
}

void sub_100622104(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + a2[16];
  v14 = type metadata accessor for ContentRating(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + a2[20]))
    swift_release();
  v16 = a1 + a2[22];
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release();
  }
  v19 = a1 + a2[23];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v21);
  }
  else
  {
    swift_release();
  }
}

char *sub_1006223B4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int *v89;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[11];
  v37 = a3[12];
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = &a1[v37];
  v42 = &a2[v37];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = a3[13];
  v45 = a3[14];
  v46 = &a1[v44];
  v47 = &a2[v44];
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = v48;
  *(_OWORD *)&a1[v45] = *(_OWORD *)&a2[v45];
  v49 = a3[16];
  v89 = a3;
  a1[a3[15]] = a2[a3[15]];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = type metadata accessor for ContentRating(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54(v51, 1, v52))
  {
    v55 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v56 = v89[17];
  v57 = v89[18];
  v58 = &a1[v56];
  v59 = &a2[v56];
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *((_QWORD *)v58 + 1) = v60;
  v61 = &a1[v57];
  v62 = &a2[v57];
  v63 = *(_QWORD *)v62;
  v64 = *((_QWORD *)v62 + 1);
  v65 = v89[19];
  v66 = v89[20];
  v67 = *(_QWORD *)&a2[v65];
  *(_QWORD *)v61 = v63;
  *((_QWORD *)v61 + 1) = v64;
  *(_QWORD *)&a1[v65] = v67;
  v68 = &a1[v66];
  v69 = &a2[v66];
  v70 = *(_QWORD *)&a2[v66];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v70)
  {
    v71 = *((_QWORD *)v69 + 1);
    *(_QWORD *)v68 = v70;
    *((_QWORD *)v68 + 1) = v71;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v68 = *(_OWORD *)v69;
  }
  v72 = v89[22];
  *(_QWORD *)&a1[v89[21]] = *(_QWORD *)&a2[v89[21]];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
  {
    v76 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v74, v76);
    v77 = 1;
  }
  else
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    swift_retain();
    v77 = 0;
  }
  swift_storeEnumTagMultiPayload(v73, v75, v77);
  v78 = v89[23];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v80, v81) == 1)
  {
    v82 = type metadata accessor for UserInterfaceSizeClass(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82))
    {
      v84 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v80, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
    }
    v85 = v79;
    v86 = v81;
    v87 = 1;
  }
  else
  {
    *(_QWORD *)v79 = *(_QWORD *)v80;
    swift_retain();
    v85 = v79;
    v86 = v81;
    v87 = 0;
  }
  swift_storeEnumTagMultiPayload(v85, v86, v87);
  return a1;
}

uint64_t sub_1006228FC(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = a3[11];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  *v63 = *(_QWORD *)v64;
  v63[1] = *((_QWORD *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = a3[12];
  v66 = (_QWORD *)(a1 + v65);
  v67 = &a2[v65];
  *v66 = *(_QWORD *)v67;
  v66[1] = *((_QWORD *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v68 = a3[13];
  v69 = (_QWORD *)(a1 + v68);
  v70 = &a2[v68];
  *v69 = *(_QWORD *)v70;
  v69[1] = *((_QWORD *)v70 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v71 = a3[14];
  v72 = (_QWORD *)(a1 + v71);
  v73 = &a2[v71];
  *v72 = *(_QWORD *)v73;
  v72[1] = *((_QWORD *)v73 + 1);
  *(_BYTE *)(a1 + a3[15]) = a2[a3[15]];
  v74 = a3[16];
  v75 = (void *)(a1 + v74);
  v76 = &a2[v74];
  v77 = type metadata accessor for ContentRating(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
  v80 = v79(v75, 1, v77);
  v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v81)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
LABEL_32:
    v82 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
LABEL_33:
  v83 = a3[17];
  v84 = (_QWORD *)(a1 + v83);
  v85 = &a2[v83];
  *v84 = *(_QWORD *)v85;
  v84[1] = *((_QWORD *)v85 + 1);
  swift_retain();
  swift_release();
  v86 = a3[18];
  v87 = (_QWORD *)(a1 + v86);
  v88 = &a2[v86];
  *v87 = *(_QWORD *)v88;
  v87[1] = *((_QWORD *)v88 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)&a2[a3[19]];
  swift_retain();
  swift_release();
  v89 = a3[20];
  v90 = (_QWORD *)(a1 + v89);
  v91 = &a2[v89];
  v92 = *(_QWORD *)(a1 + v89);
  v93 = *(_QWORD *)&a2[v89];
  if (v92)
  {
    if (v93)
    {
      v94 = *((_QWORD *)v91 + 1);
      *v90 = v93;
      v90[1] = v94;
      swift_retain();
      swift_release();
      goto LABEL_40;
    }
    swift_release();
  }
  else if (v93)
  {
    v95 = *((_QWORD *)v91 + 1);
    *v90 = v93;
    v90[1] = v95;
    swift_retain();
    goto LABEL_40;
  }
  *(_OWORD *)v90 = *(_OWORD *)v91;
LABEL_40:
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)&a2[a3[21]];
  if ((char *)a1 != a2)
  {
    v96 = a3[22];
    v97 = (_QWORD *)(a1 + v96);
    v98 = &a2[v96];
    sub_10004FF60(a1 + v96, (uint64_t *)&unk_1011ACE40);
    v99 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v98, v99) == 1)
    {
      v100 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v97, v98, v100);
      v101 = 1;
    }
    else
    {
      *v97 = *(_QWORD *)v98;
      swift_retain();
      v101 = 0;
    }
    swift_storeEnumTagMultiPayload(v97, v99, v101);
    v102 = a3[23];
    v103 = (_QWORD *)(a1 + v102);
    v104 = &a2[v102];
    sub_10004FF60(a1 + v102, (uint64_t *)&unk_1011A3ED0);
    v105 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v104, v105) == 1)
    {
      v106 = type metadata accessor for UserInterfaceSizeClass(0);
      v107 = *(_QWORD *)(v106 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v104, 1, v106))
      {
        v108 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, char *, uint64_t))(v107 + 16))(v103, v104, v106);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v103, 0, 1, v106);
      }
      v109 = v103;
      v110 = v105;
      v111 = 1;
    }
    else
    {
      *v103 = *(_QWORD *)v104;
      swift_retain();
      v109 = v103;
      v110 = v105;
      v111 = 0;
    }
    swift_storeEnumTagMultiPayload(v109, v110, v111);
  }
  return a1;
}

char *sub_10062315C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  v37 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v37] = *(_OWORD *)&a2[v37];
  v38 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = type metadata accessor for ContentRating(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = a3[18];
  *(_OWORD *)&a1[a3[17]] = *(_OWORD *)&a2[a3[17]];
  *(_OWORD *)&a1[v44] = *(_OWORD *)&a2[v44];
  v45 = a3[20];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)v47;
  if (*(_QWORD *)v47)
  {
    v49 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  v50 = a3[22];
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
  {
    v54 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
    swift_storeEnumTagMultiPayload(v51, v53, 1);
  }
  else
  {
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  v55 = a3[23];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v57, v58) == 1)
  {
    v59 = type metadata accessor for UserInterfaceSizeClass(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59))
    {
      v61 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v56, v57, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v59);
    }
    swift_storeEnumTagMultiPayload(v56, v58, 1);
  }
  else
  {
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10062363C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(void *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_BYTE *)(v55 + 16) = v56[16];
  v57 = a3[11];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[12];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[13];
  v68 = (_QWORD *)(a1 + v67);
  v69 = &a2[v67];
  v71 = *(_QWORD *)v69;
  v70 = *((_QWORD *)v69 + 1);
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  *(_BYTE *)(a1 + v72) = a2[v72];
  v73 = a3[16];
  v74 = (void *)(a1 + v73);
  v75 = &a2[v73];
  v76 = type metadata accessor for ContentRating(0);
  v77 = *(_QWORD *)(v76 - 8);
  v78 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 48);
  v79 = v78(v74, 1, v76);
  v80 = v78(v75, 1, v76);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v80)
  {
    (*(void (**)(void *, uint64_t))(v77 + 8))(v74, v76);
LABEL_32:
    v81 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v77 + 40))(v74, v75, v76);
LABEL_33:
  v82 = a3[17];
  v83 = (_QWORD *)(a1 + v82);
  v84 = &a2[v82];
  v86 = *(_QWORD *)v84;
  v85 = *((_QWORD *)v84 + 1);
  *v83 = v86;
  v83[1] = v85;
  swift_release();
  v87 = a3[18];
  v88 = (_QWORD *)(a1 + v87);
  v89 = &a2[v87];
  v91 = *(_QWORD *)v89;
  v90 = *((_QWORD *)v89 + 1);
  *v88 = v91;
  v88[1] = v90;
  swift_release();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)&a2[a3[19]];
  swift_release();
  v92 = a3[20];
  v93 = (_QWORD *)(a1 + v92);
  v94 = &a2[v92];
  v95 = *(_QWORD *)(a1 + v92);
  v96 = *(_QWORD *)&a2[v92];
  if (v95)
  {
    if (v96)
    {
      v97 = *((_QWORD *)v94 + 1);
      *v93 = v96;
      v93[1] = v97;
      swift_release();
      goto LABEL_40;
    }
    swift_release();
  }
  else if (v96)
  {
    v98 = *((_QWORD *)v94 + 1);
    *v93 = v96;
    v93[1] = v98;
    goto LABEL_40;
  }
  *(_OWORD *)v93 = *(_OWORD *)v94;
LABEL_40:
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)&a2[a3[21]];
  if ((char *)a1 != a2)
  {
    v99 = a3[22];
    v100 = (void *)(a1 + v99);
    v101 = &a2[v99];
    sub_10004FF60(a1 + v99, (uint64_t *)&unk_1011ACE40);
    v102 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v100, v101, v103);
      swift_storeEnumTagMultiPayload(v100, v102, 1);
    }
    else
    {
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    v104 = a3[23];
    v105 = (void *)(a1 + v104);
    v106 = &a2[v104];
    sub_10004FF60(a1 + v104, (uint64_t *)&unk_1011A3ED0);
    v107 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v106, v107) == 1)
    {
      v108 = type metadata accessor for UserInterfaceSizeClass(0);
      v109 = *(_QWORD *)(v108 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v106, 1, v108))
      {
        v110 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v109 + 32))(v105, v106, v108);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v105, 0, 1, v108);
      }
      swift_storeEnumTagMultiPayload(v105, v107, 1);
    }
    else
    {
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100623E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100623E30);
}

uint64_t sub_100623E30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[16];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[22];
      }
      else
      {
        v8 = sub_100007E8C(&qword_1011A48A0);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[23];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[11] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100623F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100623F3C);
}

uint64_t sub_100623F3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[11] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[16];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[22];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011A48A0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[23];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s9TrackCellVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s9TrackCellVMn);
}

char *sub_100624044(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v8;
    v10 = (void *)*((_QWORD *)a2 + 4);
    v9 = *((_QWORD *)a2 + 5);
    v11 = a3[8];
    v32 = &a1[v11];
    v12 = &a2[v11];
    *((_QWORD *)a1 + 4) = v10;
    *((_QWORD *)a1 + 5) = v9;
    v13 = type metadata accessor for SymbolRenderingMode(0);
    v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v10;
    v16 = swift_retain();
    v14(v32, v12, v13, v16);
    v17 = a3[9];
    v18 = &v4[v17];
    v19 = &a2[v17];
    v20 = sub_100007E8C(qword_1011C9550);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21(&v4[a3[10]], &a2[a3[10]], v20);
    v22 = a3[11];
    v23 = &v4[v22];
    v24 = &a2[v22];
    v25 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      swift_retain();
      v27 = v23;
      v28 = v25;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return v4;
}

double sub_1006241EC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v4 = a1 + a2[8];
  v5 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[9];
  v7 = sub_100007E8C(qword_1011C9550);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[10], v7);
  v9 = a1 + a2[11];
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_1006242F4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  id v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  v9 = (void *)*((_QWORD *)a2 + 4);
  v8 = *((_QWORD *)a2 + 5);
  v10 = a3[8];
  v28 = &a1[v10];
  v11 = &a2[v10];
  *((_QWORD *)a1 + 4) = v9;
  *((_QWORD *)a1 + 5) = v8;
  v12 = type metadata accessor for SymbolRenderingMode(0);
  v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v9;
  v15 = swift_retain();
  v13(v28, v11, v12, v15);
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C(qword_1011C9550);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  v21 = a3[11];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = 1;
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    swift_retain();
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v22, v24, v26);
  return a1;
}

char *sub_100624468(char *a1, char *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)*((_QWORD *)a2 + 4);
  v7 = (void *)*((_QWORD *)a1 + 4);
  *((_QWORD *)a1 + 4) = v6;
  v8 = v6;

  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_retain();
  swift_release();
  v9 = a3[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[9];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100007E8C(qword_1011C9550);
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(&a1[a3[10]], &a2[a3[10]], v16);
  if (a1 != a2)
  {
    v18 = a3[11];
    v19 = &a1[v18];
    v20 = &a2[v18];
    sub_10004FF60((uint64_t)&a1[v18], (uint64_t *)&unk_1011ACE40);
    v21 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

char *sub_100624614(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v7 = a3[8];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_100007E8C(qword_1011C9550);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(&a1[a3[10]], &a2[a3[10]], v14);
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

char *sub_100624750(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)*((_QWORD *)a1 + 4);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);

  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_release();
  v9 = a3[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[9];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100007E8C(qword_1011C9550);
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(&a1[a3[10]], &a2[a3[10]], v16);
  if (a1 != a2)
  {
    v18 = a3[11];
    v19 = &a1[v18];
    v20 = &a2[v18];
    sub_10004FF60((uint64_t)&a1[v18], (uint64_t *)&unk_1011ACE40);
    v21 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006248D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006248E0);
}

uint64_t sub_1006248E0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SymbolRenderingMode(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      v12 = sub_100007E8C(qword_1011C9550);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011C6890);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1006249AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006249B8);
}

uint64_t sub_1006249B8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SymbolRenderingMode(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      v12 = sub_100007E8C(qword_1011C9550);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011C6890);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s8TextCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDE20, (uint64_t)&_s8TextCellVMn);
}

void sub_100624A94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[0] = &unk_100EC5468;
  v8[1] = &unk_100EC5450;
  v8[2] = "\b";
  v8[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2 = type metadata accessor for SymbolRenderingMode(319);
  if (v3 <= 0x3F)
  {
    v8[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 8, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_100624B78(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  __int128 v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  id v60;
  void *v61;
  __int128 v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  id v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[5];
    v39 = a3[6];
    v40 = (uint64_t *)((char *)a1 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (uint64_t *)((char *)a1 + v39);
    v44 = (uint64_t *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for ContentRating(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      v52 = sub_100007E8C(&qword_1011B8D50);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v53 = a3[9];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = *(void **)((char *)a2 + v53);
    *(_QWORD *)v54 = v56;
    v57 = *((_OWORD *)v55 + 2);
    *((_OWORD *)v54 + 2) = v57;
    v58 = v57;
    v59 = **(void (***)(char *, char *, uint64_t))(v57 - 8);
    v60 = v56;
    v59(v54 + 8, v55 + 8, v58);
    v61 = (void *)*((_QWORD *)v55 + 6);
    *((_QWORD *)v54 + 6) = v61;
    v62 = *((_OWORD *)v55 + 5);
    *((_OWORD *)v54 + 5) = v62;
    v63 = v62;
    v64 = **(void (***)(char *, char *, uint64_t))(v62 - 8);
    v65 = v61;
    v64(v54 + 56, v55 + 56, v63);
    v54[96] = v55[96];
    v66 = a3[10];
    v67 = (uint64_t *)((char *)a1 + v66);
    v68 = (uint64_t *)((char *)a2 + v66);
    if (*v68)
    {
      v69 = v68[1];
      *v67 = *v68;
      v67[1] = v69;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v67 = *(_OWORD *)v68;
    }
    v70 = a3[11];
    v71 = (uint64_t *)((char *)a1 + v70);
    v72 = (uint64_t *)((char *)a2 + v70);
    v73 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
    {
      v74 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v71, v72, v74);
      v75 = v71;
      v76 = v73;
      v77 = 1;
    }
    else
    {
      *v71 = *v72;
      swift_retain();
      v75 = v71;
      v76 = v73;
      v77 = 0;
    }
    swift_storeEnumTagMultiPayload(v75, v76, v77);
  }
  return a1;
}

double sub_100625028(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + a2[8];
  v14 = type metadata accessor for ContentRating(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = a1 + a2[9];

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v16 + 8));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v16 + 56));
  if (*(_QWORD *)(a1 + a2[10]))
    swift_release();
  v17 = a1 + a2[11];
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_100625244(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  __int128 v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  id v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = a3[6];
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = &a1[v37];
  v42 = &a2[v37];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for ContentRating(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49(v46, 1, v47))
  {
    v50 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v51 = a3[9];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *(void **)&a2[v51];
  *(_QWORD *)v52 = v54;
  v55 = *((_OWORD *)v53 + 2);
  *((_OWORD *)v52 + 2) = v55;
  v56 = v55;
  v57 = **(void (***)(char *, char *, uint64_t))(v55 - 8);
  v58 = v54;
  v57(v52 + 8, v53 + 8, v56);
  v59 = (void *)*((_QWORD *)v53 + 6);
  *((_QWORD *)v52 + 6) = v59;
  v60 = *((_OWORD *)v53 + 5);
  *((_OWORD *)v52 + 5) = v60;
  v61 = v60;
  v62 = **(void (***)(char *, char *, uint64_t))(v60 - 8);
  v63 = v59;
  v62(v52 + 56, v53 + 56, v61);
  v52[96] = v53[96];
  v64 = a3[10];
  v65 = &a1[v64];
  v66 = &a2[v64];
  if (*(_QWORD *)v66)
  {
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v65 = *(_OWORD *)v66;
  }
  v68 = a3[11];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v70, v71) == 1)
  {
    v72 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v69, v70, v72);
    v73 = v69;
    v74 = v71;
    v75 = 1;
  }
  else
  {
    *(_QWORD *)v69 = *(_QWORD *)v70;
    swift_retain();
    v73 = v69;
    v74 = v71;
    v75 = 0;
  }
  swift_storeEnumTagMultiPayload(v73, v74, v75);
  return a1;
}

uint64_t sub_1006256C8(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(void *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = a3[5];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  *v63 = *(_QWORD *)v64;
  v63[1] = *((_QWORD *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = a3[6];
  v66 = (_QWORD *)(a1 + v65);
  v67 = &a2[v65];
  *v66 = *(_QWORD *)v67;
  v66[1] = *((_QWORD *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = a2[a3[7]];
  v68 = a3[8];
  v69 = (void *)(a1 + v68);
  v70 = &a2[v68];
  v71 = type metadata accessor for ContentRating(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v75)
  {
    (*(void (**)(void *, uint64_t))(v72 + 8))(v69, v71);
LABEL_32:
    v76 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
LABEL_33:
  v77 = a3[9];
  v78 = a1 + v77;
  v79 = &a2[v77];
  v80 = *(void **)&a2[v77];
  v81 = *(void **)v78;
  *(_QWORD *)v78 = v80;
  v82 = v80;

  sub_100625DD8((_QWORD *)(v78 + 8), (_QWORD *)v79 + 1);
  v83 = (void *)*((_QWORD *)v79 + 6);
  v84 = *(void **)(v78 + 48);
  *(_QWORD *)(v78 + 48) = v83;
  v85 = v83;

  sub_100625DD8((_QWORD *)(v78 + 56), (_QWORD *)v79 + 7);
  *(_BYTE *)(v78 + 96) = v79[96];
  v86 = a3[10];
  v87 = (_QWORD *)(a1 + v86);
  v88 = &a2[v86];
  v89 = *(_QWORD *)(a1 + v86);
  v90 = *(_QWORD *)&a2[v86];
  if (v89)
  {
    if (v90)
    {
      v91 = *((_QWORD *)v88 + 1);
      *v87 = v90;
      v87[1] = v91;
      swift_retain();
      swift_release();
      goto LABEL_40;
    }
    swift_release();
  }
  else if (v90)
  {
    v92 = *((_QWORD *)v88 + 1);
    *v87 = v90;
    v87[1] = v92;
    swift_retain();
    goto LABEL_40;
  }
  *(_OWORD *)v87 = *(_OWORD *)v88;
LABEL_40:
  if ((char *)a1 != a2)
  {
    v93 = a3[11];
    v94 = (_QWORD *)(a1 + v93);
    v95 = &a2[v93];
    sub_10004FF60(a1 + v93, (uint64_t *)&unk_1011ACE40);
    v96 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v95, v96) == 1)
    {
      v97 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v94, v95, v97);
      v98 = v94;
      v99 = v96;
      v100 = 1;
    }
    else
    {
      *v94 = *(_QWORD *)v95;
      swift_retain();
      v98 = v94;
      v99 = v96;
      v100 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v99, v100);
  }
  return a1;
}

_QWORD *sub_100625DD8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

char *sub_100625F40(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  v37 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = type metadata accessor for ContentRating(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v43 = a3[9];
  v44 = a3[10];
  v45 = &a1[v43];
  v46 = &a2[v43];
  v45[96] = v46[96];
  v47 = *((_OWORD *)v46 + 5);
  *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
  *((_OWORD *)v45 + 5) = v47;
  v48 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v48;
  v49 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v49;
  v50 = &a1[v44];
  v51 = &a2[v44];
  v52 = *(_QWORD *)v51;
  if (*(_QWORD *)v51)
  {
    v53 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = v52;
    *((_QWORD *)v50 + 1) = v53;
  }
  else
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  v54 = a3[11];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v56, v57) == 1)
  {
    v58 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v55, v56, v58);
    swift_storeEnumTagMultiPayload(v55, v57, 1);
  }
  else
  {
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100626340(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_BYTE *)(v55 + 16) = v56[16];
  v57 = a3[5];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[6];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = a2[a3[7]];
  v68 = (void *)(a1 + v67);
  v69 = &a2[v67];
  v70 = type metadata accessor for ContentRating(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(void *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v74)
  {
    (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
LABEL_32:
    v75 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v71 + 40))(v68, v69, v70);
LABEL_33:
  v76 = a3[9];
  v77 = a1 + v76;
  v78 = &a2[v76];
  v79 = *(void **)(a1 + v76);
  *(_QWORD *)(a1 + v76) = *(_QWORD *)&a2[v76];

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v77 + 8));
  *(_OWORD *)(v77 + 8) = *(_OWORD *)(v78 + 8);
  *(_OWORD *)(v77 + 24) = *(_OWORD *)(v78 + 24);
  v80 = *((_QWORD *)v78 + 6);
  v81 = *(void **)(v77 + 48);
  *(_QWORD *)(v77 + 40) = *((_QWORD *)v78 + 5);
  *(_QWORD *)(v77 + 48) = v80;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v77 + 56));
  *(_QWORD *)(v77 + 88) = *((_QWORD *)v78 + 11);
  *(_OWORD *)(v77 + 72) = *(_OWORD *)(v78 + 72);
  *(_OWORD *)(v77 + 56) = *(_OWORD *)(v78 + 56);
  *(_BYTE *)(v77 + 96) = v78[96];
  v82 = a3[10];
  v83 = (_QWORD *)(a1 + v82);
  v84 = &a2[v82];
  v85 = *(_QWORD *)(a1 + v82);
  v86 = *(_QWORD *)&a2[v82];
  if (v85)
  {
    if (v86)
    {
      v87 = *((_QWORD *)v84 + 1);
      *v83 = v86;
      v83[1] = v87;
      swift_release();
      goto LABEL_40;
    }
    swift_release();
  }
  else if (v86)
  {
    v88 = *((_QWORD *)v84 + 1);
    *v83 = v86;
    v83[1] = v88;
    goto LABEL_40;
  }
  *(_OWORD *)v83 = *(_OWORD *)v84;
LABEL_40:
  if ((char *)a1 != a2)
  {
    v89 = a3[11];
    v90 = (void *)(a1 + v89);
    v91 = &a2[v89];
    sub_10004FF60(a1 + v89, (uint64_t *)&unk_1011ACE40);
    v92 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v91, v92) == 1)
    {
      v93 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v90, v91, v93);
      swift_storeEnumTagMultiPayload(v90, v92, 1);
    }
    else
    {
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100626A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100626A40);
}

uint64_t sub_100626A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v8 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[11];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100626B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100626B24);
}

uint64_t sub_100626B24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[11];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s8ListCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDEC8, (uint64_t)&_s8ListCellVMn);
}

void sub_100626C0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EC5450;
    v8[2] = &unk_100EC5468;
    v8[3] = &unk_100EC5498;
    sub_1000E3A44(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v8[5] = "a";
      v8[6] = &unk_100EC5468;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 8, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_100626D04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v38 = a3[5];
    v39 = a3[6];
    v40 = *(uint64_t *)((char *)a2 + v38);
    v36[16] = v37[16];
    *(uint64_t *)((char *)a1 + v38) = v40;
    v41 = (uint64_t *)((char *)a1 + v39);
    v42 = *(uint64_t *)((char *)a2 + v39 + 8);
    *v41 = *(uint64_t *)((char *)a2 + v39);
    v41[1] = v42;
    v43 = a3[7];
    v44 = a3[8];
    v45 = (uint64_t *)((char *)a1 + v43);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = *v46;
    v48 = v46[1];
    LOBYTE(v46) = *((_BYTE *)a2 + v44);
    *v45 = v47;
    v45[1] = v48;
    *((_BYTE *)a1 + v44) = (_BYTE)v46;
    v49 = a3[9];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    v52 = type metadata accessor for ContentRating(0);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54(v51, 1, v52))
    {
      v55 = sub_100007E8C(&qword_1011B8D50);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v56 = a3[10];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    v59 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v57, v58, v60);
      v61 = v57;
      v62 = v59;
      v63 = 1;
    }
    else
    {
      *v57 = *v58;
      swift_retain();
      v61 = v57;
      v62 = v59;
      v63 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v62, v63);
  }
  return a1;
}

double sub_100627110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + *(int *)(a2 + 36);
  v14 = type metadata accessor for ContentRating(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = a1 + *(int *)(a2 + 40);
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_1006272EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v36 = a3[5];
  v37 = a3[6];
  v38 = *(_QWORD *)&a2[v36];
  v34[16] = v35[16];
  *(_QWORD *)&a1[v36] = v38;
  v39 = &a1[v37];
  v40 = *(_QWORD *)&a2[v37 + 8];
  *(_QWORD *)v39 = *(_QWORD *)&a2[v37];
  *((_QWORD *)v39 + 1) = v40;
  v41 = a3[7];
  v42 = a3[8];
  v43 = &a1[v41];
  v44 = &a2[v41];
  v45 = *(_QWORD *)v44;
  v46 = *((_QWORD *)v44 + 1);
  LOBYTE(v44) = a2[v42];
  *(_QWORD *)v43 = v45;
  *((_QWORD *)v43 + 1) = v46;
  a1[v42] = (char)v44;
  v47 = a3[9];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = type metadata accessor for ContentRating(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52(v49, 1, v50))
  {
    v53 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  v54 = a3[10];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v56, v57) == 1)
  {
    v58 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
    v59 = v55;
    v60 = v57;
    v61 = 1;
  }
  else
  {
    *(_QWORD *)v55 = *(_QWORD *)v56;
    swift_retain();
    v59 = v55;
    v60 = v57;
    v61 = 0;
  }
  swift_storeEnumTagMultiPayload(v59, v60, v61);
  return a1;
}

uint64_t sub_1006276CC(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(void *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)&a2[a3[5]];
  v62 = a3[6];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  *v63 = *(_QWORD *)v64;
  v63[1] = *((_QWORD *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = a3[7];
  v66 = (_QWORD *)(a1 + v65);
  v67 = &a2[v65];
  *v66 = *(_QWORD *)v67;
  v66[1] = *((_QWORD *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = a2[a3[8]];
  v68 = a3[9];
  v69 = (void *)(a1 + v68);
  v70 = &a2[v68];
  v71 = type metadata accessor for ContentRating(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
      if ((char *)a1 == a2)
        return a1;
      goto LABEL_34;
    }
LABEL_33:
    v76 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    if ((char *)a1 == a2)
      return a1;
    goto LABEL_34;
  }
  if (v75)
  {
    (*(void (**)(void *, uint64_t))(v72 + 8))(v69, v71);
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
  if ((char *)a1 == a2)
    return a1;
LABEL_34:
  v77 = a3[10];
  v78 = (_QWORD *)(a1 + v77);
  v79 = &a2[v77];
  sub_10004FF60(a1 + v77, (uint64_t *)&unk_1011ACE40);
  v80 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v79, v80) == 1)
  {
    v81 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
    v82 = v78;
    v83 = v80;
    v84 = 1;
  }
  else
  {
    *v78 = *(_QWORD *)v79;
    swift_retain();
    v82 = v78;
    v83 = v80;
    v84 = 0;
  }
  swift_storeEnumTagMultiPayload(v82, v83, v84);
  return a1;
}

char *sub_100627D48(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  v37 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v37] = a2[v37];
  v38 = a3[9];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = type metadata accessor for ContentRating(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = a3[10];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
  {
    v48 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
    swift_storeEnumTagMultiPayload(v45, v47, 1);
  }
  else
  {
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100628104(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_BYTE *)(v55 + 16) = v56[16];
  v57 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)&a2[a3[5]];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[7];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = a2[a3[8]];
  v68 = (void *)(a1 + v67);
  v69 = &a2[v67];
  v70 = type metadata accessor for ContentRating(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(void *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      if ((char *)a1 == a2)
        return a1;
      goto LABEL_34;
    }
LABEL_33:
    v75 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    if ((char *)a1 == a2)
      return a1;
    goto LABEL_34;
  }
  if (v74)
  {
    (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v71 + 40))(v68, v69, v70);
  if ((char *)a1 == a2)
    return a1;
LABEL_34:
  v76 = a3[10];
  v77 = (void *)(a1 + v76);
  v78 = &a2[v76];
  sub_10004FF60(a1 + v76, (uint64_t *)&unk_1011ACE40);
  v79 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v78, v79) == 1)
  {
    v80 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v77, v78, v80);
    swift_storeEnumTagMultiPayload(v77, v79, 1);
  }
  else
  {
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100628754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100628760);
}

uint64_t sub_100628760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[9];
    }
    else
    {
      v8 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[10];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100628838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100628844);
}

uint64_t sub_100628844(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011B8D50);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[9];
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[10];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s8GridCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BDF70, (uint64_t)&_s8GridCellVMn);
}

void sub_10062892C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[2] = &unk_100EC5450;
    v8[3] = &unk_100EC5468;
    v8[4] = &unk_100EC5498;
    sub_1000E3A44(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v8[5] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[6] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_100628A28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011BDFC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_100007E8C(qword_1011C9550);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v14);
  }
  return a1;
}

uint64_t sub_100628B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_100007E8C(qword_1011C9550);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 24), v7);
}

char *sub_100628C00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BDFC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(qword_1011C9550);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  return a1;
}

char *sub_100628D00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  v6 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011BDFC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100007E8C(qword_1011C9550);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v15);
  return a1;
}

char *sub_100628E44(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BDFC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(qword_1011C9550);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  return a1;
}

char *sub_100628F44(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  v6 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011BDFC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100007E8C(qword_1011C9550);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v15);
  return a1;
}

uint64_t sub_100629088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100629094);
}

uint64_t sub_100629094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C(&qword_1011BDFC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100629110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062911C);
}

uint64_t sub_10062911C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C(&qword_1011BDFC0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(qword_1011C9550);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s27DownloadStatusIndicatorViewVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BE020, (uint64_t)&_s27DownloadStatusIndicatorViewVMn);
}

void sub_1006291B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1000E3A44(319, (unint64_t *)&unk_1011BE030, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 3, &v6, a1 + 16);
    }
  }
}

uint64_t sub_100629250(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA772C, 1);
}

uint64_t sub_100629260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100409780(a1, a2, a3, (uint64_t)&unk_100FA76EC);
}

uint64_t sub_10062926C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA76C4, 1);
}

uint64_t sub_10062927C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA769C, 1);
}

uint64_t sub_10062928C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7674, 1);
}

unint64_t sub_1006292AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE0A8;
  if (!qword_1011BE0A8)
  {
    v1 = sub_100044B54(&qword_1011BE078);
    sub_100629330();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE0A8);
  }
  return result;
}

unint64_t sub_100629330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE0B0;
  if (!qword_1011BE0B0)
  {
    v1 = sub_100044B54(&qword_1011BE070);
    sub_100049F28(&qword_1011BE0B8, &qword_1011BE068, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE0B0);
  }
  return result;
}

unint64_t sub_1006293CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE0C0;
  if (!qword_1011BE0C0)
  {
    v1 = sub_100044B54(&qword_1011BE088);
    v2[0] = sub_100044B54(&qword_1011BE078);
    v2[1] = sub_1006292AC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE0C0);
  }
  return result;
}

unint64_t sub_100629478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE0C8;
  if (!qword_1011BE0C8)
  {
    v1 = sub_100044B54(&qword_1011BE090);
    sub_1006293CC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE0C8);
  }
  return result;
}

unint64_t sub_1006294FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE118;
  if (!qword_1011BE118)
  {
    v1 = sub_100044B54(&qword_1011BE0F8);
    sub_1004D9D80(&qword_1011BE120, &qword_1011BE128);
    sub_100049F28(&qword_1011BE130, &qword_1011BE0F0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE118);
  }
  return result;
}

uint64_t sub_1006295A0()
{
  return sub_10005610C(&qword_1011BE140, &qword_1011BE0D8, (void (*)(void))sub_1006295C4);
}

unint64_t sub_1006295C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE148;
  if (!qword_1011BE148)
  {
    v1 = sub_100044B54(&qword_1011C6950);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE148);
  }
  return result;
}

unint64_t sub_10062966C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE188;
  if (!qword_1011BE188)
  {
    v1 = sub_100044B54(&qword_1011A2D98);
    sub_100049F28(&qword_1011BE190, &qword_1011A2D90, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE188);
  }
  return result;
}

unint64_t sub_1006296F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE198;
  if (!qword_1011BE198)
  {
    v1 = sub_100044B54(&qword_1011BE160);
    v2[0] = sub_100044B54(&qword_1011A2D98);
    v2[1] = sub_10062966C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE198);
  }
  return result;
}

unint64_t sub_10062979C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE1A0;
  if (!qword_1011BE1A0)
  {
    v1 = sub_100044B54(&qword_1011BE168);
    sub_1006296F0();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE1A0);
  }
  return result;
}

uint64_t sub_100629820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10061540C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t _s17ContextMenuButtonVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BE630, (uint64_t)&_s17ContextMenuButtonVMn);
}

unint64_t sub_10062983C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE1A8;
  if (!qword_1011BE1A8)
  {
    v1 = sub_100044B54(&qword_1011BE170);
    sub_10062979C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE1A8);
  }
  return result;
}

unint64_t sub_1006298C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE1E8;
  if (!qword_1011BE1E8)
  {
    v1 = sub_100044B54(&qword_1011BE1C8);
    sub_10005610C((unint64_t *)&qword_1011C6980, (uint64_t *)&unk_1011C6970, (void (*)(void))sub_100238A3C);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE1E8);
  }
  return result;
}

unint64_t sub_100629964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE248;
  if (!qword_1011BE248)
  {
    v1 = sub_100044B54(&qword_1011BE230);
    sub_1006299E8();
    sub_100049F28(&qword_1011BE258, &qword_1011BE260, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE248);
  }
  return result;
}

unint64_t sub_1006299E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE250;
  if (!qword_1011BE250)
  {
    v1 = sub_100044B54(&qword_1011BE228);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE250);
  }
  return result;
}

unint64_t sub_100629A90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE270;
  if (!qword_1011BE270)
  {
    v1 = sub_100044B54(&qword_1011A2DA0);
    v2[0] = sub_100044B54(&qword_1011BE230);
    v2[1] = sub_100629964();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bodyHeadOutdent(_:)>>, 1);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE270);
  }
  return result;
}

unint64_t sub_100629B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE288;
  if (!qword_1011BE288)
  {
    v1 = sub_100044B54(&qword_1011BE280);
    sub_1004D9D80((unint64_t *)&qword_1011A0658, &qword_1011C9470);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE288);
  }
  return result;
}

uint64_t _s13FavoriteBadgeVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BE748, (uint64_t)&_s13FavoriteBadgeVMn);
}

unint64_t sub_100629BF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE2C0;
  if (!qword_1011BE2C0)
  {
    v1 = sub_100044B54(&qword_1011BE2A0);
    v2[0] = sub_100044B54(&qword_1011BE290);
    v2[1] = sub_100049F28(&qword_1011BE2B8, &qword_1011BE290, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE2C0);
  }
  return result;
}

uint64_t sub_100629CC8()
{
  return sub_10005610C(&qword_1011BE320, &qword_1011BE2E8, (void (*)(void))sub_100629CEC);
}

unint64_t sub_100629CEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE328;
  if (!qword_1011BE328)
  {
    v1 = sub_100044B54(&qword_1011BE2E0);
    sub_100629D70();
    sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE328);
  }
  return result;
}

unint64_t sub_100629D70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE330;
  if (!qword_1011BE330)
  {
    v1 = sub_100044B54(&qword_1011BE2D8);
    sub_100629E14((unint64_t *)&qword_1011BF7F0, &qword_1011AC700, &qword_1011A0FB0, &qword_1011A43F0);
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE330);
  }
  return result;
}

uint64_t sub_100629E14(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s9TrackCellV13TrailingIconsVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s9TrackCellV13TrailingIconsVMn);
}

uint64_t sub_100629EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100615ED0(v1[5], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100629EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_10061B91C(v1[5], v1[2], v1[3], v1[4], a1);
}

unint64_t sub_100629EB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE3D0;
  if (!qword_1011BE3D0)
  {
    v1 = sub_100044B54(&qword_1011BE398);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100049F28(&qword_1011BE3D8, &qword_1011BE390, (uint64_t)&unk_100EB7188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE3D0);
  }
  return result;
}

unint64_t sub_100629F64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011BE3E0;
  if (!qword_1011BE3E0)
  {
    v1 = sub_100044B54(&qword_1011BE3B0);
    v2 = sub_100044B54(&qword_1011BE3A0);
    v4 = sub_100044B54(&qword_1011BE398);
    v5 = sub_100629EB8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE3E0);
  }
  return result;
}

unint64_t sub_10062A028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE3E8;
  if (!qword_1011BE3E8)
  {
    v1 = sub_100044B54(&qword_1011BE3B8);
    sub_100629F64();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE3E8);
  }
  return result;
}

uint64_t sub_10062A0AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100618CB8(v1[5], v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10062A0C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100618288(*(void (**)(_QWORD, _QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10062A0DC()
{
  return sub_10062A55C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10061892C);
}

unint64_t sub_10062A0E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE408;
  if (!qword_1011BE408)
  {
    v1 = sub_100044B54(&qword_1011BE3F8);
    sub_10062A9B4((unint64_t *)&qword_1011A5378, &qword_1011A2988);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE408);
  }
  return result;
}

unint64_t sub_10062A184()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE418;
  if (!qword_1011BE418)
  {
    v1 = sub_100044B54(&qword_1011BE3C8);
    sub_10062A208();
    sub_100049F28(&qword_1011BE428, &qword_1011BE1F0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE418);
  }
  return result;
}

unint64_t sub_10062A208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE420;
  if (!qword_1011BE420)
  {
    v1 = sub_100044B54(&qword_1011BE3C0);
    sub_10062A028();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE420);
  }
  return result;
}

uint64_t sub_10062A294@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10061A948(v1[5], v1[6], v1[7], v1[2], v1[3], v1[4], a1);
}

unint64_t sub_10062A2A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE438;
  if (!qword_1011BE438)
  {
    v1 = sub_100044B54(&qword_1011BE378);
    sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE438);
  }
  return result;
}

unint64_t sub_10062A320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE448;
  if (!qword_1011BE448)
  {
    v1 = sub_100044B54(&qword_1011A2DC8);
    sub_100049F28(&qword_1011BE450, &qword_1011A2DC0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE448);
  }
  return result;
}

unint64_t sub_10062A3A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE488;
  if (!qword_1011BE488)
  {
    v1 = sub_100044B54(&qword_1011BE470);
    sub_10062A428();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE488);
  }
  return result;
}

unint64_t sub_10062A428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE490;
  if (!qword_1011BE490)
  {
    v1 = sub_100044B54(&qword_1011BE468);
    sub_10062A4AC();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE490);
  }
  return result;
}

unint64_t sub_10062A4AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE498;
  if (!qword_1011BE498)
  {
    v1 = sub_100044B54(&qword_1011BE388);
    sub_10005610C(&qword_1011BE3F0, &qword_1011BE380, (void (*)(void))sub_1006295C4);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE498);
  }
  return result;
}

uint64_t sub_10062A550()
{
  return sub_10062A55C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10061B114);
}

uint64_t sub_10062A55C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_10062A570()
{
  return sub_10005610C(&qword_1011BE4B0, &qword_1011A2DE0, (void (*)(void))sub_10062A4AC);
}

uint64_t sub_10062A594(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10062A5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE4C0;
  if (!qword_1011BE4C0)
  {
    v1 = sub_100044B54(&qword_1011A2DD8);
    sub_10062A67C(&qword_1011BE4C8, &qword_1011A2DD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE4C0);
  }
  return result;
}

uint64_t sub_10062A67C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    sub_10062A9B4((unint64_t *)&qword_1011A5378, &qword_1011A2988);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10062A6F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE4D8;
  if (!qword_1011BE4D8)
  {
    v1 = sub_100044B54(&qword_1011AFAD8);
    sub_1003AC7CC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE4D8);
  }
  return result;
}

uint64_t sub_10062A77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SplitPercentageLayout(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10062A7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = v3[2];
  v8 = v3[3];
  v9 = v3[4];
  type metadata accessor for SplitPercentageLayout(0);
  return sub_10061A688(a1, a2, v7, v8, v9, a3);
}

uint64_t sub_10062A854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100621810(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_10062A864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE568;
  if (!qword_1011BE568)
  {
    v1 = sub_100044B54(&qword_1011BE518);
    sub_10062A8E8();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE568);
  }
  return result;
}

unint64_t sub_10062A8E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE570;
  if (!qword_1011BE570)
  {
    v1 = sub_100044B54(&qword_1011BE510);
    v2[0] = sub_100044B54(&qword_1011BE578);
    v2[1] = sub_100049F28(&qword_1011BE580, &qword_1011BE578, (uint64_t)&unk_100EC58B8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE570);
  }
  return result;
}

uint64_t sub_10062A9B4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10062AA30()
{
  return sub_10015FD08(&qword_1011BE590, &qword_1011BE550, (void (*)(void))sub_10062AA54, (void (*)(void))sub_10062AB74);
}

unint64_t sub_10062AA54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE598;
  if (!qword_1011BE598)
  {
    v1 = sub_100044B54(&qword_1011BE560);
    sub_10062AAD8();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE598);
  }
  return result;
}

unint64_t sub_10062AAD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE5A0;
  if (!qword_1011BE5A0)
  {
    v1 = sub_100044B54(&qword_1011BE558);
    sub_100049F28(&qword_1011BE580, &qword_1011BE578, (uint64_t)&unk_100EC58B8);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE5A0);
  }
  return result;
}

unint64_t sub_10062AB74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE5A8;
  if (!qword_1011BE5A8)
  {
    v1 = sub_100044B54(&qword_1011BE538);
    sub_10062ABF8();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE5A8);
  }
  return result;
}

unint64_t sub_10062ABF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE5B0;
  if (!qword_1011BE5B0)
  {
    v1 = sub_100044B54(&qword_1011BE530);
    v2[0] = sub_100044B54(&qword_1011BE520);
    v2[1] = sub_100049F28(&qword_1011BE5B8, &qword_1011BE520, (uint64_t)&unk_100EC58B8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE5B0);
  }
  return result;
}

unint64_t sub_10062ACC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE5C0;
  if (!qword_1011BE5C0)
  {
    v1 = sub_100044B54(&qword_1011BE500);
    sub_10062A864();
    sub_10062A9B4(&qword_1011BE588, &qword_1011BE4F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE5C0);
  }
  return result;
}

char *sub_10062AD48(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*(_QWORD *)a2)
    {
      v7 = *((_QWORD *)a2 + 1);
      *(_QWORD *)v4 = *(_QWORD *)a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v9 = *(int *)(a3 + 20);
    v10 = &v4[v9];
    v11 = &a2[v9];
    v12 = sub_100007E8C(qword_1011C9550);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  }
  return v4;
}

uint64_t sub_10062AE1C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  void (*v7)(char *, uint64_t);

  if (*a1)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(qword_1011C9550);
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(char *, uint64_t))v7)((char *)a1 + *(int *)(a2 + 24), v5);
}

char *sub_10062AEA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (*(_QWORD *)a2)
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

char *sub_10062AF48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *(_QWORD *)a2;
  if (!*(_QWORD *)a1)
  {
    if (v6)
    {
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = v6;
      *((_QWORD *)a1 + 1) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = v6;
  *((_QWORD *)a1 + 1) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(qword_1011C9550);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  return a1;
}

char *sub_10062B020(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (*(_QWORD *)a2)
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

char *sub_10062B0C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *(_QWORD *)a2;
  if (!*(_QWORD *)a1)
  {
    if (v6)
    {
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = v6;
      *((_QWORD *)a1 + 1) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = v6;
  *((_QWORD *)a1 + 1) = v7;
  swift_release();
LABEL_8:
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(qword_1011C9550);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  return a1;
}

uint64_t sub_10062B190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062B19C);
}

uint64_t sub_10062B19C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_10062B228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062B234);
}

char *sub_10062B234(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = sub_100007E8C(qword_1011C9550);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10062B2AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = &unk_100EC5468;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 3, &v4, a1 + 16);
  }
}

void sub_10062B320(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EC5450;
  v4[1] = &unk_100EC5450;
  v4[2] = &unk_100EC57E8;
  v4[3] = &unk_100EC5468;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 40);
  }
}

uint64_t sub_10062B3C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = a2 + 7;
    v9 = a2[7];
    swift_retain();
    swift_retain();
    if (v9)
    {
      v11 = a2[8];
      *(_QWORD *)(a1 + 56) = v9;
      *(_QWORD *)(a1 + 64) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *v10;
    }
    v13 = *(int *)(a3 + 56);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

double sub_10062B4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 56))
    swift_release();
  v4 = a1 + *(int *)(a2 + 56);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10062B584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = (_OWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v9;
  }
  v11 = *(int *)(a3 + 56);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_10062B684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  v8 = *(_QWORD *)(a2 + 56);
  if (v7)
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = v9;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v10;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 56);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, (uint64_t *)&unk_1011ACE40);
    v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  return a1;
}

uint64_t sub_10062B7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  v7 = *(int *)(a3 + 56);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10062B8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_release();
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (v9)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v11 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 56);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10062BA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062BA1C);
}

uint64_t sub_10062BA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 56), a2, v8);
  }
}

uint64_t sub_10062BA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062BAA8);
}

uint64_t sub_10062BAA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 56), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_10062BB20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_10062BBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_10062BC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10062BC90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10062BD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10062BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10062BE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062BE28);
}

uint64_t sub_10062BE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_10062BE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062BE78);
}

uint64_t sub_10062BE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_10062BEC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\t";
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_10062BF40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EC5450;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10062BFC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_10062C0A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_10062C0EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain(v4);
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_10062C174(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

_OWORD *sub_10062C204(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_10062C26C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_10062C2EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10062C3C0 + 4 * byte_100EC5400[(v9 - 1)]))();
}

void sub_10062C438(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t _s15StatusIndicatorVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s15StatusIndicatorVMn);
}

uint64_t _s8ListCellV13ConfigurationVwxx(uint64_t a1)
{

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 56));
}

uint64_t _s8ListCellV13ConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  void *v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  v15 = v11;
  v14(a1 + 56, a2 + 56, v13);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t _s8ListCellV13ConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  sub_100625DD8((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  v7 = *(void **)(a2 + 48);
  v8 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  v9 = v7;

  sub_100625DD8((_QWORD *)(a1 + 56), (_QWORD *)(a2 + 56));
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

__n128 _s8ListCellV13ConfigurationVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s8ListCellV13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t _s8ListCellV13ConfigurationVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8ListCellV13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s8ListCellV13ConfigurationVMa()
{
  return &_s8ListCellV13ConfigurationVN;
}

unint64_t sub_10062C904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE808;
  if (!qword_1011BE808)
  {
    v1 = sub_100044B54(&qword_1011BE098);
    sub_100629478();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE808);
  }
  return result;
}

uint64_t sub_10062C988()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011BE170);
  v1[1] = _s17ContextMenuButtonVMa(255);
  v1[2] = sub_10062983C();
  v1[3] = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
}

unint64_t sub_10062CA14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE810;
  if (!qword_1011BE810)
  {
    v1 = sub_100044B54(&qword_1011BE2A8);
    sub_100629BF4();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE810);
  }
  return result;
}

uint64_t sub_10062CA98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v58 = sub_100044B54(&qword_1011BE348);
  v4 = _s9TrackCellV13TrailingIconsVMa(255, v1, v2, v3);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v58, &type metadata for Spacer, v4, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  v8 = type metadata accessor for HStack(255, v6, WitnessTable);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _FrameLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v11 = sub_100044B54(&qword_1011A2988);
  v12 = sub_100044B54(&qword_1011BE350);
  v13 = swift_getTupleTypeMetadata3(255, v10, v11, v12, 0, 0);
  v14 = type metadata accessor for TupleView(255, v13);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v15 = type metadata accessor for VStack(255, v14);
  v57 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _FlexFrameLayout);
  v16 = sub_100044B54(&qword_1011A2DC8);
  v17 = swift_getTupleTypeMetadata3(255, v16, &type metadata for Spacer, v4, 0, 0);
  v18 = type metadata accessor for TupleView(255, v17);
  v19 = sub_100044B54(&qword_1011BE358);
  v20 = sub_100044B54(&qword_1011A2DE8);
  v21 = sub_100044B54(&qword_1011BE360);
  v22 = sub_100044B54(&qword_1011BE368);
  v23 = swift_getTupleTypeMetadata3(255, v22, &type metadata for Spacer, v4, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v26 = type metadata accessor for HStack(255, v24, v25);
  v27 = type metadata accessor for ModifiedContent(255, v26, &type metadata for _FlexFrameLayout);
  v28 = swift_getTupleTypeMetadata3(255, v20, v21, v27, 0, 0);
  v29 = type metadata accessor for TupleView(255, v28);
  v30 = sub_100049F28(&qword_1011BE370, &qword_1011BE358, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v31 = type metadata accessor for _VariadicView.Tree(255, v19, v29, v30);
  v32 = sub_100044B54((uint64_t *)&unk_1011BF930);
  v33 = type metadata accessor for ModifiedContent(255, v31, v32);
  v34 = sub_100044B54(&qword_1011BE378);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v33, v34, 0, 0);
  v36 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v37 = type metadata accessor for _ConditionalContent(255, v18, v36);
  v38 = swift_getTupleTypeMetadata2(255, v58, v37, 0, 0);
  v39 = type metadata accessor for TupleView(255, v38);
  v40 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v39);
  v41 = type metadata accessor for HStack(255, v39, v40);
  v42 = type metadata accessor for _ConditionalContent(255, v57, v41);
  v43 = type metadata accessor for Group(255, v42);
  v70 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v15);
  v71 = &protocol witness table for _FlexFrameLayout;
  v68 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v57);
  v69 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v41);
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v42);
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v43);
  v59 = v43;
  v60 = v44;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v46 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v47 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v46);
  v48 = type metadata accessor for ModifiedContent(255, v47, v46);
  v49 = _s17ContextMenuButtonVMa(255);
  v59 = v43;
  v60 = v44;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v51 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v65 = OpaqueTypeConformance2;
  v66 = v51;
  v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v64 = v51;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v48);
  v53 = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  v59 = v48;
  v60 = v49;
  v61 = v52;
  v62 = v53;
  v54 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 0);
  v55 = type metadata accessor for ModifiedContent(255, v54, v46);
  v59 = v48;
  v60 = v49;
  v61 = v52;
  v62 = v53;
  swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v55);
}

uint64_t sub_10062CFE4()
{
  return sub_10015FD08(&qword_1011BE818, &qword_1011BE820, (void (*)(void))sub_10062AA30, (void (*)(void))sub_10062ACC4);
}

uint64_t sub_10062D018(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA780C, 1);
}

uint64_t sub_10062D028(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA77D8, 1);
}

uint64_t sub_10062D05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100409780(a1, a2, a3, (uint64_t)&unk_100FA7798);
}

uint64_t sub_10062D068(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7770, 1);
}

unint64_t sub_10062D080()
{
  unint64_t result;

  result = qword_1011BE848;
  if (!qword_1011BE848)
  {
    result = swift_getWitnessTable(&unk_100EC5AD4, &_s17ContextMenuButtonV6ButtonVN);
    atomic_store(result, (unint64_t *)&qword_1011BE848);
  }
  return result;
}

unint64_t sub_10062D0C4()
{
  unint64_t result;

  result = qword_1011BE878;
  if (!qword_1011BE878)
  {
    result = swift_getWitnessTable(&unk_100EC5A84, &_s19UploadRequiredImageVN);
    atomic_store(result, (unint64_t *)&qword_1011BE878);
  }
  return result;
}

unint64_t sub_10062D108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE898;
  if (!qword_1011BE898)
  {
    v1 = sub_100044B54(&qword_1011BE890);
    sub_10062D18C();
    sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE898);
  }
  return result;
}

unint64_t sub_10062D18C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE8A0;
  if (!qword_1011BE8A0)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C9460);
    sub_1004D9D80((unint64_t *)&qword_1011A0658, &qword_1011C9470);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE8A0);
  }
  return result;
}

unint64_t sub_10062D218()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE8E8;
  if (!qword_1011BE8E8)
  {
    v1 = sub_100044B54(&qword_1011BE8C0);
    v2[0] = &type metadata for Image;
    v2[1] = &protocol witness table for Image;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE8E8);
  }
  return result;
}

uint64_t sub_10062D2C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10061FD34(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10062D2CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE8F8;
  if (!qword_1011BE8F8)
  {
    v1 = sub_100044B54(&qword_1011BE8D8);
    sub_10062D350();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE8F8);
  }
  return result;
}

unint64_t sub_10062D350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BE900;
  if (!qword_1011BE900)
  {
    v1 = sub_100044B54(&qword_1011BE8D0);
    v2[0] = sub_100044B54(&qword_1011BE8C0);
    v2[1] = sub_10062D218();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE900);
  }
  return result;
}

unint64_t sub_10062D3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE928;
  if (!qword_1011BE928)
  {
    v1 = sub_100044B54(&qword_1011BE908);
    sub_10005610C(&qword_1011BE920, &qword_1011BE918, (void (*)(void))sub_1001C3E78);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE928);
  }
  return result;
}

_QWORD *_s17ContextMenuButtonV6ButtonVwxx(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release(result[1]);
  return result;
}

uint64_t _s17ContextMenuButtonV6ButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s17ContextMenuButtonV6ButtonVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain(v7);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 8));
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v6);
LABEL_8:
  v8 = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t _s17ContextMenuButtonV6ButtonVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 8));
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release(v6);
LABEL_8:
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

uint64_t _s17ContextMenuButtonV6ButtonVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s17ContextMenuButtonV6ButtonVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s17ContextMenuButtonV6ButtonVMa()
{
  return &_s17ContextMenuButtonV6ButtonVN;
}

ValueMetadata *_s19UploadRequiredImageVMa()
{
  return &_s19UploadRequiredImageVN;
}

unint64_t sub_10062D6E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE930;
  if (!qword_1011BE930)
  {
    v1 = sub_100044B54(&qword_1011BE830);
    sub_10005610C(&qword_1011BE938, &qword_1011BE940, (void (*)(void))sub_10062D788);
    sub_100049F28(&qword_1011BE960, &qword_1011BE828, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE930);
  }
  return result;
}

unint64_t sub_10062D788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE948;
  if (!qword_1011BE948)
  {
    v1 = sub_100044B54(&qword_1011BE950);
    sub_10062D80C();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE948);
  }
  return result;
}

unint64_t sub_10062D80C()
{
  unint64_t result;

  result = qword_1011BE958;
  if (!qword_1011BE958)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_1011BE958);
  }
  return result;
}

unint64_t sub_10062D854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE968;
  if (!qword_1011BE968)
  {
    v1 = sub_100044B54(&qword_1011A2ED8);
    sub_100049F28(&qword_1011BE970, &qword_1011A2ED0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE968);
  }
  return result;
}

uint64_t sub_10062D8D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100044B54(&qword_1011BE8E0);
  v4 = type metadata accessor for _OverlayModifier(255, v1, v2);
  v5 = type metadata accessor for ModifiedContent(255, v3, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FlexFrameLayout);
  sub_10005610C(&qword_1011BE8F0, &qword_1011BE8E0, (void (*)(void))sub_10062D2CC);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
}

unint64_t sub_10062D9C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BE978;
  if (!qword_1011BE978)
  {
    v1 = sub_100044B54(&qword_1011BE910);
    sub_10062D3FC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BE978);
  }
  return result;
}

uint64_t sub_10062DA50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7834, 1);
}

unint64_t sub_10062DA60()
{
  unint64_t result;

  result = qword_1011BE980;
  if (!qword_1011BE980)
  {
    result = swift_getWitnessTable(&unk_100EC59F4, &_s17ContextMenuButtonV6ButtonVN);
    atomic_store(result, (unint64_t *)&qword_1011BE980);
  }
  return result;
}

uint64_t sub_10062DAA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10062DAB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10062DACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  void *v40;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1001B10A4();
    v5 = sub_1000A569C();
    v6 = Set.Iterator.init(_cocoa:)(v39, v3, v4, v5);
    v1 = v39[0];
    v36 = v39[1];
    v7 = v39[2];
    v8 = v39[3];
    v9 = v39[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v34 = v7;
  v35 = (unint64_t)(v7 + 64) >> 6;
  v37 = _UIWindowSceneSessionRoleCarPlay;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (!v14)
    goto LABEL_39;
  v15 = v14;
  v38 = v14;
  v16 = sub_1001B10A4();
  swift_unknownObjectRetain(v15, v17);
  swift_dynamicCast(&v40, &v38, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
  v18 = v40;
  *(_QWORD *)&v19 = swift_unknownObjectRelease(v15).n128_u64[0];
  v20 = v8;
  v21 = v9;
  if (!v18)
    goto LABEL_39;
  while (1)
  {
    v26 = objc_msgSend(v18, "session", v19, v34);
    v27 = objc_msgSend(v26, "role");

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    if (v28 == v32 && v30 == v31)
    {

      swift_bridgeObjectRelease_n(v30, 2);
      goto LABEL_39;
    }
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      goto LABEL_39;

    v8 = v20;
    v9 = v21;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v9)
      break;
    v21 = (v9 - 1) & v9;
    v22 = __clz(__rbit64(v9)) | (v8 << 6);
    v20 = v8;
LABEL_32:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v22);
    if (!v18)
      goto LABEL_39;
  }
  v23 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v23 >= v35)
    goto LABEL_39;
  v24 = *(_QWORD *)(v36 + 8 * v23);
  v20 = v8 + 1;
  if (v24)
    goto LABEL_31;
  v20 = v8 + 2;
  if (v8 + 2 >= v35)
    goto LABEL_39;
  v24 = *(_QWORD *)(v36 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 3;
  if (v8 + 3 >= v35)
    goto LABEL_39;
  v24 = *(_QWORD *)(v36 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 4;
  if (v8 + 4 >= v35)
    goto LABEL_39;
  v24 = *(_QWORD *)(v36 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 5;
  if (v8 + 5 >= v35)
    goto LABEL_39;
  v24 = *(_QWORD *)(v36 + 8 * v20);
  if (v24)
  {
LABEL_31:
    v21 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_32;
  }
  v25 = v8 + 6;
  while (v35 != v25)
  {
    v24 = *(_QWORD *)(v36 + 8 * v25++);
    if (v24)
    {
      v20 = v25 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10004FA7C(v1);
}

uint64_t sub_10062DE48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  unint64_t v32;
  char v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _QWORD v41[11];

  v34[1] = a2;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v34[0] = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayActivityUtilitiesPlayEndEventStartTimeKey);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayActivityUtilitiesPlayEndEventEndTimeKey);
  v13 = v12;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayActivityUtilitiesPlayEndEventSharedSessionIdKey);
  v15 = v14;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayActivityUtilitiesPlayEndEventSharedSessionParticipantCountKey);
  v17 = v16;
  v18 = Notification.userInfo.getter(v36);
  if (v18)
  {
    v19 = v18;
    v37 = v8;
    v38 = v10;
    AnyHashable.init<A>(_:)(&v37, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_10079C294((uint64_t)v41), (v21 & 1) != 0))
    {
      sub_10004FA40(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v39);
    }
    else
    {
      v39 = 0u;
      v40 = 0u;
    }
    sub_10004FF2C((uint64_t)v41);
    if (!*((_QWORD *)&v40 + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v37 = v11;
      v38 = v13;
      AnyHashable.init<A>(_:)(&v37, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v19 + 16) && (v22 = sub_10079C294((uint64_t)v41), (v23 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v19 + 56) + 32 * v22, (uint64_t)&v39);
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
      }
      sub_10004FF2C((uint64_t)v41);
      if (*((_QWORD *)&v40 + 1))
      {
        if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
        {
          *(_QWORD *)&v39 = v35;
          *((_QWORD *)&v39 + 1) = v15;
          AnyHashable.init<A>(_:)(&v39, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v19 + 16) && (v24 = sub_10079C294((uint64_t)v41), (v25 & 1) != 0))
          {
            sub_10004FA40(*(_QWORD *)(v19 + 56) + 32 * v24, (uint64_t)&v39);
          }
          else
          {
            v39 = 0u;
            v40 = 0u;
          }
          sub_10004FF2C((uint64_t)v41);
          if (*((_QWORD *)&v40 + 1))
            swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          else
            sub_1002293F8((uint64_t)&v39);
          *(_QWORD *)&v39 = v36;
          *((_QWORD *)&v39 + 1) = v17;
          AnyHashable.init<A>(_:)(&v39, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v19 + 16) && (v32 = sub_10079C294((uint64_t)v41), (v33 & 1) != 0))
          {
            sub_10004FA40(*(_QWORD *)(v19 + 56) + 32 * v32, (uint64_t)&v39);
          }
          else
          {
            v39 = 0u;
            v40 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_10004FF2C((uint64_t)v41);
          if (*((_QWORD *)&v40 + 1))
            swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for Int, 6);
          else
            sub_1002293F8((uint64_t)&v39);
          static ApplicationCapabilities.shared.getter((uint64_t)v41);
          sub_100065184(v41);
          __asm { BR              X10 }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      sub_1002293F8((uint64_t)&v39);
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
LABEL_24:
  v26 = Logger.carMetrics.unsafeMutableAddressor();
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v26, v2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "❌ Missing PAF key information", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_10062E394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x63697373616C63, 0xE700000000000000, 0x6269726373627573, 0xEA00000000007265, 0);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = type metadata accessor for TaskPriority(0);
    v9 = *(_QWORD *)(v4 - 304);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v9, 1, 1, v8);
    type metadata accessor for MainActor(0);
    v10 = *(_QWORD *)(v4 - 296);
    v11 = swift_retain();
    v12 = static MainActor.shared.getter(v11);
    v13 = swift_allocObject(&unk_1010D3950, 81, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v13 + 32) = v10;
    *(_QWORD *)(v13 + 40) = v5;
    *(_QWORD *)(v13 + 48) = v6;
    *(_QWORD *)(v13 + 56) = v2;
    *(_QWORD *)(v13 + 64) = v1;
    *(_QWORD *)(v13 + 72) = v0;
    *(_BYTE *)(v13 + 80) = v3;
    sub_100166D14(v9, (uint64_t)&unk_1011BEA60, v13);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x10062E214);
}

uint64_t sub_10062E4BC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v10 + 64) = a10;
  *(_QWORD *)(v10 + 40) = a8;
  *(_QWORD *)(v10 + 48) = a9;
  *(_QWORD *)(v10 + 32) = a7;
  *(double *)(v10 + 16) = a1;
  *(double *)(v10 + 24) = a2;
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v10 + 56) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_10062E534, v13, v14);
}

uint64_t sub_10062E534()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v9;
  void *v10;
  int v11;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "connectedScenes");

  v3 = sub_1001B10A4();
  v4 = sub_1000A569C();
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  sub_10062DACC(v5);
  v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {

LABEL_3:
    sub_10062E7A8(v7 == 0, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 64) & 1, *(double *)(v0 + 16), *(double *)(v0 + 24));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v9 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
  if (v9)
  {
    v10 = v9;
    if (*((_BYTE *)v9 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) != 1)
    {

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v9) + 0x138))();

    if (v11 != 1)
      return (*(uint64_t (**)(void))(v0 + 8))();
    goto LABEL_3;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s8ObserverCMa()
{
  return objc_opt_self(_TtCE5MusicO9MusicCore20CarNowPlayingMetrics8Observer);
}

uint64_t sub_10062E6C8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_10062E6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(double *)(v1 + 40);
  v8 = *(double *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 72);
  v12 = *(_BYTE *)(v1 + 80);
  v13 = (_QWORD *)swift_task_alloc(dword_1011BEA5C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10005AEE4;
  return sub_10062E4BC(v7, v8, a1, v4, v5, v6, v9, v10, v11, v12);
}

uint64_t sub_10062E7A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  double v26;
  void *v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[5];
  _QWORD v50[5];
  uint64_t v51;
  void *v52;
  _QWORD v53[5];
  _QWORD v54[5];
  uint64_t v55[6];

  v42 = a4;
  v12 = a1 & 1;
  v13 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CarNowPlayingMetrics.persistedMetricsData(for:)((uint64_t)v49);
  v20 = v49[4];
  sub_10062EB50((uint64_t)v49, (uint64_t)v54);
  if (v54[3])
    v21 = *(double *)v54;
  else
    v21 = 0.0;
  result = sub_10062EB50((uint64_t)v49, (uint64_t)v53);
  if (v53[3])
    v23 = v53[1];
  else
    v23 = 0;
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    v43 = v25;
    v26 = vabdd_f64(a7, a6);
    sub_10062EB50((uint64_t)v49, (uint64_t)&v51);
    v27 = v52;
    if (!v52)
    {
      v27 = &_swiftEmptySetSingleton;
      v20 = 0;
    }
    v48 = (uint64_t)v27;
    if (!a3
      || !a2 && a3 == 0xE000000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0, 0xE000000000000000, 0) & 1) != 0
      || (a5 & 1) != 0
      || v42 < 2)
    {
      sub_10062EB98((uint64_t)v49);
    }
    else
    {
      sub_10062EB98((uint64_t)v49);
      swift_bridgeObjectRetain();
      sub_100194BF0(v55, a2, a3);
      swift_bridgeObjectRelease();
      if (v20 <= v42)
        v20 = v42;
    }
    v28 = v26 + v21;
    v29 = sub_10062EB50((uint64_t)v49, (uint64_t)v50);
    if (v50[3])
    {
      v30 = *(double *)&v50[2];
      sub_10062EBC0((uint64_t)v49);
    }
    else
    {
      v31 = Date.init()(v29);
      v30 = Date.timeIntervalSince1970.getter(v31);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    *(double *)v55 = v28;
    v55[1] = v43;
    *(double *)&v55[2] = v30;
    v55[3] = v48;
    v55[4] = v20;
    static CarNowPlayingMetrics.storeMetricsData(_:for:)((uint64_t)v55);
    swift_bridgeObjectRelease();
    v32 = Logger.carMetrics.unsafeMutableAddressor();
    v34 = v44;
    v33 = v45;
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 16))(v15, v32, v45);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v47 = v39;
      *(_DWORD *)v38 = 136446210;
      LOBYTE(v46) = v12;
      v40 = String.init<A>(describing:)(&v46, &type metadata for CarNowPlayingMetrics.EventType);
      v46 = sub_100322200(v40, v41, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Stored metrics data for eventType=%{public}s", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v15, v45);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v33);
    }
  }
  return result;
}

uint64_t sub_10062EB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011BEA68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10062EB98(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_10062EBC0(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

double sub_10062EBE8()
{
  double result;

  result = 113.777778;
  xmmword_1011BEA70 = xmmword_100EC5B50;
  return result;
}

id sub_10062EC00(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  objc_class *ObjectType;
  uint64_t v58;
  objc_super v59;

  v3 = v2;
  LODWORD(v56) = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for TVSeason(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)_s10TVEpisodesVMa(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = &v2[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___headerRegistration];
  v17 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = &v3[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration];
  v19 = sub_100007E8C((uint64_t *)&unk_1011BEB08);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___collectionView] = 0;
  v20 = OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_prefetchingController;
  v21 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v22 = v3;
  *(_QWORD *)&v3[v20] = sub_1001EA3C8(0xD00000000000001ALL, 0x8000000100E40D60);
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_dragDropController] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___searchController] = 0;
  v23 = &v22[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext];
  v24 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  sub_10005B704(a1, (uint64_t)&v22[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_scope], _s10TVEpisodesV5ScopeOMa);
  v25 = (uint64_t)v15 + v13[5];
  v58 = a1;
  sub_10005B704(a1, v25, _s10TVEpisodesV5ScopeOMa);
  v26 = type metadata accessor for MusicLibrary(0);
  *v15 = static MusicLibrary.shared.getter(v26);
  v27 = (_QWORD *)((char *)v15 + v13[7]);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  *(_WORD *)((char *)v15 + v13[8]) = 259;
  *(_WORD *)((char *)v15 + v13[9]) = 259;
  *(_QWORD *)((char *)v15 + v13[10]) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v15 + v13[11]) = &_swiftEmptySetSingleton;
  *((_BYTE *)v15 + v13[12]) = 7;
  v28 = (_QWORD *)((char *)v15 + v13[13]);
  *v28 = 0;
  v28[1] = 0xE000000000000000;
  *(_QWORD *)((char *)v15 + v13[14]) = _swiftEmptyArrayStorage;
  *((_BYTE *)v15 + v13[6]) = v56;
  v29 = sub_100007E8C(&qword_1011BEB18);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController] = sub_10018BD10((uint64_t)v15);

  v59.receiver = v22;
  v30 = ObjectType;
  v59.super_class = ObjectType;
  v31 = objc_msgSendSuper2(&v59, "initWithNibName:bundle:", 0, 0);
  sub_10005B704((uint64_t)v31 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_scope, (uint64_t)v12, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v9 = v53;
    v32 = v54;
    v33 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v12, v55);
    v34 = v31;
    TVSeason.showName.getter(v35);
  }
  else
  {
    v32 = v51;
    v33 = v52;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v9, v12, v52);
    TVShow.name.getter(v31);
  }
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setTitle:", v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v39 = v31;
  UIViewController.playActivityFeatureIdentifier.setter(0xFu);

  v40 = sub_100007E8C(&qword_1011A1750);
  v41 = swift_allocObject(v40, 48, 7);
  v56 = xmmword_100EA7AA0;
  *(_OWORD *)(v41 + 16) = xmmword_100EA7AA0;
  v42 = sub_10018D478();
  *(_QWORD *)(v41 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v39;
  v44 = UIViewController.registerForTraitChanges<A>(_:handler:)(v41, sub_100633740, 0, v30);
  swift_unknownObjectRelease(v44);

  swift_bridgeObjectRelease(v41);
  v45 = swift_allocObject(v40, 48, 7);
  *(_OWORD *)(v45 + 16) = v56;
  v46 = sub_10013ADBC();
  *(_QWORD *)(v45 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v45 + 40) = v46;
  v47 = v43;
  v48 = UIViewController.registerForTraitChanges<A>(_:handler:)(v45, sub_100633744, 0, v30);
  swift_unknownObjectRelease(v48);
  swift_bridgeObjectRelease(v45);

  sub_10005B748(v58, _s10TVEpisodesV5ScopeOMa);
  return v47;
}

double sub_10062F118()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  double (**v7)();
  uint64_t v8;
  uint64_t v9;
  unint64_t (**v10)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  _QWORD v29[4];
  _QWORD v30[4];
  objc_super v31;

  v1 = v0;
  v31.receiver = v0;
  v31.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v31, "viewDidLoad");
  v2 = sub_10062F3C0();
  v3 = sub_10062F3C0();
  v4 = sub_1005AEDD4((uint64_t)v3, 0, 0, 0, 0, 0);

  objc_msgSend(v2, "setCollectionViewLayout:", v4);
  v5 = sub_10062F3C0();
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_prefetchingController];
  objc_msgSend(v5, "setPrefetchDataSource:", v6);

  v7 = (double (**)())(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8);
  *v7 = sub_100633748;
  v7[1] = 0;
  sub_10004BA30(v8, v9);
  v10 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v6
                                                                                        + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v10 = sub_10062F81C;
  v10[1] = 0;
  sub_10004BA30(v11, v12);
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController];
  v14 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = (uint64_t *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 104));
  v16 = *v15;
  v17 = v15[1];
  *v15 = (uint64_t)sub_100634788;
  v15[1] = v14;
  sub_10004BA30(v16, v17);
  v18 = sub_10062FDCC();
  v19 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = *(_QWORD *)(v18 + 72);
  v21 = *(_QWORD *)(v18 + 80);
  *(_QWORD *)(v18 + 72) = sub_100634790;
  *(_QWORD *)(v18 + 80) = v19;
  sub_10004BA30(v20, v21);
  swift_release();
  v29[3] = sub_100007E8C(&qword_1011A37B0);
  v22 = sub_100049F68(v29);
  sub_10063000C((uint64_t)v22);
  v30[3] = sub_100007E8C((uint64_t *)&unk_1011BEB08);
  v23 = sub_100049F68(v30);
  sub_100630200((uint64_t)v23);
  swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
  v24 = sub_10062F3C0();
  v25 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = sub_1002E3B4C(v24, (uint64_t)sub_100634798, v25, 0, 0, 0, 0, 0, 0);

  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_dragDropController] = v27;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_10062F3C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  objc_class *v17;
  id v18;
  id v19;
  id result;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double Width;
  void *v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  MusicCore::AccessibilityIdentifier v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  char v49;
  objc_super v50;
  objc_super v51;
  objc_super v52;
  CGRect v53;
  CGRect v54;

  v1 = v0;
  v2 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___collectionView;
  v14 = *(void **)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___collectionView];
  if (v14)
  {
    v15 = *(id *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___collectionView];
LABEL_11:
    v47 = v14;
    return v15;
  }
  v48 = v2;
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v5);
  UICollectionLayoutListConfiguration.init(appearance:)(v8);
  v16 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v17);
  v18 = v16;
  v19 = sub_1001089FC(v18, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v21 = result;
    objc_msgSend(result, "bounds");
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v52.receiver = v19;
    v52.super_class = v17;
    objc_msgSendSuper2(&v52, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v51.receiver = v19;
    v51.super_class = v17;
    objc_msgSendSuper2(&v51, "setFrame:", v23, v25, v27, v29);
    v53.origin.x = v31;
    v53.origin.y = v33;
    v53.size.width = v35;
    v53.size.height = v37;
    Width = CGRectGetWidth(v53);
    v50.receiver = v19;
    v50.super_class = v17;
    objc_msgSendSuper2(&v50, "frame");
    if (Width != CGRectGetWidth(v54))
      sub_100108B5C();
    objc_msgSend(v19, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v39 = result;
      objc_msgSend(result, "addSubview:", v19);

      objc_msgSend(v19, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v19, "setDataSource:", v1);
      objc_msgSend(v19, "setDelegate:", v1);
      objc_msgSend(v19, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v19, "setKeyboardDismissMode:", 1);
      objc_msgSend(v19, "setAllowsFocus:", 1);
      objc_msgSend(v19, "setRemembersLastFocusedIndexPath:", 1);
      v49 = 0;
      v40 = sub_10004D63C();
      v41 = v19;
      objc_msgSend(v41, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v40) & 1);

      sub_10005B704((uint64_t)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_scope], (uint64_t)v4, _s10TVEpisodesV5ScopeOMa);
      if (swift_getEnumCaseMultiPayload(v4, v48) == 1)
      {
        v42 = 0xD00000000000001ELL;
        v43 = 0x8000000100E40DE0;
      }
      else
      {
        v43 = 0x8000000100E40E00;
        v42 = 0xD00000000000001CLL;
      }
      v44 = AccessibilityIdentifier.init(name:)(*(Swift::String *)&v42);
      sub_10005B748((uint64_t)v4, _s10TVEpisodesV5ScopeOMa);
      v45 = UIView.withAccessibilityIdentifier(_:)(v44.rawValue._countAndFlagsBits, (uint64_t)v44.rawValue._object);

      swift_bridgeObjectRelease();
      v46 = *(void **)&v1[v13];
      *(_QWORD *)&v1[v13] = v45;
      v15 = v45;

      v14 = 0;
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10062F81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  unint64_t result;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v34 = a2;
  v35 = a3;
  v4 = sub_100007E8C(&qword_1011BEB40);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A3A20);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A3A30);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v36, &qword_10119DCC0);
  if (!v37)
  {
    sub_10004FF60((uint64_t)v36, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v21 = swift_dynamicCast(v16, v36, (char *)&type metadata for Any + 8, v17, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v21 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_7:
    sub_10004FF60((uint64_t)v16, &qword_1011A3A20);
    v29 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = MusicLibrarySectionedResponse.sections.getter(v17);
  result = IndexPath.section.getter(v22);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v22+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v7);
    v24 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v7, v24);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v26 = IndexPath.item.getter(v25);
    v27 = v33;
    MusicItemCollection.subscript.getter(v26, v33);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v6, v27);
    TVEpisode.artwork.getter(v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_10062FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char v24;
  __n128 v25;
  char v26;
  _BYTE v27[24];
  _QWORD v28[4];
  _BYTE v29[24];

  v4 = sub_100007E8C(&qword_1011A3A20);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A3A30);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (char *)result;
    sub_10004A160(a1, (uint64_t)v6, &qword_1011A3A20);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, &qword_1011A3A20);
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_prefetchingController];
    v28[3] = v7;
    v14 = sub_100049F68(v28);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(v14, v10, v7);
    v15 = v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
    swift_beginAccess(v15, v27, 33, 0);
    sub_1000A5508((uint64_t)v28, v15, &qword_10119DCC0);
    swift_endAccess(v27);
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v16 = sub_10062F3C0();
    objc_msgSend(v16, "reloadData");

    v17 = sub_10062FDCC();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v18 = (uint64_t *)(*(_QWORD *)(sub_10062FDCC() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v19 = v18[1];
      if (v19)
      {
        v20 = *v18;
        swift_release();
        v21 = HIBYTE(v19) & 0xF;
        if ((v19 & 0x2000000000000000) == 0)
          v21 = v20 & 0xFFFFFFFFFFFFLL;
        v22 = v21 != 0;
        v23 = *(unsigned __int8 *)(v17 + 48);
        *(_BYTE *)(v17 + 48) = v22;
        if (v23 == v22)
          goto LABEL_12;
      }
      else
      {
        swift_release();
        v26 = *(_BYTE *)(v17 + 48);
        *(_BYTE *)(v17 + 48) = 0;
        if ((v26 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      v24 = *(_BYTE *)(v17 + 48);
      *(_BYTE *)(v17 + 48) = 1;
      if ((v24 & 1) != 0)
      {
LABEL_12:

        v25 = swift_release();
        return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v25);
      }
    }
    sub_100409F58();
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10062FDCC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_10062FE64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t Strong;
  double result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v6 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v21[-v10 - 8];
  a3 += 16;
  swift_beginAccess(a3, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController);
    swift_retain();

    if (a2)
      v16 = a1;
    else
      v16 = 0;
    if (a2)
      v17 = a2;
    else
      v17 = 0xE000000000000000;
    v18 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    swift_beginAccess(v18, v22, 0, 0);
    sub_10005B704(v18, (uint64_t)v11, _s10TVEpisodesVMa);
    v19 = &v11[*(int *)(v6 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v19 = v16;
    v19[1] = v17;
    sub_10005B704(v18, (uint64_t)v8, _s10TVEpisodesVMa);
    swift_beginAccess(v18, v21, 33, 0);
    sub_100633AE8((uint64_t)v11, v18);
    swift_endAccess(v21);
    sub_100180FC8(v8);
    sub_10005B748((uint64_t)v11, _s10TVEpisodesVMa);
    sub_10005B748((uint64_t)v8, _s10TVEpisodesVMa);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10063000C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_100634750, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100630200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C(&qword_1011BEB28);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, &qword_1011BEB28);
  v12 = sub_100007E8C((uint64_t *)&unk_1011BEB08);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, &qword_1011BEB28);
  v14 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1010D3AA0, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for TVEpisode(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100634604, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v7, v11, &qword_1011BEB28);
  return swift_endAccess(v19);
}

uint64_t sub_100630410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  _BYTE v40[24];
  _BYTE v41[24];

  v6 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v9);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TVEpisode(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_4;
  v20 = (char *)Strong;
  v39[0] = a3;
  v21 = OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController;
  swift_retain();
  sub_1008DE9F0(a1, (uint64_t)v14);
  v22 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v22) == 1)
  {

    sub_10004FF60((uint64_t)v14, &qword_10119FD80);
    a3 = v39[0];
LABEL_4:
    v23 = type metadata accessor for DragItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v25 = *(_QWORD *)&v20[v21] + *(_QWORD *)(**(_QWORD **)&v20[v21] + 96);
  swift_beginAccess(v25, v40, 0, 0);
  sub_10005B704(v25, (uint64_t)v8, _s10TVEpisodesVMa);
  sub_100667B98((uint64_t)v11);
  sub_10005B748((uint64_t)v8, _s10TVEpisodesVMa);
  v26 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v26);
  if ((_DWORD)v28 == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D60);
    v29 = 0;
  }
  else
  {
    v29 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v28);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
  }
  v30 = sub_100869740(v29);
  v31 = sub_100869D18(v30, (uint64_t)&off_1010ACE18);
  swift_bridgeObjectRelease();
  v32 = sub_10047D540((uint64_t)v31);
  swift_bridgeObjectRelease();
  v33 = type metadata accessor for DragItem(0);
  v34 = (_QWORD *)v39[0];
  v35 = v39[0] + *(int *)(v33 + 20);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v35, v18, v15);
  v36 = enum case for GenericMusicItem.tvEpisode(_:);
  v37 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  v38 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v35, v38, 1);
  *v34 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_10063090C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t KeyPath;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _QWORD v43[2];
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _BYTE v50[24];
  _BYTE v51[24];

  v46 = a4;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v45 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v44 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A3A30);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)v43 - v23;
  a5 += 16;
  swift_beginAccess(a5, v51, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    return;
  v26 = (void *)Strong;
  v43[1] = a1;
  v27 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController)
                  + 112);
  v28 = swift_beginAccess(v27, v50, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 48))(v27, 1, v14, v28))
  {

    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, v14);
  v29 = MusicLibrarySectionedResponse.sections.getter(v14);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v31 = IndexPath.section.getter(v30);
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v31 >= *(_QWORD *)(v29 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v21, v29+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v31, v18);
  v32 = swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t, __n128))(v19 + 32))(v24, v21, v18, v32);
  KeyPath = swift_getKeyPath(&unk_100EC5BE8);
  MusicLibrarySection.subscript.getter(KeyPath, v18);
  swift_release();
  if ((v49 & 1) != 0)
  {
    v34 = 0;
    v35 = 0xE000000000000000;
  }
  else
  {
    v36 = v48;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
    v37._countAndFlagsBits = 0x206E6F73616553;
    v37._object = (void *)0xE700000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    v47 = v36;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v47, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
    v39 = v44;
    v40 = String.LocalizationValue.init(stringInterpolation:)(v13);
    v41 = v45;
    static Locale.current.getter(v40);
    v34 = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, 0, v41, 0, 0, 256);
    v35 = v42;
  }
  sub_10061170C(v34, v35, &v48);
  swift_bridgeObjectRelease();
  UICollectionViewCell.contentConfiguration.setter(&v48);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
}

void sub_100630CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[5];
  _BYTE v33[24];

  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - v15;
  a4 += 16;
  swift_beginAccess(a4, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v18 = (void *)Strong;
    v31[1] = a1;
    __chkstk_darwin(Strong);
    v31[-4] = a3;
    v31[-3] = v19;
    v31[-2] = a2;
    v31[-1] = a5;
    v20 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
    v21 = _s8ListCellVMa(255);
    v22 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v32[0] = v21;
    v32[1] = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v24 = UIHostingConfiguration<>.init(content:)(sub_10063460C, &v31[-6], v20, OpaqueTypeConformance2);
    v25 = static Edge.Set.horizontal.getter(v24);
    v26 = (char *)sub_10062F3C0();
    v27 = *(double *)&v26[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v25, v10, v27);
    v28 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v29 = v28(v13, v10);
    v30 = static Edge.Set.vertical.getter(v29);
    v32[3] = v10;
    v32[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v32);
    UIHostingConfiguration.margins(_:_:)(v30, v10, 8.0);
    v28(v16, v10);
    UICollectionViewCell.contentConfiguration.setter(v32);

  }
}

uint64_t sub_100630EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString *v53;
  __n128 v54;
  int v55;
  uint64_t v56;
  int *v57;
  char *v58;
  NSString *v59;
  int v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  __n128 v68;
  char *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[56];

  v85 = a3;
  v95 = a2;
  v93 = a4;
  v5 = type metadata accessor for IndexPath(0);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  __chkstk_darwin(v5);
  v87 = v6;
  v88 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TVEpisode(0);
  v79 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v81 = v7;
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v9);
  v94 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v13 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v22);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = _s8ListCellVMa(0);
  __chkstk_darwin(v83);
  v82 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
  v89 = *(_QWORD *)(v29 - 8);
  v90 = v29;
  __chkstk_darwin(v29);
  v86 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  TVEpisode.artworkViewModel.getter(v24);
  v31 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 5, 10, v31);
  if (qword_10119C3D8 != -1)
    swift_once(&qword_10119C3D8, sub_10062EBE8);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(xmmword_1011BEA70, 0, *((uint64_t *)&xmmword_1011BEA70 + 1), 0, 0x3FFC71C71C71C71CLL, 0, 2, (uint64_t)v96);
  v32 = Corner.small.unsafeMutableAddressor();
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v24, (uint64_t)v21, 0, 1, (uint64_t)v96, *v32, v32[1], *((_BYTE *)v32 + 16), (uint64_t)v27);
  v78 = TVEpisode.title.getter(v33);
  v77 = v34;
  TVEpisode.releaseDate.getter(v78);
  v35 = type metadata accessor for Date(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, v35);
  v80 = v27;
  if ((_DWORD)v37 == 1)
  {
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A30A0);
    v76 = 0;
    v75 = 0;
  }
  else
  {
    v38 = static Date.FormatStyle.DateStyle.long.getter(v37);
    static Date.FormatStyle.TimeStyle.omitted.getter(v38);
    v76 = Date.formatted(date:time:)(v15, v12);
    v75 = v39;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v12, v74);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v72);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v35);
  }
  v40 = type metadata accessor for ContentRating(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v94, 1, 1, v40);
  v41 = swift_allocObject(&unk_1010D39D8, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16);
  v42 = v79;
  v43 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v8, a1, v84);
  v45 = v91;
  v44 = v92;
  v46 = v8;
  v47 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v88, v85, v92);
  v48 = *(unsigned __int8 *)(v42 + 80);
  v49 = (v48 + 24) & ~v48;
  v50 = *(unsigned __int8 *)(v45 + 80);
  v51 = (v81 + v50 + v49) & ~v50;
  v52 = swift_allocObject(&unk_1010D3AC8, v51 + v87, v48 | v50 | 7);
  *(_QWORD *)(v52 + 16) = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v52 + v49, v46, v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v52 + v51, v47, v44);
  swift_retain();
  v53 = UIFontTextStyleBody;
  v55 = static HierarchicalShapeStyle.primary.getter(v54);
  v56 = (uint64_t)v82;
  v57 = (int *)v83;
  v58 = &v82[*(int *)(v83 + 36)];
  *((_QWORD *)v58 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v58 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v58 + 2) = v55;
  v59 = UIFontTextStyleSubheadline;
  v60 = static HierarchicalShapeStyle.secondary.getter(v59);
  *((_QWORD *)v58 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v58 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v58 + 14) = v60;
  *(_QWORD *)v58 = v53;
  *((_QWORD *)v58 + 6) = v59;
  v58[96] = 0;
  sub_10005B6C0((uint64_t)v80, v56, type metadata accessor for ArtworkImage.Info);
  v61 = (uint64_t *)(v56 + v57[5]);
  v62 = v77;
  *v61 = v78;
  v61[1] = v62;
  v63 = (uint64_t *)(v56 + v57[6]);
  v64 = v75;
  *v63 = v76;
  v63[1] = v64;
  *(_BYTE *)(v56 + v57[7]) = 0;
  sub_100065228(v94, v56 + v57[8], &qword_1011B8D50);
  v65 = (_QWORD *)(v56 + v57[10]);
  *v65 = sub_1006344DC;
  v65[1] = v52;
  v66 = (_QWORD *)(v56 + v57[11]);
  *v66 = swift_getKeyPath(&unk_100EC5BB8);
  v67 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v66, v67, 0);
  swift_release();
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v68 = swift_retain();
  v69 = v86;
  View.artworkCaching(owner:)(v68);
  swift_release();
  sub_10005B748(v56, _s8ListCellVMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v89 + 32))(v93, v69, v90);
}

uint64_t sub_10063163C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext, v38, 0, 0);
  sub_10004A160(v15, (uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_10005B6C0((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v35 = a1;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A8780);
  v19 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v33 = v21;
  v34 = v20;
  v22 = qword_10119B8B8;
  v32 = (id)*v19;
  if (v22 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v23 = qword_10124C790;
  swift_retain();
  v24 = GroupActivitiesManager.hasJoined.getter();
  v25 = GroupActivitiesManager.participantsCount.getter();
  v26 = (uint64_t *)(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v37, 0, 0);
  v27 = *v26;

  swift_release();
  v30 = v27;
  v28 = v35;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v34, v33, 0, 0, v24 & 1, v35, v25, v30);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
  sub_10005B704((uint64_t)v28, (uint64_t)v11, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  swift_beginAccess(v15, v36, 33, 0);
  sub_1000A5508((uint64_t)v11, v15, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v36);
}

uint64_t sub_100631A94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v11 == a2 && v12 == a3)
    goto LABEL_7;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    strcpy((char *)v19, "Unknown kind=");
    HIWORD(v19[1]) = -4864;
    v15._countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v19[0], v19[1], "Music/LibraryTVEpisodesViewController.swift", 43, 2, 178, 0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_10063000C((uint64_t)v10);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v17 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v17;
}

void *sub_100631D10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = sub_100007E8C((uint64_t *)&unk_1011BEB08);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  sub_1008DE9F0(a2, (uint64_t)&v19 - v11);
  sub_100630200((uint64_t)v6);
  v13 = (void *)sub_1009242F8((uint64_t)v6, a2, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_10119FD80);
  v14 = type metadata accessor for TVEpisode(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v9, &qword_10119FD80);
    v19 = 0u;
    v20 = 0u;
    v21 = 0;
  }
  else
  {
    *((_QWORD *)&v20 + 1) = v14;
    v21 = sub_100048748(&qword_1011BEB20, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v16 = sub_100049F68(&v19);
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 32))(v16, v9, v14);
  }
  v17 = sub_1004E5AEC((uint64_t)&v19);

  sub_10004FF60((uint64_t)v12, &qword_10119FD80);
  sub_10004FF60((uint64_t)&v19, (uint64_t *)&unk_1011A3DD0);
  return v17;
}

uint64_t sub_100631FC8(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Class isa;
  char *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint8_t *v57;
  void (**v58)(char *, _QWORD, uint64_t);
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  objc_class *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void (**v126)(char *, _QWORD, uint64_t);
  uint8_t *v127;
  uint64_t v128;
  char *v129;
  char v130[24];
  __int128 v131;
  __int128 v132;
  uint64_t v133;

  v3 = v2;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v6);
  v121 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v113 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v107);
  v109 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v11);
  v119 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v13);
  v120 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v16 = *(_QWORD *)(v15 - 8);
  v122 = v15;
  v123 = v16;
  __chkstk_darwin(v15);
  v108 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v18);
  v116 = (uint64_t)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for PlaybackIntentDescriptor(0);
  v117 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v111 = (uint64_t)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = v20;
  __chkstk_darwin(v21);
  v112 = (uint64_t)&v103 - v22;
  v125 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v25 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v126 = *(void (***)(char *, _QWORD, uint64_t))(v128 - 8);
  __chkstk_darwin(v128);
  v27 = (char *)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v127 = (uint8_t *)&v103 - v29;
  v30 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v30);
  v106 = (uint64_t)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v124 = (char *)&v103 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v103 - v35;
  v37 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD **)(v37 - 8);
  __chkstk_darwin(v37);
  v118 = (uint8_t *)&v103 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v129 = (char *)&v103 - v41;
  v42 = a2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  v44 = v3;
  v45 = objc_msgSend(v3, "navigationItem");
  v46 = objc_msgSend(v45, "searchController");

  if (v46)
  {
    v47 = objc_msgSend(v46, "searchBar");

    objc_msgSend(v47, "resignFirstResponder");
  }
  v48 = *(_QWORD *)&v44[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController];
  sub_1008DE9F0(v42, (uint64_t)v36);
  v49 = (unsigned int (*)(char *, uint64_t, uint64_t))v38[6];
  if (v49(v36, 1, v37) == 1)
  {
    v50 = &qword_10119FD80;
    v51 = (uint64_t)v36;
    return sub_10004FF60(v51, v50);
  }
  v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
  v105 = v44;
  v53 = (void (*)(char *, char *, uint64_t))v38[4];
  v54 = v129;
  v53(v129, v36, v37);
  v55 = (void (*)(char *, char *, uint64_t))v38[2];
  v55(v25, v54, v37);
  v56 = v125;
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for GenericMusicItem.tvEpisode(_:), v125);
  v114 = v38;
  v57 = v127;
  sub_100545C34((uint64_t)v25, (uint64_t)v127);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v56);
  v58 = v126;
  v59 = v128;
  v126[13](v27, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v128);
  v60 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v57, v27);
  v61 = (void (*)(char *, uint64_t))v58[1];
  v61(v27, v59);
  if ((v60 & 1) != 0)
  {
    v126 = (void (**)(char *, _QWORD, uint64_t))v53;
    v62 = (uint64_t)v124;
    v63 = v129;
    v55(v124, v129, v37);
    v64 = v114;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v114[7])(v62, 0, 1, v37);
    v65 = v48 + *(_QWORD *)(*(_QWORD *)v48 + 96);
    swift_beginAccess(v65, v130, 0, 0);
    v66 = v119;
    sub_10005B704(v65, v119, _s10TVEpisodesVMa);
    v67 = v120;
    sub_1006681FC(v62, v120);
    v68 = v67;
    sub_10005B748(v66, _s10TVEpisodesVMa);
    v70 = v122;
    v69 = v123;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v68, 1, v122) == 1)
    {
      v71 = v64;
      v72 = v63;
      sub_10004FF60(v68, (uint64_t *)&unk_1011A3D60);
      v73 = 1;
      v74 = v117;
      v75 = v116;
      v76 = v115;
    }
    else
    {
      v82 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v108, v68, v70);
      v83 = (uint64_t)v109;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v109, v82, v70);
      swift_storeEnumTagMultiPayload(v83, v107, 1);
      v84 = v106;
      sub_10004A160(v62, v106, &qword_10119FD80);
      v85 = v104(v84, 1, v37);
      v86 = v105;
      v74 = v117;
      if (v85 == 1)
      {
        v87 = v37;
        sub_10004FF60(v84, &qword_10119FD80);
        v131 = 0u;
        v132 = 0u;
        v133 = 0;
      }
      else
      {
        *((_QWORD *)&v132 + 1) = v37;
        v133 = sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
        v88 = sub_100049F68(&v131);
        v87 = v37;
        ((void (*)(_QWORD *, uint64_t, uint64_t))v126)(v88, v84, v37);
      }
      v89 = v86;
      v102 = (objc_class *)v86;
      v75 = v116;
      PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v83, (uint64_t)&v131, 3, 0, 0, 1, 0, 1, v116, v102);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v82, v70);
      v73 = 0;
      v76 = v115;
      v37 = v87;
      v72 = v129;
      v71 = v114;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, v73, 1, v76);
    sub_10004FF60((uint64_t)v124, &qword_10119FD80);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v75, 1, v76) == 1)
    {
      v61((char *)v127, v128);
      ((void (*)(char *, uint64_t))v71[1])(v72, v37);
      v50 = &qword_1011A9A10;
      v51 = v75;
      return sub_10004FF60(v51, v50);
    }
    v126 = (void (**)(char *, _QWORD, uint64_t))v37;
    v90 = v112;
    sub_10005B6C0(v75, v112, type metadata accessor for PlaybackIntentDescriptor);
    v91 = type metadata accessor for TaskPriority(0);
    v92 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v113, 1, 1, v91);
    v93 = v111;
    sub_10005B704(v90, v111, type metadata accessor for PlaybackIntentDescriptor);
    type metadata accessor for MainActor(0);
    v95 = static MainActor.shared.getter(v94);
    v96 = *(unsigned __int8 *)(v74 + 80);
    v97 = (v96 + 32) & ~v96;
    v98 = (v110 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
    v99 = (v98 + 15) & 0xFFFFFFFFFFFFFFF8;
    v100 = swift_allocObject(&unk_1010D3A78, v99 + 16, v96 | 7);
    *(_QWORD *)(v100 + 16) = v95;
    *(_QWORD *)(v100 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v93, v100 + v97, type metadata accessor for PlaybackIntentDescriptor);
    *(_QWORD *)(v100 + v98) = 0;
    v101 = (_QWORD *)(v100 + v99);
    *v101 = 0;
    v101[1] = 0;
    sub_100166D14(v92, (uint64_t)&unk_1011A3D90, v100);
    swift_release();
    sub_10005B748(v90, type metadata accessor for PlaybackIntentDescriptor);
    v61((char *)v127, v128);
    return ((uint64_t (*)(char *, void (**)(char *, _QWORD, uint64_t)))v114[1])(v129, v126);
  }
  else
  {
    v77 = v118;
    v78 = v129;
    v55((char *)v118, v129, v37);
    v79 = type metadata accessor for IndexPath(0);
    v80 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v121, 1, 1, v79);
    sub_1008DC530(v80, (uint64_t)&v131);
    sub_10004FF60(v80, (uint64_t *)&unk_1011A3D50);
    sub_10096A61C(v57, v77, (uint64_t)&v131);
    sub_100064B4C((uint64_t)&v131);
    v61((char *)v57, v59);
    v81 = (void (*)(char *, uint64_t))v114[1];
    v81(v78, v37);
    return ((uint64_t (*)(uint8_t *, uint64_t))v81)(v77, v37);
  }
}

uint64_t sub_100632AC4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for TVEpisode(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_100744F2C((uint64_t)v5);
}

unint64_t sub_100632B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  char *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  _BYTE v49[72];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[10];
  _OWORD v54[10];
  _OWORD v55[6];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v23 = (char *)Strong;
  v47 = a4;
  v48 = v15;
  v24 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v24, &v51);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v26 = type metadata accessor for TVEpisode(0);
  *(_QWORD *)(inited + 56) = v26;
  *(_QWORD *)(inited + 64) = sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v27 = sub_100049F68((_QWORD *)(inited + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a3, v26);
  v28 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController]
      + *(_QWORD *)(**(_QWORD **)&v23[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController] + 96);
  swift_beginAccess(v28, &v50, 0, 0);
  sub_10005B704(v28, (uint64_t)v18, _s10TVEpisodesVMa);
  sub_100667B98((uint64_t)v21);
  sub_10005B748((uint64_t)v18, _s10TVEpisodesVMa);
  v29 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v21, 1, v29);
  if ((_DWORD)v31 == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3D60);
    v32 = 0;
  }
  else
  {
    v32 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v31);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v29);
  }
  v34 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v48, 1, 1, v34);
  v35 = v23;
  v36 = objc_msgSend(v35, "traitCollection");
  v37 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v55, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v37);

  v38 = *(_QWORD *)&v55[0];
  sub_10063163C(v12);
  v39 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v12, 0, 1, v39);
  memset(v55, 0, 80);
  v40 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v47, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v9, 0, 1, v40);
  sub_1008DC530((uint64_t)v9, (uint64_t)v49);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v42 = qword_10119B8C8;
  v43 = (id)qword_10124C798;
  if (v42 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v44 = qword_10124C7A0;
  swift_retain();
  v45 = (uint64_t)v48;
  sub_100495120(inited, v32, (unint64_t)v48, v38, v43, v44, (unint64_t)v12, (uint64_t)v55, v53, (uint64_t)v49, 1);
  sub_100065228((uint64_t)v53, (uint64_t)v54, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v54[0] + 1))
  {
    v54[7] = v54[2];
    v54[8] = v54[3];
    v54[9] = v54[4];
    v54[5] = v54[0];
    v54[6] = v54[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v33 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v53);
  }
  else
  {
    v33 = 0;
  }

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  sub_10004FF60((uint64_t)v49, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v45, (uint64_t *)&unk_1011A20C0);
  return v33;
}

uint64_t sub_10063328C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3A20);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3A30);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController) + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, &qword_1011A3A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011A3A20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008E0E70((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

uint64_t sub_1006335F8()
{
  return type metadata accessor for LibraryTVEpisodesViewController(0);
}

uint64_t type metadata accessor for LibraryTVEpisodesViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011BEAF0;
  if (!qword_1011BEAF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryTVEpisodesViewController);
  return result;
}

void sub_10063363C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, &qword_1011BEB00, (uint64_t *)&unk_1011BEB08);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = _s10TVEpisodesV5ScopeOMa(319);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v10[3] = "\b";
        v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
        v10[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v10[6] = "\b";
        v10[7] = "\b";
        sub_10017D9AC(319);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 9, v10, a1 + 80);
        }
      }
    }
  }
}

double sub_100633748()
{
  double v0;
  id v1;

  if (qword_10119C3D8 != -1)
    swift_once(&qword_10119C3D8, sub_10062EBE8);
  v0 = *(double *)&xmmword_1011BEA70;
  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v1, "displayScale");

  return v0;
}

uint64_t sub_1006337E8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BYTE v15[24];
  uint64_t v16[3];

  v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v15[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10018D478();
  UITraitCollection.subscript.getter(v16, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v11);

  v12 = sub_1007607C4(v16[0]);
  swift_bridgeObjectRelease();
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v16, 0, 0);
  sub_10005B704(v13, (uint64_t)v8, _s10TVEpisodesVMa);
  v8[*(int *)(v2 + 24)] = v12 & 1;
  sub_10005B704(v13, (uint64_t)v4, _s10TVEpisodesVMa);
  swift_beginAccess(v13, v15, 33, 0);
  sub_100633AE8((uint64_t)v8, v13);
  swift_endAccess(v15);
  sub_100180FC8(v4);
  sub_10005B748((uint64_t)v8, _s10TVEpisodesVMa);
  return sub_10005B748((uint64_t)v4, _s10TVEpisodesVMa);
}

uint64_t sub_100633978(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _QWORD v16[3];

  v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v15[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v16, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v11);

  v12 = v16[0];
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v16, 0, 0);
  sub_10005B704(v13, (uint64_t)v8, _s10TVEpisodesVMa);
  swift_release();
  *v8 = v12;
  sub_10005B704(v13, (uint64_t)v4, _s10TVEpisodesVMa);
  swift_beginAccess(v13, v15, 33, 0);
  sub_100633AE8((uint64_t)v8, v13);
  swift_endAccess(v15);
  sub_100180FC8(v4);
  sub_10005B748((uint64_t)v8, _s10TVEpisodesVMa);
  return sub_10005B748((uint64_t)v4, _s10TVEpisodesVMa);
}

uint64_t sub_100633AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10TVEpisodesVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100633B2C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26[8];
  char v27[24];

  v24 = a1;
  v2 = sub_100007E8C(&qword_1011BEB40);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3A30);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_responseController)
                  + 112);
  v14 = swift_beginAccess(v13, v27, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v16);
    v20 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&unk_1011ACBB0, &qword_1011BEB40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v25, v17, v21);
    v15 = dispatch thunk of Collection.distance(from:to:)(v26, &v25, v17, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v17);
    return v15;
  }
  __break(1u);
  return result;
}

id sub_100633D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  double v45;
  Class v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Class isa;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(uint64_t, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void **aBlock;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t (*v67)();
  uint64_t v68;

  v2 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVEpisode(0);
  v62 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v47 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v47 - v21;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v20);
    goto LABEL_6;
  }
  v58 = v19;
  v61 = v11;
  v23 = v5;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = a1 + ((v24 + 32) & ~v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v26(v14, v25, v15, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    v28 = (uint64_t *)&unk_1011A3D50;
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v57 = (void (*)(uint64_t, char *, uint64_t))v26;
  v56(v22, v14, v15);
  sub_1008DE9F0((uint64_t)v22, (uint64_t)v4);
  v27 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v4, 1, v23) != 1)
  {
    v51 = ~v24;
    v55 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v55(v61, v4, v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v48 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32 = v59;
    v48(v59, v61, v23);
    v33 = *(unsigned __int8 *)(v27 + 80);
    v34 = (v33 + 16) & ~v33;
    v49 = v33 | 7;
    v50 = swift_allocObject(&unk_1010D39B0, v34 + v6, v33 | 7);
    v55((char *)(v50 + v34), v32, v23);
    v35 = swift_allocObject(&unk_1010D39D8, 24, 7);
    v36 = v22;
    v53 = v22;
    v59 = (char *)v35;
    swift_unknownObjectWeakInit(v35 + 16);
    v37 = v23;
    v38 = v60;
    v52 = v37;
    v48(v60, v61, v37);
    v57((uint64_t)v58, v36, v15);
    v39 = (v33 + 24) & ~v33;
    v40 = (v6 + v24 + v39) & v51;
    v41 = swift_allocObject(&unk_1010D3A00, v40 + v17, v49 | v24);
    *(_QWORD *)(v41 + 16) = v59;
    v55((char *)(v41 + v39), v38, v37);
    v56((char *)(v41 + v40), v58, v15);
    v42 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v67 = sub_100634488;
    v68 = v50;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_1000FA900;
    v66 = &unk_1010D3A18;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v67 = sub_1006344DC;
    v68 = v41;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_100968BE4;
    v66 = &unk_1010D3A40;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    *(_QWORD *)&v45 = swift_release().n128_u64[0];
    v46 = isa;
    v30 = objc_msgSend(v42, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v43, v44, v45);

    swift_release();
    swift_release();
    _Block_release(v44);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v52);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    swift_release();
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  v28 = &qword_10119FD80;
  v29 = (uint64_t)v4;
LABEL_7:
  sub_10004FF60(v29, v28);
  return 0;
}

void sub_1006342C8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___headerRegistration];
  v3 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration];
  v5 = sub_100007E8C((uint64_t *)&unk_1011BEB08);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___collectionView] = 0;
  v6 = OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_prefetchingController;
  v7 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v6] = sub_1001EA3C8(0xD00000000000001ALL, 0x8000000100E40D60);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController_dragDropController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___searchController] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Music31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext];
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryTVEpisodesViewController.swift", 43, 2, 265, 0);
  __break(1u);
}

uint64_t sub_100634428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TVEpisode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100634488()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TVEpisode(0) - 8) + 80);
  return sub_100632AC4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1006344B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1006344E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1006344F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1006344F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

uint64_t sub_1006345E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100634604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100630CB4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10063460C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100630EE4(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10063461C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for TVEpisode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_1006346D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for TVEpisode(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_100632B34(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

void sub_100634750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10063090C(a1, a2, a3, a4, v4);
}

uint64_t sub_100634758@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = TVSeason.number.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100634788(uint64_t a1)
{
  uint64_t v1;

  return sub_10062FB48(a1, v1);
}

double sub_100634790(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10062FE64(a1, a2, v2);
}

uint64_t sub_100634798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100630410(a1, v2, a2);
}

uint64_t *sub_1006347A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = type metadata accessor for MusicSearchResultGroup(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011B11B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1006348BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for MusicSearchResultGroup(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *sub_100634930(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicSearchResultGroup(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = sub_100007E8C(&qword_1011B11B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100634A1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s4PageOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicSearchResultGroup(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_100007E8C(&qword_1011B11B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s4PageOMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BEBB8, (uint64_t)&_s4PageOMn);
}

void *sub_100634B34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicSearchResultGroup(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = sub_100007E8C(&qword_1011B11B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100634C20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s4PageOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicSearchResultGroup(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_100007E8C(&qword_1011B11B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_100634D24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EC5C78;
  sub_10015C698(319, (unint64_t *)&unk_1011BEBC8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSearchResultGroup);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
  }
}

void sub_100634DA4(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  int EnumCaseMultiPayload;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v3 = v2;
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s4PageOMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100041F44((uint64_t)_swiftEmptyArrayStorage);
  sub_10005B704(v3, (uint64_t)v11, _s4PageOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload == 3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    v25 = v12;
    sub_1005ECBC8(0x65736C6166, 0xE500000000000000, 0x6C75736552736168, 0xEA00000000007374, isUniquelyReferenced_nonNull_native);
    v12 = v25;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v14 = swift_isUniquelyReferenced_nonNull_native(v12);
    v25 = v12;
    sub_1005ECBC8(1702195828, 0xE400000000000000, 0x6C75736552736168, 0xEA00000000007374, v14);
    v12 = v25;
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10004FF60((uint64_t)v11, &qword_1011B11B0);
  }
  else
  {
    sub_10005B748((uint64_t)v11, _s4PageOMa);
  }
  v16 = 0x7972617262696CLL;
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C61746163, 0xE700000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    v16 = 0x676F6C61746163;
    if ((v17 & 1) == 0)
      goto LABEL_11;
  }
  v18 = swift_isUniquelyReferenced_nonNull_native(v12);
  v25 = v12;
  sub_1005ECBC8(v16, 0xE700000000000000, 0xD000000000000014, 0x8000000100E40E20, v18);
  v12 = v25;
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_11:
  sub_100635070();
  v20 = v19;
  v22 = v21;
  v23 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v20, v22, 0x686372616553, 0xE600000000000000, (uint64_t)v8, v12, 0, 0, a2);
}

void sub_100635070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = _s4PageOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_10063516C + 4 * byte_100EC5C18[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10063516C()
{
  _BYTE *v0;

  if (*v0)
    return 0x72617453646C6F63;
  else
    return 0x746E65636572;
}

uint64_t sub_1006352B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1006352E0 + 4 * byte_100EC5C1D[a1]))(6579297, 0xE300000000000000);
}

uint64_t sub_1006352E0()
{
  return 0x75516C65636E6163;
}

uint64_t sub_100635300()
{
  return 0x7865547261656C63;
}

uint64_t sub_10063531C()
{
  return 0x686372616573;
}

uint64_t sub_100635330()
{
  return 0x7463656C6573;
}

unint64_t sub_100635344()
{
  return 0xD000000000000015;
}

uint64_t sub_100635360()
{
  return 0x7463416570697773;
}

void sub_100635380(char *a1)
{
  sub_1005D05BC(*a1);
}

void sub_10063538C()
{
  char *v0;

  sub_100591044(0, *v0);
}

void sub_100635398(uint64_t a1)
{
  char *v1;

  sub_100044744(a1, *v1);
}

void sub_1006353A0(uint64_t a1)
{
  char *v1;

  sub_100591044(a1, *v1);
}

unint64_t sub_1006353A8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1006387D4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006353D4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1006352B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1006353FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  char *v15;
  _QWORD v16[22];

  v1 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v1);
  v16[4] = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v16[5] = (char *)v16 - v4;
  v5 = type metadata accessor for MusicSearchResultGroup(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for GenericMusicItem(0);
  v16[2] = *(_QWORD *)(v6 - 8);
  v16[3] = v6;
  __chkstk_darwin(v6);
  v16[1] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s5EventO4ItemOMa(0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  v11 = _s5EventOMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v13, v14);
  v15 = (char *)sub_1006355D0 + 4 * byte_100EC5C24[swift_getEnumCaseMultiPayload(v13, v11)];
  __asm { BR              X10 }
}

uint64_t sub_1006355D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)())((char *)sub_1006355F8 + 4 * byte_100EC5C2A[*v0]))();
}

uint64_t sub_1006355F8()
{
  return 0x75516C65636E6163;
}

uint64_t sub_100635994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v14;

  v1 = _s5EventO4ItemOMa(0);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - v3;
  v5 = _s5EventOMa(0);
  __chkstk_darwin(v5);
  v7 = (unsigned __int8 *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
  if (EnumCaseMultiPayload == 4)
  {
    v11 = *v7;
    swift_bridgeObjectRelease(*((_QWORD *)v7 + 2));
    if (v11 == 22)
      v12 = 12;
    else
      v12 = 5;
    if (v11 == 21)
      return 11;
    else
      return v12;
  }
  else if (EnumCaseMultiPayload == 3)
  {
    sub_10005B748((uint64_t)v7, _s5EventOMa);
    return 9;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v10 = v7[*(int *)(sub_100007E8C(&qword_1011BEBF8) + 48)];
      sub_1006373D8((uint64_t)v7, (uint64_t)v4);
      __asm { BR              X10 }
    }
    sub_10005B748((uint64_t)v7, _s5EventOMa);
    return 5;
  }
}

void sub_100635D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = type metadata accessor for GenericMusicItem(0);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = _s5EventO4ItemOMa(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = _s5EventOMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v7, v8);
  v9 = (char *)sub_100635E5C + 4 * byte_100EC5C3E[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

unint64_t sub_100635E5C()
{
  _BYTE *v0;

  return 0x220B22270E0703uLL >> (8 * *v0);
}

uint64_t sub_100636068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = _s5EventOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload == 4)
  {
    swift_bridgeObjectRelease(*((_QWORD *)v3 + 2));
  }
  else if (EnumCaseMultiPayload)
  {
    sub_10005B748((uint64_t)v3, _s5EventOMa);
  }
  return 0;
}

unint64_t sub_100636134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE v35[96];
  _BYTE v36[72];

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = _s5EventO4ItemOMa(0);
  __chkstk_darwin(v5);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v35[-v9];
  v11 = _s5EventOMa(0);
  __chkstk_darwin(v11);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10005B704(v0, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload != 4)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v16 = sub_100007E8C(&qword_1011BEBF8);
      v17 = v13[*(int *)(v16 + 48)];
      v18 = v13[*(int *)(v16 + 64)];
      sub_1006373D8((uint64_t)v13, (uint64_t)v10);
      v19 = sub_100041F44((uint64_t)_swiftEmptyArrayStorage);
      v20 = v19;
      if (v18 == 1)
      {
        swift_bridgeObjectRelease(v19);
        sub_100041F44((uint64_t)&off_1010ABF88);
      }
      else
      {
        sub_10005B704((uint64_t)v10, (uint64_t)v7, _s5EventO4ItemOMa);
        if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
        {
          v26 = swift_bridgeObjectRelease(v20);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v2 + 32))(v4, v7, v1, v26);
          v27 = sub_100007E8C(&qword_1011AD3F0);
          inited = swift_initStackObject(v27, v35);
          *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
          *(_QWORD *)(inited + 32) = 1684957547;
          *(_QWORD *)(inited + 40) = 0xE400000000000000;
          *(_QWORD *)(inited + 48) = sub_100636628();
          *(_QWORD *)(inited + 56) = v29;
          *(_QWORD *)(inited + 64) = 0x614E747369747261;
          *(_QWORD *)(inited + 72) = 0xEA0000000000656DLL;
          v30 = sub_100636BE4();
          v32 = 16718;
          if (v31)
            v32 = v30;
          v33 = 0xE200000000000000;
          if (v31)
            v33 = v31;
          *(_QWORD *)(inited + 80) = v32;
          *(_QWORD *)(inited + 88) = v33;
          sub_100041F44(inited);
          (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
        }
        else
        {
          swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
        }
      }
      __asm { BR              X9 }
    }
    sub_10005B748((uint64_t)v13, _s5EventOMa);
    return 0;
  }
  v21 = *((_QWORD *)v13 + 2);
  if (!v21)
    return 0;
  v22 = *((_QWORD *)v13 + 1);
  v23 = sub_100007E8C(&qword_1011AD3F0);
  v24 = swift_initStackObject(v23, v36);
  *(_OWORD *)(v24 + 16) = xmmword_100EA7AA0;
  strcpy((char *)(v24 + 32), "searchPrefix");
  *(_BYTE *)(v24 + 45) = 0;
  *(_WORD *)(v24 + 46) = -5120;
  *(_QWORD *)(v24 + 48) = v22;
  *(_QWORD *)(v24 + 56) = v21;
  return sub_100041F44(v24);
}

uint64_t sub_100636628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v8;
  int v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x6D75626C61;
  }
  else if (v6 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x747369747261;
  }
  else if (v6 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7265736F706D6F63;
  }
  else if (v6 == enum case for GenericMusicItem.creditArtist(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7241746964657263;
  }
  else if (v6 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x726F7461727563;
  }
  else if (v6 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x6169726F74696465;
  }
  else if (v6 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x65726E6567;
  }
  else if (v6 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x766F4D636973756DLL;
  }
  else if (v6 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x646956636973756DLL;
  }
  else if (v6 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7473696C79616C70;
  }
  else if (v6 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x6F68536F69646172;
  }
  else if (v6 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x614C64726F636572;
  }
  else if (v6 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x72506C6169636F73;
  }
  else if (v6 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1735290739;
  }
  else if (v6 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x6E6F6974617473;
  }
  else
  {
    v8 = v6;
    if (v6 == enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0x646F736970457674;
    }
    else if (v6 == enum case for GenericMusicItem.tvSeason(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0x6E6F736165537674;
    }
    else if (v6 == enum case for GenericMusicItem.tvShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0x776F68537674;
    }
    else if (v6 == enum case for GenericMusicItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0x646564616F6C7075;
    }
    else if (v6 == enum case for GenericMusicItem.uploadedVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0x646564616F6C7075;
    }
    else
    {
      v9 = enum case for GenericMusicItem.other(_:);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v8 == v9)
        return 0x726568746FLL;
      else
        return 16718;
    }
  }
}

uint64_t sub_100636BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for Album(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  __chkstk_darwin(v6);
  v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  __chkstk_darwin(v8);
  v30 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artist(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GenericMusicItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v17, v2);
    v20 = Album.artistName.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22 = v5;
LABEL_10:
    v21(v22, v2);
    return v20;
  }
  if (v18 != enum case for GenericMusicItem.artist(_:))
  {
    if (v18 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      v24 = v33;
      v25 = v34;
      v2 = v35;
      v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(v33, v17, v35);
      v27 = MusicVideo.artistName.getter(v26);
    }
    else
    {
      if (v18 != enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      v24 = v30;
      v25 = v31;
      v2 = v32;
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v30, v17, v32);
      v27 = Song.artistName.getter(v28);
    }
    v20 = v27;
    v21 = *(void (**)(char *, uint64_t))(v25 + 8);
    v22 = v24;
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
  v20 = Artist.name.getter(v23);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20;
}

uint64_t sub_100636EDC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v32 = a2;
  v33 = a4;
  v5 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - v9;
  sub_1006353FC();
  v29 = v12;
  v30 = v11;
  v28 = sub_100635994();
  sub_100635D1C();
  v27 = v13;
  v14 = type metadata accessor for URL(0);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v10, 1, 1, v14);
  sub_100636068();
  v26 = v16;
  v17 = sub_100636134();
  v19 = v18;
  v21 = *a1;
  v20 = a1[1];
  v23 = a1[2];
  v22 = a1[3];
  v15(v7, 1, 1, v14);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v30, v29, v28, v27, (uint64_t)v10, 0, 0, v26, v33, v17, 0, v19, v21, v20, v23, v22, (uint64_t)v7, 0, 1,
    0,
    v32,
    v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100637060(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  int EnumCaseMultiPayload;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  void (*v31)(_QWORD *, uint64_t, unint64_t, uint64_t, _QWORD, _QWORD);
  id v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s5EventOMa(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v19, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if (EnumCaseMultiPayload == 2)
  {
    v25 = *a2;
    v26 = a2[1];
    v38 = a3;
    v27 = a2[2];
    v28 = a2[3];
    v29 = type metadata accessor for MetricsPageProperties(0);
    sub_10004A160((uint64_t)a2 + *(int *)(v29 + 24), (uint64_t)v10, &qword_10119E460);
    MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)(v25, v26, v27, v28, (uint64_t)v10, *(uint64_t *)((char *)a2 + *(int *)(v29 + 28)), v38, a4, v13, 1, 0, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = (id *)MetricsReportingController.shared.unsafeMutableAddressor();
    v31 = *(void (**)(_QWORD *, uint64_t, unint64_t, uint64_t, _QWORD, _QWORD))((swift_isaMask & *(_QWORD *)*v30)
                                                                                              + 0xA0);
    v32 = *v30;
    v31(v13, 0x686372616553, 0xE600000000000000, 2, 0, 0);

    v33 = type metadata accessor for MetricsEvent.Page;
    v34 = (uint64_t)v13;
LABEL_6:
    sub_10005B748(v34, v33);
    v23 = _s5EventOMa;
    v24 = (uint64_t)v19;
    return sub_10005B748(v24, v23);
  }
  if (EnumCaseMultiPayload != 4)
  {
    v35 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100636EDC(a2, a3, a4, (uint64_t)v16);
    (*(void (**)(char *, uint64_t, unint64_t, uint64_t, _QWORD, _QWORD))((swift_isaMask & *v35) + 0xB8))(v16, 0x686372616553, 0xE600000000000000, 2, 0, 0);

    v33 = type metadata accessor for MetricsEvent.Click;
    v34 = (uint64_t)v16;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(*((_QWORD *)v19 + 2));
  v22 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100636EDC(a2, a3, a4, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, unint64_t))((swift_isaMask & *v22) + 0xB0))(v16, 0x686372616553, 0xE600000000000000);

  v23 = type metadata accessor for MetricsEvent.Click;
  v24 = (uint64_t)v16;
  return sub_10005B748(v24, v23);
}

uint64_t _s5EventOMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BED18, (uint64_t)&_s5EventOMn);
}

uint64_t _s5EventO4ItemOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BEC70, (uint64_t)&_s5EventO4ItemOMn);
}

uint64_t sub_1006373D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5EventO4ItemOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s5EventO6ActionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100637468 + 4 * byte_100EC5C57[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10063749C + 4 * byte_100EC5C52[v4]))();
}

uint64_t sub_10063749C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006374A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006374ACLL);
  return result;
}

uint64_t sub_1006374B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006374C0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1006374C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006374CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5EventO6ActionOMa()
{
  return &_s5EventO6ActionON;
}

uint64_t *sub_1006374E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1006375A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v3 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_1006375F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_100637684(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s5EventO4ItemOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_100637734(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s5EventO4ItemOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006377D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EC5CA0;
  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_100637848(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v8 = _s5EventO4ItemOMa(0);
        if (swift_getEnumCaseMultiPayload(a2, v8) == 1)
        {
          v9 = type metadata accessor for GenericMusicItem(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
          v10 = a1;
          v11 = v8;
          v12 = 1;
        }
        else
        {
          v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          swift_bridgeObjectRetain();
          v10 = a1;
          v11 = v8;
          v12 = 0;
        }
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        v21 = sub_100007E8C(&qword_1011BEBF8);
        *((_BYTE *)a1 + *(int *)(v21 + 48)) = *((_BYTE *)a2 + *(int *)(v21 + 48));
        *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v15 = _s4PageOMa(0);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          v17 = sub_100007E8C(&qword_1011B17E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(a2, v15) == 1)
          {
            v22 = type metadata accessor for MusicSearchResultGroup(0);
            v23 = *(_QWORD *)(v22 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
            {
              v24 = sub_100007E8C(&qword_1011B11B0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(a1, a2, v22);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
            }
            swift_storeEnumTagMultiPayload(a1, v15, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(v16 + 64));
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v18 = type metadata accessor for MusicSearchResultGroup(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v19 = a2[2];
        a1[1] = a2[1];
        a1[2] = v19;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

double sub_100637B1C(uint64_t a1, uint64_t a2)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 1u:
      v4 = _s5EventO4ItemOMa(0);
      if (swift_getEnumCaseMultiPayload(a1, v4) != 1)
        goto LABEL_11;
      v5 = type metadata accessor for GenericMusicItem(0);
      goto LABEL_9;
    case 2u:
      v6 = _s4PageOMa(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
        return result;
      if (swift_getEnumCaseMultiPayload(a1, v6) != 1)
        return result;
      v7 = type metadata accessor for MusicSearchResultGroup(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7))
        return result;
      v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v11 = a1;
      v9 = v7;
LABEL_10:
      v10(v11, v9);
      return result;
    case 3u:
      v5 = type metadata accessor for MusicSearchResultGroup(0);
LABEL_9:
      v9 = v5;
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v11 = a1;
      goto LABEL_10;
    case 4u:
LABEL_11:
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      return result;
    default:
      return result;
  }
}

_QWORD *sub_100637C48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = _s5EventO4ItemOMa(0);
      if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
      {
        v7 = type metadata accessor for GenericMusicItem(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = a1;
        v9 = v6;
        v10 = 1;
      }
      else
      {
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        swift_bridgeObjectRetain();
        v8 = a1;
        v9 = v6;
        v10 = 0;
      }
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      v20 = sub_100007E8C(&qword_1011BEBF8);
      *((_BYTE *)a1 + *(int *)(v20 + 48)) = *((_BYTE *)a2 + *(int *)(v20 + 48));
      *((_BYTE *)a1 + *(int *)(v20 + 64)) = *((_BYTE *)a2 + *(int *)(v20 + 64));
      v15 = a1;
      v16 = a3;
      v17 = 1;
      goto LABEL_19;
    case 2u:
      v11 = _s4PageOMa(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011B17E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
        {
          v21 = type metadata accessor for MusicSearchResultGroup(0);
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21))
          {
            v23 = sub_100007E8C(&qword_1011B11B0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(a1, a2, v21);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
          }
          swift_storeEnumTagMultiPayload(a1, v11, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(v12 + 64));
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v15 = a1;
      v16 = a3;
      v17 = 2;
      goto LABEL_19;
    case 3u:
      v14 = type metadata accessor for MusicSearchResultGroup(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = a1;
      v16 = a3;
      v17 = 3;
      goto LABEL_19;
    case 4u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v18 = a2[2];
      a1[1] = a2[1];
      a1[2] = v18;
      swift_bridgeObjectRetain();
      v15 = a1;
      v16 = a3;
      v17 = 4;
LABEL_19:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_100637EE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s5EventOMa);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v6 = _s5EventO4ItemOMa(0);
        if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
        {
          v7 = type metadata accessor for GenericMusicItem(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
          v8 = a1;
          v9 = v6;
          v10 = 1;
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          v8 = a1;
          v9 = v6;
          v10 = 0;
        }
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        v18 = sub_100007E8C(&qword_1011BEBF8);
        *((_BYTE *)a1 + *(int *)(v18 + 48)) = *((_BYTE *)a2 + *(int *)(v18 + 48));
        *((_BYTE *)a1 + *(int *)(v18 + 64)) = *((_BYTE *)a2 + *(int *)(v18 + 64));
        v15 = a1;
        v16 = a3;
        v17 = 1;
        goto LABEL_20;
      case 2u:
        v11 = _s4PageOMa(0);
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        {
          v13 = sub_100007E8C(&qword_1011B17E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
          {
            v19 = type metadata accessor for MusicSearchResultGroup(0);
            v20 = *(_QWORD *)(v19 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
            {
              v21 = sub_100007E8C(&qword_1011B11B0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(a1, a2, v19);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
            }
            swift_storeEnumTagMultiPayload(a1, v11, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(v12 + 64));
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v15 = a1;
        v16 = a3;
        v17 = 2;
        goto LABEL_20;
      case 3u:
        v14 = type metadata accessor for MusicSearchResultGroup(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = a1;
        v16 = a3;
        v17 = 3;
        goto LABEL_20;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        v15 = a1;
        v16 = a3;
        v17 = 4;
LABEL_20:
        swift_storeEnumTagMultiPayload(v15, v16, v17);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1006381B0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = type metadata accessor for MusicSearchResultGroup(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = a1;
      v11 = a3;
      v12 = 3;
LABEL_20:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      return a1;
    case 2:
      v13 = _s4PageOMa(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        v15 = sub_100007E8C(&qword_1011B17E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
        {
          v17 = type metadata accessor for MusicSearchResultGroup(0);
          v18 = *(_QWORD *)(v17 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
          {
            v19 = sub_100007E8C(&qword_1011B11B0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(a1, a2, v17);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
          }
          swift_storeEnumTagMultiPayload(a1, v13, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(v14 + 64));
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      v10 = a1;
      v11 = a3;
      v12 = 2;
      goto LABEL_20;
    case 1:
      v7 = _s5EventO4ItemOMa(0);
      if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
      {
        v8 = type metadata accessor for GenericMusicItem(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload(a1, v7, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      v16 = sub_100007E8C(&qword_1011BEBF8);
      *((_BYTE *)a1 + *(int *)(v16 + 48)) = *((_BYTE *)a2 + *(int *)(v16 + 48));
      *((_BYTE *)a1 + *(int *)(v16 + 64)) = *((_BYTE *)a2 + *(int *)(v16 + 64));
      v10 = a1;
      v11 = a3;
      v12 = 1;
      goto LABEL_20;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_10063841C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s5EventOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v9 = type metadata accessor for MusicSearchResultGroup(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = a1;
        v11 = a3;
        v12 = 3;
LABEL_21:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        return a1;
      case 2:
        v13 = _s4PageOMa(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          v15 = sub_100007E8C(&qword_1011B17E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
          {
            v17 = type metadata accessor for MusicSearchResultGroup(0);
            v18 = *(_QWORD *)(v17 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
            {
              v19 = sub_100007E8C(&qword_1011B11B0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(a1, a2, v17);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
            }
            swift_storeEnumTagMultiPayload(a1, v13, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(v14 + 64));
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        v10 = a1;
        v11 = a3;
        v12 = 2;
        goto LABEL_21;
      case 1:
        v7 = _s5EventO4ItemOMa(0);
        if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
        {
          v8 = type metadata accessor for GenericMusicItem(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          swift_storeEnumTagMultiPayload(a1, v7, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        v16 = sub_100007E8C(&qword_1011BEBF8);
        *((_BYTE *)a1 + *(int *)(v16 + 48)) = *((_BYTE *)a2 + *(int *)(v16 + 48));
        *((_BYTE *)a1 + *(int *)(v16 + 64)) = *((_BYTE *)a2 + *(int *)(v16 + 64));
        v10 = a1;
        v11 = a3;
        v12 = 1;
        goto LABEL_21;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1006386A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[32];
  _QWORD v9[6];

  v9[0] = &unk_100EC5CC0;
  v2 = _s5EventO4ItemOMa(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v8, *(_QWORD *)(v2 - 8) + 64, &unk_100EC5CC0, &unk_100EC5C78);
    v9[1] = v8;
    sub_10015C698(319, (unint64_t *)&unk_1011BED28, _s4PageOMa);
    if (v5 <= 0x3F)
    {
      v9[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for MusicSearchResultGroup(319);
      if (v7 <= 0x3F)
      {
        v9[3] = *(_QWORD *)(v6 - 8) + 64;
        v9[4] = &unk_100EC5CD8;
        v9[5] = &unk_100EC5C78;
        swift_initEnumMetadataMultiPayload(a1, 256, 6, v9);
      }
    }
  }
}

unint64_t sub_100638790()
{
  unint64_t result;

  result = qword_1011BED58;
  if (!qword_1011BED58)
  {
    result = swift_getWitnessTable(&unk_100EC5D68, &_s5EventO6ActionON);
    atomic_store(result, (unint64_t *)&qword_1011BED58);
  }
  return result;
}

unint64_t sub_1006387D4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ACE40, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_10063881C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v10 = a2[3];
    v11 = *((_BYTE *)a2 + 32);
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v12 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v12;
    v13 = a3[7];
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = type metadata accessor for Playlist(0);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    v18 = swift_retain();
    v17(v14, v15, v16, v18);
    v19 = a3[8];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = a3[9];
    v24 = a1 + v23;
    v25 = (uint64_t)a2 + v23;
    v26 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t sub_100638950(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_release();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[9];
  v9 = type metadata accessor for Song(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_1006389FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Playlist(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  v16 = swift_retain();
  v15(v12, v13, v14, v16);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t sub_100638B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v7, v8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  sub_1000A6174(v10, v11);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t sub_100638C20(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t sub_100638CF4(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v6;
  sub_1000A6174(v7, v8);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_release();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_100638DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100638DF8);
}

uint64_t sub_100638DF8(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = type metadata accessor for Playlist.Entry(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = type metadata accessor for Song(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100638EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100638EC8);
}

char *sub_100638EC8(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = type metadata accessor for Playlist.Entry(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for Song(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s12SongCellViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011BEDB8;
  if (!qword_1011BEDB8)
    return swift_getSingletonMetadata(a1, &_s12SongCellViewVMn);
  return result;
}

uint64_t sub_100638FC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = (char *)&value witness table for () + 64;
  v6[1] = &unk_100EC5DA0;
  v6[2] = &unk_100EC5DB8;
  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist.Entry(319);
    if (v4 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Song(319);
      if (v5 <= 0x3F)
      {
        v6[5] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100639088(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA79D8, 1);
}

uint64_t sub_100639098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __n128 v5;
  _QWORD v7[4];
  _BYTE v8[16];
  uint64_t v9;

  v9 = a1;
  v7[2] = a1;
  v1 = sub_100007E8C(&qword_1011BEE10);
  v2 = sub_100007E8C(&qword_1011BEE18);
  v3 = sub_100049F28(&qword_1011BEE20, &qword_1011BEE10, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v4 = sub_100639EB0();
  return Label.init(title:icon:)(sub_100639EA0, v8, sub_100639EA8, v7, v1, v2, v3, v4, v5);
}

double sub_100639140@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  double result;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t KeyPath;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[167];

  v19 = static HorizontalAlignment.leading.getter(a1);
  v3 = _s12SongCellViewVMa(0);
  *(_QWORD *)v34 = Song.title.getter(v3);
  *(_QWORD *)&v34[8] = v4;
  v5 = sub_100055B68();
  v20 = Text.init<A>(_:)(v34, &type metadata for String, v5);
  v21 = v6;
  v22 = v7 & 1;
  KeyPath = swift_getKeyPath(&unk_100EC5E68);
  v8 = static Alignment.leading.getter(KeyPath);
  sub_100149FFC(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v34, v10, 0.0, 1, 0.0, 1, v8, v9);
  sub_100055BAC(v20, v21, v22);
  swift_release();
  swift_bridgeObjectRelease();
  v31 = *(_OWORD *)&v34[112];
  v32 = *(_OWORD *)&v34[128];
  v33 = *(_OWORD *)&v34[144];
  v26 = *(_OWORD *)&v34[32];
  v27 = *(_OWORD *)&v34[48];
  v28 = *(_OWORD *)&v34[64];
  v29 = *(_OWORD *)&v34[80];
  v30 = *(_OWORD *)&v34[96];
  v24 = *(_OWORD *)v34;
  v25 = *(_OWORD *)&v34[16];
  v11 = swift_getKeyPath(&unk_100EC5E98);
  *(_OWORD *)&v34[119] = v31;
  *(_OWORD *)&v34[103] = v30;
  *(_OWORD *)&v34[135] = v32;
  *(_OWORD *)&v34[151] = v33;
  *(_OWORD *)&v34[39] = v26;
  *(_OWORD *)&v34[55] = v27;
  *(_OWORD *)&v34[71] = v28;
  *(_OWORD *)&v34[87] = v29;
  *(_OWORD *)&v34[7] = v24;
  *(_OWORD *)&v34[23] = v25;
  v12 = *(_OWORD *)&v34[96];
  *(_OWORD *)(a2 + 129) = *(_OWORD *)&v34[112];
  v13 = *(_OWORD *)&v34[144];
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v34[128];
  *(_OWORD *)(a2 + 161) = v13;
  v14 = *(_OWORD *)&v34[32];
  *(_OWORD *)(a2 + 65) = *(_OWORD *)&v34[48];
  v15 = *(_OWORD *)&v34[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v34[64];
  *(_OWORD *)(a2 + 97) = v15;
  *(_OWORD *)(a2 + 113) = v12;
  result = *(double *)v34;
  v17 = *(_OWORD *)&v34[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v34;
  *(_OWORD *)(a2 + 33) = v17;
  v18 = *(_QWORD *)&v34[159];
  *(_OWORD *)(a2 + 49) = v14;
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 176) = v18;
  *(_QWORD *)(a2 + 184) = v11;
  *(_QWORD *)(a2 + 192) = 2;
  *(_BYTE *)(a2 + 200) = 0;
  return result;
}

uint64_t sub_100639344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[48];
  _BYTE v42[208];
  _OWORD v43[13];
  __int128 v44;

  v37 = a1;
  v40 = a2;
  v2 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011A0D80);
  __chkstk_darwin(v36);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s12SongCellViewVMa(0);
  v17 = type metadata accessor for Song(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v17, (uint64_t)&protocol witness table for Song, v10);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 10, v18);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v41);
  v20 = v38;
  v19 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v4, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v39);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v7, (uint64_t)v41, (uint64_t)v4, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v19);
  sub_10034A01C((uint64_t)v7);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3E10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v21 = &v16[*(int *)(v36 + 36)];
  *(_QWORD *)v21 = 0;
  *((_WORD *)v21 + 4) = 257;
  v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v23 = static Alignment.center.getter(v22);
  v25 = v24;
  sub_1006396B4(v37, (uint64_t)v43);
  sub_100639F34((uint64_t)v43, (uint64_t)v42);
  sub_100639F34((uint64_t)v42, (uint64_t)v43);
  *(_QWORD *)&v44 = v23;
  *((_QWORD *)&v44 + 1) = v25;
  v26 = v40;
  sub_100639F7C((uint64_t)v16, v40);
  v27 = (_OWORD *)(v26 + *(int *)(sub_100007E8C(&qword_1011BEE18) + 36));
  v28 = v43[11];
  v27[10] = v43[10];
  v27[11] = v28;
  v29 = v44;
  v27[12] = v43[12];
  v27[13] = v29;
  v30 = v43[7];
  v27[6] = v43[6];
  v27[7] = v30;
  v31 = v43[9];
  v27[8] = v43[8];
  v27[9] = v31;
  v32 = v43[3];
  v27[2] = v43[2];
  v27[3] = v32;
  v33 = v43[5];
  v27[4] = v43[4];
  v27[5] = v33;
  v34 = v43[1];
  *v27 = v43[0];
  v27[1] = v34;
  return sub_10004FF60((uint64_t)v16, &qword_1011A0D80);
}

uint64_t sub_1006396B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  uint64_t v38;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  __int128 v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)();
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[26];
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  unsigned __int8 v101;
  uint64_t v102;
  uint64_t v103;

  v63 = a2;
  v3 = _s12SongCellViewVMa(0);
  v62 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(v3);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = _s20PlaybackStateManagerCMa(0);
  v9 = sub_100639FC4();
  StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v10 = *(int *)(v3 + 28);
  v11 = *(int *)(v3 + 32);
  KeyPath = swift_getKeyPath(&unk_100EC5E20);
  v13 = swift_getKeyPath(&unk_100EC5E48);
  swift_retain();
  static Published.subscript.getter(v97, v14, KeyPath, v13);
  swift_release();
  swift_release();
  swift_release();
  v15 = (void *)v97[0];
  if (!v97[0])
  {
    swift_release();
LABEL_10:
    sub_10063A12C(&v72);
    goto LABEL_11;
  }
  v16 = MPCPlayerResponse.playState(for:in:)(a1 + v11, a1 + v10);
  v18 = v17;
  swift_release();

  if ((v18 & 1) != 0 || !v16)
    goto LABEL_10;
  static Color.black.getter(v19);
  v20 = Color.opacity(_:)(0.5);
  swift_release();
  v22 = static Alignment.center.getter(v21);
  sub_10014AC40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v72, 0.0, 1, INFINITY, 0, v22, v23, v20);
  swift_release();
  v61 = *((_QWORD *)&v72 + 1);
  v51 = v72;
  v60 = v73;
  v59 = v74;
  v58 = v75;
  v57 = v76;
  v56 = v77;
  v55 = v78;
  v54 = v79;
  v53 = v80;
  v52 = v81;
  v50 = v82;
  v49 = v83;
  v47 = v85;
  v48 = v84;
  v24 = sub_100590094();
  v46 = v24;
  if (qword_10119B860 != -1)
    v24 = swift_once(&qword_10119B860, sub_100065360);
  v25 = qword_10124C6E0;
  if (qword_10119B868 != -1)
    v24 = swift_once(&qword_10119B868, sub_100065374);
  v26 = qword_10124C6E8;
  v27 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(&v98, v25, 0, v26, 0, v27, v28);
  LOBYTE(v26) = v99;
  v44 = v100;
  v45 = v98;
  v29 = v101;
  v40 = v99;
  v41 = v101;
  v42 = v103;
  v43 = v102;
  sub_100639DD0(a1, (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = *(unsigned __int8 *)(v62 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_1010D3C30, v31 + v4, v30 | 7);
  sub_100639E18((uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31);
  LOBYTE(v31) = v60;
  v71 = v60;
  v33 = v58;
  v70 = v58;
  v34 = v56;
  v69 = v56;
  v35 = v54;
  v68 = v54;
  v36 = v52;
  v67 = v52;
  v37 = v49;
  v66 = v49;
  v65 = v26;
  v64 = v29;
  v38 = v51;
  swift_retain();
  sub_100048AAC((uint64_t)sub_10063A100, v32);
  sub_100048AAC(0, 0);
  sub_10004BA30((uint64_t)sub_10063A100, v32);
  sub_10004BA30(0, 0);
  swift_release();
  *(_QWORD *)&v72 = v38;
  *((_QWORD *)&v72 + 1) = v61;
  v73 = v31;
  v74 = v59;
  v75 = v33;
  v76 = v57;
  v77 = v34;
  v78 = v55;
  v79 = v35;
  v80 = v53;
  v81 = v36;
  v82 = v50;
  v83 = v37;
  v84 = v48;
  v85 = v47;
  v86 = v46;
  v87 = v45;
  v88 = v40;
  v89 = v44;
  v90 = v41;
  v91 = v43;
  v92 = v42;
  v93 = sub_10063A100;
  v94 = v32;
  v95 = 0;
  v96 = 0;
  UIScreen.Dimensions.size.getter(&v72);
LABEL_11:
  sub_100639F34((uint64_t)&v72, (uint64_t)v97);
  return sub_100639F34((uint64_t)v97, v63);
}

uint64_t sub_100639B2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  v11 = _s20PlaybackStateManagerCMa(0);
  v12 = sub_100639FC4();
  StateObject.wrappedValue.getter(v8, v9, v10, v11, v12);
  v13 = _s12SongCellViewVMa(0);
  v14 = a1 + *(int *)(v13 + 32);
  v15 = type metadata accessor for Playlist.Entry(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v7, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
  v17 = a1 + *(int *)(v13 + 28);
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v4, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v4, 0, 1, v18);
  sub_1003B5938((uint64_t)v7, (uint64_t)v4);
  swift_release();
  sub_10004FF60((uint64_t)v4, &qword_1011A30F0);
  return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011B59A0);
}

uint64_t sub_100639CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(a1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100639DD0(v1, (uint64_t)v4);
  v5 = *(unsigned __int8 *)(v2 + 80);
  v6 = (v5 + 16) & ~v5;
  v7 = swift_allocObject(&unk_1010D3C08, v6 + v3, v5 | 7);
  sub_100639E18((uint64_t)v4, v7 + v6);
  v12 = v1;
  v8 = sub_100007E8C(&qword_1011BEE00);
  v9 = sub_100049F28(&qword_1011BEE08, &qword_1011BEE00, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  return Button.init(action:label:)(sub_100639E5C, v7, sub_100639E98, v11, v8, v9);
}

uint64_t sub_100639DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12SongCellViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100639E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12SongCellViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100639E5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s12SongCellViewVMa(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1)))();
}

uint64_t sub_100639E98()
{
  uint64_t v0;

  return sub_100639098(*(_QWORD *)(v0 + 16));
}

double sub_100639EA0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100639140(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100639EA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100639344(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100639EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BEE28;
  if (!qword_1011BEE28)
  {
    v1 = sub_100044B54(&qword_1011BEE18);
    sub_1000F3E9C();
    sub_100049F28(&qword_1011BEE30, &qword_1011BEE38, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BEE28);
  }
  return result;
}

uint64_t sub_100639F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011BEE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100639F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A0D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100639FC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B5128;
  if (!qword_1011B5128)
  {
    v1 = _s20PlaybackStateManagerCMa(255);
    result = swift_getWitnessTable(&unk_100EB7DE8, v1);
    atomic_store(result, (unint64_t *)&qword_1011B5128);
  }
  return result;
}

uint64_t sub_10063A018()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)_s12SongCellViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  swift_release();
  v6 = v5 + v1[7];
  v7 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + v1[8];
  v9 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v5 + v1[9];
  v11 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10063A100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s12SongCellViewVMa(0) - 8) + 80);
  return sub_100639B2C(v0 + ((v1 + 16) & ~v1));
}

double sub_10063A12C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_10063A160()
{
  return sub_100049F28(&qword_1011BEE48, &qword_1011BEE50, (uint64_t)&protocol conformance descriptor for Button<A>);
}

id sub_10063A228(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v21;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music24NowPlayingAutoPlayButton_defaultColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music24NowPlayingAutoPlayButton_selectedColor] = 0;
  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for NowPlayingAutoPlayButton();
  v9 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v10 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v11 = v9;
  v12 = objc_msgSend(v10, "configurationWithPointSize:weight:", 7, 15.0);
  v13 = v11;
  v14 = v12;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v15, v14);

  objc_msgSend(v13, "setImage:forState:", v16, 0);
  objc_msgSend(v13, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
  v17 = AccessibilityIdentifier.nowPlayingAutoPlayButton.unsafeMutableAddressor();
  v18 = *v17;
  v19 = v17[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v18, v19);

  return v13;
}

void sub_10063A45C(uint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  int v5;
  id v6;
  unint64_t v7;
  int v8;
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for NowPlayingAutoPlayButton();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v4 = sub_10013B23C();
    v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4) & 1;
  }
  else
  {
    v5 = 2;
  }
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = sub_10013B23C();
  v8 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v7);

  if (v5 == 2 || ((v8 ^ (v5 != 0)) & 1) != 0)
    sub_10063A588();
}

void sub_10063A588()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  void *v5;
  NSString v6;
  id v7;
  uint64_t *v8;
  unsigned int v9;
  uint64_t *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10013B23C();
  v4 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v3);

  if ((v4 & 1) == 0)
  {
    objc_msgSend(v1, "setImage:forState:", 0, 4);
    v9 = objc_msgSend(v1, "isSelected");
    v10 = &OBJC_IVAR____TtC5Music24NowPlayingAutoPlayButton_selectedColor;
    if (!v9)
      v10 = &OBJC_IVAR____TtC5Music24NowPlayingAutoPlayButton_defaultColor;
    objc_msgSend(v1, "setTintColor:", *(_QWORD *)&v1[*v10]);
    if (objc_msgSend(v1, "isSelected"))
      v11 = *(id *)&v1[OBJC_IVAR____TtC5Music24NowPlayingAutoPlayButton_defaultColor];
    else
      v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v12 = v11;
    objc_msgSend(v1, "setBackgroundColor:", v11);

    v13 = objc_msgSend(v1, "layer");
    objc_msgSend(v13, "setCornerCurve:", kCACornerCurveContinuous);

    v14 = objc_msgSend(v1, "layer");
    v15 = 7.0;
    goto LABEL_19;
  }
  v5 = (void *)objc_opt_self(UIImage);
  v6 = String._bridgeToObjectiveC()();
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v7 = objc_msgSend(v5, "imageNamed:inBundle:compatibleWithTraitCollection:", v6, qword_10124D260, 0);

  if (v7)
  {
    objc_msgSend(v1, "setImage:forState:", v7, 4);

    if (objc_msgSend(v1, "isSelected"))
    {
      if (qword_10119C300 != -1)
        swift_once(&qword_10119C300, sub_1005D2ED0);
      v8 = &qword_10124D3E0;
    }
    else
    {
      if (qword_10119C318 != -1)
        swift_once(&qword_10119C318, sub_1005D2F9C);
      v8 = &qword_10124D3F8;
    }
    objc_msgSend(v1, "setTintColor:", *v8);
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v1, "setBackgroundColor:", v16);

    v14 = objc_msgSend(v1, "layer");
    v15 = 0.0;
LABEL_19:
    v17 = v14;
    objc_msgSend(v14, "setCornerRadius:", v15);

    return;
  }
  __break(1u);
}

id sub_10063A8AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingAutoPlayButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingAutoPlayButton()
{
  return objc_opt_self(_TtC5Music24NowPlayingAutoPlayButton);
}

double destroy for DragDropToLibrary.Destination(uint64_t a1)
{
  uint64_t v2;
  double result;
  int v4;

  swift_release();
  swift_unknownObjectWeakDestroy(a1 + 8, v2);
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 != 255)
    sub_100064AA4(*(id *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v4);
  if (*(_QWORD *)(a1 + 64))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for DragDropToLibrary.Destination(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a2 + 8;
  swift_retain();
  swift_unknownObjectWeakCopyInit(a1 + 8, v4);
  v5 = *(unsigned __int8 *)(a2 + 56);
  if (v5 == 255)
  {
    v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    v6 = *(void **)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    sub_100347EC8(v6, v7, v8, v9, v10, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = v5;
  }
  v12 = *(_QWORD *)(a2 + 64);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for DragDropToLibrary.Destination(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  v4 = swift_release();
  swift_unknownObjectWeakCopyAssign(a1 + 8, a2 + 8, v4);
  v5 = (__int128 *)(a1 + 16);
  v6 = (__int128 *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v7 == 255)
    {
      v26 = *v6;
      v27 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      *v5 = v26;
      *(_OWORD *)(a1 + 32) = v27;
    }
    else
    {
      v19 = *(void **)(a2 + 16);
      v20 = *(_QWORD *)(a2 + 24);
      v21 = *(_QWORD *)(a2 + 32);
      v22 = *(_QWORD *)(a2 + 40);
      v23 = *(_QWORD *)(a2 + 48);
      sub_100347EC8(v19, v20, v21, v22, v23, *(_BYTE *)(a2 + 56));
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v20;
      *(_QWORD *)(a1 + 32) = v21;
      *(_QWORD *)(a1 + 40) = v22;
      *(_QWORD *)(a1 + 48) = v23;
      *(_BYTE *)(a1 + 56) = v7;
    }
  }
  else if (v7 == 255)
  {
    sub_1003482D8(a1 + 16);
    v24 = *(_OWORD *)(a2 + 41);
    v25 = *(_OWORD *)(a2 + 32);
    *v5 = *v6;
    *(_OWORD *)(a1 + 32) = v25;
    *(_OWORD *)(a1 + 41) = v24;
  }
  else
  {
    v8 = *(void **)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    sub_100347EC8(v8, v9, v10, v11, v12, *(_BYTE *)(a2 + 56));
    v13 = *(void **)(a1 + 16);
    v14 = *(_QWORD *)(a1 + 24);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 40);
    v17 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v12;
    v18 = *(_BYTE *)(a1 + 56);
    *(_BYTE *)(a1 + 56) = v7;
    sub_100064AA4(v13, v14, v15, v16, v17, v18);
  }
  v28 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v28)
    {
      v30 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v28;
      *(_QWORD *)(a1 + 72) = v30;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_14;
  }
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v28;
  *(_QWORD *)(a1 + 72) = v29;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for DragDropToLibrary.Destination(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectWeakTakeInit(a1 + 8, a2 + 8);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v4;
    *(_QWORD *)(a1 + 72) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithTake for DragDropToLibrary.Destination(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = swift_release();
  swift_unknownObjectWeakTakeAssign(a1 + 8, a2 + 8, v4);
  v5 = *(unsigned __int8 *)(a1 + 56);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 56);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a2 + 48);
      v8 = *(void **)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *(_QWORD *)(a1 + 48);
      v13 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 48) = v7;
      *(_BYTE *)(a1 + 56) = v6;
      sub_100064AA4(v8, v9, v10, v11, v12, v5);
      goto LABEL_6;
    }
    sub_1003482D8(a1 + 16);
  }
  v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_6:
  v15 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v15)
    {
      v17 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v17;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DragDropToLibrary.Destination()
{
  return &type metadata for DragDropToLibrary.Destination;
}

_QWORD *sub_10063AD78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10063AE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10063AE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10063AEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10063AF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10063AF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063AF80);
}

uint64_t sub_10063AF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for DragDropToLibrary.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t type metadata accessor for DragDropToLibrary.Origin(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BEF78, (uint64_t)&nominal type descriptor for DragDropToLibrary.Origin);
}

uint64_t sub_10063B00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063B018);
}

uint64_t sub_10063B018(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DragDropToLibrary.Origin(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t type metadata accessor for DragDropToLibrary(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BEEE8, (uint64_t)&nominal type descriptor for DragDropToLibrary);
}

uint64_t sub_10063B0A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EC5F18;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10063B114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063B120);
}

uint64_t sub_10063B120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10063B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063B168);
}

uint64_t sub_10063B168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

Swift::Int sub_10063B1A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v0 = Hasher.init(_seed:)(v5, 0);
  v1 = GenericMusicItem.id.getter(v0);
  v3 = v2;
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10063B200(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = GenericMusicItem.id.getter(a1);
  v4 = v3;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_10063B23C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = Hasher.init(_seed:)(v6, a1);
  v2 = GenericMusicItem.id.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10063B290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = GenericMusicItem.id.getter(a1);
  v3 = v2;
  v5 = GenericMusicItem.id.getter(v1);
  v6 = v4;
  if (v1 == v5 && v3 == v4)
  {
    v7 = 1;
    v6 = v3;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v5, v4, 0);
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10063B31C()
{
  return sub_100048748(&qword_1011BEFB0, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)&unk_100EC5F38);
}

uint64_t sub_10063B348(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011BEFB8, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)&unk_100EC5F60);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10063B384(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(_BYTE *, uint64_t, __n128);
  _BOOL8 v32;
  __n128 v33;
  void (*v34)(_BYTE *, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  void (*v45)(_BYTE *, uint64_t);
  BOOL v47;
  BOOL v48;
  _BYTE v50[12];
  int v51;
  _BYTE *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v54 = a1;
  v2 = type metadata accessor for MusicLibrary.AddAction(0);
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  __chkstk_darwin(v2);
  v57 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for DragDropToLibrary.Origin(0);
  __chkstk_darwin(v4);
  v6 = &v50[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A29D0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v50[-v12];
  v14 = type metadata accessor for MusicAuthorization.Status(0);
  v15 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  v56 = v15;
  v16 = __chkstk_darwin(v14);
  v18 = &v50[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v20 = &v50[-v19];
  v21 = type metadata accessor for MusicLibrary(0);
  v53 = v1;
  v22 = *v1;
  v23 = static MusicLibrary.shared.getter(v21);
  LOBYTE(v22) = static MusicLibrary.== infix(_:_:)(v22, v23);
  v24 = swift_release(v23);
  if ((v22 & 1) == 0)
    return 0;
  static MusicAuthorization.currentStatus.getter(v24);
  v25 = v55;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v56 + 104))(v18, enum case for MusicAuthorization.Status.authorized(_:), v55);
  v26 = sub_100048748((unint64_t *)&unk_1011BF070, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAuthorization.Status, (uint64_t)&protocol conformance descriptor for MusicAuthorization.Status);
  dispatch thunk of RawRepresentable.rawValue.getter(&v62, v25, v26);
  v52 = v18;
  dispatch thunk of RawRepresentable.rawValue.getter(&v60, v25, v26);
  v27 = v63;
  v28 = v61;
  v29 = v56;
  if (v62 == v60 && v63 == v61)
  {
    v30 = swift_bridgeObjectRelease_n(v63, 2);
    v31 = *(void (**)(_BYTE *, uint64_t, __n128))(v29 + 8);
    v31(v52, v25, v30);
    ((void (*)(_BYTE *, uint64_t))v31)(v20, v25);
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v63, v60, v61, 0);
    swift_bridgeObjectRelease(v27);
    v33 = swift_bridgeObjectRelease(v28);
    v34 = *(void (**)(_BYTE *, uint64_t, __n128))(v29 + 8);
    v34(v52, v25, v33);
    ((void (*)(_BYTE *, uint64_t))v34)(v20, v25);
    v32 = 0;
    if ((v51 & 1) == 0)
      return v32;
  }
  v35 = v54;
  v36 = *(_QWORD *)(v54 + 16);
  if (!v36)
    return 1;
  v37 = *(_QWORD *)(type metadata accessor for DragDropToLibrary(0) - 8);
  v38 = v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  LODWORD(v56) = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  v55 = *(_QWORD *)(v37 + 72);
  swift_bridgeObjectRetain();
  v39 = v36 - 1;
  do
  {
    v40 = sub_10005B704(v38, (uint64_t)v6, type metadata accessor for DragDropToLibrary.Origin);
    v41 = v57;
    static MusicLibraryAction<>.add.getter(v40);
    v42 = v59;
    MusicLibrary.supportedStatus<A>(for:action:)(v6, v41, v59, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v41, v42);
    v43 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v6, v43);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    v44 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v11, v7);
    v45 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v45(v11, v7);
    v45(v13, v7);
    v47 = v39-- != 0;
    v48 = v44 == (_DWORD)v56;
    v32 = v44 == (_DWORD)v56;
    if (!v48)
      break;
    v38 += v55;
  }
  while (v47);
  swift_bridgeObjectRelease(v54);
  return v32;
}

uint64_t sub_10063B76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for Notice.Variant(0);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v3[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DragDropToLibrary.Origin(0);
  v3[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v3[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[10] = v8;
  v3[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(type metadata accessor for DragDropToLibrary(0) - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10063B85C, 0, 0);
}

uint64_t sub_10063B85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 112) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 128) = 0;
    v7 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = v1 + ((v5 + 32) & ~(unint64_t)v5);
    swift_bridgeObjectRetain();
    sub_10005B704(v10, v4, type metadata accessor for DragDropToLibrary);
    sub_10005B704(v4, v9, type metadata accessor for DragDropToLibrary.Origin);
    sub_10005B748(v4, type metadata accessor for DragDropToLibrary);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v9, v8);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add(_:)[1]);
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_10063BA08;
    return MusicLibrary.add(_:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 88));
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 16);
    swift_storeEnumTagMultiPayload(v17, *(_QWORD *)(v0 + 40), 7);
    static Notice.variant(_:)(v17);
    sub_10005B748(v17, type metadata accessor for Notice.Variant);
    v19 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10063BA08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
    v4 = sub_10063BC3C;
  }
  else
  {
    sub_10022AA98(*(_QWORD *)(v2 + 56));
    v4 = sub_10063BA7C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10063BA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 128) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 16);
    swift_storeEnumTagMultiPayload(v7, *(_QWORD *)(v0 + 40), 7);
    static Notice.variant(_:)(v7);
    sub_10005B748(v7, type metadata accessor for Notice.Variant);
    v9 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v12;
    v13 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    sub_10005B704(*(_QWORD *)(v0 + 24)+ ((*(unsigned __int8 *)(v0 + 152) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 152))+ v11 * v12, v13, type metadata accessor for DragDropToLibrary);
    sub_10005B704(v13, v17, type metadata accessor for DragDropToLibrary.Origin);
    sub_10005B748(v13, type metadata accessor for DragDropToLibrary);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v17, v16);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add(_:)[1]);
    *(_QWORD *)(v0 + 136) = v18;
    *v18 = v0;
    v18[1] = sub_10063BA08;
    return MusicLibrary.add(_:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_10063BC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v2, *(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10063BCBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;
  _QWORD v7[9];

  v7[0] = *v1;
  v3 = type metadata accessor for MusicLibrary(0);
  v4 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  sub_100064AC8((uint64_t)(v1 + 1), (uint64_t)v7);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  sub_100064B4C((uint64_t)v7);
  if (Strong)
  {
    Hasher._combine(_:)(1u);
    v6 = Strong;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10063BD88()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10063BCBC((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10063BDC8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10063BCBC((uint64_t)v2);
  return Hasher._finalize()();
}

unint64_t sub_10063BE08()
{
  unint64_t result;

  result = qword_1011BEFC0;
  if (!qword_1011BEFC0)
  {
    result = swift_getWitnessTable(&unk_100EC5FDC, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_1011BEFC0);
  }
  return result;
}

uint64_t sub_10063BE4C()
{
  return sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
}

unint64_t sub_10063BE78(uint64_t a1)
{
  unint64_t result;

  result = sub_10063BE9C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10063BE9C()
{
  unint64_t result;

  result = qword_1011BF010;
  if (!qword_1011BF010)
  {
    result = swift_getWitnessTable(&unk_100EC6004, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_1011BF010);
  }
  return result;
}

unint64_t sub_10063BEE4()
{
  unint64_t result;

  result = qword_1011BF018;
  if (!qword_1011BF018)
  {
    result = swift_getWitnessTable(&unk_100EC6044, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_1011BF018);
  }
  return result;
}

uint64_t sub_10063BF28()
{
  return sub_100048748(&qword_1011BF020, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)&unk_100EC5FB0);
}

uint64_t sub_10063BF54(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_10063BF60(_QWORD *a1, _QWORD *a2)
{
  char v4;
  void *Strong;
  id v6;
  id v7;
  char v8;
  _BYTE v10[72];
  _BYTE v11[72];
  _BYTE v12[8];
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;

  type metadata accessor for MusicLibrary(0);
  v4 = static MusicLibrary.== infix(_:_:)(*a1, *a2);
  sub_10063C0BC((uint64_t)a1, (uint64_t)v14);
  sub_10063C0BC((uint64_t)a2, (uint64_t)v12);
  if ((v4 & 1) != 0)
  {
    sub_100064AC8((uint64_t)&v15, (uint64_t)v11);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
    sub_100064B4C((uint64_t)v11);
    sub_100064AC8((uint64_t)&v13, (uint64_t)v10);
    v6 = (id)swift_unknownObjectWeakLoadStrong(v10);
    sub_100064B4C((uint64_t)v10);
    if (Strong)
    {
      if (v6)
      {
        sub_1000E5638();
        v7 = Strong;
        v8 = static NSObject.== infix(_:_:)(v7, v6);
        sub_10063C0F0((uint64_t)v12);
        sub_10063C0F0((uint64_t)v14);

      }
      else
      {
        v6 = Strong;
        sub_10063C0F0((uint64_t)v12);
        sub_10063C0F0((uint64_t)v14);
        v8 = 0;
      }

    }
    else
    {
      sub_10063C0F0((uint64_t)v12);
      sub_10063C0F0((uint64_t)v14);
      if (!v6)
      {
        v8 = 1;
        return v8 & 1;
      }
      v8 = 0;
    }

  }
  else
  {
    sub_10063C0F0((uint64_t)v12);
    sub_10063C0F0((uint64_t)v14);
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_10063C0BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DragDropToLibrary.Destination(a2, a1);
  return a2;
}

uint64_t sub_10063C0F0(uint64_t a1)
{
  destroy for DragDropToLibrary.Destination(a1);
  return a1;
}

uint64_t Optional<A>.isArtworkVisuallyIdentical(to:)(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = (a2 | a1) == 0;
  if (a2)
  {
    if (a1)
      return (uint64_t)objc_msgSend((id)a2, "isArtworkVisuallyIdenticalToCatalog:");
  }
  return result;
}

uint64_t _s14ViewControllerCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BF150, (uint64_t)&_s14ViewControllerCMn);
}

uint64_t sub_10063C16C(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_10124D4F8);
}

uint64_t sub_10063C1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t (*v21)();
  uint64_t v22;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  if (a10)
  {
    v18 = swift_allocObject(&unk_1010D3F18, 32, 7);
    *(_QWORD *)(v18 + 16) = a10;
    *(_QWORD *)(v18 + 24) = a11;
    v19 = sub_1001095DC;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(a9 + 64) = v19;
  *(_QWORD *)(a9 + 72) = v18;
  if (a12)
  {
    v20 = swift_allocObject(&unk_1010D3EF0, 32, 7);
    *(_QWORD *)(v20 + 16) = a12;
    *(_QWORD *)(v20 + 24) = a13;
    v21 = sub_10010942C;
  }
  else
  {
    v21 = 0;
    v20 = 0;
  }
  *(_QWORD *)(a9 + 80) = v21;
  *(_QWORD *)(a9 + 88) = v20;
  sub_100065228(a14, a9 + 96, &qword_1011BF4A0);
  *(_BYTE *)(a9 + 144) = a15 & 1;
  v22 = _s16ActionButtonViewV5ModelVMa(0);
  sub_100065228(a16, a9 + *(int *)(v22 + 48), &qword_1011AD448);
  return sub_100065228(a17, a9 + *(int *)(v22 + 52), &qword_1011AD448);
}

uint64_t sub_10063C2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a1;
  v1 = _s9ViewModelOMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v67 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_1011AD440);
  __chkstk_darwin(v69);
  v70 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011BF510);
  __chkstk_darwin(v73);
  v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011AE270);
  __chkstk_darwin(v6);
  v71 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v75 = (uint64_t)&v65 - v9;
  __chkstk_darwin(v10);
  v74 = (uint64_t)&v65 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v65 - v13;
  v15 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v68 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v76 = (uint64_t)&v65 - v19;
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v65 - v21);
  v23 = sub_100007E8C(&qword_1011BF518);
  __chkstk_darwin(v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (uint64_t)&v25[*(int *)(v26 + 48)];
  sub_10004A160(v77, (uint64_t)v25, (uint64_t *)&unk_1011BC820);
  sub_10004A160(v78, v27, (uint64_t *)&unk_1011AE270);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v29 = v1;
  if (v28(v25, 1, v1) == 1)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v27, 1, v15) == 1)
    {
      sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011BC820);
      v30 = 0;
      return v30 & 1;
    }
LABEL_6:
    sub_10004FF60(v27, (uint64_t *)&unk_1011AE270);
    sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011BC820);
    v30 = 1;
    return v30 & 1;
  }
  sub_10004A160((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1011BC820);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v31(v27, 1, v15) == 1)
  {
    sub_10005B748((uint64_t)v22, _s9ViewModelOMa);
    goto LABEL_6;
  }
  sub_10004A160(v27, (uint64_t)v14, (uint64_t *)&unk_1011AE270);
  if (swift_getEnumCaseMultiPayload(v22, v29) != 1)
  {
    v32 = *v22;
    v33 = v22[1];
    v34 = v22[2];
    v35 = v22[3];
    v77 = v34;
    v78 = v32;
    if (v28(v14, 1, v29) == 1)
    {
      v78 = v29;
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v35);
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011BC820);
      goto LABEL_11;
    }
    v66 = v33;
    v45 = v35;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v29);
    v37 = v76;
    if (EnumCaseMultiPayload == 1)
    {
      v78 = v29;
      sub_10005B748((uint64_t)v14, _s9ViewModelOMa);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v45);
      v36 = (uint64_t)v72;
      goto LABEL_12;
    }
    v52 = v27;
    v53 = *((_QWORD *)v14 + 1);
    v54 = *((_QWORD *)v14 + 2);
    v55 = *((_QWORD *)v14 + 3);
    v56 = v66;
    if (v66)
    {
      if (!v53)
      {
        swift_bridgeObjectRelease(*((_QWORD *)v14 + 3));
        v61 = v56;
        goto LABEL_50;
      }
      if ((v78 != *(_QWORD *)v14 || v66 != v53)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v78, v66, *(_QWORD *)v14, *((_QWORD *)v14 + 1), 0) & 1) == 0)
      {
        swift_bridgeObjectRelease(v56);
LABEL_43:
        swift_bridgeObjectRelease(v53);
        v61 = v55;
LABEL_50:
        swift_bridgeObjectRelease(v61);
        swift_bridgeObjectRelease(v45);
        v30 = 1;
        v63 = v52;
LABEL_59:
        sub_10004FF60(v63, (uint64_t *)&unk_1011AE270);
        sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011BC820);
        return v30 & 1;
      }
    }
    else if (v53)
    {
      goto LABEL_43;
    }
    if (v45)
    {
      if (v55)
      {
        if (v77 == v54 && v45 == v55)
          v62 = 1;
        else
          v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v45, v54, v55, 0);
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v55);
        swift_bridgeObjectRelease(v53);
        swift_bridgeObjectRelease(v56);
        goto LABEL_58;
      }
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v53);
      v64 = v56;
    }
    else
    {
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v56);
      if (!v55)
      {
        v62 = 1;
        goto LABEL_58;
      }
      v64 = v55;
    }
    swift_bridgeObjectRelease(v64);
    v62 = 0;
LABEL_58:
    v63 = v52;
    v30 = v62 ^ 1;
    goto LABEL_59;
  }
  v78 = v29;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011BC820);
  sub_10005B748((uint64_t)v22, _s9ViewModelOMa);
LABEL_11:
  v36 = (uint64_t)v72;
  v37 = v76;
LABEL_12:
  sub_100065228((uint64_t)v25, v37, (uint64_t *)&unk_1011BC820);
  v38 = v74;
  sub_100065228(v27, v74, (uint64_t *)&unk_1011AE270);
  v39 = v75;
  sub_10004A160(v37, v75, (uint64_t *)&unk_1011BC820);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v39, 0, 1, v15);
  v40 = v36 + *(int *)(v73 + 48);
  sub_10004A160(v39, v36, (uint64_t *)&unk_1011AE270);
  sub_10004A160(v38, v40, (uint64_t *)&unk_1011AE270);
  if (v31(v36, 1, v15) == 1)
  {
    sub_10004FF60(v39, (uint64_t *)&unk_1011AE270);
    sub_10004FF60(v38, (uint64_t *)&unk_1011AE270);
    sub_10004FF60(v37, (uint64_t *)&unk_1011BC820);
    v41 = v31(v40, 1, v15);
    if (v41 == 1)
      v42 = (uint64_t *)&unk_1011AE270;
    else
      v42 = &qword_1011BF510;
    if (v41 == 1)
      v43 = -1;
    else
      v43 = 0;
  }
  else
  {
    v44 = v71;
    sub_10004A160(v36, v71, (uint64_t *)&unk_1011AE270);
    if (v31(v40, 1, v15) == 1)
    {
      sub_10004FF60(v39, (uint64_t *)&unk_1011AE270);
      sub_10004FF60(v38, (uint64_t *)&unk_1011AE270);
      sub_10004FF60(v76, (uint64_t *)&unk_1011BC820);
      sub_10004FF60(v44, (uint64_t *)&unk_1011BC820);
      v43 = 0;
      v42 = &qword_1011BF510;
    }
    else
    {
      v47 = v70;
      v48 = v70 + *(int *)(v69 + 48);
      sub_10004A160(v44, v70, (uint64_t *)&unk_1011BC820);
      sub_100065228(v40, v48, (uint64_t *)&unk_1011BC820);
      v49 = v78;
      if (v28((char *)v47, 1, v78) == 1)
      {
        sub_10004FF60(v75, (uint64_t *)&unk_1011AE270);
        sub_10004FF60(v38, (uint64_t *)&unk_1011AE270);
        sub_10004FF60(v76, (uint64_t *)&unk_1011BC820);
        v50 = v28((char *)v48, 1, v49);
        if (v50 == 1)
          v51 = (uint64_t *)&unk_1011BC820;
        else
          v51 = &qword_1011AD440;
        if (v50 == 1)
          v43 = -1;
        else
          v43 = 0;
      }
      else
      {
        v57 = v68;
        sub_10004A160(v47, v68, (uint64_t *)&unk_1011BC820);
        if (v28((char *)v48, 1, v49) == 1)
        {
          sub_10004FF60(v75, (uint64_t *)&unk_1011AE270);
          sub_10004FF60(v38, (uint64_t *)&unk_1011AE270);
          sub_10004FF60(v76, (uint64_t *)&unk_1011BC820);
          sub_10005B748(v57, _s9ViewModelOMa);
          v43 = 0;
          v51 = &qword_1011AD440;
        }
        else
        {
          v58 = v48;
          v59 = v67;
          sub_10005B6C0(v58, v67, _s9ViewModelOMa);
          v43 = sub_100646794(v57, v59);
          sub_10005B748(v59, _s9ViewModelOMa);
          sub_10004FF60(v75, (uint64_t *)&unk_1011AE270);
          sub_10004FF60(v38, (uint64_t *)&unk_1011AE270);
          v51 = (uint64_t *)&unk_1011BC820;
          sub_10004FF60(v76, (uint64_t *)&unk_1011BC820);
          sub_10005B748(v57, _s9ViewModelOMa);
        }
      }
      sub_10004FF60(v47, v51);
      sub_10004FF60(v44, (uint64_t *)&unk_1011BC820);
      v42 = (uint64_t *)&unk_1011AE270;
    }
  }
  sub_10004FF60(v36, v42);
  v30 = v43 ^ 1;
  return v30 & 1;
}

void sub_10063CB90(char a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  _BYTE v23[24];
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v2 = a1 & 1;
  v3 = qword_1011BF148;
  v4 = _s16SafeAreaObserverCMa(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  v24 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v25 = v6;
  type metadata accessor for NSDirectionalEdgeInsets(0);
  v8 = v7;
  v9 = v1;
  Published.init(initialValue:)(&v24, v8);
  *(_QWORD *)&v1[v3] = v5;

  v10 = *(_QWORD *)&v1[v3];
  *((_QWORD *)&v25 + 1) = sub_100007E8C(&qword_1011BF520);
  v26 = sub_100049F28(&qword_1011BF528, &qword_1011BF520, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  sub_100049F68(&v24);
  swift_beginAccess(v10 + OBJC_IVAR____TtCO5Music13LibraryImport16SafeAreaObserver__insets, v23, 33, 0);
  swift_retain();
  v11 = sub_100007E8C((uint64_t *)&unk_1011BF500);
  Published.projectedValue.getter(v11);
  swift_endAccess(v23);
  v12 = sub_100007E8C(qword_1011BF530);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = OptionalObservableObject.init(publisher:)((uint64_t)&v24);
  v14 = sub_100049F28(&qword_1011BC920, qword_1011BF530, (uint64_t)&protocol conformance descriptor for OptionalObservableObject<A>);
  v15 = ObservedObject.init(wrappedValue:)(v13, v12, v14);
  v17 = v16;
  swift_release();
  LOBYTE(v24) = v2;
  *((_QWORD *)&v24 + 1) = v15;
  *(_QWORD *)&v25 = v17;
  v18 = (id)UIHostingController.init(rootView:)(&v24);
  v19 = objc_msgSend(v18, "view");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v20, "setBackgroundColor:", v21);

    v22 = v18;
    dispatch thunk of UIHostingController.sizeThatFits(in:)(v22, 1.79769313e308, 1.79769313e308);
    objc_msgSend(v22, "setPreferredContentSize:");

  }
  else
  {

    __break(1u);
  }
}

void sub_10063CDD4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _OWORD v12[2];

  v5 = qword_1011BF148;
  v6 = _s16SafeAreaObserverCMa(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v8 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  v12[0] = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v12[1] = v8;
  type metadata accessor for NSDirectionalEdgeInsets(0);
  v10 = v9;
  v11 = a3;
  Published.init(initialValue:)(v12, v10);
  *(_QWORD *)&a1[v5] = v7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryImportView.swift", 29, 2, 39, 0);
  __break(1u);
}

void sub_10063CEA4()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewLayoutMarginsDidChange");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "directionalLayoutMargins");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11 = objc_msgSend(v0, "traitCollection");
    v12 = objc_msgSend(v11, "horizontalSizeClass");

    if (v12 == (id)2)
    {
      if (qword_10119BEF8 != -1)
        swift_once(&qword_10119BEF8, sub_100352530);
      v6 = v6 + *(double *)&qword_10124CDF8;
    }
    sub_10063CFBC(v4, v6, v8, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_10063CFBC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;

  v9 = qword_1011BF148;
  v10 = *(_QWORD *)&v4[qword_1011BF148];
  KeyPath = swift_getKeyPath(&unk_100EC6338);
  v12 = swift_getKeyPath(&unk_100EC6360);
  v13 = swift_retain(v10);
  static Published.subscript.getter(&v26, v13, KeyPath, v12);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  if (v26 != a1 || v27 != a2 || v28 != a3 || v29 != a4)
  {
    v17 = *(_QWORD *)&v4[v9];
    v18 = swift_getKeyPath(&unk_100EC6338);
    v19 = swift_getKeyPath(&unk_100EC6360);
    v26 = a1;
    v27 = a2;
    v28 = a3;
    v29 = a4;
    swift_retain(v17);
    static Published.subscript.setter(&v26, v17, v18, v19);
    v20 = objc_msgSend(v4, "parentViewController");
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, "view");

      if (v22)
      {
        v23 = objc_msgSend(v22, "bounds");
        dispatch thunk of UIHostingController.sizeThatFits(in:)(v23, v24, v25);
        objc_msgSend(v4, "setPreferredContentSize:");

      }
    }
  }
}

void sub_10063D13C(void *a1)
{
  id v1;

  v1 = a1;
  sub_10063CEA4();

}

void sub_10063D170(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  char v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewWillAppear:", a3);
  if (qword_10119BE90 != -1)
    swift_once(&qword_10119BE90, sub_100328EB0);
  v5 = *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests);
  *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) = 1;
  if ((v5 & 1) == 0)
    sub_10032DF74(0);

}

double sub_10063D220(char a1)
{
  void *v1;
  double result;
  uint64_t v4;
  char v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, "viewDidDisappear:", a1 & 1);
  if (qword_10119BE90 != -1)
    swift_once(&qword_10119BE90, sub_100328EB0);
  v4 = qword_10124CDA8;
  v5 = *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests);
  *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) = 0;
  if ((v5 & 1) != 0)
  {
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask))
    {
      swift_retain();
      Task.cancel()();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_10063D2EC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10063D220(a3);

}

uint64_t sub_10063D32C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_1011BF148));
}

uint64_t sub_10063D33C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + qword_1011BF148));
}

double sub_10063D34C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EC6338);
  v2 = swift_getKeyPath(&unk_100EC6360);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10063D3C0()
{
  return _s14ViewControllerCMa(0);
}

uint64_t sub_10063D3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCO5Music13LibraryImport16SafeAreaObserver__insets;
  v2 = sub_100007E8C((uint64_t *)&unk_1011BF500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10063D41C()
{
  return _s16SafeAreaObserverCMa(0);
}

uint64_t _s16SafeAreaObserverCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BF1D0, (uint64_t)&_s16SafeAreaObserverCMn);
}

void sub_10063D438(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000E3A44(319, (unint64_t *)&unk_1011BF1E0, (uint64_t (*)(uint64_t))type metadata accessor for NSDirectionalEdgeInsets, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t _s10ImportViewVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t _s10ImportViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_release(v4);
  return a1;
}

ValueMetadata *_s10ImportViewVMa()
{
  return &_s10ImportViewVN;
}

uint64_t sub_10063D54C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  unsigned int (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  _BYTE *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v8;
    if (EnumCaseMultiPayload != 1)
    {
      v15 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v15;
      v16 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v16;
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = a1;
      v18 = a3;
      v19 = 0;
LABEL_30:
      swift_storeEnumTagMultiPayload(v17, v18, v19);
      return a1;
    }
    v9 = a2[8];
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v10;
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v11;
    v12 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      v13 = a2[9];
      *(_QWORD *)(a1 + 64) = v9;
      *(_QWORD *)(a1 + 72) = v13;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    }
    v20 = a2[10];
    if (v20)
    {
      v21 = a2[11];
      *(_QWORD *)(a1 + 80) = v20;
      *(_QWORD *)(a1 + 88) = v21;
      swift_retain();
      v22 = a2[16];
      if (v22)
      {
LABEL_10:
        v23 = a2[13];
        *(_QWORD *)(a1 + 96) = a2[12];
        *(_QWORD *)(a1 + 104) = v23;
        v24 = a2[15];
        *(_QWORD *)(a1 + 112) = a2[14];
        *(_QWORD *)(a1 + 120) = v24;
        v25 = a2[17];
        *(_QWORD *)(a1 + 128) = v22;
        *(_QWORD *)(a1 + 136) = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_13:
        *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
        v27 = _s16ActionButtonViewV5ModelVMa(0);
        v28 = *(int *)(v27 + 48);
        v29 = (_BYTE *)(a1 + v28);
        v30 = (char *)a2 + v28;
        v31 = (int *)_s12ClickMetricsVMa(0);
        v32 = *((_QWORD *)v31 - 1);
        v33 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v32 + 48);
        if (v33(v30, 1, v31))
        {
          v34 = sub_100007E8C(&qword_1011AD448);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v67 = v33;
          v68 = v32;
          *v29 = *v30;
          v35 = v31[5];
          __dst = &v29[v35];
          v36 = &v30[v35];
          v37 = type metadata accessor for URL(0);
          v38 = *(_QWORD *)(v37 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            v39 = sub_100007E8C(&qword_10119E460);
            memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v38 + 16))(__dst, v36, v37);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
          }
          v40 = v31[6];
          v41 = &v29[v40];
          v42 = &v30[v40];
          v43 = v42[1];
          *v41 = *v42;
          v41[1] = v43;
          v44 = v31[7];
          v45 = &v29[v44];
          v46 = &v30[v44];
          v47 = *(_QWORD *)&v30[v44 + 8];
          swift_bridgeObjectRetain();
          if (v47 > 9)
          {
            *v45 = *v46;
            v45[1] = v47;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v45 = *(_OWORD *)v46;
          }
          v29[v31[8]] = v30[v31[8]];
          v32 = v68;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v68 + 56))(v29, 0, 1, v31);
          v33 = v67;
        }
        v48 = *(int *)(v27 + 52);
        v49 = (_BYTE *)(a1 + v48);
        v50 = (char *)a2 + v48;
        if (v33(v50, 1, v31))
        {
          v51 = sub_100007E8C(&qword_1011AD448);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          *v49 = *v50;
          v52 = v31[5];
          v53 = &v49[v52];
          v54 = &v50[v52];
          v55 = type metadata accessor for URL(0);
          v56 = *(_QWORD *)(v55 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
          {
            v57 = sub_100007E8C(&qword_10119E460);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v56 + 16))(v53, v54, v55);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
          }
          v58 = v31[6];
          v59 = &v49[v58];
          v60 = &v50[v58];
          v61 = v60[1];
          *v59 = *v60;
          v59[1] = v61;
          v62 = v31[7];
          v63 = &v49[v62];
          v64 = &v50[v62];
          v65 = *(_QWORD *)&v50[v62 + 8];
          swift_bridgeObjectRetain();
          if (v65 > 9)
          {
            *v63 = *v64;
            v63[1] = v65;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v63 = *(_OWORD *)v64;
          }
          v49[v31[8]] = v50[v31[8]];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v32 + 56))(v49, 0, 1, v31);
        }
        v17 = a1;
        v18 = a3;
        v19 = 1;
        goto LABEL_30;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      v22 = a2[16];
      if (v22)
        goto LABEL_10;
    }
    v26 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v26;
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    goto LABEL_13;
  }
  v14 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t _s16ActionButtonViewV5ModelVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011BF440, (uint64_t)&_s16ActionButtonViewV5ModelVMn);
}

uint64_t _s12ClickMetricsVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BF398, (uint64_t)&_s12ClickMetricsVMn);
}

double sub_10063D9EC(_QWORD *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  __n128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1)
    goto LABEL_18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
    swift_release();
  if (a1[10])
    swift_release();
  if (a1[16])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v4 = _s16ActionButtonViewV5ModelVMa(0);
  v5 = (char *)a1 + *(int *)(v4 + 48);
  v6 = _s12ClickMetricsVMa(0);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    v9 = &v5[*(int *)(v6 + 20)];
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v8 = swift_bridgeObjectRelease();
    if (*(_QWORD *)&v5[*(int *)(v6 + 28) + 8] >= 0xAuLL)
      v8 = swift_bridgeObjectRelease();
  }
  v12 = (char *)a1 + *(int *)(v4 + 52);
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v7)(v12, 1, v6, v8))
  {
    v14 = &v12[*(int *)(v6 + 20)];
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    if (*(_QWORD *)&v12[*(int *)(v6 + 28) + 8] >= 0xAuLL)
LABEL_18:
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10063DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_BYTE *, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  _BYTE *__dst;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  if (EnumCaseMultiPayload != 1)
  {
    v13 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v13;
    v14 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v14;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = 0;
    goto LABEL_27;
  }
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v16 = *(_QWORD *)(a2 + 80);
  if (!v16)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    v18 = *(_QWORD *)(a2 + 128);
    if (v18)
      goto LABEL_8;
LABEL_10:
    v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  swift_retain();
  v18 = *(_QWORD *)(a2 + 128);
  if (!v18)
    goto LABEL_10;
LABEL_8:
  v19 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v19;
  v20 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v20;
  v21 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
LABEL_11:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v23 = _s16ActionButtonViewV5ModelVMa(0);
  v24 = *(int *)(v23 + 48);
  v25 = (_BYTE *)(a1 + v24);
  v26 = (_BYTE *)(a2 + v24);
  v27 = (int *)_s12ClickMetricsVMa(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v28 + 48);
  if (v29(v26, 1, v27))
  {
    v30 = sub_100007E8C(&qword_1011AD448);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v63 = v28;
    v64 = v3;
    *v25 = *v26;
    v31 = v27[5];
    __dst = &v25[v31];
    v32 = &v26[v31];
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    v36 = v27[6];
    v37 = &v25[v36];
    v38 = &v26[v36];
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v27[7];
    v41 = &v25[v40];
    v42 = &v26[v40];
    v43 = *(_QWORD *)&v26[v40 + 8];
    swift_bridgeObjectRetain();
    if (v43 > 9)
    {
      *v41 = *v42;
      v41[1] = v43;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v41 = *(_OWORD *)v42;
    }
    v25[v27[8]] = v26[v27[8]];
    v28 = v63;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v63 + 56))(v25, 0, 1, v27);
    v3 = v64;
  }
  v44 = *(int *)(v23 + 52);
  v45 = (_BYTE *)(a1 + v44);
  v46 = (_BYTE *)(a2 + v44);
  if (v29(v46, 1, v27))
  {
    v47 = sub_100007E8C(&qword_1011AD448);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    v15 = 1;
  }
  else
  {
    *v45 = *v46;
    v48 = v27[5];
    v49 = &v45[v48];
    v50 = &v46[v48];
    v51 = type metadata accessor for URL(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C(&qword_10119E460);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v54 = v27[6];
    v55 = &v45[v54];
    v56 = &v46[v54];
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    v58 = v27[7];
    v59 = &v45[v58];
    v60 = &v46[v58];
    v61 = *(_QWORD *)&v46[v58 + 8];
    swift_bridgeObjectRetain();
    if (v61 > 9)
    {
      *v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v59 = *(_OWORD *)v60;
    }
    v45[v27[8]] = v46[v27[8]];
    v15 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v28 + 56))(v45, 0, 1, v27);
  }
LABEL_27:
  swift_storeEnumTagMultiPayload(a1, v3, v15);
  return a1;
}

uint64_t sub_10063E01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int *v20;
  uint64_t v21;
  unsigned int (*v22)(_BYTE *, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v55;
  uint64_t v56;
  _BYTE *__dst;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s9ViewModelOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (EnumCaseMultiPayload != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v9 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = 0;
LABEL_28:
      swift_storeEnumTagMultiPayload(a1, a3, v10);
      return a1;
    }
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v7 = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = v8;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    }
    v11 = *(_QWORD *)(a2 + 80);
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v12;
      swift_retain();
      if (*(_QWORD *)(a2 + 128))
      {
LABEL_9:
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        v13 = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_12:
        *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
        v16 = _s16ActionButtonViewV5ModelVMa(0);
        v17 = *(int *)(v16 + 48);
        v18 = (_BYTE *)(a1 + v17);
        v19 = (_BYTE *)(a2 + v17);
        v20 = (int *)_s12ClickMetricsVMa(0);
        v21 = *((_QWORD *)v20 - 1);
        v22 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v21 + 48);
        if (v22(v19, 1, v20))
        {
          v23 = sub_100007E8C(&qword_1011AD448);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v55 = a3;
          v56 = v21;
          *v18 = *v19;
          v24 = v20[5];
          __dst = &v18[v24];
          v25 = &v19[v24];
          v26 = type metadata accessor for URL(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            v28 = sub_100007E8C(&qword_10119E460);
            memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 16))(__dst, v25, v26);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          v29 = v20[6];
          v30 = &v18[v29];
          v31 = &v19[v29];
          *v30 = *v31;
          v30[1] = v31[1];
          v32 = v20[7];
          v33 = &v18[v32];
          v34 = &v19[v32];
          v35 = *(_QWORD *)&v19[v32 + 8];
          swift_bridgeObjectRetain();
          v36 = v35 == 9;
          if (v35 >= 9)
          {
            a3 = v55;
            if (v36)
            {
              *(_OWORD *)v33 = *(_OWORD *)v34;
            }
            else
            {
              *(_QWORD *)v33 = *(_QWORD *)v34;
              *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            *(_OWORD *)v33 = *(_OWORD *)v34;
            a3 = v55;
          }
          v18[v20[8]] = v19[v20[8]];
          v21 = v56;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v56 + 56))(v18, 0, 1, v20);
        }
        v37 = *(int *)(v16 + 52);
        v38 = (_BYTE *)(a1 + v37);
        v39 = (_BYTE *)(a2 + v37);
        if (v22(v39, 1, v20))
        {
          v40 = sub_100007E8C(&qword_1011AD448);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          v10 = 1;
        }
        else
        {
          *v38 = *v39;
          v41 = v20[5];
          v42 = &v38[v41];
          v43 = &v39[v41];
          v44 = type metadata accessor for URL(0);
          v45 = *(_QWORD *)(v44 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
          {
            v46 = sub_100007E8C(&qword_10119E460);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v42, v43, v44);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v47 = v20[6];
          v48 = &v38[v47];
          v49 = &v39[v47];
          *v48 = *v49;
          v48[1] = v49[1];
          v50 = v20[7];
          v51 = &v38[v50];
          v52 = &v39[v50];
          v53 = *(_QWORD *)&v39[v50 + 8];
          swift_bridgeObjectRetain();
          if (v53 > 9)
          {
            *v51 = *v52;
            v51[1] = v52[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v51 = *(_OWORD *)v52;
          }
          v38[v20[8]] = v39[v20[8]];
          v10 = 1;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v21 + 56))(v38, 0, 1, v20);
        }
        goto LABEL_28;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      if (*(_QWORD *)(a2 + 128))
        goto LABEL_9;
    }
    v14 = *(_OWORD *)(a2 + 96);
    v15 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v15;
    *(_OWORD *)(a1 + 96) = v14;
    goto LABEL_12;
  }
  return a1;
}

uint64_t _s9ViewModelOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BF300, (uint64_t)&_s9ViewModelOMn);
}

_OWORD *sub_10063E4FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;

  v3 = a3;
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    a1[8] = a2[8];
    *((_BYTE *)a1 + 144) = *((_BYTE *)a2 + 144);
    v10 = _s16ActionButtonViewV5ModelVMa(0);
    v11 = *(int *)(v10 + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = (int *)_s12ClickMetricsVMa(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = sub_100007E8C(&qword_1011AD448);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v35 = v3;
      v36 = v15;
      *v12 = *v13;
      v18 = v14[5];
      v34 = &v12[v18];
      v19 = &v13[v18];
      v20 = type metadata accessor for URL(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C(&qword_10119E460);
        memcpy(v34, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v34, v19, v20);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v34, 0, 1, v20);
      }
      *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
      *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
      v12[v14[8]] = v13[v14[8]];
      v15 = v36;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v36 + 56))(v12, 0, 1, v14);
      v3 = v35;
    }
    v23 = *(int *)(v10 + 52);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    if (v16(v25, 1, v14))
    {
      v26 = sub_100007E8C(&qword_1011AD448);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      v27 = v14[5];
      v28 = &v24[v27];
      v29 = &v25[v27];
      v30 = type metadata accessor for URL(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C(&qword_10119E460);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(_OWORD *)&v24[v14[6]] = *(_OWORD *)&v25[v14[6]];
      *(_OWORD *)&v24[v14[7]] = *(_OWORD *)&v25[v14[7]];
      v24[v14[8]] = v25[v14[8]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v15 + 56))(v24, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload(a1, v3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10063E800(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      v9 = a2[7];
      a1[6] = a2[6];
      a1[7] = v9;
      a1[8] = a2[8];
      *((_BYTE *)a1 + 144) = *((_BYTE *)a2 + 144);
      v10 = _s16ActionButtonViewV5ModelVMa(0);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = (int *)_s12ClickMetricsVMa(0);
      v15 = *((_QWORD *)v14 - 1);
      v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
      if (v16(v13, 1, v14))
      {
        v17 = sub_100007E8C(&qword_1011AD448);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v34 = v10;
        v35 = v15;
        *v12 = *v13;
        v18 = v14[5];
        v36 = &v12[v18];
        v19 = &v13[v18];
        v20 = type metadata accessor for URL(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_100007E8C(&qword_10119E460);
          memcpy(v36, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v36, v19, v20);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v20);
        }
        *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
        *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
        v12[v14[8]] = v13[v14[8]];
        v15 = v35;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v35 + 56))(v12, 0, 1, v14);
        v10 = v34;
      }
      v23 = *(int *)(v10 + 52);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      if (v16(v25, 1, v14))
      {
        v26 = sub_100007E8C(&qword_1011AD448);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        *v24 = *v25;
        v27 = v14[5];
        v28 = &v24[v27];
        v29 = &v25[v27];
        v30 = type metadata accessor for URL(0);
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          v32 = sub_100007E8C(&qword_10119E460);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        *(_OWORD *)&v24[v14[6]] = *(_OWORD *)&v25[v14[6]];
        *(_OWORD *)&v24[v14[7]] = *(_OWORD *)&v25[v14[7]];
        v24[v14[8]] = v25[v14[8]];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v15 + 56))(v24, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10063EB1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "1";
  result = _s16ActionButtonViewV5ModelVMa(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_10063EB8C(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C(&qword_10119E460);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)((char *)v4 + v15);
    v20 = (_QWORD *)((char *)a2 + v15);
    v21 = *(_QWORD *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    if (v21 > 9)
    {
      *v19 = *v20;
      v19[1] = v21;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

unint64_t sub_10063ECDC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  result = *(_QWORD *)(a1 + a2[7] + 8);
  if (result >= 0xA)
    return swift_bridgeObjectRelease(result);
  return result;
}

_BYTE *sub_10063ED84(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_10119E460);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  v19 = *(_QWORD *)&a2[v13 + 8];
  swift_bridgeObjectRetain();
  if (v19 > 9)
  {
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *sub_10063EEA8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_10119E460);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)&a1[v18 + 8];
  v22 = *(_QWORD *)&a2[v18 + 8];
  if (v21 == 9)
  {
    if (v22 >= 0xA)
      goto LABEL_14;
    goto LABEL_18;
  }
  if (v22 == 9)
  {
    sub_1001C5334((uint64_t)v19);
    goto LABEL_18;
  }
  if (v21 >= 9)
  {
    if (v22 >= 9)
    {
      *v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_10004FF60((uint64_t)v19, &qword_1011A4D80);
    goto LABEL_18;
  }
  if (v22 < 9)
  {
LABEL_18:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_19;
  }
LABEL_14:
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
LABEL_19:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *sub_10063F0A0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_10119E460);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *sub_10063F18C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_10119E460);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (uint64_t *)&a2[v15];
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a1[v20 + 8];
  v24 = *(_QWORD *)&a2[v20 + 8];
  if (v23 != 9)
  {
    if (v24 == 9)
    {
      sub_1001C5334((uint64_t)v21);
    }
    else if (v23 >= 9)
    {
      if (v24 >= 9)
      {
        *v21 = *v22;
        v21[1] = v24;
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      sub_10004FF60((uint64_t)v21, &qword_1011A4D80);
    }
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_10063F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063F348);
}

uint64_t sub_10063F348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_10119E460);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10063F3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063F3DC);
}

uint64_t sub_10063F3DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_10119E460);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_10063F460(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EC6120;
  sub_1000E3A44(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EC6138;
    v4[3] = &unk_100EC6150;
    v4[4] = &unk_100EC6168;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_10063F508(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(_BYTE *, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v61;
  _BYTE *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v8;
  v9 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  v12 = a2 + 8;
  v11 = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v13 = a2[9];
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v12;
  }
  v15 = a2[10];
  if (!v15)
  {
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    v17 = a2[16];
    if (v17)
      goto LABEL_8;
LABEL_10:
    v21 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v21;
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    goto LABEL_11;
  }
  v16 = a2[11];
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  swift_retain();
  v17 = a2[16];
  if (!v17)
    goto LABEL_10;
LABEL_8:
  v18 = a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v18;
  v19 = a2[15];
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = v19;
  v20 = a2[17];
  *(_QWORD *)(a1 + 128) = v17;
  *(_QWORD *)(a1 + 136) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
LABEL_11:
  *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
  v22 = *(int *)(a3 + 48);
  v23 = (_BYTE *)(a1 + v22);
  v24 = (char *)a2 + v22;
  v25 = (int *)_s12ClickMetricsVMa(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = sub_100007E8C(&qword_1011AD448);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v29 = v25[5];
    v61 = v26;
    __dst = &v23[v29];
    v30 = &v24[v29];
    v31 = type metadata accessor for URL(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v32 + 16))(__dst, v30, v31);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    v34 = v25[6];
    v35 = &v23[v34];
    v36 = &v24[v34];
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v25[7];
    v39 = &v23[v38];
    v40 = &v24[v38];
    v41 = *(_QWORD *)&v24[v38 + 8];
    swift_bridgeObjectRetain();
    if (v41 > 9)
    {
      *v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    v23[v25[8]] = v24[v25[8]];
    v26 = v61;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v61 + 56))(v23, 0, 1, v25);
  }
  v42 = *(int *)(a3 + 52);
  v43 = (_BYTE *)(a1 + v42);
  v44 = (char *)a2 + v42;
  if (v27(v44, 1, v25))
  {
    v45 = sub_100007E8C(&qword_1011AD448);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    *v43 = *v44;
    v46 = v25[5];
    v47 = &v43[v46];
    v48 = &v44[v46];
    v49 = type metadata accessor for URL(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C(&qword_10119E460);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v25[6];
    v53 = &v43[v52];
    v54 = &v44[v52];
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = v25[7];
    v57 = &v43[v56];
    v58 = &v44[v56];
    v59 = *(_QWORD *)&v44[v56 + 8];
    swift_bridgeObjectRetain();
    if (v59 > 9)
    {
      *v57 = *v58;
      v57[1] = v59;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
    }
    v43[v25[8]] = v44[v25[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v26 + 56))(v43, 0, 1, v25);
  }
  return a1;
}

double sub_10063F910(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  __n128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double result;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
    swift_release();
  if (a1[10])
    swift_release();
  if (a1[16])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v4 = (char *)a1 + *(int *)(a2 + 48);
  v5 = _s12ClickMetricsVMa(0);
  v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v8 = &v4[*(int *)(v5 + 20)];
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v7 = swift_bridgeObjectRelease();
    if (*(_QWORD *)&v4[*(int *)(v5 + 28) + 8] >= 0xAuLL)
      v7 = swift_bridgeObjectRelease();
  }
  v11 = (char *)a1 + *(int *)(a2 + 52);
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v6)(v11, 1, v5, v7))
  {
    v13 = &v11[*(int *)(v5 + 20)];
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    if (*(_QWORD *)&v11[*(int *)(v5 + 28) + 8] >= 0xAuLL)
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10063FAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  int *v23;
  uint64_t v24;
  unsigned int (*v25)(_BYTE *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = (_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v10;
  }
  v13 = *(_QWORD *)(a2 + 80);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v14;
    swift_retain();
    v15 = *(_QWORD *)(a2 + 128);
    if (v15)
    {
LABEL_6:
      v16 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v16;
      v17 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v17;
      v18 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = v15;
      *(_QWORD *)(a1 + 136) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_9;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    v15 = *(_QWORD *)(a2 + 128);
    if (v15)
      goto LABEL_6;
  }
  v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_9:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v20 = *(int *)(a3 + 48);
  v21 = (_BYTE *)(a1 + v20);
  v22 = (_BYTE *)(a2 + v20);
  v23 = (int *)_s12ClickMetricsVMa(0);
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = sub_100007E8C(&qword_1011AD448);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v61 = a3;
    v62 = v24;
    *v21 = *v22;
    v27 = v23[5];
    v28 = &v21[v27];
    v29 = &v22[v27];
    v30 = type metadata accessor for URL(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119E460);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    a3 = v61;
    v33 = v23[6];
    v34 = &v21[v33];
    v35 = &v22[v33];
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v23[7];
    v38 = &v21[v37];
    v39 = &v22[v37];
    v40 = *(_QWORD *)&v22[v37 + 8];
    swift_bridgeObjectRetain();
    if (v40 > 9)
    {
      *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    v21[v23[8]] = v22[v23[8]];
    v24 = v62;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v62 + 56))(v21, 0, 1, v23);
  }
  v41 = *(int *)(a3 + 52);
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  if (v25(v43, 1, v23))
  {
    v44 = sub_100007E8C(&qword_1011AD448);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = v24;
    *v42 = *v43;
    v46 = v23[5];
    v47 = &v42[v46];
    v48 = &v43[v46];
    v49 = type metadata accessor for URL(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C(&qword_10119E460);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v23[6];
    v53 = &v42[v52];
    v54 = &v43[v52];
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = v23[7];
    v57 = &v42[v56];
    v58 = &v43[v56];
    v59 = *(_QWORD *)&v43[v56 + 8];
    swift_bridgeObjectRetain();
    if (v59 > 9)
    {
      *v57 = *v58;
      v57[1] = v59;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
    }
    v42[v23[8]] = v43[v23[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v45 + 56))(v42, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_10063FEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t (*v40)(_BYTE *, uint64_t, uint64_t);
  int v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  int v62;
  int v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_BYTE *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v6;
      *(_QWORD *)(a1 + 72) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v9;
      *(_QWORD *)(a1 + 88) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  v12 = (_OWORD *)(a1 + 96);
  v13 = (_OWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v14)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v15;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1006407FC((_QWORD *)(a1 + 96));
      v18 = *(_OWORD *)(a2 + 112);
      v17 = *(_OWORD *)(a2 + 128);
      *v12 = *v13;
      *(_OWORD *)(a1 + 112) = v18;
      *(_OWORD *)(a1 + 128) = v17;
    }
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v19 = *v13;
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v20;
    *v12 = v19;
  }
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v21 = *(int *)(a3 + 48);
  v22 = (_BYTE *)(a1 + v21);
  v23 = (_BYTE *)(a2 + v21);
  v24 = (int *)_s12ClickMetricsVMa(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_10005B748((uint64_t)v22, _s12ClickMetricsVMa);
      goto LABEL_28;
    }
    v99 = a3;
    v101 = v25;
    *v22 = *v23;
    v36 = v24[5];
    v37 = &v22[v36];
    v38 = &v23[v36];
    v39 = type metadata accessor for URL(0);
    v96 = *(_QWORD *)(v39 - 8);
    v40 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v96 + 48);
    v97 = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    v41 = v40(v38, 1, v39);
    if ((_DWORD)v37)
    {
      if (v41)
      {
        v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v43 = v97;
LABEL_38:
        memcpy(v43, v38, v42);
        goto LABEL_42;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v96 + 16))(v97, v38, v39);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v97, 0, 1, v39);
    }
    else
    {
      if (v41)
      {
        (*(void (**)(void *, uint64_t))(v96 + 8))(v97, v39);
        v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v43 = v97;
        goto LABEL_38;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v96 + 24))(v97, v38, v39);
    }
LABEL_42:
    v25 = v101;
    v51 = v24[6];
    v52 = &v22[v51];
    v53 = &v23[v51];
    *v52 = *v53;
    v52[1] = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v54 = v24[7];
    v55 = (uint64_t)&v22[v54];
    v56 = &v23[v54];
    v57 = *(_QWORD *)&v22[v54 + 8];
    v58 = *(_QWORD *)&v23[v54 + 8];
    if (v57 == 9)
    {
      a3 = v99;
      if (v58 <= 9)
      {
LABEL_44:
        *(_OWORD *)v55 = *(_OWORD *)v56;
LABEL_55:
        v22[v24[8]] = v23[v24[8]];
        goto LABEL_56;
      }
LABEL_54:
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *(_QWORD *)(v55 + 8) = *((_QWORD *)v56 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    if (v58 == 9)
    {
      sub_1001C5334(v55);
    }
    else
    {
      if (v57 < 9)
      {
        a3 = v99;
        if (v58 < 9)
          goto LABEL_44;
        goto LABEL_54;
      }
      if (v58 >= 9)
      {
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *(_QWORD *)(v55 + 8) = *((_QWORD *)v56 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      sub_10004FF60(v55, &qword_1011A4D80);
    }
    *(_OWORD *)v55 = *(_OWORD *)v56;
LABEL_53:
    a3 = v99;
    goto LABEL_55;
  }
  if (v28)
  {
LABEL_28:
    v35 = sub_100007E8C(&qword_1011AD448);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_56;
  }
  v98 = a3;
  v100 = v25;
  *v22 = *v23;
  v29 = v24[5];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = type metadata accessor for URL(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_100007E8C(&qword_10119E460);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v25 = v100;
  v44 = v24[6];
  v45 = &v22[v44];
  v46 = &v23[v44];
  *v45 = *v46;
  v45[1] = v46[1];
  v47 = v24[7];
  v48 = &v22[v47];
  v49 = &v23[v47];
  v50 = *(_QWORD *)&v23[v47 + 8];
  swift_bridgeObjectRetain();
  if (v50 > 9)
  {
    *v48 = *v49;
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  a3 = v98;
  v22[v24[8]] = v23[v24[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v100 + 56))(v22, 0, 1, v24);
LABEL_56:
  v59 = *(int *)(a3 + 52);
  v60 = (_BYTE *)(a1 + v59);
  v61 = (_BYTE *)(a2 + v59);
  v62 = v26((_BYTE *)(a1 + v59), 1, v24);
  v63 = v26(v61, 1, v24);
  if (!v62)
  {
    if (v63)
    {
      sub_10005B748((uint64_t)v60, _s12ClickMetricsVMa);
      goto LABEL_62;
    }
    *v60 = *v61;
    v71 = v24[5];
    v72 = &v60[v71];
    v73 = &v61[v71];
    v74 = type metadata accessor for URL(0);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 1, v74);
    v78 = v76(v73, 1, v74);
    if (v77)
    {
      if (!v78)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v75 + 16))(v72, v73, v74);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        goto LABEL_73;
      }
    }
    else
    {
      if (!v78)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v75 + 24))(v72, v73, v74);
LABEL_73:
        v87 = v24[6];
        v88 = &v60[v87];
        v89 = &v61[v87];
        *v88 = *v89;
        v88[1] = v89[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v90 = v24[7];
        v91 = &v60[v90];
        v92 = &v61[v90];
        v93 = *(_QWORD *)&v60[v90 + 8];
        v94 = *(_QWORD *)&v61[v90 + 8];
        if (v93 == 9)
        {
          if (v94 >= 0xA)
            goto LABEL_81;
        }
        else if (v94 == 9)
        {
          sub_1001C5334((uint64_t)v91);
        }
        else if (v93 >= 9)
        {
          if (v94 >= 9)
          {
            *v91 = *v92;
            v91[1] = v92[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          sub_10004FF60((uint64_t)v91, &qword_1011A4D80);
        }
        else if (v94 >= 9)
        {
LABEL_81:
          *v91 = *v92;
          v91[1] = v92[1];
          swift_bridgeObjectRetain();
LABEL_86:
          v60[v24[8]] = v61[v24[8]];
          return a1;
        }
        *(_OWORD *)v91 = *(_OWORD *)v92;
        goto LABEL_86;
      }
      (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v72, v74);
    }
    v86 = sub_100007E8C(&qword_10119E460);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_73;
  }
  if (v63)
  {
LABEL_62:
    v70 = sub_100007E8C(&qword_1011AD448);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    return a1;
  }
  *v60 = *v61;
  v64 = v24[5];
  v65 = &v60[v64];
  v66 = &v61[v64];
  v67 = type metadata accessor for URL(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = sub_100007E8C(&qword_10119E460);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  v79 = v24[6];
  v80 = &v60[v79];
  v81 = &v61[v79];
  *v80 = *v81;
  v80[1] = v81[1];
  v82 = v24[7];
  v83 = &v60[v82];
  v84 = &v61[v82];
  v85 = *(_QWORD *)&v61[v82 + 8];
  swift_bridgeObjectRetain();
  if (v85 > 9)
  {
    *v83 = *v84;
    v83[1] = v84[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v83 = *(_OWORD *)v84;
  }
  v60[v24[8]] = v61[v24[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v25 + 56))(v60, 0, 1, v24);
  return a1;
}

_QWORD *sub_1006407FC(_QWORD *a1)
{
  destroy for AccessoryButtonCell(a1);
  return a1;
}

uint64_t sub_100640828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _BYTE *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v11 = *(int *)(a3 + 48);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *(_OWORD *)(a1 + 128) = v10;
  v14 = (int *)_s12ClickMetricsVMa(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_100007E8C(&qword_1011AD448);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v18 = v14[5];
    v34 = v15;
    __dst = &v12[v18];
    v19 = &v13[v18];
    v20 = type metadata accessor for URL(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
    *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
    v12[v14[8]] = v13[v14[8]];
    v15 = v34;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v34 + 56))(v12, 0, 1, v14);
  }
  v23 = *(int *)(a3 + 52);
  v24 = (_BYTE *)(a1 + v23);
  v25 = (_BYTE *)(a2 + v23);
  if (v16(v25, 1, v14))
  {
    v26 = sub_100007E8C(&qword_1011AD448);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v27 = v14[5];
    v28 = &v24[v27];
    v29 = &v25[v27];
    v30 = type metadata accessor for URL(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119E460);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    *(_OWORD *)&v24[v14[6]] = *(_OWORD *)&v25[v14[6]];
    *(_OWORD *)&v24[v14[7]] = *(_OWORD *)&v25[v14[7]];
    v24[v14[8]] = v25[v14[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v15 + 56))(v24, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100640ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  int v55;
  int v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_BYTE *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v10;
      *(_QWORD *)(a1 + 72) = v11;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v12;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v13 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v13)
    {
      v14 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 88) = v14;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v15;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  if (*(_QWORD *)(a1 + 128))
  {
    if (*(_QWORD *)(a2 + 128))
    {
      v16 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v17;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      swift_release();
      goto LABEL_20;
    }
    sub_1006407FC((_QWORD *)(a1 + 96));
  }
  v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_20:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v19 = *(int *)(a3 + 48);
  v20 = (_BYTE *)(a1 + v19);
  v21 = (_BYTE *)(a2 + v19);
  v22 = (int *)_s12ClickMetricsVMa(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_10005B748((uint64_t)v20, _s12ClickMetricsVMa);
      goto LABEL_26;
    }
    v87 = a3;
    v89 = v23;
    *v20 = *v21;
    v34 = v22[5];
    v35 = &v20[v34];
    v36 = &v21[v34];
    v37 = type metadata accessor for URL(0);
    v84 = *(_QWORD *)(v37 - 8);
    v38 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v84 + 48);
    v85 = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    v39 = v38(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (v39)
      {
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v41 = v85;
LABEL_34:
        memcpy(v41, v36, v40);
        goto LABEL_37;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v84 + 32))(v85, v36, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v37);
    }
    else
    {
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v84 + 8))(v85, v37);
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v41 = v85;
        goto LABEL_34;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v84 + 40))(v85, v36, v37);
    }
LABEL_37:
    v23 = v89;
    v42 = v22[6];
    v43 = &v20[v42];
    v44 = (uint64_t *)&v21[v42];
    v46 = *v44;
    v45 = v44[1];
    *v43 = v46;
    v43[1] = v45;
    swift_bridgeObjectRelease();
    v47 = v22[7];
    v48 = &v20[v47];
    v49 = &v21[v47];
    v50 = *(_QWORD *)&v20[v47 + 8];
    v51 = *(_QWORD *)&v21[v47 + 8];
    if (v50 != 9)
    {
      if (v51 == 9)
      {
        sub_1001C5334((uint64_t)v48);
      }
      else if (v50 >= 9)
      {
        if (v51 >= 9)
        {
          *v48 = *v49;
          v48[1] = v51;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        sub_10004FF60((uint64_t)v48, &qword_1011A4D80);
      }
    }
    *(_OWORD *)v48 = *(_OWORD *)v49;
LABEL_44:
    a3 = v87;
    v20[v22[8]] = v21[v22[8]];
    goto LABEL_45;
  }
  if (v26)
  {
LABEL_26:
    v33 = sub_100007E8C(&qword_1011AD448);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_45;
  }
  v86 = a3;
  v88 = v23;
  *v20 = *v21;
  v27 = v22[5];
  v28 = &v20[v27];
  v29 = &v21[v27];
  v30 = type metadata accessor for URL(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C(&qword_10119E460);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  a3 = v86;
  v23 = v88;
  *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
  *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
  v20[v22[8]] = v21[v22[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v88 + 56))(v20, 0, 1, v22);
LABEL_45:
  v52 = *(int *)(a3 + 52);
  v53 = (_BYTE *)(a1 + v52);
  v54 = (_BYTE *)(a2 + v52);
  v55 = v24((_BYTE *)(a1 + v52), 1, v22);
  v56 = v24(v54, 1, v22);
  if (!v55)
  {
    if (v56)
    {
      sub_10005B748((uint64_t)v53, _s12ClickMetricsVMa);
      goto LABEL_51;
    }
    *v53 = *v54;
    v64 = v22[5];
    v65 = &v53[v64];
    v66 = &v54[v64];
    v67 = type metadata accessor for URL(0);
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48);
    v70 = v69(v65, 1, v67);
    v71 = v69(v66, 1, v67);
    if (v70)
    {
      if (!v71)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        goto LABEL_60;
      }
    }
    else
    {
      if (!v71)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 40))(v65, v66, v67);
LABEL_60:
        v73 = v22[6];
        v74 = &v53[v73];
        v75 = (uint64_t *)&v54[v73];
        v77 = *v75;
        v76 = v75[1];
        *v74 = v77;
        v74[1] = v76;
        swift_bridgeObjectRelease();
        v78 = v22[7];
        v79 = &v53[v78];
        v80 = &v54[v78];
        v81 = *(_QWORD *)&v53[v78 + 8];
        v82 = *(_QWORD *)&v54[v78 + 8];
        if (v81 != 9)
        {
          if (v82 == 9)
          {
            sub_1001C5334((uint64_t)v79);
          }
          else if (v81 >= 9)
          {
            if (v82 >= 9)
            {
              *v79 = *v80;
              v79[1] = v82;
              swift_bridgeObjectRelease();
              goto LABEL_67;
            }
            sub_10004FF60((uint64_t)v79, &qword_1011A4D80);
          }
        }
        *(_OWORD *)v79 = *(_OWORD *)v80;
LABEL_67:
        v53[v22[8]] = v54[v22[8]];
        return a1;
      }
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v65, v67);
    }
    v72 = sub_100007E8C(&qword_10119E460);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_60;
  }
  if (v56)
  {
LABEL_51:
    v63 = sub_100007E8C(&qword_1011AD448);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    return a1;
  }
  *v53 = *v54;
  v57 = v22[5];
  v58 = &v53[v57];
  v59 = &v54[v57];
  v60 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    v62 = sub_100007E8C(&qword_10119E460);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 32))(v58, v59, v60);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  *(_OWORD *)&v53[v22[6]] = *(_OWORD *)&v54[v22[6]];
  *(_OWORD *)&v53[v22[7]] = *(_OWORD *)&v54[v22[7]];
  v53[v22[8]] = v54[v22[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v23 + 56))(v53, 0, 1, v22);
  return a1;
}

uint64_t sub_100641214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100641220);
}

uint64_t sub_100641220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(&qword_1011AD448);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v9);
  }
}

uint64_t sub_1006412AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006412B8);
}

uint64_t sub_1006412B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011AD448);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

void sub_100641330(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];
  uint64_t v5;
  uint64_t v6;

  v4[0] = &unk_100EC6188;
  v4[1] = &unk_100EC6188;
  v4[2] = &unk_100EC6188;
  v4[3] = &unk_100EC6188;
  v4[4] = &unk_100EC6188;
  v4[5] = &unk_100EC6188;
  v4[6] = &unk_100EC61A0;
  v4[7] = &unk_100EC61B8;
  sub_1000E3A44(319, (unint64_t *)&unk_1011BF450, _s12ClickMetricsVMa, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
  }
}

uint64_t _s5ModelVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s5ModelVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

_QWORD *_s5ModelVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  v7 = a1[5];
  a1[5] = v6;
  swift_release(v7);
  return a1;
}

uint64_t _s5ModelVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5ModelVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5ModelVMa()
{
  return &_s5ModelVN;
}

uint64_t sub_1006415C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s16SafeAreaObserverCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100641600@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  __int128 v82;

  v60 = a3;
  v59 = a2;
  v61 = a4;
  v4 = a1 & 1;
  v55 = sub_100007E8C(&qword_1011BF4C0);
  __chkstk_darwin(v55);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BF4C8);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011BF4D0);
  __chkstk_darwin(v54);
  v11 = (_OWORD *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = sub_100007E8C(&qword_1011BF4D8);
  __chkstk_darwin(v56);
  v53 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011BF4E0);
  __chkstk_darwin(v57);
  v58 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C1A8 != -1)
    swift_once(&qword_10119C1A8, sub_10055C25C);
  v14 = type metadata accessor for LibraryImport.Controller(0);
  v15 = sub_100048748(&qword_1011BF4E8, type metadata accessor for LibraryImport.Controller, (uint64_t)&unk_100EC0F8C);
  swift_retain();
  v17 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  v18 = v17;
  v20 = v19;
  if (v4)
  {
    if (qword_10119C3F8 != -1)
      v17 = swift_once(&qword_10119C3F8, sub_1006450DC);
    v21 = &qword_1011BF098;
  }
  else
  {
    if (qword_10119C3F0 != -1)
      v17 = swift_once(&qword_10119C3F0, sub_1006450BC);
    v21 = &qword_1011BF090;
  }
  v22 = *v21;
  v23 = static Alignment.center.getter(v17);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v70, 0, 1, 0, 1, 0, 1, v22, 0, 0, 1, 0, 1, v23, v24);
  *(_QWORD *)&v62 = v18;
  *((_QWORD *)&v62 + 1) = v20;
  *(_QWORD *)&v63 = v70;
  BYTE8(v63) = v71;
  *(_QWORD *)&v64 = v72;
  BYTE8(v64) = v73;
  *(_QWORD *)&v65 = v74;
  BYTE8(v65) = v75;
  *(_QWORD *)&v66 = v76;
  BYTE8(v66) = v77;
  *(_QWORD *)&v67 = v78;
  BYTE8(v67) = v79;
  *(_QWORD *)&v68 = v80;
  BYTE8(v68) = v81;
  v69 = v82;
  v25 = v4;
  v26 = v59;
  v27 = v4;
  v28 = v60;
  v29 = sub_100641BB8(v25, (uint64_t)v9);
  v30 = static Alignment.center.getter(v29);
  v32 = v31;
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011BF4C8);
  v33 = (uint64_t *)&v6[*(int *)(v55 + 36)];
  *v33 = v30;
  v33[1] = v32;
  sub_10004A160((uint64_t)v6, (uint64_t)v11 + *(int *)(v54 + 36), &qword_1011BF4C0);
  v34 = v67;
  v11[4] = v66;
  v11[5] = v34;
  v35 = v69;
  v11[6] = v68;
  v11[7] = v35;
  v36 = v63;
  *v11 = v62;
  v11[1] = v36;
  v37 = v65;
  v11[2] = v64;
  v11[3] = v37;
  sub_1003E3468((uint64_t)&v62);
  sub_10004FF60((uint64_t)v6, &qword_1011BF4C0);
  sub_10004FF60((uint64_t)v9, &qword_1011BF4C8);
  swift_release();
  v38 = sub_100641DA0(v27, v26, v28);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = static Edge.Set.all.getter(v45);
  v47 = v53;
  sub_10004A160((uint64_t)v11, v53, &qword_1011BF4D0);
  v48 = v47 + *(int *)(v56 + 36);
  *(_BYTE *)v48 = v46;
  *(double *)(v48 + 8) = v38;
  *(_QWORD *)(v48 + 16) = v40;
  *(_QWORD *)(v48 + 24) = v42;
  *(_QWORD *)(v48 + 32) = v44;
  *(_BYTE *)(v48 + 40) = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011BF4D0);
  KeyPath = swift_getKeyPath(&unk_100EC6310);
  v50 = v58;
  sub_10004A160(v47, v58, &qword_1011BF4D8);
  v51 = v50 + *(int *)(v57 + 36);
  *(_QWORD *)v51 = KeyPath;
  *(_BYTE *)(v51 + 8) = v27;
  sub_10004FF60(v47, &qword_1011BF4D8);
  return sub_100065228(v50, v61, &qword_1011BF4E0);
}

uint64_t sub_100641BB8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011BF4F8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(a2, 1, 1, v7, v9);
  if (qword_10119C408 != -1)
    swift_once(&qword_10119C408, sub_100645154);
  v12 = qword_1011BF0A8;
  v13 = (char *)v6 + *(int *)(v4 + 20);
  v14 = enum case for RoundedCornerStyle.continuous(_:);
  v15 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *v6 = v12;
  v6[1] = v12;
  if (qword_10119C400 != -1)
    swift_once(&qword_10119C400, sub_1006450FC);
  v16 = qword_1011BF0A0;
  sub_10005B704((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v11[*(int *)(v7 + 36)] = v16;
  swift_retain();
  sub_10005B748((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100065228((uint64_t)v11, a2, &qword_1011BF4F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

double sub_100641DA0(char a1, uint64_t a2, uint64_t a3)
{
  double v4;
  void (*v5)(uint64_t *__return_ptr, __n128);
  __n128 v6;
  __n128 v7;
  void (*v8)(uint64_t *__return_ptr, __n128);
  __n128 v9;
  uint64_t v11;

  if ((a1 & 1) != 0)
  {
    v4 = *(double *)EdgeInsets.zero.unsafeMutableAddressor();
    v8 = *(void (**)(uint64_t *__return_ptr, __n128))(*(_QWORD *)a3 + 112);
    v9 = swift_retain();
    v8(&v11, v9);
    swift_release();
  }
  else
  {
    if (qword_10119C410 != -1)
      swift_once(&qword_10119C410, sub_100645174);
    v4 = *(double *)&qword_1011BF0B0;
    v5 = *(void (**)(uint64_t *__return_ptr, __n128))(*(_QWORD *)a3 + 112);
    v6 = swift_retain();
    v5(&v11, v6);
    swift_release();
    v7 = swift_retain();
    v5(&v11, v7);
    swift_release();
  }
  return v4;
}

uint64_t sub_100641EC4()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_100647CD8();
  EnvironmentValues.subscript.getter(&var1, &_s24LibraryImportViewTypeKeyVN, &_s24LibraryImportViewTypeKeyVN, v0);
  return var1;
}

uint64_t sub_100641EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100641600(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

void sub_100641F08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  char v93;
  __int128 v94;

  v89 = a1;
  v79 = _s16ActionButtonViewVMa(0);
  __chkstk_darwin(v79);
  v81 = (uint64_t)&v77 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100007E8C(&qword_1011BF6A8);
  __chkstk_darwin(v88);
  v80 = (uint64_t)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v82 = (uint64_t)&v77 - v4;
  v5 = _s16ActionButtonViewV5ModelVMa(0);
  __chkstk_darwin(v5);
  v86 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BF6B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011BF6B8);
  __chkstk_darwin(v85);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011BF6C0);
  __chkstk_darwin(v12);
  v87 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OpacityTransition(0);
  v83 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v77 - v18;
  v20 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v20);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC65F0);
  v24 = swift_getKeyPath(&unk_100EC6618);
  swift_retain();
  static Published.subscript.getter(v22, v25, KeyPath, v24);
  swift_release();
  swift_release();
  swift_release();
  v26 = _s9ViewModelOMa(0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v22, 1, v26);
  if ((_DWORD)v27 == 1)
  {
    v28 = static Alignment.center.getter(v27);
    _FrameLayout.init(width:height:alignment:)(&v91, 0, 1, 0, 0, v28, v29);
    v30 = BYTE8(v91);
    v31 = v92;
    v32 = v93;
    *(_QWORD *)v9 = v91;
    v9[8] = v30;
    *((_QWORD *)v9 + 2) = v31;
    v9[24] = v32;
    *((_OWORD *)v9 + 2) = v94;
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v33 = sub_100007E8C(&qword_1011A96D8);
    v34 = sub_10064A90C();
    v35 = sub_100283308();
    _ConditionalContent<>.init(storage:)(v9, v12, v33, v34, v35);
  }
  else
  {
    v77 = v7;
    v78 = v12;
    if (swift_getEnumCaseMultiPayload(v22, v26) == 1)
    {
      v36 = v86;
      sub_10005B6C0((uint64_t)v22, v86, _s16ActionButtonViewV5ModelVMa);
      v37 = v36;
      v38 = v81;
      sub_10005B704(v37, v81, _s16ActionButtonViewV5ModelVMa);
      v39 = v79;
      v40 = v38 + *(int *)(v79 + 20);
      *(_QWORD *)v40 = swift_getKeyPath(&unk_100EC6310);
      *(_BYTE *)(v40 + 8) = 0;
      v41 = *(int *)(v39 + 24);
      v90 = 0;
      v42 = sub_100007E8C(&qword_1011BF718);
      v43 = State.init(wrappedValue:)(&v90, v42);
      *(_OWORD *)(v38 + v41) = v91;
      OpacityTransition.init()(v43);
      v44 = v83;
      v45 = v84;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v16, v19, v84);
      v46 = sub_100048748(&qword_1011BF720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
      v47 = AnyTransition.init<A>(_:)(v16, v45, v46);
      v48 = v80;
      sub_10005B704(v38, v80, _s16ActionButtonViewVMa);
      v49 = v88;
      *(_QWORD *)(v48 + *(int *)(v88 + 36)) = v47;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      sub_10005B748(v38, _s16ActionButtonViewVMa);
      v50 = v82;
      sub_100065228(v48, v82, &qword_1011BF6A8);
      sub_10004A160(v50, (uint64_t)v11, &qword_1011BF6A8);
      swift_storeEnumTagMultiPayload(v11, v85, 1);
      v51 = sub_100007E8C(&qword_1011BF6E0);
      v52 = sub_10064A930();
      v53 = sub_10064A9F8();
      v54 = (uint64_t)v87;
      _ConditionalContent<>.init(storage:)(v11, v51, v49, v52, v53);
      sub_10004A160(v54, (uint64_t)v9, (uint64_t *)&unk_1011BF6C0);
      swift_storeEnumTagMultiPayload(v9, v77, 0);
      v55 = sub_100007E8C(&qword_1011A96D8);
      v56 = sub_10064A90C();
      v57 = sub_100283308();
      _ConditionalContent<>.init(storage:)(v9, v78, v55, v56, v57);
      sub_10004FF60(v54, (uint64_t *)&unk_1011BF6C0);
      sub_10004FF60(v50, &qword_1011BF6A8);
      sub_10005B748(v86, _s16ActionButtonViewV5ModelVMa);
    }
    else
    {
      v58 = *((_QWORD *)v22 + 1);
      v86 = *(_QWORD *)v22;
      v59 = *((_QWORD *)v22 + 2);
      v60 = *((_QWORD *)v22 + 3);
      v61 = *((_QWORD *)v22 + 4);
      v81 = *((_QWORD *)v22 + 5);
      v82 = v59;
      v62 = v22[48];
      v63 = swift_getKeyPath(&unk_100EC6310);
      ((void (*)(void))OpacityTransition.init())();
      v65 = v83;
      v64 = v84;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v16, v19, v84);
      v66 = sub_100048748(&qword_1011BF720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
      v67 = AnyTransition.init<A>(_:)(v16, v64, v66);
      LOBYTE(v91) = v62;
      LOBYTE(v90) = 0;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v64);
      v68 = v91;
      LOBYTE(v65) = v90;
      v69 = v85;
      *(_QWORD *)v11 = v86;
      *((_QWORD *)v11 + 1) = v58;
      *((_QWORD *)v11 + 2) = v82;
      *((_QWORD *)v11 + 3) = v60;
      *((_QWORD *)v11 + 4) = v61;
      *((_QWORD *)v11 + 5) = v81;
      v11[48] = v68;
      *((_QWORD *)v11 + 7) = v63;
      v11[64] = v65;
      *((_QWORD *)v11 + 9) = v67;
      swift_storeEnumTagMultiPayload(v11, v69, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10006B3F8(v63, v65);
      swift_retain();
      v70 = sub_100007E8C(&qword_1011BF6E0);
      v71 = sub_10064A930();
      v72 = sub_10064A9F8();
      v73 = (uint64_t)v87;
      _ConditionalContent<>.init(storage:)(v11, v70, v88, v71, v72);
      sub_10004A160(v73, (uint64_t)v9, (uint64_t *)&unk_1011BF6C0);
      swift_storeEnumTagMultiPayload(v9, v77, 0);
      v74 = sub_100007E8C(&qword_1011A96D8);
      v75 = sub_10064A90C();
      v76 = sub_100283308();
      _ConditionalContent<>.init(storage:)(v9, v78, v74, v75, v76);
      sub_10004FF60(v73, (uint64_t *)&unk_1011BF6C0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10006B604(v63, v65);
      swift_release();
    }
  }
}

void sub_100642690(uint64_t a1@<X8>)
{
  sub_100641F08(a1);
}

uint64_t sub_100642698(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  char v6;
  _OWORD v7[3];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 48);
  return sub_1006465F0((double *)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1006426F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011BF728);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BF730);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v11 = sub_100007E8C(&qword_1011BF738);
  sub_1006428A4(v1, &v6[*(int *)(v11 + 44)]);
  v12 = *(_QWORD *)(v1 + 56);
  v13 = *(_BYTE *)(v1 + 64);
  sub_10006B3F8(*(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  v14 = sub_10082547C(v12, v13) & 1;
  sub_10006B604(v12, v13);
  v15 = sub_10064AA94(v14, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  v17 = v16;
  v19 = v18;
  v21 = v20;
  LOBYTE(v2) = static Edge.Set.all.getter(v22);
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011BF728);
  v23 = &v9[*(int *)(v7 + 36)];
  *v23 = v2;
  *((double *)v23 + 1) = v15;
  *((_QWORD *)v23 + 2) = v17;
  *((_QWORD *)v23 + 3) = v19;
  *((_QWORD *)v23 + 4) = v21;
  v23[40] = 0;
  sub_10004FF60((uint64_t)v6, &qword_1011BF728);
  sub_10004A160((uint64_t)v9, a1, &qword_1011BF730);
  *(_WORD *)(a1 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011BF740) + 36)) = 256;
  return sub_10004FF60((uint64_t)v9, &qword_1011BF730);
}

void sub_1006428A4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  Swift::String v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  unint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  void *v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  Swift::String v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  BOOL v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  _QWORD *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;

  v93 = a2;
  v103 = sub_100007E8C(&qword_1011A4C68);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011BF750);
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  __chkstk_darwin(v4);
  v106 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011BF758);
  __chkstk_darwin(v104);
  v117 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v105 = (char *)&v90 - v8;
  __chkstk_darwin(v9);
  v116 = (uint64_t)&v90 - v10;
  v11 = type metadata accessor for OpacityTransition(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v90 - v16;
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 24);
  v109 = *(_QWORD *)(a1 + 16);
  v94 = *(_QWORD *)(a1 + 32);
  v21 = sub_1004872C4((uint64_t)&off_1010ACF08);
  swift_bridgeObjectRetain();
  v22 = Text.init(optional:options:)(v18, v19, v21);
  v114 = v23;
  v115 = v22;
  v112 = v25;
  v113 = v24;
  OpacityTransition.init()(v22);
  v92 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v92(v14, v17, v11);
  v91 = sub_100048748(&qword_1011BF720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
  v111 = AnyTransition.init<A>(_:)(v14, v11, v91);
  v90 = *(void (**)(char *, uint64_t))(v12 + 8);
  v90(v17, v11);
  v119 = 0x203A656C746954;
  v120 = 0xE700000000000000;
  if (v19)
    v26 = v18;
  else
    v26 = 7104878;
  if (v19)
    v27 = (void *)v19;
  else
    v27 = (void *)0xE300000000000000;
  swift_bridgeObjectRetain();
  v28._countAndFlagsBits = v26;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v100 = v119;
  v110 = v120;
  v29 = *(_QWORD *)(a1 + 56);
  v30 = *(_BYTE *)(a1 + 64);
  sub_10006B3F8(v29, v30);
  v31 = sub_10082547C(v29, v30);
  sub_10006B604(v29, v30);
  if ((v31 & 1) != 0)
  {
    v36 = qword_10119C450;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v36 == -1;
    v34 = v20;
    if (!v33)
      swift_once(&qword_10119C450, sub_100645270);
    v35 = &dword_1011BF0EC;
  }
  else
  {
    v32 = qword_10119C448;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v32 == -1;
    v34 = v20;
    if (!v33)
      swift_once(&qword_10119C448, sub_100645254);
    v35 = &dword_1011BF0E8;
  }
  v37 = v109;
  v95 = *v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34)
  {
    v39 = static Font.Weight.semibold.getter(v38);
    v40 = (void *)v34;
    v41 = v37;
  }
  else
  {
    v39 = 0.0;
    v40 = (void *)0xE300000000000000;
    v41 = 7104878;
  }
  v42 = sub_1004872C4((uint64_t)&off_1010ACF30);
  swift_bridgeObjectRetain();
  v99 = Text.init(optional:options:)(v37, v34, v42);
  v98 = v43;
  v97 = v44;
  v96 = v45;
  OpacityTransition.init()(v99);
  v92(v14, v17, v11);
  v109 = AnyTransition.init<A>(_:)(v14, v11, v91);
  v90(v17, v11);
  v119 = 0x656C746974627553;
  v120 = 0xEA0000000000203ALL;
  v46 = v34;
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = v41;
  v47._object = v40;
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48 = v120;
  v92 = (void (*)(char *, char *, uint64_t))v119;
  LOBYTE(v120) = 0;
  v118 = 0x3FF0000000000000;
  v119 = v94;
  v49 = sub_1000E4360();
  v50 = v101;
  ProgressView.init<A>(value:total:)(&v119, &v118, &type metadata for CGFloat, v49);
  sub_10006B3F8(v29, v30);
  v51 = sub_10082547C(v29, v30);
  sub_10006B604(v29, v30);
  if ((v51 & 1) != 0)
  {
    v52 = v106;
    if (qword_10119C470 != -1)
      swift_once(&qword_10119C470, sub_1006452EC);
    v53 = &qword_1011BF108;
  }
  else
  {
    v52 = v106;
    if (qword_10119C430 != -1)
      swift_once(&qword_10119C430, sub_1006451F4);
    v53 = &qword_1011BF0D0;
  }
  v119 = *v53;
  v54 = sub_100049F28(&qword_1011A4C60, &qword_1011A4C68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
  v55 = sub_10064AC6C();
  v56 = v103;
  View.progressViewStyle<A>(_:)(&v119, v103, &type metadata for LinearProgressStyle, v54, v55);
  v57 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v50, v56);
  v58 = static Edge.Set.top.getter(v57);
  if (qword_10119C428 != -1)
    swift_once(&qword_10119C428, sub_1006451D4);
  v59 = v46 == 0;
  v60 = EdgeInsets.init(_all:)(*(double *)&qword_1011BF0C8);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v107;
  v67 = v108;
  v69 = (uint64_t)v105;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v52, v108);
  v70 = v69 + *(int *)(v104 + 36);
  *(_BYTE *)v70 = v58;
  *(double *)(v70 + 8) = v60;
  *(_QWORD *)(v70 + 16) = v62;
  *(_QWORD *)(v70 + 24) = v64;
  *(_QWORD *)(v70 + 32) = v66;
  *(_BYTE *)(v70 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v67);
  v71 = v116;
  sub_100065228(v69, v116, &qword_1011BF758);
  v72 = v117;
  sub_10004A160(v71, v117, &qword_1011BF758);
  v73 = v115;
  v74 = v93;
  v76 = v113;
  v75 = v114;
  *v93 = v115;
  v74[1] = v75;
  v77 = v112;
  v74[2] = v76;
  v74[3] = v77;
  v78 = v110;
  v79 = v100;
  v74[4] = v111;
  v74[5] = v79;
  v74[6] = v78;
  *((_DWORD *)v74 + 14) = v95;
  *((double *)v74 + 8) = v39;
  *((_BYTE *)v74 + 72) = v59;
  v80 = v99;
  v81 = v98;
  v74[10] = v99;
  v74[11] = v81;
  v82 = v97;
  v83 = v96;
  v74[12] = v97;
  v74[13] = v83;
  v84 = v92;
  v74[14] = v109;
  v74[15] = v84;
  v74[16] = v48;
  v85 = sub_100007E8C(&qword_1011BF768);
  sub_10004A160(v72, (uint64_t)v74 + *(int *)(v85 + 64), &qword_1011BF758);
  v86 = v73;
  v87 = v114;
  v88 = v76;
  v89 = v112;
  sub_1000E4440(v86, v114, v88, v112);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000E4440(v80, v81, v82, v83);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10004FF60(v116, &qword_1011BF758);
  sub_10004FF60(v117, &qword_1011BF758);
  sub_1000E450C(v80, v81, v82, v83);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000E450C(v115, v87, v113, v89);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1006430F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006426F0(a1);
}

uint64_t sub_10064313C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _OWORD v70[7];

  v2 = v1;
  v66 = a1;
  v3 = sub_100007E8C(&qword_1011BF770);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BF778);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v62 = sub_100007E8C(&qword_1011BF780);
  __chkstk_darwin(v62);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011BF788);
  __chkstk_darwin(v64);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011BF790);
  __chkstk_darwin(v63);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v15);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v16 = sub_100007E8C(&qword_1011BF798);
  sub_100643748(v2, (uint64_t *)&v5[*(int *)(v16 + 44)]);
  v61 = _s16ActionButtonViewVMa(0);
  v17 = *(int *)(v61 + 20);
  v65 = v2;
  v18 = (char *)v2 + v17;
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10006B3F8(*(_QWORD *)v18, v20);
  v21 = sub_10082547C(v19, v20);
  v22 = sub_10006B604(v19, v20);
  if ((v21 & 1) != 0)
  {
    if (qword_10119C490 != -1)
      v22 = swift_once(&qword_10119C490, sub_1006458E0);
    v24 = *(double *)&qword_1011BF128;
    if (qword_10119C4A0 != -1)
      v22 = swift_once(&qword_10119C4A0, sub_100645920);
    v26 = qword_1011BF138;
    v30 = qword_1011BF138;
    if (qword_10119C498 != -1)
    {
      v22 = swift_once(&qword_10119C498, sub_100645900);
      v30 = qword_1011BF138;
    }
    v28 = qword_1011BF130;
  }
  else
  {
    if (qword_10119C480 != -1)
      swift_once(&qword_10119C480, sub_1006458A0);
    v23 = *(double *)&qword_1011BF118;
    if (qword_10119C478 != -1)
      swift_once(&qword_10119C478, sub_100645880);
    v24 = EdgeInsets.init(horizontal:vertical:)(v23, *(double *)&qword_1011BF110);
    v26 = v25;
    v28 = v27;
    v30 = v29;
  }
  v31 = static Edge.Set.all.getter(v22);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011BF770);
  v32 = &v8[*(int *)(v6 + 36)];
  *v32 = v31;
  *((double *)v32 + 1) = v24;
  *((_QWORD *)v32 + 2) = v26;
  *((_QWORD *)v32 + 3) = v28;
  *((_QWORD *)v32 + 4) = v30;
  v32[40] = 0;
  sub_10004FF60((uint64_t)v5, &qword_1011BF770);
  v33 = *(_QWORD *)v18;
  v34 = v18[8];
  sub_10006B3F8(*(_QWORD *)v18, v34);
  v35 = sub_10082547C(v33, v34);
  v36 = sub_10006B604(v33, v34);
  if ((v35 & 1) != 0)
  {
    if (qword_10119C3F8 != -1)
      v36 = swift_once(&qword_10119C3F8, sub_1006450DC);
    v37 = &qword_1011BF098;
  }
  else
  {
    if (qword_10119C3F0 != -1)
      v36 = swift_once(&qword_10119C3F0, sub_1006450BC);
    v37 = &qword_1011BF090;
  }
  v38 = *v37;
  v39 = static Alignment.center.getter(v36);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v70, 0, 1, 0, 1, 0x7FF0000000000000, 0, v38, 0, 0, 1, 0, 1, v39, v40);
  sub_10004A160((uint64_t)v8, (uint64_t)v10, &qword_1011BF778);
  v41 = &v10[*(int *)(v62 + 36)];
  v42 = v70[5];
  *((_OWORD *)v41 + 4) = v70[4];
  *((_OWORD *)v41 + 5) = v42;
  *((_OWORD *)v41 + 6) = v70[6];
  v43 = v70[1];
  *(_OWORD *)v41 = v70[0];
  *((_OWORD *)v41 + 1) = v43;
  v44 = v70[3];
  *((_OWORD *)v41 + 2) = v70[2];
  *((_OWORD *)v41 + 3) = v44;
  v45 = sub_10004FF60((uint64_t)v8, &qword_1011BF778);
  v46 = static Alignment.center.getter(v45);
  v48 = v47;
  v49 = (uint64_t)v65;
  v67 = *(_OWORD *)((char *)v65 + *(int *)(v61 + 24));
  v50 = sub_100007E8C(&qword_1011BF7A0);
  State.projectedValue.getter(&v68, v50);
  v62 = v68;
  v51 = v69;
  sub_10004A160((uint64_t)v10, (uint64_t)v12, &qword_1011BF780);
  v52 = &v12[*(int *)(v64 + 36)];
  *(_OWORD *)v52 = v62;
  *((_QWORD *)v52 + 2) = v51;
  *((_QWORD *)v52 + 3) = v46;
  *((_QWORD *)v52 + 4) = v48;
  v53 = sub_10004FF60((uint64_t)v10, &qword_1011BF780);
  v54 = static Alignment.topTrailing.getter(v53);
  v56 = v55;
  v57 = (uint64_t)&v14[*(int *)(v63 + 36)];
  sub_1006443B8(v49, v57);
  v58 = (uint64_t *)(v57 + *(int *)(sub_100007E8C(&qword_1011BF7A8) + 36));
  *v58 = v54;
  v58[1] = v56;
  sub_100065228((uint64_t)v12, (uint64_t)v14, &qword_1011BF788);
  return sub_100065228((uint64_t)v14, v66, &qword_1011BF790);
}

double sub_100643748@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  Swift::Int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[2];

  v4 = _s16ActionButtonViewVMa(0);
  v90 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v91 = v5;
  v92 = (uint64_t *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = sub_100007E8C(&qword_1011BF818);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011BF820);
  __chkstk_darwin(v93);
  v98 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011BF828);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v97 = (uint64_t)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BF830);
  __chkstk_darwin(v9);
  v102 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v114 = (uint64_t)&v88 - v12;
  v13 = type metadata accessor for OpacityTransition(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - v18;
  v20 = *a1;
  v21 = a1[1];
  v22 = sub_1004872C4((uint64_t)&off_1010ACF58);
  swift_bridgeObjectRetain();
  v23 = Text.init(optional:options:)(v20, v21, v22);
  v25 = v24;
  v113 = v26;
  v28 = v27;
  OpacityTransition.init()(v23);
  v111 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v111(v16, v19, v13);
  v109 = sub_100048748(&qword_1011BF720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
  v29 = AnyTransition.init<A>(_:)(v16, v13, v109);
  v110 = *(void (**)(char *, uint64_t))(v14 + 8);
  v110(v19, v13);
  strcpy((char *)v121, "Title: ");
  v121[1] = 0xE700000000000000;
  v30 = (void *)a1[1];
  v119 = v28;
  v120 = v25;
  v118 = v29;
  v106 = a2;
  if (v30)
  {
    v31 = *a1;
    v32 = v30;
  }
  else
  {
    v31 = 7104878;
    v32 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34 = v121[1];
  v99 = v121[0];
  v35 = a1[2];
  v36 = a1[3];
  v37 = sub_1004872C4((uint64_t)&off_1010ACF80);
  swift_bridgeObjectRetain();
  v38 = Text.init(optional:options:)(v35, v36, v37);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  OpacityTransition.init()(v38);
  v111(v16, v19, v13);
  v117 = AnyTransition.init<A>(_:)(v16, v13, v109);
  v110(v19, v13);
  strcpy((char *)v121, "Subtitle: ");
  BYTE3(v121[1]) = 0;
  HIDWORD(v121[1]) = -369098752;
  v45 = (void *)a1[3];
  v107 = v38;
  v104 = v44;
  v105 = v42;
  v115 = v40;
  if (v45)
  {
    v46 = a1[2];
    v47 = v45;
  }
  else
  {
    v46 = 7104878;
    v47 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v48._countAndFlagsBits = v46;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  v49 = a1[8];
  v112 = v23;
  v108 = v34;
  v116 = v121[1];
  v103 = v121[0];
  if (!v49)
  {
    v73 = 1;
    v74 = (uint64_t)v102;
    v72 = v114;
LABEL_12:
    v75 = v113;
    v70 = v101;
    goto LABEL_13;
  }
  v50 = a1[9];
  v51 = swift_allocObject(&unk_1010D4248, 32, 7);
  *(_QWORD *)(v51 + 16) = v49;
  *(_QWORD *)(v51 + 24) = v50;
  v52 = (void *)a1[5];
  if (!v52)
  {
    swift_retain();
    swift_release();
    v73 = 1;
    v74 = (uint64_t)v102;
    v72 = v114;
    v23 = v112;
    goto LABEL_12;
  }
  v89 = a1[4];
  v53 = (uint64_t)v92;
  sub_10005B704((uint64_t)a1, (uint64_t)v92, _s16ActionButtonViewVMa);
  v54 = *(unsigned __int8 *)(v90 + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = swift_allocObject(&unk_1010D4270, v55 + v91, v54 | 7);
  *(_QWORD *)(v56 + 16) = sub_10010942C;
  *(_QWORD *)(v56 + 24) = v51;
  v57 = sub_10005B6C0(v53, v56 + v55, _s16ActionButtonViewVMa);
  v92 = &v88;
  __chkstk_darwin(v57);
  *(&v88 - 2) = v89;
  *(&v88 - 1) = (uint64_t)v52;
  sub_100048AAC(v49, v50);
  swift_retain();
  v58 = sub_100007E8C(&qword_1011BF840);
  v59 = sub_10064B3C8();
  v60 = v94;
  v61 = Button.init(action:label:)(sub_10064B390, v56, sub_10064B3C0, &v88 - 4, v58, v59);
  OpacityTransition.init()(v61);
  v111(v16, v19, v13);
  v62 = AnyTransition.init<A>(_:)(v16, v13, v109);
  v63 = v95;
  v64 = (uint64_t)v98;
  v65 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v98, v60, v96);
  *(_QWORD *)(v64 + *(int *)(v93 + 36)) = v62;
  v110(v19, v13);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v65);
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v121, "Action label: ");
  HIBYTE(v121[1]) = -18;
  v66._countAndFlagsBits = v89;
  v66._object = v52;
  String.append(_:)(v66);
  swift_release();
  v67 = v121[0];
  v68 = v121[1];
  v69 = v97;
  sub_10004A160(v64, v97, &qword_1011BF820);
  v70 = v101;
  v71 = (_QWORD *)(v69 + *(int *)(v101 + 52));
  *v71 = v67;
  v71[1] = v68;
  sub_10004FF60(v64, &qword_1011BF820);
  v72 = v114;
  sub_100065228(v69, v114, &qword_1011BF828);
  v73 = 0;
  v74 = (uint64_t)v102;
  v23 = v112;
  v75 = v113;
LABEL_13:
  v76 = v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v72, v73, 1, v70);
  sub_10004A160(v72, v74, &qword_1011BF830);
  v78 = v106;
  v77 = v107;
  v79 = v119;
  v80 = v120;
  *v106 = v23;
  v78[1] = v80;
  v78[2] = v75;
  v78[3] = v79;
  v78[4] = v118;
  v78[5] = v76;
  v78[6] = v108;
  v78[7] = v77;
  v81 = v104;
  v82 = v105;
  v78[8] = v115;
  v78[9] = v82;
  v83 = v117;
  v78[10] = v81;
  v78[11] = v83;
  v84 = v116;
  v78[12] = v103;
  v78[13] = v84;
  v85 = sub_100007E8C(&qword_1011BF838);
  sub_10004A160(v74, (uint64_t)v78 + *(int *)(v85 + 64), &qword_1011BF830);
  sub_1000E4440(v23, v80, v75, v79);
  swift_retain();
  swift_bridgeObjectRetain();
  v86 = v115;
  sub_1000E4440(v77, v115, v82, v81);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10004FF60(v114, &qword_1011BF830);
  sub_10004FF60(v74, &qword_1011BF830);
  sub_1000E450C(v77, v86, v82, v81);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000E450C(v112, v120, v113, v119);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100643FA0(void (*a1)(__n128), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_100007E8C(&qword_1011AD448);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v6);
  v9 = _s16ActionButtonViewV5ModelVMa(0);
  sub_10004A160(a3 + *(int *)(v9 + 48), (uint64_t)v8, &qword_1011AD448);
  v10 = _s12ClickMetricsVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return sub_10004FF60((uint64_t)v8, &qword_1011AD448);
  sub_100644088();
  return sub_10005B748((uint64_t)v8, _s12ClickMetricsVMa);
}

uint64_t sub_100644088()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  __n128 v33;
  int v35;
  int v36;
  _BYTE v37[24];

  v1 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)_s12ClickMetricsVMa(0);
  v14 = (uint64_t *)&v0[v13[6]];
  v15 = *v14;
  v16 = v14[1];
  v17 = (uint64_t)&v0[v13[5]];
  LODWORD(v14) = *v0;
  v35 = v0[v13[8]];
  v36 = (int)v14;
  sub_10004A160(v17, (uint64_t)v9, &qword_10119E460);
  v18 = (uint64_t *)&v0[v13[7]];
  v20 = *v18;
  v19 = v18[1];
  swift_bridgeObjectRetain();
  sub_10064B114(v20, v19);
  v21 = MetricsEvent.Page.libraryMenuSelection.unsafeMutableAddressor();
  sub_10005B704(v21, (uint64_t)v6, type metadata accessor for MetricsEvent.Page);
  MetricsEvent.Page.metricsPageProperties.getter(v3);
  v22 = (uint64_t)v12;
  sub_10005B748((uint64_t)v6, type metadata accessor for MetricsEvent.Page);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v15, v16, v35, v36, (uint64_t)v9, 0, v20, v19, (uint64_t)v12, 0, 0, 0xFF00u, v3, 0);
  v23 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v25 = v24;
  v27 = v26;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v28 = qword_10124C790;
  swift_retain();
  v29 = GroupActivitiesManager.hasJoined.getter();
  v30 = GroupActivitiesManager.participantsCount.getter();
  v31 = (uint64_t *)(v28 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v28 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v37, 0, 0);
  v32 = *v31;
  v33 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v23) + 0xB8))(v22, v25, v27, v29 & 1, v30, v32, v33);

  swift_bridgeObjectRelease();
  return sub_10005B748(v22, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_100644350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_100055B68();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7 & 1;
  *(_QWORD *)(a3 + 24) = v8;
  return result;
}

uint64_t sub_1006443B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v65 = a2;
  v3 = type metadata accessor for PlainButtonStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v59 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = _s16ActionButtonViewVMa(0);
  v7 = *(_QWORD *)(v60 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v60);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011BF7B0);
  v57 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011BF7B8);
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011BF7C0);
  __chkstk_darwin(v54);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011BF7C8);
  __chkstk_darwin(v61);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011BF7D0);
  __chkstk_darwin(v62);
  v64 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v63 = (char *)&v52 - v21;
  sub_10005B704(a1, (uint64_t)v9, _s16ActionButtonViewVMa);
  v22 = *(unsigned __int8 *)(v7 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1010D41D0, v23 + v8, v22 | 7);
  sub_10005B6C0((uint64_t)v9, v24 + v23, _s16ActionButtonViewVMa);
  v25 = sub_100007E8C(&qword_1011BF7D8);
  v26 = sub_10064AF24();
  v27 = Button.init(action:label:)(sub_10064AEF8, v24, sub_100644E90, 0, v25, v26);
  PlainButtonStyle.init()(v27);
  v28 = sub_100049F28(&qword_1011BF7F8, &qword_1011BF7B0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v29 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v30 = v53;
  v31 = v58;
  v32 = v28;
  v33 = a1;
  View.buttonStyle<A>(_:)(v6, v53, v58, v32, v29);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v31);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v30);
  if (*(_BYTE *)(a1 + 144))
    v34 = 1.0;
  else
    v34 = 0.0;
  v36 = v55;
  v35 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v16, v14, v56);
  *(double *)&v16[*(int *)(v54 + 36)] = v34;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  v37 = v33 + *(int *)(v60 + 20);
  v38 = *(_QWORD *)v37;
  LOBYTE(v36) = *(_BYTE *)(v37 + 8);
  sub_10006B3F8(*(_QWORD *)v37, v36);
  v39 = sub_10082547C(v38, v36);
  v40 = sub_10006B604(v38, v36);
  if ((v39 & 1) != 0)
  {
    if (qword_10119C4A8 != -1)
      v40 = swift_once(&qword_10119C4A8, sub_100645940);
    v41 = &qword_1011BF140;
  }
  else
  {
    if (qword_10119C488 != -1)
      v40 = swift_once(&qword_10119C488, sub_1006458C0);
    v41 = &qword_1011BF120;
  }
  v42 = *v41;
  v43 = static Edge.Set.all.getter(v40);
  sub_10004A160((uint64_t)v16, (uint64_t)v18, &qword_1011BF7C0);
  v44 = v61;
  v45 = &v18[*(int *)(v61 + 36)];
  *v45 = v43;
  *((_QWORD *)v45 + 1) = v42;
  *((_QWORD *)v45 + 2) = 0;
  *((_QWORD *)v45 + 3) = 0;
  *((_QWORD *)v45 + 4) = v42;
  v45[40] = 0;
  sub_10004FF60((uint64_t)v16, &qword_1011BF7C0);
  v46 = *(_BYTE *)(v33 + 144);
  v47 = sub_10005610C(&qword_1011BF808, &qword_1011BF7C8, (void (*)(void))sub_10064AFD0);
  v48 = (uint64_t)v64;
  View.accessibilityHidden(_:)((v46 & 1) == 0, v44, v47);
  sub_10004FF60((uint64_t)v18, &qword_1011BF7C8);
  v49 = LocalizedStringKey.init(stringLiteral:)(0x7373696D736944, 0xE700000000000000);
  v50 = (uint64_t)v63;
  ModifiedContent<>.accessibilityLabel(_:)(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004FF60(v48, &qword_1011BF7D0);
  return sub_100065228(v50, v65, &qword_1011BF7D0);
}

uint64_t sub_1006448E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void (*v19)(__n128);
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  id v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = sub_100007E8C(&qword_1011AD448);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 128);
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 136);
    v10 = *(_QWORD *)(a1 + 120);
    v29[1] = *(id *)(a1 + 96);
    v25 = *(_OWORD *)(a1 + 104);
    v30 = v25;
    v31 = v10;
    v32 = v8;
    v33 = v9;
    v26 = *(_OWORD *)(a1 + *(int *)(_s16ActionButtonViewVMa(0) + 24));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v11 = sub_100007E8C(&qword_1011BF7A0);
    State.wrappedValue.getter(v29, v11);
    v12 = v29[0];
    if (v29[0])
    {
      v13 = objc_msgSend(v29[0], "delegate");
      if (v13
        && (v29[0] = v13,
            v14 = sub_100007E8C(&qword_1011A9300),
            v15 = sub_100007E8C(&qword_1011A3120),
            (swift_dynamicCast(&v26, v29, v14, v15, 6) & 1) != 0))
      {
        if (*((_QWORD *)&v27 + 1))
        {
          v16 = *(_QWORD *)(*sub_100007E68(&v26, *((uint64_t *)&v27 + 1))
                          + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
          swift_retain();
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v26);

          if (v16)
          {
            v17 = sub_100644BEC();
            *(_QWORD *)v7 = v17;
            v7[8] = 1;
            *((_QWORD *)v7 + 2) = &_swiftEmptySetSingleton;
            swift_storeEnumTagMultiPayload(v7, v5, 2);
            v18 = v17;
            sub_100770824((uint64_t)v7, 0, 0);
            sub_10005B748((uint64_t)v7, type metadata accessor for AppInterfaceContext.Activity);
            swift_release();

          }
          goto LABEL_12;
        }
      }
      else
      {
        v28 = 0;
        v26 = 0u;
        v27 = 0u;
      }
      sub_10004FF60((uint64_t)&v26, (uint64_t *)&unk_1011A3110);

    }
LABEL_12:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v19 = *(void (**)(__n128))(a1 + 80);
  if (v19)
  {
    v20 = *(_QWORD *)(a1 + 88);
    v21 = swift_retain();
    v19(v21);
    sub_10004BA30((uint64_t)v19, v20);
  }
LABEL_13:
  v22 = _s16ActionButtonViewV5ModelVMa(0);
  sub_10004A160(a1 + *(int *)(v22 + 52), (uint64_t)v4, &qword_1011AD448);
  v23 = _s12ClickMetricsVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v4, 1, v23) == 1)
    return sub_10004FF60((uint64_t)v4, &qword_1011AD448);
  sub_100644088();
  return sub_10005B748((uint64_t)v4, _s12ClickMetricsVMa);
}

id sub_100644BEC()
{
  _OWORD *v0;
  NSString v1;
  NSString v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 v8;
  NSString v9;
  void *v10;
  id v11;
  _QWORD v13[6];
  _BYTE v14[16];
  _BYTE v15[16];
  _QWORD v16[2];
  _QWORD v17[2];

  sub_100065228((uint64_t)v0, (uint64_t)v15, &qword_10119DCA0);
  sub_100065228((uint64_t)(v0 + 1), (uint64_t)v14, &qword_10119DCA0);
  sub_100065228((uint64_t)v15, (uint64_t)v16, &qword_10119DCA0);
  if (v16[1])
  {
    sub_100055CE4((uint64_t)v14);
    sub_100055CE4((uint64_t)v15);
    v1 = String._bridgeToObjectiveC()();
    sub_1001C7464((uint64_t)v15);
  }
  else
  {
    sub_100055CE4((uint64_t)v14);
    v1 = 0;
  }
  sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_10119DCA0);
  if (v17[1])
  {
    v2 = String._bridgeToObjectiveC()();
    sub_1001C7464((uint64_t)v14);
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v1, v2, 1);

  String.cancelButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v5 = (void *)objc_opt_self(UIAlertAction);
  v6 = objc_msgSend(v5, "actionWithTitle:style:handler:", v4, 1, 0);

  objc_msgSend(v3, "addAction:", v6);
  String.okButtonTitle.unsafeMutableAddressor();
  v7 = (_OWORD *)swift_allocObject(&unk_1010D41F8, 64, 7);
  v8 = v0[1];
  v7[1] = *v0;
  v7[2] = v8;
  v7[3] = v0[2];
  sub_100055CE4((uint64_t)v14);
  sub_100055CE4((uint64_t)v15);
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13[4] = sub_100055CBC;
  v13[5] = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100223938;
  v13[3] = &unk_1010D4210;
  v10 = _Block_copy(v13);
  v11 = objc_msgSend(v5, "actionWithTitle:style:handler:", v9, 2, v10, swift_release().n128_f64[0]);
  _Block_release(v10);

  objc_msgSend(v3, "addAction:", v11);
  return v3;
}

uint64_t sub_100644E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t KeyPath;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v16[4];

  v2 = sub_100007E8C(&qword_1011C8F90);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v8 = static Font.callout.getter(v7);
  KeyPath = swift_getKeyPath(&unk_100EC6638);
  v16[1] = v6;
  v16[2] = KeyPath;
  v16[3] = v8;
  v10 = static Font.Weight.semibold.getter(KeyPath);
  v11 = sub_100007E8C(&qword_1011AC700);
  v12 = sub_100318590();
  View.fontWeight(_:)(*(_QWORD *)&v10, 0, v11, v12);
  swift_release();
  swift_release();
  swift_release();
  v14 = static HierarchicalShapeStyle.tertiary.getter(v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  *(_DWORD *)(a1 + *(int *)(sub_100007E8C(&qword_1011BF7D8) + 36)) = v14;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100644FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10064A8A0();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10064502C(uint64_t *a1, uint64_t *a2)
{
  return sub_1006466D4(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_10064504C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7D64, 1);
}

uint64_t sub_10064505C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100645080(uint64_t a1)
{
  return sub_100645110(a1, (SEL *)&selRef_systemFillColor, &qword_1011BF080);
}

uint64_t sub_100645094()
{
  id v0;
  uint64_t result;

  v0 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
  result = Color.init(_:)(v0);
  qword_1011BF088 = result;
  return result;
}

void sub_1006450BC()
{
  qword_1011BF090 = Int.seconds.getter(84);
}

void sub_1006450DC()
{
  qword_1011BF098 = Int.seconds.getter(64);
}

uint64_t sub_1006450FC(uint64_t a1)
{
  return sub_100645110(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_1011BF0A0);
}

uint64_t sub_100645110(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  result = Color.init(_:)(v4);
  *a3 = result;
  return result;
}

void sub_100645154()
{
  qword_1011BF0A8 = Int.seconds.getter(10);
}

void sub_100645174()
{
  qword_1011BF0B0 = Int.seconds.getter(16);
}

void sub_100645194()
{
  qword_1011BF0B8 = Int.seconds.getter(26);
}

void sub_1006451B4()
{
  qword_1011BF0C0 = Int.seconds.getter(16);
}

void sub_1006451D4()
{
  qword_1011BF0C8 = Int.seconds.getter(10);
}

void sub_1006451F4()
{
  qword_1011BF0D0 = Int.seconds.getter(2);
}

void sub_100645214()
{
  qword_1011BF0D8 = Int.seconds.getter(14);
}

void sub_100645234()
{
  qword_1011BF0E0 = Int.seconds.getter(18);
}

uint64_t sub_100645254()
{
  uint64_t result;

  result = static HierarchicalShapeStyle.primary.getter();
  dword_1011BF0E8 = result;
  return result;
}

uint64_t sub_100645270(uint64_t a1)
{
  uint64_t result;

  result = static HierarchicalShapeStyle.secondary.getter(a1);
  dword_1011BF0EC = result;
  return result;
}

void sub_10064528C()
{
  qword_1011BF0F0 = Int.seconds.getter(15);
}

void sub_1006452AC()
{
  qword_1011BF0F8 = Int.seconds.getter(16);
}

void sub_1006452CC()
{
  qword_1011BF100 = Int.seconds.getter(20);
}

void sub_1006452EC()
{
  qword_1011BF108 = Int.seconds.getter(2);
}

uint64_t sub_10064530C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;

  v35 = a3;
  v32 = a2;
  v31 = a1;
  v33 = a5;
  v34 = a4 & 1;
  v5 = sub_100007E8C(&qword_1011BF978);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011BF980);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011BF988);
  __chkstk_darwin(v30);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011BF990);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011BF998);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011BF9A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v31, v19);
  *(_WORD *)&v7[*(int *)(v5 + 36)] = 256;
  KeyPath = swift_getKeyPath(&unk_100EC68C8);
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011BF978);
  v21 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v21 = KeyPath;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  sub_10004FF60((uint64_t)v7, &qword_1011BF978);
  v22 = swift_getKeyPath(&unk_100EC68F8);
  sub_10004A160((uint64_t)v10, (uint64_t)v12, &qword_1011BF980);
  v23 = &v12[*(int *)(v30 + 36)];
  *(_QWORD *)v23 = v22;
  v23[8] = 1;
  sub_10004FF60((uint64_t)v10, &qword_1011BF980);
  sub_10004A160((uint64_t)v12, (uint64_t)v15, &qword_1011BF988);
  *(_DWORD *)&v15[*(int *)(v13 + 36)] = v32;
  v24 = sub_10004FF60((uint64_t)v12, &qword_1011BF988);
  v25 = static Font.subheadline.getter(v24);
  v26 = swift_getKeyPath(&unk_100EC6638);
  sub_10004A160((uint64_t)v15, (uint64_t)v18, &qword_1011BF990);
  v27 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  *v27 = v26;
  v27[1] = v25;
  sub_10004FF60((uint64_t)v15, &qword_1011BF990);
  v28 = sub_10064BB44();
  View.fontWeight(_:)(v35, v34, v16, v28);
  return sub_10004FF60((uint64_t)v18, &qword_1011BF998);
}

uint64_t sub_1006455F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10064530C(a1, *(_DWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_100645600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = sub_100007E8C(&qword_1011BF948);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BF950);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BF958);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011BF960);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011BF968);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, a1, v15);
  *(_WORD *)&v5[*(int *)(v3 + 36)] = 256;
  KeyPath = swift_getKeyPath(&unk_100EC68C8);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011BF948);
  v17 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  sub_10004FF60((uint64_t)v5, &qword_1011BF948);
  v18 = swift_getKeyPath(&unk_100EC68F8);
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011BF950);
  v19 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v19 = v18;
  v19[8] = 1;
  v20 = sub_10004FF60((uint64_t)v8, &qword_1011BF950);
  LODWORD(v18) = static HierarchicalShapeStyle.secondary.getter(v20);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011BF958);
  *(_DWORD *)&v14[*(int *)(v12 + 36)] = v18;
  v21 = sub_10004FF60((uint64_t)v11, &qword_1011BF958);
  v22 = static Font.subheadline.getter(v21);
  v23 = swift_getKeyPath(&unk_100EC6638);
  v24 = v28;
  sub_10004A160((uint64_t)v14, v28, &qword_1011BF960);
  v25 = (uint64_t *)(v24 + *(int *)(sub_100007E8C(&qword_1011BF970) + 36));
  *v25 = v23;
  v25[1] = v22;
  return sub_10004FF60((uint64_t)v14, &qword_1011BF960);
}

void sub_100645880()
{
  qword_1011BF110 = Int.seconds.getter(12);
}

void sub_1006458A0()
{
  qword_1011BF118 = Int.seconds.getter(30);
}

void sub_1006458C0()
{
  qword_1011BF120 = Int.seconds.getter(6);
}

void sub_1006458E0()
{
  qword_1011BF128 = Int.seconds.getter(13);
}

void sub_100645900()
{
  qword_1011BF130 = Int.seconds.getter(15);
}

void sub_100645920()
{
  qword_1011BF138 = Int.seconds.getter(20);
}

double sub_100645940()
{
  double result;

  result = -Int.seconds.getter(2);
  qword_1011BF140 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_100645964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  char *v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a1;
  v33 = a2;
  v2 = sub_100007E8C(&qword_1011BFA08);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011BFA10);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011BFA18);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011BFA20);
  __chkstk_darwin(v32);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011BFA28);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011BFA30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v4, v31, v16);
  *(_WORD *)&v4[*(int *)(v2 + 36)] = 256;
  KeyPath = swift_getKeyPath(&unk_100EC68C8);
  sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_1011BFA08);
  v18 = &v7[*(int *)(v5 + 36)];
  *(_QWORD *)v18 = KeyPath;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  sub_10004FF60((uint64_t)v4, &qword_1011BFA08);
  v19 = swift_getKeyPath(&unk_100EC68F8);
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011BFA10);
  v20 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v20 = v19;
  v20[8] = 1;
  sub_10004FF60((uint64_t)v7, &qword_1011BFA10);
  LODWORD(v19) = static HierarchicalShapeStyle.primary.getter(v21);
  sub_10004A160((uint64_t)v10, (uint64_t)v12, &qword_1011BFA18);
  *(_DWORD *)&v12[*(int *)(v32 + 36)] = v19;
  v22 = sub_10004FF60((uint64_t)v10, &qword_1011BFA18);
  v23 = static Font.subheadline.getter(v22);
  v24 = swift_getKeyPath(&unk_100EC6638);
  sub_10004A160((uint64_t)v12, (uint64_t)v15, &qword_1011BFA20);
  v25 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *v25 = v24;
  v25[1] = v23;
  v26 = sub_10004FF60((uint64_t)v12, &qword_1011BFA20);
  v27 = static Font.Weight.semibold.getter(v26);
  v28 = sub_10064BDD8();
  View.fontWeight(_:)(*(_QWORD *)&v27, 0, v13, v28);
  return sub_10004FF60((uint64_t)v15, &qword_1011BFA28);
}

uint64_t sub_100645C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = sub_100007E8C(&qword_1011BF9D8);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BF9E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BF9E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011BF9F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011BF9F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, a1, v15);
  *(_WORD *)&v5[*(int *)(v3 + 36)] = 256;
  KeyPath = swift_getKeyPath(&unk_100EC68C8);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011BF9D8);
  v17 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  sub_10004FF60((uint64_t)v5, &qword_1011BF9D8);
  v18 = swift_getKeyPath(&unk_100EC68F8);
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011BF9E0);
  v19 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v19 = v18;
  v19[8] = 1;
  v20 = sub_10004FF60((uint64_t)v8, &qword_1011BF9E0);
  LODWORD(v18) = static HierarchicalShapeStyle.secondary.getter(v20);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011BF9E8);
  *(_DWORD *)&v14[*(int *)(v12 + 36)] = v18;
  v21 = sub_10004FF60((uint64_t)v11, &qword_1011BF9E8);
  v22 = static Font.subheadline.getter(v21);
  v23 = swift_getKeyPath(&unk_100EC6638);
  v24 = v28;
  sub_10004A160((uint64_t)v14, v28, &qword_1011BF9F0);
  v25 = (uint64_t *)(v24 + *(int *)(sub_100007E8C(&qword_1011BFA00) + 36));
  *v25 = v23;
  v25[1] = v22;
  return sub_10004FF60((uint64_t)v14, &qword_1011BF9F0);
}

uint64_t sub_100645ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  unint64_t v26;
  _QWORD v28[2];

  v28[1] = a2;
  v3 = sub_100007E8C(&qword_1011BF8D8);
  __chkstk_darwin(v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BF8E0);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BF8E8);
  __chkstk_darwin(v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011BF8F0);
  __chkstk_darwin(v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011BF8F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, a1, v15);
  *(_WORD *)&v5[*(int *)(v3 + 36)] = 256;
  KeyPath = swift_getKeyPath(&unk_100EC68C8);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011BF8D8);
  v17 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  sub_10004FF60((uint64_t)v5, &qword_1011BF8D8);
  v18 = swift_getKeyPath(&unk_100EC68F8);
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011BF8E0);
  v19 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v19 = v18;
  v19[8] = 1;
  v20 = sub_10004FF60((uint64_t)v8, &qword_1011BF8E0);
  v21 = static Font.subheadline.getter(v20);
  v22 = swift_getKeyPath(&unk_100EC6638);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011BF8E8);
  v23 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *v23 = v22;
  v23[1] = v21;
  v24 = sub_10004FF60((uint64_t)v11, &qword_1011BF8E8);
  v25 = static Font.Weight.semibold.getter(v24);
  v26 = sub_10064B934();
  View.fontWeight(_:)(*(_QWORD *)&v25, 0, v12, v26);
  return sub_10004FF60((uint64_t)v14, &qword_1011BF8F0);
}

uint64_t *sub_100646140(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  static Alignment.leading.getter(a1);
  sub_100646228((uint64_t)&v6, a2);
  v3 = sub_100007E8C(&qword_1011BF8C8);
  v4 = sub_100049F28(&qword_1011BF8D0, &qword_1011BF8C8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.corner(_:)(0, 0, 1, v3, v4);
  return sub_10064B868((uint64_t *)&v6);
}

_QWORD *sub_100646228@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[8];
  char v42;
  char v43;
  _OWORD v44[8];

  if (qword_10119C3E0 != -1)
    swift_once(&qword_10119C3E0, sub_100645080);
  v4 = qword_1011BF080;
  KeyPath = swift_getKeyPath(&unk_100EC6898);
  swift_retain();
  v7 = static Alignment.center.getter(v6);
  sub_10014B250(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v33, 0.0, 1, 0.0, 1, v7, v8, KeyPath, v4);
  swift_release();
  swift_release();
  if (qword_10119C3E8 != -1)
    swift_once(&qword_10119C3E8, sub_100645094);
  v9 = qword_1011BF088;
  v10 = swift_getKeyPath(&unk_100EC6898);
  swift_retain();
  v12 = GeometryProxy.size.getter(v11) * a2;
  v14 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v28, *(_QWORD *)&v12, 0, 0, 1, v14, v15);
  v16 = v38;
  v41[4] = v37;
  v41[5] = v38;
  v17 = v39;
  v18 = v40;
  v41[6] = v39;
  v41[7] = v40;
  v19 = v33;
  v20 = v34;
  v41[0] = v33;
  v41[1] = v34;
  v21 = v35;
  v22 = v36;
  v41[2] = v35;
  v41[3] = v36;
  *(_OWORD *)(a1 + 64) = v37;
  *(_OWORD *)(a1 + 80) = v16;
  *(_OWORD *)(a1 + 96) = v17;
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v20;
  v23 = v28;
  v24 = v29;
  v25 = v30;
  v26 = v31;
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v22;
  v43 = v24;
  v42 = v26;
  *(_QWORD *)(a1 + 128) = v10;
  *(_QWORD *)(a1 + 136) = v9;
  *(_QWORD *)(a1 + 144) = v23;
  *(_BYTE *)(a1 + 152) = v24;
  *(_QWORD *)(a1 + 160) = v25;
  *(_BYTE *)(a1 + 168) = v26;
  *(_OWORD *)(a1 + 176) = v32;
  sub_10064B8C0((uint64_t *)v41);
  v44[4] = v37;
  v44[5] = v38;
  v44[6] = v39;
  v44[7] = v40;
  v44[0] = v33;
  v44[1] = v34;
  v44[2] = v35;
  v44[3] = v36;
  return sub_10064B8F0(v44);
}

double sub_100646428@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  double v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  double result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  __int128 v19;

  v3 = *v1;
  v4 = COERCE_DOUBLE(ProgressViewStyleConfiguration.fractionCompleted.getter());
  if ((v5 & 1) != 0)
    v6 = 0.0;
  else
    v6 = v4;
  v7 = swift_allocObject(&unk_1010D4420, 24, 7);
  *(double *)(v7 + 16) = v6;
  v8 = static Alignment.center.getter(v7);
  _FrameLayout.init(width:height:alignment:)(&v15, 0, 1, v3, 0, v8, v9);
  v10 = v15;
  v11 = v16;
  v12 = v17;
  v13 = v18;
  *(_QWORD *)a1 = sub_10064B860;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  result = *(double *)&v19;
  *(_OWORD *)(a1 + 48) = v19;
  return result;
}

double sub_1006464EC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EC6338);
  v5 = swift_getKeyPath(&unk_100EC6360);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_100646568(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EC6338);
  v6 = swift_getKeyPath(&unk_100EC6360);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

uint64_t sub_1006465F0(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v4 = *((_QWORD *)a1 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v6, v4, *(_QWORD *)a2, v5, 0),
        result = 0,
        (v8 & 1) != 0))
  {
LABEL_10:
    v10 = *((_QWORD *)a1 + 3);
    v11 = *(_QWORD *)(a2 + 24);
    if (v10)
    {
      if (!v11)
        return 0;
      v12 = *((_QWORD *)a1 + 2);
      v13 = *(_QWORD *)(a2 + 16);
      if (v12 != v13 || v10 != v11)
      {
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v10, v13, v11, 0);
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (a1[4] == *(double *)(a2 + 32))
    {
      v15 = *(_BYTE *)(a2 + 48);
      if (((_BYTE)a1[6] & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 48) & 1) != 0)
          return 1;
      }
      else
      {
        if (a1[5] != *(double *)(a2 + 40))
          v15 = 1;
        if ((v15 & 1) == 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1006466D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a2)
  {
    if (a6)
    {
      if (a1 != a5 || a2 != a6)
      {
        v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0);
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
      goto LABEL_9;
    }
    return 0;
  }
  if (a6)
    return 0;
LABEL_9:
  result = (a4 | a8) == 0;
  if (a4 && a8)
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
  }
  return result;
}

uint64_t sub_100646794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v23;
  _OWORD v24[2];
  char v25;
  __int128 v26;
  _OWORD v27[2];
  char v28;
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];
  _BYTE v32[16];

  v4 = _s16ActionButtonViewV5ModelVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s9ViewModelOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24[-1] - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011BF4A8);
  __chkstk_darwin(v13);
  v15 = (char *)&v24[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_10005B704(a1, (uint64_t)v15, _s9ViewModelOMa);
  sub_10005B704(a2, v17, _s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload(v15, v7) == 1)
  {
    sub_10005B704((uint64_t)v15, (uint64_t)v9, _s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload(v17, v7) == 1)
    {
      sub_10005B6C0(v17, (uint64_t)v6, _s16ActionButtonViewV5ModelVMa);
      v18 = sub_100646AA0((uint64_t)v9, (uint64_t)v6);
      sub_10005B748((uint64_t)v6, _s16ActionButtonViewV5ModelVMa);
      sub_10005B748((uint64_t)v9, _s16ActionButtonViewV5ModelVMa);
LABEL_9:
      sub_10005B748((uint64_t)v15, _s9ViewModelOMa);
      return v18 & 1;
    }
    sub_10005B748((uint64_t)v9, _s16ActionButtonViewV5ModelVMa);
  }
  else
  {
    sub_10005B704((uint64_t)v15, (uint64_t)v12, _s9ViewModelOMa);
    v19 = *((_OWORD *)v12 + 1);
    v23 = *(_OWORD *)v12;
    v20 = *((_OWORD *)v12 + 2);
    v24[0] = v19;
    v24[1] = v20;
    v25 = v12[48];
    if (swift_getEnumCaseMultiPayload(v17, v7) != 1)
    {
      v21 = *(_OWORD *)(v17 + 16);
      v26 = *(_OWORD *)v17;
      v27[0] = v21;
      v27[1] = *(_OWORD *)(v17 + 32);
      v28 = *(_BYTE *)(v17 + 48);
      v18 = sub_1006465F0((double *)&v23, (uint64_t)&v26);
      sub_100065228((uint64_t)&v23, (uint64_t)v31, &qword_10119DCA0);
      sub_1001C7464((uint64_t)v31);
      sub_100065228((uint64_t)v24, (uint64_t)v32, &qword_10119DCA0);
      sub_1001C7464((uint64_t)v32);
      sub_100065228((uint64_t)&v26, (uint64_t)v29, &qword_10119DCA0);
      sub_1001C7464((uint64_t)v29);
      sub_100065228((uint64_t)v27, (uint64_t)v30, &qword_10119DCA0);
      sub_1001C7464((uint64_t)v30);
      goto LABEL_9;
    }
    sub_100065228((uint64_t)&v23, (uint64_t)v32, &qword_10119DCA0);
    sub_1001C7464((uint64_t)v32);
    sub_100065228((uint64_t)v24, (uint64_t)&v26, &qword_10119DCA0);
    sub_1001C7464((uint64_t)&v26);
  }
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011BF4A8);
  v18 = 0;
  return v18 & 1;
}

BOOL sub_100646AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  _BOOL8 result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unsigned __int8 *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  unsigned __int8 *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unsigned __int8 *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unsigned __int8 *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  uint64_t v143;
  unsigned int (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  unsigned int (*v151)(char *, uint64_t, uint64_t);
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v160;
  _BYTE *v161;
  char v162;
  uint64_t v163;
  unsigned __int8 *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  char *v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;

  v180 = _s12ClickMetricsVMa(0);
  v4 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v178 = (char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BF4B8);
  __chkstk_darwin(v6);
  v179 = (uint64_t)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v163 - v9;
  v11 = sub_100007E8C(&qword_1011AD448);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v14 = (char *)&v163 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v163 - v16;
  __chkstk_darwin(v18);
  v20 = (unsigned __int8 *)&v163 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v163 - v22;
  __chkstk_darwin(v24);
  v27 = (char *)&v163 - v25;
  v28 = *(_QWORD *)(a1 + 8);
  v29 = *(_QWORD *)(a2 + 8);
  if (!v28)
  {
    if (v29)
      return 0;
    goto LABEL_8;
  }
  if (!v29)
    return 0;
  v30 = *(_QWORD *)a1;
  v31 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v28 == v29)
    goto LABEL_8;
  v177 = (char *)a1;
  v32 = a2;
  v33 = v23;
  v34 = (char *)&v163 - v25;
  v35 = v4;
  v36 = v20;
  v37 = v10;
  v38 = v6;
  v39 = v14;
  v40 = v17;
  v41 = v26;
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v28, v31, v29, 0);
  v26 = v41;
  v17 = v40;
  v14 = v39;
  v6 = v38;
  v10 = v37;
  v20 = v36;
  v4 = v35;
  v27 = v34;
  v23 = v33;
  a2 = v32;
  a1 = (uint64_t)v177;
  v43 = v42;
  result = 0;
  if ((v43 & 1) != 0)
  {
LABEL_8:
    v45 = *(_QWORD *)(a1 + 24);
    v46 = *(_QWORD *)(a2 + 24);
    if (v45)
    {
      if (!v46)
        return 0;
      v47 = *(_QWORD *)(a1 + 16);
      v48 = *(_QWORD *)(a2 + 16);
      if (v47 != v48 || v45 != v46)
      {
        v177 = (char *)a1;
        v49 = a2;
        v50 = v23;
        v51 = v27;
        v52 = v4;
        v53 = v20;
        v54 = v10;
        v55 = v6;
        v56 = v14;
        v57 = v17;
        v58 = v26;
        v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v45, v48, v46, 0);
        v26 = v58;
        v17 = v57;
        v14 = v56;
        v6 = v55;
        v10 = v54;
        v20 = v53;
        v4 = v52;
        v27 = v51;
        v23 = v50;
        a2 = v49;
        a1 = (uint64_t)v177;
        v60 = v59;
        result = 0;
        if ((v60 & 1) == 0)
          return result;
      }
    }
    else if (v46)
    {
      return 0;
    }
    v61 = *(_QWORD *)(a1 + 40);
    v62 = *(_QWORD *)(a2 + 40);
    if (v61)
    {
      if (!v62)
        return 0;
      v63 = *(_QWORD *)(a1 + 32);
      v64 = *(_QWORD *)(a2 + 32);
      if (v63 != v64 || v61 != v62)
      {
        v177 = (char *)a1;
        v65 = a2;
        v66 = v23;
        v67 = v27;
        v68 = v4;
        v69 = v20;
        v70 = v10;
        v71 = v6;
        v72 = v14;
        v73 = v17;
        v74 = v26;
        v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v61, v64, v62, 0);
        v26 = v74;
        v17 = v73;
        v14 = v72;
        v6 = v71;
        v10 = v70;
        v20 = v69;
        v4 = v68;
        v27 = v67;
        v23 = v66;
        a2 = v65;
        a1 = (uint64_t)v177;
        v76 = v75;
        result = 0;
        if ((v76 & 1) == 0)
          return result;
      }
    }
    else if (v62)
    {
      return 0;
    }
    v77 = *(_QWORD *)(a1 + 56);
    v78 = *(_QWORD *)(a2 + 56);
    if (v77)
    {
      if (v78)
      {
        v79 = *(_QWORD *)(a1 + 48);
        v80 = *(_QWORD *)(a2 + 48);
        if (v79 != v80 || v77 != v78)
        {
          v177 = (char *)a1;
          v81 = a2;
          v82 = v23;
          v83 = v27;
          v84 = v4;
          v85 = v20;
          v86 = v10;
          v87 = v6;
          v88 = v14;
          v89 = v17;
          v90 = v26;
          v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v77, v80, v78, 0);
          v26 = v90;
          v17 = v89;
          v14 = v88;
          v6 = v87;
          v10 = v86;
          v20 = v85;
          v4 = v84;
          v27 = v83;
          v23 = v82;
          a2 = v81;
          a1 = (uint64_t)v177;
          v92 = v91;
          result = 0;
          if ((v92 & 1) == 0)
            return result;
        }
LABEL_29:
        v94 = *(_QWORD *)(a1 + 96);
        v93 = *(_QWORD *)(a1 + 104);
        v95 = *(_QWORD *)(a1 + 112);
        v96 = *(_QWORD *)(a1 + 120);
        v97 = *(_QWORD *)(a1 + 128);
        v176 = *(_QWORD *)(a1 + 136);
        v98 = *(_QWORD *)(a2 + 96);
        v99 = *(_QWORD *)(a2 + 104);
        v100 = *(_QWORD *)(a2 + 112);
        v175 = *(unsigned int (**)(char *, uint64_t, uint64_t))(a2 + 120);
        v101 = *(_QWORD *)(a2 + 128);
        v174 = *(_QWORD *)(a2 + 136);
        if (v97)
        {
          if (v101)
          {
            v173 = v101;
            if (v93)
            {
              if (!v99)
              {
                v113 = v93;
                v114 = v95;
                v145 = v100;
                v146 = v98;
                v117 = v96;
                v119 = v97;
                v120 = v176;
                v121 = v94;
                sub_100334744(v94, v93, v95, v96, v97, v176);
                sub_100334744(v121, v113, v114, v117, v119, v120);
                v142 = v175;
                sub_100334744(v146, 0, v145, (uint64_t)v175, v173, v174);
LABEL_51:
                swift_release();
                swift_release();
                swift_bridgeObjectRelease(v142);
                swift_bridgeObjectRelease(v113);
                swift_bridgeObjectRelease(v117);
                v136 = v121;
                v137 = v113;
                v138 = v114;
                v139 = v117;
                v140 = v119;
                v141 = v120;
                goto LABEL_52;
              }
              if (v94 != v98 || v93 != v99)
              {
                v170 = v99;
                v171 = v93;
                v167 = v96;
                v168 = v95;
                v165 = v100;
                v166 = v98;
                v169 = v97;
                v177 = (char *)a1;
                v164 = (unsigned __int8 *)a2;
                v102 = v23;
                v103 = v27;
                v104 = v4;
                v105 = v20;
                v106 = v10;
                v107 = v6;
                v108 = v14;
                v109 = v17;
                v110 = v26;
                v111 = v94;
                v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v93, v98, v99, 0);
                v100 = v165;
                v98 = v166;
                v99 = v170;
                v93 = v171;
                v96 = v167;
                v95 = v168;
                v94 = v111;
                v97 = v169;
                v26 = v110;
                v17 = v109;
                v14 = v108;
                v6 = v107;
                v10 = v106;
                v20 = v105;
                v4 = v104;
                v27 = v103;
                v23 = v102;
                a2 = (uint64_t)v164;
                a1 = (uint64_t)v177;
                if ((v112 & 1) == 0)
                {
                  v113 = v171;
                  v114 = v168;
                  v115 = v165;
                  v116 = v166;
                  v117 = v167;
                  v118 = v170;
                  v119 = v169;
                  v120 = v176;
                  v121 = v94;
                  sub_100334744(v94, v171, v168, v167, v169, v176);
                  v122 = v121;
                  v123 = v113;
LABEL_41:
                  sub_100334744(v122, v123, v114, v117, v119, v120);
                  v142 = v175;
                  sub_100334744(v116, v118, v115, (uint64_t)v175, v173, v174);
                  v143 = v118;
LABEL_50:
                  swift_bridgeObjectRelease(v143);
                  goto LABEL_51;
                }
              }
            }
            else if (v99)
            {
              v113 = 0;
              v114 = v95;
              v115 = v100;
              v116 = v98;
              v117 = v96;
              v118 = v99;
              v119 = v97;
              v120 = v176;
              v121 = v94;
              sub_100334744(v94, 0, v95, v96, v97, v176);
              v122 = v121;
              v123 = 0;
              goto LABEL_41;
            }
            if (v96)
            {
              v144 = v175;
              if (v175)
              {
                v166 = v98;
                v167 = v96;
                v169 = v97;
                v170 = v99;
                v164 = (unsigned __int8 *)v26;
                v165 = v100;
                v168 = v95;
                v171 = v93;
                v172 = v94;
                if (v95 == v100 && (unsigned int (*)(char *, uint64_t, uint64_t))v96 == v175)
                {
                  LODWORD(v177) = 1;
                }
                else
                {
                  v150 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, v100, v175, 0);
                  v96 = v167;
                  v95 = v168;
                  v93 = v171;
                  v94 = v172;
                  v97 = v169;
                  LODWORD(v177) = v150;
                }
                sub_100334744(v94, v93, v95, v96, v97, v176);
                sub_100334744(v172, v171, v168, v167, v169, v176);
                sub_100334744(v166, v170, v165, (uint64_t)v175, v173, v174);
                swift_release();
                swift_bridgeObjectRelease(v167);
                swift_release();
                swift_bridgeObjectRelease(v175);
                swift_bridgeObjectRelease(v170);
                swift_bridgeObjectRelease(v171);
                sub_10064778C(v172, v171, v168, v167, v169, v176);
                v26 = (uint64_t)v164;
                if ((v177 & 1) == 0)
                  return 0;
LABEL_59:
                if (*(unsigned __int8 *)(a1 + 144) != *(unsigned __int8 *)(a2 + 144))
                  return 0;
                v164 = (unsigned __int8 *)v26;
                v176 = _s16ActionButtonViewV5ModelVMa(0);
                sub_10004A160(a1 + *(int *)(v176 + 48), (uint64_t)v27, &qword_1011AD448);
                sub_10004A160(a2 + *(int *)(v176 + 48), (uint64_t)v23, &qword_1011AD448);
                v177 = &v10[*(int *)(v6 + 48)];
                sub_10004A160((uint64_t)v27, (uint64_t)v10, &qword_1011AD448);
                sub_10004A160((uint64_t)v23, (uint64_t)v177, &qword_1011AD448);
                v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
                v152 = v151(v10, 1, v180);
                v175 = v151;
                if (v152 == 1)
                {
                  sub_10004FF60((uint64_t)v23, &qword_1011AD448);
                  sub_10004FF60((uint64_t)v27, &qword_1011AD448);
                  v153 = v180;
                  if (v151(v177, 1, v180) == 1)
                  {
                    sub_10004FF60((uint64_t)v10, &qword_1011AD448);
LABEL_67:
                    v156 = v176;
                    sub_10004A160(a1 + *(int *)(v176 + 52), (uint64_t)v17, &qword_1011AD448);
                    sub_10004A160(a2 + *(int *)(v156 + 52), (uint64_t)v14, &qword_1011AD448);
                    v157 = v179;
                    v158 = v179 + *(int *)(v6 + 48);
                    sub_10004A160((uint64_t)v17, v179, &qword_1011AD448);
                    sub_10004A160((uint64_t)v14, v158, &qword_1011AD448);
                    v159 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v175;
                    if (v175((char *)v157, 1, v153) == 1)
                    {
                      sub_10004FF60((uint64_t)v14, &qword_1011AD448);
                      sub_10004FF60((uint64_t)v17, &qword_1011AD448);
                      if (v159(v158, 1, v153) == 1)
                      {
                        sub_10004FF60(v157, &qword_1011AD448);
                        return 1;
                      }
                    }
                    else
                    {
                      v160 = v164;
                      sub_10004A160(v157, (uint64_t)v164, &qword_1011AD448);
                      if (v159(v158, 1, v153) != 1)
                      {
                        v161 = v178;
                        sub_10005B6C0(v158, (uint64_t)v178, _s12ClickMetricsVMa);
                        v162 = sub_1006477C8(v160, v161);
                        sub_10005B748((uint64_t)v161, _s12ClickMetricsVMa);
                        sub_10004FF60((uint64_t)v14, &qword_1011AD448);
                        sub_10004FF60((uint64_t)v17, &qword_1011AD448);
                        sub_10005B748((uint64_t)v160, _s12ClickMetricsVMa);
                        sub_10004FF60(v157, &qword_1011AD448);
                        return (v162 & 1) != 0;
                      }
                      sub_10004FF60((uint64_t)v14, &qword_1011AD448);
                      sub_10004FF60((uint64_t)v17, &qword_1011AD448);
                      sub_10005B748((uint64_t)v160, _s12ClickMetricsVMa);
                    }
                    v154 = v157;
LABEL_73:
                    sub_10004FF60(v154, &qword_1011BF4B8);
                    return 0;
                  }
                }
                else
                {
                  sub_10004A160((uint64_t)v10, (uint64_t)v20, &qword_1011AD448);
                  if (v151(v177, 1, v180) != 1)
                  {
                    v155 = v178;
                    sub_10005B6C0((uint64_t)v177, (uint64_t)v178, _s12ClickMetricsVMa);
                    LODWORD(v177) = sub_1006477C8(v20, v155);
                    sub_10005B748((uint64_t)v155, _s12ClickMetricsVMa);
                    sub_10004FF60((uint64_t)v23, &qword_1011AD448);
                    sub_10004FF60((uint64_t)v27, &qword_1011AD448);
                    sub_10005B748((uint64_t)v20, _s12ClickMetricsVMa);
                    sub_10004FF60((uint64_t)v10, &qword_1011AD448);
                    v153 = v180;
                    if ((v177 & 1) == 0)
                      return 0;
                    goto LABEL_67;
                  }
                  sub_10004FF60((uint64_t)v23, &qword_1011AD448);
                  sub_10004FF60((uint64_t)v27, &qword_1011AD448);
                  sub_10005B748((uint64_t)v20, _s12ClickMetricsVMa);
                }
                v154 = (uint64_t)v10;
                goto LABEL_73;
              }
            }
            else
            {
              v144 = v175;
              if (!v175)
              {
                v170 = v99;
                v171 = v93;
                v168 = v95;
                v169 = v97;
                v165 = v100;
                v166 = v98;
                v164 = (unsigned __int8 *)v26;
                v172 = v94;
                sub_100334744(v94, v93, v95, 0, v97, v176);
                sub_100334744(v172, v171, v168, 0, v169, v176);
                sub_100334744(v166, v170, v165, 0, v173, v174);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease_n(0, 2);
                swift_bridgeObjectRelease(v170);
                swift_bridgeObjectRelease(v171);
                sub_10064778C(v172, v171, v168, 0, v169, v176);
                v26 = (uint64_t)v164;
                goto LABEL_59;
              }
            }
            v113 = v93;
            v114 = v95;
            v147 = v100;
            v148 = v98;
            v117 = v96;
            v149 = v99;
            v142 = v144;
            v119 = v97;
            v120 = v176;
            v121 = v94;
            sub_100334744(v94, v93, v95, v96, v97, v176);
            sub_100334744(v121, v113, v114, v117, v119, v120);
            sub_100334744(v148, v149, v147, (uint64_t)v142, v173, v174);
            v143 = v149;
            goto LABEL_50;
          }
        }
        else if (!v101)
        {
          goto LABEL_59;
        }
        v124 = v101;
        v172 = v94;
        v173 = v101;
        v125 = v93;
        v126 = v95;
        v127 = v100;
        v128 = v98;
        v129 = v96;
        v130 = v99;
        v131 = v97;
        v132 = v176;
        sub_100334744(v94, v93, v95, v96, v97, v176);
        v133 = v175;
        v134 = v124;
        v135 = v174;
        sub_100334744(v128, v130, v127, (uint64_t)v175, v134, v174);
        sub_10064778C(v172, v125, v126, v129, v131, v132);
        v136 = v128;
        v137 = v130;
        v138 = v127;
        v139 = (uint64_t)v133;
        v140 = v173;
        v141 = v135;
LABEL_52:
        sub_10064778C(v136, v137, v138, v139, v140, v141);
      }
    }
    else if (!v78)
    {
      goto LABEL_29;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10064778C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a5)
  {
    swift_release(a6);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1006477C8(unsigned __int8 *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  unsigned __int8 *v56;
  _BYTE *v57;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v55 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011AD430);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v54 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  v56 = a1;
  v57 = a2;
  LOBYTE(a2) = *a2;
  v19 = MetricsEvent.Click.ActionType.rawValue.getter(*a1);
  v21 = v20;
  v23 = MetricsEvent.Click.ActionType.rawValue.getter(a2);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {
    swift_bridgeObjectRelease_n(v21, 2);
  }
  else
  {
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v24);
    v26 = 0;
    if ((v25 & 1) == 0)
      return v26 & 1;
  }
  v27 = (int *)_s12ClickMetricsVMa(0);
  sub_10004A160((uint64_t)&v56[v27[5]], (uint64_t)v18, &qword_10119E460);
  sub_10004A160((uint64_t)&v57[v27[5]], (uint64_t)v15, &qword_10119E460);
  v28 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10004A160((uint64_t)v18, (uint64_t)v9, &qword_10119E460);
  sub_10004A160((uint64_t)v15, v28, &qword_10119E460);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v9, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_10119E460);
    sub_10004FF60((uint64_t)v18, &qword_10119E460);
    if (v29(v28, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v9, &qword_10119E460);
      goto LABEL_12;
    }
LABEL_10:
    sub_10004FF60((uint64_t)v9, &qword_1011AD430);
    goto LABEL_23;
  }
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_10119E460);
  if (v29(v28, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_10119E460);
    sub_10004FF60((uint64_t)v18, &qword_10119E460);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    goto LABEL_10;
  }
  v30 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v55, v28, v4);
  v31 = sub_100048748((unint64_t *)&qword_1011AD438, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v32 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v30, v4, v31);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v30, v4);
  sub_10004FF60((uint64_t)v15, &qword_10119E460);
  sub_10004FF60((uint64_t)v18, &qword_10119E460);
  v33(v12, v4);
  sub_10004FF60((uint64_t)v9, &qword_10119E460);
  if ((v32 & 1) == 0)
    goto LABEL_23;
LABEL_12:
  v34 = v27[6];
  v35 = &v56[v34];
  v36 = *(_QWORD *)&v56[v34];
  v37 = *(_QWORD *)&v56[v34 + 8];
  v38 = &v57[v34];
  v39 = v38[1];
  if (*(_QWORD *)v35 == *v38 && v37 == v39
    || (v26 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, *v38, v39, 0) & 1) != 0))
  {
    v40 = v27[7];
    v41 = (uint64_t *)&v56[v40];
    v42 = *(_QWORD *)&v56[v40 + 8];
    v43 = (uint64_t *)&v57[v40];
    v44 = v43[1];
    if (v42 == 9)
    {
      if (v44 == 9)
        goto LABEL_20;
    }
    else if (v44 != 9
           && (static MetricsEvent.Click.ActionContext.__derived_enum_equals(_:_:)(*v41, v42, *v43, v44) & 1) != 0)
    {
LABEL_20:
      v45 = v27[8];
      v46 = v57[v45];
      v47 = MetricsEvent.TargetType.rawValue.getter(v56[v45]);
      v49 = v48;
      v51 = MetricsEvent.TargetType.rawValue.getter(v46);
      v52 = v50;
      if (v47 == v51 && v49 == v50)
      {
        swift_bridgeObjectRelease_n(v49, 2);
        v26 = 1;
      }
      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v51, v50, 0);
        swift_bridgeObjectRelease(v49);
        swift_bridgeObjectRelease(v52);
      }
      return v26 & 1;
    }
LABEL_23:
    v26 = 0;
  }
  return v26 & 1;
}

_QWORD *sub_100647C44@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_100647CD8();
  result = EnvironmentValues.subscript.getter(&v4, &_s24LibraryImportViewTypeKeyVN, &_s24LibraryImportViewTypeKeyVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100647C90(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100647CD8();
  return EnvironmentValues.subscript.setter(&v3, &_s24LibraryImportViewTypeKeyVN, &_s24LibraryImportViewTypeKeyVN, v1);
}

unint64_t sub_100647CD8()
{
  unint64_t result;

  result = qword_1011BF4F0;
  if (!qword_1011BF4F0)
  {
    result = swift_getWitnessTable(&unk_100EC65B8, &_s24LibraryImportViewTypeKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011BF4F0);
  }
  return result;
}

ValueMetadata *_s24LibraryImportViewTypeKeyVMa()
{
  return &_s24LibraryImportViewTypeKeyVN;
}

ValueMetadata *_s11ContentViewVMa_1()
{
  return &_s11ContentViewVN;
}

uint64_t _s14InProgressViewVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10006B604(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t _s14InProgressViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006B3F8(v6, v7);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = v7;
  return a1;
}

uint64_t _s14InProgressViewVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v2[4];
  v4 = v2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)v2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_10006B3F8(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_10006B604(v6, v7);
  return a1;
}

__n128 _s14InProgressViewVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14InProgressViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v6;
  sub_10006B604(v7, v8);
  return a1;
}

uint64_t _s14InProgressViewVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14InProgressViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s14InProgressViewVMa()
{
  return &_s14InProgressViewVN;
}

uint64_t _s14InProgressViewV5ModelVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t _s14InProgressViewV5ModelVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s14InProgressViewV5ModelVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s14InProgressViewV5ModelVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14InProgressViewV5ModelVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s14InProgressViewV5ModelVMa()
{
  return &_s14InProgressViewV5ModelVN;
}

uint64_t sub_100648200(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t sub_10064826C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10064831C + 4 * byte_100EC6090[(v7 - 1)]))();
}

void sub_10064836C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t _s16ActionButtonViewV5ModelV16EquatableIgnoredVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s16ActionButtonViewV5ModelV16EquatableIgnoredVMn);
}

uint64_t _s8ViewTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100648574 + 4 * byte_100EC60A3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006485A8 + 4 * byte_100EC609E[v4]))();
}

uint64_t sub_1006485A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006485B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006485B8);
  return result;
}

uint64_t sub_1006485C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006485CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006485D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006485D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ViewTypeOMa_0()
{
  return &_s8ViewTypeON_0;
}

_QWORD *sub_1006485F4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(_BYTE *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v73;
  _BYTE *__dst;
  uint64_t v75;
  uint64_t v76;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    goto LABEL_28;
  }
  v6 = a3;
  v7 = a2[1];
  *v4 = *a2;
  v4[1] = v7;
  v8 = a2[3];
  v4[2] = a2[2];
  v4[3] = v8;
  v9 = a2[5];
  v4[4] = a2[4];
  v4[5] = v9;
  v10 = a2[7];
  v4[6] = a2[6];
  v4[7] = v10;
  v12 = a2 + 8;
  v11 = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v13 = a2[9];
    v4[8] = v11;
    v4[9] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v4 + 4) = *v12;
  }
  v15 = a2[10];
  if (!v15)
  {
    *((_OWORD *)v4 + 5) = *((_OWORD *)a2 + 5);
    v17 = a2[16];
    if (v17)
      goto LABEL_8;
LABEL_10:
    v21 = *((_OWORD *)a2 + 7);
    *((_OWORD *)v4 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)v4 + 7) = v21;
    *((_OWORD *)v4 + 8) = *((_OWORD *)a2 + 8);
    goto LABEL_11;
  }
  v16 = a2[11];
  v4[10] = v15;
  v4[11] = v16;
  swift_retain();
  v17 = a2[16];
  if (!v17)
    goto LABEL_10;
LABEL_8:
  v18 = a2[13];
  v4[12] = a2[12];
  v4[13] = v18;
  v19 = a2[15];
  v4[14] = a2[14];
  v4[15] = v19;
  v20 = a2[17];
  v4[16] = v17;
  v4[17] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
LABEL_11:
  *((_BYTE *)v4 + 144) = *((_BYTE *)a2 + 144);
  v22 = _s16ActionButtonViewV5ModelVMa(0);
  v23 = *(int *)(v22 + 48);
  v24 = (char *)v4 + v23;
  v25 = (char *)a2 + v23;
  v26 = (int *)_s12ClickMetricsVMa(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    v29 = sub_100007E8C(&qword_1011AD448);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v73 = v6;
    *v24 = *v25;
    v30 = v26[5];
    __dst = &v24[v30];
    v75 = v27;
    v31 = &v25[v30];
    v32 = type metadata accessor for URL(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 16))(__dst, v31, v32);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
    }
    v35 = v26[6];
    v36 = &v24[v35];
    v37 = &v25[v35];
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = v26[7];
    v40 = &v24[v39];
    v41 = &v25[v39];
    v42 = *(_QWORD *)&v25[v39 + 8];
    swift_bridgeObjectRetain();
    if (v42 > 9)
    {
      *v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v40 = *(_OWORD *)v41;
    }
    v24[v26[8]] = v25[v26[8]];
    v27 = v75;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v75 + 56))(v24, 0, 1, v26);
    v6 = v73;
  }
  v43 = *(int *)(v22 + 52);
  v44 = (char *)v4 + v43;
  v45 = (char *)a2 + v43;
  if (v28((_BYTE *)a2 + v43, 1, v26))
  {
    v46 = sub_100007E8C(&qword_1011AD448);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v76 = v27;
    *v44 = *v45;
    v47 = v26[5];
    v48 = &v44[v47];
    v49 = &v45[v47];
    v50 = type metadata accessor for URL(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C(&qword_10119E460);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v26[6];
    v54 = &v44[v53];
    v55 = &v45[v53];
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = v26[7];
    v58 = &v44[v57];
    v59 = &v45[v57];
    v60 = *(_QWORD *)&v45[v57 + 8];
    swift_bridgeObjectRetain();
    if (v60 > 9)
    {
      *v58 = *v59;
      v58[1] = v60;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
    v44[v26[8]] = v45[v26[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v76 + 56))(v44, 0, 1, v26);
  }
  v61 = *(int *)(v6 + 20);
  v62 = (char *)v4 + v61;
  v63 = (uint64_t)a2 + v61;
  v64 = *(_QWORD *)v63;
  v65 = *(_BYTE *)(v63 + 8);
  sub_10006B3F8(*(_QWORD *)v63, v65);
  *(_QWORD *)v62 = v64;
  v62[8] = v65;
  v66 = *(int *)(v6 + 24);
  v67 = (_QWORD *)((char *)v4 + v66);
  v68 = (uint64_t)a2 + v66;
  v69 = *(void **)v68;
  v70 = *(_QWORD *)(v68 + 8);
  *v67 = *(_QWORD *)v68;
  v67[1] = v70;
  v71 = v69;
LABEL_28:
  swift_retain();
  return v4;
}

double sub_100648A5C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  __n128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
    swift_release();
  if (a1[10])
    swift_release();
  if (a1[16])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v4 = _s16ActionButtonViewV5ModelVMa(0);
  v5 = (char *)a1 + *(int *)(v4 + 48);
  v6 = _s12ClickMetricsVMa(0);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    v9 = &v5[*(int *)(v6 + 20)];
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v8 = swift_bridgeObjectRelease();
    if (*(_QWORD *)&v5[*(int *)(v6 + 28) + 8] >= 0xAuLL)
      v8 = swift_bridgeObjectRelease();
  }
  v12 = (char *)a1 + *(int *)(v4 + 52);
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v7)(v12, 1, v6, v8))
  {
    v13 = &v12[*(int *)(v6 + 20)];
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v12[*(int *)(v6 + 28) + 8] >= 0xAuLL)
      swift_bridgeObjectRelease();
  }
  sub_10006B604(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *((_BYTE *)a1 + *(int *)(a2 + 20) + 8));

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100648C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(_BYTE *, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v71;
  _BYTE *__dst;
  uint64_t v73;
  uint64_t v74;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v11 = (_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v11;
  }
  v13 = *(_QWORD *)(a2 + 80);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v14;
    swift_retain();
    v15 = *(_QWORD *)(a2 + 128);
    if (v15)
    {
LABEL_6:
      v16 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v16;
      v17 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v17;
      v18 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = v15;
      *(_QWORD *)(a1 + 136) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_9;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    v15 = *(_QWORD *)(a2 + 128);
    if (v15)
      goto LABEL_6;
  }
  v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_9:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v20 = _s16ActionButtonViewV5ModelVMa(0);
  v21 = *(int *)(v20 + 48);
  v22 = (_BYTE *)(a1 + v21);
  v23 = (_BYTE *)(a2 + v21);
  v24 = (int *)_s12ClickMetricsVMa(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C(&qword_1011AD448);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v71 = a3;
    *v22 = *v23;
    v28 = v24[5];
    __dst = &v22[v28];
    v73 = v25;
    v29 = &v23[v28];
    v30 = type metadata accessor for URL(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16))(__dst, v29, v30);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v33 = v24[6];
    v34 = &v22[v33];
    v35 = &v23[v33];
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v24[7];
    v38 = &v22[v37];
    v39 = &v23[v37];
    v40 = *(_QWORD *)&v23[v37 + 8];
    swift_bridgeObjectRetain();
    if (v40 > 9)
    {
      *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    v22[v24[8]] = v23[v24[8]];
    v25 = v73;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v73 + 56))(v22, 0, 1, v24);
    a3 = v71;
  }
  v41 = *(int *)(v20 + 52);
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  if (v26((_BYTE *)(a2 + v41), 1, v24))
  {
    v44 = sub_100007E8C(&qword_1011AD448);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v74 = v25;
    *v42 = *v43;
    v45 = v24[5];
    v46 = &v42[v45];
    v47 = &v43[v45];
    v48 = type metadata accessor for URL(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C(&qword_10119E460);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v51 = v24[6];
    v52 = &v42[v51];
    v53 = &v43[v51];
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v24[7];
    v56 = &v42[v55];
    v57 = &v43[v55];
    v58 = *(_QWORD *)&v43[v55 + 8];
    swift_bridgeObjectRetain();
    if (v58 > 9)
    {
      *v56 = *v57;
      v56[1] = v58;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v42[v24[8]] = v43[v24[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v74 + 56))(v42, 0, 1, v24);
  }
  v59 = *(int *)(a3 + 20);
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = *(_QWORD *)v61;
  v63 = *(_BYTE *)(v61 + 8);
  sub_10006B3F8(*(_QWORD *)v61, v63);
  *(_QWORD *)v60 = v62;
  *(_BYTE *)(v60 + 8) = v63;
  v64 = *(int *)(a3 + 24);
  v65 = (_QWORD *)(a1 + v64);
  v66 = a2 + v64;
  v67 = *(void **)v66;
  v68 = *(_QWORD *)(v66 + 8);
  *v65 = *(_QWORD *)v66;
  v65[1] = v68;
  v69 = v67;
  swift_retain();
  return a1;
}

uint64_t sub_10064908C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int *v25;
  _QWORD *v26;
  uint64_t (*v27)(_BYTE *, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t (*v41)(_BYTE *, uint64_t, uint64_t);
  int v42;
  size_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  int v63;
  int v64;
  _QWORD *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(_BYTE *, uint64_t, uint64_t);
  int v79;
  size_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v6;
      *(_QWORD *)(a1 + 72) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v9;
      *(_QWORD *)(a1 + 88) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  v12 = (_OWORD *)(a1 + 96);
  v13 = (_OWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v14)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v15;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1006407FC((_QWORD *)(a1 + 96));
      v18 = *(_OWORD *)(a2 + 112);
      v17 = *(_OWORD *)(a2 + 128);
      *v12 = *v13;
      *(_OWORD *)(a1 + 112) = v18;
      *(_OWORD *)(a1 + 128) = v17;
    }
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v19 = *v13;
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v20;
    *v12 = v19;
  }
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v21 = _s16ActionButtonViewV5ModelVMa(0);
  v22 = *(int *)(v21 + 48);
  v23 = (_BYTE *)(a1 + v22);
  v24 = (_BYTE *)(a2 + v22);
  v25 = (int *)_s12ClickMetricsVMa(0);
  v26 = (_QWORD *)*((_QWORD *)v25 - 1);
  v27 = (uint64_t (*)(_BYTE *, uint64_t, int *))v26[6];
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_10005B748((uint64_t)v23, _s12ClickMetricsVMa);
      goto LABEL_28;
    }
    v114 = v21;
    v117 = v26;
    v119 = a3;
    *v23 = *v24;
    v37 = v25[5];
    v38 = &v23[v37];
    v39 = &v24[v37];
    v40 = type metadata accessor for URL(0);
    v111 = *(_QWORD *)(v40 - 8);
    v41 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v111 + 48);
    v112 = v38;
    LODWORD(v38) = v41(v38, 1, v40);
    v42 = v41(v39, 1, v40);
    if ((_DWORD)v38)
    {
      if (v42)
      {
        v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v44 = v112;
LABEL_38:
        memcpy(v44, v39, v43);
        goto LABEL_42;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v111 + 16))(v112, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v112, 0, 1, v40);
    }
    else
    {
      if (v42)
      {
        (*(void (**)(void *, uint64_t))(v111 + 8))(v112, v40);
        v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v44 = v112;
        goto LABEL_38;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v111 + 24))(v112, v39, v40);
    }
LABEL_42:
    a3 = v119;
    v52 = v25[6];
    v53 = &v23[v52];
    v54 = &v24[v52];
    *v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v55 = v25[7];
    v56 = (uint64_t)&v23[v55];
    v57 = &v24[v55];
    v58 = *(_QWORD *)&v23[v55 + 8];
    v59 = *(_QWORD *)&v24[v55 + 8];
    if (v58 == 9)
    {
      v26 = v117;
      if (v59 <= 9)
      {
LABEL_44:
        *(_OWORD *)v56 = *(_OWORD *)v57;
LABEL_55:
        v21 = v114;
        v23[v25[8]] = v24[v25[8]];
        goto LABEL_56;
      }
LABEL_54:
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *(_QWORD *)(v56 + 8) = *((_QWORD *)v57 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    if (v59 == 9)
    {
      sub_1001C5334(v56);
    }
    else
    {
      if (v58 < 9)
      {
        v26 = v117;
        if (v59 < 9)
          goto LABEL_44;
        goto LABEL_54;
      }
      if (v59 >= 9)
      {
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *(_QWORD *)(v56 + 8) = *((_QWORD *)v57 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      sub_10004FF60(v56, &qword_1011A4D80);
    }
    *(_OWORD *)v56 = *(_OWORD *)v57;
LABEL_53:
    v26 = v117;
    goto LABEL_55;
  }
  if (v29)
  {
LABEL_28:
    v36 = sub_100007E8C(&qword_1011AD448);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_56;
  }
  v113 = v21;
  v116 = v26;
  v118 = a3;
  *v23 = *v24;
  v30 = v25[5];
  v31 = &v23[v30];
  v32 = &v24[v30];
  v33 = type metadata accessor for URL(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C(&qword_10119E460);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  a3 = v118;
  v45 = v25[6];
  v46 = &v23[v45];
  v47 = &v24[v45];
  *v46 = *v47;
  v46[1] = v47[1];
  v48 = v25[7];
  v49 = &v23[v48];
  v50 = &v24[v48];
  v51 = *(_QWORD *)&v24[v48 + 8];
  swift_bridgeObjectRetain();
  if (v51 > 9)
  {
    *v49 = *v50;
    v49[1] = v50[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
  }
  v21 = v113;
  v26 = v116;
  v23[v25[8]] = v24[v25[8]];
  ((void (*)(_BYTE *, _QWORD, uint64_t, int *))v116[7])(v23, 0, 1, v25);
LABEL_56:
  v60 = *(int *)(v21 + 52);
  v61 = (_BYTE *)(a1 + v60);
  v62 = (_BYTE *)(a2 + v60);
  v63 = v27((_BYTE *)(a1 + v60), 1, v25);
  v64 = v27(v62, 1, v25);
  if (!v63)
  {
    if (v64)
    {
      sub_10005B748((uint64_t)v61, _s12ClickMetricsVMa);
      goto LABEL_62;
    }
    v121 = a3;
    *v61 = *v62;
    v73 = v25[5];
    v74 = &v61[v73];
    v75 = &v62[v73];
    v76 = type metadata accessor for URL(0);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v77 + 48);
    v115 = v74;
    LODWORD(v74) = v78(v74, 1, v76);
    v79 = v78(v75, 1, v76);
    if ((_DWORD)v74)
    {
      if (v79)
      {
        v80 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v81 = v115;
LABEL_72:
        memcpy(v81, v75, v80);
        goto LABEL_76;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v77 + 16))(v115, v75, v76);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v115, 0, 1, v76);
    }
    else
    {
      if (v79)
      {
        (*(void (**)(void *, uint64_t))(v77 + 8))(v115, v76);
        v80 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v81 = v115;
        goto LABEL_72;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v77 + 24))(v115, v75, v76);
    }
LABEL_76:
    a3 = v121;
    v89 = v25[6];
    v90 = &v61[v89];
    v91 = &v62[v89];
    *v90 = *v91;
    v90[1] = v91[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v92 = v25[7];
    v93 = &v61[v92];
    v94 = &v62[v92];
    v95 = *(_QWORD *)&v61[v92 + 8];
    v96 = *(_QWORD *)&v62[v92 + 8];
    if (v95 == 9)
    {
      if (v96 >= 0xA)
        goto LABEL_83;
    }
    else if (v96 == 9)
    {
      sub_1001C5334((uint64_t)v93);
    }
    else if (v95 >= 9)
    {
      if (v96 >= 9)
      {
        *v93 = *v94;
        v93[1] = v94[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
      sub_10004FF60((uint64_t)v93, &qword_1011A4D80);
    }
    else if (v96 >= 9)
    {
LABEL_83:
      *v93 = *v94;
      v93[1] = v94[1];
      swift_bridgeObjectRetain();
LABEL_87:
      v61[v25[8]] = v62[v25[8]];
      goto LABEL_88;
    }
    *(_OWORD *)v93 = *(_OWORD *)v94;
    goto LABEL_87;
  }
  if (v64)
  {
LABEL_62:
    v72 = sub_100007E8C(&qword_1011AD448);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_88;
  }
  v120 = a3;
  v65 = v26;
  *v61 = *v62;
  v66 = v25[5];
  v67 = &v61[v66];
  v68 = &v62[v66];
  v69 = type metadata accessor for URL(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = sub_100007E8C(&qword_10119E460);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  v82 = v25[6];
  v83 = &v61[v82];
  v84 = &v62[v82];
  *v83 = *v84;
  v83[1] = v84[1];
  v85 = v25[7];
  v86 = &v61[v85];
  v87 = &v62[v85];
  v88 = *(_QWORD *)&v62[v85 + 8];
  swift_bridgeObjectRetain();
  if (v88 > 9)
  {
    *v86 = *v87;
    v86[1] = v87[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v86 = *(_OWORD *)v87;
  }
  v61[v25[8]] = v62[v25[8]];
  ((void (*)(_BYTE *, _QWORD, uint64_t, int *))v65[7])(v61, 0, 1, v25);
  a3 = v120;
LABEL_88:
  v97 = *(int *)(a3 + 20);
  v98 = a1 + v97;
  v99 = a2 + v97;
  v100 = *(_QWORD *)v99;
  v101 = *(_BYTE *)(v99 + 8);
  sub_10006B3F8(*(_QWORD *)v99, v101);
  v102 = *(_QWORD *)v98;
  v103 = *(_BYTE *)(v98 + 8);
  *(_QWORD *)v98 = v100;
  *(_BYTE *)(v98 + 8) = v101;
  sub_10006B604(v102, v103);
  v104 = *(int *)(a3 + 24);
  v105 = (_QWORD *)(a1 + v104);
  v106 = a2 + v104;
  v107 = *(void **)(a1 + v104);
  v108 = *(void **)v106;
  *v105 = *(_QWORD *)v106;
  v109 = v108;

  v105[1] = *(_QWORD *)(v106 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100649A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  _BYTE *__dst;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v10 = _s16ActionButtonViewV5ModelVMa(0);
  v11 = *(int *)(v10 + 48);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = (int *)_s12ClickMetricsVMa(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_100007E8C(&qword_1011AD448);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v38 = a3;
    *v12 = *v13;
    v18 = v14[5];
    __dst = &v12[v18];
    v40 = v15;
    v19 = &v13[v18];
    v20 = type metadata accessor for URL(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
    *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
    v12[v14[8]] = v13[v14[8]];
    v15 = v40;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v40 + 56))(v12, 0, 1, v14);
    a3 = v38;
  }
  v23 = *(int *)(v10 + 52);
  v24 = (_BYTE *)(a1 + v23);
  v25 = (_BYTE *)(a2 + v23);
  if (v16((_BYTE *)(a2 + v23), 1, v14))
  {
    v26 = sub_100007E8C(&qword_1011AD448);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v41 = v15;
    *v24 = *v25;
    v27 = v14[5];
    v28 = &v24[v27];
    v29 = &v25[v27];
    v30 = type metadata accessor for URL(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119E460);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    *(_OWORD *)&v24[v14[6]] = *(_OWORD *)&v25[v14[6]];
    *(_OWORD *)&v24[v14[7]] = *(_OWORD *)&v25[v14[7]];
    v24[v14[8]] = v25[v14[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v41 + 56))(v24, 0, 1, v14);
  }
  v33 = *(int *)(a3 + 20);
  v34 = *(int *)(a3 + 24);
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  return a1;
}

uint64_t sub_100649D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  int *v23;
  uint64_t (*v24)(_BYTE *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  int v55;
  int v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_BYTE *, uint64_t, uint64_t);
  int v70;
  size_t v71;
  void *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  void *v92;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v10;
      *(_QWORD *)(a1 + 72) = v11;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v12;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v13 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v13)
    {
      v14 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 88) = v14;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v15;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  if (*(_QWORD *)(a1 + 128))
  {
    if (*(_QWORD *)(a2 + 128))
    {
      v16 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v17;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      swift_release();
      goto LABEL_20;
    }
    sub_1006407FC((_QWORD *)(a1 + 96));
  }
  v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_20:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v19 = _s16ActionButtonViewV5ModelVMa(0);
  v20 = *(int *)(v19 + 48);
  v21 = (_BYTE *)(a1 + v20);
  v22 = (_BYTE *)(a2 + v20);
  v23 = (int *)_s12ClickMetricsVMa(0);
  v102 = (_QWORD *)*((_QWORD *)v23 - 1);
  v24 = (uint64_t (*)(_BYTE *, uint64_t, int *))v102[6];
  v25 = v24(v21, 1, v23);
  v26 = v24(v22, 1, v23);
  if (!v25)
  {
    if (v26)
    {
      sub_10005B748((uint64_t)v21, _s12ClickMetricsVMa);
      goto LABEL_26;
    }
    v97 = v19;
    v100 = a3;
    *v21 = *v22;
    v34 = v23[5];
    v35 = &v21[v34];
    v36 = &v22[v34];
    v37 = type metadata accessor for URL(0);
    v94 = *(_QWORD *)(v37 - 8);
    v38 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v94 + 48);
    v95 = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    v39 = v38(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (v39)
      {
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v41 = v95;
LABEL_34:
        memcpy(v41, v36, v40);
        goto LABEL_37;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v94 + 32))(v95, v36, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v95, 0, 1, v37);
    }
    else
    {
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v94 + 8))(v95, v37);
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v41 = v95;
        goto LABEL_34;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v94 + 40))(v95, v36, v37);
    }
LABEL_37:
    a3 = v100;
    v42 = v23[6];
    v43 = &v21[v42];
    v44 = (uint64_t *)&v22[v42];
    v46 = *v44;
    v45 = v44[1];
    *v43 = v46;
    v43[1] = v45;
    swift_bridgeObjectRelease();
    v47 = v23[7];
    v48 = &v21[v47];
    v49 = &v22[v47];
    v50 = *(_QWORD *)&v21[v47 + 8];
    v51 = *(_QWORD *)&v22[v47 + 8];
    if (v50 != 9)
    {
      if (v51 == 9)
      {
        sub_1001C5334((uint64_t)v48);
      }
      else if (v50 >= 9)
      {
        if (v51 >= 9)
        {
          *v48 = *v49;
          v48[1] = v51;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        sub_10004FF60((uint64_t)v48, &qword_1011A4D80);
      }
    }
    *(_OWORD *)v48 = *(_OWORD *)v49;
LABEL_44:
    v19 = v97;
    v21[v23[8]] = v22[v23[8]];
    goto LABEL_45;
  }
  if (v26)
  {
LABEL_26:
    v33 = sub_100007E8C(&qword_1011AD448);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_45;
  }
  v96 = v19;
  v99 = a3;
  *v21 = *v22;
  v27 = v23[5];
  v28 = &v21[v27];
  v29 = &v22[v27];
  v30 = type metadata accessor for URL(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C(&qword_10119E460);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v19 = v96;
  a3 = v99;
  *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
  *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
  v21[v23[8]] = v22[v23[8]];
  ((void (*)(_BYTE *, _QWORD, uint64_t, int *))v102[7])(v21, 0, 1, v23);
LABEL_45:
  v52 = *(int *)(v19 + 52);
  v53 = (_BYTE *)(a1 + v52);
  v54 = (_BYTE *)(a2 + v52);
  v55 = v24((_BYTE *)(a1 + v52), 1, v23);
  v56 = v24(v54, 1, v23);
  if (!v55)
  {
    if (v56)
    {
      sub_10005B748((uint64_t)v53, _s12ClickMetricsVMa);
      goto LABEL_51;
    }
    v101 = a3;
    *v53 = *v54;
    v64 = v23[5];
    v65 = &v53[v64];
    v66 = &v54[v64];
    v67 = type metadata accessor for URL(0);
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48);
    v98 = v65;
    LODWORD(v65) = v69(v65, 1, v67);
    v70 = v69(v66, 1, v67);
    if ((_DWORD)v65)
    {
      if (v70)
      {
        v71 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v72 = v98;
LABEL_59:
        memcpy(v72, v66, v71);
        goto LABEL_62;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v68 + 32))(v98, v66, v67);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v98, 0, 1, v67);
    }
    else
    {
      if (v70)
      {
        (*(void (**)(void *, uint64_t))(v68 + 8))(v98, v67);
        v71 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
        v72 = v98;
        goto LABEL_59;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v68 + 40))(v98, v66, v67);
    }
LABEL_62:
    a3 = v101;
    v73 = v23[6];
    v74 = &v53[v73];
    v75 = (uint64_t *)&v54[v73];
    v77 = *v75;
    v76 = v75[1];
    *v74 = v77;
    v74[1] = v76;
    swift_bridgeObjectRelease();
    v78 = v23[7];
    v79 = &v53[v78];
    v80 = &v54[v78];
    v81 = *(_QWORD *)&v53[v78 + 8];
    v82 = *(_QWORD *)&v54[v78 + 8];
    if (v81 != 9)
    {
      if (v82 == 9)
      {
        sub_1001C5334((uint64_t)v79);
      }
      else if (v81 >= 9)
      {
        if (v82 >= 9)
        {
          *v79 = *v80;
          v79[1] = v82;
          swift_bridgeObjectRelease();
          goto LABEL_69;
        }
        sub_10004FF60((uint64_t)v79, &qword_1011A4D80);
      }
    }
    *(_OWORD *)v79 = *(_OWORD *)v80;
LABEL_69:
    v53[v23[8]] = v54[v23[8]];
    goto LABEL_70;
  }
  if (v56)
  {
LABEL_51:
    v63 = sub_100007E8C(&qword_1011AD448);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_70;
  }
  *v53 = *v54;
  v57 = v23[5];
  v58 = &v53[v57];
  v59 = &v54[v57];
  v60 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    v62 = sub_100007E8C(&qword_10119E460);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 32))(v58, v59, v60);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  *(_OWORD *)&v53[v23[6]] = *(_OWORD *)&v54[v23[6]];
  *(_OWORD *)&v53[v23[7]] = *(_OWORD *)&v54[v23[7]];
  v53[v23[8]] = v54[v23[8]];
  ((void (*)(_BYTE *, _QWORD, uint64_t, int *))v102[7])(v53, 0, 1, v23);
LABEL_70:
  v83 = *(int *)(a3 + 20);
  v84 = a1 + v83;
  v85 = (uint64_t *)(a2 + v83);
  v86 = *v85;
  LOBYTE(v85) = *((_BYTE *)v85 + 8);
  v87 = *(_QWORD *)v84;
  v88 = *(_BYTE *)(v84 + 8);
  *(_QWORD *)v84 = v86;
  *(_BYTE *)(v84 + 8) = (_BYTE)v85;
  sub_10006B604(v87, v88);
  v89 = *(int *)(a3 + 24);
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  v92 = *(void **)(a1 + v89);
  *v90 = *v91;

  v90[1] = v91[1];
  swift_release();
  return a1;
}

uint64_t sub_10064A554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10064A560);
}

uint64_t sub_10064A560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = _s16ActionButtonViewV5ModelVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_10064A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10064A5F4);
}

uint64_t sub_10064A5F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s16ActionButtonViewV5ModelVMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t _s16ActionButtonViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BF618, (uint64_t)&_s16ActionButtonViewVMn);
}

uint64_t sub_10064A680(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = _s16ActionButtonViewV5ModelVMa(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100EC6188;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10064A700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF658;
  if (!qword_1011BF658)
  {
    v1 = sub_100044B54(&qword_1011BF4E0);
    sub_10005610C(&qword_1011BF660, &qword_1011BF4D8, (void (*)(void))sub_10064A7A4);
    sub_100049F28(&qword_1011BF690, &qword_1011BF698, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF658);
  }
  return result;
}

unint64_t sub_10064A7A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF668;
  if (!qword_1011BF668)
  {
    v1 = sub_100044B54(&qword_1011BF4D0);
    sub_10005610C(&qword_1011BF670, &qword_1011BF678, (void (*)(void))sub_10064A848);
    sub_100049F28(&qword_1011BF688, &qword_1011BF4C0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF668);
  }
  return result;
}

unint64_t sub_10064A848()
{
  unint64_t result;

  result = qword_1011BF680;
  if (!qword_1011BF680)
  {
    result = swift_getWitnessTable(&unk_100EC6568, &_s11ContentViewVN);
    atomic_store(result, (unint64_t *)&qword_1011BF680);
  }
  return result;
}

uint64_t sub_10064A88C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7EE0, 1);
}

unint64_t sub_10064A8A0()
{
  unint64_t result;

  result = qword_1011BF6A0;
  if (!qword_1011BF6A0)
  {
    result = swift_getWitnessTable(&unk_100EC64A0, &_s8ViewTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1011BF6A0);
  }
  return result;
}

uint64_t sub_10064A8E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7EB8, 1);
}

uint64_t sub_10064A8F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7E90, 1);
}

uint64_t sub_10064A90C()
{
  return sub_10015FD08(&qword_1011BF6D0, (uint64_t *)&unk_1011BF6C0, (void (*)(void))sub_10064A930, (void (*)(void))sub_10064A9F8);
}

unint64_t sub_10064A930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF6D8;
  if (!qword_1011BF6D8)
  {
    v1 = sub_100044B54(&qword_1011BF6E0);
    sub_10064A9B4();
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF6D8);
  }
  return result;
}

unint64_t sub_10064A9B4()
{
  unint64_t result;

  result = qword_1011BF6E8;
  if (!qword_1011BF6E8)
  {
    result = swift_getWitnessTable(&unk_100EC6518, &_s14InProgressViewVN);
    atomic_store(result, (unint64_t *)&qword_1011BF6E8);
  }
  return result;
}

unint64_t sub_10064A9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF700;
  if (!qword_1011BF700)
  {
    v1 = sub_100044B54(&qword_1011BF6A8);
    sub_100048748((unint64_t *)&unk_1011BF708, _s16ActionButtonViewVMa, (uint64_t)&unk_100EC6410);
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF700);
  }
  return result;
}

double sub_10064AA94(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double v4;

  if ((a1 & 1) != 0)
  {
    if (qword_10119C458 != -1)
      swift_once(&qword_10119C458, sub_10064528C);
    v3 = qword_1011BF0F0;
    if (qword_10119C468 != -1)
      swift_once(&qword_10119C468, sub_1006452CC);
    if (qword_10119C460 != -1)
      swift_once(&qword_10119C460, sub_1006452AC);
  }
  else if (a3)
  {
    if (qword_10119C438 != -1)
      swift_once(&qword_10119C438, sub_100645214);
    v3 = qword_1011BF0D8;
    if (qword_10119C420 != -1)
      swift_once(&qword_10119C420, sub_1006451B4);
    if (qword_10119C440 != -1)
      swift_once(&qword_10119C440, sub_100645234);
  }
  else
  {
    if (qword_10119C420 != -1)
      swift_once(&qword_10119C420, sub_1006451B4);
    v4 = *(double *)&qword_1011BF0C0;
    if (qword_10119C418 != -1)
      swift_once(&qword_10119C418, sub_100645194);
    *(double *)&v3 = EdgeInsets.init(horizontal:vertical:)(v4, *(double *)&qword_1011BF0B8);
  }
  return *(double *)&v3;
}

unint64_t sub_10064AC6C()
{
  unint64_t result;

  result = qword_1011BF760;
  if (!qword_1011BF760)
  {
    result = swift_getWitnessTable(&unk_100EC685C, &type metadata for LinearProgressStyle);
    atomic_store(result, (unint64_t *)&qword_1011BF760);
  }
  return result;
}

uint64_t sub_10064ACB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = _s16ActionButtonViewVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = v0 + v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 64))
    swift_release();
  if (*(_QWORD *)(v7 + 80))
    swift_release();
  if (*(_QWORD *)(v7 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v8 = _s16ActionButtonViewV5ModelVMa(0);
  v9 = v7 + *(int *)(v8 + 48);
  v10 = _s12ClickMetricsVMa(0);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v21 = v1;
    v22 = v6;
    v13 = v9 + *(int *)(v10 + 20);
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v12 = swift_bridgeObjectRelease();
    v5 = (v4 + 16) & ~v4;
    v1 = v21;
    v6 = v22;
    if (*(_QWORD *)(v9 + *(int *)(v10 + 28) + 8) >= 0xAuLL)
      v12 = swift_bridgeObjectRelease();
  }
  v16 = v7 + *(int *)(v8 + 52);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v16, 1, v10, v12))
  {
    v23 = v6;
    v17 = v16 + *(int *)(v10 + 20);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    swift_bridgeObjectRelease();
    v6 = v23;
    if (*(_QWORD *)(v16 + *(int *)(v10 + 28) + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
  }
  sub_10006B604(*(_QWORD *)(v7 + *(int *)(v2 + 20)), *(_BYTE *)(v7 + *(int *)(v2 + 20) + 8));

  swift_release();
  return swift_deallocObject(v1, v5 + v6);
}

uint64_t sub_10064AEF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s16ActionButtonViewVMa(0) - 8) + 80);
  return sub_1006448E0(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_10064AF24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011BF7E0;
  if (!qword_1011BF7E0)
  {
    v1 = sub_100044B54(&qword_1011BF7D8);
    v2[0] = sub_100044B54(&qword_1011AC700);
    v2[1] = sub_100318590();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF7E0);
  }
  return result;
}

unint64_t sub_10064AFD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011BF810;
  if (!qword_1011BF810)
  {
    v1 = sub_100044B54(&qword_1011BF7C0);
    v2[0] = sub_100044B54(&qword_1011BF7B0);
    v2[1] = type metadata accessor for PlainButtonStyle(255);
    v2[2] = sub_100049F28(&qword_1011BF7F8, &qword_1011BF7B0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF810);
  }
  return result;
}

uint64_t sub_10064B0C8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10064B0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10064B10C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10064B114(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_10064B124(a1, a2);
  return a1;
}

uint64_t sub_10064B124(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_10064B138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = _s16ActionButtonViewVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  swift_release();
  v7 = v1 + v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v5 + 64))
    swift_release();
  if (*(_QWORD *)(v7 + 80))
    swift_release();
  if (*(_QWORD *)(v7 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v8 = _s16ActionButtonViewV5ModelVMa(0);
  v9 = v7 + *(int *)(v8 + 48);
  v10 = _s12ClickMetricsVMa(0);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v22 = v1;
    v23 = v6;
    v13 = v9 + *(int *)(v10 + 20);
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v12 = swift_bridgeObjectRelease();
    v5 = (v4 + 32) & ~v4;
    v1 = v22;
    v6 = v23;
    if (*(_QWORD *)(v9 + *(int *)(v10 + 28) + 8) >= 0xAuLL)
      v12 = swift_bridgeObjectRelease();
  }
  v16 = v7 + *(int *)(v8 + 52);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v16, 1, v10, v12))
  {
    v24 = v6;
    v17 = v5;
    v18 = v16 + *(int *)(v10 + 20);
    v19 = type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    v5 = v17;
    v6 = v24;
    if (*(_QWORD *)(v16 + *(int *)(v10 + 28) + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
  }
  sub_10006B604(*(_QWORD *)(v7 + *(int *)(v2 + 20)), *(_BYTE *)(v7 + *(int *)(v2 + 20) + 8));

  swift_release();
  return swift_deallocObject(v1, v5 + v6);
}

uint64_t sub_10064B390()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s16ActionButtonViewVMa(0) - 8) + 80);
  return sub_100643FA0(*(void (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10064B3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100644350(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_10064B3C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF848;
  if (!qword_1011BF848)
  {
    v1 = sub_100044B54(&qword_1011BF840);
    sub_10064B434();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF848);
  }
  return result;
}

unint64_t sub_10064B434()
{
  unint64_t result;

  result = qword_1011BF850;
  if (!qword_1011BF850)
  {
    result = swift_getWitnessTable(&unk_100EC680C, &type metadata for Specs.ActionButtonView.ActionLabelModifier);
    atomic_store(result, (unint64_t *)&qword_1011BF850);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearProgressStyle()
{
  return &type metadata for LinearProgressStyle;
}

ValueMetadata *type metadata accessor for Specs.InProgressView.SubtitleModifier()
{
  return &type metadata for Specs.InProgressView.SubtitleModifier;
}

ValueMetadata *type metadata accessor for Specs.InProgressView()
{
  return &type metadata for Specs.InProgressView;
}

uint64_t getEnumTagSinglePayload for Corner(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Specs.InProgressView.TitleModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Specs.InProgressView.TitleModifier()
{
  return &type metadata for Specs.InProgressView.TitleModifier;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.ActionLabelModifier()
{
  return &type metadata for Specs.ActionButtonView.ActionLabelModifier;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.SubtitleModifier()
{
  return &type metadata for Specs.ActionButtonView.SubtitleModifier;
}

ValueMetadata *type metadata accessor for Specs()
{
  return &type metadata for Specs;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView()
{
  return &type metadata for Specs.ActionButtonView;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.TitleModifier()
{
  return &type metadata for Specs.ActionButtonView.TitleModifier;
}

uint64_t sub_10064B554()
{
  return sub_10015FD08(&qword_1011BF860, &qword_1011BF868, (void (*)(void))sub_10064A90C, (void (*)(void))sub_100283308);
}

uint64_t sub_10064B588()
{
  return sub_10005610C(&qword_1011BF870, (uint64_t *)&unk_1011BF740, (void (*)(void))sub_10064B5BC);
}

unint64_t sub_10064B5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF878;
  if (!qword_1011BF878)
  {
    v1 = sub_100044B54(&qword_1011BF730);
    sub_100049F28(&qword_1011BF880, &qword_1011BF728, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF878);
  }
  return result;
}

unint64_t sub_10064B644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF888;
  if (!qword_1011BF888)
  {
    v1 = sub_100044B54(&qword_1011BF790);
    sub_10064B6C8();
    sub_100049F28(&qword_1011BF8C0, &qword_1011BF7A8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF888);
  }
  return result;
}

unint64_t sub_10064B6C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF890;
  if (!qword_1011BF890)
  {
    v1 = sub_100044B54(&qword_1011BF788);
    sub_10005610C(&qword_1011BF898, &qword_1011BF780, (void (*)(void))sub_10064B76C);
    sub_100049F28(&qword_1011BF8B0, &qword_1011BF8B8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF890);
  }
  return result;
}

unint64_t sub_10064B76C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF8A0;
  if (!qword_1011BF8A0)
  {
    v1 = sub_100044B54(&qword_1011BF778);
    sub_100049F28(&qword_1011BF8A8, &qword_1011BF770, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF8A0);
  }
  return result;
}

uint64_t sub_10064B7F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7FD0, 1);
}

uint64_t sub_10064B800(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7FA8, 1);
}

uint64_t sub_10064B810(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7F80, 1);
}

uint64_t sub_10064B820(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7F58, 1);
}

uint64_t sub_10064B830(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7F30, 1);
}

uint64_t sub_10064B840(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA7F08, 1);
}

uint64_t sub_10064B850()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t *sub_10064B860(uint64_t a1)
{
  uint64_t v1;

  return sub_100646140(a1, *(double *)(v1 + 16));
}

uint64_t *sub_10064B868(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[17];
  swift_release(a1[16]);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  return a1;
}

uint64_t *sub_10064B8C0(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain(a1[1]);
  swift_retain(v2);
  return a1;
}

_QWORD *sub_10064B8F0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  swift_release(*a1);
  swift_release(v2);
  return a1;
}

unint64_t sub_10064B934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF900;
  if (!qword_1011BF900)
  {
    v1 = sub_100044B54(&qword_1011BF8F0);
    sub_10064B9B8();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF900);
  }
  return result;
}

unint64_t sub_10064B9B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF908;
  if (!qword_1011BF908)
  {
    v1 = sub_100044B54(&qword_1011BF8E8);
    sub_10064BA3C();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF908);
  }
  return result;
}

unint64_t sub_10064BA3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF910;
  if (!qword_1011BF910)
  {
    v1 = sub_100044B54(&qword_1011BF8E0);
    sub_10064BAC0();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF910);
  }
  return result;
}

unint64_t sub_10064BAC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF918;
  if (!qword_1011BF918)
  {
    v1 = sub_100044B54(&qword_1011BF8D8);
    sub_100049F28((unint64_t *)&unk_1011BF920, &qword_1011BF8F8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF918);
  }
  return result;
}

unint64_t sub_10064BB44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF9A8;
  if (!qword_1011BF9A8)
  {
    v1 = sub_100044B54(&qword_1011BF998);
    sub_10064BBC8();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF9A8);
  }
  return result;
}

unint64_t sub_10064BBC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF9B0;
  if (!qword_1011BF9B0)
  {
    v1 = sub_100044B54(&qword_1011BF990);
    sub_10064BC4C();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF9B0);
  }
  return result;
}

unint64_t sub_10064BC4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF9B8;
  if (!qword_1011BF9B8)
  {
    v1 = sub_100044B54(&qword_1011BF988);
    sub_10064BCD0();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF9B8);
  }
  return result;
}

unint64_t sub_10064BCD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF9C0;
  if (!qword_1011BF9C0)
  {
    v1 = sub_100044B54(&qword_1011BF980);
    sub_10064BD54();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF9C0);
  }
  return result;
}

unint64_t sub_10064BD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF9C8;
  if (!qword_1011BF9C8)
  {
    v1 = sub_100044B54(&qword_1011BF978);
    sub_100049F28(&qword_1011BF9D0, &qword_1011BF9A0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF9C8);
  }
  return result;
}

unint64_t sub_10064BDD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA38;
  if (!qword_1011BFA38)
  {
    v1 = sub_100044B54(&qword_1011BFA28);
    sub_10064BE5C();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA38);
  }
  return result;
}

unint64_t sub_10064BE5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA40;
  if (!qword_1011BFA40)
  {
    v1 = sub_100044B54(&qword_1011BFA20);
    sub_10064BEE0();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA40);
  }
  return result;
}

unint64_t sub_10064BEE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA48;
  if (!qword_1011BFA48)
  {
    v1 = sub_100044B54(&qword_1011BFA18);
    sub_10064BF64();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA48);
  }
  return result;
}

unint64_t sub_10064BF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA50;
  if (!qword_1011BFA50)
  {
    v1 = sub_100044B54(&qword_1011BFA10);
    sub_10064BFE8();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA50);
  }
  return result;
}

unint64_t sub_10064BFE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA58;
  if (!qword_1011BFA58)
  {
    v1 = sub_100044B54(&qword_1011BFA08);
    sub_100049F28(&qword_1011BFA60, &qword_1011BFA30, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA58);
  }
  return result;
}

unint64_t sub_10064C070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA68;
  if (!qword_1011BFA68)
  {
    v1 = sub_100044B54(&qword_1011BFA70);
    sub_100049F28(&qword_1011BFA78, &qword_1011BFA80, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA68);
  }
  return result;
}

uint64_t sub_10064C0F4(uint64_t a1)
{
  return sub_10064C660(a1, &qword_1011BF8F0, (uint64_t (*)(void))sub_10064B934);
}

unint64_t sub_10064C10C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA88;
  if (!qword_1011BFA88)
  {
    v1 = sub_100044B54(&qword_1011BF970);
    sub_10064C190();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA88);
  }
  return result;
}

unint64_t sub_10064C190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA90;
  if (!qword_1011BFA90)
  {
    v1 = sub_100044B54(&qword_1011BF960);
    sub_10064C214();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA90);
  }
  return result;
}

unint64_t sub_10064C214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFA98;
  if (!qword_1011BFA98)
  {
    v1 = sub_100044B54(&qword_1011BF958);
    sub_10064C298();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFA98);
  }
  return result;
}

unint64_t sub_10064C298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAA0;
  if (!qword_1011BFAA0)
  {
    v1 = sub_100044B54(&qword_1011BF950);
    sub_10064C31C();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAA0);
  }
  return result;
}

unint64_t sub_10064C31C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAA8;
  if (!qword_1011BFAA8)
  {
    v1 = sub_100044B54(&qword_1011BF948);
    sub_100049F28(&qword_1011BFAB0, &qword_1011BF968, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAA8);
  }
  return result;
}

uint64_t sub_10064C3A0(uint64_t a1)
{
  return sub_10064C660(a1, &qword_1011BF998, (uint64_t (*)(void))sub_10064BB44);
}

unint64_t sub_10064C3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAB8;
  if (!qword_1011BFAB8)
  {
    v1 = sub_100044B54(&qword_1011BFA00);
    sub_10064C43C();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAB8);
  }
  return result;
}

unint64_t sub_10064C43C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAC0;
  if (!qword_1011BFAC0)
  {
    v1 = sub_100044B54(&qword_1011BF9F0);
    sub_10064C4C0();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAC0);
  }
  return result;
}

unint64_t sub_10064C4C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAC8;
  if (!qword_1011BFAC8)
  {
    v1 = sub_100044B54(&qword_1011BF9E8);
    sub_10064C544();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAC8);
  }
  return result;
}

unint64_t sub_10064C544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAD0;
  if (!qword_1011BFAD0)
  {
    v1 = sub_100044B54(&qword_1011BF9E0);
    sub_10064C5C8();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAD0);
  }
  return result;
}

unint64_t sub_10064C5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFAD8;
  if (!qword_1011BFAD8)
  {
    v1 = sub_100044B54(&qword_1011BF9D8);
    sub_100049F28((unint64_t *)&unk_1011BFAE0, &qword_1011BF9F8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BFAD8);
  }
  return result;
}

uint64_t sub_10064C64C(uint64_t a1)
{
  return sub_10064C660(a1, &qword_1011BFA28, (uint64_t (*)(void))sub_10064BDD8);
}

uint64_t sub_10064C660(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  _QWORD v5[2];

  v5[0] = sub_100044B54(a2);
  v5[1] = a3();
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
}

void sub_10064C6B4(char *a1)
{
  sub_1005D1FF8(*a1);
}

void sub_10064C6C0()
{
  char *v0;

  sub_10059071C(*v0);
}

void sub_10064C6C8()
{
  __asm { BR              X10 }
}

uint64_t sub_10064C704(uint64_t a1)
{
  String.hash(into:)(a1, 0x61656C655277656ELL, 0xEB00000000736573);
  return swift_bridgeObjectRelease(0xEB00000000736573);
}

void sub_10064C798(uint64_t a1)
{
  char *v1;

  sub_100590C78(a1, *v1);
}

unint64_t sub_10064C7A0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10064F7EC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10064C7CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10064C7FC + 4 * byte_100EC6935[*v0]))();
}

void sub_10064C7FC(_QWORD *a1@<X8>)
{
  *a1 = 0x61656C655277656ELL;
  a1[1] = 0xEB00000000736573;
}

void sub_10064C820(char *a1@<X8>)
{
  strcpy(a1, "stationsForYou");
  a1[15] = -18;
}

void sub_10064C848(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000100E2B760;
}

void sub_10064C868(_QWORD *a1@<X8>)
{
  *a1 = 0x536B73417473756ALL;
  a1[1] = 0xEB00000000697269;
}

void sub_10064C88C(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AD040;
}

uint64_t sub_10064C89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10064F834();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10064C8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10064F834();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_10064C944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v47;
  char v48;
  Swift::String v49;
  unint64_t v50;
  unint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = 0xD00000000000001ALL;
  v51 = 0x8000000100E40FD0;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "fetchDate: \"");
  BYTE5(v49._object) = 0;
  HIWORD(v49._object) = -5120;
  v5 = sub_100048748(&qword_1011B08E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 2108450;
  v7._object = (void *)0xE300000000000000;
  String.append(_:)(v7);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0x617A696C61636F6CLL;
  v49._object = (void *)0xEF22203A6E6F6974;
  v8 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v9 = (uint64_t *)(v0 + v8[5]);
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain();
  v12 = Optional<A>.description.getter(v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 2108450;
  v16._object = (void *)0xE300000000000000;
  String.append(_:)(v16);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0xD000000000000012;
  v49._object = (void *)0x8000000100E40FF0;
  if (qword_10119C4B0 != -1)
    swift_once(&qword_10119C4B0, sub_10064CE40);
  v17 = sub_100048B14((uint64_t)v8, (uint64_t)qword_10124D508);
  v18 = sub_10064F1A8(v1, v17);
  if ((v18 & 1) != 0)
  {
    v19 = 0x4072C00000000000;
LABEL_12:
    v20 = *(double *)&v19;
    goto LABEL_13;
  }
  if (qword_10119BDA8 != -1)
    v18 = swift_once(&qword_10119BDA8, sub_1002DDCC8);
  if (!qword_10124CCC0)
  {
    v19 = 0x40DC200000000000;
    goto LABEL_12;
  }
  v18 = sub_1002DDE48();
  v20 = *(double *)&v18;
  if ((v21 & 1) != 0)
    v20 = 28800.0;
LABEL_13:
  Date.addingTimeInterval(_:)(v18, v20);
  v22 = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v2);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 2108450;
  v26._object = (void *)0xE300000000000000;
  String.append(_:)(v26);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "title: \"");
  BYTE1(v49._object) = 0;
  WORD1(v49._object) = 0;
  HIDWORD(v49._object) = -402653184;
  v27 = (uint64_t *)(v1 + v8[6]);
  v28 = *v27;
  v29 = v27[1];
  swift_bridgeObjectRetain();
  v30 = Optional<A>.description.getter(v28, v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 2108450;
  v34._object = (void *)0xE300000000000000;
  String.append(_:)(v34);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "kind: \"");
  v49._object = (void *)0xE700000000000000;
  v48 = *(_BYTE *)(v1 + v8[7]);
  v35 = sub_100007E8C(&qword_1011BFD90);
  v36._countAndFlagsBits = String.init<A>(describing:)(&v48, v35);
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 2108450;
  v37._object = (void *)0xE300000000000000;
  String.append(_:)(v37);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "items: \"");
  BYTE1(v49._object) = 0;
  WORD1(v49._object) = 0;
  HIDWORD(v49._object) = -402653184;
  v38 = type metadata accessor for WidgetMusicItem(0);
  v39 = swift_bridgeObjectRetain();
  v40 = Array.description.getter(v39, v38);
  v42 = v41;
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = v40;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._countAndFlagsBits = 2108450;
  v44._object = (void *)0xE300000000000000;
  String.append(_:)(v44);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  return v50;
}

uint64_t sub_10064CE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = type metadata accessor for WidgetMusicItem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  sub_10004FACC((uint64_t)v7, qword_10124D508);
  v8 = sub_100048B14((uint64_t)v7, (uint64_t)qword_10124D508);
  static Date.now.getter(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "preferredLocalizations");

  v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);
  if (v11[2])
  {
    v12 = v11[4];
    v25 = v11[5];
    v26 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = 0;
    v26 = 0;
  }
  swift_bridgeObjectRelease();
  if (qword_10119C5F8 != -1)
    swift_once(&qword_10119C5F8, sub_1006BA73C);
  v13 = *(_QWORD *)algn_10124D708;
  v24 = qword_10124D700;
  v14 = qword_10119BFB0;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once(&qword_10119BFB0, sub_1004013C4);
  v15 = sub_100048B14(v0, (uint64_t)qword_10124CF50);
  sub_10005B704(v15, (uint64_t)v3, type metadata accessor for WidgetMusicItem);
  v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(8, v0);
  *(_QWORD *)(v16 + 16) = 8;
  v17 = v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10005B704((uint64_t)v3, v17, type metadata accessor for WidgetMusicItem);
  v18 = *(_QWORD *)(v1 + 72);
  sub_10005B704((uint64_t)v3, v17 + v18, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v3, v17 + 2 * v18, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v3, v17 + 3 * v18, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v3, v17 + 4 * v18, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v3, v17 + 5 * v18, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v3, v17 + 6 * v18, type metadata accessor for WidgetMusicItem);
  sub_10005B6C0((uint64_t)v3, v17 - v18 + 8 * v18, type metadata accessor for WidgetMusicItem);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v8, v6, v28);
  v20 = (_QWORD *)(v8 + v7[5]);
  v21 = v25;
  *v20 = v26;
  v20[1] = v21;
  v22 = (uint64_t *)(v8 + v7[6]);
  *v22 = v24;
  v22[1] = v13;
  *(_BYTE *)(v8 + v7[7]) = 5;
  *(_QWORD *)(v8 + v7[8]) = v16;
  return result;
}

uint64_t sub_10064D13C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011BFD48);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_10064F120();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v11, v9, v10);
  v32 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_100048748(&qword_1011B08C8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v32, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    v31 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v31, v5);
    v18 = (uint64_t *)(v3 + v14[6]);
    v19 = *v18;
    v20 = v18[1];
    v30 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v30, v5);
    v29 = *(_BYTE *)(v3 + v14[7]);
    v28 = 3;
    v21 = sub_10064F164();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v29, &v28, v5, &type metadata for WidgetMusicRecommendationKind, v21);
    v27 = *(_QWORD *)(v3 + v14[8]);
    v26 = 4;
    v22 = sub_100007E8C(&qword_1011BFD60);
    v23 = sub_10064F8BC(&qword_1011BFD68, &qword_1011B0698, (uint64_t)&unk_100EB9C90, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v26, v5, v22, v23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10064D378(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;

  v29 = a2;
  v30 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_100007E8C(&qword_1011BFD78);
  __chkstk_darwin(v32);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v11);
  v12 = sub_10064F120();
  v33 = v6;
  v13 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v12, v11, v10);
  if (v13)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v34 = a1;
    v14 = (uint64_t)v9;
    BYTE3(v38) = 0;
    v15 = sub_100048748(&qword_1011B08B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v16 = v30;
    v17 = v31;
    v18 = v32;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v31, v30, (char *)&v38 + 3, v32, v30, v15);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v14, v17, v16);
    BYTE2(v38) = 1;
    v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)((char *)&v38 + 2, v18);
    v20 = (uint64_t *)(v14 + v7[5]);
    *v20 = v19;
    v20[1] = v21;
    BYTE1(v38) = 2;
    v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)((char *)&v38 + 1, v18);
    v23 = (uint64_t *)(v14 + v7[6]);
    *v23 = v22;
    v23[1] = v24;
    v37 = 3;
    v25 = sub_10064F878();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v38, &type metadata for WidgetMusicRecommendationKind, &v37, v18, &type metadata for WidgetMusicRecommendationKind, v25);
    *(_BYTE *)(v14 + v7[7]) = v38;
    v26 = sub_100007E8C(&qword_1011BFD60);
    v36 = 4;
    v27 = sub_10064F8BC(&qword_1011BFD88, &qword_1011B0690, (uint64_t)&unk_100EB9CB8, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, v26, &v36, v18, v26, v27);
    MEMORY[8](v33, v18);
    *(_QWORD *)(v14 + v7[8]) = v35;
    sub_10005B704(v14, v29, type metadata accessor for WidgetMusicRecommendation);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v34);
    sub_10005B748(v14, type metadata accessor for WidgetMusicRecommendation);
  }
}

uint64_t sub_10064D738()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10064D76C + 4 * byte_100EC693A[*v0]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_10064D76C()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_10064D78C()
{
  return 0x656C746974;
}

uint64_t sub_10064D7A0()
{
  return 1684957547;
}

uint64_t sub_10064D7B0()
{
  return 0x736D657469;
}

uint64_t sub_10064D7C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10064FAE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10064D7E8(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10064D7F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10064F120();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10064D81C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10064F120();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10064D844(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10064D378(a1, a2);
}

uint64_t sub_10064D858(_QWORD *a1)
{
  return sub_10064D13C(a1);
}

uint64_t sub_10064D874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[4];
  char v72[9];

  v1 = type metadata accessor for WidgetDiskCache(0);
  v66 = *(_QWORD *)(v1 - 8);
  v2 = *(_QWORD *)(v66 + 64);
  __chkstk_darwin(v1);
  v65 = (uint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t *)&unk_1011A13B0;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - v8;
  v10 = sub_100007E8C(&qword_1011BFC80);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v62 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  v15 = type metadata accessor for WidgetRecommendationDiskCache(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v61 = v0 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache;
  v60 = v2 + 7;
  v58 = v9;
  v59 = (char *)&type metadata for () + 8;
  v56 = v17;
  v57 = v14;
  do
  {
    v67 = v18;
    v21 = *((_BYTE *)&off_1010ABBC8 + v18 + 32);
    sub_10005B704(v61, (uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
    v22 = type metadata accessor for WidgetMusicRecommendation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
    v72[0] = v21;
    v23 = String.init<A>(describing:)(v72, &type metadata for WidgetMusicRecommendationKind);
    v69 = v24;
    v70 = v23;
    static TaskPriority.userInitiated.getter(v25);
    v26 = type metadata accessor for TaskPriority(0);
    v68 = *(_QWORD *)(v26 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v9, 0, 1, v26);
    v27 = v65;
    sub_10005B704((uint64_t)v17, v65, type metadata accessor for WidgetDiskCache);
    v28 = v62;
    sub_10004A160((uint64_t)v14, v62, &qword_1011BFC80);
    v29 = *(unsigned __int8 *)(v66 + 80);
    v30 = (v29 + 32) & ~v29;
    v31 = v6;
    v32 = (v60 + v30) & 0xFFFFFFFFFFFFFFF8;
    v33 = *(unsigned __int8 *)(v64 + 80);
    v34 = v3;
    v35 = (v33 + v32 + 16) & ~v33;
    v36 = swift_allocObject(&unk_1010D4598, v35 + v63, v29 | v33 | 7);
    *(_QWORD *)(v36 + 16) = 0;
    v37 = (uint64_t *)(v36 + 16);
    *(_QWORD *)(v36 + 24) = 0;
    v38 = v27;
    v39 = v69;
    sub_10005B6C0(v38, v36 + v30, type metadata accessor for WidgetDiskCache);
    v40 = (uint64_t *)(v36 + v32);
    v6 = v31;
    v9 = v58;
    *v40 = v70;
    v40[1] = v39;
    v41 = v36 + v35;
    v3 = v34;
    v42 = v28;
    v43 = v68;
    sub_10064E9E0(v42, v41);
    sub_10004A160((uint64_t)v9, (uint64_t)v6, v34);
    LODWORD(v30) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v6, 1, v26);
    swift_bridgeObjectRetain();
    if ((_DWORD)v30 == 1)
    {
      sub_10004FF60((uint64_t)v6, v34);
      v45 = 0;
      v46 = *v37;
      if (*v37)
        goto LABEL_6;
    }
    else
    {
      v53 = TaskPriority.rawValue.getter(v44);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v26);
      v45 = v53;
      v46 = *v37;
      if (*v37)
      {
LABEL_6:
        v47 = *(_QWORD *)(v36 + 24);
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v46, v49);
        v50 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v47);
        v52 = v51;
        swift_unknownObjectRelease(v46);
        goto LABEL_9;
      }
    }
    v50 = 0;
    v52 = 0;
LABEL_9:
    v54 = swift_allocObject(&unk_1010D45C0, 32, 7);
    *(_QWORD *)(v54 + 16) = &unk_1011BFC88;
    *(_QWORD *)(v54 + 24) = v36;
    if (v52 | v50)
    {
      v71[0] = 0;
      v71[1] = 0;
      v19 = v71;
      v71[2] = v50;
      v71[3] = v52;
    }
    else
    {
      v19 = 0;
    }
    v17 = v56;
    v14 = v57;
    v18 = v67 + 1;
    swift_task_create(v45 | 0x1000, v19, v59, &unk_1011E89A0, v54);
    swift_release();
    sub_10004FF60((uint64_t)v9, v3);
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v14, &qword_1011BFC80);
    result = sub_10005B748((uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
  }
  while (v18 != 5);
  return result;
}

id sub_10064DCDC()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RecommendationsWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_10064DD18();
  qword_10124D520 = (uint64_t)result;
  return result;
}

id sub_10064DD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id result;
  void *v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10050FED8(0x6E656D6D6F636552, 0xEF736E6F69746164, (char *)(v1 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache));
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2, v6);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v7 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v8 = objc_msgSend(v7, "processName");

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v9 == 0x646957636973754DLL && v11 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, 0x646957636973754DLL, 0xEC00000073746567, 0);
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      return (id)v1;
  }
  if (qword_10119C4C0 != -1)
    swift_once(&qword_10119C4C0, sub_10064E7E0);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100048B14(v14, (uint64_t)qword_1011BFAF0);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "running in widget process, disabling fallback cache", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v20 = objc_msgSend(v19, "artworkDataSource");
  if (v20)
  {
    v21 = v20;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v22 = (void *)swift_dynamicCastObjCClass(v21);
    if (v22)
      objc_msgSend(v22, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v21);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v24 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10064E004()
{
  uint64_t v0;

  sub_10005B748(v0 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache, type metadata accessor for WidgetRecommendationDiskCache);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10064E03C()
{
  return type metadata accessor for RecommendationsWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecommendationsWidgetDataProvider(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BFB38, (uint64_t)&nominal type descriptor for RecommendationsWidgetDataProvider);
}

uint64_t sub_10064E058(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_10064E0C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;

  v4 = type metadata accessor for WidgetDiskCache(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_10119E460);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(v6 + 20);
    v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Logger(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_10064E1E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = type metadata accessor for WidgetDiskCache(0);

  v5 = a1 + *(int *)(v4 + 24);
  v6 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_10064E27C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C(&qword_10119E460);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)&a2[v8];
  *(_QWORD *)&a1[v8] = v9;
  v10 = *(int *)(v7 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Logger(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v9;
  v14(v11, v12, v13);
  return a1;
}

char *sub_10064E370(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_100007E8C(&qword_10119E460);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a2[v11];
  v13 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = v12;
  v14 = v12;

  v15 = *(int *)(v10 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *sub_10064E4B0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C(&qword_10119E460);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_10064E594(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_100007E8C(&qword_10119E460);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];

  v13 = *(int *)(v10 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_10064E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10064E6DC);
}

uint64_t sub_10064E6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10064E718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10064E724);
}

uint64_t sub_10064E724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetRecommendationDiskCache(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BFC48, (uint64_t)&nominal type descriptor for WidgetRecommendationDiskCache);
}

uint64_t sub_10064E778(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10064E7E0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011BFAF0);
  sub_100048B14(v0, (uint64_t)qword_1011BFAF0);
  return static Logger.music(_:)(0xD000000000000021, 0x8000000100EC6930);
}

uint64_t type metadata accessor for WidgetMusicRecommendation(uint64_t a1)
{
  return sub_100055934(a1, qword_1011BFCE8, (uint64_t)&nominal type descriptor for WidgetMusicRecommendation);
}

uint64_t sub_10064E854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011BFC80) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);

  v11 = v8 + *(int *)(v1 + 24);
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for WidgetMusicRecommendation(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v0 + v6, 1, v13))
  {
    v14 = type metadata accessor for Date(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v0 + v6, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_10064E9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011BFC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10064EA28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011BFC80) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_1011C815C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_100782C68(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_10064EB04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendationKind()
{
  return &type metadata for WidgetMusicRecommendationKind;
}

_QWORD *sub_10064EB3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v17 = *(_QWORD *)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t sub_10064EC04(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

uint64_t sub_10064EC68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_10064ED04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = a3[8];
  v18 = *(_QWORD *)(a2 + v17);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t sub_10064EDD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10064EE4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_10064EEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10064EEFC);
}

uint64_t sub_10064EEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10064EF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10064EF84);
}

uint64_t sub_10064EF84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_10064EFFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EC69E0;
    v4[2] = &unk_100EC69E0;
    v4[3] = &unk_100EC69F8;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10064F08C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BFD30;
  if (!qword_1011BFD30)
  {
    v1 = sub_100044B54(&qword_1011BFD38);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011BFD30);
  }
  return result;
}

unint64_t sub_10064F0DC()
{
  unint64_t result;

  result = qword_1011BFD40;
  if (!qword_1011BFD40)
  {
    result = swift_getWitnessTable(&unk_100EC6B88, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_1011BFD40);
  }
  return result;
}

unint64_t sub_10064F120()
{
  unint64_t result;

  result = qword_1011BFD50;
  if (!qword_1011BFD50)
  {
    result = swift_getWitnessTable(&unk_100EC6C9C, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011BFD50);
  }
  return result;
}

unint64_t sub_10064F164()
{
  unint64_t result;

  result = qword_1011BFD58;
  if (!qword_1011BFD58)
  {
    result = swift_getWitnessTable(&unk_100EC6A88, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_1011BFD58);
  }
  return result;
}

uint64_t sub_10064F1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v4);
  v61 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v58 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - v9;
  __chkstk_darwin(v11);
  v59 = (uint64_t)&v58 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - v20;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v58 - v24;
  v26 = static Date.== infix(_:_:)(a1, a2, v23);
  sub_10005B704(a1, (uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B704(a2, (uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  if ((v26 & 1) == 0)
  {
    sub_10005B748((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
LABEL_15:
    sub_10005B704(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B704(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_16;
  }
  v58 = v4;
  v27 = *(int *)(v4 + 20);
  v28 = &v25[v27];
  v29 = *(_QWORD *)&v25[v27 + 8];
  v30 = &v21[v27];
  v31 = *((_QWORD *)v30 + 1);
  if (!v29)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
    if (!v31)
    {
LABEL_23:
      sub_10005B704(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
      sub_10005B704(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_24;
    }
    goto LABEL_14;
  }
  if (!v31)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*(_QWORD *)v28 == *(_QWORD *)v30 && v29 == v31)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v28, v29, *(_QWORD *)v30, *((_QWORD *)v30 + 1), 0);
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B748((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease();
  sub_10005B704(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B704(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  if ((v33 & 1) == 0)
  {
LABEL_16:
    sub_10005B748((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_17;
  }
LABEL_24:
  v41 = v58;
  v42 = *(int *)(v58 + 24);
  v43 = &v18[v42];
  v44 = *(_QWORD *)&v18[v42 + 8];
  v45 = &v15[v42];
  v46 = *((_QWORD *)v45 + 1);
  if (!v44)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    if (!v46)
    {
LABEL_36:
      v34 = v59;
      sub_10005B704(a1, v59, type metadata accessor for WidgetMusicRecommendation);
      sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    v34 = v59;
    sub_10005B704(a1, v59, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_18;
  }
  if (!v46)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*(_QWORD *)v43 == *(_QWORD *)v45 && v44 == v46)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  v48 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v43, v44, *(_QWORD *)v45, *((_QWORD *)v45 + 1), 0);
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B748((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease();
  v34 = v59;
  sub_10005B704(a1, v59, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
  if ((v48 & 1) == 0)
    goto LABEL_18;
LABEL_37:
  v49 = *(int *)(v41 + 28);
  v50 = *(unsigned __int8 *)(v34 + v49);
  v51 = v10[v49];
  if (v50 == 5)
  {
    sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748(v34, type metadata accessor for WidgetMusicRecommendation);
    if (v51 == 5)
    {
      v52 = a1;
      v36 = v60;
      sub_10005B704(v52, v60, type metadata accessor for WidgetMusicRecommendation);
      v53 = a2;
      v38 = v61;
      sub_10005B704(v53, v61, type metadata accessor for WidgetMusicRecommendation);
LABEL_42:
      v39 = sub_1002EC1C0(*(_QWORD *)(v36 + *(int *)(v41 + 32)), *(_QWORD *)(v38 + *(int *)(v41 + 32)));
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v51 == 5)
  {
LABEL_18:
    sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    sub_10005B748(v34, type metadata accessor for WidgetMusicRecommendation);
LABEL_19:
    v35 = a1;
    v36 = v60;
    sub_10005B704(v35, v60, type metadata accessor for WidgetMusicRecommendation);
    v37 = a2;
    v38 = v61;
    sub_10005B704(v37, v61, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_20;
  }
  sub_1005D1FF8(v50);
  v55 = v54;
  sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B748(v34, type metadata accessor for WidgetMusicRecommendation);
  v56 = a1;
  v36 = v60;
  sub_10005B704(v56, v60, type metadata accessor for WidgetMusicRecommendation);
  v57 = a2;
  v38 = v61;
  sub_10005B704(v57, v61, type metadata accessor for WidgetMusicRecommendation);
  if ((v55 & 1) != 0)
    goto LABEL_42;
LABEL_20:
  v39 = 0;
LABEL_21:
  sub_10005B748(v36, type metadata accessor for WidgetMusicRecommendation);
  sub_10005B748(v38, type metadata accessor for WidgetMusicRecommendation);
  return v39 & 1;
}

unint64_t sub_10064F7EC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ACFA8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_10064F834()
{
  unint64_t result;

  result = qword_1011BFD70;
  if (!qword_1011BFD70)
  {
    result = swift_getWitnessTable(&unk_100EC6B10, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_1011BFD70);
  }
  return result;
}

unint64_t sub_10064F878()
{
  unint64_t result;

  result = qword_1011BFD80;
  if (!qword_1011BFD80)
  {
    result = swift_getWitnessTable(&unk_100EC6AB0, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_1011BFD80);
  }
  return result;
}

uint64_t sub_10064F8BC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100044B54(&qword_1011BFD60);
    sub_100048748(a2, type metadata accessor for WidgetMusicItem, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s5Music29WidgetMusicRecommendationKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10064F98C + 4 * byte_100EC6944[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10064F9C0 + 4 * byte_100EC693F[v4]))();
}

uint64_t sub_10064F9C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10064F9C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10064F9D0);
  return result;
}

uint64_t sub_10064F9DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10064F9E4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10064F9E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10064F9F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendation.CodingKeys()
{
  return &type metadata for WidgetMusicRecommendation.CodingKeys;
}

unint64_t sub_10064FA10()
{
  unint64_t result;

  result = qword_1011BFD98;
  if (!qword_1011BFD98)
  {
    result = swift_getWitnessTable(&unk_100EC6C74, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011BFD98);
  }
  return result;
}

unint64_t sub_10064FA58()
{
  unint64_t result;

  result = qword_1011BFDA0;
  if (!qword_1011BFDA0)
  {
    result = swift_getWitnessTable(&unk_100EC6BE4, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011BFDA0);
  }
  return result;
}

unint64_t sub_10064FAA0()
{
  unint64_t result;

  result = qword_1011BFDA8;
  if (!qword_1011BFDA8)
  {
    result = swift_getWitnessTable(&unk_100EC6C0C, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011BFDA8);
  }
  return result;
}

uint64_t sub_10064FAE4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446863746566, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974)
  {
    v7 = 0xEC0000006E6F6974;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684957547, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_10064FD04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  void *v43;
  uint64_t v44;
  Swift::String v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  __chkstk_darwin(v2);
  v62 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v4);
  v66 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Composer(0);
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  __chkstk_darwin(v6);
  v61 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Genre(0);
  v11 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v60 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TitledSection(0);
  v21 = type metadata accessor for Album(0);
  MusicLibrarySectionedRequest.init()(v20, v21, &protocol witness table for TitledSection, &protocol witness table for Album);
  v22 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)a1 + v22[6], (uint64_t)v15, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    KeyPath = swift_getKeyPath(&unk_100EC7108);
    v24 = sub_100007E8C(&qword_1011A38D8);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v19, v24);
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v25);
  }
  sub_10004A160((uint64_t)a1 + v22[8], (uint64_t)v10, &qword_10119ED08);
  v26 = v65;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v65);
  v29 = v67;
  v28 = v68;
  if (v27 == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_10119ED08);
  }
  else
  {
    v30 = v60;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v10, v26);
    v31 = swift_getKeyPath(&unk_100EC70E0);
    v32 = sub_100007E8C(&qword_1011A38D8);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v31, v30, v32);
    v33 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v30, v26, v33);
  }
  v34 = v66;
  sub_10004A160((uint64_t)a1 + v22[7], v66, (uint64_t *)&unk_1011C7310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    sub_10004FF60(v34, (uint64_t *)&unk_1011C7310);
  }
  else
  {
    v35 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v61, v34, v28);
    v36 = swift_getKeyPath(&unk_100EC70B8);
    v37 = sub_100007E8C(&qword_1011A38D8);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:contains:)(v36, v35, v37, &protocol witness table for Album);
    v38 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v35, v28, v38);
  }
  v39 = v22[17];
  if ((*((_BYTE *)a1 + v39) & 1) != 0)
  {
    v40 = swift_getKeyPath(&unk_100EC6F50);
    v69 = *((_BYTE *)a1 + v39);
    v41 = sub_100007E8C(&qword_1011A38D8);
    MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(v40, &v69, v41, &protocol witness table for Bool);
    swift_release();
  }
  v42 = (_QWORD *)((char *)a1 + v22[15]);
  v43 = (void *)v42[1];
  if (v43)
  {
    v44 = *v42;
    sub_100007E8C(&qword_1011A38D8);
    v45._countAndFlagsBits = v44;
    v45._object = v43;
    MusicLibrarySectionedRequest.filterItems(text:)(v45);
  }
  v46 = *((unsigned __int8 *)a1 + v22[13]);
  if (v46 != 2)
  {
    v47 = v46 & 1;
    v48 = swift_getKeyPath(&unk_100EC6F28);
    v49 = sub_100007E8C(&qword_1011A38D8);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v48, v47, v49);
    swift_release();
  }
  if (*((_BYTE *)a1 + v22[14]) == 1)
  {
    v50 = swift_getKeyPath(&unk_100EC6F00);
    v52 = v62;
    v51 = v63;
    v53 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, enum case for MusicFavoriteStatus.favorited(_:), v64);
    v54 = sub_100007E8C(&qword_1011A38D8);
    v55 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v50, v52, v54, &protocol witness table for Album, v55);
    v56 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v52, v53, v56);
  }
  v57 = *a1;
  swift_retain();
  v58 = sub_100007E8C(&qword_1011A38D8);
  MusicLibrarySectionedRequest.library.setter(v57, v58);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + v22[12]), v58);
}

uint64_t sub_1006502D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v61 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Composer(0);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6);
  v60 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Genre(0);
  v11 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v59 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = type metadata accessor for Track(0);
  MusicLibrarySectionedRequest.init()(v20, v21, &protocol witness table for Album, &protocol witness table for Track);
  v22 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)a1 + v22[6], (uint64_t)v15, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    KeyPath = swift_getKeyPath(&unk_100EC6FC8);
    v24 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v19, v24);
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v25);
  }
  sub_10004A160((uint64_t)a1 + v22[8], (uint64_t)v10, &qword_10119ED08);
  v26 = v64;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v64);
  v29 = v66;
  v28 = v67;
  if (v27 == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_10119ED08);
  }
  else
  {
    v30 = v59;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v59, v10, v26);
    v31 = swift_getKeyPath(&unk_100EC6FA0);
    v32 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v31, v30, v32);
    v33 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v30, v26, v33);
  }
  v34 = v65;
  sub_10004A160((uint64_t)a1 + v22[7], v65, (uint64_t *)&unk_1011C7310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    sub_10004FF60(v34, (uint64_t *)&unk_1011C7310);
  }
  else
  {
    v35 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v60, v34, v28);
    v36 = swift_getKeyPath(&unk_100EC6F78);
    v37 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:contains:)(v36, v35, v37, &protocol witness table for Track);
    v38 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v35, v28, v38);
  }
  v39 = (_QWORD *)((char *)a1 + v22[15]);
  v40 = v39[1];
  if (v40)
  {
    v41 = *v39;
    v42 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest.filterSections<>(text:)(v41, v40, v42, &protocol witness table for Album);
  }
  if ((*((_BYTE *)a1 + v22[17]) & 1) != 0)
  {
    v43 = swift_getKeyPath(&unk_100EC6F50);
    v68 = 1;
    v44 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)(v43, &v68, v44, &protocol witness table for Album, &protocol witness table for Bool);
    swift_release();
  }
  v45 = *((unsigned __int8 *)a1 + v22[13]);
  if (v45 != 2)
  {
    v46 = v45 & 1;
    v47 = swift_getKeyPath(&unk_100EC6F28);
    v48 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    MusicLibrarySectionedRequest.sortSections<A>(by:ascending:)(v47, v46, v48, &protocol witness table for Album);
    swift_release();
  }
  if (*((_BYTE *)a1 + v22[14]) == 1)
  {
    v49 = swift_getKeyPath(&unk_100EC6F00);
    v51 = v61;
    v50 = v62;
    v52 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, enum case for MusicFavoriteStatus.favorited(_:), v63);
    v53 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
    v54 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterSections<A>(matching:equalTo:)(v49, v51, v53, &protocol witness table for Album, v54);
    v55 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v51, v52, v55);
  }
  v56 = *a1;
  swift_retain();
  v57 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
  MusicLibrarySectionedRequest.library.setter(v56, v57);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + v22[12]), v57);
}

uint64_t sub_1006508B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  int v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TitledSection(0);
  v7 = type metadata accessor for Artist(0);
  MusicLibrarySectionedRequest.init()(v6, v7, &protocol witness table for TitledSection, &protocol witness table for Artist);
  v8 = (int *)type metadata accessor for Library.Context(0);
  v9 = (_QWORD *)((char *)a1 + v8[15]);
  v10 = (void *)v9[1];
  if (v10)
  {
    v11 = *v9;
    sub_100007E8C(&qword_1011A3B20);
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    MusicLibrarySectionedRequest.filterItems(text:)(v12);
  }
  v13 = *((unsigned __int8 *)a1 + v8[13]);
  if (v13 != 2)
  {
    v14 = v13 & 1;
    KeyPath = swift_getKeyPath(&unk_100EC7370);
    v16 = sub_100007E8C(&qword_1011A3B20);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, v14, v16);
    swift_release();
  }
  if (*((_BYTE *)a1 + v8[14]) == 1)
  {
    v17 = swift_getKeyPath(&unk_100EC7348);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicFavoriteStatus.favorited(_:), v2);
    v18 = sub_100007E8C(&qword_1011A3B20);
    v19 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v17, v5, v18, &protocol witness table for Artist, v19);
    v20 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v20);
  }
  v21 = *a1;
  swift_retain();
  v22 = sub_100007E8C(&qword_1011A3B20);
  MusicLibrarySectionedRequest.library.setter(v21, v22);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + v8[12]), v22);
}

uint64_t sub_100650ABC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for TitledSection(0);
  v3 = type metadata accessor for Composer(0);
  v4 = sub_100048748(&qword_1011A3B80, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  MusicLibrarySectionedRequest.init()(v2, v3, &protocol witness table for TitledSection, v4);
  v5 = type metadata accessor for Library.Context(0);
  v6 = (uint64_t *)((char *)a1 + *(int *)(v5 + 60));
  v7 = (void *)v6[1];
  if (v7)
  {
    v8 = *v6;
    sub_100007E8C(&qword_1011A3B78);
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    MusicLibrarySectionedRequest.filterItems(text:)(v9);
  }
  v10 = *a1;
  swift_retain();
  v11 = sub_100007E8C(&qword_1011A3B78);
  MusicLibrarySectionedRequest.library.setter(v10, v11);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + *(int *)(v5 + 48)), v11);
}

uint64_t sub_100650BB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for TitledSection(0);
  v3 = type metadata accessor for Genre(0);
  MusicLibrarySectionedRequest.init()(v2, v3, &protocol witness table for TitledSection, &protocol witness table for Genre);
  v4 = type metadata accessor for Library.Context(0);
  v5 = (uint64_t *)((char *)a1 + *(int *)(v4 + 60));
  v6 = (void *)v5[1];
  if (v6)
  {
    v7 = *v5;
    sub_100007E8C(&qword_1011A3BD0);
    v8._countAndFlagsBits = v7;
    v8._object = v6;
    MusicLibrarySectionedRequest.filterItems(text:)(v8);
  }
  v9 = *a1;
  swift_retain();
  v10 = sub_100007E8C(&qword_1011A3BD0);
  MusicLibrarySectionedRequest.library.setter(v9, v10);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + *(int *)(v4 + 48)), v10);
}

uint64_t sub_100650C88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100652008(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (unint64_t *)&qword_1011A3AC0, (uint64_t)&protocol conformance descriptor for MusicMovie, &qword_10119D2D0);
}

uint64_t sub_100650CAC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  Swift::String v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  __chkstk_darwin(v2);
  v60 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Genre(0);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6);
  v59 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artist(0);
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  __chkstk_darwin(v11);
  v58 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TitledSection(0);
  v21 = type metadata accessor for MusicVideo(0);
  MusicLibrarySectionedRequest.init()(v20, v21, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
  v22 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)a1 + v22[5], (uint64_t)v15, &qword_1011A8FA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_1011A8FA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    KeyPath = swift_getKeyPath(&unk_100EC7090);
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3840);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v19, v24);
    v25 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v25);
  }
  sub_10004A160((uint64_t)a1 + v22[6], (uint64_t)v10, (uint64_t *)&unk_1011A3FB0);
  v27 = v63;
  v26 = v64;
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v10, 1, v64);
  v29 = v66;
  if (v28 == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    v30 = v58;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v58, v10, v26);
    v31 = swift_getKeyPath(&unk_100EC7068);
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3840);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v31, v30, v32);
    v33 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v30, v26, v33);
  }
  v34 = v67;
  v35 = v65;
  sub_10004A160((uint64_t)a1 + v22[8], v65, &qword_10119ED08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v35, 1, v34) == 1)
  {
    sub_10004FF60(v35, &qword_10119ED08);
  }
  else
  {
    v36 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v59, v35, v34);
    v37 = swift_getKeyPath(&unk_100EC7040);
    v38 = sub_100007E8C((uint64_t *)&unk_1011A3840);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v37, v36, v38);
    v39 = swift_release(v37);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v36, v34, v39);
  }
  v40 = (_QWORD *)((char *)a1 + v22[15]);
  v41 = (void *)v40[1];
  if (v41)
  {
    v42 = *v40;
    sub_100007E8C((uint64_t *)&unk_1011A3840);
    v43._countAndFlagsBits = v42;
    v43._object = v41;
    MusicLibrarySectionedRequest.filterItems(text:)(v43);
  }
  v44 = *((unsigned __int8 *)a1 + v22[13]);
  if (v44 != 2)
  {
    v45 = v44 & 1;
    v46 = swift_getKeyPath(&unk_100EC7018);
    v47 = sub_100007E8C((uint64_t *)&unk_1011A3840);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v46, v45, v47);
    swift_release(v46);
  }
  if (*((_BYTE *)a1 + v22[14]) == 1)
  {
    v48 = swift_getKeyPath(&unk_100EC6FF0);
    v50 = v60;
    v49 = v61;
    v51 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for MusicFavoriteStatus.favorited(_:), v62);
    v52 = sub_100007E8C((uint64_t *)&unk_1011A3840);
    v53 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v48, v50, v52, &protocol witness table for MusicVideo, v53);
    v54 = swift_release(v48);
    (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v50, v51, v54);
  }
  v55 = *a1;
  swift_retain(*a1);
  v56 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  MusicLibrarySectionedRequest.library.setter(v55, v56);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + v22[12]), v56);
}

uint64_t sub_100651238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TitledSection(0);
  v7 = type metadata accessor for Playlist(0);
  MusicLibrarySectionedRequest.init()(v6, v7, &protocol witness table for TitledSection, &protocol witness table for Playlist);
  v8 = (int *)type metadata accessor for Library.Context(0);
  v9 = (uint64_t *)(a1 + v8[15]);
  v10 = (void *)v9[1];
  if (v10)
  {
    v11 = *v9;
    sub_100007E8C((uint64_t *)&unk_1011B5718);
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    MusicLibrarySectionedRequest.filterItems(text:)(v12);
  }
  KeyPath = swift_getKeyPath(&unk_100EC6DD8);
  v14 = *(_QWORD *)(a1 + v8[16]);
  v15 = sub_100007E8C((uint64_t *)&unk_1011B5718);
  v16 = sub_100048748(&qword_1011A19B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:memberOf:)(KeyPath, v14, v15, &protocol witness table for Playlist, v16);
  swift_release();
  v17 = *(unsigned __int8 *)(a1 + v8[13]);
  if (v17 != 2)
  {
    v18 = v17 & 1;
    v19 = swift_getKeyPath(&unk_100EC6E28);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v19, v18, v15);
    swift_release();
  }
  if (*(_BYTE *)(a1 + v8[14]) == 1)
  {
    v20 = swift_getKeyPath(&unk_100EC6E00);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicFavoriteStatus.favorited(_:), v2);
    v21 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v20, v5, v15, &protocol witness table for Playlist, v21);
    v22 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v22);
  }
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v23, v15);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(a1 + v8[12]), v15);
}

uint64_t sub_100651470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v7 = type metadata accessor for Playlist.Entry(0);
  MusicLibrarySectionedRequest.init()(v6, v7, &protocol witness table for Playlist, &protocol witness table for Playlist.Entry);
  KeyPath = swift_getKeyPath(&unk_100EC6DD8);
  v9 = (int *)type metadata accessor for Library.Context(0);
  v10 = *(_QWORD *)(a1 + v9[16]);
  v11 = sub_100007E8C(&qword_1011A19D0);
  v12 = sub_100048748(&qword_1011A19B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  MusicLibrarySectionedRequest<>.filterSections<A>(matching:memberOf:)(KeyPath, v10, v11, &protocol witness table for Playlist, v12);
  swift_release();
  v13 = (_QWORD *)(a1 + v9[15]);
  v14 = v13[1];
  if (v14)
    MusicLibrarySectionedRequest.filterSections<>(text:)(*v13, v14, v11, &protocol witness table for Playlist);
  if (*(_BYTE *)(a1 + v9[14]) == 1)
  {
    v15 = swift_getKeyPath(&unk_100EC6E00);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicFavoriteStatus.favorited(_:), v2);
    v16 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterSections<A>(matching:equalTo:)(v15, v5, v11, &protocol witness table for Playlist, v16);
    v17 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
  }
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v18, v11);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(a1 + v9[12]), v11);
}

uint64_t sub_100651668(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TitledSection(0);
  v3 = type metadata accessor for RecentlyAddedMusicItem(0);
  v4 = sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
  MusicLibrarySectionedRequest.init()(v2, v3, &protocol witness table for TitledSection, v4);
  v5 = *a1;
  swift_retain();
  v6 = sub_100007E8C(&qword_1011A3990);
  MusicLibrarySectionedRequest.library.setter(v5, v6);
  v7 = type metadata accessor for Library.Context(0);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + *(int *)(v7 + 48)), v6);
  return MusicLibrarySectionedRequest.limit.setter(60, v6);
}

uint64_t sub_10065172C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  Swift::String v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  __chkstk_darwin(v2);
  v60 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Genre(0);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6);
  v59 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artist(0);
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  __chkstk_darwin(v11);
  v58 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TitledSection(0);
  v21 = type metadata accessor for Song(0);
  MusicLibrarySectionedRequest.init()(v20, v21, &protocol witness table for TitledSection, &protocol witness table for Song);
  v22 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)a1 + v22[5], (uint64_t)v15, &qword_1011A8FA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_1011A8FA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    KeyPath = swift_getKeyPath(&unk_100EC71D0);
    v24 = sub_100007E8C(&qword_1011A3C78);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v19, v24);
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v25);
  }
  sub_10004A160((uint64_t)a1 + v22[6], (uint64_t)v10, (uint64_t *)&unk_1011A3FB0);
  v27 = v63;
  v26 = v64;
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v10, 1, v64);
  v29 = v66;
  if (v28 == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    v30 = v58;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v58, v10, v26);
    v31 = swift_getKeyPath(&unk_100EC71A8);
    v32 = sub_100007E8C(&qword_1011A3C78);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v31, v30, v32);
    v33 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v30, v26, v33);
  }
  v34 = v67;
  v35 = v65;
  sub_10004A160((uint64_t)a1 + v22[8], v65, &qword_10119ED08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v35, 1, v34) == 1)
  {
    sub_10004FF60(v35, &qword_10119ED08);
  }
  else
  {
    v36 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v59, v35, v34);
    v37 = swift_getKeyPath(&unk_100EC7180);
    v38 = sub_100007E8C(&qword_1011A3C78);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v37, v36, v38);
    v39 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v36, v34, v39);
  }
  v40 = (_QWORD *)((char *)a1 + v22[15]);
  v41 = (void *)v40[1];
  if (v41)
  {
    v42 = *v40;
    sub_100007E8C(&qword_1011A3C78);
    v43._countAndFlagsBits = v42;
    v43._object = v41;
    MusicLibrarySectionedRequest.filterItems(text:)(v43);
  }
  v44 = *((unsigned __int8 *)a1 + v22[13]);
  if (v44 != 2)
  {
    v45 = v44 & 1;
    v46 = swift_getKeyPath(&unk_100EC7158);
    v47 = sub_100007E8C(&qword_1011A3C78);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v46, v45, v47);
    swift_release();
  }
  if (*((_BYTE *)a1 + v22[14]) == 1)
  {
    v48 = swift_getKeyPath(&unk_100EC7130);
    v50 = v60;
    v49 = v61;
    v51 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for MusicFavoriteStatus.favorited(_:), v62);
    v52 = sub_100007E8C(&qword_1011A3C78);
    v53 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v48, v50, v52, &protocol witness table for Song, v53);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v50, v51, v54);
  }
  v55 = *a1;
  swift_retain();
  v56 = sub_100007E8C(&qword_1011A3C78);
  MusicLibrarySectionedRequest.library.setter(v55, v56);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + v22[12]), v56);
}

uint64_t sub_100651CB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int *v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;

  v31 = a1;
  v1 = sub_100007E8C((uint64_t *)&unk_1011C7320);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVSeason(0);
  v32 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011D1410);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TVShow(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TVEpisode(0);
  v14 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v15 = v31;
  v16 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  MusicLibrarySectionedRequest.init()(v4, v13, v14, v16);
  v17 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)v15 + v17[10], (uint64_t)v8, (uint64_t *)&unk_1011D1410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D1410);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    KeyPath = swift_getKeyPath(&unk_100EC6E78);
    v19 = sub_100007E8C(&qword_1011A03B0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v12, v19);
    v20 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  }
  sub_10004A160((uint64_t)v15 + v17[11], (uint64_t)v3, (uint64_t *)&unk_1011C7320);
  v21 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v3, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011C7320);
  }
  else
  {
    v22 = v30;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v30, v3, v4);
    v23 = swift_getKeyPath(&unk_100EC6E50);
    v24 = sub_100007E8C(&qword_1011A03B0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v23, v22, v24);
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v22, v4, v25);
  }
  v26 = *v15;
  swift_retain();
  v27 = sub_100007E8C(&qword_1011A03B0);
  MusicLibrarySectionedRequest.library.setter(v26, v27);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v15 + v17[12]), v27);
}

uint64_t sub_100651FE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100652008(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, &qword_10119FE58, (uint64_t)&protocol conformance descriptor for TVShow, (uint64_t *)&unk_1011A3A60);
}

uint64_t sub_100652008(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = type metadata accessor for TitledSection(0);
  v13 = a4(0);
  v14 = sub_100048748(a5, a4, a6);
  MusicLibrarySectionedRequest.init()(v12, v13, &protocol witness table for TitledSection, v14);
  v15 = *a1;
  swift_retain();
  v16 = sub_100007E8C(a7);
  MusicLibrarySectionedRequest.library.setter(v15, v16);
  v17 = type metadata accessor for Library.Context(0);
  return MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)a1 + *(int *)(v17 + 48)), v16);
}

void sub_1006520D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011BFDB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v3, a2, type metadata accessor for Library.Context);
  sub_10004A160(a1, (uint64_t)v8, &qword_1011BFDB0);
  v9 = _s15LegacyPlaylistsV5ScopeOMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) != 1)
  {
    v20 = (char *)&loc_1006522A8 + 4 * byte_100EC6CF0[swift_getEnumCaseMultiPayload(v8, v9)];
    __asm { BR              X10 }
  }
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACAF0);
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 + 5 * v13, v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EC06D0;
  v17 = v16 + v15;
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104);
  v18(v17, enum case for Playlist.Variant.regular(_:), v11);
  v18(v17 + v13, enum case for Playlist.Variant.smart(_:), v11);
  v18(v17 + 2 * v13, enum case for Playlist.Variant.genius(_:), v11);
  v18(v17 + 3 * v13, enum case for Playlist.Variant.subscribed(_:), v11);
  v18(v17 + 4 * v13, enum case for Playlist.Variant.personalMix(_:), v11);
  v19 = *(int *)(type metadata accessor for Library.Context(0) + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v19) = v16;
}

void sub_10065252C()
{
  uint64_t v0;

  sub_100652574(v0);
  JUMPOUT(0x100652184);
}

uint64_t _s15LegacyPlaylistsV5ScopeOMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011BFE28;
  if (!qword_1011BFE28)
    return swift_getSingletonMetadata(a1, &_s15LegacyPlaylistsV5ScopeOMn);
  return result;
}

uint64_t sub_100652574(uint64_t a1)
{
  uint64_t v2;

  v2 = _s15LegacyPlaylistsV5ScopeOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1006525B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Curator(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10065269C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for Curator(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_1006526F8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Playlist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Curator(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1006527BC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100652574((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Playlist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Curator(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_100652890(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Playlist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Curator(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100652954(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100652574((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Playlist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Curator(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100652A28(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Curator(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *_s15LegacyPlaylistsVMa()
{
  return &_s15LegacyPlaylistsVN;
}

ValueMetadata *_s16LegacyTVEpisodesVMa()
{
  return &_s16LegacyTVEpisodesVN;
}

uint64_t sub_100652AC8()
{
  return sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
}

uint64_t sub_100652AF4()
{
  return sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
}

char **sub_100652B20()
{
  return &protocol witness table for MusicLibrarySectionedRequest<A, B>;
}

unint64_t sub_100652B2C(uint64_t a1)
{
  unint64_t result;

  result = sub_100652B50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100652B50()
{
  unint64_t result;

  result = qword_1011BFEC0;
  if (!qword_1011BFEC0)
  {
    result = swift_getWitnessTable(&unk_100EC6D54, &_s16LegacyTVEpisodesVN);
    atomic_store(result, (unint64_t *)&qword_1011BFEC0);
  }
  return result;
}

void *sub_100652B94()
{
  return &protocol witness table for Playlist;
}

void sub_100652BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[3];
  uint64_t v15;

  v4 = type metadata accessor for Playlist(0);
  v14[1] = *(_QWORD *)(v4 - 8);
  v14[2] = v4;
  __chkstk_darwin(v4);
  v14[0] = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Curator(0);
  __chkstk_darwin(v15);
  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v8 = sub_100007E8C(&qword_1011BFF28);
  __chkstk_darwin(v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  sub_10005B704(a1, (uint64_t)v10, _s15LegacyPlaylistsV5ScopeOMa);
  sub_10005B704(a2, v12, _s15LegacyPlaylistsV5ScopeOMa);
  v13 = (char *)sub_100652D24 + 4 * byte_100EC6CF4[swift_getEnumCaseMultiPayload(v10, v6)];
  __asm { BR              X10 }
}

uint64_t sub_100652D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_10005B704(v0, v5, _s15LegacyPlaylistsV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v1, v4))
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v5, *(_QWORD *)(v6 - 88));
    sub_10004FF60(v0, &qword_1011BFF28);
    v7 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v6 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v1, v8);
    v7 = ((uint64_t (*)(uint64_t, uint64_t))static Curator.== infix(_:_:))(v5, v3);
    v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v9(v3, v8);
    v9(v5, v8);
    sub_100652574(v0);
  }
  return v7 & 1;
}

ValueMetadata *_s17LegacyMusicVideosVMa()
{
  return &_s17LegacyMusicVideosVN;
}

ValueMetadata *_s12LegacyAlbumsVMa()
{
  return &_s12LegacyAlbumsVN;
}

void *sub_100652ECC()
{
  return &protocol witness table for MusicVideo;
}

uint64_t sub_100652EF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoFilter.genres.getter);
}

uint64_t sub_100652F08(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoFilter.albums.getter);
}

uint64_t sub_100652F28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongFilter.genres.getter);
}

uint64_t sub_100652F34(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongFilter.artists.getter);
}

uint64_t sub_100652F40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongFilter.albums.getter);
}

ValueMetadata *_s13LegacyArtistsVMa()
{
  return &_s13LegacyArtistsVN;
}

ValueMetadata *_s15LegacyComposersVMa()
{
  return &_s15LegacyComposersVN;
}

ValueMetadata *_s12LegacyGenresVMa()
{
  return &_s12LegacyGenresVN;
}

ValueMetadata *_s19LegacyRecentlyAddedVMa()
{
  return &_s19LegacyRecentlyAddedVN;
}

ValueMetadata *_s11MusicMoviesVMa()
{
  return &_s11MusicMoviesVN;
}

ValueMetadata *_s13LegacyTVShowsVMa()
{
  return &_s13LegacyTVShowsVN;
}

ValueMetadata *_s11LegacySongsVMa()
{
  return &_s11LegacySongsVN;
}

void *sub_100652FBC()
{
  return &protocol witness table for Song;
}

unint64_t sub_100652FC8(uint64_t a1)
{
  unint64_t result;

  result = sub_100652FEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100652FEC()
{
  unint64_t result;

  result = qword_1011C00B0;
  if (!qword_1011C00B0)
  {
    result = swift_getWitnessTable(&unk_100EC727C, &_s13LegacyTVShowsVN);
    atomic_store(result, (unint64_t *)&qword_1011C00B0);
  }
  return result;
}

unint64_t sub_100653030(uint64_t a1)
{
  unint64_t result;

  result = sub_100653054();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100653054()
{
  unint64_t result;

  result = qword_1011C0118;
  if (!qword_1011C0118)
  {
    result = swift_getWitnessTable(&unk_100EC72B4, &_s11MusicMoviesVN);
    atomic_store(result, (unint64_t *)&qword_1011C0118);
  }
  return result;
}

void *sub_100653098()
{
  return &protocol witness table for Genre;
}

uint64_t sub_1006530AC()
{
  uint64_t v0;
  uint64_t result;

  v0 = _s11PreferencesCMa(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100653158();
  qword_10124D528 = result;
  return result;
}

uint64_t sub_1006530E8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EC7400);
  v2 = swift_getKeyPath(&unk_100EC7428);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100653158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char **v4;
  id v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD aBlock[6];
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences_selectedPlaylistsObserver;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences_selectedPlaylistsObserver) = 0;
  sub_1006538A4();
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "sharedInstance");
  v4 = &selRef_handleVolumeDownButton;
  v5 = objc_msgSend(v3, "selectedPlaylists");
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String);

  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v27 = v2;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10035C740(0, v7, 0);
    v8 = _swiftEmptyArrayStorage;
    v9 = v6 + 40;
    do
    {
      v10 = *(_QWORD *)(v9 - 8);
      swift_bridgeObjectRetain();
      v11 = MusicItemID.init(rawValue:)(v10);
      v13 = v12;
      aBlock[0] = v8;
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
      {
        sub_10035C740(v14 > 1, v15 + 1, 1);
        v8 = (_QWORD *)aBlock[0];
      }
      v9 += 16;
      v8[2] = v15 + 1;
      v16 = &v8[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v2 = v27;
    v4 = &selRef_handleVolumeDownButton;
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = _swiftEmptyArrayStorage;
  }
  v17 = sub_1006A1A8C((uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_beginAccess(v1 + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences__selectedPlaylists, aBlock, 33, 0);
  v29 = v17;
  v18 = sub_100007E8C((uint64_t *)&unk_1011C0250);
  Published.init(initialValue:)(&v29, v18);
  swift_endAccess(aBlock);
  v19 = v4[59];
  v20 = swift_allocObject(&unk_1010D4988, 24, 7);
  swift_weakInit(v20 + 16, v1);
  v21 = swift_allocObject(&unk_1010D49B0, 32, 7);
  *(_QWORD *)(v21 + 16) = v3;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_100653A24;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010D49C8;
  v22 = _Block_copy(aBlock);
  v23 = v3;
  v24 = objc_msgSend(v23, "observeUpdatesForSelector:handler:", v19, v22, swift_release().n128_f64[0]);

  _Block_release(v22);
  v25 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v24;
  swift_unknownObjectRelease(v25);
  return v1;
}

double sub_1006533F4(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  __n128 v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  _QWORD v34[3];
  _QWORD *v35;

  v2 = a2 + 16;
  v3 = objc_msgSend(a1, "selectedPlaylists");
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v35 = _swiftEmptyArrayStorage;
    sub_10035C740(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v7 = v4 + 40;
    do
    {
      v8 = *(_QWORD *)(v7 - 8);
      swift_bridgeObjectRetain();
      v9 = MusicItemID.init(rawValue:)(v8);
      v11 = v10;
      v35 = v6;
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_10035C740(v12 > 1, v13 + 1, 1);
        v6 = v35;
      }
      v7 += 16;
      v6[2] = v13 + 1;
      v14 = &v6[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = _swiftEmptyArrayStorage;
  }
  v15 = sub_1006A1A8C((uint64_t)v6);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v15 + 16))
  {
    if (qword_10119B870 != -1)
      swift_once(&qword_10119B870, sub_100065384);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048B14(v16, (uint64_t)qword_10124C6F0);
    v18 = Logger.logObject.getter(v17);
    v20 = static os_log_type_t.fault.getter(v19);
    if (os_log_type_enabled(v18, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v20, "Error: Playlist should not be empty", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  swift_beginAccess(v2, &v35, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v23 = Strong;
    KeyPath = swift_getKeyPath(&unk_100EC7400);
    v25 = swift_getKeyPath(&unk_100EC7428);
    static Published.subscript.getter(v34, v23, KeyPath, v25);
    swift_release();
    swift_release();
    swift_release();
    v26 = v34[0];
    swift_bridgeObjectRetain();
    v27 = swift_bridgeObjectRetain();
    LOBYTE(KeyPath) = sub_10016D7D0(v27, v15);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_bridgeObjectRelease();
    if ((KeyPath & 1) != 0)
      goto LABEL_18;
  }
  swift_beginAccess(v2, v34, 0, 0);
  v28 = swift_weakLoadStrong(v2);
  if (!v28)
  {
LABEL_18:
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v29 = v28;
    v30 = swift_getKeyPath(&unk_100EC7400);
    v31 = swift_getKeyPath(&unk_100EC7428);
    v33 = v15;
    static Published.subscript.setter(&v33, v29, v30, v31);
  }
  return result;
}

uint64_t sub_1006536F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences__selectedPlaylists;
  v2 = sub_100007E8C(&qword_1011C0328);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences_selectedPlaylistsObserver));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100653758()
{
  return _s11PreferencesCMa(0);
}

uint64_t _s11PreferencesCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C0238;
  if (!qword_1011C0238)
    return swift_getSingletonMetadata(a1, &_s11PreferencesCMn);
  return result;
}

void sub_10065379C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100653810(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_100653810(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C0248)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011C0250);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C0248);
  }
}

uint64_t sub_100653868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s11PreferencesCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

unint64_t sub_1006538A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0320;
  if (!qword_1011C0320)
  {
    v1 = objc_opt_self(CLFMusicSettings);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011C0320);
  }
  return result;
}

uint64_t sub_1006538E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EC7400);
  v5 = swift_getKeyPath(&unk_100EC7428);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10065395C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EC7400);
  v5 = swift_getKeyPath(&unk_100EC7428);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1006539D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006539F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100653A24()
{
  uint64_t v0;

  return sub_1006533F4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100653A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100653A3C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_100653A4C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks] = _swiftEmptyArrayStorage;
  v12 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  v13 = type metadata accessor for PickerDataSource(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = v4;
  *(_QWORD *)&v4[v12] = sub_100654170();

  v36.receiver = v14;
  v36.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  v16 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  v17 = sub_100048748(&qword_1011C04F8, type metadata accessor for PickerDataSource, (uint64_t)&unk_100EC74A0);
  v18 = v15;
  swift_retain();
  v34 = ObservedObject.init(wrappedValue:)(v19, v13, v17);
  v35 = v20;
  v21 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011C0500));
  v22 = (void *)_UIHostingView.init(rootView:)(&v34);
  objc_msgSend(v18, "addSubview:", v22, v34, v35);

  v23 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  v24 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler + 8];
  v25 = (uint64_t *)(*(_QWORD *)&v15[v16]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  v26 = *v25;
  v27 = v25[1];
  *v25 = v23;
  v25[1] = v24;
  sub_100048AAC(v23, v24);
  sub_10004BA30(v26, v27);
  v28 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  v29 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler + 8];
  v30 = (uint64_t *)(*(_QWORD *)&v15[v16]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  v31 = *v30;
  v32 = v30[1];
  *v30 = v28;
  v30[1] = v29;
  sub_100048AAC(v28, v29);
  sub_10004BA30(v31, v32);
  return v18;
}

uint64_t type metadata accessor for MusicPickerSheetContainerView()
{
  return objc_opt_self(_TtC5Music29MusicPickerSheetContainerView);
}

uint64_t sub_100653DB0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EC7520);
  v2 = swift_getKeyPath(&unk_100EC7548);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100653E20()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EC74D8);
  v2 = swift_getKeyPath(&unk_100EC7500);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100653E90(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void (*v8)(__n128);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  KeyPath = swift_getKeyPath(&unk_100EC74D8);
  v4 = swift_getKeyPath(&unk_100EC7500);
  BYTE1(v13) = a1;
  swift_retain();
  static Published.subscript.setter((char *)&v13 + 1, v1, KeyPath, v4);
  v5 = swift_getKeyPath(&unk_100EC74D8);
  v6 = swift_getKeyPath(&unk_100EC7500);
  static Published.subscript.getter(&v13, v1, v5, v6);
  swift_release();
  swift_release();
  if ((v13 & 1) == 0)
  {
    v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    v8 = *(void (**)(__n128))(v1
                                       + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    if (v8)
    {
      v9 = v7[1];
      v10 = swift_retain();
      v8(v10);
      sub_10004BA30((uint64_t)v8, v9);
      v11 = *v7;
    }
    else
    {
      v11 = 0;
    }
    v12 = v7[1];
    *v7 = 0;
    v7[1] = 0;
    sub_10004BA30(v11, v12);
  }
}

uint64_t sub_100653F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__sourceTracks;
  v2 = sub_100007E8C(&qword_1011C6650);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__isPresentingPicker;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler + 8));
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100654040()
{
  return type metadata accessor for PickerDataSource(0);
}

uint64_t type metadata accessor for PickerDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C03C0;
  if (!qword_1011C03C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PickerDataSource);
  return result;
}

void sub_100654084(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100654118(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100069338();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100EC7488;
      v6[3] = &unk_100EC7488;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_100654118(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C03D0)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011B8ED0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C03D0);
  }
}

uint64_t sub_100654170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _BYTE v15[7];
  char v16;
  _QWORD *v17;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011C6650);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__sourceTracks;
  v17 = _swiftEmptyArrayStorage;
  v10 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
  Published.init(initialValue:)(&v17, v10);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v11 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__isPresentingPicker;
  v16 = 0;
  Published.init(initialValue:)(&v16, &type metadata for Bool);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v11, v4, v1);
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  *v12 = 0;
  v12[1] = 0;
  v13 = (_QWORD *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  *v13 = 0;
  v13[1] = 0;
  return v0;
}

uint64_t sub_1006542C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for PickerDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100654300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[2];
  unsigned __int8 v35;

  v32 = a3;
  v5 = sub_100007E8C(&qword_1011C6610);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PickerDataSource(0);
  v9 = sub_100048748(&qword_1011C04F8, type metadata accessor for PickerDataSource, (uint64_t)&unk_100EC74A0);
  v10 = ObservedObject.projectedValue.getter(a1, a2, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100EC74D8);
  ObservedObject.Wrapper.subscript.getter(v34, KeyPath, v10, v9);
  swift_release();
  swift_release();
  v12 = v34[1];
  v31 = v34[0];
  v30 = v35;
  v13 = ObservedObject.projectedValue.getter(a1, a2, v8, v9);
  v14 = swift_getKeyPath(&unk_100EC7520);
  ObservedObject.Wrapper.subscript.getter(v33, v14, v13, v9);
  swift_release();
  swift_release();
  v15 = v33[0];
  v16 = v33[1];
  v17 = v33[2];
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v18 = (*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 680))();
  v19.n128_f64[0] = MusicPicker.Reason.PlaybackSessionAttributes.init(isCollaborative:)(v18 & 1);
  v20 = enum case for MusicPicker.Reason.playbackQueue(_:);
  v21 = type metadata accessor for MusicPicker.Reason(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v7, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v7, 0, 1, v21);
  v23 = swift_allocObject(&unk_1010D4AD0, 32, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  swift_retain();
  v24 = sub_100007E8C((uint64_t *)&unk_1011C6630);
  v25 = type metadata accessor for Track(0);
  v26 = sub_100054EF4();
  v27 = sub_100048748((unint64_t *)&unk_1011C6640, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
  View.musicPicker<A>(isPresented:selection:reason:onCompletion:)(v31, v12, v30, v15, v16, v17, v7, &unk_1011C0510, v23, v24, v25, v26, v27);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_100654CE8((uint64_t)v7);
}

uint64_t sub_1006545C8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EC74D8);
  v5 = swift_getKeyPath(&unk_100EC7500);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

void sub_100654648(char *a1)
{
  sub_100653E90(*a1);
}

uint64_t sub_10065466C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EC7520);
  v5 = swift_getKeyPath(&unk_100EC7548);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1006546EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EC7520);
  v5 = swift_getKeyPath(&unk_100EC7548);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100654768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v3[3] = a1;
  v3[4] = a3;
  v4 = sub_100007E8C(&qword_1011A9A00);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v3[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006547F8, v7, v8);
}

uint64_t sub_1006547F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(void *, __n128);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 24);
    sub_1000E3E80();
    *(_QWORD *)(v0 + 16) = v3;
    v4 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
    swift_bridgeObjectRetain();
    v5 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
    v6 = sub_100654D28();
    v7 = (void *)MPCPlaybackIntent.init<A, B>(for:startingAt:)(v0 + 16, v2, v5, v4, v6, &protocol witness table for Track);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v8 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
    v9 = v8;
    if (v8)

    v10 = *(_QWORD *)(v0 + 32);
    MPCPlaybackIntent.isInGroupSession.setter(v9 != 0);
    v11 = (uint64_t *)(v10
                    + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
    v12 = *(void (**)(void *, __n128))(v10
                                                + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
    if (v12)
    {
      v13 = v11[1];
      v14 = swift_retain();
      v12(v7, v14);

      sub_10004BA30((uint64_t)v12, v13);
    }
    else
    {

    }
    v15 = *(_QWORD *)(v0 + 32);
    v16 = *v11;
    v17 = v11[1];
    *v11 = 0;
    v11[1] = 0;
    sub_10004BA30(v16, v17);
    v18 = (_QWORD *)(v15 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    v19 = *(_QWORD *)(v15 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    v20 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler
                    + 8);
    *v18 = 0;
    v18[1] = 0;
    sub_10004BA30(v19, v20);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006549AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100654300(*v1, v1[1], a1);
}

void sub_1006549B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;

  type metadata accessor for MusicPickerSheetContainerView();
  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v9 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks;
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks];
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource];
  v13 = *(_QWORD *)&v8[v9];
  KeyPath = swift_getKeyPath(&unk_100EC7520);
  v15 = swift_getKeyPath(&unk_100EC7548);
  v36 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  static Published.subscript.setter(&v36, v12, KeyPath, v15);
  v16 = (uint64_t *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  v17 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  v18 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler + 8];
  *v16 = a3;
  v16[1] = a4;
  swift_retain_n(a4, 2);
  sub_10004BA30(v17, v18);
  v19 = *v16;
  v20 = v16[1];
  v21 = (uint64_t *)(*(_QWORD *)&v8[v11]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  v22 = *v21;
  v23 = v21[1];
  *v21 = *v16;
  v21[1] = v20;
  sub_100048AAC(v19, v20);
  sub_10004BA30(v22, v23);
  swift_release();
  v24 = (_QWORD *)swift_allocObject(&unk_1010D4A28, 40, 7);
  v24[2] = v8;
  v24[3] = a3;
  v24[4] = a4;
  v25 = (uint64_t *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  v26 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  v27 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler + 8];
  *v25 = (uint64_t)sub_100654C10;
  v25[1] = (uint64_t)v24;
  swift_retain();
  v28 = v8;
  swift_retain();
  sub_10004BA30(v26, v27);
  v29 = *v25;
  v30 = v25[1];
  v31 = (uint64_t *)(*(_QWORD *)&v8[v11]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  v32 = *v31;
  v33 = v31[1];
  *v31 = *v25;
  v31[1] = v30;
  sub_100048AAC(v29, v30);
  sub_10004BA30(v32, v33);
  v34 = objc_msgSend(a1, "view", swift_release().n128_f64[0]);
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v34, "addSubview:", v28);

    swift_retain();
    sub_100653E90(1);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100654BE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100654C10()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  v1 = *(uint64_t (**)(_QWORD))(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "removeFromSuperview");
  return v1(0);
}

ValueMetadata *type metadata accessor for MediaPickerWrapper()
{
  return &type metadata for MediaPickerWrapper;
}

uint64_t sub_100654C54(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8484, 1);
}

uint64_t sub_100654C64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100654C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011C050C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return sub_100654768(a1, v5, v4);
}

uint64_t sub_100654CE8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011C6610);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100654D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B69F0;
  if (!qword_1011B69F0)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011B8ED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011B69F0);
  }
  return result;
}

uint64_t sub_100654D74()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54((uint64_t *)&unk_1011C6630);
  v1[1] = type metadata accessor for Track(255);
  v1[2] = sub_100054EF4();
  v1[3] = sub_100048748((unint64_t *)&unk_1011C6640, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.musicPicker<A>(isPresented:selection:reason:onCompletion:)>>, 1);
}

uint64_t sub_100654DFC()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_1004EABA4();
  EnvironmentValues.subscript.getter(&var1, &_s25PromotionalLayoutStyleKeyVN, &_s25PromotionalLayoutStyleKeyVN, v0);
  return var1;
}

ValueMetadata *_s25PromotionalLayoutStyleKeyVMa()
{
  return &_s25PromotionalLayoutStyleKeyVN;
}

void sub_100654E44(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(a3 + 32) = swift_getKeyPath(&unk_100EC7690);
  *(_BYTE *)(a3 + 40) = 0;
  v6 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v7 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)(a3 + 48) = EnvironmentObject.init()(v6, v7);
  *(_QWORD *)(a3 + 56) = v8;
  v9 = type metadata accessor for NoticePresenter(0);
  v10 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)(a3 + 64) = EnvironmentObject.init()(v9, v10);
  *(_QWORD *)(a3 + 72) = v11;
  *(_QWORD *)(a3 + 80) = sub_1000DEC04;
  *(_QWORD *)(a3 + 88) = 0;
  *(_BYTE *)(a3 + 96) = 0;
  v12 = type metadata accessor for NavigationPusher();
  v13 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)(a3 + 104) = EnvironmentObject.init()(v12, v13);
  *(_QWORD *)(a3 + 112) = v14;
  v15 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v16 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)(a3 + 120) = EnvironmentObject.init()(v15, v16);
  *(_QWORD *)(a3 + 128) = v17;
  v18 = type metadata accessor for TabSelectionManager(0);
  v19 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)(a3 + 136) = EnvironmentObject.init()(v18, v19);
  *(_QWORD *)(a3 + 144) = v20;
  *(_QWORD *)(a3 + 152) = swift_getKeyPath(&unk_100EC76B8);
  *(_QWORD *)(a3 + 160) = 0;
  *(_BYTE *)(a3 + 168) = 0;
  *(_QWORD *)(a3 + 176) = swift_getKeyPath(&unk_100EC76E0);
  *(_QWORD *)(a3 + 184) = 0;
  *(_BYTE *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = swift_getKeyPath(&unk_100EC7708);
  *(_BYTE *)(a3 + 208) = 0;
  v21 = (_QWORD *)(a3 + *(int *)(type metadata accessor for CatalogStack(0) + 64));
  *v21 = swift_getKeyPath(&unk_100EC7730);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v23 = type metadata accessor for JSHeaderItem(0);
  v24 = sub_100048748((unint64_t *)&qword_1011A7978, type metadata accessor for JSHeaderItem, (uint64_t)&protocol conformance descriptor for JSHeaderItem);
  v25 = a1;
  *(_QWORD *)a3 = ObservedObject.init(wrappedValue:)(v25, v23, v24);
  *(_QWORD *)(a3 + 8) = v26;
  v27 = type metadata accessor for JSVerticalStack(0);
  v28 = sub_100048748(&qword_1011C0550, type metadata accessor for JSVerticalStack, (uint64_t)&protocol conformance descriptor for JSVerticalStack);
  v29 = ObservedObject.init(wrappedValue:)(a2, v27, v28);
  v31 = v30;

  *(_QWORD *)(a3 + 16) = v29;
  *(_QWORD *)(a3 + 24) = v31;
}

uint64_t sub_1006550C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v3 = v2;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v39 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v17);
  v40 = (uint64_t)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v39 - v21;
  v23 = (*(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0x250))(v20);
  v42 = a2;
  if (v23)
  {
    v24 = (void *)v23;
    static Artwork.CropStyle.specificRectangle.getter(v23);
    sub_100882874((uint64_t)v16, (uint64_t)v22);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  }
  sub_10004A160(a1, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v26 = type metadata accessor for ArtworkImage.ViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v28((uint64_t)v22, 1, v26) == 1)
  {
    v29 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x220))();
    if (v29)
    {
      v30 = (void *)v29;
      static Artwork.CropStyle.specificRectangle.getter(v29);
      v31 = v40;
      sub_100882874((uint64_t)v16, v40);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      v31 = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v40, 1, 1, v26);
    }
    v34 = (uint64_t)v41;
    v35 = v39;
    sub_10004A160((uint64_t)v12, v39, (uint64_t *)&unk_1011A20D0);
    if (v28(v31, 1, v26) == 1)
    {
      sub_10004A160(v35, v34, (uint64_t *)&unk_1011A20D0);
      v36 = type metadata accessor for GenericMusicItem(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36) == 1)
      {
        sub_10004FF60(v35, (uint64_t *)&unk_1011A20D0);
        sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
        sub_10004FF60(v34, (uint64_t *)&unk_1011A20D0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v42, 1, 1, v26);
      }
      else
      {
        GenericMusicItem.artworkViewModel.getter(v42);
        sub_10004FF60(v35, (uint64_t *)&unk_1011A20D0);
        sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v36);
      }
      sub_10004FF60(v31, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      sub_10004FF60(v35, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
      v38 = v42;
      sub_10005B6C0(v31, (uint64_t)v42, type metadata accessor for ArtworkImage.ViewModel);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v38, 0, 1, v26);
    }
    return sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
    v32 = v42;
    sub_10005B6C0((uint64_t)v22, (uint64_t)v42, type metadata accessor for ArtworkImage.ViewModel);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v32, 0, 1, v26);
  }
}

double sub_1006554EC@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  const mach_header_64 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  const mach_header_64 *v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  int v102;
  id v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  void *v120;
  uint64_t v121;
  id v122;
  void *v123;
  unint64_t v124;
  unint64_t v125;
  id v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  __int16 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  int v183;
  id v184;
  uint64_t v185;
  void *v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  unint64_t v209;
  unint64_t v210;
  id v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  __int128 v226;
  id v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  __int16 v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  __int128 v241;
  __int128 v242;
  uint64_t v243;
  char v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  uint64_t v251;
  void *v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  double result;
  __int128 v274;
  __int128 v275;
  int v276;
  char v277;
  int v278;
  char v279;
  char v280;
  unsigned int v281;
  uint64_t v282;
  uint64_t v283;
  __int128 v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  id v291;
  id v292;
  id v293;
  id v294;
  __int128 v295;
  __int128 KeyPath;
  _BYTE v297[20];
  char v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  int v302;
  char v303;

  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      v292 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      sub_1006AACD0((uint64_t)&v299);
      v278 = (unsigned __int16)v301 | (BYTE2(v301) << 16);
      v280 = BYTE3(v301);
      if (BYTE3(v301))
        v3 = 0x1000000;
      else
        v3 = 0;
      v287 = (void *)*((_QWORD *)&v299 + 1);
      v289 = v299;
      v295 = v299;
      v282 = *((_QWORD *)&v300 + 1);
      v285 = v300;
      KeyPath = v300;
      *(_DWORD *)v297 = v3 | (unsigned __int16)v301 | (BYTE2(v301) << 16);
      v297[4] = 0;
      sub_1001547DC(v299, *((void **)&v299 + 1), v300, *((uint64_t *)&v300 + 1), (unsigned __int16)v301 | (BYTE2(v301) << 16), SBYTE3(v301));
      v4 = sub_100007E8C(&qword_1011AA088);
      v5 = sub_100007E8C(&qword_1011AA178);
      v6 = sub_1002BD5FC();
      v7 = sub_100049F28(&qword_1011AA170, &qword_1011AA178, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v4, v5, v6, v7);
      v8 = &_mh_execute_header;
      if (!BYTE4(v301))
        BYTE4(v8) = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = BYTE4(v8);
      *(_DWORD *)v297 = v301;
      v9 = sub_100007E8C(&qword_1011AA078);
      v10 = sub_100007E8C(&qword_1011AA188);
      v11 = sub_1002BD578();
      v12 = sub_1002BD940();
      _ConditionalContent<>.init(storage:)(&v295, v9, v10, v11, v12);
      v13 = 0x10000000000;
      if (!BYTE5(v301))
        v13 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_DWORD *)v297 = v301;
      *(_WORD *)&v297[4] = (v13 | ((unint64_t)BYTE4(v301) << 32)) >> 32;
      v297[6] = 0;
      v14 = sub_100007E8C(&qword_1011AA068);
      v15 = sub_100007E8C(&qword_1011AA278);
      v16 = sub_1002BD554();
      v17 = sub_1002BDC9C();
      _ConditionalContent<>.init(storage:)(&v295, v14, v15, v16, v17);
      v18 = v299;
      v19 = v300;
      v20 = v301 | ((unint64_t)WORD2(v301) << 32);
      v21 = BYTE6(v301);
      v22 = 0x1000000000000;
      if (!BYTE6(v301))
        v22 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = (unint64_t)v22 | (unsigned __int128)v20;
      *(_DWORD *)&v297[16] = 0;
      v298 = 0;
      sub_10065F9AC(v299, *((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301 | ((unint64_t)WORD2(v301) << 32), SBYTE6(v301), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_100154790, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10015486C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100154950);
      v23 = sub_100007E8C(&qword_1011AA058);
      v24 = sub_100007E8C(&qword_1011AA2D8);
      v25 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v26 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v23, v24, v25, v26);

      sub_10065F9AC(v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1002BD158, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1002BD234, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1002BD318);
      sub_1002BD1A4(v289, v287, v285, v282, v278, v280);
      break;
    case 2uLL:
      v27 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v28 = sub_1008142A0(v27);
      v30 = v29;
      v32 = v31;
      v34 = v33;

      *(_QWORD *)&v295 = v28;
      *((_QWORD *)&v295 + 1) = v30;
      *(_QWORD *)&KeyPath = v32;
      *((_QWORD *)&KeyPath + 1) = v34;
      *(_DWORD *)v297 = 0;
      v297[4] = 1;
      swift_retain();
      v35 = v30;
      swift_retain();
      v36 = sub_100007E8C(&qword_1011AA088);
      v37 = sub_100007E8C(&qword_1011AA178);
      v38 = sub_1002BD5FC();
      v39 = sub_100049F28(&qword_1011AA170, &qword_1011AA178, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v36, v37, v38, v39);
      v40 = &_mh_execute_header;
      if (!BYTE4(v301))
        BYTE4(v40) = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = BYTE4(v40);
      *(_DWORD *)v297 = v301;
      goto LABEL_18;
    case 3uLL:
      v41 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v42 = sub_100812F40(v41);
      v44 = v43;
      v46 = v45;
      v48 = v47;

      *(_QWORD *)&v295 = v42;
      *((_QWORD *)&v295 + 1) = v44;
      *(_QWORD *)&KeyPath = v46;
      *((_QWORD *)&KeyPath + 1) = v48;
      *(_DWORD *)v297 = 0;
      swift_retain();
      v35 = v44;
      swift_retain();
      v49 = sub_100007E8C(&qword_1011A7908);
      v50 = sub_100007E8C(&qword_1011AA198);
      v51 = sub_100049F28(&qword_1011A7900, &qword_1011A7908, (uint64_t)&unk_100ED58E0);
      v52 = sub_10015FD08(&qword_1011AA190, &qword_1011AA198, (void (*)(void))sub_1002BD9E4, (void (*)(void))sub_1002BDB30);
      _ConditionalContent<>.init(storage:)(&v295, v49, v50, v51, v52);
      v53 = 0x1000000;
      if (!BYTE3(v301))
        v53 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = 256;
      *(_DWORD *)v297 = v53 | (unsigned __int16)v301 | (BYTE2(v301) << 16);
LABEL_18:
      v54 = sub_100007E8C(&qword_1011AA078);
      v55 = sub_100007E8C(&qword_1011AA188);
      v56 = sub_1002BD578();
      v57 = sub_1002BD940();
      _ConditionalContent<>.init(storage:)(&v295, v54, v55, v56, v57);
      v58 = 0x10000000000;
      if (!BYTE5(v301))
        v58 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_DWORD *)v297 = v301;
      *(_WORD *)&v297[4] = (v58 | ((unint64_t)BYTE4(v301) << 32)) >> 32;
      v297[6] = 0;
      goto LABEL_77;
    case 4uLL:
      v293 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      sub_1004F05C0((uint64_t)&v299);
      v288 = *((_QWORD *)&v299 + 1);
      v290 = v299;
      v283 = *((_QWORD *)&v300 + 1);
      v286 = v300;
      v279 = BYTE2(v301);
      v281 = (unsigned __int16)v301;
      v295 = v299;
      KeyPath = v300;
      v297[2] = BYTE2(v301) != 0;
      *(_WORD *)v297 = v301;
      v297[3] = 1;
      sub_10065F9F0(v299, *((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), (unsigned __int16)v301, SBYTE2(v301), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100154900, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100154950);
      v59 = sub_100007E8C(&qword_1011A7908);
      v60 = sub_100007E8C(&qword_1011AA198);
      v61 = sub_100049F28(&qword_1011A7900, &qword_1011A7908, (uint64_t)&unk_100ED58E0);
      v62 = sub_10015FD08(&qword_1011AA190, &qword_1011AA198, (void (*)(void))sub_1002BD9E4, (void (*)(void))sub_1002BDB30);
      _ConditionalContent<>.init(storage:)(&v295, v59, v60, v61, v62);
      v63 = 0x1000000;
      if (!BYTE3(v301))
        v63 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = 256;
      *(_DWORD *)v297 = v63 | (unsigned __int16)v301 | (BYTE2(v301) << 16);
      v64 = sub_100007E8C(&qword_1011AA078);
      v65 = sub_100007E8C(&qword_1011AA188);
      v66 = sub_1002BD578();
      v67 = sub_1002BD940();
      _ConditionalContent<>.init(storage:)(&v295, v64, v65, v66, v67);
      v68 = 0x10000000000;
      if (!BYTE5(v301))
        v68 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_DWORD *)v297 = v301;
      *(_WORD *)&v297[4] = (v68 | ((unint64_t)BYTE4(v301) << 32)) >> 32;
      v297[6] = 0;
      v69 = sub_100007E8C(&qword_1011AA068);
      v70 = sub_100007E8C(&qword_1011AA278);
      v71 = sub_1002BD554();
      v72 = sub_1002BDC9C();
      _ConditionalContent<>.init(storage:)(&v295, v69, v70, v71, v72);
      v73 = v299;
      v74 = v300;
      v75 = v301 | ((unint64_t)WORD2(v301) << 32);
      v76 = BYTE6(v301);
      v77 = 0x1000000000000;
      if (!BYTE6(v301))
        v77 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v77 | v75;
      *(_DWORD *)&v297[16] = 0;
      v298 = 0;
      sub_10065F9AC(v299, *((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301 | ((unint64_t)WORD2(v301) << 32), SBYTE6(v301), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_100154790, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10015486C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100154950);
      v78 = sub_100007E8C(&qword_1011AA058);
      v79 = sub_100007E8C(&qword_1011AA2D8);
      v80 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v81 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v78, v79, v80, v81);

      sub_10065F9AC(v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, v76, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1002BD158, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1002BD234, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1002BD318);
      sub_10065F9F0(v290, v288, v286, v283, v281, v279, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1002BD2C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1002BD318);
      break;
    case 5uLL:
      v82 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v83 = sub_10081586C(v82);
      v85 = v84;
      v87 = v86;
      v89 = v88;

      *(_QWORD *)&v295 = v83;
      *((_QWORD *)&v295 + 1) = v85;
      *(_QWORD *)&KeyPath = v87;
      *((_QWORD *)&KeyPath + 1) = v89;
      v297[0] = 1;
      swift_retain();
      v35 = v85;
      swift_retain();
      v90 = sub_100007E8C(&qword_1011AA298);
      v91 = sub_100007E8C(&qword_1011AA2A8);
      v92 = sub_100049F28(&qword_1011AA290, &qword_1011AA298, (uint64_t)&unk_100ED58E0);
      v93 = sub_100049F28(&qword_1011AA2A0, &qword_1011AA2A8, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v90, v91, v92, v93);
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)v297 = v301;
      goto LABEL_74;
    case 7uLL:
      v103 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v104 = sub_100815AD8(v103);
      v106 = v105;
      v108 = v107;
      v110 = v109;

      *(_QWORD *)&v295 = v104;
      *((_QWORD *)&v295 + 1) = v106;
      *(_QWORD *)&KeyPath = v108;
      *((_QWORD *)&KeyPath + 1) = v110;
      v297[0] = 0;
      swift_retain();
      v35 = v106;
      swift_retain();
      v111 = sub_100007E8C(&qword_1011AA2C8);
      v112 = sub_100007E8C(&qword_10119EC30);
      v113 = sub_100049F28(&qword_1011AA2C0, &qword_1011AA2C8, (uint64_t)&unk_100ED58E0);
      v114 = sub_100049F28(&qword_10119EC28, &qword_10119EC30, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v111, v112, v113, v114);
      v295 = v299;
      KeyPath = v300;
      v297[0] = v301;
      v297[1] = 1;
      v115 = sub_100007E8C(&qword_1011AA288);
      v116 = sub_100007E8C(&qword_1011AA2B8);
      v117 = sub_1002BDCC0();
      v118 = sub_1002BDD64();
      _ConditionalContent<>.init(storage:)(&v295, v115, v116, v117, v118);
      v119 = 256;
      if (!BYTE1(v301))
        v119 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = 0;
      *(_DWORD *)v297 = v119 | v301;
      v297[6] = 1;
      goto LABEL_77;
    case 0xCuLL:
      v120 = (void *)(a1 & 0xFFFFFFFFFFFFFF9);
      *(_QWORD *)&v295 = a1 & 0xFFFFFFFFFFFFFF9;
      v121 = type metadata accessor for JSParagraphViewModel(0);
      v122 = v120;
      State.init(wrappedValue:)(&v295, v121);
      v123 = (void *)v299;
      v295 = v299;
      LOBYTE(KeyPath) = 1;
      v124 = sub_1002BDE74();
      v125 = sub_1002BDEB8();
      v126 = v123;
      swift_retain();
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for SplitWidgetView, &type metadata for ParagraphView, v124, v125);
      v295 = v299;
      KeyPath = v300;
      memset(v297, 0, 19);
      goto LABEL_49;
    case 0x10uLL:
      v127 = (void *)(a1 & 0xFFFFFFFFFFFFFF9);
      v128 = type metadata accessor for JSGroupedTextListViewModel(0);
      v129 = sub_100048748(&qword_1011C0540, type metadata accessor for JSGroupedTextListViewModel, (uint64_t)&protocol conformance descriptor for JSGroupedTextListViewModel);
      *(_QWORD *)&v295 = ObservedObject.init(wrappedValue:)(v127, v128, v129);
      *((_QWORD *)&v295 + 1) = v130;
      KeyPath = 0uLL;
      v297[0] = 0;
      v131 = v130;
      v132 = sub_100007E8C(&qword_1011AA360);
      v133 = sub_1002BE098();
      v134 = sub_100049F28(&qword_1011AA358, &qword_1011AA360, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for GroupedTextListView, v132, v133, v134);
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)v297 = v301;
      v135 = sub_100007E8C(&qword_1011AA348);
      v136 = sub_1002BE014();
      _ConditionalContent<>.init(storage:)(&v295, v135, &type metadata for EmptyView, v136, &protocol witness table for EmptyView);
      v137 = 256;
      if (!BYTE1(v301))
        v137 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v137 | (unint64_t)v301;
      *(_DWORD *)&v297[16] = 0x1000000;
      v138 = sub_100007E8C(&qword_1011AA2E8);
      v139 = sub_100007E8C(&qword_1011AA338);
      v140 = sub_1002BDE2C();
      v141 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v138, v139, v140, v141);
      if (HIBYTE(v302))
        v142 = 0x1000000;
      else
        v142 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_DWORD *)&v297[16] = v142 | (unsigned __int16)v302 | (BYTE2(v302) << 16);
      v298 = 1;
      v143 = sub_100007E8C(&qword_1011AA058);
      v144 = sub_100007E8C(&qword_1011AA2D8);
      v145 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v146 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v143, v144, v145, v146);

      break;
    case 0x11uLL:
      v147 = (void *)(a1 & 0xFFFFFFFFFFFFFF9);
      v148 = type metadata accessor for JSGroupedItemizedTextListViewModel(0);
      v149 = sub_100048748(&qword_1011C0548, type metadata accessor for JSGroupedItemizedTextListViewModel, (uint64_t)&protocol conformance descriptor for JSGroupedItemizedTextListViewModel);
      *(_QWORD *)&v295 = ObservedObject.init(wrappedValue:)(v147, v148, v149);
      *((_QWORD *)&v295 + 1) = v150;
      KeyPath = (unint64_t)swift_getKeyPath(&unk_100EC7668);
      *(_OWORD *)v297 = 0uLL;
      *(_WORD *)&v297[16] = 256;
      v151 = sub_1002BDF20();
      v152 = sub_1002BDF64();
      v126 = *((id *)&v295 + 1);
      swift_retain();
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for BiographyView, &type metadata for GroupedItemizedTextListView, v151, v152);
      if (BYTE1(v302))
        v153 = 256;
      else
        v153 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_WORD *)&v297[16] = v153 | v302;
      v297[18] = 1;
LABEL_49:
      v154 = sub_100007E8C(&qword_1011AA2F8);
      v155 = sub_100007E8C(&qword_1011AA318);
      v156 = sub_1002BDE50();
      v157 = sub_1002BDEFC();
      _ConditionalContent<>.init(storage:)(&v295, v154, v155, v156, v157);
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_WORD *)&v297[18] = BYTE2(v302) != 0;
      *(_WORD *)&v297[16] = v302;
      v158 = sub_100007E8C(&qword_1011AA2E8);
      v159 = sub_100007E8C(&qword_1011AA338);
      v160 = sub_1002BDE2C();
      v161 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v158, v159, v160, v161);
      if (HIBYTE(v302))
        v162 = 0x1000000;
      else
        v162 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_DWORD *)&v297[16] = v162 | (unsigned __int16)v302 | (BYTE2(v302) << 16);
      v298 = 1;
      v163 = sub_100007E8C(&qword_1011AA058);
      v164 = sub_100007E8C(&qword_1011AA2D8);
      v165 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v166 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v163, v164, v165, v166);
      swift_release();

      break;
    case 0x13uLL:
      v167 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v168 = sub_100815600(v167);
      v170 = v169;
      v172 = v171;
      v174 = v173;

      *(_QWORD *)&v295 = v168;
      *((_QWORD *)&v295 + 1) = v170;
      *(_QWORD *)&KeyPath = v172;
      *((_QWORD *)&KeyPath + 1) = v174;
      v297[0] = 0;
      swift_retain();
      v35 = v170;
      swift_retain();
      v175 = sub_100007E8C(&qword_1011AA298);
      v176 = sub_100007E8C(&qword_1011AA2A8);
      v177 = sub_100049F28(&qword_1011AA290, &qword_1011AA298, (uint64_t)&unk_100ED58E0);
      v178 = sub_100049F28(&qword_1011AA2A0, &qword_1011AA2A8, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v175, v176, v177, v178);
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)v297 = v301;
      v179 = sub_100007E8C(&qword_1011AA288);
      v180 = sub_100007E8C(&qword_1011AA2B8);
      v181 = sub_1002BDCC0();
      v182 = sub_1002BDD64();
      _ConditionalContent<>.init(storage:)(&v295, v179, v180, v181, v182);
      v183 = 256;
      if (!BYTE1(v301))
        v183 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = 0;
      *(_DWORD *)v297 = v183 | v301;
      v297[6] = 1;
      goto LABEL_77;
    case 0x14uLL:
      v184 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v185 = sub_10081697C(v184);
      v187 = v186;
      v189 = v188;
      v191 = v190;

      *(_QWORD *)&v295 = v185;
      *((_QWORD *)&v295 + 1) = v187;
      *(_QWORD *)&KeyPath = v189;
      *((_QWORD *)&KeyPath + 1) = v191;
      v297[0] = 1;
      swift_retain();
      v35 = v187;
      swift_retain();
      v192 = sub_100007E8C(&qword_1011AA360);
      v193 = sub_1002BE098();
      v194 = sub_100049F28(&qword_1011AA358, &qword_1011AA360, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for GroupedTextListView, v192, v193, v194);
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)v297 = v301;
      v195 = sub_100007E8C(&qword_1011AA348);
      v196 = sub_1002BE014();
      _ConditionalContent<>.init(storage:)(&v295, v195, &type metadata for EmptyView, v196, &protocol witness table for EmptyView);
      v197 = 256;
      if (!BYTE1(v301))
        v197 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v197 | (unint64_t)v301;
      *(_DWORD *)&v297[16] = 0x1000000;
      v198 = sub_100007E8C(&qword_1011AA2E8);
      v199 = sub_100007E8C(&qword_1011AA338);
      v200 = sub_1002BDE2C();
      v201 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v198, v199, v200, v201);
      if (HIBYTE(v302))
        v202 = 0x1000000;
      else
        v202 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_DWORD *)&v297[16] = v202 | (unsigned __int16)v302 | (BYTE2(v302) << 16);
      v298 = 1;
      v203 = sub_100007E8C(&qword_1011AA058);
      v204 = sub_100007E8C(&qword_1011AA2D8);
      v205 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v206 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      v207 = v203;
      goto LABEL_80;
    case 0x1FuLL:
      v208 = (void *)(a1 & 0xFFFFFFFFFFFFFF9);
      *(_QWORD *)&v295 = a1 & 0xFFFFFFFFFFFFFF9;
      *((_QWORD *)&v295 + 1) = 0;
      LOBYTE(KeyPath) = 0;
      v209 = sub_1002BDE74();
      v210 = sub_1002BDEB8();
      v211 = v208;
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for SplitWidgetView, &type metadata for ParagraphView, v209, v210);
      v295 = v299;
      KeyPath = v300;
      memset(v297, 0, 19);
      v212 = sub_100007E8C(&qword_1011AA2F8);
      v213 = sub_100007E8C(&qword_1011AA318);
      v214 = sub_1002BDE50();
      v215 = sub_1002BDEFC();
      _ConditionalContent<>.init(storage:)(&v295, v212, v213, v214, v215);
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_WORD *)&v297[18] = BYTE2(v302) != 0;
      *(_WORD *)&v297[16] = v302;
      v216 = sub_100007E8C(&qword_1011AA2E8);
      v217 = sub_100007E8C(&qword_1011AA338);
      v218 = sub_1002BDE2C();
      v219 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v216, v217, v218, v219);
      v101 = (unsigned __int16)v302 | (BYTE2(v302) << 16);
      if (HIBYTE(v302))
        v102 = 0x1000000;
      else
        v102 = 0;
      goto LABEL_65;
    case 0x26uLL:
      v224 = (void *)(a1 & 0xFFFFFFFFFFFFFF9);
      *(_QWORD *)&v295 = a1 & 0xFFFFFFFFFFFFFF9;
      v225 = type metadata accessor for JSBiographyViewModel(0);
      v294 = v224;
      State.init(wrappedValue:)(&v295, v225);
      v226 = v299;
      v227 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
      objc_msgSend(v227, "leading");
      v229 = v228;

      v295 = v226;
      KeyPath = v229;
      memset(v297, 0, 18);
      v230 = sub_1002BDF20();
      v231 = sub_1002BDF64();
      v291 = (id)v226;
      swift_retain();
      _ConditionalContent<>.init(storage:)(&v295, &type metadata for BiographyView, &type metadata for GroupedItemizedTextListView, v230, v231);
      if (BYTE1(v302))
        v232 = 256;
      else
        v232 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_WORD *)&v297[16] = v232 | v302;
      v297[18] = 1;
      v233 = sub_100007E8C(&qword_1011AA2F8);
      v234 = sub_100007E8C(&qword_1011AA318);
      v235 = sub_1002BDE50();
      v236 = sub_1002BDEFC();
      _ConditionalContent<>.init(storage:)(&v295, v233, v234, v235, v236);
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_WORD *)&v297[18] = BYTE2(v302) != 0;
      *(_WORD *)&v297[16] = v302;
      v237 = sub_100007E8C(&qword_1011AA2E8);
      v238 = sub_100007E8C(&qword_1011AA338);
      v239 = sub_1002BDE2C();
      v240 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v237, v238, v239, v240);
      v241 = v300;
      *(_QWORD *)&v295 = v299;
      v242 = v301;
      v243 = (unsigned __int16)v302 | (BYTE2(v302) << 16);
      v244 = HIBYTE(v302);
      if (HIBYTE(v302))
        v245 = 0x1000000;
      else
        v245 = 0;
      v284 = v299;
      *((_QWORD *)&v295 + 1) = *((_QWORD *)&v299 + 1);
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_DWORD *)&v297[16] = v245 | v243;
      v298 = 1;
      sub_10065F938(v299, *((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301, *((uint64_t *)&v301 + 1), (unsigned __int16)v302 | (BYTE2(v302) << 16), SHIBYTE(v302), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001549A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1001549D4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_100154A68);
      v246 = sub_100007E8C(&qword_1011AA058);
      v247 = sub_100007E8C(&qword_1011AA2D8);
      v248 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v249 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v246, v247, v248, v249);

      sub_10065F938(v284, *((uint64_t *)&v284 + 1), v241, *((uint64_t *)&v241 + 1), v242, *((uint64_t *)&v242 + 1), v243, v244, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002BD370, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1002BD3A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_1002BD42C);
      swift_release();

      break;
    case 0x27uLL:
      v250 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
      v251 = sub_100812CD4(v250);
      v253 = v252;
      v255 = v254;
      v257 = v256;

      *(_QWORD *)&v295 = v251;
      *((_QWORD *)&v295 + 1) = v253;
      *(_QWORD *)&KeyPath = v255;
      *((_QWORD *)&KeyPath + 1) = v257;
      v297[0] = 1;
      swift_retain();
      v35 = v253;
      swift_retain();
      v258 = sub_100007E8C(&qword_1011AA2C8);
      v259 = sub_100007E8C(&qword_10119EC30);
      v260 = sub_100049F28(&qword_1011AA2C0, &qword_1011AA2C8, (uint64_t)&unk_100ED58E0);
      v261 = sub_100049F28(&qword_10119EC28, &qword_10119EC30, (uint64_t)&unk_100ED58E0);
      _ConditionalContent<>.init(storage:)(&v295, v258, v259, v260, v261);
      v295 = v299;
      KeyPath = v300;
      v297[0] = v301;
      v297[1] = 1;
LABEL_74:
      v262 = sub_100007E8C(&qword_1011AA288);
      v263 = sub_100007E8C(&qword_1011AA2B8);
      v264 = sub_1002BDCC0();
      v265 = sub_1002BDD64();
      _ConditionalContent<>.init(storage:)(&v295, v262, v263, v264, v265);
      v266 = 256;
      if (!BYTE1(v301))
        v266 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_WORD *)&v297[4] = 0;
      *(_DWORD *)v297 = v266 | v301;
      v297[6] = 1;
LABEL_77:
      v267 = sub_100007E8C(&qword_1011AA068);
      v268 = sub_100007E8C(&qword_1011AA278);
      v269 = sub_1002BD554();
      v270 = sub_1002BDC9C();
      _ConditionalContent<>.init(storage:)(&v295, v267, v268, v269, v270);
      v271 = 0x1000000000000;
      if (!BYTE6(v301))
        v271 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v271 | v301 | ((unint64_t)WORD2(v301) << 32);
      *(_DWORD *)&v297[16] = 0;
      v298 = 0;
      v272 = sub_100007E8C(&qword_1011AA058);
      v204 = sub_100007E8C(&qword_1011AA2D8);
      v205 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v206 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      v207 = v272;
LABEL_80:
      _ConditionalContent<>.init(storage:)(&v295, v207, v204, v205, v206);
      swift_release();
      swift_release();

      break;
    default:
      v295 = 0u;
      KeyPath = 0u;
      *(_WORD *)v297 = 256;
      v94 = sub_100007E8C(&qword_1011AA348);
      v95 = sub_1002BE014();
      _ConditionalContent<>.init(storage:)(&v295, v94, &type metadata for EmptyView, v95, &protocol witness table for EmptyView);
      if (BYTE1(v301))
        v96 = 256;
      else
        v96 = 0;
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v96 | (unint64_t)v301;
      *(_DWORD *)&v297[16] = 0x1000000;
      v97 = sub_100007E8C(&qword_1011AA2E8);
      v98 = sub_100007E8C(&qword_1011AA338);
      v99 = sub_1002BDE2C();
      v100 = sub_1002BDFA8();
      _ConditionalContent<>.init(storage:)(&v295, v97, v98, v99, v100);
      v101 = (unsigned __int16)v302 | (BYTE2(v302) << 16);
      if (HIBYTE(v302))
        v102 = 0x1000000;
      else
        v102 = 0;
LABEL_65:
      v295 = v299;
      KeyPath = v300;
      *(_OWORD *)v297 = v301;
      *(_DWORD *)&v297[16] = v102 | v101;
      v298 = 1;
      v220 = sub_100007E8C(&qword_1011AA058);
      v221 = sub_100007E8C(&qword_1011AA2D8);
      v222 = sub_10015FD08(&qword_1011AA050, &qword_1011AA058, (void (*)(void))sub_1002BD554, (void (*)(void))sub_1002BDC9C);
      v223 = sub_10015FD08(&qword_1011AA2D0, &qword_1011AA2D8, (void (*)(void))sub_1002BDE2C, (void (*)(void))sub_1002BDFA8);
      _ConditionalContent<>.init(storage:)(&v295, v220, v221, v222, v223);
      break;
  }
  result = *(double *)&v299;
  v274 = v300;
  v275 = v301;
  v276 = v302;
  v277 = v303;
  *(_OWORD *)a2 = v299;
  *(_OWORD *)(a2 + 16) = v274;
  *(_OWORD *)(a2 + 32) = v275;
  *(_DWORD *)(a2 + 48) = v276;
  *(_BYTE *)(a2 + 52) = v277;
  return result;
}

uint64_t sub_100657278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(qword_1011C06A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A20D0);
  v16 = type metadata accessor for GenericMusicItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_4:
    sub_10004FF60((uint64_t)v11, qword_1011C06A0);
    v18 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  sub_1003699EC((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  sub_1006A29DC((uint64_t)v15, a2, a1, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100657484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_10119EFE8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.principal.getter(v11);
  v15 = a1;
  v16 = a2;
  ToolbarItem<>.init(placement:content:)(v6, sub_1006633CC, v14, &type metadata for Text, &protocol witness table for Text);
  v12 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v10, v7, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1006575AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[0] = a1;
  v28[1] = a2;
  v4 = sub_100055B68();
  swift_bridgeObjectRetain();
  v5 = Text.init<A>(_:)(v28, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Font.title2.getter(v5);
  v13 = Text.font(_:)(v12, v5, v7, v11, v9);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  sub_100055BAC(v5, v7, v11);
  swift_bridgeObjectRelease();
  v21 = static Font.Weight.bold.getter(v20);
  v22 = Text.fontWeight(_:)(*(_QWORD *)&v21, 0, v13, v15, v17 & 1, v19);
  v24 = v23;
  LOBYTE(v9) = v25;
  v27 = v26;
  sub_100055BAC(v13, v15, v17 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v22;
  *(_QWORD *)(a3 + 8) = v24;
  *(_BYTE *)(a3 + 16) = v9 & 1;
  *(_QWORD *)(a3 + 24) = v27;
}

uint64_t sub_1006576D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21[1] = a1;
  v23 = a2;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C0978);
  v22 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v12 = v2[1];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v3, v8);
  v13 = sub_100007E8C(&qword_1011C0980);
  v14 = sub_100049F28(&qword_1011C0988, &qword_1011C0980, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  View.navigationBarTitleDisplayMode(_:)(v6, v13, v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v25 = v11;
  v26 = v12;
  v15 = sub_100007E8C(&qword_10119EFD0);
  v27 = v13;
  v28 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v17 = sub_100044B54(&qword_10119EFE8);
  v18 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v27 = v17;
  v28 = v18;
  v19 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_1006633C4, v24, v7, v15, OpaqueTypeConformance2, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v7);
}

uint64_t sub_1006578BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double MinY;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  __int128 v149;
  _BYTE v150[24];
  __int128 v151;
  uint64_t v152;
  __int128 v153;
  char v154;
  _BYTE v155[7];
  __int128 v156;
  _BYTE v157[7];
  char v158;
  _BYTE v159[7];
  char v160;
  _BYTE v161[7];
  char v162;
  char v163;
  CGRect v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;

  v136 = a3;
  v110 = a1;
  v135 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v133 = v4;
  v134 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = *(_QWORD *)(v5 + 16);
  v6 = type metadata accessor for ModifiedContent(0, v139, &type metadata for _SafeAreaRegionsIgnoringLayout);
  v131 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v129 = (char *)&v104 - v7;
  v8 = sub_100044B54(&qword_1011C0888);
  v9 = type metadata accessor for ModifiedContent(0, v6, v8);
  v126 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v123 = (char *)&v104 - v10;
  v11 = type metadata accessor for ModifiedContent(0, v9, &type metadata for _OpacityEffect);
  v122 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v121 = (char *)&v104 - v12;
  v13 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v14 = type metadata accessor for ModifiedContent(0, v11, v13);
  v127 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v124 = (char *)&v104 - v15;
  WitnessTable = swift_getWitnessTable(&unk_100EC7980, a2);
  v17 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v18 = type metadata accessor for ModifiedContent(0, v17, &type metadata for NavigationTitleModifier);
  v119 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v115 = (char *)&v104 - v19;
  v138 = *(_QWORD *)(a2 + 24);
  v171 = v138;
  v172 = &protocol witness table for _SafeAreaRegionsIgnoringLayout;
  v132 = v6;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v21 = sub_100049F28(&qword_1011C0890, &qword_1011C0888, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
  v106 = v20;
  v169 = v20;
  v170 = v21;
  v128 = v9;
  v105 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v167 = v105;
  v168 = &protocol witness table for _OpacityEffect;
  v125 = v11;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v23 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v107 = v22;
  v165 = v22;
  v166 = v23;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v130 = v14;
  v108 = v24;
  v25 = type metadata accessor for _BackgroundModifier(255, v14, v24);
  v120 = v18;
  v109 = v25;
  v26 = type metadata accessor for ModifiedContent(0, v18, v25);
  v113 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v111 = (uint64_t *)((char *)&v104 - v27);
  v28 = sub_100044B54(&qword_1011C0898);
  v117 = v26;
  v114 = type metadata accessor for ModifiedContent(0, v26, v28);
  v118 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (uint64_t *)((char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  v116 = (uint64_t)&v104 - v31;
  v32 = v137;
  v33 = (uint64_t *)((char *)v137 + *(int *)(a2 + 44));
  v35 = v33[1];
  v36 = v33[2];
  v37 = v33[3];
  v38 = v33[4];
  v146 = *v33;
  v34 = v146;
  v147 = v35;
  v148 = v36;
  *(_QWORD *)&v149 = v37;
  *((_QWORD *)&v149 + 1) = v38;
  v39 = sub_100007E8C(&qword_1011C08A0);
  State.wrappedValue.getter(&v164, v39);
  MinY = CGRectGetMinY(v164);
  v146 = v34;
  v147 = v35;
  v148 = v36;
  *(_QWORD *)&v149 = v37;
  *((_QWORD *)&v149 + 1) = v38;
  State.wrappedValue.getter(&v164, v39);
  v41 = MinY / CGRectGetHeight(v164);
  v42 = Int.seconds.getter(1);
  v43 = *(double *)((char *)v32 + *(int *)(a2 + 40));
  if (v41 >= 0.95)
  {
    v44 = *v32;
    v45 = v32[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = 0;
    v45 = 0xE000000000000000;
  }
  v146 = v44;
  v147 = v45;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v17);
  v47 = v115;
  View.modifier<A>(_:)(&v146, v17, &type metadata for NavigationTitleModifier, v46);
  v48 = swift_bridgeObjectRelease();
  v49 = static SafeAreaRegions.all.getter(v48);
  v50 = static Edge.Set.all.getter(v49);
  v51 = v129;
  v52 = View.ignoresSafeArea(_:edges:)(v49, v50, v139, v138);
  v53 = static HorizontalAlignment.center.getter(v52);
  sub_1006581A4((uint64_t)&v146);
  v54 = v146;
  v55 = v148;
  v56 = *(_QWORD *)&v150[16];
  v57 = *((_QWORD *)&v151 + 1);
  v58 = v149;
  v59 = *(_OWORD *)v150;
  v60 = v153;
  v163 = 1;
  v162 = v147;
  v160 = v151;
  v158 = v152;
  *(_DWORD *)((char *)&v148 + 1) = LODWORD(v164.origin.x);
  HIDWORD(v148) = *(_DWORD *)((char *)&v164.origin.x + 3);
  *(_DWORD *)((char *)&v149 + 9) = *(_DWORD *)v161;
  HIDWORD(v149) = *(_DWORD *)&v161[3];
  *(_DWORD *)((char *)&v153 + 1) = *(_DWORD *)v159;
  DWORD1(v153) = *(_DWORD *)&v159[3];
  v61 = v152;
  *(_DWORD *)&v155[3] = *(_DWORD *)&v157[3];
  *(_DWORD *)v155 = *(_DWORD *)v157;
  v146 = v53;
  v147 = 0;
  LOBYTE(v148) = 1;
  *(_QWORD *)&v149 = v54;
  BYTE8(v149) = v162;
  *(_QWORD *)v150 = v55;
  *(_OWORD *)&v150[8] = v58;
  v151 = v59;
  v152 = v56;
  LOBYTE(v153) = v160;
  *((_QWORD *)&v153 + 1) = v57;
  v154 = v61;
  v156 = v60;
  v63 = static Alignment.center.getter(v62);
  v65 = v64;
  v66 = sub_100007E8C(&qword_1011C08A8);
  v67 = sub_100049F28(&qword_1011C08B0, &qword_1011C08A8, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v68 = v123;
  v69 = v65;
  v70 = v132;
  View.overlay<A>(_:alignment:)(&v146, v63, v69, v132, v66, v106, v67);
  v71 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v51, v70, v71);
  v72 = v121;
  v73 = v128;
  View.opacity(_:)(v128, v105, v42 - v41 * v43);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v68, v73);
  v75 = v124;
  v74 = v125;
  View.accessibilityHidden(_:)(1, v125, v107);
  v76 = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v72, v74);
  v77 = static Alignment.center.getter(v76);
  v79 = v78;
  v80 = sub_100662720();
  v144 = v46;
  v145 = v80;
  v81 = v120;
  v82 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v120);
  v83 = v111;
  v84 = v79;
  v85 = v130;
  View.background<A>(_:alignment:)(v111, v75, v77, v84, v81, v130, v82, v108);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v75, v85);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v47, v81);
  v87 = v134;
  v86 = v135;
  (*(void (**)(char *, uint64_t *, uint64_t))(v135 + 16))(v134, v137, a2);
  v88 = *(unsigned __int8 *)(v86 + 80);
  v89 = (v88 + 32) & ~v88;
  v90 = swift_allocObject(&unk_1010D4C68, v89 + v133, v88 | 7);
  v91 = v138;
  *(_QWORD *)(v90 + 16) = v139;
  *(_QWORD *)(v90 + 24) = v91;
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v90 + v89, v87, a2);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v109);
  v142 = v82;
  v143 = v92;
  v93 = v117;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v117);
  v95 = sub_100662854();
  v96 = sub_100048748(&qword_1011AA918, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
  v97 = v112;
  View.onPreferenceChange<A>(_:perform:)(v112, &type metadata for ScrollViewBoundsPreferenceKey, sub_1006627FC, v90, v93, &type metadata for ScrollViewBoundsPreferenceKey, v94, v95, v96);
  v98 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v113 + 8))(v83, v93, v98);
  v99 = sub_100049F28(&qword_1011C08C8, &qword_1011C0898, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v140 = v94;
  v141 = v99;
  v100 = v114;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v114);
  v101 = v116;
  sub_10081EB14((uint64_t)v97, v100, v116);
  v102 = *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8);
  v102((uint64_t)v97, v100);
  sub_1000EA744(v101, v100, v136);
  return v102(v101, v100);
}

double sub_1006581A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  double result;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v2 = sub_100007E8C(&qword_1011AC5F0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A80;
  v4 = static Color.clear.getter(v3);
  *(_QWORD *)(v3 + 32) = v4;
  static Color.black.getter(v4);
  v5 = Color.opacity(_:)(0.8);
  swift_release();
  *(_QWORD *)(v3 + 40) = v5;
  v31 = v3;
  v7 = specialized Array._endMutation()(v6);
  v8 = static UnitPoint.top.getter(v7);
  v10 = v9;
  v12 = static UnitPoint.bottom.getter(v11);
  v14 = v13;
  Gradient.init(colors:)(v3);
  v15 = LinearGradient.init(gradient:startPoint:endPoint:)(&v27, v8, v10, v12, v14);
  v16 = v27;
  v26 = v28;
  v17 = v29;
  v18 = v30;
  v19 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(&v31, 0, 1, 0x406F400000000000, 0, v19, v20);
  v21 = v31;
  v22 = v32;
  v23 = v33;
  v24 = v34;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 24) = v26;
  *(_QWORD *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v21;
  *(_BYTE *)(a1 + 64) = v22;
  *(_QWORD *)(a1 + 72) = v23;
  *(_BYTE *)(a1 + 80) = v24;
  result = *(double *)&v35;
  *(_OWORD *)(a1 + 88) = v35;
  return result;
}

uint64_t sub_1006582F8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v11 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = (__int128 *)(a2 + *(int *)(type metadata accessor for UberModifier(0, a3, a4, a4) + 44));
  v7 = *((_QWORD *)v6 + 4);
  v8 = v6[1];
  v15 = *v6;
  v16 = v8;
  v17 = v7;
  v12 = v11;
  v13 = v4;
  v14 = v5;
  v9 = sub_100007E8C(&qword_1011C08A0);
  return State.wrappedValue.setter(&v12, v9);
}

uint64_t sub_100658384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(void);
  _QWORD *v46;
  id v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(void);
  _QWORD *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t KeyPath;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t (*v120)(void);
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  unsigned __int8 (*v145)(void);
  _QWORD *v146;
  int v147;
  uint64_t v148;
  char v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t (*v152)(void);
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(void);
  _QWORD *v158;
  char *v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  BOOL v189;
  _QWORD *v190;
  uint64_t (*v191)(void);
  _QWORD *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  char *v204;
  __n128 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t OpaqueTypeConformance2;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t result;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  unint64_t *v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  void *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t (*v252)(char *, uint64_t, uint64_t);
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  id v278;
  _QWORD *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  __int128 v287;
  uint64_t v288;
  uint64_t v289;
  _BYTE v290[32];
  uint64_t v291;
  _QWORD v292[5];
  _QWORD v293[5];
  __int128 v294;
  __int128 v295;
  __int128 v296;
  uint64_t v297;
  __int128 v298;
  _QWORD v299[5];
  __int128 v300;
  __int128 v301;
  _UNKNOWN **v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;

  v289 = a1;
  v248 = sub_100007E8C(&qword_1011C0618);
  __chkstk_darwin(v248);
  v249 = (uint64_t)&v239 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = sub_100007E8C(&qword_1011C0620);
  v243 = *(_QWORD *)(v250 - 8);
  __chkstk_darwin(v250);
  v242 = (char *)&v239 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v288 = sub_100007E8C(&qword_1011C0628);
  __chkstk_darwin(v288);
  v251 = (char *)&v239 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v5);
  v245 = (char *)&v239 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v7);
  v254 = (char *)&v239 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = type metadata accessor for ArtworkBackdropView(0);
  __chkstk_darwin(v255);
  v257 = (uint64_t)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_100007E8C(&qword_1011C0630);
  __chkstk_darwin(v256);
  v259 = (uint64_t *)((char *)&v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v266 = sub_100007E8C(&qword_1011C0638);
  __chkstk_darwin(v266);
  v258 = (uint64_t)&v239 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v260 = (uint64_t)&v239 - v13;
  v284 = sub_100007E8C(&qword_1011C0640);
  __chkstk_darwin(v284);
  v286 = (uint64_t)&v239 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = sub_100007E8C(&qword_1011C0648);
  __chkstk_darwin(v263);
  v265 = (uint64_t)&v239 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = sub_100007E8C(&qword_1011C0650);
  __chkstk_darwin(v285);
  v267 = (char *)&v239 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = sub_100007E8C(&qword_1011C0658);
  __chkstk_darwin(v264);
  v247 = (uint64_t)&v239 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v18);
  v246 = (uint64_t)&v239 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v281 = (uint64_t)&v239 - v21;
  v280 = type metadata accessor for CatalogStack(0);
  __chkstk_darwin(v280);
  v282 = (uint64_t)&v239 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v276 = (uint64_t)&v239 - v24;
  v25 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v25);
  v262 = (uint64_t)&v239 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for GenericMusicItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v244 = (char *)&v239 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  *(_QWORD *)&v287 = (char *)&v239 - v31;
  v32 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v32);
  v253 = (char *)&v239 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v239 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v239 - v38;
  v283 = type metadata accessor for CatalogStack.CollectionView(0);
  __chkstk_darwin(v283);
  v41 = (char *)&v239 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(void **)(v1 + 24);
  v43 = v1;
  v44 = *(_QWORD **)(v1 + 8);
  v45 = *(void (**)(void))((swift_isaMask & *v44) + 0x418);
  v46 = v44;
  v47 = v42;
  v45();
  v279 = v46;

  v252 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v48 = v252(v39, 1, v27);
  v268 = v27;
  v261 = v28;
  v277 = v43;
  v278 = v47;
  if (v48)
  {
    sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A20D0);
    v49 = 0;
    v275 = 0;
    v276 = 0;
    v273 = 0;
    v274 = 0;
    v271 = 0;
    v272 = 0;
    v269 = 0;
    v270 = 0;
    v50 = 0;
    goto LABEL_12;
  }
  (*(void (**)(_QWORD, char *, uint64_t))(v28 + 16))(v287, v39, v27);
  sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A20D0);
  v51 = *(_QWORD **)(v43 + 8);
  v52 = *(void (**)(void))((swift_isaMask & *v51) + 0x418);
  v53 = v51;
  v52();

  v241 = (void *)Optional<A>.playbackIntent.getter();
  sub_10004FF60((uint64_t)v36, (uint64_t *)&unk_1011A20D0);
  v54 = *(void **)(v43 + 32);
  LOBYTE(v52) = *(_BYTE *)(v43 + 40);
  sub_1000A4100(v54, (char)v52);
  v55 = sub_100824044(v54, (char)v52);
  sub_1000A4224(v54, (char)v52);
  v56 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v262, 1, 1, v56);
  v57 = *(_QWORD *)(v43 + 48);
  if (v57)
  {
    v240 = v55;
    *((_QWORD *)&v301 + 1) = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v302 = &protocol witness table for <A> PresentedViewState<A>;
    *(_QWORD *)&v300 = v57;
    v58 = *(_QWORD *)(v43 + 64);
    if (v58)
    {
      v59 = type metadata accessor for NoticePresenter(0);
      v299[4] = &protocol witness table for NoticePresenter;
      v299[3] = v59;
      v299[0] = v58;
      v297 = 0;
      v295 = 0u;
      v296 = 0u;
      v294 = 0u;
      v298 = xmmword_100EA93A0;
      v60 = *(_QWORD *)(v43 + 80);
      v61 = *(_QWORD *)(v43 + 88);
      v62 = *(unsigned __int8 *)(v43 + 96);
      swift_retain();
      swift_retain();
      v63 = sub_100007E8C(&qword_1011A03A8);
      v64 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v65 = StateObject.wrappedValue.getter(v60, v61, v62, v63, v64);
      v293[4] = &protocol witness table for <A> PresentedViewState<A>;
      v293[3] = v63;
      v293[0] = v65;
      v66 = *(_QWORD *)(v43 + 104);
      if (v66)
      {
        v67 = type metadata accessor for NavigationPusher();
        v292[3] = v67;
        v292[4] = &off_1010D58B0;
        v292[0] = v66;
        v291 = 0;
        memset(v290, 0, sizeof(v290));
        if (*(_QWORD *)(v43 + 120))
        {
          v275 = *(_QWORD *)(v43 + 120);
          if (*(_QWORD *)(v43 + 136))
          {
            __chkstk_darwin(v67);
            sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EC7850);
            __chkstk_darwin(KeyPath);
            v69 = swift_getKeyPath(&unk_100EC7888);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v303, v70, KeyPath, v69);
            swift_release();
            swift_release();
            swift_release();
            v71 = v303;
            v72 = *(_QWORD *)(v43 + 152);
            v73 = *(_QWORD *)(v43 + 160);
            LOBYTE(v69) = *(_BYTE *)(v43 + 168);
            sub_1000A410C(v72, v73, v69);
            sub_100824224(v72, v73, v69);
            sub_1000A4230(v72, v73, v69);
            sub_10066D160(v71);
            v75 = v74;
            v77 = v76;
            swift_release();
            swift_bridgeObjectRelease();
            v78 = *(_QWORD *)(v43 + 176);
            v79 = *(_QWORD *)(v43 + 184);
            LOBYTE(v72) = *(_BYTE *)(v43 + 192);
            sub_1000A411C(v78, v79, v72);
            sub_100824400(v78, v79, v72, &v303);
            sub_1000A4240(v78, v79, v72);
            v80 = v303;
            v81 = v304;
            v82 = v276;
            sub_10005B704(v43, v276, type metadata accessor for CatalogStack);
            if (v81 >> 60 != 15)
            {
LABEL_11:
              sub_10005B748(v82, type metadata accessor for CatalogStack);
              v84 = type metadata accessor for MusicLibrary(0);
              v85 = static MusicLibrary.shared.getter(v84);
              v238 = v80;
              v236 = v75;
              v237 = v77;
              v86 = v80;
              v88 = v240;
              v87 = v241;
              v239 = v77;
              v89 = v262;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v241, v240, v85, v262, (uint64_t)&v300, (unint64_t)v299, (unint64_t)&v294, (unint64_t)v293, &v303, (uint64_t)v292, (unint64_t)v290, v236, v237, v238, v81);
              v90 = v303;
              v275 = v305;
              v276 = v304;
              v273 = v307;
              v274 = v306;
              v271 = v309;
              v272 = v308;
              v50 = v312;
              v269 = v311;
              v270 = v310;
              swift_release();
              sub_1000822B4(v86, v81);

              v49 = v90;
              swift_bridgeObjectRelease();

              sub_10004FF60((uint64_t)v290, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v294, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v89, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(_QWORD, uint64_t))(v261 + 8))(v287, v268);
              sub_10004FF60((uint64_t)v292, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v293);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v299);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v300);
LABEL_12:
              v91 = v277;
              v92 = *(_QWORD *)(v277 + 80);
              v93 = *(_QWORD *)(v277 + 88);
              v94 = *(unsigned __int8 *)(v277 + 96);
              v95 = sub_100007E8C(&qword_1011A03A8);
              v96 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
              v97 = StateObject.wrappedValue.getter(v92, v93, v94, v95, v96);
              v98 = type metadata accessor for JSVerticalStack(0);
              v99 = sub_100048748(&qword_1011C0550, type metadata accessor for JSVerticalStack, (uint64_t)&protocol conformance descriptor for JSVerticalStack);
              *(_QWORD *)v41 = ObservedObject.init(wrappedValue:)(v278, v98, v99);
              *((_QWORD *)v41 + 1) = v100;
              *((_QWORD *)v41 + 2) = v279;
              *((_QWORD *)v41 + 3) = v49;
              v101 = v275;
              *((_QWORD *)v41 + 4) = v276;
              *((_QWORD *)v41 + 5) = v101;
              v102 = v273;
              *((_QWORD *)v41 + 6) = v274;
              *((_QWORD *)v41 + 7) = v102;
              v103 = v271;
              *((_QWORD *)v41 + 8) = v272;
              *((_QWORD *)v41 + 9) = v103;
              v104 = v269;
              *((_QWORD *)v41 + 10) = v270;
              *((_QWORD *)v41 + 11) = v104;
              *((_QWORD *)v41 + 12) = v50;
              *((_QWORD *)v41 + 13) = ObservedObject.init(wrappedValue:)(v97, v95, v96);
              *((_QWORD *)v41 + 14) = v105;
              *((_QWORD *)v41 + 15) = swift_getKeyPath(&unk_100EC7668);
              *((_QWORD *)v41 + 16) = 0;
              *((_QWORD *)v41 + 17) = 0;
              *((_QWORD *)v41 + 18) = 0;
              v41[152] = 0;
              *((_QWORD *)v41 + 20) = swift_getKeyPath(&unk_100EC7708);
              v41[168] = 0;
              v106 = v283;
              v107 = &v41[*(int *)(v283 + 40)];
              *(_QWORD *)v107 = swift_getKeyPath(&unk_100EC7730);
              v108 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
              swift_storeEnumTagMultiPayload(v107, v108, 0);
              v109 = *(int *)(v106 + 44);
              v110 = type metadata accessor for PersistentScrollObserver();
              v111 = swift_allocObject(v110, 24, 7);
              *(_QWORD *)(v111 + 16) = sub_100042644((uint64_t)_swiftEmptyArrayStorage);
              *(_QWORD *)&v41[v109] = v111;
              v112 = *(id *)(v91 + 8);
              v113 = v281;
              sub_100824BE4(v281);
              LOBYTE(v111) = sub_100659AB4(v113);

              sub_10004FF60(v113, (uint64_t *)&unk_1011A33B8);
              v114 = v282;
              sub_10005B704(v91, v282, type metadata accessor for CatalogStack);
              if ((v111 & 1) != 0)
              {
                v115 = *(_QWORD *)(v114 + 200);
                v116 = *(_BYTE *)(v114 + 208);
                sub_10006B3F8(v115, v116);
                v117 = sub_10082563C(v115, v116);
                sub_10006B604(v115, v116);
                LOBYTE(v115) = static Visibility.== infix(_:_:)(v117, 2);
                sub_10005B748(v114, type metadata accessor for CatalogStack);
                v118 = v288;
                if ((v115 & 1) != 0)
                {
                  v119 = *(_QWORD **)(v91 + 8);
                  v120 = *(uint64_t (**)(void))((swift_isaMask & *v119) + 0x190);
                  v121 = v119;
                  v122 = v120();
                  v124 = v123;

                  v300 = 0u;
                  v301 = 0u;
                  type metadata accessor for CGRect(0);
                  v126 = v125;
                  v127 = v121;
                  State.init(wrappedValue:)(&v300, v126);
                  v287 = v294;
                  v128 = v295;
                  v129 = v296;
                  v130 = v247;
                  sub_10005B704((uint64_t)v41, v247, type metadata accessor for CatalogStack.CollectionView);
                  v131 = v264;
                  v132 = v130 + *(int *)(v264 + 36);
                  *(_QWORD *)v132 = v122;
                  *(_QWORD *)(v132 + 8) = v124;
                  *(_QWORD *)(v132 + 16) = v127;
                  *(_QWORD *)(v132 + 24) = 0x4000000000000000;
                  *(_OWORD *)(v132 + 32) = v287;
                  *(_OWORD *)(v132 + 48) = v128;
                  *(_QWORD *)(v132 + 64) = v129;
                  v133 = &qword_1011C0658;
                  v134 = v265;
                  sub_10004A160(v130, v265, &qword_1011C0658);
                  swift_storeEnumTagMultiPayload(v134, v263, 0);
                  v135 = sub_1006608EC(&qword_1011C0670, &qword_1011C0658, &qword_1011C0678, &qword_1011C0680);
                  v136 = sub_1006608EC(&qword_1011C0688, &qword_1011C0638, &qword_1011C0690, &qword_1011C0630);
                  v137 = (uint64_t)v267;
                  _ConditionalContent<>.init(storage:)(v134, v131, v266, v135, v136);
                  v138 = v286;
                  sub_10004A160(v137, v286, &qword_1011C0650);
                  swift_storeEnumTagMultiPayload(v138, v284, 0);
                  v139 = sub_100660840();
                  v140 = sub_10066098C();
                  v141 = v138;
                  v142 = v285;
                  v143 = v288;
LABEL_30:
                  _ConditionalContent<>.init(storage:)(v141, v142, v143, v139, v140);
                  sub_10004FF60(v137, &qword_1011C0650);
                  v188 = v130;
LABEL_38:
                  sub_10004FF60(v188, v133);
                  return sub_10005B748((uint64_t)v41, type metadata accessor for CatalogStack.CollectionView);
                }
              }
              else
              {
                sub_10005B748(v114, type metadata accessor for CatalogStack);
                v118 = v288;
              }
              v144 = *(_QWORD **)(v91 + 8);
              v145 = *(unsigned __int8 (**)(void))((swift_isaMask & *v144) + 0x2B0);
              v146 = v144;
              v147 = v145();
              if (v147)
              {
                if (v147 != 1)
                {

                  swift_bridgeObjectRelease();
                  goto LABEL_24;
                }
                v148 = 0x656C69666F7270;
              }
              else
              {
                v148 = 0x746C7561666564;
              }
              v149 = _stringCompareWithSmolCheck(_:_:expecting:)(v148, 0xE700000000000000, 0x747369747261, 0xE600000000000000, 0);

              swift_bridgeObjectRelease();
              if ((v149 & 1) == 0)
              {
                v150 = v146;
                v151 = v246;
                sub_100824BE4(v246);
                if ((sub_100659AB4(v151) & 1) != 0)
                {

                  sub_10004FF60(v151, (uint64_t *)&unk_1011A33B8);
                }
                else
                {
                  v189 = sub_10065C518();

                  sub_10004FF60(v151, (uint64_t *)&unk_1011A33B8);
                  if (!v189)
                  {
                    v190 = *(_QWORD **)(v91 + 8);
                    v191 = *(uint64_t (**)(void))((swift_isaMask & *v190) + 0x190);
                    v192 = v190;
                    v193 = v191();
                    v195 = v194;

                    swift_bridgeObjectRelease();
                    v196 = HIBYTE(v195) & 0xF;
                    if ((v195 & 0x2000000000000000) == 0)
                      v196 = v193 & 0xFFFFFFFFFFFFLL;
                    if (v196)
                    {
                      v197 = v192;
                      v198 = v191();
                      v200 = v199;

                      *(_QWORD *)&v294 = v198;
                      *((_QWORD *)&v294 + 1) = v200;
                      v201 = sub_100048748(&qword_1011C0660, type metadata accessor for CatalogStack.CollectionView, (uint64_t)&unk_100EC79D0);
                      v202 = sub_100055B68();
                      v203 = v118;
                      v204 = v242;
                      View.navigationTitle<A>(_:)(&v294, v106, &type metadata for String, v201, v202);
                      v205 = swift_bridgeObjectRelease();
                      v206 = v243;
                      v208 = v249;
                      v207 = v250;
                      (*(void (**)(uint64_t, char *, uint64_t, __n128))(v243 + 16))(v249, v204, v250, v205);
                      swift_storeEnumTagMultiPayload(v208, v248, 0);
                      *(_QWORD *)&v294 = v106;
                      *((_QWORD *)&v294 + 1) = &type metadata for String;
                      *(_QWORD *)&v295 = v201;
                      *((_QWORD *)&v295 + 1) = v202;
                      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v294, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
                      v210 = (uint64_t)v251;
                      _ConditionalContent<>.init(storage:)(v208, v207, v106, OpaqueTypeConformance2, v201);
                      v211 = v204;
                      v118 = v203;
                      (*(void (**)(char *, uint64_t))(v206 + 8))(v211, v207);
LABEL_37:
                      v133 = &qword_1011C0628;
                      v216 = v286;
                      sub_10004A160(v210, v286, &qword_1011C0628);
                      swift_storeEnumTagMultiPayload(v216, v284, 1);
                      v217 = sub_100660840();
                      v218 = sub_10066098C();
                      _ConditionalContent<>.init(storage:)(v216, v285, v118, v217, v218);
                      v188 = v210;
                      goto LABEL_38;
                    }
                  }
                }
                v212 = v249;
                sub_10005B704((uint64_t)v41, v249, type metadata accessor for CatalogStack.CollectionView);
                swift_storeEnumTagMultiPayload(v212, v248, 1);
                v213 = sub_100048748(&qword_1011C0660, type metadata accessor for CatalogStack.CollectionView, (uint64_t)&unk_100EC79D0);
                v214 = sub_100055B68();
                *(_QWORD *)&v294 = v106;
                *((_QWORD *)&v294 + 1) = &type metadata for String;
                *(_QWORD *)&v295 = v213;
                *((_QWORD *)&v295 + 1) = v214;
                v215 = swift_getOpaqueTypeConformance2(&v294, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
                v210 = (uint64_t)v251;
                _ConditionalContent<>.init(storage:)(v212, v250, v106, v215, v213);
                goto LABEL_37;
              }
LABEL_24:
              v152 = *(uint64_t (**)(void))((swift_isaMask & *v146) + 0x190);
              v153 = v146;
              v154 = v152();
              v156 = v155;

              v157 = *(void (**)(void))((swift_isaMask & *v153) + 0x400);
              v158 = v153;
              v159 = v253;
              v157();

              v160 = v268;
              if (v252(v159, 1, v268))
              {
                v161 = (uint64_t *)&unk_1011A20D0;
                v162 = (uint64_t)v159;
              }
              else
              {
                v163 = (uint64_t)v159;
                v164 = v261;
                v165 = v244;
                (*(void (**)(char *, uint64_t, uint64_t))(v261 + 16))(v244, v163, v160);
                sub_10004FF60(v163, (uint64_t *)&unk_1011A20D0);
                v166 = v245;
                GenericMusicItem.artworkViewModel.getter(v245);
                (*(void (**)(char *, uint64_t))(v164 + 8))(v165, v160);
                v167 = type metadata accessor for ArtworkImage.ViewModel(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 48))(v166, 1, v167) != 1)
                {
                  v169 = v118;
                  v220 = type metadata accessor for Artwork(0);
                  v221 = (uint64_t)v166;
                  v222 = *(_QWORD *)(v220 - 8);
                  v171 = (uint64_t)v254;
                  (*(void (**)(char *, uint64_t, uint64_t))(v222 + 16))(v254, v221, v220);
                  sub_10005B748(v221, type metadata accessor for ArtworkImage.ViewModel);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v222 + 56))(v171, 0, 1, v220);
                  v168 = v266;
                  goto LABEL_29;
                }
                v161 = (uint64_t *)&unk_1011A3E10;
                v162 = (uint64_t)v166;
              }
              sub_10004FF60(v162, v161);
              v168 = v266;
              v169 = v118;
              v170 = type metadata accessor for Artwork(0);
              v171 = (uint64_t)v254;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v254, 1, 1, v170);
LABEL_29:
              v172 = v257;
              sub_100065228(v171, v257, &qword_1011A1440);
              v173 = v255;
              v174 = v172 + *(int *)(v255 + 20);
              *(_QWORD *)v174 = swift_getKeyPath(&unk_100EC7820);
              *(_BYTE *)(v174 + 8) = 0;
              v175 = *(int *)(v173 + 24);
              *(_QWORD *)&v300 = 0;
              v176 = sub_100007E8C(&qword_10119E588);
              State.init(wrappedValue:)(&v300, v176);
              *(_OWORD *)(v172 + v175) = v294;
              v177 = (uint64_t)v259;
              *v259 = v154;
              *(_QWORD *)(v177 + 8) = v156;
              v178 = v256;
              sub_10005B6C0(v172, v177 + *(int *)(v256 + 36), type metadata accessor for ArtworkBackdropView);
              *(_QWORD *)(v177 + *(int *)(v178 + 40)) = 0x4000000000000000;
              v179 = v177 + *(int *)(v178 + 44);
              type metadata accessor for CGRect(0);
              v300 = 0u;
              v301 = 0u;
              State.init(wrappedValue:)(&v300, v180);
              v181 = v296;
              v182 = v295;
              *(_OWORD *)v179 = v294;
              *(_OWORD *)(v179 + 16) = v182;
              *(_QWORD *)(v179 + 32) = v181;
              v183 = v258;
              sub_10005B704((uint64_t)v41, v258, type metadata accessor for CatalogStack.CollectionView);
              sub_100065228(v177, v183 + *(int *)(v168 + 36), &qword_1011C0630);
              v133 = &qword_1011C0638;
              v130 = v260;
              sub_100065228(v183, v260, &qword_1011C0638);
              v184 = v265;
              sub_10004A160(v130, v265, &qword_1011C0638);
              swift_storeEnumTagMultiPayload(v184, v263, 1);
              v185 = sub_1006608EC(&qword_1011C0670, &qword_1011C0658, &qword_1011C0678, &qword_1011C0680);
              v186 = sub_1006608EC(&qword_1011C0688, &qword_1011C0638, &qword_1011C0690, &qword_1011C0630);
              v137 = (uint64_t)v267;
              _ConditionalContent<>.init(storage:)(v184, v264, v168, v185, v186);
              v187 = v286;
              sub_10004A160(v137, v286, &qword_1011C0650);
              swift_storeEnumTagMultiPayload(v187, v284, 0);
              v139 = sub_100660840();
              v140 = sub_10066098C();
              v141 = v187;
              v142 = v285;
              v143 = v169;
              goto LABEL_30;
            }
            if (*(_QWORD *)(v82 + 120))
            {
              swift_retain();
              v80 = sub_10066D7A8();
              v81 = v83;
              swift_release();
              goto LABEL_11;
            }
          }
          else
          {
            v233 = *(_QWORD *)(v43 + 144);
            v234 = type metadata accessor for TabSelectionManager(0);
            v82 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v233, v234, v82);
            __break(1u);
          }
          v223 = *(_QWORD *)(v82 + 128);
          goto LABEL_46;
        }
LABEL_43:
        v223 = *(_QWORD *)(v43 + 128);
        swift_retain();
LABEL_46:
        v224 = (uint64_t *)&unk_10119CBE0;
        v225 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v226 = &qword_1011C5B90;
        v227 = &unk_100EC0A50;
        goto LABEL_47;
      }
    }
    else
    {
      v228 = *(_QWORD *)(v43 + 72);
      v43 = type metadata accessor for NoticePresenter(0);
      v229 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v228, v43, v229);
      __break(1u);
    }
    v230 = *(_QWORD *)(v43 + 112);
    v231 = type metadata accessor for NavigationPusher();
    v232 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v230, v231, v232);
    __break(1u);
    goto LABEL_43;
  }
  v223 = *(_QWORD *)(v43 + 56);
  v224 = (uint64_t *)&unk_1011B4E40;
  v225 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v226 = (unint64_t *)&unk_10119CC10;
  v227 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_47:
  v235 = sub_100049F28(v226, v224, (uint64_t)v227);
  result = EnvironmentObject.error()(0, v223, v225, v235);
  __break(1u);
  return result;
}

uint64_t sub_100659AB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  void *v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for Artwork.CropStyle(0);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - v16;
  v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - v22;
  sub_10004A160(a1, (uint64_t)&v48 - v22, (uint64_t *)&unk_1011A33B8);
  v24 = type metadata accessor for UserInterfaceSizeClass(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
  {
    v49 = v23;
    sub_10004A160((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1011A33B8);
    v33 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v20, v24);
    if (v33 == enum case for UserInterfaceSizeClass.compact(_:))
    {
      v34 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x400))();
      static Artwork.CropStyle.specificRectangle.getter(v34);
      v35 = (uint64_t)v17;
      sub_100657278((uint64_t)v8, (uint64_t)v5, v17);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
      v36 = type metadata accessor for MotionViewModel(0);
      v29 = 1;
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v17, 1, v36);
      v38 = sub_10004FF60(v35, &qword_1011AA8D0);
      v39 = (uint64_t)v49;
      if (v37 == 1)
      {
        v40 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x250))(v38);

        if (v40)
        {
LABEL_10:
          v29 = 1;
          goto LABEL_18;
        }
        v41 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x220))();
        if (v41)
        {

          goto LABEL_10;
        }
LABEL_17:
        v29 = 0;
      }
    }
    else
    {
      if (v33 != enum case for UserInterfaceSizeClass.regular(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
        v23 = v49;
        goto LABEL_2;
      }
      v42 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x400))();
      static Artwork.CropStyle.specificRectangle.getter(v42);
      sub_100657278((uint64_t)v8, (uint64_t)v5, v14);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
      v43 = type metadata accessor for MotionViewModel(0);
      v29 = 1;
      v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v14, 1, v43);
      v45 = sub_10004FF60((uint64_t)v14, &qword_1011AA8D0);
      v39 = (uint64_t)v49;
      if (v44 == 1)
      {
        v46 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x250))(v45);
        if (v46)
        {

          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
LABEL_18:
    sub_10004FF60(v39, (uint64_t *)&unk_1011A33B8);
    return v29;
  }
LABEL_2:
  v26 = sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A33B8);
  v27 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x400))(v26);
  static Artwork.CropStyle.specificRectangle.getter(v27);
  sub_100657278((uint64_t)v8, (uint64_t)v5, v11);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
  v28 = type metadata accessor for MotionViewModel(0);
  v29 = 1;
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v11, 1, v28);
  v31 = sub_10004FF60((uint64_t)v11, &qword_1011AA8D0);
  if (v30 == 1)
  {
    v32 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x250))(v31);
    if (v32)

    else
      return 0;
  }
  return v29;
}

uint64_t sub_100659F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  __int128 v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char v36;
  id v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t OpaqueTypeConformance2;
  char *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  char v92;
  int v93;
  __int16 v94;
  _BYTE v95[7];
  _OWORD v96[9];
  char v97;
  _OWORD v98[2];
  char v99;
  _BYTE v100[56];

  v81 = a3;
  v73 = type metadata accessor for GeometryProxy(0);
  v5 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v76 = v6;
  v77 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v7);
  v68 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for CatalogStack.CollectionView(0);
  v71 = *(_QWORD *)(v69 - 8);
  v9 = *(_QWORD *)(v71 + 64);
  __chkstk_darwin(v69);
  v75 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v72 = (uint64_t)&v67 - v11;
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v67 - v13);
  v15 = sub_100007E8C(&qword_1011C07E0);
  v79 = *(_QWORD *)(v15 - 8);
  v80 = v15;
  __chkstk_darwin(v15);
  v78 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD **)(a2 + 8);
  v18 = *(uint64_t (**)(void))((swift_isaMask & *v17) + 0x100);
  v19 = v17;
  v74 = v18();

  v20 = *(_OWORD *)(a2 + 136);
  v98[0] = *(_OWORD *)(a2 + 120);
  v98[1] = v20;
  v99 = *(_BYTE *)(a2 + 152);
  sub_100065228((uint64_t)v98, (uint64_t)v100, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  v21 = sub_100825088();
  v22 = sub_10006FDA8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  v82 = a1;
  *(double *)&v23 = GeometryProxy.size.getter(v22);
  v25 = sub_10065A600(v23, v24, 0);
  sub_10006FDA8((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v27 = v26;
  sub_10006FDA8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  sub_10006FDA8((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v29 = v28;
  sub_10006FDA8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  v30 = a2;
  sub_10006FDA8((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v32 = v31;
  v33 = sub_10006FDA8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  v70 = static HorizontalAlignment.leading.getter(v33);
  v34 = (*(unsigned __int8 (**)(void))((swift_isaMask & **(_QWORD **)(a2 + 16)) + 0x2B0))();
  if (v34)
  {
    if (v34 != 1)
    {
      swift_bridgeObjectRelease();
      sub_10005B704(a2, (uint64_t)v14, type metadata accessor for CatalogStack.CollectionView);
      goto LABEL_8;
    }
    v35 = 0x656C69666F7270;
  }
  else
  {
    v35 = 0x746C7561666564;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, 0xE700000000000000, 0x747369747261, 0xE600000000000000, 0);
  swift_bridgeObjectRelease();
  sub_10005B704(a2, (uint64_t)v14, type metadata accessor for CatalogStack.CollectionView);
  if ((v36 & 1) != 0)
  {
LABEL_8:
    LODWORD(v69) = 1;
    goto LABEL_9;
  }
  v37 = v14[2];
  v38 = v68;
  sub_100824BE4(v68);
  LODWORD(v69) = sub_100659AB4(v38);

  sub_10004FF60(v38, (uint64_t *)&unk_1011A33B8);
LABEL_9:
  sub_10005B748((uint64_t)v14, type metadata accessor for CatalogStack.CollectionView);
  v39 = v21 + v25;
  v40 = v72;
  sub_10005B704(a2, v72, type metadata accessor for CatalogStack.CollectionView);
  v41 = v77;
  v42 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v77, v82, v73);
  v43 = *(unsigned __int8 *)(v71 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = v44 + v9;
  v46 = v43 | 7;
  v47 = *(unsigned __int8 *)(v5 + 80);
  v71 = v30;
  v48 = v42;
  v49 = (v44 + v9 + v47) & ~v47;
  v50 = swift_allocObject(&unk_1010D4C18, v49 + v76, v46 | v47);
  sub_10005B6C0(v40, v50 + v44, type metadata accessor for CatalogStack.CollectionView);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v50 + v49, v41, v48);
  v51 = v71;
  v52 = v75;
  sub_10005B704(v71, v75, type metadata accessor for CatalogStack.CollectionView);
  v53 = swift_allocObject(&unk_1010D4C40, v45, v46);
  sub_10005B6C0(v52, v53 + v44, type metadata accessor for CatalogStack.CollectionView);
  KeyPath = swift_getKeyPath(&unk_100EC7A20);
  v55 = GeometryProxy.size.getter(KeyPath);
  v57 = v56;
  LOBYTE(v45) = v69 & 1;
  LOBYTE(v40) = (*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v51 + 16)) + 0x2B0))();
  v58 = swift_getKeyPath(&unk_100EC7A48);
  *(_DWORD *)((char *)&v84 + 1) = *(_DWORD *)v95;
  DWORD1(v84) = *(_DWORD *)&v95[3];
  *(_DWORD *)((char *)&v87 + 10) = v93;
  HIWORD(v87) = v94;
  *(_QWORD *)&v83 = v74;
  *((_QWORD *)&v83 + 1) = v70;
  LOBYTE(v84) = v45;
  *((_QWORD *)&v84 + 1) = sub_10066232C;
  *(_QWORD *)&v85 = v50;
  *((_QWORD *)&v85 + 1) = sub_1006624E0;
  *(_QWORD *)&v86 = v53;
  *((_QWORD *)&v86 + 1) = sub_10065ACC4;
  *(_QWORD *)&v87 = 0;
  WORD4(v87) = 1;
  *(double *)&v88 = v39;
  *((double *)&v88 + 1) = v27 + 44.0;
  *(double *)&v89 = v29 + 44.0;
  *((double *)&v89 + 1) = v32 + 44.0;
  *(_QWORD *)&v90 = KeyPath;
  *((double *)&v90 + 1) = v55;
  *(_QWORD *)&v91 = v57;
  *((_QWORD *)&v91 + 1) = v58;
  v92 = v40;
  __chkstk_darwin(v58);
  *(&v67 - 2) = v51;
  v59 = sub_100007E8C(&qword_1011C07E8);
  v60 = sub_100007E8C(&qword_1011C07F0);
  v61 = sub_100662544();
  v62 = sub_100044B54(&qword_1011C0830);
  v63 = sub_100049F28(&qword_1011C0838, &qword_1011C0830, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  *(_QWORD *)&v96[0] = v62;
  *((_QWORD *)&v96[0] + 1) = v63;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v96, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v65 = v78;
  View.toolbar<A>(content:)(sub_10066253C, &v67 - 4, v59, v60, v61, OpaqueTypeConformance2);
  v96[6] = v89;
  v96[7] = v90;
  v96[8] = v91;
  v97 = v92;
  v96[2] = v85;
  v96[3] = v86;
  v96[4] = v87;
  v96[5] = v88;
  v96[0] = v83;
  v96[1] = v84;
  sub_100662664((uint64_t)v96);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v79 + 32))(v81, v65, v80);
}

double sub_10065A600(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  double v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v26;

  v4 = v3;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CatalogStack.CollectionView(0);
  sub_100824BE4((uint64_t)v15);
  v16 = sub_100659AB4((uint64_t)v15);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
  v17 = 0.0;
  if ((v16 & 1) != 0)
  {
    v18 = *(_QWORD *)(v4 + 160);
    v19 = *(_BYTE *)(v4 + 168);
    sub_10006B3F8(v18, v19);
    v20 = sub_10082563C(v18, v19);
    sub_10006B604(v18, v19);
    if ((static Visibility.== infix(_:_:)(v20, 2) & 1) != 0 && (a3 & 1) == 0)
    {
      (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v4 + 16)) + 0x400))();
      v21 = type metadata accessor for GenericMusicItem(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1
        || (sub_10004A160((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1011A20D0),
            v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v9, v21),
            v24 = enum case for GenericMusicItem.radioShow(_:),
            (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21),
            v23 != v24))
      {
        sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
        if (*(double *)&a2 + -303.0 > 0.0)
          return *(double *)&a2 + -303.0;
        else
          return 0.0;
      }
      else
      {
        sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
      }
    }
  }
  return v17;
}

uint64_t sub_10065A848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = type metadata accessor for CatalogStack.HeaderView(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(id *)(a1 + 16);
  GeometryProxy.size.getter(v7);
  *v6 = v7;
  v6[1] = v8;
  v9 = (_QWORD *)((char *)v6 + *(int *)(v4 + 24));
  *v9 = swift_getKeyPath(&unk_100EC7730);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  v11 = swift_storeEnumTagMultiPayload(v9, v10, 0);
  LOBYTE(v9) = static Edge.Set.horizontal.getter(v11);
  v12 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10005B704((uint64_t)v6, a2, type metadata accessor for CatalogStack.HeaderView);
  v19 = a2 + *(int *)(sub_100007E8C(&qword_1011C0880) + 36);
  *(_BYTE *)v19 = (_BYTE)v9;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_10005B748((uint64_t)v6, type metadata accessor for CatalogStack.HeaderView);
}

uint64_t sub_10065A980@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v51 = a2;
  v52 = a3;
  v46 = a1;
  v4 = sub_100007E8C(&qword_1011AA020);
  __chkstk_darwin(v4);
  v53 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011C0868);
  __chkstk_darwin(v49);
  v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011C0870);
  __chkstk_darwin(v50);
  v48 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006554EC(a1, (uint64_t)&v54);
  v9 = v54;
  v8 = v55;
  v41 = v55;
  v10 = v56;
  v11 = v57;
  v42 = v56;
  v12 = v58;
  v45 = v59;
  v13 = v60;
  v44 = v61;
  JSViewModelKind.innerViewModel.getter(a1);
  v15 = v14;
  v16 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x98))();
  v43 = v16;
  v18 = v17;

  KeyPath = swift_getKeyPath(&unk_100EC76E0);
  v54 = v9;
  v55 = v8;
  v56 = v10;
  v57 = v11;
  v20 = v45;
  v58 = v12;
  v59 = v45;
  v60 = v13;
  LOBYTE(v8) = v44;
  v61 = v44;
  v62 = KeyPath;
  v63 = v16;
  v64 = v18;
  v21 = v46;
  sub_1002BCEA8(v46);
  sub_1002BD10C(v9, v41, v42, v11, v12, v20, v13, (char)v8);
  swift_release();
  sub_1000822B4(v43, v18);
  v22 = swift_getKeyPath(&unk_100EC7AD0);
  JSViewModelKind.innerViewModel.getter(v21);
  v24 = v23;
  v26 = *(_QWORD *)&v23[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier];
  v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8];
  swift_bridgeObjectRetain();

  v27 = v53;
  v28 = v47;
  sub_10004A160(v53, v47, &qword_1011AA020);
  v29 = (uint64_t *)(v28 + *(int *)(v49 + 36));
  *v29 = v22;
  v29[1] = v26;
  v29[2] = v25;
  sub_10004FF60(v27, &qword_1011AA020);
  v30 = swift_getKeyPath(&unk_100EC7AF8);
  v31 = *(_QWORD *)(v51 + *(int *)(type metadata accessor for CatalogStack.CollectionView(0) + 44));
  v32 = v48;
  sub_10004A160(v28, v48, &qword_1011C0868);
  v33 = (uint64_t *)(v32 + *(int *)(v50 + 36));
  *v33 = v30;
  v33[1] = v31;
  swift_retain();
  sub_10004FF60(v28, &qword_1011C0868);
  JSViewModelKind.innerViewModel.getter(v21);
  v35 = v34;
  v37 = *(_QWORD *)&v34[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier];
  v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8];
  swift_bridgeObjectRetain();

  v38 = v52;
  sub_10004A160(v32, v52, &qword_1011C0870);
  v39 = (_QWORD *)(v38 + *(int *)(sub_100007E8C(&qword_1011C0878) + 52));
  *v39 = v37;
  v39[1] = v36;
  return sub_10004FF60(v32, &qword_1011C0870);
}

uint64_t sub_10065ACC4(unint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) != 1)
    return 0;
  result = 0;
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 0xFuLL:
    case 0x11uLL:
    case 0x1FuLL:
    case 0x26uLL:
      result = 0x4034000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10065AD28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011C0830);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.navigationBarTrailing.getter(v9);
  v15 = a1;
  v10 = sub_100007E8C(&qword_1011C0840);
  v11 = sub_100049F28(&qword_1011C0848, &qword_1011C0840, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  ToolbarItemGroup.init(placement:content:)(v4, sub_1006626E4, v14, v10, v11);
  v12 = sub_100049F28(&qword_1011C0838, &qword_1011C0830, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10065AE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  ValueMetadata *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t KeyPath;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v96[2];
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  ValueMetadata *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char v137;
  __int128 v138;

  v124 = a2;
  v119 = type metadata accessor for ControlSize(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ButtonBorderShape(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_1011A0D30);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C(&qword_1011A0D38);
  __chkstk_darwin(v103);
  v116 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for BorderedButtonStyle(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for ButtonMenuStyle(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100007E8C(&qword_1011A05A8);
  v98 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v97 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100007E8C(&qword_1011A05B0);
  v104 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v125 = (char *)v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011A0D40);
  __chkstk_darwin(v105);
  v106 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A0D10);
  __chkstk_darwin(v12);
  v123 = (uint64_t)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v121 = (char *)v96 - v15;
  __chkstk_darwin(v16);
  v122 = (uint64_t)v96 - v17;
  v18 = sub_100007E8C(&qword_1011C0850);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v22);
  v24 = (char *)v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011C0858);
  __chkstk_darwin(v29);
  v120 = (uint64_t)v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v127 = (uint64_t)v96 - v33;
  v34 = a1;
  (*(void (**)(__n128))((swift_isaMask & **(_QWORD **)(a1 + 16)) + 0x418))(v32);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v24, 1, v35) == 1)
  {
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v36 + 88))(v24, v35) == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v36 + 96))(v24, v35);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
      v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 16))(v21, v28, v25);
      BorderedButtonStyle.init()(v37);
      v38 = type metadata accessor for MusicLibrary(0);
      *(_QWORD *)&v21[*(int *)(v18 + 52)] = static MusicLibrary.shared.getter(v38);
      v39 = &v21[*(int *)(v18 + 60)];
      v40 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v41 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      *(_QWORD *)v39 = EnvironmentObject.init()(v40, v41);
      *((_QWORD *)v39 + 1) = v42;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      sub_100065228((uint64_t)v21, v127, &qword_1011C0850);
      v43 = 0;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v35);
  }
  v43 = 1;
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v127, v43, 1, v18);
  v44 = *(_QWORD *)(v34 + 32);
  if (v44)
  {
    v45 = *(_BYTE *)(v34 + 80);
    v46 = *(_QWORD *)(v34 + 72);
    v47 = *(_OWORD *)(v34 + 56);
    v48 = *(_OWORD *)(v34 + 40);
    v132 = *(_QWORD *)(v34 + 24);
    v133 = v44;
    v134 = v48;
    v135 = v47;
    v136 = v46;
    v137 = v45 & 1;
    v138 = *(_OWORD *)(v34 + 88);
    v96[1] = v34;
    v49 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v50 = sub_100007E8C(&qword_1011A05F8);
    v51 = sub_1000E41D0();
    v52 = v97;
    v53 = ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v49, v97, v50, v51);
    v54 = v99;
    ButtonMenuStyle.init()(v53);
    v55 = sub_1000E3EE4();
    v128 = &type metadata for ActionType;
    v129 = v50;
    v130 = v55;
    v131 = v51;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v57 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v58 = (ValueMetadata *)v100;
    v59 = v102;
    View.menuStyle<A>(_:)(v54, v100, v102, OpaqueTypeConformance2, v57);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v54, v59);
    v60 = (*(uint64_t (**)(char *, ValueMetadata *))(v98 + 8))(v52, v58);
    v61 = v113;
    BorderedButtonStyle.init()(v60);
    v128 = v58;
    v129 = v59;
    v130 = OpaqueTypeConformance2;
    v131 = v57;
    v62 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v63 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v64 = v107;
    v65 = v115;
    v66 = View.buttonStyle<A>(_:)(v61, v126, v115, v62, v63);
    v67 = v110;
    static ButtonBorderShape.circle.getter(v66);
    KeyPath = swift_getKeyPath(&unk_100EC7A70);
    v69 = (uint64_t)v116;
    v70 = (uint64_t *)&v116[*(int *)(v103 + 36)];
    v71 = sub_100007E8C(&qword_1011A0610);
    v72 = v111;
    v73 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))((char *)v70 + *(int *)(v71 + 28), v67, v112);
    *v70 = KeyPath;
    v74 = v108;
    v75 = v109;
    (*(void (**)(uint64_t, char *, uint64_t))(v108 + 16))(v69, v64, v109);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v73);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v75);
    v76 = v118;
    v77 = v117;
    v78 = v119;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v117, enum case for ControlSize.regular(_:), v119);
    v79 = swift_getKeyPath(&unk_100EC7AA0);
    v80 = v105;
    v81 = (uint64_t)v106;
    v82 = (uint64_t *)&v106[*(int *)(v105 + 36)];
    v83 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))((char *)v82 + *(int *)(v83 + 28), v77, v78);
    *v82 = v79;
    sub_10004A160(v69, v81, &qword_1011A0D38);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    sub_10004FF60(v69, &qword_1011A0D38);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v61, v65);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v125, v126);
    v84 = sub_1000F3C70();
    swift_retain();
    v85 = (uint64_t)v121;
    View.shareSheetPresenting(_:)(v86, v80, v84);
    swift_release();
    sub_10004FF60(v81, &qword_1011A0D40);
    v87 = sub_100007E8C(&qword_1011A0D48);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v85, 0, 1, v87);
  }
  else
  {
    v88 = sub_100007E8C(&qword_1011A0D48);
    v85 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v121, 1, 1, v88);
  }
  v89 = v122;
  sub_100065228(v85, v122, &qword_1011A0D10);
  v90 = v127;
  v91 = v120;
  sub_10004A160(v127, v120, &qword_1011C0858);
  v92 = v123;
  sub_10004A160(v89, v123, &qword_1011A0D10);
  v93 = v124;
  sub_10004A160(v91, v124, &qword_1011C0858);
  v94 = sub_100007E8C(&qword_1011C0860);
  sub_10004A160(v92, v93 + *(int *)(v94 + 48), &qword_1011A0D10);
  sub_10004FF60(v89, &qword_1011A0D10);
  sub_10004FF60(v90, &qword_1011C0858);
  sub_10004FF60(v92, &qword_1011A0D10);
  return sub_10004FF60(v91, &qword_1011C0858);
}

uint64_t sub_10065B944@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_10005B704(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CatalogStack.CollectionView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1010D4BF0, v7 + v5, v6 | 7);
  result = sub_10005B6C0((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for CatalogStack.CollectionView);
  *a2 = sub_100662148;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

int64x2_t sub_10065B9F8()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4071800000000000uLL);
  xmmword_1011C0518 = (__int128)result;
  return result;
}

int64x2_t sub_10065BA14()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4066800000000000uLL);
  xmmword_1011C0528 = (__int128)result;
  return result;
}

uint64_t sub_10065BA30@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  BOOL v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  __n128 v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE v127[32];
  _OWORD v128[3];

  v126 = a2;
  v3 = type metadata accessor for TaskPriority(0);
  v124 = *(_QWORD *)(v3 - 8);
  v125 = v3;
  __chkstk_darwin(v3);
  v122 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A2F70);
  __chkstk_darwin(v5);
  v118 = (uint64_t *)((char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011A2F78);
  __chkstk_darwin(v7);
  v120 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011C0B88);
  __chkstk_darwin(v119);
  v123 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v121 = (uint64_t)&v98 - v11;
  v111 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v13);
  v106 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v15);
  v99 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v17);
  v101 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v100 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011C0B90);
  __chkstk_darwin(v20);
  v108 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011C0B98);
  __chkstk_darwin(v104);
  v107 = (uint64_t)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011C0BA0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v105 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0);
  v115 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v116 = (uint64_t)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v98 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v98 - v30;
  v112 = v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v98 - v34;
  v36 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v36);
  v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C(&qword_1011C0BA8);
  __chkstk_darwin(v39);
  v117 = (uint64_t)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (char *)&v98 - v42;
  sub_100824BE4((uint64_t)v38);
  v44 = sub_100659AB4((uint64_t)v38);
  sub_10004FF60((uint64_t)v38, (uint64_t *)&unk_1011A33B8);
  sub_10005B704((uint64_t)a1, (uint64_t)v35, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  if ((v44 & 1) != 0)
  {
    sub_10005B748((uint64_t)v35, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    sub_10005B704((uint64_t)a1, (uint64_t)v31, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    goto LABEL_5;
  }
  v45 = sub_10065C518();
  sub_10005B748((uint64_t)v35, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  sub_10005B704((uint64_t)a1, (uint64_t)v31, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  if (!v45)
  {
LABEL_5:
    v47 = &v31[*(int *)(v24 + 24)];
    v48 = *(_QWORD *)v47;
    v49 = v47[8];
    sub_10006B3F8(*(_QWORD *)v47, v49);
    v50 = sub_10082563C(v48, v49);
    sub_10006B604(v48, v49);
    LOBYTE(v48) = static Visibility.== infix(_:_:)(v50, 1);
    sub_10005B704((uint64_t)v31, (uint64_t)v28, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    if ((v48 & 1) != 0)
    {
      v51 = sub_10065C518();
      sub_10005B748((uint64_t)v31, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
      v46 = sub_10005B748((uint64_t)v28, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
      if (v51)
        goto LABEL_7;
    }
    else
    {
      sub_10005B748((uint64_t)v31, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
      sub_10005B748((uint64_t)v28, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    }
    v73 = 1;
    v72 = v114;
    goto LABEL_12;
  }
  v46 = sub_10005B748((uint64_t)v31, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
LABEL_7:
  v52 = (uint64_t)v99;
  (*(void (**)(uint64_t))((swift_isaMask & **a1) + 0x400))(v46);
  v53 = v101;
  sub_1006550C0(v52, v101);
  sub_10004FF60(v52, (uint64_t *)&unk_1011A20D0);
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v55 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v106, 1, 10, v54);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v127);
  v56 = v110;
  v57 = (uint64_t)v109;
  v58 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v109, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v111);
  v59 = v100;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v53, v55, (uint64_t)v127, v57, v100);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v58);
  sub_10005B748(v55, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011A3E10);
  v60 = v102;
  v61 = (uint64_t)v108;
  v62 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v108, v59, v103);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v59, v62);
  if (qword_10119C4D0 != -1)
    v63 = swift_once(&qword_10119C4D0, sub_10065B9F8);
  v65 = *((_QWORD *)&xmmword_1011C0518 + 1);
  v64 = xmmword_1011C0518;
  v66 = static Alignment.center.getter(v63);
  _FrameLayout.init(width:height:alignment:)(v128, v64, 0, v65, 0, v66, v67);
  v68 = v107;
  sub_10004A160(v61, v107, &qword_1011C0B90);
  v69 = (_OWORD *)(v68 + *(int *)(v104 + 36));
  v70 = v128[1];
  *v69 = v128[0];
  v69[1] = v70;
  v69[2] = v128[2];
  sub_10004FF60(v61, &qword_1011C0B90);
  v71 = v105;
  sub_10004A160(v68, v105, &qword_1011C0B98);
  v72 = v114;
  *(_WORD *)(v71 + *(int *)(v114 + 36)) = 256;
  sub_10004FF60(v68, &qword_1011C0B98);
  sub_100065228(v71, (uint64_t)v43, &qword_1011C0BA0);
  v73 = 0;
LABEL_12:
  v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v43, v73, 1, v72);
  v75 = static VerticalAlignment.center.getter(v74);
  v76 = (uint64_t)v118;
  *v118 = v75;
  *(_QWORD *)(v76 + 8) = 0x4024000000000000;
  *(_BYTE *)(v76 + 16) = 0;
  v77 = sub_100007E8C(&qword_1011C0BB0);
  v78 = sub_10065C72C(a1, v76 + *(int *)(v77 + 44));
  v79 = static Alignment.leading.getter(v78);
  v80 = v120;
  sub_10014B454(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v120, 0.0, 1, 0.0, 1, v79, v81);
  sub_10004FF60(v76, &qword_1011A2F70);
  v82 = v116;
  sub_10005B704((uint64_t)a1, v116, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  v83 = *(unsigned __int8 *)(v115 + 80);
  v84 = (v83 + 16) & ~v83;
  v85 = swift_allocObject(&unk_1010D4D10, v84 + v112, v83 | 7);
  sub_10005B6C0(v82, v85 + v84, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  v86 = v122;
  static TaskPriority.userInitiated.getter(v87);
  v88 = (uint64_t)v123;
  v89 = &v123[*(int *)(v119 + 36)];
  v90 = type metadata accessor for _TaskModifier(0);
  v92 = v124;
  v91 = v125;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(&v89[*(int *)(v90 + 20)], v86, v125);
  *(_QWORD *)v89 = &unk_1011C0BC0;
  *((_QWORD *)v89 + 1) = v85;
  sub_10004A160(v80, v88, &qword_1011A2F78);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v91);
  sub_10004FF60(v80, &qword_1011A2F78);
  v93 = v121;
  sub_100065228(v88, v121, &qword_1011C0B88);
  v94 = v117;
  sub_10004A160((uint64_t)v43, v117, &qword_1011C0BA8);
  sub_10004A160(v93, v88, &qword_1011C0B88);
  v95 = v126;
  sub_10004A160(v94, v126, &qword_1011C0BA8);
  v96 = sub_100007E8C(&qword_1011C0BC8);
  sub_10004A160(v88, v95 + *(int *)(v96 + 48), &qword_1011C0B88);
  sub_10004FF60(v93, &qword_1011C0B88);
  sub_10004FF60((uint64_t)v43, &qword_1011C0BA8);
  sub_10004FF60(v88, &qword_1011C0B88);
  return sub_10004FF60(v94, &qword_1011C0BA8);
}

BOOL sub_10065C518()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(__n128);
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AA8D0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x400);
  v16 = v15(v12);
  static Artwork.CropStyle.specificRectangle.getter(v16);
  sub_100657278((uint64_t)v10, (uint64_t)v7, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v17 = type metadata accessor for MotionViewModel(0);
  v18 = 1;
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17);
  v20 = sub_10004FF60((uint64_t)v14, &qword_1011AA8D0);
  if (v19 == 1)
  {
    ((void (*)(uint64_t))v15)(v20);
    sub_1006550C0((uint64_t)v10, v3);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    v21 = type metadata accessor for ArtworkImage.ViewModel(0);
    v18 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v3, 1, v21) != 1;
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A3E10);
  }
  return v18;
}

uint64_t sub_10065C72C@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD **v156;
  uint64_t v157;
  _QWORD v158[2];

  v154 = a2;
  v3 = type metadata accessor for IconOnlyLabelStyle(0);
  v148 = *(_QWORD *)(v3 - 8);
  v149 = v3;
  __chkstk_darwin(v3);
  v147 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ControlSize(0);
  v145 = *(_QWORD *)(v5 - 8);
  v146 = v5;
  __chkstk_darwin(v5);
  v144 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for ButtonBorderShape(0);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v135 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100007E8C(&qword_1011C0BD8);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011C0BE0);
  __chkstk_darwin(v130);
  v143 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for BorderedButtonStyle(0);
  v142 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v141 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C0BE8);
  __chkstk_darwin(v11);
  v128 = (uint64_t)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C(&qword_1011C0BF0);
  __chkstk_darwin(v129);
  v131 = (uint64_t)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011C0BF8);
  __chkstk_darwin(v137);
  v139 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C0C00);
  v152 = *(_QWORD *)(v15 - 8);
  v153 = v15;
  __chkstk_darwin(v15);
  v136 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v126 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v20);
  v22 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0);
  __chkstk_darwin(v23);
  v25 = (_QWORD **)((char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_100007E8C(&qword_1011C09B0);
  __chkstk_darwin(v26);
  v127 = (uint64_t)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v125 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v125 - v32;
  v34 = sub_100007E8C(&qword_1011B4D20);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v150 = (uint64_t)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100007E8C(&qword_1011C0C08);
  __chkstk_darwin(v37);
  v155 = (uint64_t)&v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v39);
  v156 = a1;
  v157 = (uint64_t)&v125 - v41;
  v42 = (*(unsigned __int8 (**)(__n128))((swift_isaMask & **a1) + 0x2B0))(v40);
  if (!v42)
  {
    v43 = 0x746C7561666564;
LABEL_5:
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, 0xE700000000000000, 0x747369747261, 0xE600000000000000, 0);
    v45 = swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
      goto LABEL_16;
    goto LABEL_8;
  }
  if (v42 == 1)
  {
    v43 = 0x656C69666F7270;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  v46 = (uint64_t)v156;
  v47 = sub_100007E8C(&qword_1011C0AC8);
  State.wrappedValue.getter(v30, v47);
  sub_10005B704(v46, (uint64_t)v25, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v48(v30, 1, v34) == 1)
  {
    (*(void (**)(void))((swift_isaMask & **v25) + 0x400))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v22, 1, v17))
    {
      sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A20D0);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v49(v33, 1, 1, v34);
    }
    else
    {
      v50 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      v50(v126, v22, v17);
      sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A20D0);
      v51 = v126;
      v50(v33, v126, v17);
      v52 = &v33[*(int *)(v34 + 36)];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v52, 1, 1, v17);
      v53 = sub_100007E8C(&qword_10119F7C8);
      swift_storeEnumTagMultiPayload(v52, v53, 0);
      v33[*(int *)(v34 + 40)] = 2;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v17);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v49(v33, 0, 1, v34);
    }
    sub_10004FF60((uint64_t)v30, &qword_1011C09B0);
  }
  else
  {
    sub_100065228((uint64_t)v30, (uint64_t)v33, &qword_1011B4D20);
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v49(v33, 0, 1, v34);
  }
  sub_10005B748((uint64_t)v25, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
  if (v48(v33, 1, v34) != 1)
  {
    v59 = v150;
    sub_100065228((uint64_t)v33, v150, &qword_1011B4D20);
    v60 = v59;
    v61 = v127;
    sub_10004A160(v60, v127, &qword_1011B4D20);
    v49((char *)v61, 0, 1, v34);
    v62 = v128;
    sub_10083E198(v61, 0, 0, v128);
    sub_10004FF60(v61, &qword_1011C09B0);
    v63 = v131;
    sub_10004A160(v62, v131, &qword_1011C0BE8);
    v64 = v129;
    *(_WORD *)(v63 + *(int *)(v129 + 36)) = 257;
    v65 = sub_10004FF60(v62, &qword_1011C0BE8);
    v66 = v141;
    BorderedButtonStyle.init()(v65);
    v67 = sub_100665220();
    v68 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v69 = v132;
    v70 = View.buttonStyle<A>(_:)(v66, v64, v151, v67, v68);
    v71 = v135;
    static ButtonBorderShape.circle.getter(v70);
    KeyPath = swift_getKeyPath(&unk_100EC7A70);
    v73 = (uint64_t)v143;
    v74 = (uint64_t *)&v143[*(int *)(v130 + 36)];
    v75 = sub_100007E8C(&qword_1011A0610);
    v76 = v138;
    v77 = v140;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))((char *)v74 + *(int *)(v75 + 28), v71, v140);
    *v74 = KeyPath;
    v78 = v133;
    v79 = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v133 + 16))(v73, v69, v134);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v77);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v69, v79);
    v81 = v144;
    v80 = v145;
    v82 = v146;
    (*(void (**)(char *, _QWORD, uint64_t))(v145 + 104))(v144, enum case for ControlSize.large(_:), v146);
    v83 = swift_getKeyPath(&unk_100EC7AA0);
    v84 = v137;
    v85 = (uint64_t)v139;
    v86 = (uint64_t *)&v139[*(int *)(v137 + 36)];
    v87 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))((char *)v86 + *(int *)(v87 + 28), v81, v82);
    *v86 = v83;
    sub_10004A160(v73, v85, &qword_1011C0BE0);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
    sub_10004FF60(v73, &qword_1011C0BE0);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v66, v151);
    v88 = sub_10004FF60(v63, &qword_1011C0BF0);
    v89 = v147;
    IconOnlyLabelStyle.init()(v88);
    v90 = sub_1006652A4();
    v91 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
    v92 = v136;
    v93 = v149;
    View.labelStyle<A>(_:)(v89, v84, v149, v90, v91);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v89, v93);
    sub_10004FF60(v85, &qword_1011C0BF8);
    sub_10004FF60(v150, &qword_1011B4D20);
    v58 = v152;
    v55 = v153;
    v57 = v157;
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v157, v92, v153);
    v54 = 0;
    v56 = v154;
    goto LABEL_18;
  }
  sub_10004FF60((uint64_t)v33, &qword_1011C09B0);
LABEL_16:
  v54 = 1;
  v55 = v153;
  v56 = v154;
  v57 = v157;
  v58 = v152;
LABEL_18:
  v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v58 + 56))(v57, v54, 1, v55, v45);
  v158[0] = (*(uint64_t (**)(uint64_t))((swift_isaMask & **v156) + 0x190))(v94);
  v158[1] = v95;
  v96 = sub_100055B68();
  v97 = Text.init<A>(_:)(v158, &type metadata for String, v96);
  v99 = v98;
  v101 = v100;
  v103 = v102 & 1;
  LODWORD(v158[0]) = static HierarchicalShapeStyle.primary.getter(v104);
  v105 = Text.foregroundStyle<A>(_:)(v158, v97, v99, v103, v101, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v107 = v106;
  v109 = v108;
  v111 = v110 & 1;
  sub_100055BAC(v97, v99, v103);
  swift_bridgeObjectRelease();
  v113 = static Font.title2.getter(v112);
  v114 = Text.font(_:)(v113, v105, v107, v111, v109);
  v116 = v115;
  v118 = v117;
  v120 = v119;
  swift_release();
  sub_100055BAC(v105, v107, v111);
  swift_bridgeObjectRelease();
  v121 = v157;
  v122 = v155;
  sub_10004A160(v157, v155, &qword_1011C0C08);
  sub_10004A160(v122, v56, &qword_1011C0C08);
  v123 = v56 + *(int *)(sub_100007E8C(&qword_1011C0C10) + 48);
  *(_QWORD *)v123 = v114;
  *(_QWORD *)(v123 + 8) = v116;
  *(_BYTE *)(v123 + 16) = v118 & 1;
  *(_QWORD *)(v123 + 24) = v120;
  sub_100055BBC(v114, v116, v118 & 1);
  swift_bridgeObjectRetain();
  sub_10004FF60(v121, &qword_1011C0C08);
  sub_100055BAC(v114, v116, v118 & 1);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v122, &qword_1011C0C08);
}

uint64_t sub_10065D338(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v1[2] = a1;
  v2 = type metadata accessor for GenericMusicItem(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011C09B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[6] = swift_task_alloc(v4);
  v1[7] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artist(0);
  v1[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[11] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[12] = swift_task_alloc(v9);
  v1[13] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v1[15] = v12;
  v1[16] = v13;
  return swift_task_switch(sub_10065D480, v12, v13);
}

uint64_t sub_10065D480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  (*(void (**)(void))((swift_isaMask & ***(_QWORD ***)(v0 + 16)) + 0x400))();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_10004FF60(v4, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v5 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 88))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 24));
    *(_DWORD *)(v0 + 160) = v5;
    if (v5 == enum case for GenericMusicItem.artist(_:))
    {
      v6 = *(_QWORD *)(v0 + 104);
      v7 = *(_QWORD *)(v0 + 80);
      v8 = *(_QWORD *)(v0 + 88);
      v9 = *(_QWORD *)(v0 + 72);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 96))(v9, *(_QWORD *)(v0 + 24));
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
      *(_QWORD *)(v0 + 136) = v10;
      v10(v6, v9, v7);
      v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v12 = swift_allocObject(v11, 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EA7A90;
      sub_100007E8C(&qword_1011C0BD0);
      v13 = static PartialMusicProperty<A>.defaultPlayableItem.getter();
      *(_QWORD *)(v12 + 32) = v13;
      specialized Array._endMutation()(v13);
      *(_QWORD *)(v0 + 144) = v12;
      v14 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
      *(_QWORD *)(v0 + 152) = v14;
      *v14 = v0;
      v14[1] = sub_10065D69C;
      return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 64), v12, *(_QWORD *)(v0 + 80), &protocol witness table for Artist);
    }
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 24);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v16, v17, v19);
  }
  v20 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 72);
  v24 = *(_QWORD *)(v0 + 48);
  v23 = *(_QWORD *)(v0 + 56);
  v25 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065D69C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 152));
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 120);
    v4 = *(_QWORD *)(v2 + 128);
    v5 = sub_10065D714;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 120);
    v4 = *(_QWORD *)(v2 + 128);
    v5 = sub_10065D7D8;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10065D714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(v4, 1, 1, v2, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_10004FF60(v4, (uint64_t *)&unk_1011A3FB0);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065D7D8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v24 = *(_DWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 48);
  v26 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v10 = swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v3 + 56))(v6, 0, 1, v4, v10);
  v1(v2, v6, v4);
  v11 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, v24, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v7, v9);
  v12 = sub_100007E8C(&qword_1011B4D20);
  v13 = v5 + *(int *)(v12 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v9);
  v14 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v13, v14, 0);
  *(_BYTE *)(v5 + *(int *)(v12 + 40)) = 2;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0);
  sub_10004A160(v5, v25, &qword_1011C09B0);
  v15 = sub_100007E8C(&qword_1011C0AC8);
  State.wrappedValue.setter(v25, v15);
  sub_10004FF60(v5, &qword_1011C09B0);
  v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v16(v2, v4);
  v16(v26, v4);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 48);
  v20 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065D9F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100007E8C(&qword_1011A2F60);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v6);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v7 = sub_100007E8C(&qword_1011C0B80);
  v8 = sub_10065BA30(v1, (uint64_t)&v5[*(int *)(v7 + 44)]);
  v9 = static Alignment.center.getter(v8);
  sub_10014B3F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10);
  return sub_10004FF60((uint64_t)v5, &qword_1011A2F60);
}

double sub_10065DAE0@<D0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t KeyPath;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  double result;
  __int128 v39;
  _OWORD v40[9];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  __int16 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  *(_QWORD *)&v47 = (*(uint64_t (**)(void))((swift_isaMask & **v1) + 0x190))();
  *((_QWORD *)&v47 + 1) = v3;
  v4 = sub_100055B68();
  v5 = Text.init<A>(_:)(&v47, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v47) = static HierarchicalShapeStyle.primary.getter(v12);
  v13 = Text.foregroundStyle<A>(_:)(&v47, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_100055BAC(v5, v7, v11);
  v20 = swift_bridgeObjectRelease();
  v21 = static Font.largeTitle.getter(v20);
  v22 = Text.font(_:)(v21, v13, v15, v19, v17);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release();
  v26 &= 1u;
  sub_100055BAC(v13, v15, v19);
  swift_bridgeObjectRelease();
  v42 = v22;
  v43 = v24;
  v44 = v26;
  v45 = v28;
  v46 = 256;
  v30 = static Alignment.leading.getter(v29);
  sub_10014B4B8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v40, v32, 0.0, 1, 0.0, 1, v30, v31);
  sub_100055BAC(v22, v24, v26);
  swift_bridgeObjectRelease();
  v53 = v40[6];
  v54 = v40[7];
  v55 = v40[8];
  v56 = v41;
  v49 = v40[2];
  v50 = v40[3];
  v51 = v40[4];
  v52 = v40[5];
  v47 = v40[0];
  v48 = v40[1];
  KeyPath = swift_getKeyPath(&unk_100EC7BE8);
  LOBYTE(v40[0]) = 0;
  v34 = v54;
  *(_OWORD *)(a1 + 96) = v53;
  *(_OWORD *)(a1 + 112) = v34;
  *(_OWORD *)(a1 + 128) = v55;
  v35 = v56;
  v36 = v50;
  *(_OWORD *)(a1 + 32) = v49;
  *(_OWORD *)(a1 + 48) = v36;
  v37 = v52;
  *(_OWORD *)(a1 + 64) = v51;
  *(_OWORD *)(a1 + 80) = v37;
  result = *(double *)&v47;
  v39 = v48;
  *(_OWORD *)a1 = v47;
  *(_OWORD *)(a1 + 16) = v39;
  *(_QWORD *)(a1 + 144) = v35;
  *(_QWORD *)(a1 + 152) = KeyPath;
  *(_QWORD *)(a1 + 160) = 2;
  *(_BYTE *)(a1 + 168) = v40[0];
  return result;
}

uint64_t sub_10065DD0C@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  id *v31;
  _QWORD *v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE v112[432];
  _BYTE v113[288];
  _BYTE v114[296];
  _BYTE v115[424];
  _QWORD v116[54];
  _BYTE v117[425];
  __int128 v118;
  _OWORD v119[19];

  v3 = sub_100007E8C(&qword_1011A2F50);
  __chkstk_darwin(v3);
  v99 = (uint64_t *)((char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = sub_100007E8C(&qword_1011A2F58);
  __chkstk_darwin(v103);
  v98 = (uint64_t)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v100 = (uint64_t)&v96 - v7;
  v101 = sub_100007E8C(&qword_1011C0990);
  __chkstk_darwin(v101);
  v102 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v9);
  v96 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v11);
  v97 = (uint64_t)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v104 = (char *)&v96 - v14;
  v107 = sub_100007E8C(&qword_1011C0998);
  __chkstk_darwin(v107);
  v105 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011C09A0);
  __chkstk_darwin(v106);
  v110 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C09A8);
  __chkstk_darwin(v17);
  v108 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011C09B0);
  __chkstk_darwin(v19);
  v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v96 - v23;
  v109 = type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0);
  __chkstk_darwin(v109);
  v26 = (uint64_t *)((char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v96 - v29;
  v31 = v1;
  v32 = *v1;
  v33 = (*(unsigned __int8 (**)(__n128))((swift_isaMask & *v32) + 0x2B0))(v28);
  v111 = a1;
  if (v33)
  {
    if (v33 != 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    v34 = 0x656C69666F7270;
  }
  else
  {
    v34 = 0x746C7561666564;
  }
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, 0xE700000000000000, 0x747369747261, 0xE600000000000000, 0);
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
LABEL_14:
    *v26 = v32;
    v57 = v109;
    v58 = sub_100007E8C(&qword_1011B4D20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v24, 1, 1, v58);
    sub_10004A160((uint64_t)v24, (uint64_t)v21, &qword_1011C09B0);
    v59 = v32;
    State.init(wrappedValue:)(v21, v19);
    sub_10004FF60((uint64_t)v24, &qword_1011C09B0);
    v60 = (char *)v26 + *(int *)(v57 + 24);
    *(_QWORD *)v60 = swift_getKeyPath(&unk_100EC7708);
    v60[8] = 0;
    v61 = (_QWORD *)((char *)v26 + *(int *)(v57 + 28));
    *v61 = swift_getKeyPath(&unk_100EC7730);
    v62 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    swift_storeEnumTagMultiPayload(v61, v62, 0);
    sub_10005B6C0((uint64_t)v26, (uint64_t)v30, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    v63 = v110;
    sub_10005B704((uint64_t)v30, v110, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    swift_storeEnumTagMultiPayload(v63, v106, 0);
    v64 = sub_100048748(&qword_1011C0A18, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView, (uint64_t)&unk_100EC7C34);
    v65 = sub_10015FD08(&qword_1011C0A20, &qword_1011C0998, (void (*)(void))sub_1006633E8, (void (*)(void))sub_1006634F0);
    v66 = v108;
    _ConditionalContent<>.init(storage:)(v63, v57, v107, v64, v65);
    sub_10005B748((uint64_t)v30, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView);
    v67 = sub_100007E8C(&qword_1011C09B8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);
    v68 = (uint64_t)v66;
    v69 = v111;
    return sub_100065228(v68, v69, &qword_1011C09A8);
  }
  if (sub_10065C518())
  {
    v36 = (uint64_t)v104;
    (*(void (**)(void))((swift_isaMask & *v32) + 0x400))();
    v37 = type metadata accessor for GenericMusicItem(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
    v40 = (uint64_t)v105;
    v41 = v31;
    if ((_DWORD)v39 != 1)
    {
      v42 = v97;
      sub_10004A160(v36, v97, (uint64_t *)&unk_1011A20D0);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v42, v37);
      if (v43 == enum case for GenericMusicItem.curator(_:)
        || v43 == enum case for GenericMusicItem.recordLabel(_:)
        || v43 == enum case for GenericMusicItem.socialProfile(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v37);
        sub_10004FF60(v36, (uint64_t *)&unk_1011A20D0);
        type metadata accessor for CatalogStack.HeaderView(0);
        v72 = v96;
        sub_100824BE4(v96);
        v73 = sub_100659AB4(v72);
        v74 = sub_10004FF60(v72, (uint64_t *)&unk_1011A33B8);
        v56 = v111;
        if ((v73 & 1) != 0)
        {
          v75 = static HorizontalAlignment.leading.getter(v74);
          sub_10065DAE0((uint64_t)&v118);
          *(_OWORD *)&v115[71] = v119[3];
          *(_OWORD *)&v115[55] = v119[2];
          *(_OWORD *)&v115[119] = v119[6];
          *(_OWORD *)&v115[135] = v119[7];
          *(_OWORD *)&v115[151] = v119[8];
          *(_OWORD *)&v115[160] = *(_OWORD *)((char *)&v119[8] + 9);
          *(_OWORD *)&v115[87] = v119[4];
          *(_OWORD *)&v115[103] = v119[5];
          *(_OWORD *)&v115[7] = v118;
          *(_OWORD *)&v115[23] = v119[0];
          *(_OWORD *)&v115[39] = v119[1];
          *(_OWORD *)((char *)&v116[16] + 1) = *(_OWORD *)&v115[112];
          *(_OWORD *)((char *)&v116[18] + 1) = *(_OWORD *)&v115[128];
          *(_OWORD *)((char *)&v116[20] + 1) = *(_OWORD *)&v115[144];
          *(_OWORD *)((char *)&v116[22] + 1) = *(_OWORD *)((char *)&v119[8] + 9);
          *(_OWORD *)((char *)&v116[8] + 1) = *(_OWORD *)&v115[48];
          *(_OWORD *)((char *)&v116[10] + 1) = *(_OWORD *)&v115[64];
          *(_OWORD *)((char *)&v116[12] + 1) = *(_OWORD *)&v115[80];
          *(_OWORD *)((char *)&v116[14] + 1) = *(_OWORD *)&v115[96];
          *(_OWORD *)((char *)&v116[2] + 1) = *(_OWORD *)v115;
          *(_OWORD *)((char *)&v116[4] + 1) = *(_OWORD *)&v115[16];
          v114[0] = 1;
          v116[0] = v75;
          v116[1] = 0;
          LOBYTE(v116[2]) = 1;
          *(_OWORD *)((char *)&v116[6] + 1) = *(_OWORD *)&v115[32];
          sub_1006635D4((uint64_t)v116);
        }
        else
        {
          v76 = static VerticalAlignment.center.getter(v74);
          sub_10065F3D4(v41, (uint64_t)v113);
          v114[288] = 1;
          memcpy(&v114[7], v113, 0x119uLL);
          v118 = (unint64_t)v76;
          LOBYTE(v119[0]) = 1;
          v77 = memcpy((char *)v119 + 1, v114, 0x120uLL);
          v78 = static Alignment.center.getter(v77);
          sub_10014B684(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v115, v80, 0.0, 1, 0.0, 1, v78, v79);
          sub_100663574((uint64_t)v113);
          memcpy(v116, v115, 0x1A8uLL);
          sub_1006635CC((uint64_t)v116);
        }
        sub_100065228((uint64_t)v116, (uint64_t)v112, &qword_1011C0A28);
        v81 = sub_100007E8C(&qword_1011C09E0);
        v82 = sub_100007E8C(&qword_1011C0A00);
        v83 = sub_10066346C();
        v84 = sub_100049F28(&qword_1011C09F8, &qword_1011C0A00, (uint64_t)&protocol conformance descriptor for VStack<A>);
        _ConditionalContent<>.init(storage:)(v112, v81, v82, v83, v84);
        v85 = v102;
        memcpy(v102, v117, 0x1A9uLL);
        swift_storeEnumTagMultiPayload(v85, v101, 0);
        v86 = sub_100007E8C(&qword_1011C09C8);
        v87 = sub_1006633E8();
        v88 = sub_1006634F0();
        _ConditionalContent<>.init(storage:)(v85, v86, v103, v87, v88);
        goto LABEL_21;
      }
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v42, v37);
    }
    v44 = static HorizontalAlignment.leading.getter(v39);
    v45 = (uint64_t)v99;
    *v99 = v44;
    *(_QWORD *)(v45 + 8) = 0;
    *(_BYTE *)(v45 + 16) = 1;
    v46 = sub_100007E8C(&qword_1011C09C0);
    v47 = sub_10065E848((uint64_t)v41, v45 + *(int *)(v46 + 44));
    v48 = static Alignment.center.getter(v47);
    v49 = v98;
    sub_10014B834(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v98, 0.0, 1, 0.0, 1, v48, v50);
    sub_10004FF60(v45, &qword_1011A2F50);
    v51 = v100;
    sub_100065228(v49, v100, &qword_1011A2F58);
    v52 = v102;
    sub_10004A160(v51, (uint64_t)v102, &qword_1011A2F58);
    swift_storeEnumTagMultiPayload(v52, v101, 1);
    v53 = sub_100007E8C(&qword_1011C09C8);
    v54 = sub_1006633E8();
    v55 = sub_1006634F0();
    _ConditionalContent<>.init(storage:)(v52, v53, v103, v54, v55);
    sub_10004FF60(v51, &qword_1011A2F58);
    sub_10004FF60(v36, (uint64_t *)&unk_1011A20D0);
    v56 = v111;
LABEL_21:
    v90 = v107;
    v89 = v108;
    v91 = v106;
    v92 = v110;
    sub_10004A160(v40, v110, &qword_1011C0998);
    swift_storeEnumTagMultiPayload(v92, v91, 1);
    v93 = sub_100048748(&qword_1011C0A18, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView, (uint64_t)&unk_100EC7C34);
    v94 = sub_10015FD08(&qword_1011C0A20, &qword_1011C0998, (void (*)(void))sub_1006633E8, (void (*)(void))sub_1006634F0);
    _ConditionalContent<>.init(storage:)(v92, v109, v90, v93, v94);
    sub_10004FF60(v40, &qword_1011C0998);
    v95 = sub_100007E8C(&qword_1011C09B8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v89, 0, 1, v95);
    v68 = (uint64_t)v89;
    v69 = v56;
    return sub_100065228(v68, v69, &qword_1011C09A8);
  }
  v71 = sub_100007E8C(&qword_1011C09B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v111, 1, 1, v71);
}

uint64_t sub_10065E848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  char v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t, double);
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _OWORD v119[2];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  _OWORD v129[2];
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  _OWORD v139[2];
  char v140;
  char v141;
  __int128 v142;
  __int128 v143;
  _OWORD v144[2];
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _OWORD v150[2];
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  __int128 v155;

  v109 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v98 - v7;
  v107 = sub_100007E8C(&qword_1011C0A30);
  __chkstk_darwin(v107);
  v10 = (_OWORD *)((char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = sub_100007E8C(&qword_1011C0A38);
  __chkstk_darwin(v101);
  v103 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100007E8C(&qword_1011C0A40);
  __chkstk_darwin(v102);
  v100 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011C0A48);
  __chkstk_darwin(v108);
  v104 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011C0A50);
  v99 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v98 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v105 = (char *)&v98 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v17);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CatalogStack.HeaderView(0);
  __chkstk_darwin(v20);
  v22 = (id *)((char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_10065F20C();
  sub_10005B704(a1, (uint64_t)v22, type metadata accessor for CatalogStack.HeaderView);
  if ((v23 & 1) != 0)
  {
    v24 = *v22;
    sub_100824BE4((uint64_t)v19);
    v25 = sub_100659AB4((uint64_t)v19);

    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A33B8);
    v26 = sub_10005B748((uint64_t)v22, type metadata accessor for CatalogStack.HeaderView);
    if ((v25 & 1) == 0)
    {
      v27 = *(id *)a1;
      v28 = static Alignment.center.getter(v27);
      _FrameLayout.init(width:height:alignment:)(&v151, 0, 1, 0x406FC00000000000, 0, v28, v29);
      *(_QWORD *)&v142 = v27;
      *((_QWORD *)&v142 + 1) = v151;
      LOBYTE(v143) = v152;
      *((_QWORD *)&v143 + 1) = v153;
      LOBYTE(v144[0]) = v154;
      *(_OWORD *)((char *)v144 + 8) = v155;
      v30 = sub_100007E8C(&qword_1011C0AA8);
      v31 = sub_10005610C(&qword_1011C0AB0, &qword_1011C0AA8, (void (*)(void))sub_100663884);
      v32 = v105;
      View.corner(_:)(0x4033000000000000, -1, 0, v30, v31);

      v33 = sub_10065DAE0((uint64_t)&v120);
      v35 = v98;
      v34 = v99;
      v36 = *(void (**)(char *, char *, uint64_t, double))(v99 + 16);
      v37 = v106;
      v36(v98, v32, v106, v33);
      v118 = v128;
      v119[0] = v129[0];
      *(_OWORD *)((char *)v119 + 9) = *(_OWORD *)((char *)v129 + 9);
      v114 = v124;
      v115 = v125;
      v116 = v126;
      v117 = v127;
      v110 = v120;
      v111 = v121;
      v112 = v122;
      v113 = v123;
      v38 = (uint64_t)v100;
      ((void (*)(char *, char *, uint64_t))v36)(v100, v35, v37);
      v39 = (_OWORD *)(v38 + *(int *)(sub_100007E8C(&qword_1011C0AC0) + 48));
      v40 = v118;
      v138 = v118;
      v139[0] = v119[0];
      *(_OWORD *)((char *)v139 + 9) = *(_OWORD *)((char *)v119 + 9);
      v41 = v114;
      v42 = v114;
      v134 = v114;
      v135 = v115;
      v43 = v116;
      v136 = v116;
      v137 = v117;
      v44 = v110;
      v45 = v110;
      v130 = v110;
      v131 = v111;
      v132 = v112;
      v133 = v113;
      v46 = v119[0];
      v47 = v119[0];
      v39[8] = v118;
      v39[9] = v46;
      *(_OWORD *)((char *)v39 + 153) = *(_OWORD *)((char *)v119 + 9);
      v48 = v115;
      v49 = v116;
      v50 = v115;
      v39[4] = v41;
      v39[5] = v48;
      v51 = v117;
      v52 = v117;
      v39[6] = v43;
      v39[7] = v51;
      v53 = v111;
      v54 = v112;
      v55 = v111;
      v56 = v112;
      *v39 = v44;
      v39[1] = v53;
      v57 = v113;
      v58 = v113;
      v39[2] = v54;
      v39[3] = v57;
      v149 = v40;
      v150[0] = v47;
      *(_OWORD *)((char *)v150 + 9) = *(_OWORD *)((char *)v119 + 9);
      v145 = v42;
      v146 = v50;
      v147 = v49;
      v148 = v52;
      v142 = v45;
      v143 = v55;
      v144[0] = v56;
      v144[1] = v58;
      sub_100663834((uint64_t)&v130);
      sub_100663834((uint64_t)&v120);
      sub_1001C984C((uint64_t)&v142);
      v59 = *(void (**)(char *, uint64_t))(v34 + 8);
      v59(v35, v37);
      v60 = v103;
      sub_10004A160(v38, v103, &qword_1011C0A40);
      swift_storeEnumTagMultiPayload(v60, v101, 0);
      v61 = sub_100007E8C(&qword_1011C0A78);
      v62 = sub_100049F28(&qword_1011C0A68, &qword_1011C0A40, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v63 = sub_10005610C(&qword_1011C0A70, &qword_1011C0A78, (void (*)(void))sub_10066372C);
      v64 = (uint64_t)v104;
      _ConditionalContent<>.init(storage:)(v60, v102, v61, v62, v63);
      sub_10004FF60(v38, &qword_1011C0A40);
      sub_10004A160(v64, (uint64_t)v10, &qword_1011C0A48);
      swift_storeEnumTagMultiPayload(v10, v107, 0);
      v65 = sub_100007E8C(&qword_1011C0A58);
      v66 = sub_100663688();
      v67 = sub_10066372C();
      _ConditionalContent<>.init(storage:)(v10, v108, v65, v66, v67);
      sub_10004FF60(v64, &qword_1011C0A48);
      sub_1001C984C((uint64_t)&v120);
      return ((uint64_t (*)(char *, uint64_t))v59)(v105, v106);
    }
  }
  else
  {
    v26 = sub_10005B748((uint64_t)v22, type metadata accessor for CatalogStack.HeaderView);
  }
  (*(void (**)(uint64_t))((swift_isaMask & **(_QWORD **)a1) + 0x400))(v26);
  v69 = type metadata accessor for GenericMusicItem(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v8, 1, v69) != 1)
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A20D0);
    if ((*(unsigned int (**)(char *, uint64_t))(v70 + 88))(v5, v69) == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v69);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
      sub_10065DAE0((uint64_t)&v142);
      v138 = v149;
      v139[0] = v150[0];
      *(_OWORD *)((char *)v139 + 9) = *(_OWORD *)((char *)v150 + 9);
      v134 = v145;
      v135 = v146;
      v136 = v147;
      v137 = v148;
      v130 = v142;
      v131 = v143;
      v71 = *(double *)(a1 + 8) * 0.55;
      v132 = v144[0];
      v133 = v144[1];
      v73 = static Alignment.topLeading.getter(v72);
      _FrameLayout.init(width:height:alignment:)(&v120, 0, 1, *(_QWORD *)&v71, 0, v73, v74);
      v75 = v120;
      v76 = v121;
      v149 = v138;
      v150[0] = v139[0];
      *(_OWORD *)((char *)v150 + 9) = *(_OWORD *)((char *)v139 + 9);
      v145 = v134;
      v146 = v135;
      v147 = v136;
      v148 = v137;
      v142 = v130;
      v143 = v131;
      v144[0] = v132;
      v144[1] = v133;
      v141 = BYTE8(v120);
      v140 = BYTE8(v121);
      v77 = v150[0];
      v78 = v103;
      *(_OWORD *)(v103 + 128) = v138;
      *(_OWORD *)(v78 + 144) = v77;
      *(_OWORD *)(v78 + 160) = v150[1];
      v79 = v146;
      *(_OWORD *)(v78 + 64) = v145;
      *(_OWORD *)(v78 + 80) = v79;
      v80 = v148;
      *(_OWORD *)(v78 + 96) = v147;
      *(_OWORD *)(v78 + 112) = v80;
      v81 = v143;
      *(_OWORD *)v78 = v142;
      *(_OWORD *)(v78 + 16) = v81;
      v82 = v144[1];
      *(_OWORD *)(v78 + 32) = v144[0];
      *(_OWORD *)(v78 + 48) = v82;
      *(_QWORD *)(v78 + 176) = v75;
      *(_BYTE *)(v78 + 184) = v141;
      *(_DWORD *)(v78 + 185) = v110;
      *(_DWORD *)(v78 + 188) = *(_DWORD *)((char *)&v110 + 3);
      *(_QWORD *)(v78 + 192) = v76;
      *(_BYTE *)(v78 + 200) = v140;
      *(_DWORD *)(v78 + 201) = v151;
      *(_DWORD *)(v78 + 204) = *(_DWORD *)((char *)&v151 + 3);
      *(_OWORD *)(v78 + 208) = v122;
      swift_storeEnumTagMultiPayload(v78, v101, 1);
      sub_100663834((uint64_t)&v130);
      v83 = sub_100007E8C(&qword_1011C0A78);
      v84 = sub_100049F28(&qword_1011C0A68, &qword_1011C0A40, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v85 = sub_10005610C(&qword_1011C0A70, &qword_1011C0A78, (void (*)(void))sub_10066372C);
      v86 = (uint64_t)v104;
      _ConditionalContent<>.init(storage:)(v78, v102, v83, v84, v85);
      sub_10004A160(v86, (uint64_t)v10, &qword_1011C0A48);
      swift_storeEnumTagMultiPayload(v10, v107, 0);
      v87 = sub_100007E8C(&qword_1011C0A58);
      v88 = sub_100663688();
      v89 = sub_10066372C();
      _ConditionalContent<>.init(storage:)(v10, v108, v87, v88, v89);
      sub_10004FF60(v86, &qword_1011C0A48);
      return sub_1001C984C((uint64_t)&v130);
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v69);
  }
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
  sub_10065DAE0((uint64_t)&v142);
  v90 = v150[0];
  v10[8] = v149;
  v10[9] = v90;
  *(_OWORD *)((char *)v10 + 153) = *(_OWORD *)((char *)v150 + 9);
  v91 = v146;
  v10[4] = v145;
  v10[5] = v91;
  v92 = v148;
  v10[6] = v147;
  v10[7] = v92;
  v93 = v143;
  *v10 = v142;
  v10[1] = v93;
  v94 = v144[1];
  v10[2] = v144[0];
  v10[3] = v94;
  swift_storeEnumTagMultiPayload(v10, v107, 1);
  v95 = sub_100007E8C(&qword_1011C0A58);
  v96 = sub_100663688();
  v97 = sub_10066372C();
  return _ConditionalContent<>.init(storage:)(v10, v108, v95, v96, v97);
}

uint64_t sub_10065F20C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;

  v1 = type metadata accessor for Artwork.CropStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011AA8D0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x400))(v9);
  static Artwork.CropStyle.specificRectangle.getter(v12);
  sub_100657278((uint64_t)v7, (uint64_t)v4, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A20D0);
  v13 = type metadata accessor for MotionViewModel(0);
  v14 = 1;
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  v16 = sub_10004FF60((uint64_t)v11, &qword_1011AA8D0);
  if (v15 == 1)
  {
    v17 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x250))(v16);

    if (!v17)
    {
      v18 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x220))();
      if (!v18)
        return 0;

    }
    return 1;
  }
  return v14;
}

uint64_t sub_10065F3D4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[11];
  _BYTE v40[32];
  _BYTE v41[183];
  char v42;
  _BYTE v43[192];
  __int128 v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[23];
  uint64_t v61;
  uint64_t v62;

  v4 = static Alignment.center.getter(a1);
  v6 = v5;
  sub_10065DAE0((uint64_t)&v30);
  v39[10] = v38;
  *(_OWORD *)v40 = v39[0];
  *(_OWORD *)&v40[9] = *(_OWORD *)((char *)v39 + 9);
  v39[6] = v34;
  v39[7] = v35;
  v39[8] = v36;
  v39[9] = v37;
  v39[2] = v30;
  v39[3] = v31;
  v39[4] = v32;
  v39[5] = v33;
  v42 = 1;
  *(_OWORD *)&v41[119] = v37;
  *(_OWORD *)&v41[55] = v33;
  *(_OWORD *)&v41[135] = v38;
  *(_OWORD *)&v41[151] = *(_OWORD *)v40;
  *(_OWORD *)&v41[167] = *(_OWORD *)&v40[16];
  *(_OWORD *)&v41[71] = v34;
  *(_OWORD *)&v41[87] = v35;
  *(_OWORD *)&v41[103] = v36;
  *(_OWORD *)&v41[7] = v30;
  *(_OWORD *)&v41[23] = v31;
  *(_OWORD *)&v41[39] = v32;
  v7 = qword_10119C4D8;
  v8 = *a1;
  v9 = v8;
  if (v7 != -1)
    v8 = (id)swift_once(&qword_10119C4D8, sub_10065BA14);
  v10 = xmmword_1011C0528;
  v11 = static Alignment.center.getter(v8);
  _FrameLayout.init(width:height:alignment:)(&v25, v10, 0, *((_QWORD *)&v10 + 1), 0, v11, v12);
  v13 = v25;
  v14 = v26;
  v15 = v27;
  v16 = v28;
  v17 = v42;
  *(_QWORD *)v43 = 0;
  v43[8] = v42;
  *(_OWORD *)&v43[137] = *(_OWORD *)&v41[128];
  *(_OWORD *)&v43[153] = *(_OWORD *)&v41[144];
  *(_OWORD *)&v43[169] = *(_OWORD *)&v41[160];
  *(_OWORD *)&v43[73] = *(_OWORD *)&v41[64];
  *(_OWORD *)&v43[89] = *(_OWORD *)&v41[80];
  *(_OWORD *)&v43[105] = *(_OWORD *)&v41[96];
  *(_OWORD *)&v43[121] = *(_OWORD *)&v41[112];
  *(_OWORD *)&v43[9] = *(_OWORD *)v41;
  *(_OWORD *)&v43[25] = *(_OWORD *)&v41[16];
  *(_OWORD *)&v43[41] = *(_OWORD *)&v41[32];
  *(_OWORD *)&v43[57] = *(_OWORD *)&v41[48];
  *(_QWORD *)&v43[184] = *(_QWORD *)&v41[175];
  *(_QWORD *)&v44 = v4;
  *((_QWORD *)&v44 + 1) = v6;
  v18 = *(_OWORD *)&v43[176];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v43[160];
  *(_OWORD *)(a2 + 176) = v18;
  v19 = *(_OWORD *)&v43[112];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v43[96];
  *(_OWORD *)(a2 + 112) = v19;
  v20 = *(_OWORD *)&v43[144];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v43[128];
  *(_OWORD *)(a2 + 144) = v20;
  v21 = *(_OWORD *)&v43[48];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v43[32];
  *(_OWORD *)(a2 + 48) = v21;
  v22 = *(_OWORD *)&v43[80];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v43[64];
  *(_OWORD *)(a2 + 80) = v22;
  v23 = *(_OWORD *)&v43[16];
  *(_OWORD *)a2 = *(_OWORD *)v43;
  *(_OWORD *)(a2 + 16) = v23;
  *(_OWORD *)(a2 + 192) = v44;
  v47 = v14;
  v46 = v16;
  v45 = 1;
  *(_QWORD *)(a2 + 208) = v9;
  *(_QWORD *)(a2 + 216) = v13;
  *(_BYTE *)(a2 + 224) = v14;
  *(_QWORD *)(a2 + 232) = v15;
  *(_BYTE *)(a2 + 240) = v16;
  *(_OWORD *)(a2 + 248) = v29;
  *(_WORD *)(a2 + 264) = 256;
  *(_QWORD *)(a2 + 272) = 0;
  *(_BYTE *)(a2 + 280) = 1;
  sub_1006635E8((uint64_t)v43);
  v58 = *(_OWORD *)&v41[128];
  v59 = *(_OWORD *)&v41[144];
  *(_OWORD *)v60 = *(_OWORD *)&v41[160];
  v54 = *(_OWORD *)&v41[64];
  v55 = *(_OWORD *)&v41[80];
  v56 = *(_OWORD *)&v41[96];
  v57 = *(_OWORD *)&v41[112];
  v50 = *(_OWORD *)v41;
  v51 = *(_OWORD *)&v41[16];
  v52 = *(_OWORD *)&v41[32];
  v48 = 0;
  v49 = v17;
  v53 = *(_OWORD *)&v41[48];
  *(_QWORD *)&v60[15] = *(_QWORD *)&v41[175];
  v61 = v4;
  v62 = v6;
  return sub_100663638((uint64_t)&v48);
}

uint64_t sub_10065F66C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(void);
  _QWORD *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.CropStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x400);
  v18 = a1;
  v19 = v17();
  static Artwork.CropStyle.specificRectangle.getter(v19);
  sub_100657278((uint64_t)v13, (uint64_t)v10, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A20D0);

  v17();
  sub_1006550C0((uint64_t)v13, v6);
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A20D0);
  v20 = (int *)type metadata accessor for MotionArtworkView(0);
  v21 = a2 + v20[6];
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 10, v22);
  sub_100065228((uint64_t)v16, a2, &qword_1011AA8D0);
  result = sub_100065228((uint64_t)v6, a2 + v20[5], (uint64_t *)&unk_1011A3E10);
  v24 = a2 + v20[7];
  *(_QWORD *)v24 = 0;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 1;
  return result;
}

uint64_t sub_10065F890@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;

  return sub_10065F66C(*v1, a1);
}

uint64_t sub_10065F89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10065F8EC();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_10065F8EC()
{
  unint64_t result;

  result = qword_1011C0538;
  if (!qword_1011C0538)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PromotionalLayoutStyle, &type metadata for PromotionalLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1011C0538);
  }
  return result;
}

uint64_t sub_10065F938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t), uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))
{
  if ((a8 & 1) != 0)
    return a11(a1, a2, a3, a4, a5, (a5 >> 8) & 1);
  else
    return sub_10065F978(a1, a2, a3, a4, a5, a6, a7, BYTE2(a7) & 1, a9, a10);
}

uint64_t sub_10065F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t), uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a8 & 1) != 0)
    return a10(a1, a2, a3, a4, a5, a6, a7, (a7 >> 8) & 1);
  else
    return a9(a1, a2, a3 & 1);
}

uint64_t sub_10065F994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  return a7(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_10065F9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a6 & 1) != 0)
    return sub_10065F994(a1, a2, a3, a4, a5, (a5 >> 8) & 1, a9);
  else
    return sub_10065F9DC(a1, a2, a3, a4, a5, BYTE5(a5) & 1, a7, a8);
}

uint64_t sub_10065F9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  if ((a6 & 1) != 0)
    return a8(a1, a2, a3, a4, a5, (a5 >> 24) & 1);
  else
    return a7(a1, a2, a3, a4, a5, HIDWORD(a5) & 1);
}

uint64_t sub_10065F9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a6 & 1) != 0)
    return sub_10065F994(a1, a2, a3, a4, a5, (a5 >> 8) & 1, a8);
  else
    return sub_10065FA20(a1, a2, a3, a4, a5, BYTE1(a5) & 1, a7, a8);
}

uint64_t sub_10065FA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a6 & 1) != 0)
    return a8(a1, a2, a3, a4, a5 & 1);
  else
    return a7(a1, a2, a3, a4, a5 & 1);
}

uint64_t type metadata accessor for CatalogStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C05B0, (uint64_t)&nominal type descriptor for CatalogStack);
}

_QWORD *sub_10065FA80(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = *((_BYTE *)a2 + 40);
    v11 = v7;
    v12 = v8;
    sub_1000A4100(v9, v10);
    v4[4] = v9;
    *((_BYTE *)v4 + 40) = v10;
    v13 = a2[7];
    v4[6] = a2[6];
    v4[7] = v13;
    v14 = a2[9];
    v4[8] = a2[8];
    v4[9] = v14;
    v15 = a2[10];
    v16 = a2[11];
    v17 = *((_BYTE *)a2 + 96);
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v15, v16);
    v4[10] = v15;
    v4[11] = v16;
    *((_BYTE *)v4 + 96) = v17;
    v18 = a2[14];
    v4[13] = a2[13];
    v4[14] = v18;
    v19 = a2[16];
    v4[15] = a2[15];
    v4[16] = v19;
    v20 = a2[18];
    v4[17] = a2[17];
    v4[18] = v20;
    v21 = a2[19];
    v22 = a2[20];
    v23 = *((_BYTE *)a2 + 168);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v21, v22, v23);
    v4[19] = v21;
    v4[20] = v22;
    *((_BYTE *)v4 + 168) = v23;
    v24 = a2[22];
    v25 = a2[23];
    LOBYTE(v21) = *((_BYTE *)a2 + 192);
    sub_1000A411C(v24, v25, v21);
    v4[22] = v24;
    v4[23] = v25;
    *((_BYTE *)v4 + 192) = v21;
    v26 = a2[25];
    LOBYTE(v25) = *((_BYTE *)a2 + 208);
    sub_10006B3F8(v26, v25);
    v4[25] = v26;
    *((_BYTE *)v4 + 208) = v25;
    v27 = *(int *)(a3 + 64);
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for UserInterfaceSizeClass(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v32 + 16))(v28, v29, v31);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
      }
      v35 = v28;
      v36 = v30;
      v37 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v35 = v28;
      v36 = v30;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return v4;
}

void sub_10065FCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000A4224(*(id *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  sub_1000A4240(*(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_BYTE *)(a1 + 192));
  sub_10006B604(*(_QWORD *)(a1 + 200), *(_BYTE *)(a1 + 208));
  v4 = a1 + *(int *)(a2 + 64);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_10065FDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(void **)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  v10 = v6;
  v11 = v7;
  sub_1000A4100(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_BYTE *)(a2 + 96);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v14, v15);
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 96) = v16;
  v17 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v17;
  v18 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v18;
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v19;
  v20 = *(_QWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a2 + 160);
  v22 = *(_BYTE *)(a2 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v20, v21, v22);
  *(_QWORD *)(a1 + 152) = v20;
  *(_QWORD *)(a1 + 160) = v21;
  *(_BYTE *)(a1 + 168) = v22;
  v23 = *(_QWORD *)(a2 + 176);
  v24 = *(_QWORD *)(a2 + 184);
  LOBYTE(v20) = *(_BYTE *)(a2 + 192);
  sub_1000A411C(v23, v24, v20);
  *(_QWORD *)(a1 + 176) = v23;
  *(_QWORD *)(a1 + 184) = v24;
  *(_BYTE *)(a1 + 192) = v20;
  v25 = *(_QWORD *)(a2 + 200);
  LOBYTE(v24) = *(_BYTE *)(a2 + 208);
  sub_10006B3F8(v25, v24);
  *(_QWORD *)(a1 + 200) = v25;
  *(_BYTE *)(a1 + 208) = v24;
  v26 = *(int *)(a3 + 64);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for UserInterfaceSizeClass(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
    {
      v32 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      v33 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v31 + 16))(v27, v28, v30);
      v33 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
    }
  }
  else
  {
    *v27 = *v28;
    swift_retain();
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v29, v33);
  return a1;
}

uint64_t sub_10065FFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  sub_1000A4100(v12, v13);
  v14 = *(void **)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  sub_1000A4224(v14, v15);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_BYTE *)(a2 + 96);
  KeyValueObservationTrigger.keyPath.getter(v16, v17);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  *(_BYTE *)(a1 + 96) = v18;
  sub_1000A6174(v19, v20);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v21 = *(_QWORD *)(a2 + 152);
  v22 = *(_QWORD *)(a2 + 160);
  v23 = *(_BYTE *)(a2 + 168);
  sub_1000A410C(v21, v22, v23);
  v24 = *(_QWORD *)(a1 + 152);
  v25 = *(_QWORD *)(a1 + 160);
  v26 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v22;
  *(_BYTE *)(a1 + 168) = v23;
  sub_1000A4230(v24, v25, v26);
  v27 = *(_QWORD *)(a2 + 176);
  v28 = *(_QWORD *)(a2 + 184);
  v29 = *(_BYTE *)(a2 + 192);
  sub_1000A411C(v27, v28, v29);
  v30 = *(_QWORD *)(a1 + 176);
  v31 = *(_QWORD *)(a1 + 184);
  v32 = *(_BYTE *)(a1 + 192);
  *(_QWORD *)(a1 + 176) = v27;
  *(_QWORD *)(a1 + 184) = v28;
  *(_BYTE *)(a1 + 192) = v29;
  sub_1000A4240(v30, v31, v32);
  v33 = *(_QWORD *)(a2 + 200);
  LOBYTE(v28) = *(_BYTE *)(a2 + 208);
  sub_10006B3F8(v33, v28);
  v34 = *(_QWORD *)(a1 + 200);
  v35 = *(_BYTE *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = v33;
  *(_BYTE *)(a1 + 208) = v28;
  sub_10006B604(v34, v35);
  if (a1 != a2)
  {
    v36 = *(int *)(a3 + 64);
    v37 = (_QWORD *)(a1 + v36);
    v38 = (_QWORD *)(a2 + v36);
    sub_10004FF60(a1 + v36, (uint64_t *)&unk_1011A3ED0);
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      v40 = type metadata accessor for UserInterfaceSizeClass(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        v43 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v41 + 16))(v37, v38, v40);
        v43 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
      }
    }
    else
    {
      *v37 = *v38;
      swift_retain();
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v43);
  }
  return a1;
}

uint64_t sub_1006602B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v6 = *(int *)(a3 + 64);
  v7 = (const void *)(a2 + v6);
  v8 = (void *)(a1 + v6);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v7, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v8, v9, 1);
  }
  else
  {
    memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100660428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;

  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(void **)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v10;
  sub_1000A4224(v11, v12);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_release();
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_BYTE *)(a2 + 96);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = v15;
  sub_1000A6174(v16, v17);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  v18 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v18;
  swift_release();
  v19 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v19;
  swift_release();
  v20 = *(_QWORD *)(a2 + 160);
  v21 = *(_BYTE *)(a2 + 168);
  v22 = *(_QWORD *)(a1 + 152);
  v23 = *(_QWORD *)(a1 + 160);
  v24 = *(_BYTE *)(a1 + 168);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v20;
  *(_BYTE *)(a1 + 168) = v21;
  sub_1000A4230(v22, v23, v24);
  v25 = *(_BYTE *)(a2 + 192);
  v26 = *(_QWORD *)(a1 + 176);
  v27 = *(_QWORD *)(a1 + 184);
  v28 = *(_BYTE *)(a1 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = v25;
  sub_1000A4240(v26, v27, v28);
  v29 = *(_BYTE *)(a2 + 208);
  v30 = *(_QWORD *)(a1 + 200);
  v31 = *(_BYTE *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = v29;
  sub_10006B604(v30, v31);
  if (a1 != a2)
  {
    v32 = *(int *)(a3 + 64);
    v33 = (void *)(a1 + v32);
    v34 = (const void *)(a2 + v32);
    sub_10004FF60(a1 + v32, (uint64_t *)&unk_1011A3ED0);
    v35 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for UserInterfaceSizeClass(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v37 + 32))(v33, v34, v36);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      swift_storeEnumTagMultiPayload(v33, v35, 1);
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100660654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100660660);
}

uint64_t sub_100660660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 64), a2, v8);
  }
}

uint64_t sub_1006606E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006606EC);
}

uint64_t sub_1006606EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 64), a2, a2, v7);
  }
  return result;
}

void sub_100660764(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_100EC7770;
  v4[1] = &unk_100EC7770;
  v4[2] = &unk_100EC7788;
  v4[3] = &unk_100EC77A0;
  v4[4] = &unk_100EC77A0;
  v4[5] = &unk_100EC77B8;
  v4[6] = &unk_100EC77A0;
  v4[7] = &unk_100EC77A0;
  v4[8] = &unk_100EC77A0;
  v4[9] = &unk_100EC77B8;
  v4[10] = &unk_100EC77B8;
  v4[11] = &unk_100EC7788;
  sub_1003F02CC(319, (unint64_t *)&qword_1011A4910, (uint64_t *)&unk_1011A33B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 13, v4, a1 + 16);
  }
}

uint64_t sub_10066081C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA85A8, 1);
}

uint64_t type metadata accessor for CatalogStack.CollectionView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C0780, (uint64_t)&nominal type descriptor for CatalogStack.CollectionView);
}

unint64_t sub_100660840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0668;
  if (!qword_1011C0668)
  {
    v1 = sub_100044B54(&qword_1011C0650);
    sub_1006608EC(&qword_1011C0670, &qword_1011C0658, &qword_1011C0678, &qword_1011C0680);
    sub_1006608EC(&qword_1011C0688, &qword_1011C0638, &qword_1011C0690, &qword_1011C0630);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0668);
  }
  return result;
}

uint64_t sub_1006608EC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100048748(&qword_1011C0660, type metadata accessor for CatalogStack.CollectionView, (uint64_t)&unk_100EC79D0);
    sub_100049F28(a3, a4, (uint64_t)&unk_100EC7980);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10066098C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011C0698;
  if (!qword_1011C0698)
  {
    v1 = sub_100044B54(&qword_1011C0628);
    v2[0] = type metadata accessor for CatalogStack.CollectionView(255);
    v2[1] = &type metadata for String;
    v2[2] = sub_100048748(&qword_1011C0660, type metadata accessor for CatalogStack.CollectionView, (uint64_t)&unk_100EC79D0);
    v2[3] = sub_100055B68();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0698);
  }
  return result;
}

void sub_100660A48(double *a1@<X8>)
{
  *a1 = EnvironmentValues.displayScale.getter();
}

uint64_t sub_100660A70(double *a1)
{
  return EnvironmentValues.displayScale.setter(*a1);
}

uint64_t sub_100660A9C()
{
  return 16;
}

__n128 sub_100660AA8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for CatalogStack.MotionArtwork()
{
  return &type metadata for CatalogStack.MotionArtwork;
}

uint64_t sub_100660AC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EC7770;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = "(";
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100660B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    v13(v11, v12, v4);
    v14 = (_QWORD *)((v7 + v11) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFF8);
    *v14 = *v15;
    v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
    v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v18;
    v19 = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 32) = v19;
  }
  swift_retain(v19);
  return a1;
}

uint64_t sub_100660C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  return swift_release(*(_QWORD *)(((((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)
                                 + 0x20));
}

_QWORD *sub_100660CC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain(v4);
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (_QWORD *)((v11 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 32) = v17;
  swift_retain(v17);
  return a1;
}

_QWORD *sub_100660D74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  v15[3] = v16[3];
  v17 = v15[4];
  v18 = v16[4];
  v15[4] = v18;
  swift_retain(v18);
  swift_release(v17);
  return a1;
}

_OWORD *sub_100660E54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = v8 + v6;
  v10 = (_QWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *v10;
  v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)v12;
  v13 = *(_OWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_OWORD *)v11 = v14;
  *(_OWORD *)(v11 + 16) = v13;
  return a1;
}

_QWORD *sub_100660EEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  v15[3] = v16[3];
  v17 = v15[4];
  v15[4] = v16[4];
  swift_release(v17);
  return a1;
}

uint64_t sub_100660FB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
    }
    else
    {
      v12 = *(_QWORD *)(a1 + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v4 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100661048 + 4 * byte_100EC75F8[v10]))();
  }
}

void sub_1006610C8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 16) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 16) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1006611D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100661244);
}

void sub_1006611E0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1006611E8);
  JUMPOUT(0x100661244);
}

void sub_1006611FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100661244);
}

void sub_100661204()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100661244);
}

void sub_10066120C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (a3 < 0)
      JUMPOUT(0x100661218);
    if (a2 < 0)
      JUMPOUT(0x10066123CLL);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x100661244);
}

uint64_t type metadata accessor for UberModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UberModifier);
}

_QWORD *sub_100661268(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = v8;
    v9 = a2[4];
    v10 = v7;
    v11 = v8;
    if (v9)
    {
      v4[3] = a2[3];
      v4[4] = v9;
      v12 = a2[6];
      v4[5] = a2[5];
      v4[6] = v12;
      v13 = a2[8];
      v4[7] = a2[7];
      v4[8] = v13;
      v14 = (void *)a2[9];
      v4[9] = v14;
      *((_BYTE *)v4 + 80) = *((_BYTE *)a2 + 80);
      v15 = a2[12];
      v4[11] = a2[11];
      v4[12] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = v14;
      swift_retain();
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v4 + 7) = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 9) = v18;
      *(_OWORD *)(v4 + 11) = *(_OWORD *)(a2 + 11);
      v19 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(v4 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(v4 + 5) = v19;
    }
    v20 = a2[14];
    v4[13] = a2[13];
    v4[14] = v20;
    v21 = a2[15];
    v22 = a2[16];
    v23 = a2[17];
    v24 = a2[18];
    v25 = *((_BYTE *)a2 + 152);
    swift_retain();
    sub_100154A5C(v21, v22, v23, v24, v25);
    v4[15] = v21;
    v4[16] = v22;
    v4[17] = v23;
    v4[18] = v24;
    *((_BYTE *)v4 + 152) = v25;
    v26 = a2[20];
    LOBYTE(v22) = *((_BYTE *)a2 + 168);
    sub_10006B3F8(v26, v22);
    v4[20] = v26;
    *((_BYTE *)v4 + 168) = v22;
    v27 = *(int *)(a3 + 40);
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for UserInterfaceSizeClass(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v32 + 16))(v28, v29, v31);
        v34 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
      }
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v34);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
  }
  swift_retain();
  return v4;
}

double sub_1006614A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
  }
  swift_release();
  sub_1002BD420(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
  sub_10006B604(*(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006615A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = v6;
  v10 = v7;
  if (v8)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v8;
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v12;
    v13 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v13;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v14 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v13;
    swift_retain();
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v16;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    v17 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v17;
  }
  v18 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v18;
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_BYTE *)(a2 + 152);
  swift_retain();
  sub_100154A5C(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_BYTE *)(a1 + 152) = v23;
  v24 = *(_QWORD *)(a2 + 160);
  LOBYTE(v20) = *(_BYTE *)(a2 + 168);
  sub_10006B3F8(v24, v20);
  *(_QWORD *)(a1 + 160) = v24;
  *(_BYTE *)(a1 + 168) = v20;
  v25 = *(int *)(a3 + 40);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for UserInterfaceSizeClass(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v32 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 16))(v26, v27, v29);
      v32 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
    }
  }
  else
  {
    *v26 = *v27;
    swift_retain();
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v28, v32);
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_retain();
  return a1;
}

uint64_t sub_1006617BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  v12 = (_OWORD *)(a1 + 24);
  v13 = (_OWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v14)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = *(void **)(a1 + 72);
      v16 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v16;
      v17 = v16;

      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      v18 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v18;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10004FF60(a1 + 24, (uint64_t *)&unk_1011A20B0);
      *v12 = *v13;
      v22 = *(_OWORD *)(a2 + 88);
      v24 = *(_OWORD *)(a2 + 40);
      v23 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v22;
      *(_OWORD *)(a1 + 40) = v24;
      *(_OWORD *)(a1 + 56) = v23;
    }
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v19 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v19;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v20 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v19;
    swift_retain();
  }
  else
  {
    *v12 = *v13;
    v25 = *(_OWORD *)(a2 + 40);
    v26 = *(_OWORD *)(a2 + 56);
    v27 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v27;
    *(_OWORD *)(a1 + 40) = v25;
    *(_OWORD *)(a1 + 56) = v26;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  v28 = *(_QWORD *)(a2 + 120);
  v29 = *(_QWORD *)(a2 + 128);
  v30 = *(_QWORD *)(a2 + 136);
  v31 = *(_QWORD *)(a2 + 144);
  v32 = *(_BYTE *)(a2 + 152);
  sub_100154A5C(v28, v29, v30, v31, v32);
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a1 + 128);
  v35 = *(_QWORD *)(a1 + 136);
  v36 = *(_QWORD *)(a1 + 144);
  v37 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 120) = v28;
  *(_QWORD *)(a1 + 128) = v29;
  *(_QWORD *)(a1 + 136) = v30;
  *(_QWORD *)(a1 + 144) = v31;
  *(_BYTE *)(a1 + 152) = v32;
  sub_1002BD420(v33, v34, v35, v36, v37);
  v38 = *(_QWORD *)(a2 + 160);
  LOBYTE(v29) = *(_BYTE *)(a2 + 168);
  sub_10006B3F8(v38, v29);
  v39 = *(_QWORD *)(a1 + 160);
  v40 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v38;
  *(_BYTE *)(a1 + 168) = v29;
  sub_10006B604(v39, v40);
  if (a1 != a2)
  {
    v41 = *(int *)(a3 + 40);
    v42 = (_QWORD *)(a1 + v41);
    v43 = (_QWORD *)(a2 + v41);
    sub_10004FF60(a1 + v41, (uint64_t *)&unk_1011A3ED0);
    v44 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
    {
      v45 = type metadata accessor for UserInterfaceSizeClass(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v45))
      {
        v47 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v46 + 16))(v42, v43, v45);
        v48 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
      }
    }
    else
    {
      *v42 = *v43;
      swift_retain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v42, v44, v48);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100661B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 120);
  v7 = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v7;
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(int *)(a3 + 40);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 120) = v6;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_100661CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  if (*(_QWORD *)(a1 + 32))
  {
    v9 = *(_QWORD *)(a2 + 32);
    if (v9)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v11;
      swift_bridgeObjectRelease();
      v12 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      swift_release();
      goto LABEL_6;
    }
    sub_10004FF60(a1 + 24, (uint64_t *)&unk_1011A20B0);
  }
  v13 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v14;
LABEL_6:
  v15 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  swift_release();
  v16 = *(_BYTE *)(a2 + 152);
  v17 = *(_QWORD *)(a1 + 120);
  v18 = *(_QWORD *)(a1 + 128);
  v19 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 144);
  v21 = *(_BYTE *)(a1 + 152);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = v16;
  sub_1002BD420(v17, v18, v19, v20, v21);
  v22 = *(_BYTE *)(a2 + 168);
  v23 = *(_QWORD *)(a1 + 160);
  v24 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = v22;
  sub_10006B604(v23, v24);
  if (a1 != a2)
  {
    v25 = *(int *)(a3 + 40);
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_10004FF60(a1 + v25, (uint64_t *)&unk_1011A3ED0);
    v28 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for UserInterfaceSizeClass(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v26, v27, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_release();
  return a1;
}

uint64_t sub_100661EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100661EF4);
}

uint64_t sub_100661EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_100661F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100661F80);
}

uint64_t sub_100661F80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_100661FF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100EC7770;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "P";
  v4[3] = &unk_100EC7770;
  v4[4] = &unk_100EC7918;
  v4[5] = &unk_100EC7788;
  sub_1003F02CC(319, (unint64_t *)&qword_1011A4910, (uint64_t *)&unk_1011A33B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

uint64_t sub_1006620BC()
{
  return sub_10015FD08(&qword_1011C07D0, &qword_1011C07D8, (void (*)(void))sub_100660840, (void (*)(void))sub_10066098C);
}

uint64_t sub_1006620F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA86A0, 1);
}

uint64_t sub_100662100(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA866C, 1);
}

uint64_t sub_100662134(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8624, 1);
}

uint64_t sub_100662148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogStack.CollectionView(0) - 8) + 80);
  return sub_100659F5C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100662194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for CatalogStack.CollectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 64);
  v16 = type metadata accessor for GeometryProxy(0);
  v4 = *(_QWORD *)(v16 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v14 = *(_QWORD *)(v4 + 64);
  v6 = v0 + v3;

  if (*(_QWORD *)(v0 + v3 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
  }
  swift_release();
  sub_1002BD420(*(_QWORD *)(v6 + 120), *(_QWORD *)(v6 + 128), *(_QWORD *)(v6 + 136), *(_QWORD *)(v6 + 144), *(_BYTE *)(v6 + 152));
  sub_10006B604(*(_QWORD *)(v6 + 160), *(_BYTE *)(v6 + 168));
  v7 = v6 + *(int *)(v1 + 40);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v11 = (v3 + v15 + v5) & ~v5;
  v12 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v4 + 8))(v0 + v11, v16, v12);
  return swift_deallocObject(v0, v11 + v14);
}

uint64_t sub_10066232C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for CatalogStack.CollectionView(0);
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  type metadata accessor for GeometryProxy(0);
  return sub_10065A848(v1 + v4, a1);
}

uint64_t sub_100662398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CatalogStack.CollectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;

  if (*(_QWORD *)(v0 + v3 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
  }
  swift_release();
  sub_1002BD420(*(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144), *(_BYTE *)(v5 + 152));
  sub_10006B604(*(_QWORD *)(v5 + 160), *(_BYTE *)(v5 + 168));
  v6 = v5 + *(int *)(v1 + 40);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1006624E0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogStack.CollectionView(0) - 8) + 80);
  return sub_10065A980(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_10066253C()
{
  uint64_t v0;

  return sub_10065AD28(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100662544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C07F8;
  if (!qword_1011C07F8)
  {
    v1 = sub_100044B54(&qword_1011C07E8);
    sub_1006625C8();
    sub_100049F28(&qword_1011C0820, &qword_1011C0828, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C07F8);
  }
  return result;
}

unint64_t sub_1006625C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0800;
  if (!qword_1011C0800)
  {
    v1 = sub_100044B54(&qword_1011C0808);
    sub_100049F28(&qword_1011C0810, &qword_1011C0818, (uint64_t)&unk_100EC9920);
    sub_100049F28((unint64_t *)&unk_1011B6D70, (uint64_t *)&unk_1011D1210, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0800);
  }
  return result;
}

uint64_t sub_100662664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004BA30(v2, v3);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1006626E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10065AE70(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for CatalogStack.HeaderView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C0928, (uint64_t)&nominal type descriptor for CatalogStack.HeaderView);
}

unint64_t sub_100662720()
{
  unint64_t result;

  result = qword_1011C08B8;
  if (!qword_1011C08B8)
  {
    result = swift_getWitnessTable(&unk_100EC7B98, &type metadata for NavigationTitleModifier);
    atomic_store(result, (unint64_t *)&qword_1011C08B8);
  }
  return result;
}

uint64_t sub_100662764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for UberModifier(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  v11 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 36), v5, v11);
  swift_release();
  return swift_deallocObject(v4, v9);
}

uint64_t sub_1006627FC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UberModifier(0, v6, v7, a4) - 8) + 80);
  return sub_1006582F8(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

unint64_t sub_100662854()
{
  unint64_t result;

  result = qword_1011C08C0;
  if (!qword_1011C08C0)
  {
    result = swift_getWitnessTable(&unk_100EC9A00, &type metadata for ScrollViewBoundsPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1011C08C0);
  }
  return result;
}

char *sub_100662898(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = &a1[v6];
    v8 = (char **)((char *)a2 + v6);
    v9 = v5;
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v8, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, _QWORD *, uint64_t))(v12 + 16))(v7, v8, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v14 = v7;
      v15 = v10;
      v16 = 1;
    }
    else
    {
      *(_QWORD *)v7 = *v8;
      swift_retain();
      v14 = v7;
      v15 = v10;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void sub_1006629D4(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
}

_QWORD *sub_100662A84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v4;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v7, v8, v11);
      v14 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v10, v14);
  return a1;
}

uint64_t sub_100662B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_10004FF60(a1 + v9, (uint64_t *)&unk_1011A3ED0);
    v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        v15 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v10, v11, v13);
        v16 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v16);
  }
  return a1;
}

_QWORD *sub_100662CD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

void **sub_100662DDC(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_10004FF60((uint64_t)a1 + v7, (uint64_t *)&unk_1011A3ED0);
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100662F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100662F20);
}

uint64_t sub_100662F20(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_100662FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100662FAC);
}

char *sub_100662FAC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_100663024(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1003F02CC(319, (unint64_t *)&qword_1011A4910, (uint64_t *)&unk_1011A33B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for NavigationTitleModifier()
{
  return &type metadata for NavigationTitleModifier;
}

uint64_t sub_1006630D0()
{
  return sub_100049F28(&qword_1011C0968, &qword_1011C0970, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_1006630FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = type metadata accessor for UberModifier(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&unk_100EC7980, v5);
  v7 = type metadata accessor for _ViewModifier_Content(255, v5, WitnessTable);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for NavigationTitleModifier);
  v9 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _SafeAreaRegionsIgnoringLayout);
  v10 = sub_100044B54(&qword_1011C0888);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _OpacityEffect);
  v13 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_100049F28(&qword_1011C0890, &qword_1011C0888, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v16 = type metadata accessor for _BackgroundModifier(255, v14, v15);
  v17 = type metadata accessor for ModifiedContent(255, v8, v16);
  v18 = sub_100044B54(&qword_1011C0898);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v7);
  sub_100662720();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v16);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  sub_100049F28(&qword_1011C08C8, &qword_1011C0898, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
}

uint64_t sub_100663378()
{
  return sub_100048748(&qword_1011AA900, type metadata accessor for MotionArtworkView, (uint64_t)&unk_100EC9360);
}

uint64_t sub_1006633A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8718, 1);
}

uint64_t sub_1006633B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA86F0, 1);
}

uint64_t sub_1006633C4()
{
  uint64_t v0;

  return sub_100657484(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1006633CC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1006575AC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C0B28, (uint64_t)&nominal type descriptor for CatalogStack.HeaderView.ArtistHeaderView);
}

unint64_t sub_1006633E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C09D0;
  if (!qword_1011C09D0)
  {
    v1 = sub_100044B54(&qword_1011C09C8);
    sub_10066346C();
    sub_100049F28(&qword_1011C09F8, &qword_1011C0A00, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C09D0);
  }
  return result;
}

unint64_t sub_10066346C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C09D8;
  if (!qword_1011C09D8)
  {
    v1 = sub_100044B54(&qword_1011C09E0);
    sub_100049F28(&qword_1011C09E8, &qword_1011C09F0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C09D8);
  }
  return result;
}

unint64_t sub_1006634F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0A08;
  if (!qword_1011C0A08)
  {
    v1 = sub_100044B54(&qword_1011A2F58);
    sub_100049F28(&qword_1011C0A10, &qword_1011A2F50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0A08);
  }
  return result;
}

uint64_t sub_100663574(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 208);
  sub_100055BAC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));

  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006635CC(uint64_t result)
{
  *(_BYTE *)(result + 424) = 0;
  return result;
}

uint64_t sub_1006635D4(uint64_t result)
{
  *(_BYTE *)(result + 424) = 1;
  return result;
}

uint64_t sub_1006635E8(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100663638(uint64_t a1)
{
  sub_100055BAC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100663688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0A60;
  if (!qword_1011C0A60)
  {
    v1 = sub_100044B54(&qword_1011C0A48);
    sub_100049F28(&qword_1011C0A68, &qword_1011C0A40, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_10005610C(&qword_1011C0A70, &qword_1011C0A78, (void (*)(void))sub_10066372C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0A60);
  }
  return result;
}

unint64_t sub_10066372C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0A80;
  if (!qword_1011C0A80)
  {
    v1 = sub_100044B54(&qword_1011C0A58);
    sub_10005610C(&qword_1011C0A88, &qword_1011C0A90, (void (*)(void))sub_1006637D0);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0A80);
  }
  return result;
}

unint64_t sub_1006637D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0A98;
  if (!qword_1011C0A98)
  {
    v1 = sub_100044B54(&qword_1011C0AA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0A98);
  }
  return result;
}

uint64_t sub_100663834(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_100663884()
{
  unint64_t result;

  result = qword_1011C0AB8;
  if (!qword_1011C0AB8)
  {
    result = swift_getWitnessTable(&unk_100EC7930, &type metadata for CatalogStack.MotionArtwork);
    atomic_store(result, (unint64_t *)&qword_1011C0AB8);
  }
  return result;
}

void **sub_1006638C8(void **a1, void **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = v5;
    v12 = sub_100007E8C(&qword_1011B4D20);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011C09B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v40 = v13;
      v15 = type metadata accessor for GenericMusicItem(0);
      v39 = *(_QWORD *)(v15 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      v16(v9, v10, v15);
      v17 = *(int *)(v12 + 36);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v41 = sub_100007E8C(&qword_10119F7C8);
      if (swift_getEnumCaseMultiPayload(v19, v41) == 1)
      {
        v16(v18, v19, v15);
        v20 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v15))
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          v16(v18, v19, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v18, 0, 1, v15);
        }
        v20 = 0;
      }
      swift_storeEnumTagMultiPayload(v18, v41, v20);
      v9[*(int *)(v12 + 40)] = v10[*(int *)(v12 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v9, 0, 1, v12);
    }
    v22 = sub_100007E8C(&qword_1011C0AC8);
    *(_QWORD *)&v9[*(int *)(v22 + 28)] = *(_QWORD *)&v10[*(int *)(v22 + 28)];
    v23 = a3[6];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = v25[8];
    swift_retain();
    sub_10006B3F8(v26, v27);
    *(_QWORD *)v24 = v26;
    v24[8] = v27;
    v28 = a3[7];
    v29 = (void **)((char *)a1 + v28);
    v30 = (void **)((char *)a2 + v28);
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for UserInterfaceSizeClass(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v33 + 16))(v29, v30, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      }
      v35 = v29;
      v36 = v31;
      v37 = 1;
    }
    else
    {
      *v29 = *v30;
      swift_retain();
      v35 = v29;
      v36 = v31;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return a1;
}

void sub_100663BD4(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (char *)a1 + a2[5];
  v5 = sub_100007E8C(&qword_1011B4D20);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(void (**)(char *, uint64_t))(v7 + 8);
    v8(v4, v6);
    v9 = &v4[*(int *)(v5 + 36)];
    v10 = sub_100007E8C(&qword_10119F7C8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1
      || !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    {
      v8(v9, v6);
    }
  }
  sub_100007E8C(&qword_1011C0AC8);
  swift_release();
  sub_10006B604(*(uint64_t *)((char *)a1 + a2[6]), *((_BYTE *)a1 + a2[6] + 8));
  v11 = (char *)a1 + a2[7];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release();
  }
}

void **sub_100663D70(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = v6;
  v11 = sub_100007E8C(&qword_1011B4D20);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
  {
    v13 = sub_100007E8C(&qword_1011C09B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v37 = v12;
    v14 = type metadata accessor for GenericMusicItem(0);
    v36 = *(_QWORD *)(v14 - 8);
    v15 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    v15(v8, v9, v14);
    v16 = *(int *)(v11 + 36);
    v17 = &v8[v16];
    v18 = &v9[v16];
    v38 = sub_100007E8C(&qword_10119F7C8);
    if (swift_getEnumCaseMultiPayload(v18, v38) == 1)
    {
      v15(v17, v18, v14);
      v19 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, v14))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v15(v17, v18, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v17, 0, 1, v14);
      }
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v38, v19);
    v8[*(int *)(v11 + 40)] = v9[*(int *)(v11 + 40)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v11);
  }
  v21 = sub_100007E8C(&qword_1011C0AC8);
  *(_QWORD *)&v8[*(int *)(v21 + 28)] = *(_QWORD *)&v9[*(int *)(v21 + 28)];
  v22 = a3[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = v24[8];
  swift_retain();
  sub_10006B3F8(v25, v26);
  *(_QWORD *)v23 = v25;
  v23[8] = v26;
  v27 = a3[7];
  v28 = (void **)((char *)a1 + v27);
  v29 = (void **)((char *)a2 + v27);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for UserInterfaceSizeClass(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      v34 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v32 + 16))(v28, v29, v31);
      v34 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
    }
  }
  else
  {
    *v28 = *v29;
    swift_retain();
    v34 = 0;
  }
  swift_storeEnumTagMultiPayload(v28, v30, v34);
  return a1;
}

void **sub_100664058(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  int *v53;
  void *__src;
  void *__srca;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_100007E8C(&qword_1011B4D20);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v53 = a3;
      v17 = type metadata accessor for GenericMusicItem(0);
      v52 = *(_QWORD *)(v17 - 8);
      v18 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      v18(v10, v11, v17);
      v19 = *(int *)(v12 + 36);
      v20 = &v10[v19];
      v21 = &v11[v19];
      __src = (void *)sub_100007E8C(&qword_10119F7C8);
      if (swift_getEnumCaseMultiPayload(v21, __src) == 1)
      {
        v18(v20, v21, v17);
        v22 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v21, 1, v17))
        {
          v33 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v18(v20, v21, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v20, 0, 1, v17);
        }
        v22 = 0;
      }
      a3 = v53;
      swift_storeEnumTagMultiPayload(v20, __src, v22);
      v10[*(int *)(v12 + 40)] = v11[*(int *)(v12 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_22;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011B4D20);
LABEL_7:
    v23 = sub_100007E8C(&qword_1011C09B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_22;
  }
  v24 = type metadata accessor for GenericMusicItem(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v10, v11, v24);
  if (a1 != a2)
  {
    v26 = *(int *)(v12 + 36);
    v27 = &v10[v26];
    v28 = &v11[v26];
    sub_10004FF60((uint64_t)&v10[v26], &qword_10119F7C8);
    v29 = sub_100007E8C(&qword_10119F7C8);
    __srca = v28;
    v30 = v28;
    v31 = v29;
    if (swift_getEnumCaseMultiPayload(v30, v29) == 1)
    {
      (*(void (**)(char *, void *, uint64_t))(v25 + 16))(v27, __srca, v24);
      v32 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(__srca, 1, v24))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v27, __srca, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v25 + 16))(v27, __srca, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v24);
      }
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v31, v32);
  }
  v10[*(int *)(v12 + 40)] = v11[*(int *)(v12 + 40)];
LABEL_22:
  v35 = sub_100007E8C(&qword_1011C0AC8);
  *(_QWORD *)&v10[*(int *)(v35 + 28)] = *(_QWORD *)&v11[*(int *)(v35 + 28)];
  swift_retain();
  swift_release();
  v36 = a3[6];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v40 = v38[8];
  sub_10006B3F8(*(_QWORD *)v38, v40);
  v41 = *(_QWORD *)v37;
  v42 = v37[8];
  *(_QWORD *)v37 = v39;
  v37[8] = v40;
  sub_10006B604(v41, v42);
  if (a1 != a2)
  {
    v43 = a3[7];
    v44 = (void **)((char *)a1 + v43);
    v45 = (void **)((char *)a2 + v43);
    sub_10004FF60((uint64_t)a1 + v43, (uint64_t *)&unk_1011A3ED0);
    v46 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for UserInterfaceSizeClass(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v48 + 16))(v44, v45, v47);
        v50 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      }
    }
    else
    {
      *v44 = *v45;
      swift_retain();
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v46, v50);
  }
  return a1;
}

_QWORD *sub_1006644B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C(&qword_1011B4D20);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011C09B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v32 = v10;
    v12 = type metadata accessor for GenericMusicItem(0);
    v31 = *(_QWORD *)(v12 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v13(v7, v8, v12);
    v14 = *(int *)(v9 + 36);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v33 = sub_100007E8C(&qword_10119F7C8);
    if (swift_getEnumCaseMultiPayload(v16, v33) == 1)
    {
      v13(v15, v16, v12);
      v17 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, v12))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v15, 0, 1, v12);
      }
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v33, v17);
    v7[*(int *)(v9 + 40)] = v8[*(int *)(v9 + 40)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v7, 0, 1, v9);
  }
  v19 = sub_100007E8C(&qword_1011C0AC8);
  *(_QWORD *)&v7[*(int *)(v19 + 28)] = *(_QWORD *)&v8[*(int *)(v19 + 28)];
  v20 = a3[6];
  v21 = a3[7];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  v22[8] = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = (char *)a1 + v21;
  v25 = (char *)a2 + v21;
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for UserInterfaceSizeClass(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
    }
    swift_storeEnumTagMultiPayload(v24, v26, 1);
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  return a1;
}

void **sub_100664780(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  int *v49;
  void *__src;
  void *__srca;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100007E8C(&qword_1011B4D20);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v49 = a3;
      v15 = type metadata accessor for GenericMusicItem(0);
      v48 = *(_QWORD *)(v15 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      v16(v8, v9, v15);
      v17 = *(int *)(v10 + 36);
      v18 = &v8[v17];
      v19 = &v9[v17];
      __src = (void *)sub_100007E8C(&qword_10119F7C8);
      if (swift_getEnumCaseMultiPayload(v19, __src) == 1)
      {
        v16(v18, v19, v15);
        v20 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v19, 1, v15))
        {
          v31 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v16(v18, v19, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v18, 0, 1, v15);
        }
        v20 = 0;
      }
      a3 = v49;
      swift_storeEnumTagMultiPayload(v18, __src, v20);
      v8[*(int *)(v10 + 40)] = v9[*(int *)(v10 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_22;
    }
    goto LABEL_7;
  }
  if (v14)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011B4D20);
LABEL_7:
    v21 = sub_100007E8C(&qword_1011C09B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_22;
  }
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v8, v9, v22);
  if (a1 != a2)
  {
    v24 = *(int *)(v10 + 36);
    v25 = &v8[v24];
    v26 = &v9[v24];
    sub_10004FF60((uint64_t)&v8[v24], &qword_10119F7C8);
    v27 = sub_100007E8C(&qword_10119F7C8);
    __srca = v26;
    v28 = v26;
    v29 = v27;
    if (swift_getEnumCaseMultiPayload(v28, v27) == 1)
    {
      (*(void (**)(char *, void *, uint64_t))(v23 + 32))(v25, __srca, v22);
      v30 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(__srca, 1, v22))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v25, __srca, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v23 + 32))(v25, __srca, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v22);
      }
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v29, v30);
  }
  v8[*(int *)(v10 + 40)] = v9[*(int *)(v10 + 40)];
LABEL_22:
  v33 = sub_100007E8C(&qword_1011C0AC8);
  *(_QWORD *)&v8[*(int *)(v33 + 28)] = *(_QWORD *)&v9[*(int *)(v33 + 28)];
  swift_release();
  v34 = a3[6];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)v36;
  LOBYTE(v36) = v36[8];
  v38 = *(_QWORD *)v35;
  v39 = v35[8];
  *(_QWORD *)v35 = v37;
  v35[8] = (char)v36;
  sub_10006B604(v38, v39);
  if (a1 != a2)
  {
    v40 = a3[7];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_10004FF60((uint64_t)a1 + v40, (uint64_t *)&unk_1011A3ED0);
    v43 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for UserInterfaceSizeClass(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v41, v42, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
      }
      swift_storeEnumTagMultiPayload(v41, v43, 1);
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100664BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100664BCC);
}

uint64_t sub_100664BCC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C0AC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100664C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100664C80);
}

char *sub_100664C80(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C0AC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100664D24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1003F02CC(319, (unint64_t *)&unk_1011C0B38, &qword_1011C09B0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EC7788;
    sub_1003F02CC(319, (unint64_t *)&qword_1011A4910, (uint64_t *)&unk_1011A33B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_100664DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_100044B54(&qword_1011C0978);
  v1 = sub_100044B54(&qword_10119EFD0);
  v7 = sub_100044B54(&qword_1011C0980);
  v8 = sub_100049F28(&qword_1011C0988, &qword_1011C0980, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v3 = sub_100044B54(&qword_10119EFE8);
  v4 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v7 = v3;
  v8 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v7 = v0;
  v8 = v1;
  v9 = OpaqueTypeConformance2;
  v10 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
}

unint64_t sub_100664EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0B70;
  if (!qword_1011C0B70)
  {
    v1 = sub_100044B54(&qword_1011C09A8);
    sub_100664F50();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0B70);
  }
  return result;
}

unint64_t sub_100664F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0B78;
  if (!qword_1011C0B78)
  {
    v1 = sub_100044B54(&qword_1011C09B8);
    sub_100048748(&qword_1011C0A18, type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView, (uint64_t)&unk_100EC7C34);
    sub_10015FD08(&qword_1011C0A20, &qword_1011C0998, (void (*)(void))sub_1006633E8, (void (*)(void))sub_1006634F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0B78);
  }
  return result;
}

uint64_t sub_100664FF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8740, 1);
}

uint64_t sub_100665004()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = (int *)type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v4 = v0 + v3;

  v5 = v0 + v3 + v1[5];
  v6 = sub_100007E8C(&qword_1011B4D20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
    v9(v5, v7);
    v10 = v5 + *(int *)(v6 + 36);
    v11 = sub_100007E8C(&qword_10119F7C8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1
      || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    {
      v9(v10, v7);
    }
  }
  sub_100007E8C(&qword_1011C0AC8);
  swift_release();
  sub_10006B604(*(_QWORD *)(v4 + v1[6]), *(_BYTE *)(v4 + v1[6] + 8));
  v12 = v4 + v1[7];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v17);
}

uint64_t sub_1006651BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogStack.HeaderView.ArtistHeaderView(0) - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1011C0BBC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  return sub_10065D338(v3);
}

unint64_t sub_100665220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0C18;
  if (!qword_1011C0C18)
  {
    v1 = sub_100044B54(&qword_1011C0BF0);
    sub_100049F28(&qword_1011C0C20, &qword_1011C0BE8, (uint64_t)&protocol conformance descriptor for PlaybackButton<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0C18);
  }
  return result;
}

unint64_t sub_1006652A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0C28;
  if (!qword_1011C0C28)
  {
    v1 = sub_100044B54(&qword_1011C0BF8);
    sub_100665328();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0C28);
  }
  return result;
}

unint64_t sub_100665328()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011C0C30;
  if (!qword_1011C0C30)
  {
    v1 = sub_100044B54(&qword_1011C0BE0);
    v2[0] = sub_100044B54(&qword_1011C0BF0);
    v2[1] = type metadata accessor for BorderedButtonStyle(255);
    v2[2] = sub_100665220();
    v2[3] = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0C30);
  }
  return result;
}

unint64_t sub_10066541C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0C38;
  if (!qword_1011C0C38)
  {
    v1 = sub_100044B54(&qword_1011A2F68);
    sub_100049F28(&qword_1011C0C40, &qword_1011A2F60, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0C38);
  }
  return result;
}

unint64_t sub_1006654A4()
{
  unint64_t result;

  result = qword_1011C0C48;
  if (!qword_1011C0C48)
  {
    result = swift_getWitnessTable(&unk_100EC7D30, &type metadata for UndoSuggestLessMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C0C48);
  }
  return result;
}

unint64_t sub_1006654EC()
{
  unint64_t result;

  result = qword_1011C0C50;
  if (!qword_1011C0C50)
  {
    result = swift_getWitnessTable(&unk_100EC7D58, &type metadata for UndoSuggestLessMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C0C50);
  }
  return result;
}

uint64_t sub_100665530(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100FA87AC, 1) + 8);
}

uint64_t sub_100665554(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8784, 1);
}

uint64_t sub_100665564()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124D530);
  sub_100048B14(v0, (uint64_t)qword_10124D530);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000021, 0x8000000100E411C0);
}

uint64_t sub_1006655C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100007E8C(&qword_1011C0C98);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C0CA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100666D94();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v7._object = (void *)0x8000000100E411A0;
  v7._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC7DA8);
  v9 = sub_100007E8C(&qword_1011C0CA8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
}

uint64_t sub_10066572C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2[30] = a1;
  v2[31] = a2;
  v3 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason(0);
  v2[32] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[33] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[34] = swift_task_alloc(v5);
  v2[35] = swift_task_alloc(v5);
  v2[36] = swift_task_alloc(v5);
  v2[37] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicLibrary.UndoDislikeAction(0);
  v2[38] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[39] = v7;
  v2[40] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C0C80);
  v2[41] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[42] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[43] = swift_task_alloc(v10);
  v2[44] = swift_task_alloc(v10);
  v2[45] = swift_task_alloc(v10);
  v2[46] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GenericMusicItemEntity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[47] = swift_task_alloc(v11);
  v2[48] = swift_task_alloc(v11);
  v2[49] = swift_task_alloc(v11);
  v2[50] = swift_task_alloc(v11);
  return swift_task_switch(sub_100665878, 0, 0);
}

uint64_t sub_100665878()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t, __n128);
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t v70;
  _BYTE *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  __n128 v88;
  uint64_t v89;
  unint64_t v90;
  __n128 v91;
  void (*v92)(uint64_t, uint64_t, __n128);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  _BYTE *v97;
  __n128 v98;
  __n128 v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  __n128 v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134[2];

  v1 = (__int128 *)(v0 + 56);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v131 = v0 + 128;
  v2 = *(_QWORD *)(v0 + 248);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 408) = sub_100048B14(v3, (uint64_t)qword_10124CEC8);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD **)(v0 + 400);
    v121 = *(_QWORD *)(v0 + 248);
    v9 = swift_slowAlloc(22, -1);
    v122 = swift_slowAlloc(64, -1);
    v134[0] = v122;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 216) = &type metadata for UndoSuggestLessMusicItemAppIntent;
    v10 = sub_100007E8C(&qword_1011C0C90);
    v11 = String.init<A>(describing:)(v0 + 216, v10);
    *(_QWORD *)(v0 + 224) = sub_100322200(v11, v12, v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v8);
    v13 = sub_1004E1D7C();
    v15 = v14;
    sub_100078DD0((uint64_t)v8);
    *(_QWORD *)(v0 + 232) = sub_100322200(v13, v15, v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240);
    v1 = (__int128 *)(v0 + 56);
    v16 = swift_bridgeObjectRelease();
    swift_release_n(v121, 2, v16);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s – undoing suggest less of item %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v122, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v122, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 248), 2, v7);
  }

  v17 = *(_QWORD **)(v0 + 392);
  IntentParameter.wrappedValue.getter(v17);
  sub_1004E3B00((uint64_t)v1);
  sub_100078DD0((uint64_t)v17);
  if (*(_QWORD *)(v0 + 80))
  {
    v120 = v0 + 152;
    v18 = *(_QWORD *)(v0 + 368);
    v19 = *(_QWORD *)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 336);
    v21 = *(_QWORD *)(v0 + 320);
    v123 = *(_QWORD *)(v0 + 312);
    v127 = *(_QWORD *)(v0 + 360);
    v22 = *(_QWORD *)(v0 + 304);
    sub_100064C48(v1, v0 + 16);
    v23 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 416) = static MusicLibrary.shared.getter(v23);
    v25 = *(_QWORD *)(v0 + 40);
    v24 = *(_QWORD *)(v0 + 48);
    v26 = sub_100007E68((_QWORD *)(v0 + 16), v25);
    static MusicLibraryAction<>.undoDislike.getter(v26);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v26, v21, v25, v22, *(_QWORD *)(v24 + 8), &protocol witness table for MusicLibrary.UndoDislikeAction);
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v21, v22);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v27(v127, v18, v19);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v127, v19);
    if (v28 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
    {
      v29 = *(_QWORD *)(v0 + 360);
      v31 = *(_QWORD *)(v0 + 288);
      v30 = *(_QWORD *)(v0 + 296);
      v33 = *(_QWORD *)(v0 + 256);
      v32 = *(_QWORD *)(v0 + 264);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 96))(v29, *(_QWORD *)(v0 + 328));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v33);
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
      v35 = v34(v31, v30, v33);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter(v36);
      v38 = os_log_type_enabled(v36, v37);
      v39 = *(_QWORD *)(v0 + 288);
      if (v38)
      {
        v40 = *(_QWORD *)(v0 + 280);
        v124 = *(_QWORD *)(v0 + 256);
        v128 = *(_QWORD *)(v0 + 264);
        v41 = swift_slowAlloc(22, -1);
        v132 = swift_slowAlloc(64, -1);
        v134[0] = v132;
        *(_DWORD *)v41 = 136446466;
        *(_QWORD *)(v0 + 152) = &type metadata for UndoSuggestLessMusicItemAppIntent;
        v42 = sub_100007E8C(&qword_1011C0C90);
        v43 = String.init<A>(describing:)(v120, v42);
        *(_QWORD *)(v0 + 160) = sub_100322200(v43, v44, v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
        v45 = swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v34)(v40, v39, v124, v45);
        v46 = String.init<A>(describing:)(v40, v124);
        *(_QWORD *)(v0 + 168) = sub_100322200(v46, v47, v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176);
        v48 = swift_bridgeObjectRelease();
        v49 = *(void (**)(uint64_t, uint64_t, __n128))(v128 + 8);
        v49(v39, v124, v48);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s – unsupported reason %{public}s", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy(v132, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v132, -1, -1);
        swift_slowDealloc(v41, -1, -1);
      }
      else
      {
        v49 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 264) + 8);
        ((void (*)(_QWORD, _QWORD))v49)(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256));
      }

      v74 = *(_QWORD *)(v0 + 264);
      v73 = *(_QWORD *)(v0 + 272);
      v75 = *(_QWORD *)(v0 + 256);
      v34(v73, *(_QWORD *)(v0 + 296), v75);
      v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 88))(v73, v75);
      if (v76 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.unsupportedType(_:))
      {
        v77 = 5;
      }
      else if (v76 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.notDisliked(_:))
      {
        v77 = 1;
      }
      else if (v76 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.subscriptionRequired(_:))
      {
        v77 = 3;
      }
      else if (v76 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
      {
        v77 = 0;
      }
      else if (v76 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        v77 = 2;
      }
      else
      {
        ((void (*)(_QWORD, _QWORD))v49)(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
        v77 = 4;
      }
      v101 = *(_QWORD *)(v0 + 368);
      v102 = *(_QWORD *)(v0 + 328);
      v103 = *(_QWORD *)(v0 + 336);
      v104 = *(_QWORD *)(v0 + 296);
      v105 = *(_QWORD *)(v0 + 256);
      v106 = sub_100666E18();
      swift_allocError(&type metadata for UndoSuggestLessMusicItemIntentError, v106, 0, 0);
      *v107 = v77;
      swift_willThrow(v108);
      v109 = swift_release();
      v49(v104, v105, v109);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
      v100 = (_QWORD *)(v0 + 16);
    }
    else
    {
      if (v28 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
      {
        v66 = *(_QWORD *)(v0 + 40);
        v65 = *(_QWORD *)(v0 + 48);
        v67 = sub_100007E68((_QWORD *)(v0 + 16), v66);
        v68 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
        *(_QWORD *)(v0 + 424) = v68;
        *v68 = v0;
        v68[1] = sub_100666418;
        return MusicLibrary.new_undoDislike<A>(_:)(v67, v66, v65);
      }
      v78 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v27)(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 328));
      v79 = Logger.logObject.getter(v78);
      v80 = static os_log_type_t.error.getter(v79);
      v81 = os_log_type_enabled(v79, v80);
      v82 = *(_QWORD *)(v0 + 352);
      if (v81)
      {
        v119 = *(_QWORD *)(v0 + 344);
        v125 = *(_QWORD *)(v0 + 336);
        v83 = *(_QWORD *)(v0 + 328);
        v84 = swift_slowAlloc(22, -1);
        v129 = swift_slowAlloc(64, -1);
        v134[0] = v129;
        *(_DWORD *)v84 = 136446466;
        *(_QWORD *)(v0 + 128) = &type metadata for UndoSuggestLessMusicItemAppIntent;
        v85 = sub_100007E8C(&qword_1011C0C90);
        v86 = String.init<A>(describing:)(v131, v85);
        *(_QWORD *)(v0 + 136) = sub_100322200(v86, v87, v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
        v88 = swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v27)(v119, v82, v83, v88);
        v89 = String.init<A>(describing:)(v119, v83);
        *(_QWORD *)(v0 + 144) = sub_100322200(v89, v90, v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v120);
        v91 = swift_bridgeObjectRelease();
        v92 = *(void (**)(uint64_t, uint64_t, __n128))(v125 + 8);
        v92(v82, v83, v91);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "%{public}s – unknown supported status %{public}s", (uint8_t *)v84, 0x16u);
        swift_arrayDestroy(v129, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v129, -1, -1);
        swift_slowDealloc(v84, -1, -1);
      }
      else
      {
        v92 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 336) + 8);
        ((void (*)(_QWORD, _QWORD))v92)(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
      }

      v94 = *(_QWORD *)(v0 + 360);
      v93 = *(_QWORD *)(v0 + 368);
      v95 = *(_QWORD *)(v0 + 328);
      v96 = sub_100666E18();
      swift_allocError(&type metadata for UndoSuggestLessMusicItemIntentError, v96, 0, 0);
      *v97 = 4;
      swift_willThrow(v98);
      v99 = swift_release();
      v92(v93, v95, v99);
      ((void (*)(uint64_t, uint64_t))v92)(v94, v95);
      v100 = (_QWORD *)(v0 + 16);
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v100);
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 248);
    sub_100666DD8((uint64_t)v1);
    v51 = swift_retain_n(v50, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    v54 = os_log_type_enabled(v52, v53);
    v56 = *(_QWORD *)(v0 + 248);
    if (v54)
    {
      v57 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      v134[0] = v58;
      *(_DWORD *)v57 = 136446466;
      *(_QWORD *)(v0 + 96) = &type metadata for UndoSuggestLessMusicItemAppIntent;
      v59 = sub_100007E8C(&qword_1011C0C90);
      v60 = String.init<A>(describing:)(v0 + 96, v59);
      *(_QWORD *)(v0 + 104) = sub_100322200(v60, v61, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112);
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2082;
      *(_QWORD *)(v0 + 112) = v56;
      swift_retain();
      v62 = String.init<A>(describing:)(v0 + 112, &type metadata for UndoSuggestLessMusicItemAppIntent);
      *(_QWORD *)(v0 + 120) = sub_100322200(v62, v63, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v131);
      v64 = swift_bridgeObjectRelease();
      swift_release_n(v56, 2, v64);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%{public}s – unsupported type %{public}s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 248), 2, v55);
    }

    v70 = sub_100666E18();
    swift_allocError(&type metadata for UndoSuggestLessMusicItemIntentError, v70, 0, 0);
    *v71 = 5;
    swift_willThrow(v72);
  }
  v110 = *(_QWORD *)(v0 + 392);
  v112 = *(_QWORD *)(v0 + 376);
  v111 = *(_QWORD *)(v0 + 384);
  v114 = *(_QWORD *)(v0 + 360);
  v113 = *(_QWORD *)(v0 + 368);
  v116 = *(_QWORD *)(v0 + 344);
  v115 = *(_QWORD *)(v0 + 352);
  v117 = *(_QWORD *)(v0 + 320);
  v118 = *(_QWORD *)(v0 + 296);
  v126 = *(_QWORD *)(v0 + 288);
  v130 = *(_QWORD *)(v0 + 280);
  v133 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 400));
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v126);
  swift_task_dealloc(v130);
  swift_task_dealloc(v133);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100666418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100666608;
  else
    v3 = sub_10066647C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10066647C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD **)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 352);
  v14 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 328);
  v15 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 296);
  v17 = *(_QWORD *)(v0 + 288);
  v18 = *(_QWORD *)(v0 + 280);
  v19 = *(_QWORD *)(v0 + 272);
  IntentParameter.wrappedValue.getter(v1);
  v7 = sub_100725F20();
  sub_100078D8C((uint64_t)v1, v3);
  sub_100078D8C(v3, v2);
  IntentParameter.wrappedValue.setter(v2);
  sub_100078DD0(v3);
  sub_100078DD0((uint64_t)v1);
  *(_QWORD *)(v0 + 208) = v7;
  v8 = sub_100078E54();
  static IntentResult.result<A>(opensIntent:)(v0 + 208, &type metadata for OpenMusicItemAppIntent, v8);
  v9 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v9);
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v11);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100666608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  v1 = *(_QWORD *)(v0 + 432);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 432);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v35[0] = v7;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 176) = &type metadata for UndoSuggestLessMusicItemAppIntent;
    v8 = sub_100007E8C(&qword_1011C0C90);
    v9 = String.init<A>(describing:)(v0 + 176, v8);
    *(_QWORD *)(v0 + 184) = sub_100322200(v9, v10, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192);
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    *(_QWORD *)(v0 + 192) = v5;
    swift_errorRetain(v5);
    v11 = sub_100007E8C(&qword_1011A14B0);
    v12 = String.init<A>(describing:)(v0 + 192, v11);
    *(_QWORD *)(v0 + 200) = sub_100322200(v12, v13, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s – error undoing suggest less of item %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 432);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
  }

  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 336);
  v19 = sub_100666E18();
  swift_allocError(&type metadata for UndoSuggestLessMusicItemIntentError, v19, 0, 0);
  *v20 = 4;
  swift_willThrow(v21);
  swift_release();
  swift_errorRelease(v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v22 = *(_QWORD *)(v0 + 392);
  v24 = *(_QWORD *)(v0 + 376);
  v23 = *(_QWORD *)(v0 + 384);
  v26 = *(_QWORD *)(v0 + 360);
  v25 = *(_QWORD *)(v0 + 368);
  v28 = *(_QWORD *)(v0 + 344);
  v27 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 320);
  v30 = *(_QWORD *)(v0 + 296);
  v32 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 280);
  v34 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 400));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100666900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C4E0 != -1)
    swift_once(&qword_10119C4E0, sub_100665564);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124D530);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100666974(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011C0C7C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_10066572C(a1, v4);
}

uint64_t sub_1006669CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100666B14();
  *a1 = result;
  return result;
}

uint64_t sub_1006669F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100666D94();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for UndoSuggestLessMusicItemAppIntent()
{
  return &type metadata for UndoSuggestLessMusicItemAppIntent;
}

uint64_t sub_100666A28()
{
  return sub_100049F28(&qword_1011C0C60, &qword_1011C0C68, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100666A54(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_100666A70 + 4 * byte_100EC7C90[a1]))();
}

uint64_t sub_100666A70()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000029, 0x8000000100E412F0);
}

uint64_t sub_100666B0C()
{
  unsigned __int8 *v0;

  return sub_100666A54(*v0);
}

uint64_t sub_100666B14()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_100007E8C(&qword_10119ECC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011AEEF0);
  LocalizedStringResource.init(stringLiteral:)(0x744920636973754DLL, 0xEA00000000006D65);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x8000000100E41170);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_10037DCC0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v5, v2, v22);
}

unint64_t sub_100666D94()
{
  unint64_t result;

  result = qword_1011C0C70;
  if (!qword_1011C0C70)
  {
    result = swift_getWitnessTable(&unk_100EC7CA0, &type metadata for UndoSuggestLessMusicItemAppIntent);
    atomic_store(result, &qword_1011C0C70);
  }
  return result;
}

uint64_t sub_100666DD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011B6150);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100666E18()
{
  unint64_t result;

  result = qword_1011C0C88;
  if (!qword_1011C0C88)
  {
    result = swift_getWitnessTable(&unk_100EC7E84, &type metadata for UndoSuggestLessMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011C0C88);
  }
  return result;
}

uint64_t sub_100666E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for UndoSuggestLessMusicItemIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100666ED0 + 4 * byte_100EC7C9B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100666F04 + 4 * byte_100EC7C96[v4]))();
}

uint64_t sub_100666F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100666F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100666F14);
  return result;
}

uint64_t sub_100666F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100666F28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100666F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100666F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UndoSuggestLessMusicItemIntentError()
{
  return &type metadata for UndoSuggestLessMusicItemIntentError;
}

unint64_t sub_100666F54()
{
  unint64_t result;

  result = qword_1011C0CB0;
  if (!qword_1011C0CB0)
  {
    result = swift_getWitnessTable(&unk_100EC7E5C, &type metadata for UndoSuggestLessMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011C0CB0);
  }
  return result;
}

uint64_t sub_100666F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1011C0CB8 + dword_1011C0CB8);
  v7 = (_QWORD *)swift_task_alloc(unk_1011C0CBC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1000FDE04;
  return v9(a1, a2, a3);
}

_QWORD *sub_100667010(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = _s10TVEpisodesV5ScopeOMa(0);
    swift_retain();
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for TVSeason(0);
      v13 = 1;
    }
    else
    {
      v12 = type metadata accessor for TVShow(0);
      v13 = 0;
    }
    (*(void (**)(char *, char *))(*(_QWORD *)(v12 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v15 = (_QWORD *)((char *)v7 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[9];
    *(_WORD *)((char *)v7 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *(_WORD *)((char *)v7 + v18) = *(_WORD *)((char *)a2 + v18);
    v19 = a3[11];
    *(_QWORD *)((char *)v7 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v7 + v19) = *(_QWORD *)((char *)a2 + v19);
    v20 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v21 = (_QWORD *)((char *)v7 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(_QWORD *)((char *)v7 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t _s10TVEpisodesV5ScopeOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C0DE8, (uint64_t)&_s10TVEpisodesV5ScopeOMn);
}

double sub_1006671A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = _s10TVEpisodesV5ScopeOMa(0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
    v6 = type metadata accessor for TVSeason(0);
  else
    v6 = type metadata accessor for TVShow(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_10066725C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a2 + v6;
  v8 = _s10TVEpisodesV5ScopeOMa(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for TVSeason(0);
    v10 = 1;
  }
  else
  {
    v9 = type metadata accessor for TVShow(0);
    v10 = 0;
  }
  v11 = (char *)a1 + v6;
  (*(void (**)(char *, char *))(*(_QWORD *)(v9 - 8) + 16))(v11, v7);
  swift_storeEnumTagMultiPayload(v11, v8, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[9];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  *(_WORD *)((char *)a1 + v16) = *(_WORD *)((char *)a2 + v16);
  v17 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v18 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1006673B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10005B748((uint64_t)a1 + v6, _s10TVEpisodesV5ScopeOMa);
    v9 = _s10TVEpisodesV5ScopeOMa(0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for TVSeason(0);
      v11 = 1;
    }
    else
    {
      v10 = type metadata accessor for TVShow(0);
      v11 = 0;
    }
    (*(void (**)(char *, char *))(*(_QWORD *)(v10 - 8) + 16))(v7, v8);
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *v16 = *v17;
  v16[1] = v17[1];
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  v19[1] = v20[1];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v21 = a3[13];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_100667590(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a2 + v6;
  v8 = _s10TVEpisodesV5ScopeOMa(0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for TVSeason(0);
    v10 = 1;
  }
  else
  {
    v9 = type metadata accessor for TVShow(0);
    v10 = 0;
  }
  v11 = (char *)a1 + v6;
  (*(void (**)(char *, char *))(*(_QWORD *)(v9 - 8) + 32))(v11, v7);
  swift_storeEnumTagMultiPayload(v11, v8, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[9];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  *(_WORD *)((char *)a1 + v13) = *(_WORD *)((char *)a2 + v13);
  v14 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  return a1;
}

_QWORD *sub_1006676A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10005B748((uint64_t)a1 + v6, _s10TVEpisodesV5ScopeOMa);
    v9 = _s10TVEpisodesV5ScopeOMa(0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for TVSeason(0);
      v11 = 1;
    }
    else
    {
      v10 = type metadata accessor for TVShow(0);
      v11 = 0;
    }
    (*(void (**)(char *, char *))(*(_QWORD *)(v10 - 8) + 32))(v7, v8);
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  *v21 = *v22;
  v21[1] = v22[1];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  v23 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10066783C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100667848);
}

uint64_t sub_100667848(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s10TVEpisodesV5ScopeOMa(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1006678C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006678D0);
}

char *sub_1006678D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s10TVEpisodesV5ScopeOMa(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s10TVEpisodesVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C0D18, (uint64_t)&_s10TVEpisodesVMn);
}

uint64_t sub_100667958(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = _s10TVEpisodesV5ScopeOMa(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100EC7EF0;
    v4[3] = &unk_100EC7F08;
    v4[4] = &unk_100EC7F20;
    v4[5] = &unk_100EC7F20;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_100EC7F38;
    v4[9] = &unk_100EC7F08;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100667A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for TVSeason(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for TVShow(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_100667AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for TVSeason(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for TVShow(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_100667B54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryTVEpisodeFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100667B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v24[13];
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  _QWORD v28[6];

  v25 = a1;
  v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v24[7] = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v24[12] = (char *)v24 - v5;
  v6 = type metadata accessor for TVEpisode(0);
  v24[11] = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v24[10] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A03B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v24[8] = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v24 - v12;
  v14 = type metadata accessor for TVSeason(0);
  v15 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v16 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v24[9] = v6;
  MusicLibrarySectionedRequest.init()(v14, v6, v15, v16);
  sub_100668938((uint64_t)v13);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v17, v8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v1 + *(int *)(v2 + 24)), v8);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v1 + *(int *)(v2 + 28)));
  KeyPath = swift_getKeyPath(&unk_100EC8098);
  v28[0] = TVEpisode.id.getter(KeyPath);
  v28[1] = v19;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v28, v8, &protocol witness table for MusicItemID);
  v20 = v25;
  swift_bridgeObjectRelease();
  swift_release();
  v28[3] = v8;
  v28[4] = sub_1006697E8();
  v21 = sub_100049F68(v28);
  (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 16))(v21, v13, v8);
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v28, v26);
  v22 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 0, 1, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_1006681FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[8];
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[6];

  v3 = v2;
  v37 = a2;
  v5 = sub_100007E8C(&qword_1011A03B0);
  __chkstk_darwin(v5);
  v32 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v7);
  v30[5] = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v36 = (char *)v30 - v10;
  __chkstk_darwin(v11);
  v34 = (char *)v30 - v12;
  v31 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v31);
  v30[6] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v33 = (char *)v30 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)v30 - v17;
  v41[3] = v5;
  v41[4] = sub_1006697E8();
  v19 = sub_100049F68(v41);
  v20 = type metadata accessor for TVSeason(0);
  v21 = type metadata accessor for TVEpisode(0);
  v22 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v23 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v30[7] = v20;
  v30[4] = v22;
  MusicLibrarySectionedRequest.init()(v20, v21, v22, v23);
  sub_100668938((uint64_t)v19);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v24, v5);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v3 + *(int *)(v7 + 24)), v5);
  v35 = v7;
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v3 + *(int *)(v7 + 28)));
  sub_100669834(a1, (uint64_t)v18);
  v25 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v21) == 1)
  {
    sub_10004FF60((uint64_t)v18, &qword_10119FD80);
    v38 = 0u;
    v39 = 0u;
    v40 = 0;
  }
  else
  {
    *((_QWORD *)&v39 + 1) = v21;
    v40 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v26 = sub_100049F68(&v38);
    (*(void (**)(_QWORD *, char *, uint64_t))(v25 + 32))(v26, v18, v21);
  }
  v27 = v37;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v41, &v38);
  v28 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
}

uint64_t sub_100668920(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvShows.getter);
}

uint64_t sub_10066892C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvSeasons.getter);
}

uint64_t sub_100668938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v21[2];

  v21[1] = a1;
  v2 = type metadata accessor for TVSeason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s10TVEpisodesVMa(0);
  sub_10005B704(v1 + *(int *)(v13 + 20), (uint64_t)v12, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    KeyPath = swift_getKeyPath(&unk_100EC8048);
    v15 = sub_100007E8C(&qword_1011A03B0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v5, v15);
    v16 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v18 = swift_getKeyPath(&unk_100EC8070);
    v19 = sub_100007E8C(&qword_1011A03B0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v18, v9, v19);
    v20 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
  }
}

uint64_t sub_100668B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for TVSeason(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TVShow(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v14, v15);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    Hasher._combine(_:)(1uLL);
    v16 = sub_100048748(&qword_1011A0248, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    Hasher._combine(_:)(0);
    v18 = sub_100048748(&qword_1011A0250, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

Swift::Int sub_100668CE0(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_100668B14);
}

Swift::Int sub_100668CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_100668B14);
}

uint64_t sub_100668D00()
{
  return sub_100048748(&qword_1011C0E20, _s10TVEpisodesV5ScopeOMa, (uint64_t)&unk_100EC7F58);
}

void sub_100668D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  v6 = _s10TVEpisodesVMa(0);
  sub_100668B14(a1);
  Hasher._combine(_:)(*(_BYTE *)(v1 + *(int *)(v6 + 24)));
  v7 = (uint64_t *)(v1 + *(int *)(v6 + 28));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_100668E44()
{
  uint64_t v0;
  Swift::UInt8 v1;
  uint64_t v2;
  uint64_t v3;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  return ((uint64_t (*)(void))((char *)sub_100668F28 + 4 * byte_100EC7ECF[*(unsigned __int8 *)(v2 + *(int *)(v3 + 36))]))();
}

void sub_100668F28()
{
  __int128 *v0;
  Swift::UInt8 v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  v4 = *(_QWORD *)(v2 + v3[10]);
  swift_bridgeObjectRetain();
  sub_100046220((uint64_t)v0, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 + v3[11]);
  swift_bridgeObjectRetain();
  sub_100045DAC(v0, v5);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v2 + v3[12]);
  if ((_DWORD)v6 != 7)
  {
    Hasher._combine(_:)(1u);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(0);
  v7 = (uint64_t *)(v2 + v3[13]);
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v0, v8, v9);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v2 + v3[14]);
  swift_bridgeObjectRetain();
  sub_100046164((uint64_t)v0, v10);
  swift_bridgeObjectRelease();
}

void sub_1006691A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v2;
  v6 = type metadata accessor for TVSeason(0);
  v7 = type metadata accessor for TVEpisode(0);
  v8 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v9 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  MusicLibrarySectionedRequest.init()(v6, v7, v8, v9);
  sub_100668938(a2);
  v10 = *v4;
  swift_retain();
  v11 = sub_100007E8C(&qword_1011A03B0);
  MusicLibrarySectionedRequest.library.setter(v10, v11);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v4 + *(int *)(a1 + 24)), v11);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)((char *)v4 + *(int *)(a1 + 28)));
}

Swift::Int sub_1006692B0(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_100668D2C);
}

Swift::Int sub_1006692C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_100668D2C);
}

uint64_t sub_1006692D0()
{
  return sub_100048748(&qword_1011C0E28, _s10TVEpisodesVMa, (uint64_t)&unk_100EC7FC0);
}

uint64_t sub_1006692FC(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C0F08, _s10TVEpisodesVMa, (uint64_t)&unk_100EC7FE8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100669338(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvSeasons.getter);
}

uint64_t sub_100669344(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvShows.getter);
}

uint64_t sub_100669350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = type metadata accessor for TVSeason(0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVShow(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - v13;
  v15 = sub_100007E8C(&qword_1011C0F10);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v17[*(int *)(v18 + 48)];
  sub_10005B704(a1, (uint64_t)v17, _s10TVEpisodesV5ScopeOMa);
  sub_10005B704(v29, v19, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v17, v9) == 1)
  {
    sub_10005B704((uint64_t)v17, (uint64_t)v11, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v21 = v26;
      v20 = v27;
      v5 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, v19, v28);
      v22 = static TVSeason.== infix(_:_:)(v11, v21);
      v23 = *(void (**)(char *, uint64_t))(v20 + 8);
      v23(v21, v5);
      v24 = v11;
LABEL_9:
      v23(v24, v5);
      sub_10005B748((uint64_t)v17, _s10TVEpisodesV5ScopeOMa);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  }
  else
  {
    sub_10005B704((uint64_t)v17, (uint64_t)v14, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v19, v5);
      v22 = static TVShow.== infix(_:_:)(v14, v8);
      v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v8, v5);
      v24 = v14;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  sub_10004FF60((uint64_t)v17, &qword_1011C0F10);
  v22 = 0;
  return v22 & 1;
}

uint64_t sub_1006695F4(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  int v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v4 = (int *)_s10TVEpisodesVMa(0);
  if ((sub_100669350((uint64_t)a1 + v4[5], (uint64_t)a2 + v4[5]) & 1) == 0
    || *((unsigned __int8 *)a1 + v4[6]) != *((unsigned __int8 *)a2 + v4[6]))
  {
    return 0;
  }
  v6 = v4[7];
  v7 = *(_QWORD *)((char *)a1 + v6);
  v8 = *(_QWORD *)((char *)a1 + v6 + 8);
  v9 = (_QWORD *)((char *)a2 + v6);
  v10 = v9[1];
  v11 = v7 == *v9 && v8 == v10;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, *v9, v10, 0) & 1) == 0)
    return 0;
  v12 = v4[8];
  v13 = *((unsigned __int8 *)a1 + v12 + 1);
  v14 = *((unsigned __int8 *)a2 + v12 + 1);
  sub_1005CFF5C(*((_BYTE *)a1 + v12));
  if ((v15 & 1) == 0)
    return 0;
  if (((v13 ^ v14) & 1) != 0)
    return 0;
  v16 = v4[9];
  v17 = *((unsigned __int8 *)a1 + v16 + 1);
  v18 = *((unsigned __int8 *)a2 + v16 + 1);
  sub_1005CFF5C(*((_BYTE *)a1 + v16));
  if ((v19 & 1) == 0
    || ((v17 ^ v18) & 1) != 0
    || (sub_1002EBD18(*(_QWORD *)((char *)a1 + v4[10]), *(_QWORD *)((char *)a2 + v4[10])) & 1) == 0
    || (sub_10016CD08(*(_QWORD *)((char *)a1 + v4[11]), *(_QWORD *)((char *)a2 + v4[11])) & 1) == 0)
  {
    return 0;
  }
  v20 = v4[12];
  v21 = *((unsigned __int8 *)a1 + v20);
  v22 = *((unsigned __int8 *)a2 + v20);
  if ((_DWORD)v21 != 7)
  {
    if ((_DWORD)v22 != 7 && (sub_1005CFF58(v21, v22) & 1) != 0)
      goto LABEL_21;
    return 0;
  }
  if ((_DWORD)v22 != 7)
    return 0;
LABEL_21:
  v23 = v4[13];
  v24 = *(_QWORD *)((char *)a1 + v23);
  v25 = *(_QWORD *)((char *)a1 + v23 + 8);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  if ((v24 != *v26 || v25 != v27) && (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 0) & 1) == 0)
    return 0;
  return sub_1002EBFA4(*(_QWORD *)((char *)a1 + v4[14]), *(_QWORD *)((char *)a2 + v4[14]));
}

uint64_t sub_1006697A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryTVEpisodeFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1006697E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C0F18;
  if (!qword_1011C0F18)
  {
    v1 = sub_100044B54(&qword_1011A03B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C0F18);
  }
  return result;
}

uint64_t sub_100669834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119FD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double _s11AttributionVwxx(uint64_t a1)
{
  double result;

  sub_1005FFE08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t _s11AttributionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1005FFDE4(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t _s11AttributionVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1005FFDE4(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1005FFE08(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s11AttributionVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1005FFE08(v5, v6, v7);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *_s11AttributionVMa()
{
  return &_s11AttributionVN;
}

uint64_t _s11AttributionV4DataOwxx(uint64_t a1)
{
  return sub_1005FFE08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11AttributionV4DataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1005FFDE4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11AttributionV4DataOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1005FFDE4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1005FFE08(v6, v7, v8);
  return a1;
}

uint64_t _s11AttributionV4DataOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1005FFE08(v4, v5, v6);
  return a1;
}

ValueMetadata *_s11AttributionV4DataOMa()
{
  return &_s11AttributionV4DataON;
}

_QWORD *sub_100669AEC@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10023B3D4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100669B38(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10023B3D4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v1);
}

uint64_t sub_100669B80()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_100669BA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for RedactionReasons(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.redactionReasons.setter(v4);
}

uint64_t sub_100669C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
      return sub_1002EC0CC(v3, *(_QWORD *)a2);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (v3 == v4 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v4, v6, 0);
}

uint64_t sub_100669C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _QWORD v44[2];
  char v45;

  v2 = v1;
  v42 = a1;
  v3 = sub_100007E8C(&qword_1011C0F60);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = sub_100007E8C(&qword_1011C0F68);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011C0F70);
  __chkstk_darwin(v41);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  sub_10066B20C((__int128 *)v1, (uint64_t)&v43);
  sub_10066B20C(&v43, (uint64_t)v44);
  if ((v45 & 1) != 0)
  {
    v17 = v44[0];
    v18 = v44[1];
    v19 = *(_QWORD *)(v2 + 32);
    v40 = *(_QWORD *)(v2 + 24);
    v20 = swift_allocObject(&unk_1010D5120, 72, 7);
    v21 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v20 + 32) = v21;
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v20 + 56) = v17;
    *(_QWORD *)(v20 + 64) = v18;
    *((_QWORD *)v5 + 4) = swift_getKeyPath(&unk_100EC8168);
    v5[40] = 0;
    *((_QWORD *)v5 + 6) = swift_getKeyPath(&unk_100EC8190);
    v5[56] = 0;
    v22 = &v5[*(int *)(v3 + 48)];
    *(_QWORD *)v22 = swift_getKeyPath(&unk_100EC81B8);
    v23 = sub_100007E8C(&qword_1011AED10);
    swift_storeEnumTagMultiPayload(v22, v23, 0);
    *(_QWORD *)v5 = sub_10066B25C;
    *((_QWORD *)v5 + 1) = v20;
    *((_QWORD *)v5 + 2) = v40;
    *((_QWORD *)v5 + 3) = v19;
    sub_100065228((uint64_t)v5, (uint64_t)v8, &qword_1011C0F60);
    sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011C0F60);
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    sub_10066B360((uint64_t)&v43);
    swift_retain();
    sub_10066B360((uint64_t)&v43);
    v24 = sub_100049F28(&qword_1011C0F78, &qword_1011C0F70, (uint64_t)&unk_100EC82C4);
    v25 = sub_100049F28(&qword_1011C0F80, &qword_1011C0F60, (uint64_t)&unk_100EC82C4);
    swift_retain();
    _ConditionalContent<>.init(storage:)(v11, v41, v3, v24, v25);
    v26 = (uint64_t)v8;
    v27 = &qword_1011C0F60;
  }
  else
  {
    v28 = v44[0];
    v29 = *(_QWORD *)(v1 + 24);
    v30 = *(_QWORD *)(v2 + 32);
    v31 = swift_allocObject(&unk_1010D5148, 64, 7);
    v32 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v31 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v31 + 32) = v32;
    *(_QWORD *)(v31 + 48) = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v31 + 56) = v28;
    *((_QWORD *)v13 + 4) = swift_getKeyPath(&unk_100EC8168);
    v13[40] = 0;
    *((_QWORD *)v13 + 6) = swift_getKeyPath(&unk_100EC8190);
    v13[56] = 0;
    v33 = v41;
    v34 = &v13[*(int *)(v41 + 48)];
    *(_QWORD *)v34 = swift_getKeyPath(&unk_100EC81B8);
    v35 = sub_100007E8C(&qword_1011AED10);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    *(_QWORD *)v13 = sub_10066B3C8;
    *((_QWORD *)v13 + 1) = v31;
    *((_QWORD *)v13 + 2) = v29;
    *((_QWORD *)v13 + 3) = v30;
    sub_100065228((uint64_t)v13, (uint64_t)v16, &qword_1011C0F70);
    sub_10004A160((uint64_t)v16, (uint64_t)v11, &qword_1011C0F70);
    swift_storeEnumTagMultiPayload(v11, v9, 0);
    sub_10066B360((uint64_t)&v43);
    swift_retain();
    sub_10066B360((uint64_t)&v43);
    v36 = sub_100049F28(&qword_1011C0F78, &qword_1011C0F70, (uint64_t)&unk_100EC82C4);
    v37 = sub_100049F28(&qword_1011C0F80, &qword_1011C0F60, (uint64_t)&unk_100EC82C4);
    swift_retain();
    _ConditionalContent<>.init(storage:)(v11, v33, v3, v36, v37);
    v26 = (uint64_t)v16;
    v27 = &qword_1011C0F70;
  }
  return sub_10004FF60(v26, v27);
}

double sub_10066A084@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  v9 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v13 = *(_QWORD *)(v1 + 8);
    swift_getKeyPath(&unk_100EC8168);
    sub_1005FFDE4(v12, v13, 1);
    swift_retain();
    v15 = sub_100824E38(v14, 0);
    swift_release();
    if ((v15 & 1) != 0)
    {
      if (qword_10119C4E8 != -1)
        swift_once(&qword_10119C4E8, sub_10066B7F8);
      v16 = qword_1011C0F28;
    }
    else
    {
      if (qword_10119C4F0 != -1)
        swift_once(&qword_10119C4F0, sub_10066B884);
      v16 = qword_1011C0F40;
    }
    v18 = sub_100048B14(v3, (uint64_t)v16);
    sub_10066B968(v18, (uint64_t)v5);
    sub_10066B9AC((uint64_t)v5, (uint64_t)v8);
    v19 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, v8, v19);
    sub_1005FFE08(v12, v13, 1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    PlaylistCurators.View.init(configuration:)(*(_QWORD *)v1, v11);
    swift_bridgeObjectRetain();
    PlaylistCurators.View.fontTextStyle.getter(a1);
    sub_10005B748((uint64_t)v11, type metadata accessor for PlaylistCurators.View);
  }
  return result;
}

uint64_t sub_10066A280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t WitnessTable;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t OpaqueTypeConformance2;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v68 = a1;
  v80 = v4;
  v79 = type metadata accessor for Button(255, v5, v4);
  v103 = v79;
  v104 = type metadata accessor for BorderlessButtonStyle(255);
  v78 = v104;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v79);
  v105 = WitnessTable;
  v106 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v76 = v106;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v103, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v7 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v5);
  v8 = type metadata accessor for Group(0, v7);
  v65 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - v9;
  v11 = sub_100044B54(&qword_1011BE340);
  v75 = v8;
  v12 = type metadata accessor for ModifiedContent(0, v8, v11);
  v66 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v73 = v12;
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v67 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v69 = (uint64_t)&v62 - v20;
  v72 = type metadata accessor for Optional(0, v16);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v71 = (uint64_t)&v62 - v26;
  v27 = *v2;
  v74 = v7;
  if (v27)
  {
    v62 = (uint64_t)&v62;
    v64 = a2;
    v28 = v2[1];
    __chkstk_darwin(v24);
    v63 = v17;
    *(&v62 - 6) = v5;
    v29 = v80;
    *(&v62 - 5) = v80;
    *(&v62 - 4) = (uint64_t)v2;
    *(&v62 - 3) = v27;
    *(&v62 - 2) = v28;
    swift_retain();
    v103 = v79;
    v104 = v78;
    v105 = WitnessTable;
    v106 = v76;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v87 = v29;
    v30 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
    Group<A>.init(content:)(sub_10066C8B4, &v62 - 8, v7, v30, v31);
    v103 = sub_10066AFD4();
    v85 = v30;
    v32 = v75;
    v33 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v75);
    View.foregroundStyle<A>(_:)(&v103, v32, &type metadata for Color, v33, &protocol witness table for Color);
    v34 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v10, v32, v34);
    v35 = AccessibilityIdentifier.containerDetailHeaderAttribution.unsafeMutableAddressor();
    v36 = *v35;
    v37 = v35[1];
    v38 = sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v83 = v33;
    v84 = v38;
    swift_bridgeObjectRetain();
    v39 = v73;
    v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v73);
    v41 = (uint64_t)v67;
    View.accessibilityIdentifier(_:)(v36, v37, v39, v40);
    v42 = v28;
    a2 = v64;
    sub_10004BA30(v27, v42);
    v43 = swift_bridgeObjectRelease();
    v44 = v14;
    v45 = v39;
    (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v44, v39, v43);
    v46 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    v81 = v40;
    v82 = v46;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
    v47 = v69;
    sub_10081EB14(v41, v16, v69);
    v48 = v63;
    v49 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    v49(v41, v16);
    sub_1000EA744(v47, v16, (uint64_t)v22);
    v49(v47, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v22, 0, 1, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v22, 1, 1, v16, v25);
    v103 = v79;
    v104 = v78;
    v105 = WitnessTable;
    v106 = v76;
    v101 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v102 = v80;
    v100 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
    v50 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v75);
    v51 = sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v98 = v50;
    v99 = v51;
    v45 = v73;
    v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v73);
    v53 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    v96 = v52;
    v97 = v53;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  }
  v54 = v71;
  sub_1004D497C((uint64_t)v22, v16, v71);
  v55 = *(void (**)(char *, uint64_t))(v70 + 8);
  v56 = v72;
  v55(v22, v72);
  v103 = v79;
  v104 = v78;
  v105 = WitnessTable;
  v106 = v76;
  v94 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v95 = v80;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v74);
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v75);
  v58 = sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v91 = v57;
  v92 = v58;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v45);
  v60 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v89 = v59;
  v90 = v60;
  v88 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v56);
  sub_1000EA744(v54, v56, a2);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v56);
}

uint64_t sub_10066AA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v60 = a2;
  v61 = a3;
  v59 = a1;
  v66 = a6;
  v8 = type metadata accessor for BorderlessButtonStyle(0);
  v58 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v57 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a5;
  v10 = type metadata accessor for Button(0, a4, a5);
  v56 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v55 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v10);
  v14 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v67 = v10;
  v68 = v14;
  v73 = v10;
  v74 = v8;
  v65 = v8;
  v69 = WitnessTable;
  v75 = WitnessTable;
  v76 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v73, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v16 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v55 - v20;
  v22 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)v55 - v27;
  v29 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a4);
  v63 = *(_QWORD *)(v29 - 8);
  v64 = v29;
  v32 = __chkstk_darwin(v29);
  v62 = (char *)v55 - v33;
  v34 = *(_QWORD *)(v31 + 16);
  if (v34)
  {
    v55[1] = v55;
    v59 = *(_QWORD *)(v31 + 24);
    v35 = v59;
    __chkstk_darwin(v30);
    v36 = v70;
    v55[-4] = a4;
    v55[-3] = v36;
    v37 = v61;
    v55[-2] = v60;
    v55[-1] = v37;
    swift_retain_n(v35, 2);
    v38 = Button.init(action:label:)(v34, v35, sub_10066C8C4, &v55[-6], a4, v36);
    v39 = v57;
    BorderlessButtonStyle.init()(v38);
    v60 = v16;
    v61 = v34;
    v41 = v67;
    v40 = v68;
    v42 = v65;
    v43 = v69;
    View.buttonStyle<A>(_:)(v39, v67, v65, v69, v68);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v42);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v41);
    v73 = v41;
    v74 = v42;
    v75 = v43;
    v76 = v40;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v73, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10081EB14((uint64_t)v18, OpaqueTypeMetadata2, (uint64_t)v21);
    v45 = *(void (**)(char *, uint64_t))(v60 + 8);
    v45(v18, OpaqueTypeMetadata2);
    sub_1000EA744((uint64_t)v21, OpaqueTypeMetadata2, (uint64_t)v18);
    v46 = (uint64_t)v62;
    sub_100817130((uint64_t)v18, OpaqueTypeMetadata2, a4, OpaqueTypeConformance2, v70);
    sub_10004BA30(v61, v59);
    v45(v18, OpaqueTypeMetadata2);
    v45(v21, OpaqueTypeMetadata2);
  }
  else
  {
    ((void (*)(__n128))v60)(v32);
    v47 = v70;
    sub_10081EB14((uint64_t)v25, a4, (uint64_t)v28);
    v48 = *(void (**)(char *, uint64_t))(v22 + 8);
    v48(v25, a4);
    sub_1000EA744((uint64_t)v28, a4, (uint64_t)v25);
    v49 = v65;
    v73 = v67;
    v74 = v65;
    v75 = v69;
    v76 = v68;
    v50 = swift_getOpaqueTypeConformance2(&v73, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v51 = v47;
    v46 = (uint64_t)v62;
    sub_1008171F4((uint64_t)v25, OpaqueTypeMetadata2, a4, v50, v51);
    v48(v25, a4);
    v52 = v28;
    v42 = v49;
    v48(v52, a4);
  }
  v73 = v67;
  v74 = v42;
  v75 = v69;
  v76 = v68;
  v71 = swift_getOpaqueTypeConformance2(&v73, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v72 = v70;
  v53 = v64;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v64);
  sub_1000EA744(v46, v53, v66);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v46, v53);
}

uint64_t sub_10066AEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(__n128);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v15 - v10;
  v12(v9);
  sub_10081EB14((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_1000EA744((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_10066AFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  __n128 v13;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for RedactionReasons(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - v7;
  v9 = sub_100825264((uint64_t)&v23 - v7);
  static RedactionReasons.placeholder.getter(v9);
  v10 = sub_100048748(&qword_1011C10B8, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v5, v2, v10);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  v12(v8, v2);
  if ((v11 & 1) != 0)
    return static Color.primary.getter(v13);
  v15 = *(_QWORD *)(v1 + 32);
  v16 = *(_BYTE *)(v1 + 40);
  sub_10006B3F8(v15, v16);
  v17 = sub_100824E38(v15, v16);
  v18 = sub_10006B604(v15, v16);
  if ((v17 & 1) != 0)
    return static Color.accentColor.getter(v18, v19);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = *(_BYTE *)(v1 + 56);
  sub_10006B3F8(v20, v21);
  v22 = sub_100824E5C(v20, v21);
  v18 = sub_10006B604(v20, v21);
  if ((v22 & 0xFE) == 2)
    return static Color.accentColor.getter(v18, v19);
  else
    return static Color.primary.getter(v13);
}

uint64_t sub_10066B158@<X0>(uint64_t a1@<X8>)
{
  return sub_100669C74(a1);
}

unint64_t sub_10066B194(uint64_t a1)
{
  unint64_t result;

  result = sub_10066B1B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10066B1B8()
{
  unint64_t result;

  result = qword_1011C0F58;
  if (!qword_1011C0F58)
  {
    result = swift_getWitnessTable(&unk_100EC8118, &_s11AttributionVN);
    atomic_store(result, (unint64_t *)&qword_1011C0F58);
  }
  return result;
}

uint64_t sub_10066B1FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8908, 1);
}

uint64_t sub_10066B20C(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_10066B224()
{
  uint64_t v0;

  sub_1005FFE08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 72);
}

uint64_t sub_10066B25C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;

  v4 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  KeyPath = swift_getKeyPath(&unk_100EC8168);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  return swift_bridgeObjectRetain(v3);
}

_QWORD *sub_10066B2A8@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10023B3D4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10066B2F4(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10023B3D4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v1);
}

uint64_t sub_10066B33C()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_10066B360(uint64_t a1)
{
  sub_1005FFDE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_10066B390()
{
  uint64_t v0;

  sub_1005FFE08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 64);
}

uint64_t sub_10066B3C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  PlaylistCurators.View.init(configuration:)(*(_QWORD *)(v1 + 56), a1);
  return swift_bridgeObjectRetain();
}

uint64_t _s11AttributionV4TextV5SpecsVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C0FE0;
  if (!qword_1011C0FE0)
    return swift_getSingletonMetadata(a1, &_s11AttributionV4TextV5SpecsVMn);
  return result;
}

uint64_t sub_10066B42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t KeyPath;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  char v45;
  uint64_t result;
  uint64_t v47;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  _QWORD v55[2];

  v9 = a4 & 1;
  v10 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v10);
  v12 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v13);
  v53 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v54 = &v48[-v16];
  __chkstk_darwin(v17);
  v19 = &v48[-v18];
  __chkstk_darwin(v20);
  v22 = &v48[-v21];
  v55[0] = a1;
  v55[1] = a2;
  v23 = sub_100055B68();
  swift_bridgeObjectRetain();
  v24 = Text.init<A>(_:)(v55, &type metadata for String, v23);
  v26 = v25;
  LODWORD(v51) = v27;
  v52 = v28;
  sub_10006B3F8(a3, v9);
  LOBYTE(v23) = sub_100824E38(a3, v9);
  sub_10006B604(a3, v9);
  if ((v23 & 1) != 0)
  {
    if (qword_10119C4E8 != -1)
      swift_once(&qword_10119C4E8, sub_10066B7F8);
    v29 = qword_1011C0F28;
  }
  else
  {
    if (qword_10119C4F0 != -1)
      swift_once(&qword_10119C4F0, sub_10066B884);
    v29 = qword_1011C0F40;
  }
  v30 = sub_100048B14(v13, (uint64_t)v29);
  sub_10066B968(v30, (uint64_t)v19);
  sub_10066B9AC((uint64_t)v19, (uint64_t)v22);
  v31 = type metadata accessor for Font.Design(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  v32 = static Font.system(_:design:weight:)(v22, v12, *(_QWORD *)&v22[*(int *)(v13 + 20)], 0);
  sub_10004FF60((uint64_t)v12, &qword_1011C4F30);
  sub_10005B748((uint64_t)v22, _s11AttributionV4TextV5SpecsVMa);
  v33 = v51 & 1;
  v34 = Text.font(_:)(v32, v24, v26, v51 & 1, v52);
  v50 = v35;
  v51 = v36;
  v49 = v37;
  sub_100055BAC(v24, v26, v33);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100EC8318);
  sub_10006B3F8(a3, v9);
  v39 = sub_100824E38(a3, v9);
  sub_10006B604(a3, v9);
  if ((v39 & 1) != 0)
  {
    if (qword_10119C4E8 != -1)
      swift_once(&qword_10119C4E8, sub_10066B7F8);
    v40 = qword_1011C0F28;
  }
  else
  {
    if (qword_10119C4F0 != -1)
      swift_once(&qword_10119C4F0, sub_10066B884);
    v40 = qword_1011C0F40;
  }
  v41 = sub_100048B14(v13, (uint64_t)v40);
  v42 = v53;
  sub_10066B968(v41, (uint64_t)v53);
  v43 = (uint64_t)v42;
  v44 = v54;
  sub_10066B9AC(v43, (uint64_t)v54);
  v45 = v44[*(int *)(v13 + 24)];
  sub_10005B748((uint64_t)v44, _s11AttributionV4TextV5SpecsVMa);
  result = swift_getKeyPath(&unk_100EC8348);
  v47 = v50;
  *(_QWORD *)a5 = v34;
  *(_QWORD *)(a5 + 8) = v47;
  *(_BYTE *)(a5 + 16) = v49 & 1;
  *(_QWORD *)(a5 + 24) = v51;
  *(_QWORD *)(a5 + 32) = KeyPath;
  *(_QWORD *)(a5 + 40) = 3;
  *(_BYTE *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = result;
  *(_BYTE *)(a5 + 64) = v45;
  return result;
}

void sub_10066B7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = _s11AttributionV4TextV5SpecsVMa(0);
  sub_10004FACC(v0, qword_1011C0F28);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011C0F28);
  v2 = enum case for Font.TextStyle.title(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  *(double *)(v1 + *(int *)(v0 + 20)) = static Font.Weight.regular.getter(v4);
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
}

uint64_t sub_10066B884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  sub_10004FACC(v4, qword_1011C0F40);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011C0F40);
  v6 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.title3(_:), v0);
  v7 = static Font.Weight.regular.getter(v6);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(double *)(v5 + *(int *)(v4 + 20)) = v7;
  *(_BYTE *)(v5 + *(int *)(v4 + 24)) = 1;
  return result;
}

uint64_t sub_10066B968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10066B9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10066B9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066B9FC);
}

uint64_t sub_10066B9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_10066BA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066BA80);
}

uint64_t sub_10066BA80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_10066BAF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100EC81F0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t _s11AttributionV4TextVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_10006B604(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s11AttributionV4TextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_10006B3F8(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t _s11AttributionV4TextVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_10006B3F8(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t _s11AttributionV4TextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_10006B604(v6, v7);
  return a1;
}

ValueMetadata *_s11AttributionV4TextVMa()
{
  return &_s11AttributionV4TextVN;
}

void sub_10066BCC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EC8218;
  v4[1] = &unk_100EC8218;
  v4[2] = &unk_100EC8230;
  v4[3] = &unk_100EC8230;
  sub_100378E54(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
  }
}

_OWORD *sub_10066BD48(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    v9 = a2[2];
    if (v9)
    {
      v10 = a2[3];
      *((_QWORD *)v4 + 2) = v9;
      *((_QWORD *)v4 + 3) = v10;
      swift_retain();
    }
    else
    {
      v4[1] = *((_OWORD *)a2 + 1);
    }
    v11 = a2[4];
    v12 = *((_BYTE *)a2 + 40);
    sub_10006B3F8(v11, v12);
    *((_QWORD *)v4 + 4) = v11;
    *((_BYTE *)v4 + 40) = v12;
    v13 = a2[6];
    v14 = *((_BYTE *)a2 + 56);
    sub_10006B3F8(v13, v14);
    *((_QWORD *)v4 + 6) = v13;
    *((_BYTE *)v4 + 56) = v14;
    v15 = *(int *)(a3 + 48);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

double sub_10066BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_QWORD *)a1)
    swift_release();
  if (*(_QWORD *)(a1 + 16))
    swift_release();
  sub_10006B604(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_10006B604(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10066BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  sub_10006B3F8(v9, v10);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_10006B3F8(v11, v12);
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = *(int *)(a3 + 48);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  return a1;
}

uint64_t sub_10066C07C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v9)
    {
      v10 = a2[3];
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = a2[4];
  v13 = *((_BYTE *)a2 + 40);
  sub_10006B3F8(v12, v13);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  sub_10006B604(v14, v15);
  v16 = a2[6];
  v17 = *((_BYTE *)a2 + 56);
  sub_10006B3F8(v16, v17);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  sub_10006B604(v18, v19);
  if ((uint64_t *)a1 != a2)
  {
    v20 = *(int *)(a3 + 48);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    sub_10004FF60(a1 + v20, &qword_1011AED10);
    v23 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v25);
  }
  return a1;
}

uint64_t sub_10066C238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(int *)(a3 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10066C338(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v9)
    {
      v10 = a2[3];
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v11;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = *((_BYTE *)a2 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v12;
  sub_10006B604(v13, v14);
  v15 = *((_BYTE *)a2 + 56);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = v15;
  sub_10006B604(v16, v17);
  if ((uint64_t *)a1 != a2)
  {
    v18 = *(int *)(a3 + 48);
    v19 = (void *)(a1 + v18);
    v20 = (char *)a2 + v18;
    sub_10004FF60(a1 + v18, &qword_1011AED10);
    v21 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10066C4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066C4D4);
}

uint64_t sub_10066C4D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(&qword_1011AED18);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 48)], a2, v9);
  }
}

uint64_t sub_10066C560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066C56C);
}

char *sub_10066C56C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011AED18);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t _s11AttributionV7ContentVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s11AttributionV7ContentVMn);
}

unint64_t sub_10066C5F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C10A0;
  if (!qword_1011C10A0)
  {
    v1 = sub_100044B54(&qword_1011C10A8);
    sub_100049F28(&qword_1011C0F78, &qword_1011C0F70, (uint64_t)&unk_100EC82C4);
    sub_100049F28(&qword_1011C0F80, &qword_1011C0F60, (uint64_t)&unk_100EC82C4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C10A0);
  }
  return result;
}

uint64_t sub_10066C698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10066B42C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_10066C6A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_BYTE *)(v1 + 24);
  sub_10006B3F8(v9, v10);
  v11 = sub_100824E38(v9, v10);
  sub_10006B604(v9, v10);
  if ((v11 & 1) != 0)
  {
    if (qword_10119C4E8 != -1)
      swift_once(&qword_10119C4E8, sub_10066B7F8);
    v12 = qword_1011C0F28;
  }
  else
  {
    if (qword_10119C4F0 != -1)
      swift_once(&qword_10119C4F0, sub_10066B884);
    v12 = qword_1011C0F40;
  }
  v13 = sub_100048B14(v3, (uint64_t)v12);
  sub_10066B968(v13, (uint64_t)v5);
  sub_10066B9AC((uint64_t)v5, (uint64_t)v8);
  v14 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, v8, v14);
}

unint64_t sub_10066C808(uint64_t a1)
{
  unint64_t result;

  result = sub_10066C82C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10066C82C()
{
  unint64_t result;

  result = qword_1011C10B0;
  if (!qword_1011C10B0)
  {
    result = swift_getWitnessTable(&unk_100EC8274, &_s11AttributionV4TextVN);
    atomic_store(result, (unint64_t *)&qword_1011C10B0);
  }
  return result;
}

uint64_t sub_10066C870(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA8964, 1);
}

uint64_t sub_10066C880(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA8930, 1);
}

uint64_t sub_10066C8B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10066AA40(v1[4], v1[5], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_10066C8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10066AEFC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10066C8E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *a1;
  v2 = type metadata accessor for Button(255, *a1, a1[1]);
  v3 = type metadata accessor for BorderlessButtonStyle(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v2);
  v5 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v15 = v2;
  v16 = v3;
  v17 = WitnessTable;
  v18 = v5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v7 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v1);
  v8 = type metadata accessor for Group(255, v7);
  v9 = sub_100044B54(&qword_1011BE340);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = type metadata accessor for Optional(255, v12);
  v15 = v2;
  v16 = v3;
  v17 = WitnessTable;
  v18 = v5;
  swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v8);
  sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v13);
}

unint64_t sub_10066CAE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C10C0;
  if (!qword_1011C10C0)
  {
    v1 = sub_100044B54(&qword_1011C10C8);
    sub_1001C9648();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C10C0);
  }
  return result;
}

uint64_t JSObject.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8));
  return v1;
}

uint64_t JSViewModelKind.id.getter(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;

  JSViewModelKind.innerViewModel.getter(a1);
  v2 = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier];
  swift_bridgeObjectRetain();

  return v3;
}

uint64_t sub_10066CBF4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*v1 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain(v3);
}

void sub_10066CC14(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  JSViewModelKind.innerViewModel.getter(*v1);
  v4 = v3;
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier];
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8];
  swift_bridgeObjectRetain();

  *a1 = v6;
  a1[1] = v5;
}

uint64_t sub_10066CC68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD v23[4];

  v2 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C10D0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  if (qword_10119C8C8 != -1)
    swift_once(&qword_10119C8C8, sub_10085F9C4);
  v10 = qword_10124DA40;
  KeyPath = swift_getKeyPath(&unk_100EC8468);
  v23[1] = v9;
  v23[2] = KeyPath;
  v23[3] = v10;
  v12 = enum case for DynamicTypeSize.accessibility2(_:);
  v13 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v4, v12, v13);
  v14 = sub_10066CEC0();
  swift_retain();
  result = dispatch thunk of static Equatable.== infix(_:_:)(v4, v4, v13, v14);
  if ((result & 1) != 0)
  {
    v16 = sub_100007E8C(&qword_1011AC700);
    v17 = sub_100318590();
    v18 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v4, v16, v2, v17, v18);
    sub_10066CF08((uint64_t)v4);
    swift_release();
    swift_release();
    v19 = swift_release();
    v20 = static Color.primary.getter(v19);
    v21 = swift_getKeyPath(&unk_100EC8498);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a1, v8, v5);
    v22 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_1011C10D8) + 36));
    *v22 = v21;
    v22[1] = v20;
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10066CEC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5A50;
  if (!qword_1011A5A50)
  {
    v1 = type metadata accessor for DynamicTypeSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DynamicTypeSize, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5A50);
  }
  return result;
}

uint64_t sub_10066CF08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011C92A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for PlaybackMetrics(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(a1 + 16), v2);
}

uint64_t initializeWithCopy for PlaybackMetrics(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_100079DE4(v6, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
  }
  return a1;
}

_QWORD *assignWithCopy for PlaybackMetrics(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_100079DE4(*v4, v5);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1000652DC(v8, v9);
      return a1;
    }
    sub_1005F67B0((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_100079DE4(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithTake for PlaybackMetrics(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1000652DC(v8, v6);
      return a1;
    }
    sub_1005F67B0((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

ValueMetadata *type metadata accessor for PlaybackMetrics()
{
  return &type metadata for PlaybackMetrics;
}

void sub_10066D160(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for NavigationDestinationItem(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X12 }
}

uint64_t sub_10066D208(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  *(_QWORD *)(v26 - 120) = a1;
  *(_QWORD *)(v26 - 96) = 0x7972617262696CLL;
  *(_QWORD *)(v26 - 88) = 0xE700000000000000;
  if (v24)
  {
    *(_QWORD *)(v26 - 112) = 2109216;
    *(_QWORD *)(v26 - 104) = 0xE300000000000000;
    v27._countAndFlagsBits = v25;
    v27._object = v24;
    String.append(_:)(v27);
    v28._countAndFlagsBits = *(_QWORD *)(v26 - 112);
    v29 = *(void **)(v26 - 104);
    v28._object = v29;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v29);
  }
  __chkstk_darwin(a1);
  sub_100007E8C((uint64_t *)&unk_1011D11C0);
  KeyPath = swift_getKeyPath(&unk_100EC8500);
  __chkstk_darwin(KeyPath);
  v31 = swift_getKeyPath(&unk_100EC8538);
  static Published.subscript.getter((_QWORD *)(v26 - 112), v23, KeyPath, v31);
  swift_release(KeyPath);
  swift_release(v31);
  v32 = *(_QWORD *)(v26 - 112);
  if (*(_QWORD *)(v32 + 16))
  {
    v33 = v32 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    *(_QWORD *)(v26 - 136) = v32;
    *(_QWORD *)(v26 - 128) = v21 + 8;
    v34 = *(_QWORD *)(v26 - 120);
    sub_10066DD38(v33, v22);
    sub_10066DD38(v22, v21);
    v35 = (char *)&loc_10066D458 + 4 * byte_100EC84D7[swift_getEnumCaseMultiPayload(v21, v34)];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v32);
  return *(_QWORD *)(v26 - 96);
}

uint64_t sub_10066D7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3CF0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v18 - v6;
  v8 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  v20 = v8;
  KeyPath = swift_getKeyPath(&unk_100EC8500);
  v19 = v8;
  v10 = swift_getKeyPath(&unk_100EC8538);
  static Published.subscript.getter(&v21, v1, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  v11 = v21;
  v12 = *(_QWORD *)(v21 + 16);
  if (v12)
  {
    v13 = v12 - 1;
    v14 = type metadata accessor for NavigationDestinationItem(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_10066DD38(v11+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v13, (uint64_t)v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  else
  {
    v14 = type metadata accessor for NavigationDestinationItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  swift_bridgeObjectRelease(v11);
  sub_10066DD7C((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for NavigationDestinationItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14) != 1)
  {
    v16 = (char *)&loc_10066D964 + 4 * byte_100EC84DF[swift_getEnumCaseMultiPayload(v5, v14)];
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_10066DAF0()
{
  return sub_10066DB18((uint64_t (*)(void))sub_1001545B0, (uint64_t)&type metadata for RootViewFeatureNameKey);
}

uint64_t sub_10066DB04()
{
  return sub_10066DB18((uint64_t (*)(void))sub_10015456C, (uint64_t)&type metadata for RecommendationDataKey);
}

uint64_t sub_10066DB18(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;

  v3 = a1();
  EnvironmentValues.subscript.getter(&v5, a2, a2, v3);
  return v5;
}

uint64_t sub_10066DB58()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1004DA7F8();
  EnvironmentValues.subscript.getter(&v2, &type metadata for ComponentControllerKey, &type metadata for ComponentControllerKey, v0);
  return v2;
}

uint64_t sub_10066DB90(uint64_t a1)
{
  if (a1 < 0)
    return 0;
  else
    return *(_QWORD *)&aRecentlyplayli[8 * (char)a1];
}

uint64_t sub_10066DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000AF178(&qword_1011C10E0, &qword_1011C10E8, (void (*)(void))sub_10066DDF4);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double sub_10066DC28@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_100EAE4D0;
  return result;
}

uint64_t sub_10066DC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000AF178(&qword_1011C10F0, &qword_1011C10F8, (void (*)(void))sub_10066DE3C);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10066DCA0@<X0>(_QWORD *a1@<X8>)
{
  return sub_100549EA0(a1);
}

uint64_t sub_10066DCC0@<X0>(_QWORD *a1@<X8>)
{
  return sub_100549EA0(a1);
}

uint64_t sub_10066DCE0(uint64_t a1)
{
  return sub_100549FC4(a1);
}

uint64_t sub_10066DD00(uint64_t a1)
{
  return sub_100549FC4(a1);
}

uint64_t sub_10066DD20()
{
  return 8;
}

_QWORD *sub_10066DD2C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10066DD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NavigationDestinationItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10066DD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A3CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for RootViewFeatureNameKey()
{
  return &type metadata for RootViewFeatureNameKey;
}

ValueMetadata *type metadata accessor for RecommendationDataKey()
{
  return &type metadata for RecommendationDataKey;
}

ValueMetadata *type metadata accessor for ComponentControllerKey()
{
  return &type metadata for ComponentControllerKey;
}

unint64_t sub_10066DDF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B94A8;
  if (!qword_1011B94A8)
  {
    v1 = type metadata accessor for JSComponentController(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011B94A8);
  }
  return result;
}

unint64_t sub_10066DE3C()
{
  unint64_t result;

  result = qword_1011C1100;
  if (!qword_1011C1100)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1011C1100);
  }
  return result;
}

uint64_t sub_10066DE80(uint64_t a1)
{
  return sub_10048D81C(a1, qword_10124D548, 0x697461676976614ELL, 0xEA00000000006E6FLL);
}

uint64_t sub_10066DEA4(uint64_t a1)
{
  return sub_10048D81C(a1, qword_10124D560, 0x697469726F766146, 0xEA0000000000676ELL);
}

char *sub_10066DEC8(void *a1)
{
  uint64_t v1;
  char *result;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);

  result = (char *)objc_msgSend(a1, "state");
  if ((unint64_t)(result - 3) >= 3)
  {
    if (result == (char *)1)
    {
      *(_BYTE *)(v1 + 56) = 1;
      v4 = *(uint64_t (**)(void))(v1 + 24);
      if (v4)
        return (char *)v4();
    }
  }
  else
  {
    if (*(_BYTE *)(v1 + 56) == 1)
    {
      v3 = *(uint64_t (**)(void))(v1 + 40);
      if (v3)
        result = (char *)v3();
    }
    *(_BYTE *)(v1 + 56) = 0;
  }
  return result;
}

uint64_t sub_10066DF7C()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10004BA30(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 57, 7);
}

uint64_t type metadata accessor for InteractionController()
{
  return objc_opt_self(_TtC5Music21InteractionController);
}

id sub_10066E01C()
{
  return sub_1001EB7B8(type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate);
}

id sub_10066E028()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate()), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10066E094(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate] = 0;
  sub_10034DE9C(a1, (uint64_t)v18);
  v5 = v19;
  if (v19)
  {
    v6 = sub_100007E68(v18, v19);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v18);
  }
  else
  {
    v11 = 0;
  }
  v12 = (objc_class *)type metadata accessor for CatchAllPassiveGestureRecognizer();
  v17.receiver = v2;
  v17.super_class = v12;
  v13 = objc_msgSendSuper2(&v17, "initWithTarget:action:", v11, a2);
  swift_unknownObjectRelease(v11);
  v14 = v13;
  v15 = sub_10066E028();
  objc_msgSend(v14, "setDelegate:", v15);

  objc_msgSend(v14, "setMinimumPressDuration:", 0.0);
  objc_msgSend(v14, "setCancelsTouchesInView:", 0);
  objc_msgSend(v14, "setDelaysTouchesBegan:", 0);
  objc_msgSend(v14, "setDelaysTouchesEnded:", 0);

  sub_1002293F8(a1);
  return v14;
}

id sub_10066E2A8()
{
  return sub_1001EB7B8(type metadata accessor for CatchAllPassiveGestureRecognizer);
}

uint64_t type metadata accessor for CatchAllPassiveGestureRecognizer()
{
  return objc_opt_self(_TtC5Music32CatchAllPassiveGestureRecognizer);
}

uint64_t type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate()
{
  return objc_opt_self(_TtCC5Music32CatchAllPassiveGestureRecognizer43AlwaysSimultaneousGestureRecognizerDelegate);
}

void sub_10066E304()
{
  qword_10124D580 = 0x4030000000000000;
}

void sub_10066E314()
{
  qword_10124D588 = 0x4071800000000000;
}

void sub_10066E328()
{
  qword_10124D590 = 0x4030000000000000;
}

void sub_10066E338(uint64_t a1)
{
  sub_10066E478(0.3, a1, &qword_10124D598);
}

void sub_10066E350()
{
  qword_10124D5A0 = 0x4028000000000000;
}

id sub_10066E360(uint64_t a1)
{
  return sub_10066E51C(a1, &qword_10124D5A8);
}

id sub_10066E36C(uint64_t a1)
{
  return sub_10066E39C(24.0, a1, &qword_10124D5B0);
}

void sub_10066E37C()
{
  qword_10124D5B8 = 0x4018000000000000;
}

id sub_10066E38C(uint64_t a1)
{
  return sub_10066E39C(20.0, a1, &qword_10124D5C0);
}

id sub_10066E39C(double a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", a1, UIFontWeightBold);
  *a3 = result;
  return result;
}

void sub_10066E3F8()
{
  qword_10124D5C8 = 0x4010000000000000;
}

void sub_10066E408(uint64_t a1)
{
  sub_10066E478(0.1, a1, &qword_10124D5D0);
}

int64x2_t sub_10066E41C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404A000000000000uLL);
  xmmword_10124D5E0 = (__int128)result;
  return result;
}

void sub_10066E430()
{
  qword_10124D5F0 = 0x4010000000000000;
}

double sub_10066E440()
{
  double result;

  result = 0.0;
  xmmword_10124D600 = xmmword_100EC87E0;
  return result;
}

void sub_10066E454()
{
  qword_10124D610 = 0x4010000000000000;
}

void sub_10066E464(uint64_t a1)
{
  sub_10066E478(0.1, a1, &qword_10124D618);
}

void sub_10066E478(double a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id v6;

  v5 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", a1);

  *a3 = v6;
}

void sub_10066E4F0()
{
  qword_10124D620 = 0xC000000000000000;
}

void sub_10066E500()
{
  qword_10124D628 = 0x4028000000000000;
}

id sub_10066E510(uint64_t a1)
{
  return sub_10066E51C(a1, &qword_10124D630);
}

id sub_10066E51C(uint64_t a1, _QWORD *a2)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  *a2 = result;
  return result;
}

uint64_t sub_10066E55C(uint64_t a1)
{
  return sub_10066E584(a1, (double *)&UIFontWeightBold, &qword_10124D638);
}

uint64_t sub_10066E570(uint64_t a1)
{
  return sub_10066E584(a1, (double *)&UIFontWeightRegular, &qword_10124D640);
}

uint64_t sub_10066E584(uint64_t a1, double *a2, uint64_t *a3)
{
  uint64_t result;

  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, *a2);
  *a3 = result;
  return result;
}

void sub_10066E5DC()
{
  qword_10124D648 = 0x4008000000000000;
}

double sub_10066E5EC()
{
  double result;

  result = 46.0;
  xmmword_10124D650 = xmmword_100EC87F0;
  return result;
}

id sub_10066E600()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.4);
  qword_10124D660 = (uint64_t)result;
  return result;
}

uint64_t sub_10066E63C(void *a1)
{
  double v1;
  double MinY;
  double v3;
  Class *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t inited;
  uint64_t v17;
  NSString *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString *v23;
  NSString *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString *v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSString *v33;
  uint64_t v34;
  id v35;
  NSString *v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSString *v42;
  id v43;
  NSString *v44;
  NSString *v45;
  void *v46;
  id v47;
  double v48;
  double *v49;
  double v50;
  Class *v51;
  char **v52;
  id v53;
  SEL *v54;
  uint64_t *v55;
  Class isa;
  SEL *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t isEscapingClosureAtFileLocation;
  void *v62;
  id v63;
  unint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  Class v66;
  double v67;
  double v68;
  double v69;
  double v70;
  id v71;
  NSDictionary v72;
  double v73;
  double v74;
  CGFloat v75;
  double v76;
  id v77;
  id v78;
  Class v79;
  uint64_t v80;
  unint64_t v81;
  double v82;
  double v83;
  CGFloat v84;
  CGFloat MinX;
  CGFloat v86;
  CGFloat Width;
  CGFloat v88;
  double v89;
  CGFloat v90;
  CGFloat v91;
  CGSize v92;
  double v93;
  double v94;
  CGFloat v95;
  CGFloat MaxY;
  CGFloat v97;
  double v98;
  double v99;
  __int128 v100;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  uint64_t v104;
  id v105;
  uint64_t result;
  double v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  double v117;
  double v118;
  CGFloat v119;
  void *v120;
  objc_class *v121;
  void *v122;
  id v123;
  double v124;
  Class *v125;
  id v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  id v131;
  CGFloat v132;
  uint64_t rect;
  CGFloat recta;
  id v135;
  __int128 aBlock;
  void (*v137)(uint64_t, void *);
  void *v138;
  uint64_t (*v139)(uint64_t);
  uint64_t v140;
  _QWORD v141[3];
  double v142;
  id v143[3];
  CGFloat v144;
  char v145[152];
  char v146[152];
  char v147[152];
  unint64_t v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;

  v131 = String._bridgeToObjectiveC()();
  v4 = (Class *)String._bridgeToObjectiveC()();
  v135 = String._bridgeToObjectiveC()();
  v5 = (void *)objc_opt_self(NSParagraphStyle);
  v6 = objc_msgSend(v5, "defaultParagraphStyle");
  v7 = objc_msgSend(v6, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(&aBlock, v7);
  swift_unknownObjectRelease(v7);
  v8 = sub_10004A07C(0, &qword_1011BA1D0, NSMutableParagraphStyle_ptr);
  swift_dynamicCast(v143, &aBlock, (char *)&type metadata for Any + 8, v8, 7);
  v9 = v143[0];
  if (qword_10119C540 != -1)
    swift_once(&qword_10119C540, sub_10066E37C);
  objc_msgSend(v9, "setParagraphSpacing:", *(double *)&qword_10124D5B8);
  objc_msgSend(v9, "setLineBreakStrategy:", 1);
  v10 = *(_QWORD *)(*(_QWORD *)&v1 + 80);
  if (v10)
  {
    v11 = *(_QWORD *)(*(_QWORD *)&v1 + 72);
    swift_bridgeObjectRetain();
    objc_msgSend(v9, "setAlignment:", NSTextAlignment.init(languageCode:)(v11, v10));
  }
  v124 = v1;
  v125 = v4;
  v12 = objc_msgSend(v5, "defaultParagraphStyle");
  v13 = objc_msgSend(v12, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(&aBlock, v13);
  swift_unknownObjectRelease(v13);
  v14 = v8;
  swift_dynamicCast(v143, &aBlock, (char *)&type metadata for Any + 8, v8, 7);
  v15 = v143[0];
  objc_msgSend(v143[0], "setAlignment:", 0);
  rect = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(rect, v147);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v17 = qword_10119C530;
  v18 = NSForegroundColorAttributeName;
  if (v17 != -1)
    swift_once(&qword_10119C530, sub_10066E360);
  v19 = (void *)qword_10124D5A8;
  v20 = sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v19;
  *(_QWORD *)(inited + 64) = v20;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 112) = NSFontAttributeName;
  v21 = qword_10119C538;
  v22 = v19;
  v23 = NSParagraphStyleAttributeName;
  v127 = v9;
  v24 = NSFontAttributeName;
  if (v21 != -1)
    swift_once(&qword_10119C538, sub_10066E36C);
  v25 = (void *)qword_10124D5B0;
  v129 = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  *(_QWORD *)(inited + 144) = v129;
  *(_QWORD *)(inited + 120) = v25;
  v26 = v25;
  v128 = sub_100041C10(inited);
  v148 = v128;
  v27 = swift_initStackObject(rect, v146);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v27 + 32) = v18;
  v28 = qword_10119C598;
  v29 = v18;
  if (v28 != -1)
    swift_once(&qword_10119C598, sub_10066E510);
  v30 = (void *)qword_10124D630;
  *(_QWORD *)(v27 + 40) = qword_10124D630;
  *(_QWORD *)(v27 + 64) = v20;
  *(_QWORD *)(v27 + 72) = v23;
  *(_QWORD *)(v27 + 80) = v15;
  *(_QWORD *)(v27 + 104) = v14;
  *(_QWORD *)(v27 + 112) = v24;
  v31 = qword_10119C5A0;
  v32 = v30;
  v33 = v23;
  v34 = v14;
  v35 = v15;
  v36 = v24;
  if (v31 != -1)
    swift_once(&qword_10119C5A0, sub_10066E55C);
  v37 = (void *)qword_10124D638;
  *(_QWORD *)(v27 + 144) = v129;
  *(_QWORD *)(v27 + 120) = v37;
  v38 = v37;
  v130 = sub_100041C10(v27);
  v39 = swift_initStackObject(rect, v145);
  *(_OWORD *)(v39 + 16) = xmmword_100EA7AC0;
  v40 = (void *)qword_10124D630;
  *(_QWORD *)(v39 + 32) = v29;
  *(_QWORD *)(v39 + 40) = v40;
  *(_QWORD *)(v39 + 64) = v20;
  *(_QWORD *)(v39 + 72) = v33;
  *(_QWORD *)(v39 + 80) = v35;
  *(_QWORD *)(v39 + 104) = v34;
  *(_QWORD *)(v39 + 112) = v36;
  v41 = qword_10119C5A8;
  v123 = v35;
  v42 = v29;
  v43 = v40;
  v44 = v33;
  v45 = v36;
  if (v41 != -1)
    swift_once(&qword_10119C5A8, sub_10066E570);
  v46 = (void *)qword_10124D640;
  *(_QWORD *)(v39 + 144) = v129;
  *(_QWORD *)(v39 + 120) = v46;
  v47 = v46;
  v121 = (objc_class *)sub_100041C10(v39);
  if (qword_10119C510 != -1)
    swift_once(&qword_10119C510, sub_10066E314);
  v48 = *(double *)&qword_10124D588;
  if (qword_10119C508 != -1)
    swift_once(&qword_10119C508, sub_10066E304);
  v49 = (double *)&qword_10124D000;
  v50 = v48 - (*(double *)&qword_10124D580 + *(double *)&qword_10124D580);
  v51 = (Class *)MPLibraryAddStatusObserver_ptr;
  v52 = &selRef_videoOutput_willEndFullScreenPresentationWithAnimationCoordinator_;
  v53 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  v54 = (SEL *)&selRef_handleVolumeDownButton;
  objc_msgSend(v53, "setWantsNumberOfLineFragments:", 1);
  type metadata accessor for Key(0);
  v55 = (uint64_t *)sub_100556620();
  swift_bridgeObjectRetain();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v57 = (SEL *)&selRef_handleVolumeDownButton;
  v58 = INFINITY;
  objc_msgSend(v135, "boundingRectWithSize:options:attributes:context:", 1, isa, v53, v50, INFINITY);
  recta = v59;

  if ((uint64_t)objc_msgSend(v53, "numberOfLineFragments") < 5)
    goto LABEL_24;
  v60 = qword_10119C548;
  isEscapingClosureAtFileLocation = v45;
  if (v60 != -1)
    goto LABEL_44;
  while (1)
  {
    v62 = (void *)qword_10124D5C0;
    v138 = (void *)v129;
    *(_QWORD *)&aBlock = qword_10124D5C0;
    sub_100048ABC(&aBlock, v143);
    v63 = v62;
    v64 = v148;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v148);
    v141[0] = v64;
    sub_1005EEC54(v143, (void *)isEscapingClosureAtFileLocation, isUniquelyReferenced_nonNull_native);
    v148 = v141[0];

    swift_bridgeObjectRelease();
    if (qword_10119C550 != -1)
      swift_once(&qword_10119C550, sub_10066E3F8);
    objc_msgSend(v127, "setParagraphSpacing:", *(double *)&qword_10124D5C8);
    swift_bridgeObjectRetain();
    v66 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v135, v57[66], 1, v66, v53, v50, v58);
    recta = v67;

LABEL_24:
    v68 = *(double *)&qword_10124D588 - (v49[176] + v49[176]);
    if (qword_10119C560 != -1)
      swift_once(&qword_10119C560, sub_10066E41C);
    v122 = v53;
    v69 = v68 - *(double *)&xmmword_10124D5E0;
    if (qword_10119C590 != -1)
      swift_once(&qword_10119C590, sub_10066E500);
    v70 = v69 - *(double *)&qword_10124D628;
    v71 = objc_msgSend(objc_allocWithZone(v51[179]), v52[429]);
    objc_msgSend(v71, v54[65], 1);
    objc_msgSend(v71, "setMaximumNumberOfLines:", 3);
    v72.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v73 = INFINITY;
    objc_msgSend(v131, v57[66], 1, v72.super.isa, v71, v70, INFINITY);
    v75 = v74;
    v132 = v76;

    v77 = objc_msgSend(objc_allocWithZone(v51[179]), v52[429]);
    objc_msgSend(v77, v54[65], 1);
    v78 = objc_msgSend(v71, "numberOfLineFragments");
    if (__OFSUB__(4, v78))
    {
      __break(1u);
LABEL_42:
      swift_once(&qword_10119C528, sub_10066E350);
      goto LABEL_33;
    }
    if (4 - (_QWORD)v78 < 0)
      break;
    objc_msgSend(v77, "setMaximumNumberOfLines:");
    v72.super.isa = v121;
    v79 = Dictionary._bridgeToObjectiveC()().super.isa;
    v51 = v125;
    objc_msgSend(v125, v57[66], 1, v79, v77, v70, INFINITY);
    v128 = v81;
    v129 = v80;

    v82 = 280.0;
    if (*(_BYTE *)(*(_QWORD *)&v124 + 16) == 1)
      v82 = 348.0;
    v70 = *(double *)&qword_10124D588;
    v118 = v82;
    *(double *)v143 = (v82 - *(double *)&qword_10124D588) * 0.5;
    v143[1] = 0;
    v143[2] = (id)qword_10124D588;
    v144 = 0.0;
    v149.origin.y = 0.0;
    v149.size.height = 0.0;
    v149.origin.x = *(double *)v143;
    v73 = *(double *)v143;
    *(_QWORD *)&v149.size.width = qword_10124D588;
    v55 = &qword_10124D000;
    v3 = CGRectGetMinX(v149) + *(double *)&qword_10124D580;
    v150.origin.y = 0.0;
    v150.size.height = 0.0;
    v150.origin.x = v73;
    v150.size.width = v70;
    MinY = CGRectGetMinY(v150);
    if (qword_10119C528 != -1)
      goto LABEL_42;
LABEL_33:
    v83 = *(double *)&qword_10124D5A0;
    v84 = MinY + *(double *)&qword_10124D5A0;
    v151.origin.y = 0.0;
    v151.size.height = 0.0;
    v151.origin.x = v73;
    v151.size.width = v70;
    MinX = CGRectGetMinX(v151);
    v116 = v84;
    v117 = v3;
    v152.origin.x = v3;
    v152.origin.y = v84;
    v124 = v50;
    v152.size.width = v50;
    v152.size.height = recta;
    v86 = v83 + CGRectGetMaxY(v152);
    v153.origin.y = 0.0;
    v153.size.height = 0.0;
    v153.origin.x = v73;
    v153.size.width = v70;
    Width = CGRectGetWidth(v153);
    *(CGFloat *)v141 = MinX;
    *(CGFloat *)&v141[1] = v86;
    *(CGFloat *)&v141[2] = Width;
    v142 = 0.0;
    v154.origin.y = 0.0;
    v154.size.height = 0.0;
    v154.origin.x = v73;
    v154.size.width = v70;
    v88 = CGRectGetMinX(v154);
    v89 = *((double *)v55 + 176);
    v90 = v88 + v89;
    v155.size.height = 0.0;
    v111 = v86;
    v112 = MinX;
    v155.origin.x = MinX;
    v155.origin.y = v86;
    v110 = Width;
    v155.size.width = Width;
    v91 = v89 + CGRectGetMinY(v155);
    v92 = (CGSize)xmmword_10124D5E0;
    v156.origin.x = v90;
    v156.origin.y = v91;
    v156.size = (CGSize)xmmword_10124D5E0;
    v93 = CGRectGetMaxX(v156) + *(double *)&qword_10124D628;
    v114 = v91;
    v115 = v90;
    v157.origin.x = v90;
    v157.origin.y = v91;
    v157.size = v92;
    v94 = CGRectGetMinY(v157);
    if (qword_10119C588 != -1)
      swift_once(&qword_10119C588, sub_10066E4F0);
    v3 = v94 + *(double *)&qword_10124D620;
    v158.origin.x = v93;
    v158.origin.y = v94 + *(double *)&qword_10124D620;
    v158.size.width = v75;
    v158.size.height = v132;
    v95 = CGRectGetMinX(v158);
    v159.origin.x = v93;
    v159.origin.y = v3;
    v159.size.width = v75;
    v159.size.height = v132;
    MaxY = CGRectGetMaxY(v159);
    v160.origin.x = v93;
    v160.origin.y = v3;
    v160.size.width = v75;
    v160.size.height = v132;
    v97 = CGRectGetMinX(v160);
    v108 = MaxY;
    v109 = v95;
    v161.origin.x = v95;
    v161.origin.y = MaxY;
    *(_QWORD *)&v161.size.height = v128;
    *(_QWORD *)&v161.size.width = v129;
    v98 = CGRectGetMaxY(v161);
    if (qword_10119C5B0 != -1)
      swift_once(&qword_10119C5B0, sub_10066E5DC);
    v119 = v75;
    v120 = v77;
    v99 = v98 + *(double *)&qword_10124D648;
    if (qword_10119C5B8 != -1)
      swift_once(&qword_10119C5B8, sub_10066E5EC);
    v100 = xmmword_10124D650;
    v162.origin.x = v97;
    v162.origin.y = v99;
    v162.size = (CGSize)xmmword_10124D650;
    v101 = CGRectGetMaxY(v162);
    v107 = v99;
    v50 = *((double *)v55 + 176);
    v102 = v101 + v50;
    v163.origin.y = 0.0;
    v163.size.height = 0.0;
    v163.origin.x = v73;
    v163.size.width = v70;
    v103 = v102 - CGRectGetMinY(v163);
    v144 = v103;
    v164.size.height = 0.0;
    v164.origin.y = v111;
    v164.origin.x = v112;
    v164.size.width = v110;
    v113 = v97;
    MinY = v103 - CGRectGetMaxY(v164);
    v165.origin.y = 0.0;
    v165.origin.x = v73;
    v165.size.width = v70;
    v165.size.height = v103;
    v142 = MinY + CGRectGetMinY(v165);
    v166.origin.y = 0.0;
    v166.origin.x = v73;
    v166.size.width = v70;
    v166.size.height = v103;
    v58 = v50 + CGRectGetMaxY(v166);
    v57 = (SEL *)objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v118, v58);
    v55 = (uint64_t *)swift_allocObject(&unk_1010D5450, 248, 7);
    v55[2] = (uint64_t)v143;
    v55[3] = (uint64_t)v141;
    v55[4] = (uint64_t)v135;
    *((double *)v55 + 5) = v117;
    *((CGFloat *)v55 + 6) = v116;
    *((double *)v55 + 7) = v124;
    *((CGFloat *)v55 + 8) = recta;
    v55[9] = (uint64_t)&v148;
    v55[10] = (uint64_t)v131;
    *((double *)v55 + 11) = v93;
    *((double *)v55 + 12) = v3;
    *((CGFloat *)v55 + 13) = v119;
    *((CGFloat *)v55 + 14) = v132;
    v55[15] = v130;
    v55[16] = (uint64_t)v51;
    *((CGFloat *)v55 + 17) = v109;
    *((CGFloat *)v55 + 18) = v108;
    v55[19] = v129;
    v55[20] = v128;
    v55[21] = (uint64_t)v72.super.isa;
    *((CGFloat *)v55 + 22) = v113;
    *((double *)v55 + 23) = v107;
    *((_OWORD *)v55 + 12) = v100;
    *((CGFloat *)v55 + 26) = v115;
    *((CGFloat *)v55 + 27) = v114;
    *((CGSize *)v55 + 14) = v92;
    v55[30] = (uint64_t)a1;
    v104 = swift_allocObject(&unk_1010D5478, 32, 7);
    *(_QWORD *)(v104 + 16) = sub_10066FD28;
    *(_QWORD *)(v104 + 24) = v55;
    v139 = sub_100229354;
    v140 = v104;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v137 = sub_10004BF88;
    v138 = &unk_1010D5490;
    v53 = _Block_copy(&aBlock);
    v54 = (SEL *)v135;
    v49 = (double *)v131;
    v51 = v51;
    v105 = a1;
    swift_retain();
    v52 = (char **)-[SEL imageWithActions:](v57, "imageWithActions:", v53, swift_release().n128_f64[0]);

    _Block_release(v53);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v104, "", 112, 179, 31, 1);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v52;
    }
    __break(1u);
LABEL_44:
    swift_once(&qword_10119C548, sub_10066E38C);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

void sub_10066F470(void *a1, double *a2, CGRect *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,uint64_t a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,void *a30)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  CGContext *v50;
  const CGPath *v51;
  CGContext *v52;
  CGColor *v53;
  id v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t);
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  CGPathRef v61;
  CGContext *v62;
  CGContext *v63;
  CGColor *v64;
  id v65;
  Class isa;
  Class v67;
  Class v68;
  void *v69;
  NSString v70;
  id v71;
  void *v72;
  id v73;
  CGContext *v74;
  CGSize v75;
  CGFloat v76;
  CGColor *v77;
  id v78;
  void *v79;
  CGContext *v80;
  const CGPath *v81;
  id v82;
  char *v83;
  uint64_t v84;
  CGPathRef v85;
  void (*v86)(char *, _QWORD, uint64_t);
  unsigned int v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  double v96;
  double v97;
  double v98;
  double v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;

  v94 = a5;
  v95 = a4;
  v98 = a15;
  v99 = a16;
  v96 = a13;
  v97 = a14;
  v40 = type metadata accessor for CGPathFillRule(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v102 = (char *)&v84 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (void *)objc_opt_self(UIBezierPath);
  v44 = *a2;
  v45 = a2[1];
  v46 = a2[2];
  v47 = a2[3];
  if (qword_10119C518 != -1)
    swift_once(&qword_10119C518, sub_10066E328);
  v100 = v40;
  v89 = v43;
  v48 = objc_msgSend(v43, "_bezierPathWithPillRect:cornerRadius:", v44, v45, v46, v47, *(double *)&qword_10124D590);
  if (!v48)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v49 = v48;
  v91 = a7;
  v92 = a6;
  v93 = a8;
  v90 = a21;
  v50 = (CGContext *)objc_msgSend(a1, "CGContext");
  v51 = (const CGPath *)objc_msgSend(v49, "CGPath");
  CGContextAddPath(v50, v51);

  v52 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10119C520 != -1)
    swift_once(&qword_10119C520, sub_10066E338);
  v53 = (CGColor *)objc_msgSend((id)qword_10124D598, "CGColor");
  CGContextSetFillColorWithColor(v52, v53);

  v54 = objc_msgSend(a1, "CGContext");
  v55 = enum case for CGPathFillRule.winding(_:);
  v56 = *(void (**)(char *, _QWORD, uint64_t))(v41 + 104);
  v57 = v102;
  v58 = v100;
  v56(v102, enum case for CGPathFillRule.winding(_:), v100);
  CGContextRef.fillPath(using:)(v57);

  v59 = *(void (**)(char *, uint64_t))(v41 + 8);
  v60 = v57;
  v101 = v59;
  v59(v57, v58);
  v88 = v49;
  objc_msgSend(v49, "addClip");
  v61 = CGPathCreateWithRect(*a3, 0);
  v62 = (CGContext *)objc_msgSend(a1, "CGContext");
  v85 = v61;
  CGContextAddPath(v62, v61);

  v63 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10119C558 != -1)
    swift_once(&qword_10119C558, sub_10066E408);
  v64 = (CGColor *)objc_msgSend((id)qword_10124D5D0, "CGColor");
  CGContextSetFillColorWithColor(v63, v64);

  v65 = objc_msgSend(a1, "CGContext");
  v87 = v55;
  v86 = v56;
  v56(v60, v55, v58);
  CGContextRef.fillPath(using:)(v60);

  v101(v60, v58);
  type metadata accessor for Key(0);
  sub_100556620();
  swift_bridgeObjectRetain();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v95, "drawWithRect:options:attributes:context:", 33, isa, 0, a9, a10, a11, a12);

  v67 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v92, "drawWithRect:options:attributes:context:", 33, v67, 0, v96, v97, v98, v99);

  v68 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v93, "drawWithRect:options:attributes:context:", 33, v68, 0, a17, a18, a19, a20);

  v69 = (void *)objc_opt_self(UIImage);
  v70 = String._bridgeToObjectiveC()();
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v71 = objc_msgSend(v69, "imageNamed:inBundle:compatibleWithTraitCollection:", v70, qword_10124D260, 0);

  if (!v71)
    goto LABEL_24;
  v72 = v88;
  if (qword_10119C5C0 != -1)
    swift_once(&qword_10119C5C0, sub_10066E600);
  v73 = objc_msgSend(v71, "flattenedImageWithColor:", qword_10124D660);

  objc_msgSend(v73, "drawInRect:", a22, a23, a24, a25);
  v74 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10119C570 != -1)
    swift_once(&qword_10119C570, sub_10066E440);
  v75 = (CGSize)xmmword_10124D600;
  if (qword_10119C578 != -1)
    swift_once(&qword_10119C578, sub_10066E454);
  v76 = *(double *)&qword_10124D610;
  if (qword_10119C580 != -1)
    swift_once(&qword_10119C580, sub_10066E464);
  v77 = (CGColor *)objc_msgSend((id)qword_10124D618, "CGColor");
  CGContextSetShadowWithColor(v74, v75, v76, v77);

  if (qword_10119C568 != -1)
    swift_once(&qword_10119C568, sub_10066E430);
  v78 = objc_msgSend(v89, "_bezierPathWithPillRect:cornerRadius:", a26, a27, a28, a29, *(double *)&qword_10124D5F0);
  if (v78)
  {
    v79 = v78;
    v80 = (CGContext *)objc_msgSend(a1, "CGContext");
    v81 = (const CGPath *)objc_msgSend(v79, "CGPath");
    CGContextAddPath(v80, v81);

    v82 = objc_msgSend(a1, "CGContext");
    v83 = v102;
    v86(v102, v87, v58);
    CGContextRef.fillPath(using:)(v83);

    v101(v83, v58);
    objc_msgSend(v79, "addClip");
    objc_msgSend(a30, "drawInRect:", a26, a27, a28, a29);

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10066FC7C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for ShareLyricsStoryRenderer()
{
  return objc_opt_self(_TtC5Music24ShareLyricsStoryRenderer);
}

uint64_t sub_10066FCDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));

  return swift_deallocObject(v0, 248, 7);
}

void sub_10066FD28(void *a1)
{
  uint64_t v1;

  sub_10066F470(a1, *(double **)(v1 + 16), *(CGRect **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 120), *(void **)(v1 + 128), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 88), *(double *)(v1 + 96), *(double *)(v1 + 104), *(double *)(v1 + 112), *(double *)(v1 + 136), *(double *)(v1 + 144), *(double *)(v1 + 152),
    *(double *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(double *)(v1 + 176),
    *(double *)(v1 + 184),
    *(double *)(v1 + 192),
    *(double *)(v1 + 200),
    *(double *)(v1 + 208),
    *(double *)(v1 + 216),
    *(double *)(v1 + 224),
    *(double *)(v1 + 232),
    *(void **)(v1 + 240));
}

uint64_t sub_10066FDA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10066FDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10066FDC0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *_s6GenresVMa()
{
  return &_s6GenresVN;
}

void sub_10066FDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_1006703C4();
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8) & 1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_10066FEA8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2 & 1);
  return ((uint64_t (*)(void))((char *)sub_10066FF84 + 4 * byte_100EC8863[*(unsigned __int8 *)(v1 + 34)]))();
}

void sub_10066FF84()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1 & 1);
  v3 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  sub_100046220((uint64_t)v0, v3);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_100045DAC(v0, v4);
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(v2 + 56);
  if ((_DWORD)v5 != 7)
  {
    Hasher._combine(_:)(1u);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(0);
  v6 = *(_QWORD *)(v2 + 64);
  v7 = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain();
  String.hash(into:)(v0, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain();
  sub_100046164((uint64_t)v0, v8);
  swift_bridgeObjectRelease();
}

void sub_1006701E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 8);
  v3 = v0[2];
  v4 = (void *)v0[3];
  v5 = type metadata accessor for TitledSection(0);
  v6 = type metadata accessor for Genre(0);
  MusicLibrarySectionedRequest.init()(v5, v6, &protocol witness table for TitledSection, &protocol witness table for Genre);
  swift_retain();
  v7 = sub_100007E8C(&qword_1011A3BD0);
  MusicLibrarySectionedRequest.library.setter(v1, v7);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v2, v7);
  v8._countAndFlagsBits = v3;
  v8._object = v4;
  MusicLibrarySectionedRequest.filterItems(text:)(v8);
}

Swift::Int sub_10067029C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10066FDD8((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1006702DC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10066FDD8((uint64_t)v2);
  return Hasher._finalize()();
}

unint64_t sub_100670318()
{
  unint64_t result;

  result = qword_1011C1310;
  if (!qword_1011C1310)
  {
    result = swift_getWitnessTable(&unk_100EC887C, &_s6GenresVN);
    atomic_store(result, (unint64_t *)&qword_1011C1310);
  }
  return result;
}

unint64_t sub_10067035C(uint64_t a1)
{
  unint64_t result;

  result = sub_100670380();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100670380()
{
  unint64_t result;

  result = qword_1011C13F0;
  if (!qword_1011C13F0)
  {
    result = swift_getWitnessTable(&unk_100EC88A4, &_s6GenresVN);
    atomic_store(result, (unint64_t *)&qword_1011C13F0);
  }
  return result;
}

unint64_t sub_1006703C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D2D8;
  if (!qword_10119D2D8)
  {
    v1 = type metadata accessor for MusicLibrary(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrary, v1);
    atomic_store(result, (unint64_t *)&qword_10119D2D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioTrait(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 8)
      return v7 - 7;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 9;
    if (a2 + 9 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10067045C + 4 * byte_100EC8900[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AudioTrait(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 9;
  if (a3 + 9 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF7)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100670508 + 4 * byte_100EC890A[v5]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_10067053C + 4 * byte_100EC8905[v5]))();
}

uint64_t sub_10067053C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100670544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10067054CLL);
  return result;
}

uint64_t sub_100670558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100670560);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100670564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067056C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100670578(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_10067058C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for AudioTrait()
{
  return &type metadata for AudioTrait;
}

uint64_t storeEnumTagSinglePayload for HapticsState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1006705F8 + 4 * byte_100EC8914[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10067062C + 4 * byte_100EC890F[v4]))();
}

uint64_t sub_10067062C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100670634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10067063CLL);
  return result;
}

uint64_t sub_100670648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100670650);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100670654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067065C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HapticsState()
{
  return &type metadata for HapticsState;
}

unint64_t sub_10067067C()
{
  unint64_t result;

  result = qword_1011C13F8;
  if (!qword_1011C13F8)
  {
    result = swift_getWitnessTable(&unk_100EC8B48, &type metadata for HapticsState);
    atomic_store(result, (unint64_t *)&qword_1011C13F8);
  }
  return result;
}

_QWORD *sub_1006706C0()
{
  void *v0;
  unsigned __int8 v1;
  unsigned __int8 v2;
  _QWORD *v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongTraits))
    return _swiftEmptyArrayStorage;
  v1 = objc_msgSend(v0, "traits");
  v2 = v1;
  if ((v1 & 2) == 0)
  {
    v3 = _swiftEmptyArrayStorage;
    if ((v1 & 4) == 0)
      goto LABEL_14;
    goto LABEL_9;
  }
  v3 = sub_100431C7C(0, 1, 1, _swiftEmptyArrayStorage);
  v6 = v3[2];
  v5 = v3[3];
  v7 = v6 + 1;
  if (v6 >= v5 >> 1)
  {
    v19 = sub_100431C7C((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    v7 = v6 + 1;
    v3 = v19;
  }
  v3[2] = v7;
  *((_BYTE *)v3 + v6 + 32) = 6;
  if ((v2 & 4) != 0)
  {
LABEL_9:
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100431C7C(0, v3[2] + 1, 1, v3);
    v9 = v3[2];
    v8 = v3[3];
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      v20 = sub_100431C7C((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
      v10 = v9 + 1;
      v3 = v20;
    }
    v3[2] = v10;
    *((_BYTE *)v3 + v9 + 32) = 5;
  }
LABEL_14:
  if ((v2 & 0x20) == 0)
  {
    if ((v2 & 0x10) == 0)
      goto LABEL_16;
LABEL_23:
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100431C7C(0, v3[2] + 1, 1, v3);
    v15 = v3[2];
    v14 = v3[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      v22 = sub_100431C7C((_QWORD *)(v14 > 1), v15 + 1, 1, v3);
      v16 = v15 + 1;
      v3 = v22;
    }
    v3[2] = v16;
    *((_BYTE *)v3 + v15 + 32) = 3;
    if ((v2 & 1) == 0)
      goto LABEL_33;
    goto LABEL_28;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_100431C7C(0, v3[2] + 1, 1, v3);
  v12 = v3[2];
  v11 = v3[3];
  v13 = v12 + 1;
  if (v12 >= v11 >> 1)
  {
    v21 = sub_100431C7C((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
    v13 = v12 + 1;
    v3 = v21;
  }
  v3[2] = v13;
  *((_BYTE *)v3 + v12 + 32) = 4;
  if ((v2 & 0x10) != 0)
    goto LABEL_23;
LABEL_16:
  if ((v2 & 1) != 0)
  {
LABEL_28:
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100431C7C(0, v3[2] + 1, 1, v3);
    v18 = v3[2];
    v17 = v3[3];
    if (v18 >= v17 >> 1)
      v3 = sub_100431C7C((_QWORD *)(v17 > 1), v18 + 1, 1, v3);
    v3[2] = v18 + 1;
    *((_BYTE *)v3 + v18 + 32) = 7;
  }
LABEL_33:
  v23 = v3;
  swift_bridgeObjectRetain();
  sub_1006711C0((uint64_t *)&v23);
  swift_bridgeObjectRelease(v3);
  return v23;
}

uint64_t sub_1006709B8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  BOOL v4;
  unint64_t v5;
  int v6;

  switch(a1)
  {
    case 3u:
      if (a2 == 3)
        return 1;
      v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a2 == 4)
        return 1;
      v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a2 == 5)
        return 1;
      v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a2 == 6)
        return 1;
      v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a2 == 7)
        return 1;
      v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a2 == 8)
        return 1;
      v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a2 == 9)
        return 1;
      v2 = 7;
      goto LABEL_20;
    default:
      if ((a2 - 3) >= 7u)
      {
        v4 = a1 >= a2;
      }
      else
      {
        v2 = 6;
LABEL_20:
        if ((a2 - 3) > 6u)
          v5 = 6;
        else
          v5 = qword_100EC8C60[(char)(a2 - 3)];
        v4 = v2 >= v5;
      }
      v6 = !v4;
      return v6 ^ 1u;
  }
}

uint64_t sub_100670ACC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  BOOL v4;
  unint64_t v5;
  int v6;

  switch(a2)
  {
    case 3u:
      if (a1 == 3)
        return 1;
      v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a1 == 4)
        return 1;
      v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a1 == 5)
        return 1;
      v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a1 == 6)
        return 1;
      v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a1 == 7)
        return 1;
      v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a1 == 8)
        return 1;
      v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a1 == 9)
        return 1;
      v2 = 7;
      goto LABEL_20;
    default:
      if ((a1 - 3) >= 7u)
      {
        v4 = a2 >= a1;
      }
      else
      {
        v2 = 6;
LABEL_20:
        if ((a1 - 3) > 6u)
          v5 = 6;
        else
          v5 = qword_100EC8C60[(char)(a1 - 3)];
        v4 = v2 >= v5;
      }
      v6 = !v4;
      return v6 ^ 1u;
  }
}

BOOL sub_100670BE0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v4;

  switch(a2)
  {
    case 3u:
      if (a1 == 3)
        return 0;
      v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a1 == 4)
        return 0;
      v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a1 == 5)
        return 0;
      v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a1 == 6)
        return 0;
      v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a1 == 7)
        return 0;
      v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a1 == 8)
        return 0;
      v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a1 == 9)
        return 0;
      v2 = 7;
      goto LABEL_20;
    default:
      if ((a1 - 3) >= 7u)
        return a2 < a1;
      v2 = 6;
LABEL_20:
      if ((a1 - 3) > 6u)
        v4 = 6;
      else
        v4 = qword_100EC8C60[(char)(a1 - 3)];
      return v2 < v4;
  }
}

void sub_100670CF4(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_100670DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = String.LocalizationValue.init(stringLiteral:)(0x616C696176616E55, 0xEB00000000656C62);
  static Locale.current.getter(v2);
  return String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v0, 0, 0, 256);
}

void *sub_100670F14()
{
  void *result;

  result = sub_100047374((uint64_t)&off_1010AA238);
  qword_10124D668 = (uint64_t)result;
  return result;
}

void sub_100670F38(uint64_t a1, unsigned __int8 a2)
{
  Swift::UInt v2;

  if ((a2 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    v2 = a2;
  }
  else
  {
    v2 = qword_100EC8C60[(char)(a2 - 3)];
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_100670F8C(unsigned __int8 a1)
{
  Swift::UInt v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  if ((a1 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    v2 = a1;
  }
  else
  {
    v2 = qword_100EC8C60[(char)(a1 - 3)];
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_100671000@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_10067232C();
  *a1 = result;
  return result;
}

BOOL sub_100671024(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10067212C(*a1, *a2);
}

uint64_t sub_100671030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100670ACC(*a1, *a2);
}

uint64_t sub_10067103C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1006709B8(*a1, *a2);
}

BOOL sub_100671048(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100670BE0(*a1, *a2);
}

Swift::Int sub_100671054()
{
  unsigned __int8 *v0;

  return sub_100670F8C(*v0);
}

void sub_10067105C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_100670F38(a1, *v1);
}

Swift::Int sub_100671064(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  if ((v2 - 3) >= 7u)
    Hasher._combine(_:)(6uLL);
  else
    v2 = qword_100EC8C60[(char)(v2 - 3)];
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_1006710D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100672270(*a1, *a2);
}

void sub_1006710E0(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AD090;
}

uint64_t sub_1006710F0()
{
  return sub_100671180(&qword_1011C1400, &qword_1011C1408);
}

unint64_t sub_100671118()
{
  unint64_t result;

  result = qword_1011C1410;
  if (!qword_1011C1410)
  {
    result = swift_getWitnessTable(&unk_100EC8B70, &type metadata for AudioTrait);
    atomic_store(result, (unint64_t *)&qword_1011C1410);
  }
  return result;
}

uint64_t sub_10067115C()
{
  return sub_100671180(&qword_1011C1418, qword_1011C1420);
}

uint64_t sub_100671180(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1006711C0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1008A7C90(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100671228(v4);
  *a1 = v2;
}

void sub_100671228(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unint64_t v18;
  BOOL v19;
  unsigned int v20;
  unint64_t v21;
  Swift::Int v22;
  unsigned int v23;
  unint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  BOOL v27;
  int v28;
  Swift::Int v29;
  Swift::Int v30;
  char v31;
  Swift::Int v32;
  _BYTE *v33;
  unsigned int v34;
  Swift::Int v35;
  _BYTE *v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  _QWORD *v99;
  Swift::Int v100;
  Swift::Int v101;
  uint64_t v102;
  unsigned __int8 *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_100671BF0(0, v3, 1, a1);
      return;
    }
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    JUMPOUT(0x100671B9CLL);
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_225;
  v6 = v4;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_183:
      v91 = v11;
      v99 = v9;
      if (v13 < 2)
        goto LABEL_180;
      v92 = *v98;
      while (1)
      {
        v93 = v13 - 2;
        if (v13 < 2)
          break;
        if (!v92)
          goto LABEL_224;
        v90 = v91;
        v94 = *(_QWORD *)&v91[16 * v93 + 32];
        v95 = *(_QWORD *)&v91[16 * v13 + 24];
        sub_100671D40((unsigned __int8 *)(v92 + v94), (unsigned __int8 *)(v92 + *(_QWORD *)&v91[16 * v13 + 16]), v92 + v95, __dst);
        if (v1)
          goto LABEL_179;
        if (v95 < v94)
          goto LABEL_213;
        if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
          v90 = sub_1008A77EC((uint64_t)v90);
        if (v93 >= *((_QWORD *)v90 + 2))
          goto LABEL_214;
        v96 = &v90[16 * v93 + 32];
        *(_QWORD *)v96 = v94;
        *((_QWORD *)v96 + 1) = v95;
        v97 = *((_QWORD *)v90 + 2);
        if (v13 > v97)
          goto LABEL_215;
        memmove(&v90[16 * v13 + 16], &v90[16 * v13 + 32], 16 * (v97 - v13));
        v91 = v90;
        *((_QWORD *)v90 + 2) = v97 - 1;
        v13 = v97 - 1;
        if (v97 <= 2)
          goto LABEL_180;
      }
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
      goto LABEL_217;
    }
    v99 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for AudioTrait);
    *(_QWORD *)(v8 + 16) = v7;
    v99 = (_QWORD *)v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v11 = (char *)_swiftEmptyArrayStorage;
  v12 = *a1;
  v100 = v6;
  v101 = v3;
  v102 = *a1;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(unsigned __int8 *)(v12 + v10);
      v16 = *(unsigned __int8 *)(v12 + v14);
      switch(*(_BYTE *)(v12 + v10))
      {
        case 3:
          if (v16 == 3)
          {
            v17 = 0;
            goto LABEL_48;
          }
          v18 = 0;
          goto LABEL_41;
        case 4:
          if (v16 == 4)
            goto LABEL_34;
          v18 = 1;
          goto LABEL_41;
        case 5:
          if (v16 == 5)
            goto LABEL_34;
          v18 = 2;
          goto LABEL_41;
        case 6:
          if (v16 == 6)
            goto LABEL_34;
          v18 = 3;
          goto LABEL_41;
        case 7:
          if (v16 == 7)
            goto LABEL_34;
          v18 = 4;
          goto LABEL_41;
        case 8:
          if (v16 == 8)
            goto LABEL_34;
          v18 = 5;
          goto LABEL_41;
        case 9:
          if (v16 != 9)
          {
            v18 = 7;
            goto LABEL_41;
          }
LABEL_34:
          v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            v17 = 0;
            goto LABEL_49;
          }
          break;
        default:
          if (v16 - 3 < 7)
          {
            v18 = 6;
LABEL_41:
            v20 = v16 - 3;
            if (v20 > 6)
              v21 = 6;
            else
              v21 = qword_100EC8C60[(char)v20];
            v19 = v18 >= v21;
LABEL_45:
            v17 = !v19;
LABEL_48:
            v10 = v14 + 2;
            if (v14 + 2 < v3)
              goto LABEL_49;
LABEL_82:
            if (v17)
            {
LABEL_85:
              if (v10 < v14)
                goto LABEL_220;
              if (v14 < v10)
              {
                v29 = v10 - 1;
                v30 = v14;
                while (1)
                {
                  if (v30 != v29)
                  {
                    if (!v12)
                      goto LABEL_223;
                    v31 = *(_BYTE *)(v12 + v30);
                    *(_BYTE *)(v12 + v30) = *(_BYTE *)(v12 + v29);
                    *(_BYTE *)(v12 + v29) = v31;
                  }
                  v71 = ++v30 < v29--;
                  if (!v71)
                    goto LABEL_93;
                }
              }
            }
            break;
          }
          v19 = v15 >= v16;
          if (v15 != v16)
            goto LABEL_45;
          v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            v17 = 0;
LABEL_49:
            if (v3 <= v10 + 1)
              v22 = v10 + 1;
            else
              v22 = v3;
            while (2)
            {
              v23 = *(unsigned __int8 *)(v12 + v10);
              switch(*(_BYTE *)(v12 + v10))
              {
                case 3:
                  if (v15 == 3)
                    goto LABEL_52;
                  v24 = 0;
                  goto LABEL_71;
                case 4:
                  if (v15 == 4)
                    goto LABEL_52;
                  v24 = 1;
                  goto LABEL_71;
                case 5:
                  if (v15 == 5)
                    goto LABEL_52;
                  v24 = 2;
                  goto LABEL_71;
                case 6:
                  if (v15 == 6)
                    goto LABEL_52;
                  v24 = 3;
                  goto LABEL_71;
                case 7:
                  if (v15 == 7)
                    goto LABEL_52;
                  v24 = 4;
                  goto LABEL_71;
                case 8:
                  if (v15 == 8)
                    goto LABEL_52;
                  v24 = 5;
                  goto LABEL_71;
                case 9:
                  if (v15 == 9)
                    goto LABEL_52;
                  v24 = 7;
                  goto LABEL_71;
                default:
                  if ((v15 - 3) >= 7u)
                  {
                    v27 = v23 >= v15;
                    if (v23 == v15)
                    {
LABEL_52:
                      if ((v17 & 1) != 0)
                        goto LABEL_85;
                      goto LABEL_53;
                    }
                  }
                  else
                  {
                    v24 = 6;
LABEL_71:
                    v25 = v15 - 3;
                    if (v25 > 6u)
                      v26 = 6;
                    else
                      v26 = qword_100EC8C60[(char)v25];
                    v27 = v24 >= v26;
                  }
                  v28 = !v27;
                  if (v17 != v28)
                    goto LABEL_82;
LABEL_53:
                  ++v10;
                  LOBYTE(v15) = v23;
                  if (v10 < v3)
                    continue;
                  v10 = v22;
                  if (v17)
                    goto LABEL_85;
                  goto LABEL_93;
              }
            }
          }
          break;
      }
    }
LABEL_93:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_216;
      if (v10 - v14 < v6)
      {
        v32 = v14 + v6;
        if (__OFADD__(v14, v6))
          goto LABEL_218;
        if (v32 >= v3)
          v32 = v3;
        if (v32 < v14)
          goto LABEL_219;
        if (v10 != v32)
        {
          v33 = (_BYTE *)(v12 + v10);
LABEL_103:
          v34 = *(unsigned __int8 *)(v12 + v10);
          v35 = v14;
          v36 = v33;
          while (2)
          {
            v37 = *(v36 - 1);
            switch(v34)
            {
              case 3u:
                if (v37 == 3)
                  goto LABEL_102;
                v38 = 0;
                goto LABEL_121;
              case 4u:
                if (v37 == 4)
                  goto LABEL_102;
                v38 = 1;
                goto LABEL_121;
              case 5u:
                if (v37 == 5)
                  goto LABEL_102;
                v38 = 2;
                goto LABEL_121;
              case 6u:
                if (v37 == 6)
                  goto LABEL_102;
                v38 = 3;
                goto LABEL_121;
              case 7u:
                if (v37 == 7)
                  goto LABEL_102;
                v38 = 4;
                goto LABEL_121;
              case 8u:
                if (v37 == 8)
                  goto LABEL_102;
                v38 = 5;
                goto LABEL_121;
              case 9u:
                if (v37 == 9)
                  goto LABEL_102;
                v38 = 7;
                goto LABEL_121;
              default:
                if (v37 - 3 >= 7)
                {
                  if (v34 >= v37)
                    goto LABEL_102;
                }
                else
                {
                  v38 = 6;
LABEL_121:
                  if (v37 - 3 > 6)
                  {
                    if (v38 >= 6)
                      goto LABEL_102;
                  }
                  else if (v38 >= qword_100EC8C60[(char)(v37 - 3)])
                  {
                    goto LABEL_102;
                  }
                }
                if (!v12)
                  goto LABEL_221;
                *v36 = v37;
                *--v36 = v34;
                if (v10 != ++v35)
                  continue;
LABEL_102:
                ++v10;
                ++v33;
                if (v10 != v32)
                  goto LABEL_103;
                v10 = v32;
                break;
            }
            break;
          }
        }
      }
    }
    if (v10 < v14)
      goto LABEL_211;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1008A71C4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v40 = *((_QWORD *)v11 + 2);
    v39 = *((_QWORD *)v11 + 3);
    v13 = v40 + 1;
    v12 = v102;
    if (v40 >= v39 >> 1)
    {
      v89 = sub_1008A71C4((char *)(v39 > 1), v40 + 1, 1, v11);
      v12 = v102;
      v11 = v89;
    }
    *((_QWORD *)v11 + 2) = v13;
    v41 = v11 + 32;
    v42 = &v11[16 * v40 + 32];
    *(_QWORD *)v42 = v14;
    *((_QWORD *)v42 + 1) = v10;
    if (v40)
      break;
    v13 = 1;
LABEL_15:
    v6 = v100;
    v3 = v101;
    if (v10 >= v101)
    {
      v9 = v99;
      goto LABEL_183;
    }
  }
  while (1)
  {
    v43 = v13 - 1;
    if (v13 >= 4)
    {
      v48 = &v41[16 * v13];
      v49 = *((_QWORD *)v48 - 8);
      v50 = *((_QWORD *)v48 - 7);
      v54 = __OFSUB__(v50, v49);
      v51 = v50 - v49;
      if (v54)
        goto LABEL_200;
      v53 = *((_QWORD *)v48 - 6);
      v52 = *((_QWORD *)v48 - 5);
      v54 = __OFSUB__(v52, v53);
      v46 = v52 - v53;
      v47 = v54;
      if (v54)
        goto LABEL_201;
      v55 = v13 - 2;
      v56 = &v41[16 * v13 - 32];
      v58 = *(_QWORD *)v56;
      v57 = *((_QWORD *)v56 + 1);
      v54 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      if (v54)
        goto LABEL_203;
      v54 = __OFADD__(v46, v59);
      v60 = v46 + v59;
      if (v54)
        goto LABEL_206;
      if (v60 >= v51)
      {
        v78 = &v41[16 * v43];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v54 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v54)
          goto LABEL_210;
        v71 = v46 < v81;
        goto LABEL_168;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v72 = *((_QWORD *)v11 + 4);
        v73 = *((_QWORD *)v11 + 5);
        v54 = __OFSUB__(v73, v72);
        v65 = v73 - v72;
        v66 = v54;
        goto LABEL_162;
      }
      v45 = *((_QWORD *)v11 + 4);
      v44 = *((_QWORD *)v11 + 5);
      v54 = __OFSUB__(v44, v45);
      v46 = v44 - v45;
      v47 = v54;
    }
    if ((v47 & 1) != 0)
      goto LABEL_202;
    v55 = v13 - 2;
    v61 = &v41[16 * v13 - 32];
    v63 = *(_QWORD *)v61;
    v62 = *((_QWORD *)v61 + 1);
    v64 = __OFSUB__(v62, v63);
    v65 = v62 - v63;
    v66 = v64;
    if (v64)
      goto LABEL_205;
    v67 = &v41[16 * v43];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v54 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v54)
      goto LABEL_208;
    if (__OFADD__(v65, v70))
      goto LABEL_209;
    if (v65 + v70 >= v46)
    {
      v71 = v46 < v70;
LABEL_168:
      if (v71)
        v43 = v55;
      goto LABEL_170;
    }
LABEL_162:
    if ((v66 & 1) != 0)
      goto LABEL_204;
    v74 = &v41[16 * v43];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v54 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v54)
      goto LABEL_207;
    if (v77 < v65)
      goto LABEL_15;
LABEL_170:
    v82 = v43 - 1;
    if (v43 - 1 >= v13)
    {
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    if (!v12)
      goto LABEL_222;
    v83 = v11;
    v84 = &v41[16 * v82];
    v85 = *(_QWORD *)v84;
    v86 = &v41[16 * v43];
    v87 = *((_QWORD *)v86 + 1);
    sub_100671D40((unsigned __int8 *)(v12 + *(_QWORD *)v84), (unsigned __int8 *)(v12 + *(_QWORD *)v86), v12 + v87, __dst);
    if (v1)
      break;
    if (v87 < v85)
      goto LABEL_197;
    if (v43 > *((_QWORD *)v83 + 2))
      goto LABEL_198;
    *(_QWORD *)v84 = v85;
    *(_QWORD *)&v41[16 * v82 + 8] = v87;
    v88 = *((_QWORD *)v83 + 2);
    if (v43 >= v88)
      goto LABEL_199;
    v11 = v83;
    v13 = v88 - 1;
    memmove(&v41[16 * v43], v86 + 16, 16 * (v88 - 1 - v43));
    *((_QWORD *)v83 + 2) = v88 - 1;
    v12 = v102;
    if (v88 <= 2)
      goto LABEL_15;
  }
  v90 = v83;
LABEL_179:
  v91 = v90;
LABEL_180:
  swift_bridgeObjectRelease(v91);
  v99[2] = 0;
  swift_bridgeObjectRelease(v99);
}

uint64_t sub_100671BF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _BYTE *v5;
  unsigned int v6;
  uint64_t v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = (_BYTE *)(*a4 + a3);
    while (1)
    {
      v6 = *(unsigned __int8 *)(v4 + a3);
      v7 = result;
      v8 = v5;
      while (2)
      {
        v9 = *(v8 - 1);
        switch(v6)
        {
          case 3u:
            if (v9 != 3)
            {
              v10 = 0;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 4u:
            if (v9 != 4)
            {
              v10 = 1;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 5u:
            if (v9 != 5)
            {
              v10 = 2;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 6u:
            if (v9 != 6)
            {
              v10 = 3;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 7u:
            if (v9 != 7)
            {
              v10 = 4;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 8u:
            if (v9 != 8)
            {
              v10 = 5;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 9u:
            if (v9 != 9)
            {
              v10 = 7;
              goto LABEL_23;
            }
            goto LABEL_4;
          default:
            if (v9 - 3 >= 7)
            {
              if (v6 < v9)
                goto LABEL_27;
            }
            else
            {
              v10 = 6;
LABEL_23:
              if (v9 - 3 > 6)
                v11 = 6;
              else
                v11 = qword_100EC8C60[(char)(v9 - 3)];
              if (v10 < v11)
              {
LABEL_27:
                if (!v4)
                {
                  __break(1u);
                  JUMPOUT(0x100671D24);
                }
                *v8 = v9;
                *--v8 = v6;
                if (a3 != ++v7)
                  continue;
              }
            }
LABEL_4:
            ++a3;
            ++v5;
            if (a3 == a2)
              return result;
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_100671D40(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t result;
  char v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;

  v25 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v24 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) != 0)
      goto LABEL_83;
    if (__dst != a2 || a3 <= (unint64_t)__dst)
      memmove(__dst, a2, a3 - (_QWORD)a2);
    v15 = &v4[v9];
    v23 = &v4[v9];
    v25 = v6;
    if (v7 >= v6 || (unsigned __int8 *)a3 == v6)
    {
LABEL_82:
      sub_1008A72BC((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
    v16 = (unsigned __int8 *)(a3 - 1);
    while (1)
    {
      v17 = v16 + 1;
      v18 = v6 - 1;
      v19 = *(v6 - 1);
      switch(*(v15 - 1))
      {
        case 3u:
          if (v19 == 3)
            goto LABEL_69;
          v20 = 0;
          goto LABEL_67;
        case 4u:
          if (v19 == 4)
            goto LABEL_69;
          v20 = 1;
          goto LABEL_67;
        case 5u:
          if (v19 == 5)
            goto LABEL_69;
          v20 = 2;
          goto LABEL_67;
        case 6u:
          if (v19 == 6)
            goto LABEL_69;
          v20 = 3;
          goto LABEL_67;
        case 7u:
          if (v19 == 7)
            goto LABEL_69;
          v20 = 4;
          goto LABEL_67;
        case 8u:
          if (v19 == 8)
            goto LABEL_69;
          v20 = 5;
          goto LABEL_67;
        case 9u:
          if (v19 == 9)
            goto LABEL_69;
          v20 = 7;
          goto LABEL_67;
        default:
          if (v19 - 3 >= 7)
          {
            if (*(v15 - 1) >= v19)
            {
LABEL_69:
              v23 = v15 - 1;
              if (v17 < v15 || v16 >= v15 || v17 != v15)
                *v16 = *(v15 - 1);
              --v15;
              if (v6 <= v7)
                goto LABEL_82;
              goto LABEL_49;
            }
          }
          else
          {
            v20 = 6;
LABEL_67:
            if (v19 - 3 > 6)
            {
              if (v20 >= 6)
                goto LABEL_69;
            }
            else if (v20 >= qword_100EC8C60[(char)(v19 - 3)])
            {
              goto LABEL_69;
            }
          }
          if (v17 != v6 || v16 >= v6)
            *v16 = v19;
          v25 = --v6;
          if (v18 <= v7)
            goto LABEL_82;
LABEL_49:
          --v16;
          if (v15 <= v4)
            goto LABEL_82;
          break;
      }
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v23 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (2)
      {
        v11 = *v6;
        v12 = *v4;
        switch(*v6)
        {
          case 3u:
            if (v12 == 3)
              goto LABEL_27;
            v13 = 0;
            goto LABEL_25;
          case 4u:
            if (v12 == 4)
              goto LABEL_27;
            v13 = 1;
            goto LABEL_25;
          case 5u:
            if (v12 == 5)
              goto LABEL_27;
            v13 = 2;
            goto LABEL_25;
          case 6u:
            if (v12 == 6)
              goto LABEL_27;
            v13 = 3;
            goto LABEL_25;
          case 7u:
            if (v12 == 7)
              goto LABEL_27;
            v13 = 4;
            goto LABEL_25;
          case 8u:
            if (v12 == 8)
              goto LABEL_27;
            v13 = 5;
            goto LABEL_25;
          case 9u:
            if (v12 == 9)
              goto LABEL_27;
            v13 = 7;
            goto LABEL_25;
          default:
            if (v12 - 3 >= 7)
            {
              if (v11 >= v12)
              {
LABEL_27:
                if (v7 != v4)
                  *v7 = v12;
                v24 = ++v4;
                v14 = v6;
                goto LABEL_35;
              }
            }
            else
            {
              v13 = 6;
LABEL_25:
              if (v12 - 3 > 6)
              {
                if (v13 >= 6)
                  goto LABEL_27;
              }
              else if (v13 >= qword_100EC8C60[(char)(v12 - 3)])
              {
                goto LABEL_27;
              }
            }
            v14 = v6 + 1;
            if (v7 < v6 || v7 >= v14 || v7 != v6)
              *v7 = v11;
LABEL_35:
            ++v7;
            if (v4 < v10)
            {
              v6 = v14;
              if ((unint64_t)v14 < a3)
                continue;
            }
            v25 = v7;
            break;
        }
        break;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  v22 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v22, 1046, 0);
  __break(1u);
  return result;
}

BOOL sub_10067212C(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;
  unint64_t v3;
  unint64_t v4;

  switch(a1)
  {
    case 3u:
      if (a2 != 3)
      {
        v3 = 0;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 4u:
      if (a2 != 4)
      {
        v3 = 1;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 5u:
      if (a2 != 5)
      {
        v3 = 2;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 6u:
      if (a2 != 6)
      {
        v3 = 3;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 7u:
      if (a2 != 7)
      {
        v3 = 4;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 8u:
      if (a2 != 8)
      {
        v3 = 5;
        goto LABEL_26;
      }
      result = 0;
      break;
    case 9u:
      if (a2 != 9)
      {
        v3 = 7;
        goto LABEL_26;
      }
      result = 0;
      break;
    default:
      if ((a2 - 3) >= 7u)
      {
        result = a1 < a2;
      }
      else
      {
        v3 = 6;
LABEL_26:
        if ((a2 - 3) > 6u)
          v4 = 6;
        else
          v4 = qword_100EC8C60[(char)(a2 - 3)];
        result = v3 < v4;
      }
      break;
  }
  return result;
}

BOOL sub_100672270(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;

  switch(a1)
  {
    case 3u:
      if (a2 != 3)
        goto LABEL_18;
      result = 1;
      break;
    case 4u:
      if (a2 != 4)
        goto LABEL_18;
      result = 1;
      break;
    case 5u:
      if (a2 != 5)
        goto LABEL_18;
      result = 1;
      break;
    case 6u:
      if (a2 != 6)
        goto LABEL_18;
      result = 1;
      break;
    case 7u:
      if (a2 != 7)
        goto LABEL_18;
      result = 1;
      break;
    case 8u:
      if (a2 != 8)
        goto LABEL_18;
      result = 1;
      break;
    case 9u:
      if (a2 != 9)
        goto LABEL_18;
      result = 1;
      break;
    default:
      if (a2 - 3 < 7)
LABEL_18:
        result = 0;
      else
        result = a1 == a2;
      break;
  }
  return result;
}

_QWORD *sub_10067232C()
{
  unint64_t v0;
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;

  sub_10035C844(0, 3, 0);
  v1 = _swiftEmptyArrayStorage[2];
  v0 = _swiftEmptyArrayStorage[3];
  v2 = v0 >> 1;
  v3 = v1 + 1;
  if (v0 >> 1 <= v1)
  {
    sub_10035C844(v0 > 1, v1 + 1, 1);
    v0 = _swiftEmptyArrayStorage[3];
    v2 = v0 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v3;
  *((_BYTE *)&_swiftEmptyArrayStorage[4] + v1) = 0;
  v4 = v1 + 2;
  if (v2 < (uint64_t)(v1 + 2))
  {
    sub_10035C844(v0 > 1, v1 + 2, 1);
    v0 = _swiftEmptyArrayStorage[3];
    v2 = v0 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v4;
  *((_BYTE *)&_swiftEmptyArrayStorage[4] + v3) = 1;
  if (v2 < (uint64_t)(v1 + 3))
    sub_10035C844(v0 > 1, v1 + 3, 1);
  _swiftEmptyArrayStorage[2] = v1 + 3;
  *((_BYTE *)&_swiftEmptyArrayStorage[4] + v4) = 2;
  sub_100805EE8((uint64_t)_swiftEmptyArrayStorage);
  v5 = swift_bridgeObjectRetain();
  v6 = &off_1010AD068;
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
    v6 = sub_100431C7C(0, 7, 1, &off_1010AD068);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_100431C7C((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  *((_BYTE *)v6 + v8 + 32) = 9;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1006724D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  _BYTE v20[24];
  __int128 v21;

  swift_retain();
  sub_1006725F0(a1, a2, a3, (uint64_t)&v19);
  v21 = *(_OWORD *)&v20[8];
  v17[0] = v19;
  v17[1] = *(_OWORD *)v20;
  v18 = *(_QWORD *)&v20[16];
  v15 = type metadata accessor for OfflineObserving(0, a5, a7, v14);
  View.modifier<A>(_:)(v17, a4, v15, a6);
  swift_release();
  return sub_1003E34C0((uint64_t)&v21);
}

__n128 sub_1006725B4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __n128 result;

  sub_1005AF368((_QWORD *)a1);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1006725F0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v9;
  uint64_t v10;
  _QWORD v11[15];
  _BYTE v12[9];
  uint64_t v13;

  static ApplicationCapabilities.shared.getter((uint64_t)v11);
  sub_100065184(v11);
  v12[0] = BYTE1(v11[0]);
  result = State.init(wrappedValue:)(v12, &type metadata for Bool);
  v9 = v12[1];
  v10 = v13;
  *(_BYTE *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_BYTE *)(a4 + 24) = v9;
  *(_QWORD *)(a4 + 32) = v10;
  return result;
}

uint64_t type metadata accessor for OfflineObserving(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OfflineObserving);
}

uint64_t sub_100672678(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 16));
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1006726A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_1006726EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

uint64_t sub_100672758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10067283C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA8D14, 1);
}

uint64_t sub_100672870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;

  v4 = v3;
  v42 = a1;
  v47 = a3;
  v48 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v44 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  WitnessTable = swift_getWitnessTable(&unk_100EC8CF0, a2);
  v8 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v38 = *(_QWORD *)(a2 + 16);
  v9 = type metadata accessor for ModifiedContent(255, v38, &type metadata for _FlexFrameLayout);
  v10 = type metadata accessor for _ConditionalContent(255, v8, v9);
  v11 = type metadata accessor for Group(0, v10);
  v45 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  v14 = sub_1005903A8();
  v41 = v14;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  v60 = *(_QWORD *)(a2 + 24);
  v16 = v60;
  v61 = &protocol witness table for _FlexFrameLayout;
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v58 = v15;
  v59 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v10);
  v57 = v18;
  v39 = v11;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v11);
  *(_QWORD *)&v54 = v48;
  *((_QWORD *)&v54 + 1) = v11;
  v55 = v14;
  v56 = v40;
  v19 = type metadata accessor for SubscriptionView(0, &v54);
  v43 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v37 - v24;
  v26 = v38;
  v50 = v38;
  v51 = v16;
  v52 = v4;
  v53 = v42;
  Group<A>.init(content:)(sub_100673184, v49, v10, v18, v23);
  v27 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v28 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  v29 = v44;
  NSNotificationCenter.publisher(for:object:)(v28, 0);

  v30 = swift_allocObject(&unk_1010D5858, 72, 7);
  *(_QWORD *)(v30 + 16) = v26;
  *(_QWORD *)(v30 + 24) = v16;
  v31 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v30 + 48) = v31;
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(v4 + 32);
  v54 = *(_OWORD *)(v4 + 24);
  swift_retain();
  sub_1003E3468((uint64_t)&v54);
  v32 = v39;
  v33 = v48;
  View.onReceive<A>(_:perform:)(v29, sub_1006731BC, v30, v39, v48, v40, v41);
  v34 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v29, v33, v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v32);
  swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v19);
  sub_10081EB14((uint64_t)v21, v19, (uint64_t)v25);
  v35 = *(void (**)(char *, uint64_t))(v43 + 8);
  v35(v21, v19);
  sub_1000EA744((uint64_t)v25, v19, v47);
  return ((uint64_t (*)(char *, uint64_t))v35)(v25, v19);
}

uint64_t sub_100672C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(_OWORD *, double);
  double v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  char v63;
  _OWORD v64[6];

  v51 = a2;
  v54 = a5;
  v47 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v46 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ModifiedContent(0, a3, &type metadata for _FlexFrameLayout);
  v48 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v49 = (uint64_t)&v46 - v12;
  v53 = a4;
  v14 = type metadata accessor for OfflineObserving(255, a3, a4, v13);
  WitnessTable = swift_getWitnessTable(&unk_100EC8CF0, v14);
  v16 = type metadata accessor for _ViewModifier_Content(0, v14, WitnessTable);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - v21;
  v23 = type metadata accessor for _ConditionalContent(0, v16, v9);
  v52 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v46 - v24;
  v64[0] = *(_OWORD *)(a1 + 24);
  v26 = sub_100007E8C(&qword_1011C4DD0);
  State.wrappedValue.getter(&v63, v26);
  if ((v63 & 1) != 0 || (*(_BYTE *)a1 & 1) != 0)
  {
    v41 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v16);
    sub_10081EB14(v51, v16, (uint64_t)v22);
    sub_1000EA744((uint64_t)v22, v16, (uint64_t)v19);
    v32 = v53;
    v55 = v53;
    v56 = &protocol witness table for _FlexFrameLayout;
    v42 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
    sub_100817130((uint64_t)v19, v16, v9, v41, v42);
    v37 = *(void (**)(char *, uint64_t))(v17 + 8);
    v37(v19, v16);
    v39 = v22;
    v40 = v16;
  }
  else
  {
    v27 = *(void (**)(_OWORD *, double))(a1 + 8);
    v28 = sub_1006731C8((uint64_t)v64);
    v29 = v46;
    v27(v64, v28);
    v30 = sub_1006733E0(v64);
    v31 = static Alignment.center.getter(v30);
    v32 = v53;
    v33 = (uint64_t)v50;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v31, v34, a3, v53);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v29, a3);
    v61 = v32;
    v62 = &protocol witness table for _FlexFrameLayout;
    v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
    v36 = v49;
    sub_10081EB14(v33, v9, v49);
    v37 = *(void (**)(char *, uint64_t))(v48 + 8);
    v37((char *)v33, v9);
    sub_1000EA744(v36, v9, v33);
    v38 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v16);
    sub_1008171F4(v33, v16, v9, v38, v35);
    v37((char *)v33, v9);
    v39 = (char *)v36;
    v40 = v9;
  }
  v37(v39, v40);
  v43 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v16);
  v59 = v32;
  v60 = &protocol witness table for _FlexFrameLayout;
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v57 = v43;
  v58 = v44;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v23);
  sub_1000EA744((uint64_t)v25, v23, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v23);
}

uint64_t sub_100673094(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  __int128 v6;
  _QWORD v7[15];

  static ApplicationCapabilities.shared.getter((uint64_t)v7);
  sub_100065184(v7);
  v6 = *(_OWORD *)(a2 + 24);
  v5 = BYTE1(v7[0]);
  v3 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(&v5, v3);
}

void sub_1006730F4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v1 = v0;
    LSApplicationWorkspace.openSettings()();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10067314C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100672870(a1, a2, a3);
}

uint64_t sub_100673184@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100672C1C(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_100673190()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1006731BC(uint64_t a1)
{
  uint64_t v1;

  return sub_100673094(a1, v1 + 32);
}

double sub_1006731C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  _BYTE v25[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E414E0);
  static Locale.current.getter(v8);
  v9 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Title for offline view", 22, 2);
  v11 = v10;
  if ((static DeviceCapabilities.hasWAPICapability.getter() & 1) != 0)
  {
    v12 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006ELL, 0x8000000100E415D0);
    static Locale.current.getter(v12);
    v13 = "Subtitle for offline view with WAPI Capability";
    v14 = v7;
    v15 = v4;
    v16 = 46;
  }
  else
  {
    v17 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006FLL, 0x8000000100E41520);
    static Locale.current.getter(v17);
    v13 = "Subtitle for offline view without WAPI Capability";
    v14 = v7;
    v15 = v4;
    v16 = 49;
  }
  v18 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v15, v13, v16, 2);
  v20 = v19;
  v21 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  static Locale.current.getter(v21);
  v22 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Button title for offline view", 29, 2);
  result = 1.99990264e161;
  *(_OWORD *)a1 = xmmword_100EC8CA0;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v20;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v24;
  *(_QWORD *)(a1 + 64) = sub_1006730F4;
  *(_QWORD *)(a1 + 72) = 0;
  return result;
}

_QWORD *sub_1006733E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100253D48(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_100673454(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[9];

  v2 = *a1;
  v1 = a1[1];
  v3 = type metadata accessor for NSNotificationCenter.Publisher(255);
  v5 = type metadata accessor for OfflineObserving(255, v2, v1, v4);
  WitnessTable = swift_getWitnessTable(&unk_100EC8CF0, v5);
  v7 = type metadata accessor for _ViewModifier_Content(255, v5, WitnessTable);
  v8 = type metadata accessor for ModifiedContent(255, v2, &type metadata for _FlexFrameLayout);
  v9 = type metadata accessor for _ConditionalContent(255, v7, v8);
  v10 = type metadata accessor for Group(255, v9);
  v11 = sub_1005903A8();
  v14[7] = v1;
  v14[8] = &protocol witness table for _FlexFrameLayout;
  v14[5] = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v7);
  v14[6] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v14[4] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v9);
  v14[0] = v3;
  v14[1] = v10;
  v14[2] = v11;
  v14[3] = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v10);
  v12 = type metadata accessor for SubscriptionView(255, v14);
  return swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v12);
}

uint64_t sub_1006735A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Playlist(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3CF0);
  v2[7] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v6);
  v2[9] = swift_task_alloc(v6);
  v2[10] = swift_task_alloc(v6);
  v7 = sub_100007E8C(&qword_1011A8FA0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v2[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[13] = v9;
  v2[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.AddStatus(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v12);
  v2[18] = swift_task_alloc(v12);
  v13 = type metadata accessor for Track(0);
  v2[19] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[20] = v14;
  v2[21] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NavigationItem(0);
  v2[22] = v15;
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  v2[24] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v2[25] = v18;
  v2[26] = v19;
  return swift_task_switch(sub_100673748, v18, v19);
}

uint64_t sub_100673748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  char v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  int *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t KeyPath;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  sub_100674E84(*(_QWORD *)(v0 + 16), v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  if (!EnumCaseMultiPayload)
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Music/NavigationPusher.swift", 28, 2, 26, 0);
  if (EnumCaseMultiPayload == 1)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 160) + 32))(v4, *(_QWORD *)(v0 + 184), v6);
    v10 = type metadata accessor for MusicLibrary(0);
    static MusicLibrary.shared.getter(v10);
    MusicLibrary.state<A>(for:)(v4, v6, &protocol witness table for Track);
    v11 = swift_release();
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v11);
    v12 = swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v8 + 104))(v7, enum case for MusicLibrary.AddStatus.added(_:), v9, v12);
    v13 = static MusicLibrary.AddStatus.== infix(_:_:)(v5, v7) & 1;
    *(_BYTE *)(v0 + 224) = v13;
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v7, v9);
    v14(v5, v9);
    v15 = (_QWORD *)swift_task_alloc(dword_1011C14DC);
    *(_QWORD *)(v0 + 216) = v15;
    *v15 = v0;
    v15[1] = sub_100673BF0;
    return sub_100673F3C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 168), v13);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 32);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 64);
    v25 = swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(v22, v17, v24, v25);
    v26 = type metadata accessor for MusicLibrary(0);
    static MusicLibrary.shared.getter(v26);
    MusicLibrary.state<A>(for:)(v22, v24, &protocol witness table for Playlist);
    v27 = swift_release();
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v27);
    v28 = swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v20 + 104))(v19, enum case for MusicLibrary.AddStatus.added(_:), v21, v28);
    v29 = static MusicLibrary.AddStatus.== infix(_:_:)(v18, v19);
    v30 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v30(v19, v21);
    v30(v18, v21);
    v31 = *(_QWORD *)(v59 + 16);
    v32 = (int *)sub_100007E8C(&qword_10119ED18);
    v33 = (_QWORD *)(v60 + v32[12]);
    (*(void (**)(void))(v23 + 16))();
    if ((v29 & 1) != 0)
    {
      swift_retain();
      Library.Context.init()(v33);
      v34 = type metadata accessor for Library.Context(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
    }
    else
    {
      v35 = type metadata accessor for Library.Context(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v33, 1, 1, v35);
      swift_retain();
    }
    v36 = *(_QWORD *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v38 = *(_QWORD *)(v0 + 48);
    v39 = *(_QWORD *)(v0 + 56);
    v40 = *(_QWORD *)(v0 + 32);
    v41 = *(_QWORD *)(v0 + 40);
    v42 = (_QWORD *)(v36 + v32[16]);
    v43 = v32[20];
    *v42 = 0;
    v42[1] = 0;
    *(_OWORD *)(v36 + v43) = xmmword_100EAE4D0;
    v44 = type metadata accessor for NavigationDestinationItem(0);
    swift_storeEnumTagMultiPayload(v36, v44, 2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v36, 0, 1, v44);
    v45 = (_QWORD *)swift_task_alloc(16);
    *v45 = v39;
    KeyPath = swift_getKeyPath(&unk_100EC8DB0);
    swift_task_dealloc(v45);
    v47 = (_QWORD *)swift_task_alloc(16);
    *v47 = v39;
    v48 = swift_getKeyPath(&unk_100EC8DE8);
    swift_task_dealloc(v47);
    sub_10004A160(v36, v37, &qword_1011A3CF0);
    swift_retain();
    static Published.subscript.setter(v37, v31, KeyPath, v48);
    sub_10004FF60(v36, &qword_1011A3CF0);
    v49 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v38, v40, v49);
    v50 = *(_QWORD *)(v0 + 168);
    v52 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 144);
    v53 = *(_QWORD *)(v0 + 112);
    v55 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 88);
    v57 = *(_QWORD *)(v0 + 64);
    v56 = *(_QWORD *)(v0 + 72);
    v58 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100673BF0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));
  return swift_task_switch(sub_100673C3C, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_100673C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t KeyPath;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4);
  v6 = *(_QWORD *)(v0 + 88);
  if (v5 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    sub_10004FF60(v6, &qword_1011A8FA0);
  }
  else
  {
    v7 = *(unsigned __int8 *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 24);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v8, *(_QWORD *)(v0 + 88), v10);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = (int *)sub_100007E8C(&qword_1011C5BA0);
    v15 = (_QWORD *)(v11 + v14[12]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v8, v10);
    if (v7 == 1)
    {
      swift_retain();
      Library.Context.init()(v15);
      v16 = type metadata accessor for Library.Context(0);
      v17 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
    }
    else
    {
      v18 = type metadata accessor for Library.Context(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
      swift_retain();
    }
    v19 = *(_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 104);
    v44 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = (_QWORD *)(v22 + v14[16]);
    v26 = v14[20];
    *v25 = Track.id.getter(v17);
    v25[1] = v27;
    *(_OWORD *)(v22 + v26) = xmmword_100EAE4D0;
    v28 = type metadata accessor for NavigationDestinationItem(0);
    swift_storeEnumTagMultiPayload(v22, v28, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 0, 1, v28);
    v29 = (_QWORD *)swift_task_alloc(16);
    *v29 = v24;
    KeyPath = swift_getKeyPath(&unk_100EC8DB0);
    swift_task_dealloc(v29);
    v31 = (_QWORD *)swift_task_alloc(16);
    *v31 = v24;
    v32 = swift_getKeyPath(&unk_100EC8DE8);
    swift_task_dealloc(v31);
    sub_10004A160(v22, v23, &qword_1011A3CF0);
    swift_retain();
    static Published.subscript.setter(v23, v13, KeyPath, v32);
    sub_10004FF60(v22, &qword_1011A3CF0);
    v33 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v44, v21, v33);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v19, v46);
  }
  v34 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 112);
  v39 = *(_QWORD *)(v0 + 80);
  v38 = *(_QWORD *)(v0 + 88);
  v41 = *(_QWORD *)(v0 + 64);
  v40 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100673F3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v3 + 216) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B59B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 32) = swift_task_alloc(v4);
  *(_QWORD *)(v3 + 40) = swift_task_alloc(v4);
  v5 = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v3 + 48) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B6BC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 72) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v7);
  v8 = type metadata accessor for MusicPropertySource(0);
  *(_QWORD *)(v3 + 88) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 96) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E480) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 120) = swift_task_alloc(v11);
  *(_QWORD *)(v3 + 128) = swift_task_alloc(v11);
  v12 = type metadata accessor for Song(0);
  *(_QWORD *)(v3 + 136) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v3 + 144) = v13;
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Track(0);
  *(_QWORD *)(v3 + 160) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v3 + 168) = v15;
  *(_QWORD *)(v3 + 176) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006740C4, 0, 0);
}

uint64_t sub_1006740C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  _QWORD *v35;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(unsigned __int8 *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 96))(v5, *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EA7A90;
    sub_100007E8C((uint64_t *)&unk_1011B6BD0);
    v15 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v14 + 32) = v15;
    specialized Array._endMutation()(v15);
    *(_QWORD *)(v0 + 184) = v14;
    v16 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
    if (!v12)
      v16 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v9, *v16, v10);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
    *(_QWORD *)(v0 + 192) = v17;
    v18 = sub_100048748(&qword_10119EB78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    *v17 = v0;
    v17[1] = sub_1006743C4;
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = &protocol witness table for Song;
    v23 = &protocol witness table for Song;
    return MusicItem<>.with(_:preferredSource:)(v19, v14, v21, v20, v22, v23, v18);
  }
  if (v4 == enum case for Track.musicVideo(_:))
  {
    v24 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 88);
    v29 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 48);
    v31 = *(unsigned __int8 *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 96))(v24, *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v24, v30);
    v32 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v14 = swift_allocObject(v32, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EA7A90;
    sub_100007E8C(&qword_10119EB68);
    v33 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v14 + 32) = v33;
    specialized Array._endMutation()(v33);
    *(_QWORD *)(v0 + 200) = v14;
    v34 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
    if (!v31)
      v34 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v25, *v34, v27);
    v35 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
    *(_QWORD *)(v0 + 208) = v35;
    v18 = sub_100048748(&qword_10119EB70, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    *v35 = v0;
    v35[1] = sub_1006746A8;
    v21 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 48);
    v22 = &protocol witness table for MusicVideo;
    v23 = &protocol witness table for MusicVideo;
    return MusicItem<>.with(_:preferredSource:)(v19, v14, v21, v20, v22, v23, v18);
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 160));
}

uint64_t sub_1006743C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 192));
  v3 = *(_QWORD *)(v2 + 112);
  v6 = v2 + 88;
  v4 = *(_QWORD *)(v2 + 88);
  v5 = *(_QWORD *)(v6 + 8);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = sub_100674984;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    v7 = sub_100674478;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100674478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  sub_10004A160(v3, v4, &qword_10119E480);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 120);
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_10119E480);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v6);
    v8 = v7;
    v9 = &qword_10119E480;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 80);
    Song.albums.getter();
    v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v13(v11, v10);
    v14 = sub_100007E8C(&qword_1011A3D80);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
    v17 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 80);
    if (v16 != 1)
    {
      sub_10031E1D4(*(_QWORD *)(v0 + 16));
      sub_10004FF60(v19, &qword_10119E480);
      v13(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_7;
    }
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_10119E480);
    v13(v17, v18);
    v9 = (uint64_t *)&unk_1011B6BC0;
    v8 = v20;
  }
  sub_10004FF60(v8, v9);
  v21 = *(_QWORD *)(v0 + 16);
  v22 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
LABEL_7:
  v23 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  v31 = *(_QWORD *)(v0 + 40);
  v33 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006746A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 208));
  v4 = v2[12];
  v3 = v2[13];
  v5 = v2[11];
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_100674BB4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_bridgeObjectRelease();
    v6 = sub_10067475C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10067475C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  sub_10004A160(v3, v4, &qword_1011B59B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  v6 = *(_QWORD *)(v0 + 48);
  if ((_DWORD)v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 32);
    sub_10004FF60(*(_QWORD *)(v0 + 40), &qword_1011B59B0);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v6);
    v9 = v8;
    v10 = &qword_1011B59B0;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 32);
    MusicVideo.albums.getter(v5);
    v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v13(v12, v6);
    v14 = sub_100007E8C(&qword_1011A3D80);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    if (v16 != 1)
    {
      sub_10031E1D4(*(_QWORD *)(v0 + 16));
      sub_10004FF60(v20, &qword_1011B59B0);
      v13(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
      goto LABEL_7;
    }
    sub_10004FF60(*(_QWORD *)(v0 + 40), &qword_1011B59B0);
    v13(v18, v19);
    v10 = (uint64_t *)&unk_1011B6BC0;
    v9 = v17;
  }
  sub_10004FF60(v9, v10);
  v21 = *(_QWORD *)(v0 + 16);
  v22 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
LABEL_7:
  v23 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  v31 = *(_QWORD *)(v0 + 40);
  v33 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100674984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  sub_10004A160(v3, v4, &qword_10119E480);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 120);
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_10119E480);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v6);
    v8 = v7;
    v9 = &qword_10119E480;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 80);
    Song.albums.getter();
    v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v13(v11, v10);
    v14 = sub_100007E8C(&qword_1011A3D80);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
    v17 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 80);
    if (v16 != 1)
    {
      sub_10031E1D4(*(_QWORD *)(v0 + 16));
      sub_10004FF60(v19, &qword_10119E480);
      v13(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_7;
    }
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_10119E480);
    v13(v17, v18);
    v9 = (uint64_t *)&unk_1011B6BC0;
    v8 = v20;
  }
  sub_10004FF60(v8, v9);
  v21 = *(_QWORD *)(v0 + 16);
  v22 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
LABEL_7:
  v23 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  v31 = *(_QWORD *)(v0 + 40);
  v33 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100674BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  sub_10004A160(v3, v4, &qword_1011B59B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  v6 = *(_QWORD *)(v0 + 48);
  if ((_DWORD)v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 32);
    sub_10004FF60(*(_QWORD *)(v0 + 40), &qword_1011B59B0);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v6);
    v9 = v8;
    v10 = &qword_1011B59B0;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 32);
    MusicVideo.albums.getter(v5);
    v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v13(v12, v6);
    v14 = sub_100007E8C(&qword_1011A3D80);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    if (v16 != 1)
    {
      sub_10031E1D4(*(_QWORD *)(v0 + 16));
      sub_10004FF60(v20, &qword_1011B59B0);
      v13(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
      goto LABEL_7;
    }
    sub_10004FF60(*(_QWORD *)(v0 + 40), &qword_1011B59B0);
    v13(v18, v19);
    v10 = (uint64_t *)&unk_1011B6BC0;
    v9 = v17;
  }
  sub_10004FF60(v9, v10);
  v21 = *(_QWORD *)(v0 + 16);
  v22 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
LABEL_7:
  v23 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  v31 = *(_QWORD *)(v0 + 40);
  v33 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for NavigationPusher()
{
  return objc_opt_self(_TtC5Music16NavigationPusher);
}

uint64_t sub_100674DFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011C14D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return sub_1006735A0(a1);
}

uint64_t sub_100674E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NavigationPusher();
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100674E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NavigationItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100674ED0()
{
  return 8;
}

_QWORD *sub_100674EDC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_100674EE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath) = a1;
  v8 = a1;
  if (!v4)
  {
    if (!a1)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_100675910();
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)(v5, v6);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

id sub_100674FA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (v1)
    objc_msgSend(v1, "removeFromSuperview");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (v2)
    objc_msgSend(v2, "removeFromSuperview");
  result = *(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  if (result)
    return objc_msgSend(result, "removeFromSuperview");
  return result;
}

id sub_100675014(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  id result;
  char v8;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning) = 1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState);
  KeyPath = swift_getKeyPath(&unk_100EC90E0);
  v5 = swift_getKeyPath(&unk_100EC9108);
  v8 = 0;
  swift_retain();
  static Published.subscript.setter(&v8, v3, KeyPath, v5);
  if (a1 - 1 >= 2)
  {
    if (!a1)
    {
      sub_1006760F4();
      sub_100676294();
    }
    sub_1006756E4(0);
  }
  else
  {
    sub_1006760F4();
    sub_100676294();
  }
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (v6)
    objc_msgSend(v6, "setAlpha:", 0.0);
  result = *(id *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (result)
    return objc_msgSend(result, "setAlpha:", 1.0);
  return result;
}

void sub_100675110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  char v8;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning) = 0;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState);
  KeyPath = swift_getKeyPath(&unk_100EC90E0);
  v3 = swift_getKeyPath(&unk_100EC9108);
  v8 = 1;
  swift_retain();
  static Published.subscript.setter(&v8, v1, KeyPath, v3);
  v4 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (v5)
    objc_msgSend(v5, "setAlpha:", 1.0);
  sub_100674FA8();
  sub_100676620();
  v6 = *(void **)(v0 + v4);
  if (v6 && (v7 = objc_msgSend(v6, "superview")) != 0)

  else
    sub_1006751E8();
}

void sub_1006751E8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  char v25[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C19A0);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100007E8C(&qword_1011C1660);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v25[-v10 - 8];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer], v25, 0, 0);
  sub_10004A160(v12, (uint64_t)v4, &qword_1011C19A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v13 = &qword_1011C19A0;
    v14 = (uint64_t)v4;
LABEL_11:
    sub_10004FF60(v14, v13);
    return;
  }
  sub_100065228((uint64_t)v4, (uint64_t)v11, &qword_1011C1660);
  if (*(unsigned __int16 *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] < 0x4000u
    || (v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isBeingDonated] & 1) != 0)
  {
LABEL_10:
    v13 = &qword_1011C1660;
    v14 = (uint64_t)v11;
    goto LABEL_11;
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView], "setHidden:", 1);
  v15 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView;
  v16 = *(void **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
  if (v16)
    objc_msgSend(v16, "removeFromSuperview");
  sub_10004A160((uint64_t)v11, (uint64_t)v9, &qword_1011C1660);
  v17 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011C19A8));
  v18 = _UIHostingView.init(rootView:)(v9);
  v19 = *(void **)&v1[v15];
  *(_QWORD *)&v1[v15] = v18;

  v20 = *(void **)&v1[v15];
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v1, "bounds");
    Artwork.View.sizeThatFits(_:)(v22, v23);
    objc_msgSend(v21, "frame");
    objc_msgSend(v21, "setFrame:");

    if (*(_QWORD *)&v1[v15])
    {
      objc_msgSend(v1, "addSubview:");
      goto LABEL_10;
    }
  }
  __break(1u);
}

void sub_100675460(void *a1, char a2)
{
  char *v2;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void **v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v5 = a1;
  sub_100675D5C(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  sub_10067735C();
  if ((a2 & 1) == 0)
  {
    v6 = objc_msgSend(v2, "layer");
    objc_msgSend(v6, "setZPosition:", -1.0);

  }
  v7 = OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot;
  v8 = *(void **)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot];
  if (v8)
  {
    v9 = objc_msgSend(v8, "layer");
    objc_msgSend(v9, "setZPosition:", -1.0);

  }
  v10 = objc_msgSend(v2, "window");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "bounds");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    objc_msgSend(v2, "setFrame:", v13, v15, v17, v19);
  }
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView], "setAlpha:", 0.0);
  if ((a2 & 1) == 0)
  {
    sub_100676E4C(0, 1);
    v20 = *(void **)&v2[v7];
    if (v20)
    {
      v21 = (void *)objc_opt_self(UIView);
      v22 = swift_allocObject(&unk_1010D5A18, 32, 7);
      *(_QWORD *)(v22 + 16) = v2;
      *(_QWORD *)(v22 + 24) = v20;
      v35 = sub_1005F0F70;
      v36 = v22;
      v31 = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_1001DBD98;
      v34 = &unk_1010D5A30;
      v23 = _Block_copy(&v31);
      v24 = v36;
      v25 = v20;
      v26 = v2;
      swift_release(v24);
      v27 = swift_allocObject(&unk_1010D5A68, 24, 7);
      *(_QWORD *)(v27 + 16) = v25;
      v35 = sub_1005F0F90;
      v36 = v27;
      v31 = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_10012F6FC;
      v34 = &unk_1010D5A80;
      v28 = _Block_copy(&v31);
      v29 = v36;
      v30 = v25;
      swift_release(v29);
      objc_msgSend(v21, "animateWithDuration:delay:options:animations:completion:", 0, v23, v28, 0.2, 0.1);

      _Block_release(v28);
      _Block_release(v23);
    }
  }
}

void sub_1006756E4(char a1)
{
  char *v1;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  _QWORD v22[6];
  CGRect v23;

  v3 = *(void **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
  if (v3)
  {
    KeyPath = swift_getKeyPath(&unk_100EC9050);
    v5 = swift_getKeyPath(&unk_100EC9078);
    v6 = v3;
    swift_retain();
    static Published.subscript.getter(v22, v7, KeyPath, v5);
    swift_release();
    swift_release();
    *(_QWORD *)&v8 = swift_release().n128_u64[0];
    if (LOBYTE(v22[0]) == 1)
    {
      objc_msgSend(v6, "bounds", v8);
      v13 = v12;
    }
    else
    {
      objc_msgSend(v6, "frame", v8);
      v13 = CGRectGetWidth(v23) * 0.135;
      v14 = objc_msgSend(v6, "bounds");
      v10 = CGSize.scaled(_:)(v14, 0.73, v15, v16);
      v11 = v17;
      v9 = v13;
    }
    sub_100675D5C(objc_msgSend(v6, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, v13, v9, v10, v11, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right), &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);

  }
  sub_100675E14();
  if ((a1 & 1) != 0)
  {
    v18 = (void *)objc_opt_self(UIView);
    v19 = swift_allocObject(&unk_1010D5B08, 24, 7);
    *(_QWORD *)(v19 + 16) = v1;
    v22[4] = sub_10067C5D4;
    v22[5] = v19;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_1001DBD98;
    v22[3] = &unk_1010D5B20;
    v20 = _Block_copy(v22);
    v21 = v1;
    swift_release();
    objc_msgSend(v18, "animateWithDuration:delay:options:animations:completion:", 0, v20, 0, 0.2, 0.15);
    _Block_release(v20);
  }
}

uint64_t sub_100675904(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_10067C05C(*a1, *a2);
}

void sub_100675910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  __n128 v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIView.Corner(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119DDD8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v28 - v13;
  v15 = OBJC_IVAR____TtC5Music21NowPlayingContentView_mode;
  v16 = *(unsigned __int16 *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_mode);
  if (v16 >> 14)
  {
    if (v16 >> 14 != 1 || (~v16 & 0x101) == 0)
    {
      v17 = 1;
      goto LABEL_8;
    }
    v18 = UIView.Corner.large.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
  }
  else
  {
    static UIView.Corner.value(_:continuous:)(1, 6.5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  v17 = 0;
LABEL_8:
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, v17, 1, v5);
  __chkstk_darwin(v19);
  *(&v28 - 2) = v1;
  *(&v28 - 1) = (uint64_t)v14;
  static Artwork.with(_:)((uint64_t (*)(uint64_t))sub_10067B0DC, (uint64_t)v4);
  Artwork.View.typedConfiguration.setter((uint64_t)v4);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
  if (v20)
  {
    v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v20 + 216);
    v22 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext));
    v23 = (void *)v21(v22);
    v24 = objc_msgSend(v23, "playerViewController", swift_release(v20).n128_f64[0]);

    v25 = objc_msgSend(v24, "view");
    if (!v25)
    {
      __break(1u);
      return;
    }
    sub_10004A160((uint64_t)v14, (uint64_t)v12, &qword_10119DDD8);
    UIView.corner.setter(v12);

  }
  v26 = *(void **)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (v26)
  {
    sub_10004A160((uint64_t)v14, (uint64_t)v12, &qword_10119DDD8);
    v27 = v26;
    UIView.corner.setter(v12);

  }
  if ((*(_WORD *)(v1 + v15) & 0xC100) == 0x4100)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView), "setClipsToBounds:", 0);
  sub_10004FF60((uint64_t)v14, &qword_10119DDD8);
}

id sub_100675BF0(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  __n128 v8;
  void *v9;
  id v10;
  id v11;

  v2 = v1;
  if (a1)
  {
    v3 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)a1 + 216))();
    v4 = objc_msgSend(v3, "playerViewController");

    v5 = objc_msgSend(v4, "view");
    if (v5)
    {
      if (objc_msgSend(v5, "isDescendantOfView:", v2))
        objc_msgSend(v5, "removeFromSuperview");

    }
  }
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
  if (v6)
  {
    v7 = *(uint64_t (**)(__n128))(*(_QWORD *)v6 + 216);
    v8 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext]);
    v9 = (void *)v7(v8);
    v10 = objc_msgSend(v9, "playerViewController", swift_release(v6).n128_f64[0]);

    v11 = objc_msgSend(v10, "view");
    if (v11)
    {
      if ((objc_msgSend(v11, "isDescendantOfView:", v2) & 1) == 0)
        objc_msgSend(v2, "addSubview:", v11);

    }
  }
  sub_100675910();
  return objc_msgSend(v2, "setNeedsLayout");
}

void sub_100675D50(void *a1)
{
  sub_100675D5C(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
}

void sub_100675D5C(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v4 = *(void **)(v2 + *a2);
  *(_QWORD *)(v2 + *a2) = a1;
  v8 = a1;
  if (!v4)
  {
    if (!a1)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    objc_msgSend(v4, "removeFromSuperview");
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)(v5, v6);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

void sub_100675E14()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  id v22;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (v1)
  {
    v22 = v1;
    v2 = objc_msgSend(v22, "superview");

    if (v2)
    {

    }
    else
    {
      v3 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
      v4 = UIView.forAutolayout.getter();
      objc_msgSend(v3, "addSubview:", v4);

      v5 = (void *)objc_opt_self(NSLayoutConstraint);
      v6 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v7 = swift_allocObject(v6, 64, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100EA7AB0;
      v8 = objc_msgSend(v22, "topAnchor");
      v9 = objc_msgSend(v3, "topAnchor");
      v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

      *(_QWORD *)(v7 + 32) = v10;
      v11 = objc_msgSend(v22, "bottomAnchor");
      v12 = objc_msgSend(v3, "bottomAnchor");
      v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

      *(_QWORD *)(v7 + 40) = v13;
      v14 = objc_msgSend(v22, "leftAnchor");
      v15 = objc_msgSend(v3, "leftAnchor");
      v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

      *(_QWORD *)(v7 + 48) = v16;
      v17 = objc_msgSend(v22, "rightAnchor");
      v18 = objc_msgSend(v3, "rightAnchor");
      v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

      *(_QWORD *)(v7 + 56) = v19;
      specialized Array._endMutation()(v20);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    }
  }
}

id sub_1006760E4(uint64_t a1)
{
  return sub_100676604(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
}

double sub_1006760F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  double result;
  void *v14;
  void *v15;
  unsigned __int8 v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData);
  if (v1)
  {
    KeyPath = swift_getKeyPath(&unk_100EC9098);
    v3 = swift_getKeyPath(&unk_100EC90C0);
    swift_retain(v1);
    static Published.subscript.getter(&v14, v4, KeyPath, v3);
    swift_release(KeyPath);
    swift_release(v3);
    v5 = v16;
    if (v16 != 255)
    {
      v7 = v14;
      v6 = v15;
      if ((v16 & 1) != 0)
      {
        sub_1001FD5C4(v14, v15, 1);

      }
      else
      {
        sub_1001FD5C4(v14, v15, 0);
        sub_100675D5C(0, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        sub_100675D5C(objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7), &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        v8 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView;
        v9 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        if (v9)
        {
          objc_msgSend(v9, "setClipsToBounds:", 1);
          v10 = *(void **)(v0 + v8);
          if (v10)
          {
            v11 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
            v12 = v10;
            objc_msgSend(v11, "bounds");
            objc_msgSend(v12, "setFrame:");
            sub_1001FFA94(v7, v6, v5);
            sub_1001FFA94(v7, v6, v5);

            goto LABEL_10;
          }
        }
        sub_1001FFA94(v7, v6, v5);
      }
      sub_1001FFA94(v7, v6, v5);
    }
LABEL_10:
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  return result;
}

void sub_100676294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  uint64_t v35;
  char v36[24];

  v1 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v1);
  v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setAlpha:", 0.0);
    v6 = *(char **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
    v7 = &v6[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration];
    swift_beginAccess(&v6[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration], v36, 0, 0);
    v8 = type metadata accessor for Artwork(0);
    v9 = *(int *)(v8 + 24);
    v10 = type metadata accessor for Artwork.Decoration(0);
    sub_10004A160((uint64_t)&v7[v9 + *(int *)(v10 + 20)], (uint64_t)v3, &qword_10119DDD8);
    UIView.corner.setter(v3);
    v11 = (uint64_t *)&v7[*(int *)(v8 + 24)];
    v12 = *v11;
    v13 = v11[1];
    v14 = (void *)v11[2];
    v15 = v14;
    UIView.border.setter(v12, v13, v14);
    v16 = UIView.forAutolayout.getter();
    objc_msgSend(v6, "addSubview:", v16);

    v17 = (void *)objc_opt_self(NSLayoutConstraint);
    v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v19 = swift_allocObject(v18, 64, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EA7AB0;
    v20 = objc_msgSend(v5, "topAnchor");
    v21 = objc_msgSend(v6, "topAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v19 + 32) = v22;
    v23 = objc_msgSend(v5, "bottomAnchor");
    v24 = objc_msgSend(v6, "bottomAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v19 + 40) = v25;
    v26 = objc_msgSend(v5, "leftAnchor");
    v27 = objc_msgSend(v6, "leftAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

    *(_QWORD *)(v19 + 48) = v28;
    v29 = objc_msgSend(v5, "rightAnchor");
    v30 = objc_msgSend(v6, "rightAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    *(_QWORD *)(v19 + 56) = v31;
    v35 = v19;
    specialized Array._endMutation()(v32);
    v33 = v35;
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  }
}

id sub_1006765F4(uint64_t a1)
{
  return sub_100676604(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
}

id sub_100676604(uint64_t a1, _QWORD *a2)
{
  id result;

  result = *(id *)(a1 + *a2);
  if (result)
    return objc_msgSend(result, "setAlpha:");
  return result;
}

id sub_100676620()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  void *v7;
  id v8;
  _BOOL8 v9;
  void *v11;
  void *v12;
  unsigned __int8 v13;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData))
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);
  KeyPath = swift_getKeyPath(&unk_100EC9098);
  v2 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain();
  static Published.subscript.getter(&v11, v3, KeyPath, v2);
  swift_release();
  swift_release();
  if (v13 == 255)
  {
    swift_release();
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);
  }
  v5 = v11;
  v4 = v12;
  if ((v13 & 1) != 0)
  {
    swift_release();

    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);
  }
  sub_1001FFA94(v11, v12, v13);
  *(_QWORD *)&v6 = swift_release().n128_u64[0];
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (!v7)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);
  v8 = objc_msgSend(v7, "superview", v6);
  if (!v8)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);

  v9 = (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning) & 1) == 0
    && (*(_WORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_mode) & 0xC000) != 0;
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", v9);
}

uint64_t sub_100676770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  unsigned __int8 v40;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C19A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C19B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData);
  if (!v12)
    goto LABEL_7;
  KeyPath = swift_getKeyPath(&unk_100EC9098);
  v14 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain(v12);
  static Published.subscript.getter(&v38, v15, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v16 = v40;
  if (v40 == 255)
  {
LABEL_6:
    swift_release(v12);
LABEL_7:
    v33 = sub_100007E8C(&qword_1011C1660);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 1, 1, v33);
    v31 = v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer;
    goto LABEL_8;
  }
  v17 = v38;
  if ((v40 & 1) != 0)
  {
    v32 = v39;
    sub_1001FD5C4(v38, v39, 1);

    sub_1001FFA94(v17, v32, v16);
    goto LABEL_6;
  }
  v37 = v39;
  v18 = sub_1001FD5C4(v38, v39, 0);
  v19 = VideoArtwork.url.getter(v18);
  __chkstk_darwin(v19);
  v21 = __chkstk_darwin(v20);
  MotionViewV2.init(url:keyframe:fallback:)(v7, sub_10067C8C4, v21);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState);
  v23 = type metadata accessor for SquareMotionState(0);
  v24 = sub_10067C624();
  v36 = v1;
  v25 = v24;
  swift_retain(v22);
  *(_QWORD *)v4 = ObservedObject.init(wrappedValue:)(v26, v23, v25);
  *((_QWORD *)v4 + 1) = v27;
  v28 = sub_100007E8C(&qword_1011C1660);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v4[*(int *)(v28 + 36)], v11, v8);
  v29 = v37;
  sub_1001FFA94(v17, v37, v16);
  sub_1001FFA94(v17, v29, v16);
  v30 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v4, 0, 1, v28);
  v31 = v36 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer;
LABEL_8:
  swift_beginAccess(v31, &v38, 33, 0);
  sub_1000A5508((uint64_t)v4, v31, &qword_1011C19A0);
  return swift_endAccess(&v38);
}

uint64_t sub_100676ADC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Image.init(uiImage:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v9 = Image.resizable(capInsets:resizingMode:)(v7, v8, 0.0, 0.0, 0.0, 0.0);
  swift_release(v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  return result;
}

void sub_100676BAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;

  v1 = sub_100007E8C(&qword_1011C19A0);
  v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData);
  if (!v6)
  {
LABEL_6:
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView), "setClipsToBounds:", 0, *(double *)&v2);
    sub_100675D5C(0, &OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
    v12 = *(_QWORD *)(v0 + v5);
    if (!v12)
      goto LABEL_14;
    goto LABEL_7;
  }
  KeyPath = swift_getKeyPath(&unk_100EC9098);
  v8 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain(v6);
  static Published.subscript.getter(&v22, v9, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  if (v24 == 255)
  {
LABEL_5:
    v2 = swift_release(v6).n128_u64[0];
    goto LABEL_6;
  }
  v11 = v22;
  v10 = v23;
  if ((v24 & 1) == 0)
  {
    sub_1001FFA94(v22, v23, v24);
    goto LABEL_5;
  }
  swift_release(v6);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView), "setClipsToBounds:", 1);
  v12 = *(_QWORD *)(v0 + v5);
  if (!v12)
    goto LABEL_14;
LABEL_7:
  v13 = swift_getKeyPath(&unk_100EC9098);
  v14 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain(v12);
  static Published.subscript.getter(&v22, v15, v13, v14);
  swift_release(v13);
  swift_release(v14);
  if (v24 == 255)
  {
    swift_release(v12);
  }
  else
  {
    v17 = v22;
    v16 = v23;
    if ((v24 & 1) == 0)
    {
      sub_1001FFA94(v22, v23, v24);
      swift_release(v12);
      return;
    }
    swift_release(v12);

  }
LABEL_14:
  sub_100675D5C(0, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  sub_100675D5C(0, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  v18 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (v18)
    objc_msgSend(v18, "removeFromSuperview");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "setHidden:", 0);
  v19 = sub_100007E8C(&qword_1011C1660);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v20 = v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer;
  swift_beginAccess(v20, &v22, 33, 0);
  sub_1000A5508((uint64_t)v4, v20, &qword_1011C19A0);
  swift_endAccess(&v22);
}

void sub_100676E4C(char a1, char a2)
{
  char *v2;
  id v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  void *v10;
  const CALayerCornerCurve *v11;
  int v12;
  double v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  double v20;
  const CALayerCornerCurve *v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v5 = objc_msgSend(v2, "traitCollection");
  objc_msgSend(v5, "displayCornerRadius");
  v7 = v6;

  v8 = *(void **)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView];
  objc_msgSend(v8, "setClipsToBounds:", 1);
  v9 = objc_msgSend(v8, "layer");
  v10 = v9;
  if ((a2 & 1) != 0)
  {
    v11 = &kCACornerCurveContinuous;
    v12 = a1 & 1;
    if (v12)
    {
      v11 = &kCACornerCurveCircular;
      v13 = 6.5;
    }
    else
    {
      v13 = v7;
    }
    objc_msgSend(v9, "setCornerCurve:", *v11);

    v14 = objc_msgSend(v8, "layer");
    objc_msgSend(v14, "setCornerRadius:", v13);

    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_1010D5AB8, 48, 7);
    *(_QWORD *)(v16 + 16) = v2;
    *(_BYTE *)(v16 + 24) = v12;
    *(double *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = 0x401A000000000000;
    aBlock[4] = sub_10067C5A0;
    v24 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010D5AD0;
    v17 = _Block_copy(aBlock);
    v18 = v24;
    v19 = v2;
    swift_release(v18);
    objc_msgSend(v15, "animateWithDuration:animations:", v17, 0.35);
    _Block_release(v17);
  }
  else
  {
    v20 = 6.5;
    if ((a1 & 1) != 0)
    {
      v20 = v7;
      v21 = &kCACornerCurveContinuous;
    }
    else
    {
      v21 = &kCACornerCurveCircular;
    }
    objc_msgSend(v9, "setCornerRadius:", v20);

    v22 = objc_msgSend(v8, "layer");
    objc_msgSend(v22, "setCornerCurve:", *v21);

  }
}

void sub_100677090(uint64_t a1, char a2, double a3, double a4)
{
  void *v7;
  id v8;
  void *v9;
  double v10;
  const CALayerCornerCurve *v11;
  id v12;

  v7 = *(void **)(a1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView);
  v8 = objc_msgSend(v7, "layer");
  v9 = v8;
  if ((a2 & 1) != 0)
    v10 = a3;
  else
    v10 = a4;
  if ((a2 & 1) != 0)
    v11 = &kCACornerCurveContinuous;
  else
    v11 = &kCACornerCurveCircular;
  objc_msgSend(v8, "setCornerRadius:", v10);

  v12 = objc_msgSend(v7, "layer");
  objc_msgSend(v12, "setCornerCurve:", *v11);

}

void sub_10067714C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  void **v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  id (*v18)();
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData);
  if (v1)
  {
    KeyPath = swift_getKeyPath(&unk_100EC9098);
    v3 = swift_getKeyPath(&unk_100EC90C0);
    swift_retain(v1);
    static Published.subscript.getter(&v14, v4, KeyPath, v3);
    swift_release(v1);
    swift_release(KeyPath);
    swift_release(v3);
    v5 = v16;
    if (v16 != 255)
    {
      v6 = v14;
      v7 = (id)v15;
      if ((v16 & 1) != 0)
      {
        v8 = (id)v15;
        sub_100675D5C(v7, &OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
        objc_msgSend(v8, "removeFromSuperview");
        if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16) & 1) == 0)
        {
          objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView), "frame");
          objc_msgSend(v8, "frame");
          objc_msgSend(v8, "setFrame:");
        }
        objc_msgSend(v8, "setAlpha:", 0.0);
        sub_10067735C();
        v9 = (void *)objc_opt_self(UIView);
        v10 = swift_allocObject(&unk_1010D5B58, 24, 7);
        *(_QWORD *)(v10 + 16) = v8;
        v18 = sub_100558AE8;
        v19 = v10;
        v14 = _NSConcreteStackBlock;
        v15 = 1107296256;
        v16 = sub_1001DBD98;
        v17 = &unk_1010D5B70;
        v11 = _Block_copy(&v14);
        v12 = v19;
        v13 = v8;
        swift_release(v12);
        objc_msgSend(v9, "animateWithDuration:animations:", v11, 0.15);
        _Block_release(v11);

      }
      sub_1001FFA94(v6, v7, v5);
    }
  }
}

void sub_10067735C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  id v23;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  if (v1)
  {
    v2 = v0;
    v23 = v1;
    objc_msgSend(v23, "setContentMode:", 2);
    v3 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView);
    v4 = UIView.forAutolayout.getter();
    objc_msgSend(v3, "addSubview:", v4);

    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16) & 1) == 0)
    {
      v5 = *(double *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 8)
         / *(double *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize);
      v6 = (void *)objc_opt_self(NSLayoutConstraint);
      v7 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v8 = swift_allocObject(v7, 64, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100EA7AB0;
      v9 = objc_msgSend(v23, "topAnchor");
      v10 = objc_msgSend(v3, "topAnchor");
      v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

      *(_QWORD *)(v8 + 32) = v11;
      v12 = objc_msgSend(v23, "leftAnchor");
      v13 = objc_msgSend(v3, "leftAnchor");
      v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

      *(_QWORD *)(v8 + 40) = v14;
      v15 = objc_msgSend(v23, "rightAnchor");
      v16 = objc_msgSend(v3, "rightAnchor");
      v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

      *(_QWORD *)(v8 + 48) = v17;
      v18 = objc_msgSend(v23, "heightAnchor");
      v19 = objc_msgSend(v23, "widthAnchor");
      v20 = objc_msgSend(v18, "constraintEqualToAnchor:multiplier:", v19, v5);

      *(_QWORD *)(v8 + 56) = v20;
      specialized Array._endMutation()(v21);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    }
  }
}

id sub_100677648(char *a1, void *a2)
{
  id v4;

  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView], "setAlpha:", 1.0);
  v4 = objc_msgSend(a1, "layer");
  objc_msgSend(v4, "setZPosition:", 0.0);

  return objc_msgSend(a2, "setAlpha:", 0.0);
}

void sub_1006776C8(int a1, id a2)
{
  id v3;

  objc_msgSend(a2, "removeFromSuperview");
  v3 = objc_msgSend(a2, "layer");
  objc_msgSend(v3, "setZPosition:", 0.0);

}

char *sub_10067772C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  Class isa;
  uint64_t v61;
  _BYTE v62[24];
  objc_super v63;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v11);
  v13 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v62[-v15 - 8];
  *(_WORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = 0;
  v17 = &v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkCachingReference] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog] = 0;
  v18 = OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView;
  v19 = v5;
  Artwork.init()((uint64_t)v16);
  sub_10056577C((uint64_t)v16, (uint64_t)v13);
  v20 = objc_allocWithZone((Class)type metadata accessor for Artwork.View(0));
  v21 = Artwork.View.init(configuration:)((uint64_t)v13);
  sub_1005657C0((uint64_t)v16);
  *(_QWORD *)&v5[v18] = v21;
  v22 = OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView;
  *(_QWORD *)&v19[v22] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = &v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_lastSeenBounds];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView] = 0;
  v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_isBeingDonated] = 0;
  v24 = &v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = &v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer];
  v26 = sub_100007E8C(&qword_1011C1660);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView] = 0;
  v27 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState;
  v28 = type metadata accessor for SquareMotionState(0);
  v29 = swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v62[0] = 1;
  Published.init(initialValue:)(v62, &type metadata for Bool);
  v62[0] = 1;
  Published.init(initialValue:)(v62, &type metadata for Bool);
  *(_QWORD *)&v19[v27] = v29;
  v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath] = 0;
  v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_deferArtworkUpdates] = 0;

  v63.receiver = v19;
  v63.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v63, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v30, "setUserInteractionEnabled:", 0);
  v31 = OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView;
  v32 = *(char **)&v30[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView];
  objc_msgSend(v32, "setClipsToBounds:", 1);
  v33 = swift_allocObject(&unk_1010D5BA8, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  v34 = swift_allocObject(&unk_1010D5BD0, 32, 7);
  *(_QWORD *)(v34 + 16) = v33;
  *(_QWORD *)(v34 + 24) = ObjectType;
  v35 = (uint64_t *)&v32[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler];
  swift_beginAccess(v35, v62, 1, 0);
  v36 = *v35;
  v37 = v35[1];
  *v35 = (uint64_t)sub_10067C74C;
  v35[1] = v34;
  sub_10004BA30(v36, v37);
  v38 = objc_msgSend(v30, "layer");
  objc_msgSend(v38, "setAllowsGroupOpacity:", 0);

  v39 = objc_msgSend(v30, "layer");
  objc_msgSend(v39, "setAllowsGroupBlending:", 0);

  v40 = OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView;
  objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView], "addSubview:", *(_QWORD *)&v30[v31]);
  v41 = v30;
  v42 = UIView.forAutolayout.getter();
  objc_msgSend(v41, "addSubview:", v42);

  v43 = (void *)objc_opt_self(NSLayoutConstraint);
  v44 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v45 = swift_allocObject(v44, 64, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100EA7AB0;
  v46 = objc_msgSend(*(id *)&v30[v40], "topAnchor");
  v47 = objc_msgSend(v41, "topAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v45 + 32) = v48;
  v49 = objc_msgSend(*(id *)&v30[v40], "bottomAnchor");
  v50 = objc_msgSend(v41, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v45 + 40) = v51;
  v52 = objc_msgSend(*(id *)&v30[v40], "leftAnchor");
  v53 = objc_msgSend(v41, "leftAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v45 + 48) = v54;
  v55 = objc_msgSend(*(id *)&v30[v40], "rightAnchor");
  v56 = objc_msgSend(v41, "rightAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v45 + 56) = v57;
  v61 = v45;
  specialized Array._endMutation()(v58);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  sub_100675910();
  return v41;
}

void sub_100677D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void (*v12)(__n128);
  uint64_t v13;
  __n128 v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    if ((*(_WORD *)(Strong + OBJC_IVAR____TtC5Music21NowPlayingContentView_mode) & 0xC000) == 0)
    {
      v4 = OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView;
      v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView), "layer"));
      objc_msgSend(v5, "cornerRadius");
      v7 = v6;

      if (v7 != 6.5)
      {
        v8 = objc_msgSend(v3, "traitCollection");
        objc_msgSend(v8, "displayCornerRadius");

        v9 = *(void **)&v3[v4];
        objc_msgSend(v9, "setClipsToBounds:", 1);
        v10 = objc_msgSend(v9, "layer");
        objc_msgSend(v10, "setCornerRadius:", 6.5);

        v11 = objc_msgSend(v9, "layer");
        objc_msgSend(v11, "setCornerCurve:", kCACornerCurveCircular);

      }
    }
    sub_100676620();
    v12 = *(void (**)(__n128))&v3[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
    if (v12)
    {
      v13 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler + 8];
      v14 = swift_retain();
      v12(v14);
      sub_10004BA30((uint64_t)v12, v13);
    }

  }
}

void sub_100677FF4()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double x;
  double v28;
  uint64_t (*v29)(__n128);
  __n128 v30;
  void *v31;
  unsigned __int8 v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  CGFloat v42;
  double v43;
  double width;
  double height;
  unint64_t v46;
  char v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  char v54;
  double v55;
  double v56;
  double v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  CGFloat v62;
  double y;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  double v69;
  double v70;
  double v71;
  double v72;
  __n128 v73;
  __n128 v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t (*v82)(__n128);
  __n128 v83;
  void *v84;
  NSString *v85;
  unsigned int v86;
  int v87;
  uint64_t v88;
  uint64_t KeyPath;
  uint64_t v90;
  id v91;
  id v92;
  _BOOL4 v93;
  double v94;
  double v95;
  double v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  CGSize v103;
  double v104;
  double v105;
  double v106;
  id v107;
  id v108;
  _BOOL4 v109;
  double v110;
  NSString *v111;
  char v112;
  NSString *v113;
  void *v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  uint64_t v142;
  int v143;
  char *v144;
  NSObject *v145;
  uint64_t v146;
  os_log_type_t v147;
  uint64_t v148;
  CGFloat v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  CGFloat b;
  CGFloat a;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  CGFloat v164;
  CGFloat v165;
  uint64_t v166;
  void *v167;
  id v168;
  double v169;
  double v170;
  double v171;
  double v172;
  double v173;
  double v174;
  double v175;
  double v176;
  double v177;
  double v178;
  double v179;
  double v180;
  id v181;
  CGFloat v182;
  CGFloat v183;
  CGFloat v184;
  CGFloat v185;
  double v186;
  void *v187;
  id v188;
  char *v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(__n128);
  __n128 v194;
  void *v195;
  id v196;
  id v197;
  id v198;
  void *v199;
  char *v200;
  id v201;
  double v202;
  uint64_t v203;
  double v204;
  id v205;
  id v206;
  id v207;
  id v208;
  double v209;
  double v210;
  double v211;
  NSString *v212;
  double v213;
  double v214;
  double v215;
  double v216;
  uint64_t v217;
  char *v218;
  CGFloat v219;
  id v220;
  double v221;
  CGFloat v222;
  double v223;
  double v224;
  double v225;
  uint64_t v226;
  CGAffineTransform v227;
  char v228[24];
  uint64_t v229;
  _BYTE v230[23];
  unsigned __int8 v231;
  objc_super v232;
  id v233[5];
  void *v234;
  double v235;
  double v236;
  void *v237;
  double v238;
  CGSize v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;

  v1 = v0;
  v232.receiver = v0;
  v232.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v232, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v223 = v6;
  v8 = v7;
  v9 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v9, "displayScale");
  v224 = v10;

  v11 = (void *)objc_opt_self(UIColor);
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)objc_msgSend(v11, "clearColor"), (uint64_t)v233, 0.0, 0.0, 0.0, 0.0);
  v12 = v233[0];
  v221 = *(double *)&v233[1];
  v222 = *(double *)&v233[2];
  v219 = *(double *)&v233[4];
  v220 = v233[3];
  objc_msgSend(v1, "bounds");
  v13 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_lastSeenBounds];
  if (!CGRectEqualToRect(v240, *(CGRect *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_lastSeenBounds]))
  {
    sub_100675910();
    objc_msgSend(v1, "bounds");
    *(_QWORD *)v13 = v14;
    *((_QWORD *)v13 + 1) = v15;
    *((_QWORD *)v13 + 2) = v16;
    *((_QWORD *)v13 + 3) = v17;
  }
  v18 = *(char **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView];
  objc_msgSend(v1, "bounds");
  v218 = v18;
  v22 = Artwork.View.sizeThatFits(_:)(v19, v20);
  v23 = v21;
  if (v22 == 0.0 && v21 == 0.0)
  {
    objc_msgSend(v1, "bounds");
    v22 = v24;
    v23 = v25;
  }
  v231 = 0;
  v226 = OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext;
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
  x = 0.0;
  v210 = v8;
  if (v26)
  {
    v216 = v5;
    v28 = v3;
    v29 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 216);
    v30 = swift_retain();
    v31 = (void *)v29(v30);
    v32 = objc_msgSend(v31, "isReadyForDisplay");

    v231 = v32;
    v33 = (void *)((uint64_t (*)(void))v29)();
    objc_msgSend(v33, "videoBounds");
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v41 = v40;

    v241.origin.x = v35;
    v241.origin.y = v37;
    v241.size.width = v39;
    v241.size.height = v41;
    if (CGRectGetWidth(v241) <= 0.0
      || (v242.origin.x = v35,
          v242.origin.y = v37,
          v242.size.width = v39,
          v242.size.height = v41,
          CGRectGetHeight(v242) <= 0.0))
    {
      v231 = 0;
      if (qword_10119C358 != -1)
        swift_once(&qword_10119C358, sub_1005EC118);
      v64 = type metadata accessor for Logger(0);
      v65 = sub_100048B14(v64, (uint64_t)qword_10124D428);
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.default.getter(v66);
      v8 = v210;
      v3 = v28;
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "NowPlayingContentView video NOT READY (invalid bounds)", v68, 2u);
        swift_slowDealloc(v68, -1, -1);
      }

      swift_release();
      y = 0.0;
      v5 = v216;
    }
    else
    {
      v209 = v41;
      v42 = v28;
      v43 = v28;
      v5 = v216;
      v8 = v210;
      CGRect.aspectFit(in:scale:)(v43, v216, v223, v210, v224, v35, v37, v39, v209);
      width = v243.size.width;
      height = v243.size.height;
      v243.origin.x = 0.0;
      v243.origin.y = 0.0;
      v213 = CGRectGetWidth(v243);
      v244.origin.x = v42;
      v244.origin.y = v216;
      v244.size.width = v223;
      v244.size.height = v210;
      v227.a = CGRectGetWidth(v244);
      v234 = 0;
      v46 = sub_10067C6C0();
      v47 = static ApproximatelyEquatable<>.==~ infix(_:_:)(&v227, &v234, &type metadata for CGFloat, &protocol witness table for CGFloat, v46);
      if ((v47 & 1) != 0)
        v48 = width;
      else
        v48 = v223;
      if ((v47 & 1) != 0)
        v49 = height;
      else
        v49 = v210;
      v50 = 0.0;
      if ((v47 & 1) != 0)
        v51 = 0.0;
      else
        v51 = v42;
      if ((v47 & 1) == 0)
        v50 = v216;
      v52 = CGRectGetWidth(*(CGRect *)(&v48 - 2));
      v245.origin.x = 0.0;
      v245.origin.y = 0.0;
      v245.size.width = width;
      v245.size.height = height;
      v53 = CGRectGetHeight(v245);
      v246.origin.x = v42;
      v246.origin.y = v216;
      v246.size.width = v223;
      v246.size.height = v210;
      v227.a = CGRectGetHeight(v246);
      v234 = 0;
      v54 = static ApproximatelyEquatable<>.==~ infix(_:_:)(&v227, &v234, &type metadata for CGFloat, &protocol witness table for CGFloat, v46);
      if ((v54 & 1) != 0)
        v55 = width;
      else
        v55 = v223;
      if ((v54 & 1) != 0)
        v56 = height;
      else
        v56 = v210;
      v57 = 0.0;
      if ((v54 & 1) != 0)
        v58 = 0.0;
      else
        v58 = v42;
      if ((v54 & 1) == 0)
        v57 = v216;
      v59 = CGRectGetHeight(*(CGRect *)(&v55 - 2));
      v60 = v213 / v52;
      v3 = v42;
      v61 = v60 * -10.0;
      v62 = v53 / v59 * -10.0;
      v247.origin.x = 0.0;
      v247.origin.y = 0.0;
      v247.size.width = width;
      v247.size.height = height;
      v248 = CGRectInset(v247, v61, v62);
      x = v248.origin.x;
      y = v248.origin.y;
      v22 = v248.size.width;
      v23 = v248.size.height;
      swift_release();
    }
  }
  else
  {
    y = 0.0;
  }
  v69 = CGRect.aspectFit(in:scale:)(v3, v5, v223, v8, v224, x, y, v22, v23);
  v75 = CGRect.centeringAlong(axes:bounds:scale:)(3, v3, v5, v223, v8, v224, v69, v70, v71, v72);
  v76 = v74.n128_f64[0];
  v78 = v77;
  v80 = v79;
  v81 = *(_QWORD *)&v1[v226];
  if (v81)
  {
    v82 = *(uint64_t (**)(__n128))(*(_QWORD *)v81 + 216);
    v83 = swift_retain();
    v84 = (void *)v82(v83);
    v85 = (NSString *)objc_msgSend(v84, "videoGravity", swift_release().n128_f64[0]);

  }
  else
  {
    v85 = 0;
  }
  v217 = OBJC_IVAR____TtC5Music21NowPlayingContentView_mode;
  v86 = *(unsigned __int16 *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
  if (!(v86 >> 14))
  {
    v211 = v75;
    v214 = v76;
    if ((v86 & 1) != 0)
    {
      v107 = objc_msgSend(v11, "blackColor");
      if ((*(_WORD *)&v1[v217] & 0xC000) != 0)
      {
        sub_100065200(v233);
        v110 = 0.45;
      }
      else
      {
        v108 = objc_msgSend(v1, "traitCollection");
        v109 = objc_msgSend(v108, "userInterfaceStyle") == (id)2;

        sub_100065200(v233);
        v110 = dbl_100EC8E10[v109];
      }
      v97 = v218;
      UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v107, (uint64_t)&v234, v110, 15.0, 0.0, 15.0);
      v12 = v234;
      v221 = v235;
      v222 = v236;
      v219 = v238;
      v220 = v237;
      UIEdgeInsets.init(value:)();
      v95 = v73.n128_f64[0];
      v96 = v74.n128_f64[0];
    }
    else
    {
      v95 = 20.0;
      v96 = 10.0;
      v97 = v218;
    }
    v114 = *(void **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot];
    if (v114 && (v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16] & 1) == 0)
    {
      v115 = v114;
      objc_msgSend(v115, "frame");
      objc_msgSend(v115, "setFrame:", v3, v5);
      objc_msgSend(v115, "frame");
      objc_msgSend(v115, "setFrame:");

    }
    v3 = v211;
    v5 = v214;
    goto LABEL_66;
  }
  if (v86 >> 14 == 1)
  {
    v87 = v86 & 1;
    v88 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState];
    KeyPath = swift_getKeyPath(&unk_100EC9050);
    v90 = swift_getKeyPath(&unk_100EC9078);
    LOBYTE(v227.a) = v87;
    swift_retain();
    static Published.subscript.setter(&v227, v88, KeyPath, v90);
    v91 = objc_msgSend(v11, "blackColor");
    if (*(unsigned __int16 *)&v1[v217] >= 0x4000u)
    {
      sub_100065200(v233);
      v94 = 0.45;
    }
    else
    {
      v92 = objc_msgSend(v1, "traitCollection");
      v93 = objc_msgSend(v92, "userInterfaceStyle") == (id)2;

      sub_100065200(v233);
      v94 = dbl_100EC8E10[v93];
    }
    UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v91, (uint64_t)&v234, v94, 24.0, 0.0, 12.0);
    v12 = v234;
    v97 = v218;
    if (v87)
    {
      v221 = v235;
      v222 = v236;
      v219 = v238;
      v220 = v237;
      v3 = v75;
    }
    else
    {
      CGAffineTransformMakeScale(&v227, 0.73, 0.73);
      v239.width = v78;
      v239.height = v80;
      v103 = CGSizeApplyAffineTransform(v239, &v227);
      v3 = CGRect.centeringAlong(axes:bounds:scale:)(3, v3, v5, v223, v8, v224, v75, v76, v103.width, v103.height);
      v76 = v104;
      v78 = v105;
      v80 = v106;
      v222 = 8.0;
      v220 = 0;
      v219 = 4.0;
      v221 = 0.2;
    }
    v111 = AVLayerVideoGravityResize;

    v95 = 20.0;
    v5 = v76;
    v96 = 10.0;
    v85 = v111;
    goto LABEL_66;
  }
  v231 = 1;
  v97 = v218;
  if (v85)
  {
    v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v100 = v99;
    v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(AVLayerVideoGravityResize);
    if (v98 == v102 && v100 == v101)
    {
      swift_bridgeObjectRelease_n(v100, 2);
    }
    else
    {
      v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, v100, v102, v101, 0);
      swift_bridgeObjectRelease();
      v73 = swift_bridgeObjectRelease();
      if ((v112 & 1) == 0)
      {
        v95 = 20.0;
        v78 = v223;
        v80 = v8;
        v96 = 10.0;
        goto LABEL_66;
      }
    }
  }
  v113 = AVLayerVideoGravityResizeAspect;

  v95 = 20.0;
  v78 = v223;
  v80 = v8;
  v85 = v113;
  v96 = 10.0;
LABEL_66:
  v73.n128_f64[0] = v78;
  v74.n128_f64[0] = v80;
  v116 = Artwork.View.fittingImageSize(in:)(v73, v74);
  v118 = CGRect.centeringAlong(axes:bounds:scale:)(3, v3, v5, v78, v80, v224, v3, v5, v116, v117);
  v122 = sub_10004D6A0(v118, v119, v120, v121, v95, v96);
  v124 = v123;
  v126 = v125;
  v128 = v127;
  v129 = UIRectIntegralWithScale(v3, v5, v78, v80, v224);
  v131 = v130;
  v133 = v132;
  v215 = v134;
  v135 = UIRectIntegralWithScale(v122, v124, v126, v128, v224);
  v137 = v136;
  v139 = v138;
  v141 = v140;
  if (qword_10119C358 != -1)
    swift_once(&qword_10119C358, sub_1005EC118);
  v142 = type metadata accessor for Logger(0);
  sub_100048B14(v142, (uint64_t)qword_10124D428);
  v143 = v231;
  v144 = v1;
  v145 = Logger.logObject.getter(v144);
  v147 = static os_log_type_t.info.getter(v145, v146);
  v212 = v85;
  if (os_log_type_enabled(v145, v147))
  {
    v148 = swift_slowAlloc(28, -1);
    v149 = COERCE_DOUBLE(swift_slowAlloc(64, -1));
    v227.a = v149;
    *(_DWORD *)v148 = 136446722;
    v229 = *(_QWORD *)&v1[v226];
    swift_retain();
    v150 = sub_100007E8C(&qword_1011A09D0);
    v151 = String.init<A>(describing:)(&v229, v150);
    v229 = sub_100322200(v151, v152, (uint64_t *)&v227);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);

    swift_bridgeObjectRelease();
    *(_WORD *)(v148 + 12) = 2082;
    LOWORD(v229) = *(_WORD *)&v1[v217];
    v153 = String.init<A>(describing:)(&v229, &type metadata for NowPlayingContentView.ViewMode);
    v229 = sub_100322200(v153, v154, (uint64_t *)&v227);
    v97 = v218;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);

    swift_bridgeObjectRelease();
    *(_WORD *)(v148 + 22) = 1026;
    LODWORD(v229) = v143;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, (char *)&v229 + 4);
    _os_log_impl((void *)&_mh_execute_header, v145, v147, "NowPlayingContentView VideoContext=%{public}s, .mode=%{public}s => videoReady=%{BOOL,public}d", (uint8_t *)v148, 0x1Cu);
    swift_arrayDestroy(*(_QWORD *)&v149, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(*(_QWORD *)&v149, -1, -1);
    swift_slowDealloc(v148, -1, -1);

  }
  else
  {

  }
  v155 = OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData;
  if (!*(_QWORD *)&v144[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData])
    goto LABEL_76;
  v156 = swift_getKeyPath(&unk_100EC9098);
  v157 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain();
  static Published.subscript.getter(&v227, v158, v156, v157);
  swift_release();
  swift_release();
  if (LOBYTE(v227.c) == 255)
  {
LABEL_75:
    swift_release();
    goto LABEL_76;
  }
  a = v227.a;
  b = v227.b;
  if ((LOBYTE(v227.c) & 1) == 0)
  {
    sub_1001FFA94(*(void **)&v227.a, *(void **)&v227.b, LOBYTE(v227.c));
    goto LABEL_75;
  }
  swift_release();

  if ((*(_WORD *)&v1[v217] & 0xC100) != 0x4000)
  {
LABEL_76:
    objc_msgSend(v97, "setFrame:", v129, v131, v133, v215);
    if (!*(_QWORD *)&v144[v155])
      goto LABEL_87;
    goto LABEL_77;
  }
  objc_msgSend(v144, "frame");
  v139 = CGRectGetWidth(v249);
  objc_msgSend(v144, "frame");
  v141 = CGRectGetWidth(v250);
  v135 = 0.0;
  objc_msgSend(v97, "setFrame:", 0.0, 0.0, v139, v141);
  v137 = 0.0;
  if (!*(_QWORD *)&v144[v155])
    goto LABEL_87;
LABEL_77:
  v161 = swift_getKeyPath(&unk_100EC9098);
  v162 = swift_getKeyPath(&unk_100EC90C0);
  swift_retain();
  static Published.subscript.getter(&v227, v163, v161, v162);
  swift_release();
  swift_release();
  if (LOBYTE(v227.c) == 255)
  {
    swift_release();
  }
  else
  {
    v165 = v227.a;
    v164 = v227.b;
    if ((LOBYTE(v227.c) & 1) != 0)
    {
      swift_release();

    }
    else
    {
      sub_1001FFA94(*(void **)&v227.a, *(void **)&v227.b, LOBYTE(v227.c));
      swift_release();
      v166 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView;
      v167 = *(void **)&v144[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
      if (v167)
      {
        v168 = v167;
        objc_msgSend(v97, "frame");
        v225 = v129;
        v173 = v133;
        v174 = v131;
        v175 = v141;
        v176 = v139;
        v177 = v135;
        v178 = CGRect.center.getter(v169, v170, v171, v172);
        v180 = v179;
        v181 = objc_msgSend(v168, "frame");
        v227.a = v182;
        v227.b = v183;
        v227.c = v184;
        v227.d = v185;
        v186 = v178;
        v135 = v177;
        v139 = v176;
        v141 = v175;
        v131 = v174;
        v133 = v173;
        v129 = v225;
        CGRect.center.setter(v181, v186, v180);
        objc_msgSend(v168, "setFrame:", v227.a, v227.b, v227.c, v227.d);

        v187 = *(void **)&v144[v166];
        if (v187)
        {
          v188 = v187;
          objc_msgSend(v188, "frame");
          objc_msgSend(v188, "setFrame:");

        }
      }
    }
  }
LABEL_87:
  v189 = &v97[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration];
  *(_QWORD *)&v190 = swift_beginAccess(&v97[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration], &v229, 0, 0).n128_u64[0];
  v191 = *((_QWORD *)v189 + 4);
  v192 = *(_QWORD *)&v1[v226];
  if (v192)
  {
    v193 = *(uint64_t (**)(__n128))(*(_QWORD *)v192 + 216);
    v194 = swift_retain();
    v195 = (void *)v193(v194);
    v196 = objc_msgSend(v195, "playerViewController", swift_release().n128_f64[0]);

    v197 = objc_msgSend(v196, "view");
    if (v197)
    {
      v198 = objc_msgSend(v197, "superview");
      if (v198)
      {
        v199 = v198;
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        v200 = v144;
        v201 = v199;
        LOBYTE(v199) = static NSObject.== infix(_:_:)(v201, v200);

        if ((v199 & 1) != 0)
        {
          objc_msgSend(v197, "setFrame:", v129, v131, v133, v215);
          objc_msgSend(v197, "setClipsToBounds:", 1);
          *(_QWORD *)&v202 = swift_beginAccess(&v231, v228, 0, 0).n128_u64[0];
          v203 = v231;
          objc_msgSend(v197, "setHidden:", v231 ^ 1u, v202);
          objc_msgSend(*(id *)&v200[OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView], "setHidden:", v203);

          goto LABEL_94;
        }
      }

    }
  }
  objc_msgSend(*(id *)&v144[OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView], "setHidden:", 0, v190);
LABEL_94:
  *(_QWORD *)&v227.a = v12;
  if (v191)
    v204 = v221;
  else
    v204 = 0.0;
  v227.b = v204;
  v227.c = v222;
  *(_QWORD *)&v227.d = v220;
  v227.tx = v219;
  v205 = v12;
  UIView.shadow.setter((uint64_t)&v227);
  v206 = objc_msgSend(v144, "layer");
  v207 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v135, v137, v139, v141, 6.0);
  v208 = objc_msgSend(v207, "CGPath");

  objc_msgSend(v206, "setShadowPath:", v208);
}

void sub_1006791E4()
{
  char *v0;
  id v1;
  char *v2;
  double v3;
  double v4;
  char v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = objc_msgSend(v0, "window");

  if (!v1)
    return;
  v2 = &v0[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize];
  v3 = *(double *)&v0[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize];
  v4 = *(double *)&v0[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 8];
  v5 = v0[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16];
  v6 = objc_msgSend(v0, "window");
  if (!v6)
  {
    if ((v5 & 1) != 0)
      return;
    goto LABEL_11;
  }
  v7 = v6;
  objc_msgSend(v6, "bounds");
  v9 = v8;
  v11 = v10;

  if ((v5 & 1) != 0 || (v3 == v9 ? (v12 = v4 == v11) : (v12 = 0), !v12))
  {
LABEL_11:
    v13 = objc_msgSend(v0, "window");
    v14 = v13;
    if (v13)
    {
      objc_msgSend(v13, "bounds");
      v16 = v15;
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    *(_QWORD *)v2 = v16;
    *((_QWORD *)v2 + 1) = v18;
    v2[16] = v14 == 0;
  }
}

void sub_10067940C(uint64_t a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  CGFloat Width;
  CGFloat Height;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  CGRect v40;
  CGRect v41;

  v6 = *(void **)&a2[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog];
  v7 = v6;
  v8 = Artwork.Content.init(catalog:background:)((uint64_t)v6, 0);
  v10 = v9;
  sub_10044E244(*(void **)(a1 + 24), *(void **)(a1 + 32));
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  v11 = *(void **)&a2[OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath];
  LOWORD(v10) = *(_WORD *)&a2[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
  v12 = v11;
  sub_100679640(v10, v11, (uint64_t)v37);
  v32 = v37[1];
  v33 = v37[0];
  v13 = v38;
  v14 = v39;

  v15 = (int *)type metadata accessor for Artwork(0);
  v16 = a1 + v15[7];
  sub_100565840(*(void **)v16, *(void **)(v16 + 8), *(void **)(v16 + 16), *(void **)(v16 + 24));
  *(_OWORD *)v16 = v33;
  *(_OWORD *)(v16 + 16) = v32;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = (uint64_t *)(a1 + v15[6]);
  v18 = type metadata accessor for Artwork.Decoration(0);
  sub_10067B0E4(a3, (uint64_t)v17 + *(int *)(v18 + 20));
  if (qword_10119C5D0 != -1)
    swift_once(&qword_10119C5D0, sub_100679E80);
  v19 = qword_1011C1588;
  v20 = byte_1011C1590;
  v21 = qword_1011C1598;
  v22 = (void *)v17[2];
  v23 = (id)qword_1011C1598;

  *v17 = v19;
  v17[1] = v20;
  v17[2] = v21;
  *(uint64_t *)((char *)v17 + *(int *)(v18 + 28)) = 0;
  objc_msgSend(a2, "bounds");
  Width = CGRectGetWidth(v40);
  objc_msgSend(a2, "bounds");
  Height = CGRectGetHeight(v41);
  v26 = a1 + v15[8];
  *(CGFloat *)v26 = Width;
  *(_QWORD *)(v26 + 8) = 2;
  *(CGFloat *)(v26 + 16) = Height;
  *(_BYTE *)(v26 + 24) = 2;
  v27 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkCachingReference];
  if (v27)
  {
    swift_retain_n(v27, 2);
    v28 = (uint64_t *)Artwork.Caching.Reference.defaultIdentifier.unsafeMutableAddressor();
    v30 = *v28;
    v29 = v28[1];
    v31 = swift_weakInit(&v35, 0);
    *(_QWORD *)&v34 = v30;
    *((_QWORD *)&v34 + 1) = v29;
    swift_weakAssign(v31, v27);
    swift_bridgeObjectRetain();
    swift_release(v27);
    sub_100565884(&v34, &v36);
    swift_release(v27);
    sub_1000A5508((uint64_t)&v36, a1, &qword_1011B4848);
  }
}

void sub_100679640(unsigned __int16 a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  void *v24;
  __int128 v25;

  sub_10067C3C8(a1, &v18);
  if (a2)
  {
    v6 = v19;
    v5 = v20;
    v7 = (void *)v18;
    v17 = v18;
    v8 = (void *)*((_QWORD *)&v18 + 1);
    v9 = v19;
    v10 = v5;
    v11 = v7;
    v12 = v8;
    v13 = objc_msgSend(a2, "route");
    if (v13)
    {
      v14 = v13;
      if ((objc_msgSend(v13, "isDeviceRoute") & 1) == 0)
      {
        static Artwork.Placeholder.device(representing:basedOn:)((uint64_t)v14, (uint64_t)&v18, &v22);

        v15 = v25;
        v6 = v23;
        v10 = v24;
        v16 = v22;
        goto LABEL_8;
      }

    }
    v15 = v21;
    v16 = v17;
  }
  else
  {
    v15 = v21;
    v6 = v19;
    v10 = v20;
    v16 = v18;
  }
LABEL_8:
  *(_OWORD *)a3 = v16;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v10;
  *(_OWORD *)(a3 + 32) = v15;
}

void sub_1006797A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
  if (v1)
  {
    v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 216);
    v3 = swift_retain(v1);
    v4 = (void *)v2(v3);
    swift_release(v1);
    v5 = objc_msgSend(v4, "playerViewController");

    v6 = objc_msgSend(v5, "view");
    if (v6)
    {
      v7 = objc_msgSend(v6, "layer");

      if (v7)
      {
        v8 = objc_opt_self(AVPlayerLayer);
        if (!swift_dynamicCastObjCClass(v7, v8))

      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100679984()
{
  return type metadata accessor for NowPlayingContentView(0);
}

uint64_t type metadata accessor for NowPlayingContentView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C1648, (uint64_t)&nominal type descriptor for NowPlayingContentView);
}

void sub_1006799A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[20];

  v4[0] = &unk_100EC8E58;
  v4[1] = &unk_100EC8E70;
  v4[2] = &unk_100EC8E88;
  v4[3] = &unk_100EC8E70;
  v4[4] = &unk_100EC8E70;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_100EC8EA0;
  v4[8] = &unk_100EC8E70;
  v4[9] = &unk_100EC8E70;
  v4[10] = &unk_100EC8EB8;
  v4[11] = &unk_100EC8ED0;
  sub_100679A7C(319);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    v4[13] = &unk_100EC8E70;
    v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[15] = &unk_100EC8EB8;
    v4[16] = &unk_100EC8E70;
    v4[17] = &unk_100EC8E70;
    v4[18] = &unk_100EC8E70;
    v4[19] = &unk_100EC8EB8;
    swift_updateClassMetadata2(a1, 256, 20, v4, a1 + 80);
  }
}

void sub_100679A7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C1658)
  {
    v2 = sub_100044B54(&qword_1011C1660);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C1658);
  }
}

void sub_100679AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v2 = v1;
  v4 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)a1 + 216))();
  v11 = objc_msgSend(v4, "playerViewController");

  v5 = objc_msgSend(v11, "parentViewController");
  if (v5)
  {
    objc_msgSend(v11, "willMoveToParentViewController:", 0);
    objc_msgSend(v11, "removeFromParentViewController");
  }
  v6 = *(void **)(v2 + 32);
  v7 = type metadata accessor for NowPlayingContentView(0);
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8)
  {
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
    *(_QWORD *)(v8 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext) = a1;
    swift_retain_n(a1, 2);
    v10 = v6;
    sub_100675BF0(v9);

    swift_release();
    swift_release();
  }
  else
  {

  }
}

double sub_100679C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, __n128);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v4 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 72);
  if (v4)
  {
    v6 = *(_QWORD *)(v3 + 80);
    v7 = swift_retain();
    v4(v3, a1, v7);
    sub_10004BA30((uint64_t)v4, v6);
  }
  if (qword_10119B8A0 != -1)
    swift_once(&qword_10119B8A0, sub_1000E7994);
  v8 = qword_10124C780;
  v9 = *(_QWORD *)(qword_10124C780 + 32);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
    result = sub_10067B710(v3, qword_10124C780);
    if ((*(_BYTE *)(v3 + 104) & 1) != 0)
      return result;
    v12 = 0;
LABEL_12:
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
    return result;
  }
  v11 = v9 + 16 * v10;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  swift_unknownObjectRetain(v12, a2);
  result = sub_10067B710(v3, v8);
  if ((*(_BYTE *)(v3 + 104) & 1) == 0)
    goto LABEL_12;
  if (v12)
  {
    ObjectType = swift_getObjectType();
    v17 = swift_unknownObjectRetain(v12, v16);
    sub_1000E7B58(v17, v8, ObjectType, v13);
    swift_unknownObjectRelease_n(v12, 2);
  }
  return result;
}

double sub_100679D24(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, __n128);
  uint64_t v7;
  __n128 v8;

  v3 = v2;
  v4 = *(void (**)(_QWORD, uint64_t, __n128))(v2 + 88);
  if (v4)
  {
    v7 = *(_QWORD *)(v3 + 96);
    v8 = swift_retain();
    v4(a2 & 1, a1, v8);
    sub_10004BA30((uint64_t)v4, v7);
  }
  if (qword_10119B8A0 != -1)
    swift_once(&qword_10119B8A0, sub_1000E7994);
  return sub_10067BE14(v3, qword_10124C780);
}

uint64_t sub_100679DBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_10004BA30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  return swift_deallocClassInstance(v0, 105, 7);
}

uint64_t type metadata accessor for NowPlayingContentViewDonationItem()
{
  return objc_opt_self(_TtC5Music33NowPlayingContentViewDonationItem);
}

uint64_t sub_100679E28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + 32);
  v2 = type metadata accessor for NowPlayingContentView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
    v4 = v1;
  return v3;
}

uint64_t sub_100679E6C()
{
  return sub_1001C0444((uint64_t)&unk_100EC9050, (uint64_t)&unk_100EC9078);
}

void sub_100679E80()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(153, 153, 153, 0.1);
  UIView.Border.init(thickness:color:)();
  qword_1011C1588 = v0;
  byte_1011C1590 = v1 & 1;
  qword_1011C1598 = v2;
}

uint64_t sub_100679EF4()
{
  return sub_1001C0444((uint64_t)&unk_100EC90E0, (uint64_t)&unk_100EC9108);
}

uint64_t sub_100679F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5MusicP33_F1E3C2770AD101679EE581A908D0EFAF17SquareMotionState__isExpanded;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5MusicP33_F1E3C2770AD101679EE581A908D0EFAF17SquareMotionState__isPlaying, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100679F7C()
{
  return type metadata accessor for SquareMotionState(0);
}

uint64_t type metadata accessor for SquareMotionState(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C1830, (uint64_t)&nominal type descriptor for SquareMotionState);
}

uint64_t getEnumTagSinglePayload for NowPlayingContentView.ViewMode(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3FFE)
    goto LABEL_17;
  if (a2 + 49154 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 49154 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 49154;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 49154;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 49154;
  }
LABEL_17:
  v6 = (*a1 & 0x3E00 | (*a1 >> 14) & 0xFFFFFE03 | (4 * (*a1 >> 1))) ^ 0x3FFF;
  if (v6 >= 0x3FFD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for NowPlayingContentView.ViewMode(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49154 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49154 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFE)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFD)
    return ((uint64_t (*)(void))((char *)&loc_10067A09C + 4 * byte_100EC8E25[v5]))();
  *a1 = a2 - 16382;
  return ((uint64_t (*)(void))((char *)sub_10067A0D4 + 4 * byte_100EC8E20[v5]))();
}

uint64_t sub_10067A0D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10067A0DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10067A0E4);
  return result;
}

uint64_t sub_10067A104(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10067A10CLL);
  v2 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_10067A110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10067A118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10067A124(unsigned __int16 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  v4 = (v1 & 1 | (2 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_WORD *sub_10067A14C(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_10067A15C(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x101 | ((_WORD)a2 << 14);
  else
    *result = (a2 & 1 | (((a2 >> 1) & 1) << 8)) ^ 0x8100;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingContentView.ViewMode()
{
  return &type metadata for NowPlayingContentView.ViewMode;
}

uint64_t sub_10067A1A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EC8F58;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10067A21C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain(v10);
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_10067A2DC(uint64_t a1, uint64_t a2)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_10067A320(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain(v4);
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_10067A390(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_10067A408(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_10067A458(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10067A4C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10067A594 + 4 * byte_100EC8E2A[(v9 - 1)]))();
}

void sub_10067A604(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for SquareMotionContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SquareMotionContainer);
}

uint64_t sub_10067A808(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA8F98, 1);
}

uint64_t sub_10067A83C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SquareMotionState(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10067A878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  char *v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __n128 v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  char *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;

  v108 = a2;
  v3 = type metadata accessor for MotionCacheDownloadPolicy(0);
  v106 = *(_QWORD *)(v3 - 8);
  v107 = v3;
  v4 = __chkstk_darwin(v3);
  v105 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MotionPlaybackPolicy(0, v4);
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  __chkstk_darwin(v6);
  v102 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v80 = a1;
  v113 = v9;
  v114 = v8;
  v10 = v8;
  v82 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v113, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 0);
  v85 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v13 = (char *)&v80 - v12;
  v113 = v9;
  v114 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v113, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v113 = OpaqueTypeMetadata2;
  v114 = OpaqueTypeConformance2;
  v15 = OpaqueTypeConformance2;
  v81 = OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeMetadata2(0, &v113, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 0);
  v89 = *(_QWORD *)(v16 - 8);
  v87 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - v17;
  v20 = type metadata accessor for ModifiedContent(0, v19, &type metadata for _ScaleEffect);
  v97 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v84 = (char *)&v80 - v21;
  v22 = sub_100044B54(&qword_1011AFA90);
  v88 = v20;
  v23 = type metadata accessor for ModifiedContent(0, v20, v22);
  v101 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v90 = (char *)&v80 - v24;
  v113 = OpaqueTypeMetadata2;
  v114 = v15;
  v83 = swift_getOpaqueTypeConformance2(&v113, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v111 = v83;
  v112 = &protocol witness table for _ScaleEffect;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v86 = WitnessTable;
  v26 = sub_10067C66C();
  v109 = WitnessTable;
  v110 = v26;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v113 = v23;
  v114 = v27;
  v28 = v27;
  v93 = v27;
  v29 = swift_getOpaqueTypeMetadata2(0, &v113, &opaque type descriptor for <<opaque return type of View.motionCollection(policy:)>>, 0);
  v100 = *(_QWORD *)(v29 - 8);
  v30 = v29;
  v96 = v29;
  __chkstk_darwin(v29);
  v92 = (char *)&v80 - v31;
  v113 = v23;
  v114 = v28;
  v94 = swift_getOpaqueTypeConformance2(&v113, &opaque type descriptor for <<opaque return type of View.motionCollection(policy:)>>, 1);
  v113 = v30;
  v114 = v94;
  v32 = swift_getOpaqueTypeMetadata2(0, &v113, &opaque type descriptor for <<opaque return type of View.motionCacheDownload(policy:)>>, 0);
  v33 = *(_QWORD *)(v32 - 8);
  v98 = v32;
  v99 = v33;
  __chkstk_darwin(v32);
  v91 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v95 = (uint64_t)&v80 - v36;
  v37 = Corner.large.unsafeMutableAddressor();
  View.corner(_:)(*v37, v37[1], *((_BYTE *)v37 + 16), v9, v82);
  v38 = Border.artwork.unsafeMutableAddressor();
  v39 = *((double *)v38 + 1);
  v40 = *v37;
  v41 = v37[1];
  LOBYTE(v37) = *((_BYTE *)v37 + 16);
  v42 = *((_BYTE *)v38 + 16);
  swift_retain();
  View.border(_:corner:)(v43, v42, v40, v41, (char)v37, OpaqueTypeMetadata2, v81, v39);
  v44 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v13, OpaqueTypeMetadata2, v44);
  KeyPath = swift_getKeyPath(&unk_100EC9050);
  v46 = swift_getKeyPath(&unk_100EC9078);
  swift_retain();
  static Published.subscript.getter(&v113, v47, KeyPath, v46);
  swift_release();
  swift_release();
  swift_release();
  if ((_BYTE)v113)
    v49 = 1.0;
  else
    v49 = 0.73;
  v50 = static UnitPoint.center.getter(v48);
  v51 = v84;
  v52 = v87;
  View.scaleEffect(_:anchor:)(v87, v83, v49, v50, v53);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v18, v52);
  v54 = sub_10067B014();
  v55 = swift_getKeyPath(&unk_100EC9050);
  v56 = swift_getKeyPath(&unk_100EC9078);
  swift_retain();
  static Published.subscript.getter(&v113, v57, v55, v56);
  swift_release();
  swift_release();
  v58 = swift_release();
  v59 = v90;
  v60 = v88;
  View.animation<A>(_:value:)(v54, &v113, v88, &type metadata for Bool, v86, &protocol witness table for Bool, v58);
  v61 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v51, v60, v61);
  v62 = swift_getKeyPath(&unk_100EC90E0);
  v63 = swift_getKeyPath(&unk_100EC9108);
  swift_retain();
  static Published.subscript.getter(&v113, v64, v62, v63);
  swift_release();
  swift_release();
  v65 = swift_release();
  v67 = v102;
  v66 = v103;
  *v102 = v113;
  v68 = v104;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v66 + 104))(v67, enum case for MotionPlaybackPolicy.custom(_:), v104, v65);
  v69 = v92;
  View.motionCollection(policy:)(v67, v23, v93);
  (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v67, v68);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v23);
  v71 = v105;
  v70 = v106;
  v72 = v107;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v105, enum case for MotionCacheDownloadPolicy.whileVisible(_:), v107);
  v73 = (uint64_t)v91;
  v74 = v96;
  v75 = v94;
  View.motionCacheDownload(policy:)(v71, v96, v94);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v69, v74);
  v113 = v74;
  v114 = v75;
  swift_getOpaqueTypeConformance2(&v113, &opaque type descriptor for <<opaque return type of View.motionCacheDownload(policy:)>>, 1);
  v76 = v95;
  v77 = v98;
  sub_10081EB14(v73, v98, v95);
  v78 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  v78(v73, v77);
  sub_1000EA744(v76, v77, v108);
  return ((uint64_t (*)(uint64_t, uint64_t))v78)(v76, v77);
}

uint64_t sub_10067B014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 8);
  KeyPath = swift_getKeyPath(&unk_100EC9050);
  v3 = swift_getKeyPath(&unk_100EC9078);
  v4 = swift_retain(v1);
  static Published.subscript.getter(&v10, v4, KeyPath, v3);
  swift_release(v1);
  swift_release(KeyPath);
  v5 = swift_release(v3);
  if (v10 == 1)
  {
    v7.n128_u64[0] = 0x4072C00000000000;
    v6.n128_u64[0] = 2.0;
    v8.n128_u64[0] = 28.0;
  }
  else
  {
    v7.n128_u64[0] = 0x407F400000000000;
    v8.n128_u64[0] = 0x408F400000000000;
    v6.n128_u64[0] = 5.0;
  }
  return static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v5, v6, v7, v8, 0.0);
}

void sub_10067B0DC(uint64_t a1)
{
  uint64_t v1;

  sub_10067940C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10067B0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10067B12C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EC90E0);
  v5 = swift_getKeyPath(&unk_100EC9108);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10067B1A8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EC90E0);
  v5 = swift_getKeyPath(&unk_100EC9108);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_10067B218(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5 || *(void **)(v4 + 16 * v5 + 16) != a1)
  {
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v6 = type metadata accessor for Logger(0);
    sub_100048B14(v6, (uint64_t)qword_1011A07A0);
    v7 = swift_unknownObjectRetain_n(a1, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v27 = &off_1010B1970;
      v28 = v11;
      *(_DWORD *)v10 = 136446210;
      v26 = (uint64_t)a1;
      swift_unknownObjectRetain(a1, v12);
      v13 = sub_100007E8C(&qword_1011A08D8);
      v14 = String.init<A>(describing:)(&v26, v13);
      v16 = v15;
      v26 = sub_100322200(v14, v15, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);

      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Become active container=%{public}s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    v17 = *(_QWORD **)(a2 + 32);
    v18 = a1;
    v19 = swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v17 = sub_100431C34(0, v17[2] + 1, 1, v17);
    v22 = v17[2];
    v21 = v17[3];
    if (v22 >= v21 >> 1)
      v17 = sub_100431C34((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
    v17[2] = v22 + 1;
    v23 = &v17[2 * v22];
    v23[4] = v18;
    v23[5] = &off_1010B1970;
    v24 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v17;
    sub_1000E6A88(v24, v20);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  return result;
}

double sub_10067B494(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5 || *(void **)(v4 + 16 * v5 + 16) != a1)
  {
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v6 = type metadata accessor for Logger(0);
    sub_100048B14(v6, (uint64_t)qword_1011A07A0);
    v7 = swift_unknownObjectRetain_n(a1, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v27 = &off_1010B8B08;
      v28 = v11;
      *(_DWORD *)v10 = 136446210;
      v26 = (uint64_t)a1;
      swift_unknownObjectRetain(a1, v12);
      v13 = sub_100007E8C(&qword_1011A08D8);
      v14 = String.init<A>(describing:)(&v26, v13);
      v16 = v15;
      v26 = sub_100322200(v14, v15, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);

      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Become active container=%{public}s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    v17 = *(_QWORD **)(a2 + 32);
    v18 = a1;
    v19 = swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v17 = sub_100431C34(0, v17[2] + 1, 1, v17);
    v22 = v17[2];
    v21 = v17[3];
    if (v22 >= v21 >> 1)
      v17 = sub_100431C34((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
    v17[2] = v22 + 1;
    v23 = &v17[2 * v22];
    v23[4] = v18;
    v23[5] = &off_1010B8B08;
    v24 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v17;
    sub_1000E6A88(v24, v20);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  return result;
}

double sub_10067B710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5 || *(_QWORD *)(v4 + 16 * v5 + 16) != a1)
  {
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v6 = type metadata accessor for Logger(0);
    sub_100048B14(v6, (uint64_t)qword_1011A07A0);
    v7 = swift_unknownObjectRetain_n(a1, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v27 = &off_1010D59D0;
      v28 = v11;
      *(_DWORD *)v10 = 136446210;
      v26 = a1;
      swift_unknownObjectRetain(a1, v12);
      v13 = sub_100007E8C(&qword_1011A08D8);
      v14 = String.init<A>(describing:)(&v26, v13);
      v26 = sub_100322200(v14, v15, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_release_n(a1, 2, v16);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Become active container=%{public}s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2, v17);
    }
    v18 = *(_QWORD **)(a2 + 32);
    swift_retain();
    v19 = swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v18 = sub_100431C34(0, v18[2] + 1, 1, v18);
    v22 = v18[2];
    v21 = v18[3];
    if (v22 >= v21 >> 1)
      v18 = sub_100431C34((_QWORD *)(v21 > 1), v22 + 1, 1, v18);
    v18[2] = v22 + 1;
    v23 = &v18[2 * v22];
    v23[4] = a1;
    v23[5] = &off_1010D59D0;
    v24 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v18;
    sub_1000E6A88(v24, v20);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_10067B994(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void **i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  _UNKNOWN **v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v6 = 1 - v3;
    for (i = (void **)(v2 + 16 * v3 + 16); *i != a1; i -= 2)
    {
      if (++v6 == 1)
        return result;
    }
    v8 = -v6;
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v9 = type metadata accessor for Logger(0);
    sub_100048B14(v9, (uint64_t)qword_1011A07A0);
    v10 = swift_unknownObjectRetain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      *(_DWORD *)v13 = 136446210;
      v26 = v14;
      v24 = (uint64_t)a1;
      v25 = &off_1010B1970;
      swift_unknownObjectRetain(a1, v15);
      v16 = sub_100007E8C(&qword_1011A08D8);
      v17 = String.init<A>(describing:)(&v24, v16);
      v19 = v18;
      v24 = sub_100322200(v17, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);

      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Resign active container=%{public}s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    v24 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v20 = sub_1007287F4(v8);
    swift_unknownObjectRelease(v20);
    v21 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v24;
    sub_1000E6A88(v21, v22);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  }
  return result;
}

double sub_10067BBD4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void **i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  _UNKNOWN **v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v6 = 1 - v3;
    for (i = (void **)(v2 + 16 * v3 + 16); *i != a1; i -= 2)
    {
      if (++v6 == 1)
        return result;
    }
    v8 = -v6;
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v9 = type metadata accessor for Logger(0);
    sub_100048B14(v9, (uint64_t)qword_1011A07A0);
    v10 = swift_unknownObjectRetain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      *(_DWORD *)v13 = 136446210;
      v26 = v14;
      v24 = (uint64_t)a1;
      v25 = &off_1010B8B08;
      swift_unknownObjectRetain(a1, v15);
      v16 = sub_100007E8C(&qword_1011A08D8);
      v17 = String.init<A>(describing:)(&v24, v16);
      v19 = v18;
      v24 = sub_100322200(v17, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);

      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Resign active container=%{public}s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    v24 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v20 = sub_1007287F4(v8);
    swift_unknownObjectRelease(v20);
    v21 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v24;
    sub_1000E6A88(v21, v22);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  }
  return result;
}

double sub_10067BE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v6 = 1 - v3;
    for (i = (_QWORD *)(v2 + 16 * v3 + 16); *i != a1; i -= 2)
    {
      if (++v6 == 1)
        return result;
    }
    v8 = -v6;
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v9 = type metadata accessor for Logger(0);
    sub_100048B14(v9, (uint64_t)qword_1011A07A0);
    v10 = swift_unknownObjectRetain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      *(_DWORD *)v13 = 136446210;
      v25 = a1;
      v26 = &off_1010D59D0;
      v27 = v14;
      swift_unknownObjectRetain(a1, v15);
      v16 = sub_100007E8C(&qword_1011A08D8);
      v17 = String.init<A>(describing:)(&v25, v16);
      v25 = sub_100322200(v17, v18, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
      swift_release_n(a1, 2, v19);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Resign active container=%{public}s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2, v20);
    }
    v25 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v21 = sub_1007287F4(v8);
    swift_unknownObjectRelease(v21);
    v22 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v25;
    sub_1000E6A88(v22, v23);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10067C05C(unsigned __int16 a1, unsigned __int16 a2)
{
  if (a1 >> 14)
  {
    if (a1 >> 14 != 1)
      return a2 == 0x8000;
    if ((a2 & 0xC000) != 0x4000)
      return 0;
  }
  else if (a2 >= 0x4000u)
  {
    return 0;
  }
  if (((a1 & 1) == 0) == (a2 & 1))
    return 0;
  else
    return ((a1 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8);
}

double sub_10067C0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = type metadata accessor for NowPlayingContentViewDonationItem();
  v7 = swift_allocObject(v6, 105, 7);
  *(_BYTE *)(v7 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_BYTE *)(v7 + 104) = 0;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = 0;
  return result;
}

void sub_10067C128()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[14];
  char v21;
  char v22;

  v1 = v0;
  v2 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v20[-v6];
  *(_WORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkCachingReference] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog] = 0;
  v9 = OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView;
  Artwork.init()((uint64_t)&v20[-v6]);
  sub_10056577C((uint64_t)v7, (uint64_t)v4);
  v10 = objc_allocWithZone((Class)type metadata accessor for Artwork.View(0));
  v11 = Artwork.View.init(configuration:)((uint64_t)v4);
  sub_1005657C0((uint64_t)v7);
  *(_QWORD *)&v1[v9] = v11;
  v12 = OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_lastSeenBounds];
  *v13 = 0u;
  v13[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView] = 0;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isBeingDonated] = 0;
  v14 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer];
  v16 = sub_100007E8C(&qword_1011C1660);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView] = 0;
  v17 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState;
  v18 = type metadata accessor for SquareMotionState(0);
  v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v22 = 1;
  Published.init(initialValue:)(&v22, &type metadata for Bool);
  v21 = 1;
  Published.init(initialValue:)(&v21, &type metadata for Bool);
  *(_QWORD *)&v1[v17] = v19;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath] = 0;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_deferArtworkUpdates] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingContentView.swift", 33, 2, 525, 0);
  __break(1u);
}

void sub_10067C3C8(unsigned __int16 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[6];
  __int128 v22;
  _OWORD v23[2];
  id v24;
  id v25;
  id v26;

  if (!(a1 >> 14))
  {
    if ((a1 & 0x100) == 0)
    {
      v16 = Artwork.Placeholder.miniPlayer.unsafeMutableAddressor();
LABEL_7:
      v14 = (void *)*v16;
      v15 = (void *)v16[1];
      v13 = (void *)v16[2];
      v17 = (void *)v16[3];
      v10 = v16[4];
      v11 = v16[5];
      v18 = v13;
      v12 = v17;
      v19 = v14;
      v20 = v15;
      goto LABEL_8;
    }
LABEL_6:
    v16 = Artwork.Placeholder.nowPlaying.unsafeMutableAddressor();
    goto LABEL_7;
  }
  if (a1 >> 14 == 1)
    goto LABEL_6;
  v3 = Artwork.Placeholder.nowPlaying.unsafeMutableAddressor();
  v5 = *((_OWORD *)v3 + 1);
  v4 = *((_OWORD *)v3 + 2);
  v22 = *(_OWORD *)v3;
  v23[0] = v5;
  v23[1] = v4;
  v6 = (void *)objc_opt_self(UIColor);
  sub_100065228((uint64_t)&v22, (uint64_t)&v24, &qword_10119E580);
  sub_100065228((uint64_t)&v22 + 8, (uint64_t)&v25, &qword_10119E580);
  sub_100065228((uint64_t)v23, (uint64_t)&v26, &qword_10119E588);
  v7 = (void *)*((_QWORD *)&v23[0] + 1);
  sub_1005518D0(&v24);
  sub_1005518D0(&v25);
  sub_1005518D0(&v26);
  v8 = v7;
  v9 = objc_msgSend(v6, "blackColor");
  Artwork.Placeholder.withBackground(_:)(v9, (uint64_t)v21);

  sub_100065200(&v24);
  sub_100065200(&v25);
  sub_100065200(&v26);

  v10 = v21[4];
  v11 = v21[5];
  v13 = (void *)v21[2];
  v12 = (id)v21[3];
  v14 = (void *)v21[0];
  v15 = (void *)v21[1];
LABEL_8:
  *a2 = v14;
  a2[1] = v15;
  a2[2] = v13;
  a2[3] = v12;
  a2[4] = v10;
  a2[5] = v11;
}

uint64_t sub_10067C538()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10067C564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10067C574(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10067C57C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10067C5A0()
{
  uint64_t v0;

  sub_100677090(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10067C5B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10067C5D4()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  return result;
}

uint64_t sub_10067C60C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100676ADC(*(void **)(v1 + 16), a1);
}

unint64_t sub_10067C624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C19B8;
  if (!qword_1011C19B8)
  {
    v1 = type metadata accessor for SquareMotionState(255);
    result = swift_getWitnessTable(&unk_100EC8FF8, v1);
    atomic_store(result, (unint64_t *)&qword_1011C19B8);
  }
  return result;
}

unint64_t sub_10067C66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFA88;
  if (!qword_1011AFA88)
  {
    v1 = sub_100044B54(&qword_1011AFA90);
    result = swift_getWitnessTable(&protocol conformance descriptor for _AnimationModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFA88);
  }
  return result;
}

unint64_t sub_10067C6C0()
{
  unint64_t result;

  result = qword_1011C19C0;
  if (!qword_1011C19C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011C19C0);
  }
  return result;
}

uint64_t sub_10067C704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10067C728()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10067C74C()
{
  uint64_t v0;

  sub_100677D58(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10067C754(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[1];
  v13 = *a1;
  v1 = v13;
  v14 = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 0);
  v13 = v1;
  v14 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v13 = OpaqueTypeMetadata2;
  v14 = OpaqueTypeConformance2;
  v5 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 0);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _ScaleEffect);
  v7 = sub_100044B54(&qword_1011AFA90);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  v13 = OpaqueTypeMetadata2;
  v14 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  sub_10067C66C();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v13 = v8;
  v14 = WitnessTable;
  v10 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.motionCollection(policy:)>>, 0);
  v13 = v8;
  v14 = WitnessTable;
  v11 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.motionCollection(policy:)>>, 1);
  v13 = v10;
  v14 = v11;
  return swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.motionCacheDownload(policy:)>>, 1);
}

uint64_t sub_10067C8F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(unsigned __int8 *, _QWORD);
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  uint64_t v39;
  char *v40;
  unsigned __int8 v41[32];
  char *v42;

  v35 = a2;
  v3 = type metadata accessor for LayoutSubview(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C19F8);
  __chkstk_darwin(v7);
  v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LayoutSubviews(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C1A08);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v10;
  v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v37(v12, a1, v9, v14);
  v17 = sub_10067F5BC(&qword_1011C1A00, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v38 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v17);
  v18 = &v16[*(int *)(v13 + 36)];
  v19 = sub_10067F5BC(&qword_1011C1A10, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v20 = *(_QWORD *)v18;
  v42 = v16;
  dispatch thunk of Collection.endIndex.getter(v41, v9, v19);
  if (v20 == *(_QWORD *)v41)
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v22 = (uint64_t)v42;
    v21(v40, 1, 1, v3);
  }
  else
  {
    v36 = v6;
    v22 = (uint64_t)v42;
    while (1)
    {
      v23 = (void (*)(unsigned __int8 *, _QWORD))dispatch thunk of Collection.subscript.read(v41, v18, v9, v19);
      v24 = v40;
      (*(void (**)(char *))(v4 + 16))(v40);
      v23(v41, 0);
      v25 = v38;
      ((void (*)(char *, uint64_t, uint64_t))v37)(v38, v22, v9);
      dispatch thunk of Collection.formIndex(after:)(v18, v9, v19);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v9);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v21(v24, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v24, 1, v3) == 1)
        break;
      v26 = v24;
      v27 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v28 = v36;
      v27(v36, v26, v3);
      v29 = sub_10067EB40();
      LayoutSubview.subscript.getter(v41, &type metadata for HeightConstrainingElement, &type metadata for HeightConstrainingElement, v29);
      if (v41[0] == 1)
      {
        sub_10004FF60((uint64_t)v42, &qword_1011C1A08);
        v33 = v35;
        v27(v35, v28, v3);
        return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v33, 0, 1, v3);
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v28, v3);
      v30 = *(_QWORD *)v18;
      v22 = (uint64_t)v42;
      dispatch thunk of Collection.endIndex.getter(v41, v9, v19);
      if (v30 == *(_QWORD *)v41)
      {
        v21(v40, 1, 1, v3);
        break;
      }
    }
  }
  v31 = v35;
  sub_10004FF60(v22, &qword_1011C1A08);
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v31, 1, 1, v3);
}

_QWORD *sub_10067CC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  double v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _QWORD *v32;

  v3 = sub_100007E8C(qword_1011B3DB8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)v26 - v8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v26[1] = v1;
    v32 = _swiftEmptyArrayStorage;
    sub_10035CB78(0, v10, 0);
    v12 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v29 = *(_QWORD *)(v4 + 72);
    v13 = type metadata accessor for LayoutSubview(0);
    v28 = *(_QWORD *)(v13 - 8);
    v27 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    do
    {
      v14 = *(int *)(v3 + 48);
      v15 = (char *)v9 + v14;
      v16 = *v12;
      *v9 = *v12;
      v27((char *)v9 + v14, (char *)v12 + v14, v13);
      v17 = (char *)v6 + *(int *)(v3 + 48);
      *v6 = v16;
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v17, v15, v13);
      v19 = static ProposedViewSize.zero.getter(v18);
      v31 = v20 & 1;
      v30 = v21 & 1;
      v22 = LayoutSubview.sizeThatFits(_:)(v19);
      sub_10004FF60((uint64_t)v6, qword_1011B3DB8);
      v11 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
      {
        sub_10035CB78(0, v11[2] + 1, 1);
        v11 = v32;
      }
      v24 = v11[2];
      v23 = v11[3];
      if (v24 >= v23 >> 1)
      {
        sub_10035CB78(v23 > 1, v24 + 1, 1);
        v11 = v32;
      }
      v12 = (uint64_t *)((char *)v12 + v29);
      v11[2] = v24 + 1;
      *(double *)&v11[v24 + 4] = v22;
      --v10;
    }
    while (v10);
  }
  return v11;
}

_QWORD *sub_10067CE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[2];
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;

  v38 = sub_100007E8C(qword_1011B3DB8);
  v3 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v36 = (_QWORD *)((char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v37 = (char *)v31 - v6;
  v7 = type metadata accessor for LayoutSubview(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v31[1] = v1;
    v40 = _swiftEmptyArrayStorage;
    sub_10035CB4C(0, v11, 0);
    v13 = (char *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    v14 = *(_QWORD *)(v3 + 72);
    v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v33 = v14;
    v34 = v7;
    v35 = v10;
    v15 = v32;
    do
    {
      v39 = v11;
      v16 = v37;
      v17 = v38;
      v18 = *(int *)(v38 + 48);
      v19 = &v37[v18];
      v20 = *(_QWORD *)v13;
      *(_QWORD *)v37 = *(_QWORD *)v13;
      v15(&v16[v18], &v13[v18], v7);
      v21 = *(int *)(v17 + 48);
      v22 = v8;
      v23 = (uint64_t)v36;
      v24 = (char *)v36 + v21;
      *v36 = v20;
      v25 = v7;
      v26 = v22;
      v27 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
      v27(v23 + v21, v19, v25);
      v15(v10, v24, v25);
      sub_10004FF60(v23, qword_1011B3DB8);
      v12 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
      {
        sub_10035CB4C(0, v12[2] + 1, 1);
        v12 = v40;
      }
      v29 = v12[2];
      v28 = v12[3];
      v8 = v26;
      if (v29 >= v28 >> 1)
      {
        sub_10035CB4C(v28 > 1, v29 + 1, 1);
        v12 = v40;
      }
      v7 = v34;
      v13 += v33;
      v12[2] = v29 + 1;
      v10 = v35;
      v27((uint64_t)v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v29, v35, v7);
      v40 = v12;
      v11 = v39 - 1;
    }
    while (v39 != 1);
  }
  return v12;
}

uint64_t sub_10067D0CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  BOOL v6;

  v5 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 >= 1)
  {
    if (v5 < 0 || v5 >= (unint64_t)a2)
      goto LABEL_9;
    return 0;
  }
  if (v5 <= 0 && v5 > a2)
    return 0;
LABEL_9:
  v6 = __OFADD__(result, a2);
  result += a2;
  if (v6)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  if (result < a4 || result > a5)
    goto LABEL_15;
  return result;
}

uint64_t sub_10067D134()
{
  uint64_t v0;

  v0 = type metadata accessor for LayoutProperties(0);
  sub_10004FACC(v0, qword_10124D690);
  sub_100048B14(v0, (uint64_t)qword_10124D690);
  LayoutProperties.init()();
  return LayoutProperties.stackOrientation.setter(0);
}

double sub_10067D188(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  double *v24;
  double v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  double v33;
  uint64_t v34;
  double *v35;
  double v36;
  double v37;
  double v38;

  sub_10067D33C(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9 & 1);
  v13 = type metadata accessor for HeightConstrainedHStackLayout.Cache(0);
  v14 = *(_QWORD *)(a6 + *(int *)(v13 + 24));
  v15 = *(_QWORD *)(v14 + 16);
  v16 = 0.0;
  v17 = 0.0;
  if (v15)
  {
    if (v15 == 1)
    {
      v18 = 0;
LABEL_7:
      v23 = v15 - v18;
      v24 = (double *)(v14 + 16 * v18 + 32);
      do
      {
        v25 = *v24;
        v24 += 2;
        v17 = v17 + v25;
        --v23;
      }
      while (v23);
      goto LABEL_9;
    }
    v18 = v15 & 0x7FFFFFFFFFFFFFFELL;
    v19 = (double *)(v14 + 48);
    v20 = v15 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v21 = *(v19 - 2);
      v22 = *v19;
      v19 += 4;
      v17 = v17 + v21 + v22;
      v20 -= 2;
    }
    while (v20);
    if (v15 != v18)
      goto LABEL_7;
  }
LABEL_9:
  v26 = sub_10067E128(a5, a7, a8, a9 & 1);
  v27 = *((_QWORD *)v26 + 2);
  if (!v27)
    goto LABEL_17;
  if (v27 == 1)
  {
    v28 = 0;
    v16 = 0.0;
LABEL_15:
    v31 = v27 - v28;
    v32 = (double *)&v26[8 * v28 + 32];
    do
    {
      v33 = *v32++;
      v16 = v16 + v33;
      --v31;
    }
    while (v31);
    goto LABEL_17;
  }
  v28 = v27 & 0x7FFFFFFFFFFFFFFELL;
  v29 = (double *)(v26 + 40);
  v16 = 0.0;
  v30 = v27 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v16 = v16 + *(v29 - 1) + *v29;
    v29 += 2;
    v30 -= 2;
  }
  while (v30);
  if (v27 != v28)
    goto LABEL_15;
LABEL_17:
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a6 + *(int *)(v13 + 20) + 8) & 1) != 0)
  {
    v34 = *(_QWORD *)(v14 + 16);
    if (v34)
    {
      v35 = (double *)(v14 + 40);
      v36 = 0.0;
      do
      {
        v37 = *v35;
        v35 += 2;
        v38 = v37;
        if (v36 <= v37)
          v36 = v38;
        --v34;
      }
      while (v34);
    }
  }
  return v17 + v16;
}

void sub_10067D33C(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  __n128 v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  __n128 v68;
  char *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD **, _QWORD);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  _QWORD *v88;
  BOOL v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  double *v96;
  uint64_t v97;
  uint64_t v98;
  double *v99;
  double v100;
  uint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  double v111;
  double v112;
  double *v113;
  double v114;
  __n128 v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void (*v121)(uint64_t, char *, uint64_t);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  double v126;
  void (*v127)(char *, uint64_t);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  BOOL v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  uint64_t v148;
  char *v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  double *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  int *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  unsigned int v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  BOOL v190;
  uint64_t v191;
  _QWORD *v192;

  v165 = (_QWORD *)a8;
  v162 = a7;
  v163 = a6;
  LODWORD(v177) = a4;
  v179 = a3;
  v181 = sub_100007E8C(qword_1011B3DB8);
  v184 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (char *)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for ViewSpacing(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v167 = (char *)&v156 - v15;
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v188 = (char *)&v156 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v166 = (char *)&v156 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v156 - v22;
  __chkstk_darwin(v24);
  v183 = (char *)&v156 - v25;
  v171 = type metadata accessor for LayoutSubviews(0);
  v186 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v185 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = (int *)sub_100007E8C(&qword_1011C1A08);
  __chkstk_darwin(v178);
  v187 = (char *)&v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C(&qword_1011C19E8);
  __chkstk_darwin(v159);
  v29 = (char *)&v156 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011C19F8);
  __chkstk_darwin(v30);
  v172 = (uint64_t)&v156 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v176 = (char *)&v156 - v33;
  __chkstk_darwin(v34);
  v175 = (uint64_t)&v156 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v156 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v156 - v40;
  v174 = a5;
  sub_10067C8F0(a5, (char *)&v156 - v40);
  v164 = 0;
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v182 = v42(v41, 1, v16);
  v189 = v17;
  v158 = a2;
  v157 = *(double *)&a1;
  if (v182 == 1)
  {
    sub_10004FF60((uint64_t)v41, &qword_1011C19F8);
    v43 = 0;
  }
  else
  {
    LOBYTE(v192) = a2 & 1;
    LOBYTE(v191) = v177 & 1;
    v44 = LayoutSubview.sizeThatFits(_:)(a1);
    v46 = v45;
    (*(void (**)(char *, uint64_t, double))(v17 + 8))(v41, v16, v44);
    v43 = v46;
  }
  v179 = v43;
  v47 = v182 == 1;
  v48 = type metadata accessor for HeightConstrainedHStackLayout.Cache(0);
  v49 = v163;
  v50 = v163 + *(int *)(v48 + 20);
  *(_QWORD *)v50 = v43;
  v51 = v49;
  *(_BYTE *)(v50 + 8) = v47;
  v52 = static LayoutSubviews.== infix(_:_:)(v174, v49);
  v173 = v23;
  v177 = v42;
  v160 = v48;
  v161 = a9 & 1;
  if ((v52 & 1) != 0 && *(_QWORD *)(v51 + *(int *)(v48 + 28)))
  {
    v53 = swift_bridgeObjectRetain();
    v54 = sub_10047E128(v53);
    v55 = swift_bridgeObjectRelease();
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
    v57 = v174;
    v58 = v171;
  }
  else
  {
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
    v59 = v174;
    v60 = v171;
    v56(v29, v174, v171);
    KeyPath = swift_getKeyPath(&unk_100EC9268);
    v62 = sub_10067F658();
    v63 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_10067E50C, 0, v159, v62, (uint64_t)&protocol witness table for Double);
    swift_release();
    sub_10004FF60((uint64_t)v29, &qword_1011C19E8);
    v64 = swift_getKeyPath(&unk_100EC9298);
    v65 = v51;
    v54 = sub_10067E520(v64, v63);
    swift_bridgeObjectRelease();
    v58 = v60;
    swift_release();
    v66 = sub_10047E144((uint64_t)v54);
    v67 = *(int *)(v48 + 28);
    v68 = swift_bridgeObjectRelease();
    *(_QWORD *)(v65 + v67) = v66;
    v57 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v186 + 24))(v65, v59, v58, v68);
  }
  v69 = v187;
  v70 = v178;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v56)(v185, v57, v58, v55);
  v71 = sub_10067F5BC(&qword_1011C1A00, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()(v58, v71);
  v72 = v70[9];
  v73 = v58;
  v74 = &v69[v72];
  v75 = sub_10067F5BC(&qword_1011C1A10, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v76 = *(_QWORD **)v74;
  dispatch thunk of Collection.endIndex.getter(&v192, v73, v75);
  if (v76 == v192)
  {
    v178 = *(int **)(v189 + 56);
    v77 = 0.0;
    v78 = (uint64_t)v187;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v178)(v38, 1, 1, v16);
  }
  else
  {
    v77 = 0.0;
    v79 = v171;
    v78 = (uint64_t)v187;
    v80 = v189;
    while (1)
    {
      v81 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v192, v74, v79, v75);
      (*(void (**)(char *))(v80 + 16))(v38);
      v81(&v192, 0);
      v82 = v185;
      v56(v185, v78, v79);
      dispatch thunk of Collection.formIndex(after:)(v74, v79, v75);
      (*(void (**)(char *, uint64_t))(v186 + 8))(v82, v79);
      v178 = *(int **)(v80 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v178)(v38, 0, 1, v16);
      if (v177(v38, 1, v16) == 1)
        break;
      v83 = v183;
      v84 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v183, v38, v16);
      v85 = static ProposedViewSize.zero.getter(v84);
      LOBYTE(v192) = v86 & 1;
      LOBYTE(v191) = v87 & 1;
      v77 = v77 + LayoutSubview.sizeThatFits(_:)(v85);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v16);
      v88 = *(_QWORD **)v74;
      dispatch thunk of Collection.endIndex.getter(&v192, v79, v75);
      v89 = v88 == v192;
      v78 = (uint64_t)v187;
      if (v89)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v178)(v38, 1, 1, v16);
        break;
      }
    }
  }
  sub_10004FF60(v78, &qword_1011C1A08);
  v90 = sub_10067E128(v174, v162, (uint64_t)v165, v161);
  v91 = *((_QWORD *)v90 + 2);
  v92 = v176;
  v93 = v189;
  if (!v91)
  {
    v95 = 0.0;
    goto LABEL_24;
  }
  if (v91 == 1)
  {
    v94 = 0;
    v95 = 0.0;
LABEL_22:
    v98 = v91 - v94;
    v99 = (double *)&v90[8 * v94 + 32];
    do
    {
      v100 = *v99++;
      v95 = v95 + v100;
      --v98;
    }
    while (v98);
    goto LABEL_24;
  }
  v94 = v91 & 0x7FFFFFFFFFFFFFFELL;
  v96 = (double *)(v90 + 40);
  v95 = 0.0;
  v97 = v91 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v95 = v95 + *(v96 - 1) + *v96;
    v96 += 2;
    v97 -= 2;
  }
  while (v97);
  if (v91 != v94)
    goto LABEL_22;
LABEL_24:
  swift_bridgeObjectRelease();
  v101 = v171;
  dispatch thunk of Collection.startIndex.getter(v171);
  dispatch thunk of Collection.endIndex.getter(&v191, v101, v75);
  dispatch thunk of Collection.distance(from:to:)(&v192, &v191, v101, v75);
  v103 = sub_1000AC68C(v102, 0.0, 0.0);
  v192 = v54;
  if (v54[2])
  {
    v104 = v157;
    if ((v158 & 1) != 0)
      v104 = 10.0;
    v105 = v104 - v77 - v95;
    v106 = v175;
    v186 = v16;
    while (1)
    {
      v107 = v54[4];
      swift_bridgeObjectRetain();
      sub_1001FF8A0(0, 1);
      v108 = v164;
      v109 = sub_10067CC64(v107);
      v110 = v109[2];
      v111 = 0.0;
      v112 = 0.0;
      if (v110)
      {
        v113 = (double *)(v109 + 4);
        do
        {
          v114 = *v113++;
          v112 = v112 + v114;
          --v110;
        }
        while (v110);
      }
      v115 = swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v178)(v106, 1, 1, v16, v115);
      v185 = (char *)v107;
      v116 = sub_10067CE70(v107);
      v164 = v108;
      v165 = v116;
      v117 = v116[2];
      if (v117)
      {
        v118 = (char *)v165
             + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
        v174 = *(_QWORD *)(v93 + 72);
        v183 = *(char **)(v93 + 16);
        v111 = 0.0;
        v171 = (uint64_t)v103;
        ((void (*)(char *, char *, uint64_t))v183)(v92, v118, v16);
        while (1)
        {
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v178)(v92, 0, 1, v16);
          v134 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v177;
          if (v177(v92, 1, v16) == 1)
            break;
          v135 = v92;
          v136 = v173;
          v187 = *(char **)(v93 + 32);
          ((void (*)(char *, char *, uint64_t))v187)(v173, v135, v16);
          v137 = v175;
          v138 = v172;
          sub_10004A160(v175, v172, &qword_1011C19F8);
          if (v134(v138, 1, v16) == 1)
          {
            (*(void (**)(char *, uint64_t))(v93 + 8))(v136, v16);
            sub_10004FF60(v138, &qword_1011C19F8);
          }
          else
          {
            v119 = v166;
            v120 = v138;
            v121 = (void (*)(uint64_t, char *, uint64_t))v187;
            v122 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v166, v120, v186);
            v123 = v167;
            v124 = LayoutSubview.spacing.getter(v122);
            v125 = v168;
            LayoutSubview.spacing.getter(v124);
            v126 = ViewSpacing.distance(to:along:)(v125, 0);
            v127 = *(void (**)(char *, uint64_t))(v169 + 8);
            v128 = v125;
            v129 = v170;
            v127(v128, v170);
            v130 = v129;
            v131 = v189;
            v127(v123, v130);
            v132 = v119;
            v103 = (_QWORD *)v171;
            v133 = v186;
            (*(void (**)(char *, uint64_t))(v131 + 8))(v132, v186);
            sub_10004FF60(v137, &qword_1011C19F8);
            v111 = v111 + v126;
            v121(v137, v136, v133);
            v93 = v131;
            v16 = v133;
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v178)(v137, 0, 1, v133);
          }
          v92 = v176;
          v118 += v174;
          if (!--v117)
            goto LABEL_40;
          ((void (*)(char *, char *, uint64_t))v183)(v176, v118, v16);
        }
      }
      else
      {
LABEL_40:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v178)(v92, 1, 1, v16);
      }
      swift_bridgeObjectRelease();
      v105 = v105 + v112 + v111;
      v139 = v185;
      v140 = *((_QWORD *)v185 + 2);
      if (v140)
        break;
LABEL_28:
      v106 = v175;
      sub_10004FF60(v175, &qword_1011C19F8);
      swift_bridgeObjectRelease();
      v54 = v192;
      v92 = v176;
      v93 = v189;
      if (!v192[2])
        goto LABEL_53;
    }
    v141 = 0;
    v183 = &v185[(*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80)];
    while (v141 < *((_QWORD *)v139 + 2))
    {
      v142 = v16;
      v143 = v103;
      v144 = v182 == 1;
      v145 = (uint64_t)&v183[*(_QWORD *)(v184 + 72) * v141];
      v146 = v180;
      sub_10004A160(v145, (uint64_t)v180, qword_1011B3DB8);
      v147 = *(_QWORD *)v146;
      v148 = v181;
      v149 = &v146[*(int *)(v181 + 48)];
      v187 = *(char **)(v189 + 8);
      ((void (*)(char *, uint64_t))v187)(v149, v142);
      sub_10004A160(v145, (uint64_t)v146, qword_1011B3DB8);
      (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v188, &v146[*(int *)(v148 + 48)], v142);
      LOBYTE(v191) = 0;
      v190 = v144;
      v103 = v143;
      v150 = ((double (*)(_QWORD))LayoutSubview.sizeThatFits(_:))(v105 / (double)v140);
      v152 = v151;
      if ((swift_isUniquelyReferenced_nonNull_native(v143) & 1) == 0)
        v103 = sub_10072E140(v143);
      v139 = v185;
      v16 = v186;
      if ((v147 & 0x8000000000000000) != 0)
        goto LABEL_55;
      if (v147 >= v103[2])
        goto LABEL_56;
      v153 = (double *)&v103[2 * v147];
      v153[4] = v150;
      *((_QWORD *)v153 + 5) = v152;
      ((void (*)(char *, uint64_t))v187)(v188, v16);
      if (v105 - v150 >= 0.0)
        v105 = v105 - v150;
      else
        v105 = 0.0;
      ++v141;
      if (!--v140)
        goto LABEL_28;
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
LABEL_53:
    swift_bridgeObjectRelease();
    v154 = *(int *)(v160 + 24);
    v155 = v163;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v155 + v154) = v103;
  }
}

char *sub_10067E128(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;

  if ((a4 & 1) == 0)
  {
    v6 = type metadata accessor for LayoutSubviews(0);
    v7 = sub_10067F5BC(&qword_1011C1A10, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
    dispatch thunk of Collection.startIndex.getter(v6);
    dispatch thunk of Collection.endIndex.getter(&v21, v6, v7);
    v8 = dispatch thunk of Collection.distance(from:to:)(&v22, &v21, v6, v7);
    v9 = __OFSUB__(v8, 1);
    result = (char *)(v8 - 1);
    if (!v9)
      return sub_1000AC59C((unint64_t)result, *(double *)&a3);
    __break(1u);
    goto LABEL_14;
  }
  v11 = type metadata accessor for LayoutSubviews(0);
  v12 = sub_10067F5BC(&qword_1011C1A10, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v11);
  result = (char *)dispatch thunk of Collection.endIndex.getter(&v21, v11, v12);
  v14 = v21;
  v13 = v22;
  v15 = v21 - v22;
  if (v21 < v22)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(v21, v22))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = __OFSUB__(v15, 1);
  v16 = v15 - 1;
  if (v9)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  result = (char *)sub_10067D0CC(v22, v16 & ~(v16 >> 63), v21, v22, v21);
  if ((v17 & 1) != 0)
    v18 = v14;
  else
    v18 = (uint64_t)result;
  if (v18 < v13)
    goto LABEL_17;
  __chkstk_darwin(result);
  v20[2] = a1;
  return (char *)sub_1008B8E38(sub_10067F638, (uint64_t)v20, v13, v19);
}

uint64_t sub_10067E2A0@<X0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  uint64_t v21;
  double v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  double *v27;

  v27 = a2;
  v3 = type metadata accessor for ViewSpacing(0);
  v4 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  v26 = v4;
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v25 - v8;
  v10 = type metadata accessor for LayoutSubview(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v25 - v15;
  v17 = *a1;
  v18 = LayoutSubviews.subscript.getter(v17);
  LayoutSubview.spacing.getter(v18);
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v16, v10);
  result = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
  }
  else
  {
    v21 = LayoutSubviews.subscript.getter(result);
    LayoutSubview.spacing.getter(v21);
    v19(v14, v10);
    v22 = ViewSpacing.distance(to:along:)(v7, 0);
    v23 = v25;
    v24 = *(void (**)(char *, uint64_t))(v26 + 8);
    v24(v7, v25);
    result = ((uint64_t (*)(char *, uint64_t))v24)(v9, v23);
    *v27 = v22;
  }
  return result;
}

double sub_10067E438()
{
  uint64_t v0;
  double v1;
  uint64_t v2;

  v0 = static ProposedViewSize.infinity.getter();
  v1 = LayoutSubview.sizeThatFits(_:)(v0);
  v2 = static ProposedViewSize.zero.getter();
  return v1 - LayoutSubview.sizeThatFits(_:)(v2);
}

double sub_10067E498@<D0>(double *a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  double result;

  v2 = static ProposedViewSize.infinity.getter();
  v3 = LayoutSubview.sizeThatFits(_:)(v2);
  v4 = static ProposedViewSize.zero.getter();
  result = v3 - LayoutSubview.sizeThatFits(_:)(v4);
  *a1 = result;
  return result;
}

BOOL sub_10067E50C(double *a1, double *a2)
{
  return *a1 < *a2;
}

_QWORD *sub_10067E520(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;

  v37 = a1;
  v3 = sub_100007E8C(qword_1011B3DB8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v38 = (uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)v31 - v10;
  v12 = *(_QWORD *)(a2 + 16);
  if (!v12)
    return _swiftEmptyArrayStorage;
  v13 = sub_100007E8C(&qword_1011B3DB0);
  v14 = *(_QWORD *)(v4 + 72);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v16 = (v15 + 32) & ~v15;
  v34 = v16 + v14;
  v35 = v13;
  v33 = v15 | 7;
  v17 = swift_allocObject(v13, v16 + v14, v15 | 7);
  v32 = xmmword_100EA7AA0;
  *(_OWORD *)(v17 + 16) = xmmword_100EA7AA0;
  sub_10004A160(a2 + v16, v17 + v16, qword_1011B3DB8);
  v18 = v12 - 1;
  if (v12 == 1)
  {
    v19 = _swiftEmptyArrayStorage;
LABEL_20:
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) != 0)
      goto LABEL_21;
  }
  else
  {
    swift_bridgeObjectRetain();
    v31[1] = a2;
    v20 = a2 + v14 + v16;
    v19 = _swiftEmptyArrayStorage;
    v36 = v14;
    while (1)
    {
      sub_10004A160(v20, (uint64_t)v11, qword_1011B3DB8);
      if (!*(_QWORD *)(v17 + 16))
        break;
      sub_10004A160(v17 + v16, (uint64_t)v8, qword_1011B3DB8);
      v22 = v37;
      swift_getAtKeyPath(v8, v37);
      sub_10004FF60((uint64_t)v8, qword_1011B3DB8);
      swift_getAtKeyPath(v11, v22);
      if (v40 == v39)
      {
        sub_10004A160((uint64_t)v11, v38, qword_1011B3DB8);
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
          v17 = sub_10043361C(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v24 = *(_QWORD *)(v17 + 16);
        v23 = *(_QWORD *)(v17 + 24);
        if (v24 >= v23 >> 1)
          v17 = sub_10043361C(v23 > 1, v24 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v24 + 1;
        v21 = v36;
        sub_100065228(v38, v17 + v16 + v24 * v36, qword_1011B3DB8);
        sub_10004FF60((uint64_t)v11, qword_1011B3DB8);
      }
      else
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = sub_100433608(0, v19[2] + 1, 1, v19);
        v26 = v19[2];
        v25 = v19[3];
        if (v26 >= v25 >> 1)
          v19 = sub_100433608((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
        v19[2] = v26 + 1;
        v19[v26 + 4] = v17;
        v27 = swift_allocObject(v35, v34, v33);
        *(_OWORD *)(v27 + 16) = v32;
        sub_100065228((uint64_t)v11, v27 + v16, qword_1011B3DB8);
        swift_bridgeObjectRelease();
        v17 = v27;
        v21 = v36;
      }
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  v19 = sub_100433608(0, v19[2] + 1, 1, v19);
LABEL_21:
  v29 = v19[2];
  v28 = v19[3];
  if (v29 >= v28 >> 1)
    v19 = sub_100433608((_QWORD *)(v28 > 1), v29 + 1, 1, v19);
  v19[2] = v29 + 1;
  v19[v29 + 4] = v17;
  return v19;
}

uint64_t sub_10067E8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C5D8 != -1)
    swift_once(&qword_10119C5D8, sub_10067D134);
  v2 = type metadata accessor for LayoutProperties(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124D690);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

int *sub_10067E920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int *result;
  uint64_t v6;

  v4 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  result = (int *)type metadata accessor for HeightConstrainedHStackLayout.Cache(0);
  v6 = a2 + result[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_QWORD *)(a2 + result[6]) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + result[7]) = 0;
  return result;
}

double sub_10067E99C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_10067D188(a1, a2 & 1, a3, a4 & 1, a5, a6, *(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_BYTE *)(v6 + 16));
}

uint64_t sub_10067E9D4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  uint64_t v10;

  return sub_10067EC34(a9, a10, *(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(unsigned __int8 *)(v10 + 16), a1, a2, a3, a4);
}

uint64_t sub_10067E9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10067EA40(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10067EA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10067EA40(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10067EA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_10067EA7C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_1002A837C;
}

uint64_t sub_10067EADC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v6;

  v6 = 1;
  v4 = sub_10067EB40();
  return View.layoutValue<A>(key:value:)(&type metadata for HeightConstrainingElement, &v6, a1, &type metadata for HeightConstrainingElement, a2, v4);
}

unint64_t sub_10067EB40()
{
  unint64_t result;

  result = qword_1011C19C8;
  if (!qword_1011C19C8)
  {
    result = swift_getWitnessTable(&unk_100EC914C, &type metadata for HeightConstrainingElement);
    atomic_store(result, (unint64_t *)&qword_1011C19C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeightConstrainingElement()
{
  return &type metadata for HeightConstrainingElement;
}

ValueMetadata *type metadata accessor for HeightConstrainedHStackLayout()
{
  return &type metadata for HeightConstrainedHStackLayout;
}

unint64_t sub_10067EBA8()
{
  unint64_t result;

  result = qword_1011C19D0;
  if (!qword_1011C19D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_1011C19D0);
  }
  return result;
}

unint64_t sub_10067EBF0()
{
  unint64_t result;

  result = qword_1011C19D8;
  if (!qword_1011C19D8)
  {
    result = swift_getWitnessTable(&unk_100EC91A0, &type metadata for HeightConstrainedHStackLayout);
    atomic_store(result, (unint64_t *)&qword_1011C19D8);
  }
  return result;
}

uint64_t sub_10067EC34(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void (*v50)(__n128);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  __n128 v58;
  unint64_t v59;
  __n128 v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t *v65;
  void (*v66)(_QWORD *, _QWORD);
  char *v67;
  char *v68;
  char *v69;
  int v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  double v89;
  char *v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  _QWORD *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(__n128);
  char v141;
  _QWORD v142[2];
  CGRect v143;
  CGRect v144;

  v120 = a5;
  v136 = (char *)a4;
  v127 = a3;
  v128 = a2;
  v135 = a1;
  v116 = type metadata accessor for ViewSpacing(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v113 = (char *)&v111 - v15;
  v16 = sub_100007E8C(qword_1011B3DB8);
  v131 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v119 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LayoutSubview(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v133 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v134 = (char *)&v111 - v22;
  __chkstk_darwin(v23);
  v129 = (char *)&v111 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v111 - v26;
  __chkstk_darwin(v28);
  v118 = (char *)&v111 - v29;
  v30 = sub_100007E8C(&qword_1011C19E0);
  __chkstk_darwin(v30);
  v137 = (uint64_t *)((char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  v138 = (char *)&v111 - v33;
  v34 = type metadata accessor for LayoutSubviews(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011C19E8);
  __chkstk_darwin(v38);
  v40 = (char *)&v111 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011C19F0);
  __chkstk_darwin(v41);
  v43 = (char *)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011C19F8);
  __chkstk_darwin(v44);
  v130 = (uint64_t)&v111 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v132 = (char *)&v111 - v47;
  v49 = __chkstk_darwin(v48);
  v50 = *(void (**)(__n128))(v19 + 56);
  v139 = (uint64_t)&v111 - v51;
  v140 = v50;
  v50(v49);
  v121 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v121(v40, v135, v34);
  v123 = v35;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v40, v34);
  v52 = sub_10067F5BC(&qword_1011C1A00, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v122 = v37;
  dispatch thunk of Sequence.makeIterator()(v34, v52);
  v117 = *(int *)(v41 + 36);
  *(_QWORD *)&v43[v117] = 0;
  v53 = &v43[*(int *)(sub_100007E8C(&qword_1011C1A08) + 36)];
  v54 = (uint64_t)v43;
  v55 = sub_10067F5BC(&qword_1011C1A10, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v56 = (uint64_t)v136;
  v57 = 0.0;
  v135 = v27;
  v125 = v34;
  v136 = v43;
  v124 = v53;
  v126 = v55;
  v112 = v16;
  while (1)
  {
    v63 = *(_QWORD *)v53;
    dispatch thunk of Collection.endIndex.getter(v142, v34, v55);
    if (v63 == v142[0])
    {
      v64 = (uint64_t)v132;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v140)(v132, 1, 1, v18);
      v65 = (unint64_t *)v138;
LABEL_8:
      sub_10004FF60(v64, &qword_1011C19F8);
      v71 = 1;
      goto LABEL_11;
    }
    v66 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v142, v53, v34, v55);
    v67 = v132;
    (*(void (**)(char *))(v19 + 16))(v132);
    v66(v142, 0);
    v68 = v122;
    v121(v122, (char *)v54, v34);
    dispatch thunk of Collection.formIndex(after:)(v53, v34, v55);
    v69 = v68;
    v64 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v69, v34);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v140)(v67, 0, 1, v18);
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v67, 1, v18);
    v65 = (unint64_t *)v138;
    if (v70 == 1)
      goto LABEL_8;
    v72 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v73 = v118;
    v72(v118, v64, v18);
    v74 = &v119[*(int *)(v16 + 48)];
    v75 = (uint64_t)v136;
    v76 = v117;
    v77 = *(_QWORD *)&v136[v117];
    result = ((uint64_t (*)(char *, char *, uint64_t))v72)(v74, v73, v18);
    if (__OFADD__(v77, 1))
      goto LABEL_29;
    *(_QWORD *)(v75 + v76) = v77 + 1;
    v79 = (char *)v137 + *(int *)(v16 + 48);
    *v137 = v77;
    v72(v79, (uint64_t)v74, v18);
    v71 = 0;
    v27 = v135;
    v65 = (unint64_t *)v138;
    v53 = v124;
LABEL_11:
    v80 = v131;
    v81 = (uint64_t)v137;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v137, v71, 1, v16);
    sub_100065228(v81, (uint64_t)v65, &qword_1011C19E0);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v80 + 48))(v65, 1, v16) == 1)
    {
      sub_10004FF60((uint64_t)v136, &qword_1011C19F0);
      return sub_10004FF60(v139, &qword_1011C19F8);
    }
    v82 = *v65;
    v83 = (char *)v65 + *(int *)(v16 + 48);
    v84 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v84(v27, v83, v18);
    v85 = v130;
    sub_10004A160(v139, v130, &qword_1011C19F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v85, 1, v18) == 1)
    {
      sub_10004FF60(v85, &qword_1011C19F8);
    }
    else
    {
      v86 = v129;
      v84(v129, (char *)v85, v18);
      v87 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v87(v134, v86, v18);
      v88 = ((uint64_t (*)(char *, char *, uint64_t))v87)(v133, v27, v18);
      v89 = *(double *)&v56;
      if ((v120 & 1) != 0)
      {
        v90 = v113;
        v91 = LayoutSubview.spacing.getter(v88);
        v92 = v114;
        LayoutSubview.spacing.getter(v91);
        v89 = ViewSpacing.distance(to:along:)(v92, 0);
        v93 = *(void (**)(char *, uint64_t))(v115 + 8);
        v94 = v92;
        v95 = v116;
        v93(v94, v116);
        v96 = v90;
        v16 = v112;
        v93(v96, v95);
      }
      v97 = *(void (**)(char *, uint64_t))(v19 + 8);
      v97(v133, v18);
      v97(v134, v18);
      v97(v129, v18);
      v57 = v57 + v89;
      v53 = v124;
    }
    result = type metadata accessor for HeightConstrainedHStackLayout.Cache(0);
    if ((v82 & 0x8000000000000000) != 0)
      break;
    v98 = *(_QWORD *)(v128 + *(int *)(result + 24));
    if (v82 >= *(_QWORD *)(v98 + 16))
      goto LABEL_28;
    v99 = v98 + 16 * v82;
    v100 = *(double *)(v99 + 32);
    v101 = *(_QWORD *)(v99 + 40);
    v102 = static VerticalAlignment.top.getter(result);
    v103 = v127;
    v104 = static VerticalAlignment.== infix(_:_:)(v102, v127);
    if ((v104 & 1) != 0)
    {
      v58.n128_u64[0] = static UnitPoint.topLeading.getter();
      v60.n128_u64[0] = v59;
      v61 = a7;
LABEL_3:
      v27 = v135;
      v34 = v125;
      goto LABEL_4;
    }
    v105 = static VerticalAlignment.center.getter(v104);
    if ((static VerticalAlignment.== infix(_:_:)(v105, v103) & 1) != 0)
    {
      v143.origin.x = a6;
      v143.origin.y = a7;
      v143.size.width = a8;
      v143.size.height = a9;
      v61 = CGRectGetHeight(v143) * 0.5 + a7;
      v58.n128_u64[0] = static UnitPoint.leading.getter();
      v60.n128_u64[0] = v106;
      goto LABEL_3;
    }
    v107 = static VerticalAlignment.bottom.getter();
    v108 = static VerticalAlignment.== infix(_:_:)(v107, v103);
    v34 = v125;
    if ((v108 & 1) != 0)
    {
      v144.origin.x = a6;
      v144.origin.y = a7;
      v144.size.width = a8;
      v144.size.height = a9;
      v61 = CGRectGetHeight(v144) + a7;
      v58.n128_u64[0] = static UnitPoint.bottomLeading.getter();
      v60.n128_u64[0] = v109;
    }
    else
    {
      v58.n128_u64[0] = static UnitPoint.topLeading.getter();
      v60.n128_u64[0] = v110;
      v61 = a7;
    }
    v27 = v135;
LABEL_4:
    LOBYTE(v142[0]) = 0;
    v141 = 0;
    LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v100, 0, v101, 0, v57 + a6, v61, v58, v60);
    v62 = v139;
    sub_10004FF60(v139, &qword_1011C19F8);
    v57 = v57 + v100;
    v84((char *)v62, v27, v18);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v140)(v62, 0, 1, v18);
    v54 = (uint64_t)v136;
    v55 = v126;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10067F5BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LayoutSubviews(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HeightConstrainedHStackLayout.Cache(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C1A78;
  if (!qword_1011C1A78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeightConstrainedHStackLayout.Cache);
  return result;
}

uint64_t sub_10067F638@<X0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_10067E2A0(a1, a2);
}

unint64_t sub_10067F658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C1A18;
  if (!qword_1011C1A18)
  {
    v1 = sub_100044B54(&qword_1011C19E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedSequence<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1A18);
  }
  return result;
}

void sub_10067F6A4(double *a1@<X8>)
{
  *a1 = LayoutSubview.priority.getter();
}

uint64_t *sub_10067F6CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for LayoutSubviews(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v12;
    v13 = a3[7];
    v14 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v14;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v14);
  }
  return a1;
}

uint64_t sub_10067F784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 28)));
}

uint64_t sub_10067F7D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v11;
  v12 = a3[7];
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t sub_10067F860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = *(_QWORD *)(a2 + v11);
  v13 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a3[7];
  v15 = *(_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_10067F904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10067F984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for LayoutSubviews(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease(v11);
  v12 = a3[7];
  v13 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t sub_10067FA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067FA20);
}

uint64_t sub_10067FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for LayoutSubviews(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10067FA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067FAA8);
}

uint64_t sub_10067FAA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for LayoutSubviews(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_10067FB20(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for LayoutSubviews(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_100EC92F0;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionArtworkKeyframeImageKey()
{
  return &type metadata for MotionArtworkKeyframeImageKey;
}

uint64_t *sub_10067FBB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MotionViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for ArtworkImage.ViewModel(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
      v25 = *(int *)(v21 + 20);
      v26 = &v19[v25];
      v27 = &v20[v25];
      v28 = type metadata accessor for Artwork.CropStyle(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v31 = a3[6];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 10, v34))
    {
      v36 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = type metadata accessor for Playlist.Variant(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
      {
        v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v33, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
    }
    v40 = a3[7];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    *(_OWORD *)v41 = *(_OWORD *)v42;
    v41[16] = v42[16];
  }
  return a1;
}

uint64_t sub_10067FF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    v12 = v9 + *(int *)(v10 + 20);
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  v15 = a1 + *(int *)(a2 + 24);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16);
  if (!(_DWORD)result)
  {
    v18 = type metadata accessor for Playlist.Variant(0);
    v19 = *(_QWORD *)(v18 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
  }
  return result;
}

char *sub_100680104(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;

  v6 = type metadata accessor for MotionViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for ArtworkImage.ViewModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
    v23 = *(int *)(v19 + 20);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = type metadata accessor for Artwork.CropStyle(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v29 = a3[6];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 10, v32))
  {
    v34 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for Playlist.Variant(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35))
    {
      v37 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v30, v31, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v30, 0, 1, v35);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 10, v32);
  }
  v38 = a3[7];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v39[16] = v40[16];
  return a1;
}

uint64_t sub_10068046C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;

  v6 = type metadata accessor for MotionViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for MotionViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = a1 + v30;
  v32 = &a2[v30];
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      v48 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v31, v32, v48);
      v49 = *(int *)(v33 + 20);
      v50 = (void *)(v31 + v49);
      v51 = &v32[v49];
      v52 = type metadata accessor for Artwork.CropStyle(0);
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
      v55 = v54(v50, 1, v52);
      v56 = v54(v51, 1, v52);
      if (v55)
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
      }
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v46 = v50;
      v47 = v51;
LABEL_21:
      memcpy(v46, v47, v45);
      goto LABEL_27;
    }
    sub_10005B748(v31, type metadata accessor for ArtworkImage.ViewModel);
LABEL_20:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v46 = (void *)v31;
    v47 = v32;
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v31, v32, v38);
  v39 = *(int *)(v33 + 20);
  v40 = (void *)(v31 + v39);
  v41 = &v32[v39];
  v42 = type metadata accessor for Artwork.CropStyle(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_27:
  v57 = a3[6];
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 10, v60);
  v64 = v62(v59, 10, v60);
  if (!v63)
  {
    if (!v64)
    {
      v69 = type metadata accessor for Playlist.Variant(0);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
      v72 = v71(v58, 1, v69);
      v73 = v71(v59, 1, v69);
      if (v72)
      {
        if (!v73)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 16))(v58, v59, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v58, 0, 1, v69);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v73)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 24))(v58, v59, v69);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v70 + 8))(v58, v69);
      }
      v68 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v58, (uint64_t *)&unk_1011A3DB0);
LABEL_33:
    v68 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_34:
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_40;
  }
  if (v64)
    goto LABEL_33;
  v65 = type metadata accessor for Playlist.Variant(0);
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v59, 1, v65))
  {
    v67 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v58, v59, v65);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v58, 0, 1, v65);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 10, v60);
LABEL_40:
  v74 = a3[7];
  v75 = a1 + v74;
  v76 = &a2[v74];
  v77 = *(_OWORD *)v76;
  *(_BYTE *)(v75 + 16) = v76[16];
  *(_OWORD *)v75 = v77;
  return a1;
}

char *sub_100680AC4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;

  v6 = type metadata accessor for MotionViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for ArtworkImage.ViewModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
    v23 = *(int *)(v19 + 20);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = type metadata accessor for Artwork.CropStyle(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v29 = a3[6];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 10, v32))
  {
    v34 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for Playlist.Variant(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35))
    {
      v37 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v30, v31, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v30, 0, 1, v35);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 10, v32);
  }
  v38 = a3[7];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v39[16] = v40[16];
  return a1;
}

uint64_t sub_100680E2C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v6 = type metadata accessor for MotionViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for MotionViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = a1 + v30;
  v32 = &a2[v30];
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      v48 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v31, v32, v48);
      v49 = *(int *)(v33 + 20);
      v50 = (void *)(v31 + v49);
      v51 = &v32[v49];
      v52 = type metadata accessor for Artwork.CropStyle(0);
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
      v55 = v54(v50, 1, v52);
      v56 = v54(v51, 1, v52);
      if (v55)
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 40))(v50, v51, v52);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
      }
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v46 = v50;
      v47 = v51;
LABEL_21:
      memcpy(v46, v47, v45);
      goto LABEL_27;
    }
    sub_10005B748(v31, type metadata accessor for ArtworkImage.ViewModel);
LABEL_20:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v46 = (void *)v31;
    v47 = v32;
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v31, v32, v38);
  v39 = *(int *)(v33 + 20);
  v40 = (void *)(v31 + v39);
  v41 = &v32[v39];
  v42 = type metadata accessor for Artwork.CropStyle(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_27:
  v57 = a3[6];
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 10, v60);
  v64 = v62(v59, 10, v60);
  if (!v63)
  {
    if (!v64)
    {
      v69 = type metadata accessor for Playlist.Variant(0);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
      v72 = v71(v58, 1, v69);
      v73 = v71(v59, 1, v69);
      if (v72)
      {
        if (!v73)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 32))(v58, v59, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v58, 0, 1, v69);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v73)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 40))(v58, v59, v69);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v70 + 8))(v58, v69);
      }
      v68 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v58, (uint64_t *)&unk_1011A3DB0);
LABEL_33:
    v68 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_34:
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_40;
  }
  if (v64)
    goto LABEL_33;
  v65 = type metadata accessor for Playlist.Variant(0);
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v59, 1, v65))
  {
    v67 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v66 + 32))(v58, v59, v65);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v58, 0, 1, v65);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 10, v60);
LABEL_40:
  v74 = a3[7];
  v75 = a1 + v74;
  v76 = &a2[v74];
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *(_BYTE *)(v75 + 16) = v76[16];
  return a1;
}

uint64_t sub_100681484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100681490);
}

uint64_t sub_100681490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_100007E8C(&qword_1011AA8D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = type metadata accessor for ArtworkImage.Placeholder(0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100681530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068153C);
}

uint64_t sub_10068153C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_100007E8C(&qword_1011AA8D0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder(0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MotionArtworkView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C1B10, (uint64_t)&nominal type descriptor for MotionArtworkView);
}

void sub_1006815F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_10015C698(319, &qword_1011AC2E0, type metadata accessor for MotionViewModel);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015C698(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_100EC9348;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1006816C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA90A0, 1);
}

uint64_t sub_1006816D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t OpaqueTypeConformance2;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[3];

  v97 = a1;
  v93 = type metadata accessor for MotionArtworkView.StaticArtworkView(0);
  __chkstk_darwin(v93);
  v3 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011C1B50);
  __chkstk_darwin(v95);
  v96 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityTraits(0);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  __chkstk_darwin(v7);
  v87 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v9);
  v79 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for VideoGravity(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v82 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  __chkstk_darwin(v12);
  v71 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011C1B58);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v72 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011C1B60);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011C1B68);
  __chkstk_darwin(v80);
  v76 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011C1B70);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v81 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C(&qword_1011C1B78);
  __chkstk_darwin(v94);
  v78 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  v23 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MotionViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v1, (uint64_t)v25, &qword_1011AA8D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_10004FF60((uint64_t)v25, &qword_1011AA8D0);
    v30 = (int *)type metadata accessor for MotionArtworkView(0);
    sub_10004A160(v1 + v30[5], (uint64_t)v3, (uint64_t *)&unk_1011A3E10);
    v31 = v93;
    sub_10005B704(v1 + v30[6], (uint64_t)&v3[*(int *)(v93 + 20)], type metadata accessor for ArtworkImage.Placeholder);
    v32 = v1 + v30[7];
    v33 = *(_BYTE *)(v32 + 16);
    v34 = &v3[*(int *)(v31 + 24)];
    *(_OWORD *)v34 = *(_OWORD *)v32;
    v34[16] = v33;
    v35 = v96;
    sub_10005B704((uint64_t)v3, v96, type metadata accessor for MotionArtworkView.StaticArtworkView);
    swift_storeEnumTagMultiPayload(v35, v95, 1);
    v36 = sub_100682A08();
    v37 = sub_100048748(&qword_1011C1B98, type metadata accessor for MotionArtworkView.StaticArtworkView, (uint64_t)&unk_100EC9414);
    _ConditionalContent<>.init(storage:)(v35, v94, v31, v36, v37);
    v38 = (uint64_t)v3;
    v39 = type metadata accessor for MotionArtworkView.StaticArtworkView;
  }
  else
  {
    v40 = sub_100682B68((uint64_t)v25, (uint64_t)v29);
    v41 = v71;
    v42 = VideoArtwork.url.getter(v40);
    v70 = v22;
    __chkstk_darwin(v42);
    __chkstk_darwin(v43);
    sub_100007E8C(&qword_1011C1BA0);
    sub_100682BBC();
    v69 = sub_100048748(&qword_1011C1B98, type metadata accessor for MotionArtworkView.StaticArtworkView, (uint64_t)&unk_100EC9414);
    v44 = v72;
    v45 = v41;
    v46 = v93;
    MotionViewV2.init(url:keyframe:fallback:)(v45, sub_100682BAC, v47);
    v48 = v79;
    sub_10004A160((uint64_t)&v29[*(int *)(v26 + 20)], v79, (uint64_t *)&unk_1011A14A0);
    v49 = v82;
    sub_100682230(v48, v82);
    v50 = sub_100049F28(&qword_1011C1B90, &qword_1011C1B58, (uint64_t)&protocol conformance descriptor for MotionViewV2<A, B>);
    v51 = v77;
    View.videoGravity(_:)(v49, v77, v50);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v49, v86);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v51);
    v52 = v73;
    v53 = (uint64_t)v76;
    v54 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v76, v16, v74);
    v55 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v16, v54);
    v56 = v87;
    static AccessibilityChildBehavior.ignore.getter(v55);
    v57 = sub_100682AB4();
    v59 = v80;
    v58 = v81;
    View.accessibilityElement(children:)(v56, v80, v57);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v56, v89);
    v60 = sub_10004FF60(v53, &qword_1011C1B68);
    v61 = v90;
    static AccessibilityTraits.isImage.getter(v60);
    v98[0] = v59;
    v98[1] = v57;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v98, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v63 = (uint64_t)v78;
    v64 = v85;
    View.accessibilityAddTraits(_:)(v61, v85, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v92);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v64);
    v65 = (uint64_t)v70;
    sub_100065228(v63, (uint64_t)v70, &qword_1011C1B78);
    v66 = v96;
    sub_10004A160(v65, v96, &qword_1011C1B78);
    swift_storeEnumTagMultiPayload(v66, v95, 0);
    v67 = sub_100682A08();
    _ConditionalContent<>.init(storage:)(v66, v94, v46, v67, v69);
    sub_10004FF60(v65, &qword_1011C1B78);
    v39 = type metadata accessor for MotionViewModel;
    v38 = (uint64_t)v29;
  }
  return sub_10005B748(v38, v39);
}

uint64_t sub_100681EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v3 = sub_100007E8C(&qword_1011C1BB8);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  __chkstk_darwin(v3);
  v33 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MotionViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_100007E8C(&qword_1011C1BA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v33 - v19;
  sub_10005B704(a1, (uint64_t)&v33 - v19, type metadata accessor for MotionViewModel);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
  sub_10004A160((uint64_t)v20, (uint64_t)v17, &qword_1011AA8D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v17, &qword_1011AA8D0);
    v21 = 1;
    v23 = v34;
    v22 = v35;
  }
  else
  {
    sub_100682B68((uint64_t)v17, (uint64_t)v11);
    sub_10005B704((uint64_t)v11, (uint64_t)v8, type metadata accessor for MotionViewModel);
    v24 = *(unsigned __int8 *)(v6 + 80);
    v25 = (v24 + 16) & ~v24;
    v26 = swift_allocObject(&unk_1010D5E10, v25 + v7, v24 | 7);
    sub_100682B68((uint64_t)v8, v26 + v25);
    v27 = sub_100007E8C(&qword_1011C1BC0);
    v28 = sub_100682D40();
    v29 = v33;
    ArtworkImageReader.init(content:)(sub_100682CF4, v26, v27, v28);
    sub_10005B748((uint64_t)v11, type metadata accessor for MotionViewModel);
    v31 = v34;
    v30 = v35;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v14, v29, v35);
    v21 = 0;
    v22 = v30;
    v23 = v31;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v14, v21, 1, v22);
  sub_100065228((uint64_t)v14, v36, &qword_1011C1BA0);
  return sub_10004FF60((uint64_t)v20, &qword_1011AA8D0);
}

__n128 sub_100682190@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unsigned __int8 v8;
  __n128 *v9;
  __n128 result;

  v4 = (int *)type metadata accessor for MotionArtworkView(0);
  sub_10004A160(a1 + v4[5], a2, (uint64_t *)&unk_1011A3E10);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for MotionArtworkView.StaticArtworkView(0);
  sub_10005B704(v5, a2 + *(int *)(v6 + 20), type metadata accessor for ArtworkImage.Placeholder);
  v7 = (__n128 *)(a1 + v4[7]);
  v8 = v7[1].n128_u8[0];
  v9 = (__n128 *)(a2 + *(int *)(v6 + 24));
  result = *v7;
  *v9 = *v7;
  v9[1].n128_u8[0] = v8;
  return result;
}

uint64_t sub_100682230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - v12;
  sub_10004A160(a1, (uint64_t)&v25 - v12, (uint64_t *)&unk_1011A14A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) != 1)
  {
    v14 = sub_10004A160((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1011A14A0);
    static Artwork.CropStyle.specificRectangle.getter(v14);
    v15 = sub_100048748((unint64_t *)&qword_1011BC100, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t)&protocol conformance descriptor for Artwork.CropStyle);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10, v4, v15);
    v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v18 = v17(v7, v4);
    if ((v16 & 1) != 0)
    {
      sub_10004FF60(a1, (uint64_t *)&unk_1011A14A0);
      v17(v10, v4);
    }
    else
    {
      static Artwork.CropStyle.squareCenterCrop.getter(v18);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10, v4, v15);
      sub_10004FF60(a1, (uint64_t *)&unk_1011A14A0);
      v17(v7, v4);
      v17(v10, v4);
      if ((v19 & 1) == 0)
        goto LABEL_7;
    }
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A14A0);
    v20 = enum case for VideoGravity.fill(_:);
    v21 = type metadata accessor for VideoGravity(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(a2, v20, v21);
  }
  sub_10004FF60(a1, (uint64_t *)&unk_1011A14A0);
LABEL_7:
  v23 = enum case for VideoGravity.fit(_:);
  v24 = type metadata accessor for VideoGravity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(a2, v23, v24);
  return sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A14A0);
}

uint64_t sub_100682494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[48];

  v5 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(int *)(a1 + 24);
  v14 = v2 + *(int *)(a1 + 20);
  ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + v13), *(_QWORD *)(v2 + v13 + 8), *(_BYTE *)(v2 + v13 + 16), (uint64_t)v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v5);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v2, v14, (uint64_t)v16, (uint64_t)v8, (uint64_t)v12);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 16))(a2, v12, v9);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1006825D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[48];

  v42 = a1;
  v43 = a3;
  v4 = sub_100007E8C(&qword_1011BC5A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v22 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011C1BC0);
  v25 = __chkstk_darwin(v38);
  v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  VideoArtwork.previewFrame.getter(v25);
  v28 = type metadata accessor for MotionViewModel(0);
  sub_10004A160(a2 + *(int *)(v28 + 20), (uint64_t)v15, (uint64_t *)&unk_1011A14A0);
  ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v18, (uint64_t)v15, (uint64_t)v21);
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v21, 0, 1, v29);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 10, v30);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v44);
  v32 = v39;
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v9, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v40);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v21, (uint64_t)v12, (uint64_t)v44, (uint64_t)v9, (uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  sub_10005B748((uint64_t)v12, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3E10);
  sub_10004A160(v42, (uint64_t)v6, &qword_1011BC5A0);
  v33 = type metadata accessor for ArtworkImage.Proxy(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v33) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011BC5A0);
    v35 = 0;
  }
  else
  {
    v35 = ArtworkImage.Proxy.image.getter();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v33);
  }
  v36 = v41;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v27, v24, v41);
  *(_QWORD *)&v27[*(int *)(v38 + 36)] = v35;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v36);
  return sub_100065228((uint64_t)v27, v43, &qword_1011C1BC0);
}

void sub_1006829AC(void **a1, void (*a2)(void **__return_ptr))
{
  void *v3;
  void *v4;
  void *v5;

  a2(&v5);
  v3 = v5;
  v4 = *a1;
  if (v5)
  {

    v4 = v3;
  }
  *a1 = v4;
}

uint64_t type metadata accessor for MotionArtworkView.StaticArtworkView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C1C38, (uint64_t)&nominal type descriptor for MotionArtworkView.StaticArtworkView);
}

unint64_t sub_100682A08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C1B80;
  if (!qword_1011C1B80)
  {
    v1 = sub_100044B54(&qword_1011C1B78);
    v2[0] = sub_100044B54(&qword_1011C1B68);
    v2[1] = sub_100682AB4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1B80);
  }
  return result;
}

unint64_t sub_100682AB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C1B88;
  if (!qword_1011C1B88)
  {
    v1 = sub_100044B54(&qword_1011C1B68);
    v2[0] = sub_100044B54(&qword_1011C1B58);
    v2[1] = sub_100049F28(&qword_1011C1B90, &qword_1011C1B58, (uint64_t)&protocol conformance descriptor for MotionViewV2<A, B>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.videoGravity(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1B88);
  }
  return result;
}

uint64_t sub_100682B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MotionViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100682BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100681EC4(*(_QWORD *)(v1 + 16), a1);
}

double sub_100682BB4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100682190(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100682BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C1BA8;
  if (!qword_1011C1BA8)
  {
    v1 = sub_100044B54(&qword_1011C1BA0);
    sub_100049F28(&qword_1011C1BB0, &qword_1011C1BB8, (uint64_t)&protocol conformance descriptor for ArtworkImageReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1BA8);
  }
  return result;
}

uint64_t sub_100682C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for MotionViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  v6 = v0 + v3 + *(int *)(v1 + 20);
  v7 = type metadata accessor for Artwork.CropStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100682CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MotionViewModel(0) - 8) + 80);
  return sub_1006825D8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100682D40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C1BC8;
  if (!qword_1011C1BC8)
  {
    v1 = sub_100044B54(&qword_1011C1BC0);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100049F28(&qword_1011C1BD0, &qword_1011C1BD8, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1BC8);
  }
  return result;
}

uint64_t *sub_100682DEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = *(int *)(a3 + 24);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *(_OWORD *)v28 = *(_OWORD *)v29;
    v28[16] = v29[16];
  }
  return a1;
}

char *sub_10068306C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = *(int *)(a3 + 24);
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  return a1;
}

uint64_t sub_1006832C0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = *(int *)(a3 + 20);
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = *(int *)(a3 + 24);
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_OWORD *)v49;
  *(_BYTE *)(v48 + 16) = v49[16];
  *(_OWORD *)v48 = v50;
  return a1;
}

char *sub_1006836F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = *(int *)(a3 + 24);
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  return a1;
}

uint64_t sub_100683948(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = *(int *)(a3 + 20);
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = *(int *)(a3 + 24);
  v48 = a1 + v47;
  v49 = &a2[v47];
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_BYTE *)(v48 + 16) = v49[16];
  return a1;
}

uint64_t sub_100683D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100683D88);
}

uint64_t sub_100683D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100683E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100683E0C);
}

uint64_t sub_100683E0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100683E8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10015C698(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100EC9348;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

unint64_t sub_100683F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C1C78;
  if (!qword_1011C1C78)
  {
    v1 = sub_100044B54(&qword_1011C1C80);
    sub_100682A08();
    sub_100048748(&qword_1011C1B98, type metadata accessor for MotionArtworkView.StaticArtworkView, (uint64_t)&unk_100EC9414);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1C78);
  }
  return result;
}

uint64_t sub_100683FB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA90C8, 1);
}

unint64_t sub_100683FC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C1C88;
  if (!qword_1011C1C88)
  {
    v1 = sub_100044B54(&qword_1011C0B90);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100684058();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C1C88);
  }
  return result;
}

unint64_t sub_100684058()
{
  unint64_t result;

  result = qword_1011C1C90;
  if (!qword_1011C1C90)
  {
    result = swift_getWitnessTable(&unk_100EC36F8, &type metadata for ArtworkImageReaderModifier);
    atomic_store(result, (unint64_t *)&qword_1011C1C90);
  }
  return result;
}

uint64_t sub_10068409C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  Swift::String v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  __n128 v73;
  Swift::String v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  Swift::String v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);

  v104 = a1;
  v106 = sub_100007E8C(&qword_1011C1E58);
  v1 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v3 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C1E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10068ADCC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v8._countAndFlagsBits = 0x656874206E65704FLL;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100EC9738);
  v10 = sub_10068B9DC();
  v105 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release();
  v13._countAndFlagsBits = 1650553888;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v103 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v106;
  v14(v3, v106);
  v107 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC9738);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release();
  v20._countAndFlagsBits = 1650553888;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v102 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v21._countAndFlagsBits = 0x20656D20656B6154;
  v21._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC9738);
  v23 = v105;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v105);
  v25 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release();
  v26._countAndFlagsBits = 1650553888;
  v26._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v101 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v27._countAndFlagsBits = 0x6874206F74206F47;
  v27._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100EC9738);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v23);
  v30 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release();
  v31._countAndFlagsBits = 1650553888;
  v31._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v100 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v32 = v106;
  v33 = v107;
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v34._countAndFlagsBits = 0x7420686374697753;
  v34._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_100EC9738);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v105);
  v37 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release();
  v38._countAndFlagsBits = 1650553888;
  v38._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v99 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v33(v3, v32);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v39._countAndFlagsBits = 0x207075206C6C7550;
  v39._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(&unk_100EC9738);
  v41 = v105;
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v40, v105);
  v43 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v4, v43);
  swift_release();
  v44._countAndFlagsBits = 1650553888;
  v44._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v98 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v45 = v106;
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v46._countAndFlagsBits = 0x206E65704FLL;
  v46._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath(&unk_100EC9738);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v41);
  v49 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v4, v49);
  swift_release();
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v97 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v107(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v51._countAndFlagsBits = 0x20656D20776F6853;
  v51._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  v52 = swift_getKeyPath(&unk_100EC9738);
  v53 = v105;
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v52, v105);
  v55 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v4, v55);
  swift_release();
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v96 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v57._countAndFlagsBits = 0x20656D20656B6154;
  v57._object = (void *)0xEB00000000206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v58 = swift_getKeyPath(&unk_100EC9738);
  v59 = _AssistantIntent.IntentProjection.subscript.getter(v58, v53);
  v60 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v59, v4, v60);
  swift_release();
  v61._countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v95 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v63 = v106;
  v62 = v107;
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v64._countAndFlagsBits = 0x206F74206F47;
  v64._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  v65 = swift_getKeyPath(&unk_100EC9738);
  v66 = _AssistantIntent.IntentProjection.subscript.getter(v65, v105);
  v67 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v66, v4, v67);
  swift_release();
  v68._countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v68);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v94 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v62(v3, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v69._object = (void *)0xEA0000000000206FLL;
  v69._countAndFlagsBits = 0x7420686374697753;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v69);
  v70 = swift_getKeyPath(&unk_100EC9738);
  v71 = v105;
  v72 = _AssistantIntent.IntentProjection.subscript.getter(v70, v105);
  v73 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v72, v4, v73);
  swift_release();
  v74._countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v74);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v93 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v75 = v106;
  v76 = v107;
  v107(v3, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenMusicTabAppIntent, v7);
  v77._countAndFlagsBits = 0x207075206C6C7550;
  v77._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v77);
  v78 = swift_getKeyPath(&unk_100EC9738);
  v79 = _AssistantIntent.IntentProjection.subscript.getter(v78, v71);
  v80 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v79, v4, v80);
  swift_release();
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v81);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicTabAppIntent, v7);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicTabAppIntent, v7);
  v76(v3, v75);
  v83 = sub_100007E8C(qword_1011C1E70);
  v84 = swift_allocObject(v83, 128, 7);
  *(_OWORD *)(v84 + 16) = xmmword_100EB91C0;
  v85 = v102;
  *(_QWORD *)(v84 + 32) = v103;
  *(_QWORD *)(v84 + 40) = v85;
  v86 = v100;
  *(_QWORD *)(v84 + 48) = v101;
  *(_QWORD *)(v84 + 56) = v86;
  v87 = v98;
  *(_QWORD *)(v84 + 64) = v99;
  *(_QWORD *)(v84 + 72) = v87;
  v88 = v96;
  *(_QWORD *)(v84 + 80) = v97;
  *(_QWORD *)(v84 + 88) = v88;
  v89 = v94;
  *(_QWORD *)(v84 + 96) = v95;
  *(_QWORD *)(v84 + 104) = v89;
  *(_QWORD *)(v84 + 112) = v93;
  *(_QWORD *)(v84 + 120) = v82;
  v90 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v90;
}

uint64_t sub_100684B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  Swift::String v69;
  Swift::String v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  __n128 v74;
  Swift::String v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  Swift::String v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;

  v105 = a1;
  v108 = sub_100007E8C(&qword_1011C1E40);
  v1 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v3 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C1E48);
  __chkstk_darwin(v4);
  v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100255344();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v8._countAndFlagsBits = 0x656874206E65704FLL;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100EC9710);
  v10 = sub_10025439C();
  v106 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release();
  v13._countAndFlagsBits = 0x6C20796D206E6920;
  v13._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v104 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v108;
  v14(v3, v108);
  v107 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC9710);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release();
  v20._countAndFlagsBits = 0x6C20796D206E6920;
  v20._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v103 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v21._countAndFlagsBits = 0x20656D20656B6154;
  v21._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC9710);
  v23 = v106;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v106);
  v25 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release();
  v26._countAndFlagsBits = 0x6C20796D206E6920;
  v26._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v102 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v27._countAndFlagsBits = 0x6874206F74206F47;
  v27._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100EC9710);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v23);
  v30 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release();
  v31._countAndFlagsBits = 0x6C20796D206E6920;
  v31._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v101 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v33 = v107;
  v32 = v108;
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v34._countAndFlagsBits = 0x7420686374697753;
  v34._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_100EC9710);
  v36 = v106;
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v35, v106);
  v38 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4, v38);
  swift_release();
  v39._countAndFlagsBits = 0x6C20796D206E6920;
  v39._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v100 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v33(v3, v32);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v40._countAndFlagsBits = 0x207075206C6C7550;
  v40._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v41 = swift_getKeyPath(&unk_100EC9710);
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v41, v36);
  v43 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v4, v43);
  swift_release();
  v44._countAndFlagsBits = 0x6C20796D206E6920;
  v44._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v99 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v46 = v107;
  v45 = v108;
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v47._countAndFlagsBits = 0x20796D206E65704FLL;
  v47._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v48 = swift_getKeyPath(&unk_100EC9710);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v106);
  v50 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v4, v50);
  swift_release();
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v98 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v46(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v52._countAndFlagsBits = 0x20796D20776F6853;
  v52._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath(&unk_100EC9710);
  v54 = v106;
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v53, v106);
  v56 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v4, v56);
  swift_release();
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v97 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v58._countAndFlagsBits = 0x20656D20656B6154;
  v58._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath(&unk_100EC9710);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v54);
  v61 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v4, v61);
  swift_release();
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v96 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v63 = v107;
  v64 = v108;
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v65._countAndFlagsBits = 0x796D206F74206F47;
  v65._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  v66 = swift_getKeyPath(&unk_100EC9710);
  v67 = _AssistantIntent.IntentProjection.subscript.getter(v66, v106);
  v68 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v67, v4, v68);
  swift_release();
  v69._countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v69);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v95 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v63(v3, v64);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v70._countAndFlagsBits = 0x7420686374697753;
  v70._object = (void *)0xED000020796D206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  v71 = swift_getKeyPath(&unk_100EC9710);
  v72 = v106;
  v73 = _AssistantIntent.IntentProjection.subscript.getter(v71, v106);
  v74 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v73, v4, v74);
  swift_release();
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v75);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v94 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v77 = v107;
  v76 = v108;
  v107(v3, v108);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for OpenLibrarySectionAppIntent, v7);
  v78._countAndFlagsBits = 0x207075206C6C7550;
  v78._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v78);
  v79 = swift_getKeyPath(&unk_100EC9710);
  v80 = _AssistantIntent.IntentProjection.subscript.getter(v79, v72);
  v81 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v80, v4, v81);
  swift_release();
  v82._countAndFlagsBits = 0;
  v82._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v82);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenLibrarySectionAppIntent, v7);
  v83 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenLibrarySectionAppIntent, v7);
  v77(v3, v76);
  v84 = sub_100007E8C(&qword_1011C1E50);
  v85 = swift_allocObject(v84, 128, 7);
  *(_OWORD *)(v85 + 16) = xmmword_100EB91C0;
  v86 = v103;
  *(_QWORD *)(v85 + 32) = v104;
  *(_QWORD *)(v85 + 40) = v86;
  v87 = v101;
  *(_QWORD *)(v85 + 48) = v102;
  *(_QWORD *)(v85 + 56) = v87;
  v88 = v99;
  *(_QWORD *)(v85 + 64) = v100;
  *(_QWORD *)(v85 + 72) = v88;
  v89 = v97;
  *(_QWORD *)(v85 + 80) = v98;
  *(_QWORD *)(v85 + 88) = v89;
  v90 = v95;
  *(_QWORD *)(v85 + 96) = v96;
  *(_QWORD *)(v85 + 104) = v90;
  *(_QWORD *)(v85 + 112) = v94;
  *(_QWORD *)(v85 + 120) = v83;
  v91 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v91;
}

