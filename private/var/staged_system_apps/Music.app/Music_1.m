uint64_t sub_1000BDCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1728);
  v181 = *(_QWORD *)(v0 + 1720);
  v184 = *(_QWORD *)(v0 + 1736);
  v2 = *(_QWORD *)(v0 + 1712);
  v3 = *(_QWORD *)(v0 + 1704);
  v4 = *(_QWORD *)(v0 + 1696);
  v178 = *(_QWORD *)(v0 + 1672);
  v187 = *(_QWORD *)(v0 + 1664);
  v5 = *(_QWORD *)(v0 + 1656);
  v6 = *(_QWORD *)(v0 + 1640);
  v7 = *(_QWORD *)(v0 + 1632);
  v8 = *(_QWORD *)(v0 + 1624);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E43C(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1624), (uint64_t *)&unk_1011C7320);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1688);
    v22 = *(_QWORD *)(v0 + 1672);
    v23 = *(_QWORD *)(v0 + 1664);
    v24 = *(_QWORD *)(v0 + 1624);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.tvSeason(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BE954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3496);
  *(_QWORD *)(*(_QWORD *)v1 + 3504) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000D0F30;
  }
  else
  {
    v3 = sub_1000BE9CC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BE9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1600);
  v181 = *(_QWORD *)(v0 + 1592);
  v184 = *(_QWORD *)(v0 + 1608);
  v2 = *(_QWORD *)(v0 + 1584);
  v3 = *(_QWORD *)(v0 + 1576);
  v4 = *(_QWORD *)(v0 + 1568);
  v178 = *(_QWORD *)(v0 + 1544);
  v187 = *(_QWORD *)(v0 + 1536);
  v5 = *(_QWORD *)(v0 + 1528);
  v6 = *(_QWORD *)(v0 + 1512);
  v7 = *(_QWORD *)(v0 + 1504);
  v8 = *(_QWORD *)(v0 + 1496);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E458(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1496), (uint64_t *)&unk_1011D1410);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1560);
    v22 = *(_QWORD *)(v0 + 1544);
    v23 = *(_QWORD *)(v0 + 1536);
    v24 = *(_QWORD *)(v0 + 1496);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.tvShow(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BF624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3512);
  *(_QWORD *)(*(_QWORD *)v1 + 3520) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000D1808;
  }
  else
  {
    v3 = sub_1000BF69C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BF69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1472);
  v181 = *(_QWORD *)(v0 + 1464);
  v184 = *(_QWORD *)(v0 + 1480);
  v2 = *(_QWORD *)(v0 + 1456);
  v3 = *(_QWORD *)(v0 + 1448);
  v4 = *(_QWORD *)(v0 + 1440);
  v178 = *(_QWORD *)(v0 + 1424);
  v187 = *(_QWORD *)(v0 + 1416);
  v5 = *(_QWORD *)(v0 + 1408);
  v6 = *(_QWORD *)(v0 + 1400);
  v7 = *(_QWORD *)(v0 + 1392);
  v8 = *(_QWORD *)(v0 + 1384);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E474(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1384), &qword_10119FD30);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1432);
    v22 = *(_QWORD *)(v0 + 1424);
    v23 = *(_QWORD *)(v0 + 1416);
    v24 = *(_QWORD *)(v0 + 1384);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.uploadedAudio(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C02F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3528);
  *(_QWORD *)(*(_QWORD *)v1 + 3536) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000D20E0;
  }
  else
  {
    v3 = sub_1000C036C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C036C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1368);
  v181 = *(_QWORD *)(v0 + 1360);
  v184 = *(_QWORD *)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1352);
  v3 = *(_QWORD *)(v0 + 1344);
  v4 = *(_QWORD *)(v0 + 1336);
  v178 = *(_QWORD *)(v0 + 1320);
  v187 = *(_QWORD *)(v0 + 1312);
  v5 = *(_QWORD *)(v0 + 1304);
  v6 = *(_QWORD *)(v0 + 1296);
  v7 = *(_QWORD *)(v0 + 1288);
  v8 = *(_QWORD *)(v0 + 1280);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E490(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1280), &qword_10119FD10);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1328);
    v22 = *(_QWORD *)(v0 + 1320);
    v23 = *(_QWORD *)(v0 + 1312);
    v24 = *(_QWORD *)(v0 + 1280);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.uploadedVideo(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C0FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3560);
  *(_QWORD *)(*(_QWORD *)v1 + 3568) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D29B8;
  else
    v3 = sub_1000C1028;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C1028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 3112);
  v201 = *(_QWORD *)(v0 + 3104);
  v1 = *(_QWORD *)(v0 + 3088);
  v2 = *(_QWORD *)(v0 + 3080);
  v3 = *(_QWORD *)(v0 + 3072);
  v4 = *(_QWORD *)(v0 + 3056);
  v5 = *(_QWORD *)(v0 + 1184);
  v192 = *(_QWORD *)(v0 + 1176);
  v195 = *(_QWORD *)(v0 + 1192);
  v6 = *(_QWORD *)(v0 + 1168);
  v7 = *(_QWORD *)(v0 + 1160);
  v8 = *(_QWORD *)(v0 + 1152);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E1D4(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 3056), &qword_1011A8FA0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 3120);
    v30 = *(_QWORD *)(v0 + 3112);
    v31 = *(_QWORD *)(v0 + 3104);
    v32 = *(_QWORD *)(v0 + 3056);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.album(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C1C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3576);
  *(_QWORD *)(*(_QWORD *)v1 + 3584) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D32AC;
  else
    v3 = sub_1000C1CEC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C1CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2984);
  v201 = *(_QWORD *)(v0 + 2976);
  v1 = *(_QWORD *)(v0 + 2960);
  v2 = *(_QWORD *)(v0 + 2952);
  v3 = *(_QWORD *)(v0 + 2944);
  v4 = *(_QWORD *)(v0 + 2928);
  v5 = *(_QWORD *)(v0 + 1136);
  v192 = *(_QWORD *)(v0 + 1128);
  v195 = *(_QWORD *)(v0 + 1144);
  v6 = *(_QWORD *)(v0 + 1120);
  v7 = *(_QWORD *)(v0 + 1112);
  v8 = *(_QWORD *)(v0 + 1104);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E1B8(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2928), (uint64_t *)&unk_1011A3FB0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2992);
    v30 = *(_QWORD *)(v0 + 2984);
    v31 = *(_QWORD *)(v0 + 2976);
    v32 = *(_QWORD *)(v0 + 2928);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.artist(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C294C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3592);
  *(_QWORD *)(*(_QWORD *)v1 + 3600) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D3BA0;
  else
    v3 = sub_1000C29B0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C29B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v1 = *(_QWORD *)(v0 + 1088);
  v195 = *(_QWORD *)(v0 + 1080);
  v198 = *(_QWORD *)(v0 + 1096);
  v2 = *(_QWORD *)(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1056);
  v192 = *(_QWORD *)(v0 + 1040);
  v201 = *(_QWORD *)(v0 + 1032);
  v5 = *(_QWORD *)(v0 + 1024);
  v6 = *(_QWORD *)(v0 + 1016);
  v7 = *(_QWORD *)(v0 + 1008);
  v8 = *(_QWORD *)(v0 + 1000);
  MusicLibraryResponse.items.getter(v4);
  sub_10031E4AC(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v198, v195);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v192 + 48))(v8, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1000), (uint64_t *)&unk_1011C7310);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 1048);
    v30 = *(_QWORD *)(v0 + 1040);
    v31 = *(_QWORD *)(v0 + 1032);
    v32 = *(_QWORD *)(v0 + 1000);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.composer(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C3618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3608);
  *(_QWORD *)(*(_QWORD *)v1 + 3616) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D4494;
  else
    v3 = sub_1000C367C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C367C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2752);
  v201 = *(_QWORD *)(v0 + 2744);
  v1 = *(_QWORD *)(v0 + 2728);
  v2 = *(_QWORD *)(v0 + 2720);
  v3 = *(_QWORD *)(v0 + 2712);
  v4 = *(_QWORD *)(v0 + 2696);
  v5 = *(_QWORD *)(v0 + 984);
  v192 = *(_QWORD *)(v0 + 976);
  v195 = *(_QWORD *)(v0 + 992);
  v6 = *(_QWORD *)(v0 + 968);
  v7 = *(_QWORD *)(v0 + 960);
  v8 = *(_QWORD *)(v0 + 952);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E308(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2696), &qword_10119ED08);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2760);
    v30 = *(_QWORD *)(v0 + 2752);
    v31 = *(_QWORD *)(v0 + 2744);
    v32 = *(_QWORD *)(v0 + 2696);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.genre(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C42DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3624);
  *(_QWORD *)(*(_QWORD *)v1 + 3632) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D4D88;
  else
    v3 = sub_1000C4340;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C4340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2496);
  v201 = *(_QWORD *)(v0 + 2488);
  v1 = *(_QWORD *)(v0 + 2472);
  v2 = *(_QWORD *)(v0 + 2464);
  v3 = *(_QWORD *)(v0 + 2456);
  v4 = *(_QWORD *)(v0 + 2440);
  v5 = *(_QWORD *)(v0 + 936);
  v192 = *(_QWORD *)(v0 + 928);
  v195 = *(_QWORD *)(v0 + 944);
  v6 = *(_QWORD *)(v0 + 920);
  v7 = *(_QWORD *)(v0 + 912);
  v8 = *(_QWORD *)(v0 + 904);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E378(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2440), &qword_10119D3A0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2504);
    v30 = *(_QWORD *)(v0 + 2496);
    v31 = *(_QWORD *)(v0 + 2488);
    v32 = *(_QWORD *)(v0 + 2440);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.musicMovie(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C4FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3640);
  *(_QWORD *)(*(_QWORD *)v1 + 3648) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D567C;
  else
    v3 = sub_1000C5004;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C5004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2624);
  v201 = *(_QWORD *)(v0 + 2616);
  v1 = *(_QWORD *)(v0 + 2600);
  v2 = *(_QWORD *)(v0 + 2592);
  v3 = *(_QWORD *)(v0 + 2584);
  v4 = *(_QWORD *)(v0 + 2568);
  v5 = *(_QWORD *)(v0 + 888);
  v192 = *(_QWORD *)(v0 + 880);
  v195 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 872);
  v7 = *(_QWORD *)(v0 + 864);
  v8 = *(_QWORD *)(v0 + 856);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E35C(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2568), &qword_1011B59B0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2632);
    v30 = *(_QWORD *)(v0 + 2624);
    v31 = *(_QWORD *)(v0 + 2616);
    v32 = *(_QWORD *)(v0 + 2568);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.musicVideo(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C5C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3656);
  *(_QWORD *)(*(_QWORD *)v1 + 3664) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D5F70;
  else
    v3 = sub_1000C5CC8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C5CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2368);
  v201 = *(_QWORD *)(v0 + 2360);
  v1 = *(_QWORD *)(v0 + 2344);
  v2 = *(_QWORD *)(v0 + 2336);
  v3 = *(_QWORD *)(v0 + 2328);
  v4 = *(_QWORD *)(v0 + 2312);
  v5 = *(_QWORD *)(v0 + 840);
  v192 = *(_QWORD *)(v0 + 832);
  v195 = *(_QWORD *)(v0 + 848);
  v6 = *(_QWORD *)(v0 + 824);
  v7 = *(_QWORD *)(v0 + 816);
  v8 = *(_QWORD *)(v0 + 808);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E394(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2312), &qword_1011A30F0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2376);
    v30 = *(_QWORD *)(v0 + 2368);
    v31 = *(_QWORD *)(v0 + 2360);
    v32 = *(_QWORD *)(v0 + 2312);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.playlist(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C6928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3672);
  *(_QWORD *)(*(_QWORD *)v1 + 3680) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D6864;
  else
    v3 = sub_1000C698C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C698C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 2032);
  v201 = *(_QWORD *)(v0 + 2024);
  v1 = *(_QWORD *)(v0 + 2008);
  v2 = *(_QWORD *)(v0 + 2000);
  v3 = *(_QWORD *)(v0 + 1992);
  v4 = *(_QWORD *)(v0 + 1976);
  v5 = *(_QWORD *)(v0 + 792);
  v192 = *(_QWORD *)(v0 + 784);
  v195 = *(_QWORD *)(v0 + 800);
  v6 = *(_QWORD *)(v0 + 776);
  v7 = *(_QWORD *)(v0 + 768);
  v8 = *(_QWORD *)(v0 + 760);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E3E8(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1976), &qword_10119E480);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 2040);
    v30 = *(_QWORD *)(v0 + 2032);
    v31 = *(_QWORD *)(v0 + 2024);
    v32 = *(_QWORD *)(v0 + 1976);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.song(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C75EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3688);
  *(_QWORD *)(*(_QWORD *)v1 + 3696) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D7158;
  else
    v3 = sub_1000C7650;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C7650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 1800);
  v201 = *(_QWORD *)(v0 + 1792);
  v1 = *(_QWORD *)(v0 + 1776);
  v2 = *(_QWORD *)(v0 + 1768);
  v3 = *(_QWORD *)(v0 + 1760);
  v4 = *(_QWORD *)(v0 + 1744);
  v5 = *(_QWORD *)(v0 + 744);
  v192 = *(_QWORD *)(v0 + 736);
  v195 = *(_QWORD *)(v0 + 752);
  v6 = *(_QWORD *)(v0 + 728);
  v7 = *(_QWORD *)(v0 + 720);
  v8 = *(_QWORD *)(v0 + 712);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E420(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1744), &qword_10119FD80);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 1808);
    v30 = *(_QWORD *)(v0 + 1800);
    v31 = *(_QWORD *)(v0 + 1792);
    v32 = *(_QWORD *)(v0 + 1744);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.tvEpisode(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C82B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3704);
  *(_QWORD *)(*(_QWORD *)v1 + 3712) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D7A4C;
  else
    v3 = sub_1000C8314;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C8314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 1672);
  v201 = *(_QWORD *)(v0 + 1664);
  v1 = *(_QWORD *)(v0 + 1648);
  v2 = *(_QWORD *)(v0 + 1640);
  v3 = *(_QWORD *)(v0 + 1632);
  v4 = *(_QWORD *)(v0 + 1616);
  v5 = *(_QWORD *)(v0 + 696);
  v192 = *(_QWORD *)(v0 + 688);
  v195 = *(_QWORD *)(v0 + 704);
  v6 = *(_QWORD *)(v0 + 680);
  v7 = *(_QWORD *)(v0 + 672);
  v8 = *(_QWORD *)(v0 + 664);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E43C(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1616), (uint64_t *)&unk_1011C7320);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 1680);
    v30 = *(_QWORD *)(v0 + 1672);
    v31 = *(_QWORD *)(v0 + 1664);
    v32 = *(_QWORD *)(v0 + 1616);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.tvSeason(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C8F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3720);
  *(_QWORD *)(*(_QWORD *)v1 + 3728) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000D8340;
  else
    v3 = sub_1000C8FD8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000C8FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = *(_QWORD *)(v0 + 1544);
  v201 = *(_QWORD *)(v0 + 1536);
  v1 = *(_QWORD *)(v0 + 1520);
  v2 = *(_QWORD *)(v0 + 1512);
  v3 = *(_QWORD *)(v0 + 1504);
  v4 = *(_QWORD *)(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 648);
  v192 = *(_QWORD *)(v0 + 640);
  v195 = *(_QWORD *)(v0 + 656);
  v6 = *(_QWORD *)(v0 + 632);
  v7 = *(_QWORD *)(v0 + 624);
  v8 = *(_QWORD *)(v0 + 616);
  MusicLibraryResponse.items.getter(v8);
  sub_10031E458(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v195, v192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v4, 1, v201) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1488), (uint64_t *)&unk_1011D1410);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
    v10 = *(_QWORD *)(v0 + 1248);
    v11 = *(_QWORD *)(v0 + 1216);
    v12 = *(_QWORD *)(v0 + 1200);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    v13 = v9(v11, v10, v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 3544);
      v196 = *(_QWORD *)(v0 + 3216);
      v199 = *(_QWORD *)(v0 + 3208);
      v202 = *(_QWORD *)(v0 + 3248);
      v193 = *(_QWORD *)(v0 + 1248);
      v17 = *(_QWORD *)(v0 + 1224);
      v18 = *(_QWORD *)(v0 + 1216);
      v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3552);
      v189 = *(_QWORD *)(v0 + 1208);
      v19 = *(_QWORD *)(v0 + 1200);
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(32, -1);
      v204 = v21;
      *(_DWORD *)v20 = 134349314;
      *(_QWORD *)(v0 + 560) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
      *(_WORD *)(v20 + 12) = 2082;
      v187(v17, v18, v19);
      v22 = String.init<A>(describing:)(v17, v19);
      *(_QWORD *)(v0 + 552) = sub_100322200(v22, v23, &v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
      v24 = swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v25(v18, v19, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No library item found for id: %{public}lld, kind: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      ((void (*)(uint64_t, uint64_t))v25)(v193, v19);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v202, v199);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 3248);
      v39 = *(_QWORD *)(v0 + 3216);
      v40 = *(_QWORD *)(v0 + 3208);
      v41 = *(_QWORD *)(v0 + 1248);
      v42 = *(_QWORD *)(v0 + 1216);
      v43 = *(_QWORD *)(v0 + 1208);
      v44 = *(_QWORD *)(v0 + 1200);

      v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v42, v44);
      v45(v41, v44);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v46 = *(_QWORD *)(v0 + 592);
    v47 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 3248);
    v27 = *(_QWORD *)(v0 + 3216);
    v28 = *(_QWORD *)(v0 + 3208);
    v29 = *(_QWORD *)(v0 + 1552);
    v30 = *(_QWORD *)(v0 + 1544);
    v31 = *(_QWORD *)(v0 + 1536);
    v32 = *(_QWORD *)(v0 + 1488);
    v33 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1208) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v0 + 1200));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    v34(v29, v32, v31);
    v34(v33, v29, v31);
    v35 = enum case for GenericMusicItem.tvShow(_:);
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104))(v33, v35, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  v48 = *(_QWORD *)(v0 + 3240);
  v49 = *(_QWORD *)(v0 + 3232);
  v50 = *(_QWORD *)(v0 + 3224);
  v51 = *(_QWORD *)(v0 + 3200);
  v52 = *(_QWORD *)(v0 + 3176);
  v53 = *(_QWORD *)(v0 + 3152);
  v54 = *(_QWORD *)(v0 + 3128);
  v55 = *(_QWORD *)(v0 + 3120);
  v56 = *(_QWORD *)(v0 + 3096);
  v58 = *(_QWORD *)(v0 + 3088);
  v59 = *(_QWORD *)(v0 + 3064);
  v60 = *(_QWORD *)(v0 + 3056);
  v61 = *(_QWORD *)(v0 + 3048);
  v62 = *(_QWORD *)(v0 + 3024);
  v63 = *(_QWORD *)(v0 + 3000);
  v64 = *(_QWORD *)(v0 + 2992);
  v65 = *(_QWORD *)(v0 + 2968);
  v66 = *(_QWORD *)(v0 + 2960);
  v67 = *(_QWORD *)(v0 + 2936);
  v68 = *(_QWORD *)(v0 + 2928);
  v69 = *(_QWORD *)(v0 + 2920);
  v70 = *(_QWORD *)(v0 + 2896);
  v71 = *(_QWORD *)(v0 + 2872);
  v72 = *(_QWORD *)(v0 + 2848);
  v73 = *(_QWORD *)(v0 + 2824);
  v74 = *(_QWORD *)(v0 + 2816);
  v75 = *(_QWORD *)(v0 + 2792);
  v76 = *(_QWORD *)(v0 + 2768);
  v77 = *(_QWORD *)(v0 + 2760);
  v78 = *(_QWORD *)(v0 + 2736);
  v79 = *(_QWORD *)(v0 + 2728);
  v80 = *(_QWORD *)(v0 + 2704);
  v81 = *(_QWORD *)(v0 + 2696);
  v82 = *(_QWORD *)(v0 + 2688);
  v83 = *(_QWORD *)(v0 + 2664);
  v84 = *(_QWORD *)(v0 + 2640);
  v85 = *(_QWORD *)(v0 + 2632);
  v86 = *(_QWORD *)(v0 + 2608);
  v87 = *(_QWORD *)(v0 + 2600);
  v88 = *(_QWORD *)(v0 + 2576);
  v89 = *(_QWORD *)(v0 + 2568);
  v90 = *(_QWORD *)(v0 + 2560);
  v91 = *(_QWORD *)(v0 + 2536);
  v92 = *(_QWORD *)(v0 + 2512);
  v93 = *(_QWORD *)(v0 + 2504);
  v94 = *(_QWORD *)(v0 + 2480);
  v95 = *(_QWORD *)(v0 + 2472);
  v96 = *(_QWORD *)(v0 + 2448);
  v97 = *(_QWORD *)(v0 + 2440);
  v98 = *(_QWORD *)(v0 + 2432);
  v99 = *(_QWORD *)(v0 + 2408);
  v100 = *(_QWORD *)(v0 + 2384);
  v101 = *(_QWORD *)(v0 + 2376);
  v102 = *(_QWORD *)(v0 + 2352);
  v103 = *(_QWORD *)(v0 + 2344);
  v104 = *(_QWORD *)(v0 + 2320);
  v105 = *(_QWORD *)(v0 + 2312);
  v106 = *(_QWORD *)(v0 + 2304);
  v107 = *(_QWORD *)(v0 + 2280);
  v108 = *(_QWORD *)(v0 + 2256);
  v109 = *(_QWORD *)(v0 + 2232);
  v110 = *(_QWORD *)(v0 + 2208);
  v111 = *(_QWORD *)(v0 + 2200);
  v112 = *(_QWORD *)(v0 + 2176);
  v113 = *(_QWORD *)(v0 + 2152);
  v114 = *(_QWORD *)(v0 + 2128);
  v115 = *(_QWORD *)(v0 + 2104);
  v116 = *(_QWORD *)(v0 + 2096);
  v117 = *(_QWORD *)(v0 + 2072);
  v118 = *(_QWORD *)(v0 + 2048);
  v119 = *(_QWORD *)(v0 + 2040);
  v120 = *(_QWORD *)(v0 + 2016);
  v121 = *(_QWORD *)(v0 + 2008);
  v122 = *(_QWORD *)(v0 + 1984);
  v123 = *(_QWORD *)(v0 + 1976);
  v124 = *(_QWORD *)(v0 + 1968);
  v125 = *(_QWORD *)(v0 + 1944);
  v126 = *(_QWORD *)(v0 + 1920);
  v127 = *(_QWORD *)(v0 + 1896);
  v128 = *(_QWORD *)(v0 + 1872);
  v129 = *(_QWORD *)(v0 + 1864);
  v130 = *(_QWORD *)(v0 + 1840);
  v131 = *(_QWORD *)(v0 + 1816);
  v132 = *(_QWORD *)(v0 + 1808);
  v133 = *(_QWORD *)(v0 + 1784);
  v134 = *(_QWORD *)(v0 + 1776);
  v135 = *(_QWORD *)(v0 + 1752);
  v136 = *(_QWORD *)(v0 + 1744);
  v137 = *(_QWORD *)(v0 + 1736);
  v138 = *(_QWORD *)(v0 + 1712);
  v139 = *(_QWORD *)(v0 + 1688);
  v140 = *(_QWORD *)(v0 + 1680);
  v141 = *(_QWORD *)(v0 + 1656);
  v142 = *(_QWORD *)(v0 + 1648);
  v143 = *(_QWORD *)(v0 + 1624);
  v144 = *(_QWORD *)(v0 + 1616);
  v145 = *(_QWORD *)(v0 + 1608);
  v146 = *(_QWORD *)(v0 + 1584);
  v147 = *(_QWORD *)(v0 + 1560);
  v148 = *(_QWORD *)(v0 + 1552);
  v149 = *(_QWORD *)(v0 + 1528);
  v150 = *(_QWORD *)(v0 + 1520);
  v151 = *(_QWORD *)(v0 + 1496);
  v152 = *(_QWORD *)(v0 + 1488);
  v153 = *(_QWORD *)(v0 + 1480);
  v154 = *(_QWORD *)(v0 + 1456);
  v155 = *(_QWORD *)(v0 + 1432);
  v156 = *(_QWORD *)(v0 + 1408);
  v157 = *(_QWORD *)(v0 + 1384);
  v158 = *(_QWORD *)(v0 + 1376);
  v159 = *(_QWORD *)(v0 + 1352);
  v160 = *(_QWORD *)(v0 + 1328);
  v161 = *(_QWORD *)(v0 + 1304);
  v162 = *(_QWORD *)(v0 + 1280);
  v163 = *(_QWORD *)(v0 + 1272);
  v164 = *(_QWORD *)(v0 + 1248);
  v165 = *(_QWORD *)(v0 + 1240);
  v166 = *(_QWORD *)(v0 + 1232);
  v167 = *(_QWORD *)(v0 + 1224);
  v168 = *(_QWORD *)(v0 + 1216);
  v169 = *(_QWORD *)(v0 + 1192);
  v170 = *(_QWORD *)(v0 + 1168);
  v171 = *(_QWORD *)(v0 + 1144);
  v172 = *(_QWORD *)(v0 + 1120);
  v173 = *(_QWORD *)(v0 + 1096);
  v174 = *(_QWORD *)(v0 + 1072);
  v175 = *(_QWORD *)(v0 + 1048);
  v176 = *(_QWORD *)(v0 + 1024);
  v177 = *(_QWORD *)(v0 + 1000);
  v178 = *(_QWORD *)(v0 + 992);
  v179 = *(_QWORD *)(v0 + 968);
  v180 = *(_QWORD *)(v0 + 944);
  v181 = *(_QWORD *)(v0 + 920);
  v182 = *(_QWORD *)(v0 + 896);
  v183 = *(_QWORD *)(v0 + 872);
  v184 = *(_QWORD *)(v0 + 848);
  v185 = *(_QWORD *)(v0 + 824);
  v186 = *(_QWORD *)(v0 + 800);
  v188 = *(_QWORD *)(v0 + 776);
  v190 = *(_QWORD *)(v0 + 752);
  v191 = *(_QWORD *)(v0 + 728);
  v194 = *(_QWORD *)(v0 + 704);
  v197 = *(_QWORD *)(v0 + 680);
  v200 = *(_QWORD *)(v0 + 656);
  v203 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v188);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C9C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3192) + 8))(*(_QWORD *)(v0 + 3200), *(_QWORD *)(v0 + 3184));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CA510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3040) + 8))(*(_QWORD *)(v0 + 3048), *(_QWORD *)(v0 + 3032));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CADE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2912) + 8))(*(_QWORD *)(v0 + 2920), *(_QWORD *)(v0 + 2904));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CB6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2808) + 8))(*(_QWORD *)(v0 + 2816), *(_QWORD *)(v0 + 2800));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CBF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2680) + 8))(*(_QWORD *)(v0 + 2688), *(_QWORD *)(v0 + 2672));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CC870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2552) + 8))(*(_QWORD *)(v0 + 2560), *(_QWORD *)(v0 + 2544));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CD148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2424) + 8))(*(_QWORD *)(v0 + 2432), *(_QWORD *)(v0 + 2416));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CDA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2296) + 8))(*(_QWORD *)(v0 + 2304), *(_QWORD *)(v0 + 2288));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CE2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2192) + 8))(*(_QWORD *)(v0 + 2200), *(_QWORD *)(v0 + 2184));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CEBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2088) + 8))(*(_QWORD *)(v0 + 2096), *(_QWORD *)(v0 + 2080));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CF4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1960) + 8))(*(_QWORD *)(v0 + 1968), *(_QWORD *)(v0 + 1952));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CFD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1856) + 8))(*(_QWORD *)(v0 + 1864), *(_QWORD *)(v0 + 1848));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D0658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1728) + 8))(*(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1720));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D0F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1600) + 8))(*(_QWORD *)(v0 + 1608), *(_QWORD *)(v0 + 1592));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D1808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1472) + 8))(*(_QWORD *)(v0 + 1480), *(_QWORD *)(v0 + 1464));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D20E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1368) + 8))(*(_QWORD *)(v0 + 1376), *(_QWORD *)(v0 + 1360));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 3240);
  v5 = *(_QWORD *)(v0 + 3232);
  v6 = *(_QWORD *)(v0 + 3224);
  v7 = *(_QWORD *)(v0 + 3200);
  v8 = *(_QWORD *)(v0 + 3176);
  v9 = *(_QWORD *)(v0 + 3152);
  v10 = *(_QWORD *)(v0 + 3128);
  v11 = *(_QWORD *)(v0 + 3120);
  v12 = *(_QWORD *)(v0 + 3096);
  v14 = *(_QWORD *)(v0 + 3088);
  v15 = *(_QWORD *)(v0 + 3064);
  v16 = *(_QWORD *)(v0 + 3056);
  v17 = *(_QWORD *)(v0 + 3048);
  v18 = *(_QWORD *)(v0 + 3024);
  v19 = *(_QWORD *)(v0 + 3000);
  v20 = *(_QWORD *)(v0 + 2992);
  v21 = *(_QWORD *)(v0 + 2968);
  v22 = *(_QWORD *)(v0 + 2960);
  v23 = *(_QWORD *)(v0 + 2936);
  v24 = *(_QWORD *)(v0 + 2928);
  v25 = *(_QWORD *)(v0 + 2920);
  v26 = *(_QWORD *)(v0 + 2896);
  v27 = *(_QWORD *)(v0 + 2872);
  v28 = *(_QWORD *)(v0 + 2848);
  v29 = *(_QWORD *)(v0 + 2824);
  v30 = *(_QWORD *)(v0 + 2816);
  v31 = *(_QWORD *)(v0 + 2792);
  v32 = *(_QWORD *)(v0 + 2768);
  v33 = *(_QWORD *)(v0 + 2760);
  v34 = *(_QWORD *)(v0 + 2736);
  v35 = *(_QWORD *)(v0 + 2728);
  v36 = *(_QWORD *)(v0 + 2704);
  v37 = *(_QWORD *)(v0 + 2696);
  v38 = *(_QWORD *)(v0 + 2688);
  v39 = *(_QWORD *)(v0 + 2664);
  v40 = *(_QWORD *)(v0 + 2640);
  v41 = *(_QWORD *)(v0 + 2632);
  v42 = *(_QWORD *)(v0 + 2608);
  v43 = *(_QWORD *)(v0 + 2600);
  v44 = *(_QWORD *)(v0 + 2576);
  v45 = *(_QWORD *)(v0 + 2568);
  v46 = *(_QWORD *)(v0 + 2560);
  v47 = *(_QWORD *)(v0 + 2536);
  v48 = *(_QWORD *)(v0 + 2512);
  v49 = *(_QWORD *)(v0 + 2504);
  v50 = *(_QWORD *)(v0 + 2480);
  v51 = *(_QWORD *)(v0 + 2472);
  v52 = *(_QWORD *)(v0 + 2448);
  v53 = *(_QWORD *)(v0 + 2440);
  v54 = *(_QWORD *)(v0 + 2432);
  v55 = *(_QWORD *)(v0 + 2408);
  v56 = *(_QWORD *)(v0 + 2384);
  v57 = *(_QWORD *)(v0 + 2376);
  v58 = *(_QWORD *)(v0 + 2352);
  v59 = *(_QWORD *)(v0 + 2344);
  v60 = *(_QWORD *)(v0 + 2320);
  v61 = *(_QWORD *)(v0 + 2312);
  v62 = *(_QWORD *)(v0 + 2304);
  v63 = *(_QWORD *)(v0 + 2280);
  v64 = *(_QWORD *)(v0 + 2256);
  v65 = *(_QWORD *)(v0 + 2232);
  v66 = *(_QWORD *)(v0 + 2208);
  v67 = *(_QWORD *)(v0 + 2200);
  v68 = *(_QWORD *)(v0 + 2176);
  v69 = *(_QWORD *)(v0 + 2152);
  v70 = *(_QWORD *)(v0 + 2128);
  v71 = *(_QWORD *)(v0 + 2104);
  v72 = *(_QWORD *)(v0 + 2096);
  v73 = *(_QWORD *)(v0 + 2072);
  v74 = *(_QWORD *)(v0 + 2048);
  v75 = *(_QWORD *)(v0 + 2040);
  v76 = *(_QWORD *)(v0 + 2016);
  v77 = *(_QWORD *)(v0 + 2008);
  v78 = *(_QWORD *)(v0 + 1984);
  v79 = *(_QWORD *)(v0 + 1976);
  v80 = *(_QWORD *)(v0 + 1968);
  v81 = *(_QWORD *)(v0 + 1944);
  v82 = *(_QWORD *)(v0 + 1920);
  v83 = *(_QWORD *)(v0 + 1896);
  v84 = *(_QWORD *)(v0 + 1872);
  v85 = *(_QWORD *)(v0 + 1864);
  v86 = *(_QWORD *)(v0 + 1840);
  v87 = *(_QWORD *)(v0 + 1816);
  v88 = *(_QWORD *)(v0 + 1808);
  v89 = *(_QWORD *)(v0 + 1784);
  v90 = *(_QWORD *)(v0 + 1776);
  v91 = *(_QWORD *)(v0 + 1752);
  v92 = *(_QWORD *)(v0 + 1744);
  v93 = *(_QWORD *)(v0 + 1736);
  v94 = *(_QWORD *)(v0 + 1712);
  v95 = *(_QWORD *)(v0 + 1688);
  v96 = *(_QWORD *)(v0 + 1680);
  v97 = *(_QWORD *)(v0 + 1656);
  v98 = *(_QWORD *)(v0 + 1648);
  v99 = *(_QWORD *)(v0 + 1624);
  v100 = *(_QWORD *)(v0 + 1616);
  v101 = *(_QWORD *)(v0 + 1608);
  v102 = *(_QWORD *)(v0 + 1584);
  v103 = *(_QWORD *)(v0 + 1560);
  v104 = *(_QWORD *)(v0 + 1552);
  v105 = *(_QWORD *)(v0 + 1528);
  v106 = *(_QWORD *)(v0 + 1520);
  v107 = *(_QWORD *)(v0 + 1496);
  v108 = *(_QWORD *)(v0 + 1488);
  v109 = *(_QWORD *)(v0 + 1480);
  v110 = *(_QWORD *)(v0 + 1456);
  v111 = *(_QWORD *)(v0 + 1432);
  v112 = *(_QWORD *)(v0 + 1408);
  v113 = *(_QWORD *)(v0 + 1384);
  v114 = *(_QWORD *)(v0 + 1376);
  v115 = *(_QWORD *)(v0 + 1352);
  v116 = *(_QWORD *)(v0 + 1328);
  v117 = *(_QWORD *)(v0 + 1304);
  v118 = *(_QWORD *)(v0 + 1280);
  v119 = *(_QWORD *)(v0 + 1272);
  v120 = *(_QWORD *)(v0 + 1248);
  v121 = *(_QWORD *)(v0 + 1240);
  v122 = *(_QWORD *)(v0 + 1232);
  v123 = *(_QWORD *)(v0 + 1224);
  v124 = *(_QWORD *)(v0 + 1216);
  v125 = *(_QWORD *)(v0 + 1192);
  v126 = *(_QWORD *)(v0 + 1168);
  v127 = *(_QWORD *)(v0 + 1144);
  v128 = *(_QWORD *)(v0 + 1120);
  v129 = *(_QWORD *)(v0 + 1096);
  v130 = *(_QWORD *)(v0 + 1072);
  v131 = *(_QWORD *)(v0 + 1048);
  v132 = *(_QWORD *)(v0 + 1024);
  v133 = *(_QWORD *)(v0 + 1000);
  v134 = *(_QWORD *)(v0 + 992);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 944);
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 896);
  v139 = *(_QWORD *)(v0 + 872);
  v140 = *(_QWORD *)(v0 + 848);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 800);
  v143 = *(_QWORD *)(v0 + 776);
  v144 = *(_QWORD *)(v0 + 752);
  v145 = *(_QWORD *)(v0 + 728);
  v146 = *(_QWORD *)(v0 + 704);
  v147 = *(_QWORD *)(v0 + 680);
  v148 = *(_QWORD *)(v0 + 656);
  v149 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D29B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1184) + 8))(*(_QWORD *)(v0 + 1192), *(_QWORD *)(v0 + 1176));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D32AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1136) + 8))(*(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1128));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D3BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1088) + 8))(*(_QWORD *)(v0 + 1096), *(_QWORD *)(v0 + 1080));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D4494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 984) + 8))(*(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 976));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D4D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 936) + 8))(*(_QWORD *)(v0 + 944), *(_QWORD *)(v0 + 928));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D567C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 888) + 8))(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 880));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D5F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 840) + 8))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 832));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D6864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 792) + 8))(*(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 784));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D7158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 744) + 8))(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 736));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D7A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 696) + 8))(*(_QWORD *)(v0 + 704), *(_QWORD *)(v0 + 688));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D8340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v1 = *(_QWORD *)(v0 + 3248);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(_QWORD *)(v0 + 1248);
  v5 = *(_QWORD *)(v0 + 1208);
  v6 = *(_QWORD *)(v0 + 1200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 3240);
  v8 = *(_QWORD *)(v0 + 3232);
  v9 = *(_QWORD *)(v0 + 3224);
  v10 = *(_QWORD *)(v0 + 3200);
  v11 = *(_QWORD *)(v0 + 3176);
  v12 = *(_QWORD *)(v0 + 3152);
  v13 = *(_QWORD *)(v0 + 3128);
  v14 = *(_QWORD *)(v0 + 3120);
  v15 = *(_QWORD *)(v0 + 3096);
  v17 = *(_QWORD *)(v0 + 3088);
  v18 = *(_QWORD *)(v0 + 3064);
  v19 = *(_QWORD *)(v0 + 3056);
  v20 = *(_QWORD *)(v0 + 3048);
  v21 = *(_QWORD *)(v0 + 3024);
  v22 = *(_QWORD *)(v0 + 3000);
  v23 = *(_QWORD *)(v0 + 2992);
  v24 = *(_QWORD *)(v0 + 2968);
  v25 = *(_QWORD *)(v0 + 2960);
  v26 = *(_QWORD *)(v0 + 2936);
  v27 = *(_QWORD *)(v0 + 2928);
  v28 = *(_QWORD *)(v0 + 2920);
  v29 = *(_QWORD *)(v0 + 2896);
  v30 = *(_QWORD *)(v0 + 2872);
  v31 = *(_QWORD *)(v0 + 2848);
  v32 = *(_QWORD *)(v0 + 2824);
  v33 = *(_QWORD *)(v0 + 2816);
  v34 = *(_QWORD *)(v0 + 2792);
  v35 = *(_QWORD *)(v0 + 2768);
  v36 = *(_QWORD *)(v0 + 2760);
  v37 = *(_QWORD *)(v0 + 2736);
  v38 = *(_QWORD *)(v0 + 2728);
  v39 = *(_QWORD *)(v0 + 2704);
  v40 = *(_QWORD *)(v0 + 2696);
  v41 = *(_QWORD *)(v0 + 2688);
  v42 = *(_QWORD *)(v0 + 2664);
  v43 = *(_QWORD *)(v0 + 2640);
  v44 = *(_QWORD *)(v0 + 2632);
  v45 = *(_QWORD *)(v0 + 2608);
  v46 = *(_QWORD *)(v0 + 2600);
  v47 = *(_QWORD *)(v0 + 2576);
  v48 = *(_QWORD *)(v0 + 2568);
  v49 = *(_QWORD *)(v0 + 2560);
  v50 = *(_QWORD *)(v0 + 2536);
  v51 = *(_QWORD *)(v0 + 2512);
  v52 = *(_QWORD *)(v0 + 2504);
  v53 = *(_QWORD *)(v0 + 2480);
  v54 = *(_QWORD *)(v0 + 2472);
  v55 = *(_QWORD *)(v0 + 2448);
  v56 = *(_QWORD *)(v0 + 2440);
  v57 = *(_QWORD *)(v0 + 2432);
  v58 = *(_QWORD *)(v0 + 2408);
  v59 = *(_QWORD *)(v0 + 2384);
  v60 = *(_QWORD *)(v0 + 2376);
  v61 = *(_QWORD *)(v0 + 2352);
  v62 = *(_QWORD *)(v0 + 2344);
  v63 = *(_QWORD *)(v0 + 2320);
  v64 = *(_QWORD *)(v0 + 2312);
  v65 = *(_QWORD *)(v0 + 2304);
  v66 = *(_QWORD *)(v0 + 2280);
  v67 = *(_QWORD *)(v0 + 2256);
  v68 = *(_QWORD *)(v0 + 2232);
  v69 = *(_QWORD *)(v0 + 2208);
  v70 = *(_QWORD *)(v0 + 2200);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  v73 = *(_QWORD *)(v0 + 2128);
  v74 = *(_QWORD *)(v0 + 2104);
  v75 = *(_QWORD *)(v0 + 2096);
  v76 = *(_QWORD *)(v0 + 2072);
  v77 = *(_QWORD *)(v0 + 2048);
  v78 = *(_QWORD *)(v0 + 2040);
  v79 = *(_QWORD *)(v0 + 2016);
  v80 = *(_QWORD *)(v0 + 2008);
  v81 = *(_QWORD *)(v0 + 1984);
  v82 = *(_QWORD *)(v0 + 1976);
  v83 = *(_QWORD *)(v0 + 1968);
  v84 = *(_QWORD *)(v0 + 1944);
  v85 = *(_QWORD *)(v0 + 1920);
  v86 = *(_QWORD *)(v0 + 1896);
  v87 = *(_QWORD *)(v0 + 1872);
  v88 = *(_QWORD *)(v0 + 1864);
  v89 = *(_QWORD *)(v0 + 1840);
  v90 = *(_QWORD *)(v0 + 1816);
  v91 = *(_QWORD *)(v0 + 1808);
  v92 = *(_QWORD *)(v0 + 1784);
  v93 = *(_QWORD *)(v0 + 1776);
  v94 = *(_QWORD *)(v0 + 1752);
  v95 = *(_QWORD *)(v0 + 1744);
  v96 = *(_QWORD *)(v0 + 1736);
  v97 = *(_QWORD *)(v0 + 1712);
  v98 = *(_QWORD *)(v0 + 1688);
  v99 = *(_QWORD *)(v0 + 1680);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v102 = *(_QWORD *)(v0 + 1624);
  v103 = *(_QWORD *)(v0 + 1616);
  v104 = *(_QWORD *)(v0 + 1608);
  v105 = *(_QWORD *)(v0 + 1584);
  v106 = *(_QWORD *)(v0 + 1560);
  v107 = *(_QWORD *)(v0 + 1552);
  v108 = *(_QWORD *)(v0 + 1528);
  v109 = *(_QWORD *)(v0 + 1520);
  v110 = *(_QWORD *)(v0 + 1496);
  v111 = *(_QWORD *)(v0 + 1488);
  v112 = *(_QWORD *)(v0 + 1480);
  v113 = *(_QWORD *)(v0 + 1456);
  v114 = *(_QWORD *)(v0 + 1432);
  v115 = *(_QWORD *)(v0 + 1408);
  v116 = *(_QWORD *)(v0 + 1384);
  v117 = *(_QWORD *)(v0 + 1376);
  v118 = *(_QWORD *)(v0 + 1352);
  v119 = *(_QWORD *)(v0 + 1328);
  v120 = *(_QWORD *)(v0 + 1304);
  v121 = *(_QWORD *)(v0 + 1280);
  v122 = *(_QWORD *)(v0 + 1272);
  v123 = *(_QWORD *)(v0 + 1248);
  v124 = *(_QWORD *)(v0 + 1240);
  v125 = *(_QWORD *)(v0 + 1232);
  v126 = *(_QWORD *)(v0 + 1224);
  v127 = *(_QWORD *)(v0 + 1216);
  v128 = *(_QWORD *)(v0 + 1192);
  v129 = *(_QWORD *)(v0 + 1168);
  v130 = *(_QWORD *)(v0 + 1144);
  v131 = *(_QWORD *)(v0 + 1120);
  v132 = *(_QWORD *)(v0 + 1096);
  v133 = *(_QWORD *)(v0 + 1072);
  v134 = *(_QWORD *)(v0 + 1048);
  v135 = *(_QWORD *)(v0 + 1024);
  v136 = *(_QWORD *)(v0 + 1000);
  v137 = *(_QWORD *)(v0 + 992);
  v138 = *(_QWORD *)(v0 + 968);
  v139 = *(_QWORD *)(v0 + 944);
  v140 = *(_QWORD *)(v0 + 920);
  v141 = *(_QWORD *)(v0 + 896);
  v142 = *(_QWORD *)(v0 + 872);
  v143 = *(_QWORD *)(v0 + 848);
  v144 = *(_QWORD *)(v0 + 824);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 752);
  v148 = *(_QWORD *)(v0 + 728);
  v149 = *(_QWORD *)(v0 + 704);
  v150 = *(_QWORD *)(v0 + 680);
  v151 = *(_QWORD *)(v0 + 656);
  v152 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D8C34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVShowFilter.id.getter, a2);
}

uint64_t sub_1000D8C40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVSeasonFilter.id.getter, a2);
}

uint64_t sub_1000D8C60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryGenreFilter.id.getter, a2);
}

uint64_t sub_1000D8C6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryComposerFilter.id.getter, a2);
}

uint64_t sub_1000D8C80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t sub_1000D8C8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_1000D8C98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_1000D8CA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_1000D8CB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_1000D8CC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of RecordLabelFilter.id.getter, a2);
}

uint64_t sub_1000D8CD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of RadioShowFilter.id.getter, a2);
}

uint64_t sub_1000D8CE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_1000D8CEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1000D8CF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of GenreFilter.id.getter, a2);
}

uint64_t sub_1000D8D04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of CuratorFilter.id.getter, a2);
}

uint64_t sub_1000D8D10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

void sub_1000D8D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = *(void (**)(char *, __n128))(v1
                                              + OBJC_IVAR____TtC5Music26LibraryDownloadsController_didUpdateDownloadQueue);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_didUpdateDownloadQueue + 8);
    v16 = a1;
    v17 = v2 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue;
    v18 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue, v34, 0, 0);
    v19 = v17;
    a1 = v16;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v13, v19, v4, v18);
    v20 = swift_retain();
    v14(v13, v20);
    sub_10004BA30((uint64_t)v14, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  v21 = v2 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue;
  v22 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue, v33, 0, 0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v23(v10, v21, v4, v22);
  v24 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v4);
  dispatch thunk of Collection.endIndex.getter(&v31, v4, v24);
  v26 = v31;
  v25 = v32;
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v10, v4);
  ((void (*)(char *, uint64_t, uint64_t))v23)(v7, a1, v4);
  if (v25 == v26)
  {
    v27(v7, v4);
  }
  else
  {
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(&v31, v4, v24);
    v29 = v31;
    v28 = v32;
    v27(v7, v4);
    if (v28 != v29)
      return;
  }
  v30 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v30, "postNotificationName:object:", *MusicLibrary.downloadingStateDidChange.unsafeMutableAddressor(), 0);

}

void sub_1000D8F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  __int128 v44;
  __int128 v45;
  void *v46;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119FFF8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A0000);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A0008);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_isReloadingEnabled) == 1)
  {
    v19 = OBJC_IVAR____TtC5Music26LibraryDownloadsController_viewModel;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_viewModel))
    {
      v40 = v10;
      v41 = v15;
      v42 = v14;
      v20 = type metadata accessor for MusicLibraryDownloadQueueViewModel(0, v16);
      swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      *(_QWORD *)(v1 + v19) = MusicLibraryDownloadQueueViewModel.init()();
      swift_release();
      if (*(_QWORD *)(v1 + v19))
      {
        v21 = swift_retain();
        dispatch thunk of MusicLibraryDownloadQueueViewModel.$downloadQueue.getter(v21);
        swift_release();
        v22 = sub_100049F28(&qword_1011A0010, &qword_10119FFF8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        Publisher.dropFirst(_:)(1, v5, v22);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v23 = sub_1000A9B84();
        *(_QWORD *)&v44 = static OS_dispatch_queue.main.getter(v23, v24, v25, v26, v27, v28, v29, v30);
        v31 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v4, 1, 1, v31);
        v32 = sub_100049F28(&qword_1011A0018, &qword_1011A0000, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
        v33 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(&v44, v4, v9, v23, v32, v33);
        sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v9);
        v34 = swift_allocObject(&unk_1010B0650, 24, 7);
        swift_weakInit(v34 + 16, v1);
        v35 = sub_100049F28((unint64_t *)&unk_1011A0020, &qword_1011A0008, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v36 = v42;
        v37 = Publisher<>.sink(receiveValue:)(sub_1000D98A8, v34, v42, v35);
        v38 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v18, v36, v38);
        *((_QWORD *)&v45 + 1) = type metadata accessor for AnyCancellable(0);
        v46 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v44 = v37;
      }
      else
      {
        v46 = 0;
        v44 = 0u;
        v45 = 0u;
      }
      v39 = v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueueSubscription;
      swift_beginAccess(v39, v43, 33, 0);
      sub_1000D98B0((uint64_t)&v44, v39);
      swift_endAccess(v43);
    }
  }
}

void sub_1000D9300(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_isReloadingEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_isReloadingEnabled) = a1;
  if (v2 != (a1 & 1))
  {
    if ((a1 & 1) != 0)
    {
      sub_1000D8F90();
    }
    else
    {
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_viewModel) = 0;
      swift_release();
      v3 = v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueueSubscription;
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueueSubscription, v9, 0, 0);
      if (*(_QWORD *)(v3 + 24))
      {
        sub_100064C78(v3, (uint64_t)v6);
        v4 = v7;
        v5 = v8;
        sub_100007E68(v6, v7);
        dispatch thunk of Cancellable.cancel()(v4, v5);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v6);
      }
    }
  }
}

uint64_t sub_1000D93CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  v3 = Track.id.getter(a1);
  v5 = v4;
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_itemStateCache);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_itemStateCache, v21, 32, 0);
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16) && (v8 = sub_10079C1D4(v3, v5), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess(v21);
    swift_retain();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    swift_endAccess(v21);
    v11 = type metadata accessor for MusicLibrary(0);
    static MusicLibrary.shared.getter(v11);
    v12 = type metadata accessor for Track(0);
    v10 = MusicLibrary.state<A>(for:)(a1, v12, &protocol witness table for Track);
    swift_release();
    v14 = Track.id.getter(v13);
    v16 = v15;
    swift_beginAccess(v6, v21, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
    v20 = *v6;
    *v6 = 0x8000000000000000;
    sub_1005ED138(v10, v14, v16, isUniquelyReferenced_nonNull_native);
    v18 = *v6;
    *v6 = v20;
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v18);
    swift_endAccess(v21);
  }
  return v10;
}

double sub_1000D9544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[24];
  char v21[24];
  char v22[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v20[-v9 - 8];
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1, v4);
    v15 = v13 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue;
    v16 = swift_beginAccess(v13 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue, v21, 0, 0);
    ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v14)(v7, v15, v4, v16);
    v17 = swift_beginAccess(v15, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v15, v10, v4, v17);
    swift_endAccess(v20);
    sub_1000D8D20((uint64_t)v7);
    v18 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v18(v10, v4);
    v18(v7, v4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1000D96A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueue;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_didUpdateDownloadQueue), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_didUpdateDownloadQueue + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_viewModel));
  sub_10004FF60(v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_downloadQueueSubscription, (uint64_t *)&unk_1011A3850);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music26LibraryDownloadsController_itemStateCache));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000D9744()
{
  return type metadata accessor for LibraryDownloadsController(0);
}

uint64_t type metadata accessor for LibraryDownloadsController(uint64_t a1)
{
  uint64_t result;

  result = qword_10119FF40;
  if (!qword_10119FF40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryDownloadsController);
  return result;
}

void sub_1000D9788(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_1000D9828(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100EAA020;
    v4[2] = &unk_100EAA038;
    v4[3] = &unk_100EAA050;
    v4[4] = &unk_100EAA068;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_1000D9828(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10119FF50)
  {
    v2 = type metadata accessor for Track(255);
    v3 = type metadata accessor for MusicItemCollection(a1, v2, &protocol witness table for Track);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10119FF50);
  }
}

uint64_t sub_1000D9884()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000D98A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1000D9544(a1, v1);
}

uint64_t sub_1000D98B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D98F8()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t i;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_10048CCF0();
  if (!v1)
    return 0;
  v2 = (void *)v1;
  v3 = objc_msgSend(v0, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  }
  else
  {
    v6 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v6 >> 62))
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_23:
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v6);
    v19 = v2;
    v20 = (void *)sub_1000DA678((uint64_t)_swiftEmptyArrayStorage, v19);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    if (v20)
    {
      v21 = objc_msgSend(v20, "_viewController");
      if (v21)
      {
        v22 = v21;
        v23 = type metadata accessor for TabNavigationController();
        v24 = swift_dynamicCastClass(v22, v23);
        if (v24)
        {
          v7 = *(_QWORD *)(v24 + OBJC_IVAR____TtC5Music23TabNavigationController_tabDataSource);
          swift_unknownObjectRetain(v7, v25);
        }
        else
        {
          v7 = 0;
        }

        v20 = v19;
        v19 = v22;
      }
      else
      {
        v7 = 0;
      }

    }
    else
    {
      v7 = 0;
    }

    return v7;
  }
  if (v6 < 0)
    v18 = v6;
  else
    v18 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v18);
  v8 = result;
  if (!result)
    goto LABEL_23;
LABEL_8:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v12 = *(id *)(v6 + 8 * i + 32);
      v13 = v12;
      v14 = objc_msgSend(v12, "_uip_tabElement");

      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
        specialized Array._endMutation()(v11);
      }
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_1000D9B80(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char **v10;
  char **v11;
  char **v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char **v23;
  char **v24;
  char **v25;
  void *v26;
  uint64_t v27;
  uint64_t v30;

  v3 = objc_msgSend(v2, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v27 = v6;
      else
        v27 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        v8 = 0;
        v9 = v6 & 0xC000000000000001;
        v10 = &selRef_setMetricsOverlay_;
        v11 = &selRef_setMetricsOverlay_;
        v12 = &selRef_setMetricsOverlay_;
        v30 = v6;
        do
        {
          if (v9)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
          else
            v13 = *(id *)(v6 + 8 * v8 + 32);
          v14 = v13;
          v15 = objc_msgSend(v13, v10[106]);
          if (v15)
          {
            v16 = v15;
            v17 = objc_msgSend(v15, v11[107]);
            if (v17)
            {
              v18 = v17;
              v19 = type metadata accessor for TabNavigationController();
              v20 = swift_dynamicCastClass(v18, v19);
              if (v20)
              {
                v22 = v9;
                v23 = v10;
                v24 = v11;
                v25 = v12;
                v26 = *(void **)(v20 + OBJC_IVAR____TtC5Music23TabNavigationController_tabDataSource);
                swift_unknownObjectRetain(v26, v21);

                if (v26)
                {
                  if ((objc_msgSend(v26, "respondsToSelector:", v25[115]) & 1) != 0)
                    objc_msgSend(v26, v25[115], a1, a2);

                  swift_unknownObjectRelease(v26);
                }
                else
                {

                }
                v12 = v25;
                v11 = v24;
                v10 = v23;
                v9 = v22;
                v6 = v30;
              }
              else
              {

              }
            }
            else
            {

            }
          }
          else
          {

          }
          ++v8;
        }
        while (v7 != v8);
      }
    }
    swift_bridgeObjectRelease_n(v6, 2);
  }
}

void sub_1000D9E0C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char **v12;
  char **v13;
  char **v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char **v25;
  char **v26;
  char **v27;
  void *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v33;

  v5 = objc_msgSend(v3, "viewControllers");
  if (v5)
  {
    v6 = v5;
    v7 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v29 = v8;
      else
        v29 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v29);
      if (v9)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }
        v10 = 0;
        v11 = v8 & 0xC000000000000001;
        v12 = &selRef_setMetricsOverlay_;
        v13 = &selRef_setMetricsOverlay_;
        v14 = &selRef_setMetricsOverlay_;
        v30 = a3 & 1;
        v33 = v8;
        do
        {
          if (v11)
            v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
          else
            v15 = *(id *)(v8 + 8 * v10 + 32);
          v16 = v15;
          v17 = objc_msgSend(v15, v12[106]);
          if (v17)
          {
            v18 = v17;
            v19 = objc_msgSend(v17, v13[107]);
            if (v19)
            {
              v20 = v19;
              v21 = type metadata accessor for TabNavigationController();
              v22 = swift_dynamicCastClass(v20, v21);
              if (v22)
              {
                v24 = v11;
                v25 = v12;
                v26 = v13;
                v27 = v14;
                v28 = *(void **)(v22 + OBJC_IVAR____TtC5Music23TabNavigationController_tabDataSource);
                swift_unknownObjectRetain(v28, v23);

                if (v28)
                {
                  if ((objc_msgSend(v28, "respondsToSelector:", v27[114]) & 1) != 0)
                    objc_msgSend(v28, v27[114], a1, a2, v30);

                  swift_unknownObjectRelease(v28);
                }
                else
                {

                }
                v14 = v27;
                v13 = v26;
                v12 = v25;
                v11 = v24;
                v8 = v33;
              }
              else
              {

              }
            }
            else
            {

            }
          }
          else
          {

          }
          ++v10;
        }
        while (v9 != v10);
      }
    }
    swift_bridgeObjectRelease_n(v8, 2);
  }
}

void sub_1000DA0B8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char **v10;
  char **v11;
  char **v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  char **v23;
  char **v24;
  void *v25;
  Class isa;
  uint64_t v27;

  v3 = objc_msgSend(v2, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v27 = v6;
      else
        v27 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        v8 = 0;
        v9 = v6 & 0xC000000000000001;
        v10 = &selRef_setMetricsOverlay_;
        v11 = &selRef_setMetricsOverlay_;
        v12 = &selRef_setMetricsOverlay_;
        do
        {
          if (v9)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
          else
            v13 = *(id *)(v6 + 8 * v8 + 32);
          v14 = v13;
          v15 = objc_msgSend(v13, v10[106]);
          if (v15)
          {
            v16 = v15;
            v17 = objc_msgSend(v15, v11[107]);
            if (v17)
            {
              v18 = v17;
              v19 = type metadata accessor for TabNavigationController();
              v20 = swift_dynamicCastClass(v18, v19);
              if (v20)
              {
                v22 = v10;
                v23 = v11;
                v24 = v12;
                v25 = *(void **)(v20 + OBJC_IVAR____TtC5Music23TabNavigationController_tabDataSource);
                swift_unknownObjectRetain(v25, v21);

                if (v25)
                {
                  if ((objc_msgSend(v25, "respondsToSelector:", v24[113]) & 1) != 0)
                  {
                    sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
                    sub_1000DA838();
                    isa = Set._bridgeToObjectiveC()().super.isa;
                    objc_msgSend(v25, v24[113], a1, a2, isa);

                    swift_unknownObjectRelease(v25);
                  }
                  else
                  {

                    swift_unknownObjectRelease(v25);
                  }
                }
                else
                {

                }
                v12 = v24;
                v11 = v23;
                v10 = v22;
                v9 = v6 & 0xC000000000000001;
              }
              else
              {

              }
            }
            else
            {

            }
          }
          else
          {

          }
          ++v8;
        }
        while (v7 != v8);
      }
    }
    swift_bridgeObjectRelease_n(v6, 2);
  }
}

void sub_1000DA3E0(void *a1, uint64_t a2, void *a3, void *a4, void *a5, SEL *a6)
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v10 = a3;
  v15 = a4;
  v11 = a5;
  v12 = a1;
  v13 = objc_msgSend(v11, "_tab");
  v14 = (void *)sub_1000D98F8();

  if (v14)
  {
    if ((objc_msgSend(v14, "respondsToSelector:", *a6) & 1) != 0)
      objc_msgSend(v14, *a6, v10, v15, v11);

    swift_unknownObjectRelease(v14);
  }
  else
  {

  }
}

void sub_1000DA4D8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, SEL *a6)
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v10 = a3;
  v15 = a4;
  v11 = a5;
  v12 = a1;
  v13 = (void *)sub_1000D98F8();
  if (v13)
  {
    v14 = v13;
    if ((objc_msgSend(v13, "respondsToSelector:", *a6) & 1) != 0)
      objc_msgSend(v14, *a6, v10, v15, v11);

    swift_unknownObjectRelease(v14);
  }
  else
  {

  }
}

uint64_t sub_1000DA678(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_19;
LABEL_9:
      v21 = v6;
      v8 = objc_msgSend(v6, "_identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = objc_msgSend(a2, "_identifier");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      if (v9 == v13 && v11 == v15)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v11);
LABEL_18:
        v3 = (uint64_t)v21;
        swift_bridgeObjectRelease(v11);
        return v3;
      }
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v15, 0);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) != 0)
      {
        v11 = a1;
        goto LABEL_18;
      }

      if (v7 == v3)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
    }
    v6 = *(id *)(a1 + 8 * i);
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  swift_bridgeObjectRelease(a1);
  return v3;
}

unint64_t sub_1000DA838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0090;
  if (!qword_1011A0090)
  {
    v1 = sub_10004A07C(255, &qword_10119D458, _UITab_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0090);
  }
  return result;
}

unint64_t sub_1000DA890(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v76;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(int *)(a3 + 20);
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = _s14TVEpisodesViewV10DataSourceOMa(0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for TVSeason(0);
      v15 = 1;
    }
    else
    {
      v14 = type metadata accessor for TVShow(0);
      v15 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12);
    swift_storeEnumTagMultiPayload(v11, v13, v15);
    v17 = *(int *)(a3 + 24);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    v20 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    v22 = *v19;
    *v18 = *v19;
    if (EnumCaseMultiPayload == 1)
    {
      v76 = v20;
      v23 = (int *)type metadata accessor for Library.Context(0);
      v24 = v23[5];
      v25 = (char *)v18 + v24;
      v26 = (char *)v19 + v24;
      v27 = type metadata accessor for Album(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48);
      v30 = swift_retain(v22);
      if (v29(v26, 1, v27, v30))
      {
        v31 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v35 = v23[6];
      v36 = (char *)v18 + v35;
      v37 = (char *)v19 + v35;
      v38 = type metadata accessor for Artist(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v23[7];
      v42 = (char *)v18 + v41;
      v43 = (char *)v19 + v41;
      v44 = type metadata accessor for Composer(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v23[8];
      v48 = (char *)v18 + v47;
      v49 = (char *)v19 + v47;
      v50 = type metadata accessor for Genre(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C(&qword_10119ED08);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v23[9];
      v54 = (char *)v18 + v53;
      v55 = (char *)v19 + v53;
      v56 = type metadata accessor for Playlist(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      v59 = v23[10];
      v60 = (char *)v18 + v59;
      v61 = (char *)v19 + v59;
      v62 = type metadata accessor for TVShow(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      v65 = v23[11];
      v66 = (char *)v18 + v65;
      v67 = (char *)v19 + v65;
      v68 = type metadata accessor for TVSeason(0);
      v69 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      {
        v70 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      }
      *((_BYTE *)v18 + v23[12]) = *((_BYTE *)v19 + v23[12]);
      *((_BYTE *)v18 + v23[13]) = *((_BYTE *)v19 + v23[13]);
      *((_BYTE *)v18 + v23[14]) = *((_BYTE *)v19 + v23[14]);
      v71 = v23[15];
      v72 = (_QWORD *)((char *)v18 + v71);
      v73 = (_QWORD *)((char *)v19 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      *(_QWORD *)((char *)v18 + v23[16]) = *(_QWORD *)((char *)v19 + v23[16]);
      *((_BYTE *)v18 + v23[17]) = *((_BYTE *)v19 + v23[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = v18;
      v33 = v76;
      v34 = 1;
    }
    else
    {
      swift_retain(v22);
      v32 = v18;
      v33 = v20;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

uint64_t _s14TVEpisodesViewV10DataSourceOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A0208, (uint64_t)&_s14TVEpisodesViewV10DataSourceOMn);
}

double sub_1000DAE28(uint64_t *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  double result;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  sub_1000A6174(*a1, a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = _s14TVEpisodesViewV10DataSourceOMa(0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
    v6 = type metadata accessor for TVSeason(0);
  else
    v6 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  v7 = (uint64_t *)((char *)a1 + *(int *)(a2 + 24));
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    v11 = (int *)type metadata accessor for Library.Context(0);
    v12 = (char *)v7 + v11[5];
    v13 = type metadata accessor for Album(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    v15 = (char *)v7 + v11[6];
    v16 = type metadata accessor for Artist(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    v18 = (char *)v7 + v11[7];
    v19 = type metadata accessor for Composer(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    v21 = (char *)v7 + v11[8];
    v22 = type metadata accessor for Genre(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    v24 = (char *)v7 + v11[9];
    v25 = type metadata accessor for Playlist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    v27 = (char *)v7 + v11[10];
    v28 = type metadata accessor for TVShow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
    v30 = (char *)v7 + v11[11];
    v31 = type metadata accessor for TVSeason(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v11[15] + 8));
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v11[16])).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000DB0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v72;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = _s14TVEpisodesViewV10DataSourceOMa(0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for TVSeason(0);
    v14 = 1;
  }
  else
  {
    v13 = type metadata accessor for TVShow(0);
    v14 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11);
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
  v20 = *v17;
  *v16 = *v17;
  if (EnumCaseMultiPayload == 1)
  {
    v72 = v18;
    v21 = (int *)type metadata accessor for Library.Context(0);
    v22 = v21[5];
    v23 = (char *)v16 + v22;
    v24 = (char *)v17 + v22;
    v25 = type metadata accessor for Album(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v26 + 48);
    v28 = swift_retain(v20);
    if (v27(v24, 1, v25, v28))
    {
      v29 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v31 = v21[6];
    v32 = (char *)v16 + v31;
    v33 = (char *)v17 + v31;
    v34 = type metadata accessor for Artist(0);
    v35 = *(_QWORD *)(v34 - 8);
    v18 = v72;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v21[7];
    v38 = (char *)v16 + v37;
    v39 = (char *)v17 + v37;
    v40 = type metadata accessor for Composer(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v21[8];
    v44 = (char *)v16 + v43;
    v45 = (char *)v17 + v43;
    v46 = type metadata accessor for Genre(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_10119ED08);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v21[9];
    v50 = (char *)v16 + v49;
    v51 = (char *)v17 + v49;
    v52 = type metadata accessor for Playlist(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v21[10];
    v56 = (char *)v16 + v55;
    v57 = (char *)v17 + v55;
    v58 = type metadata accessor for TVShow(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    v61 = v21[11];
    v62 = (char *)v16 + v61;
    v63 = (char *)v17 + v61;
    v64 = type metadata accessor for TVSeason(0);
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      v66 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    *((_BYTE *)v16 + v21[12]) = *((_BYTE *)v17 + v21[12]);
    *((_BYTE *)v16 + v21[13]) = *((_BYTE *)v17 + v21[13]);
    *((_BYTE *)v16 + v21[14]) = *((_BYTE *)v17 + v21[14]);
    v67 = v21[15];
    v68 = (_QWORD *)((char *)v16 + v67);
    v69 = (_QWORD *)((char *)v17 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    *(_QWORD *)((char *)v16 + v21[16]) = *(_QWORD *)((char *)v17 + v21[16]);
    *((_BYTE *)v16 + v21[17]) = *((_BYTE *)v17 + v21[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = 1;
  }
  else
  {
    swift_retain(v20);
    v30 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v30);
  return a1;
}

uint64_t sub_1000DB630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v73;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = a1 + v11;
    v13 = a2 + v11;
    sub_10005B748(a1 + v11, _s14TVEpisodesViewV10DataSourceOMa);
    v14 = _s14TVEpisodesViewV10DataSourceOMa(0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for TVSeason(0);
      v16 = 1;
    }
    else
    {
      v15 = type metadata accessor for TVShow(0);
      v16 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13);
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v17 = *(int *)(a3 + 24);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_10004FF60(a1 + v17, &qword_10119F030);
    v20 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    v22 = *v19;
    *v18 = *v19;
    if (EnumCaseMultiPayload == 1)
    {
      v73 = v20;
      v23 = (int *)type metadata accessor for Library.Context(0);
      v24 = v23[5];
      v25 = (char *)v18 + v24;
      v26 = (char *)v19 + v24;
      v27 = type metadata accessor for Album(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48);
      v30 = swift_retain(v22);
      if (v29(v26, 1, v27, v30))
      {
        v31 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v33 = v23[6];
      v34 = (char *)v18 + v33;
      v35 = (char *)v19 + v33;
      v36 = type metadata accessor for Artist(0);
      v37 = *(_QWORD *)(v36 - 8);
      v20 = v73;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v23[7];
      v40 = (char *)v18 + v39;
      v41 = (char *)v19 + v39;
      v42 = type metadata accessor for Composer(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v23[8];
      v46 = (char *)v18 + v45;
      v47 = (char *)v19 + v45;
      v48 = type metadata accessor for Genre(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C(&qword_10119ED08);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v23[9];
      v52 = (char *)v18 + v51;
      v53 = (char *)v19 + v51;
      v54 = type metadata accessor for Playlist(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v57 = v23[10];
      v58 = (char *)v18 + v57;
      v59 = (char *)v19 + v57;
      v60 = type metadata accessor for TVShow(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v63 = v23[11];
      v64 = (char *)v18 + v63;
      v65 = (char *)v19 + v63;
      v66 = type metadata accessor for TVSeason(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      *((_BYTE *)v18 + v23[12]) = *((_BYTE *)v19 + v23[12]);
      *((_BYTE *)v18 + v23[13]) = *((_BYTE *)v19 + v23[13]);
      *((_BYTE *)v18 + v23[14]) = *((_BYTE *)v19 + v23[14]);
      v69 = v23[15];
      v70 = (_QWORD *)((char *)v18 + v69);
      v71 = (_QWORD *)((char *)v19 + v69);
      *v70 = *v71;
      v70[1] = v71[1];
      *(_QWORD *)((char *)v18 + v23[16]) = *(_QWORD *)((char *)v19 + v23[16]);
      *((_BYTE *)v18 + v23[17]) = *((_BYTE *)v19 + v23[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = 1;
    }
    else
    {
      swift_retain(v22);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v32);
  }
  return a1;
}

uint64_t sub_1000DBBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = _s14TVEpisodesViewV10DataSourceOMa(0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for TVSeason(0);
    v11 = 1;
  }
  else
  {
    v10 = type metadata accessor for TVShow(0);
    v11 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8);
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    *v13 = *v14;
    v16 = (int *)type metadata accessor for Library.Context(0);
    v17 = v16[5];
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = type metadata accessor for Album(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v16[6];
    v24 = (char *)v13 + v23;
    v25 = (char *)v14 + v23;
    v26 = type metadata accessor for Artist(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v16[7];
    v30 = (char *)v13 + v29;
    v31 = (char *)v14 + v29;
    v32 = type metadata accessor for Composer(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v16[8];
    v36 = (char *)v13 + v35;
    v37 = (char *)v14 + v35;
    v38 = type metadata accessor for Genre(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_10119ED08);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v16[9];
    v42 = (char *)v13 + v41;
    v43 = (char *)v14 + v41;
    v44 = type metadata accessor for Playlist(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v16[10];
    v48 = (char *)v13 + v47;
    v49 = (char *)v14 + v47;
    v50 = type metadata accessor for TVShow(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v16[11];
    v54 = (char *)v13 + v53;
    v55 = (char *)v14 + v53;
    v56 = type metadata accessor for TVSeason(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    *((_BYTE *)v13 + v16[12]) = *((_BYTE *)v14 + v16[12]);
    *((_BYTE *)v13 + v16[13]) = *((_BYTE *)v14 + v16[13]);
    *((_BYTE *)v13 + v16[14]) = *((_BYTE *)v14 + v16[14]);
    *(_OWORD *)((char *)v13 + v16[15]) = *(_OWORD *)((char *)v14 + v16[15]);
    *(_QWORD *)((char *)v13 + v16[16]) = *(_QWORD *)((char *)v14 + v16[16]);
    *((_BYTE *)v13 + v16[17]) = *((_BYTE *)v14 + v16[17]);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000DC0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    sub_10005B748(a1 + v9, _s14TVEpisodesViewV10DataSourceOMa);
    v12 = _s14TVEpisodesViewV10DataSourceOMa(0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for TVSeason(0);
      v14 = 1;
    }
    else
    {
      v13 = type metadata accessor for TVShow(0);
      v14 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11);
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v15 = *(int *)(a3 + 24);
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    sub_10004FF60(a1 + v15, &qword_10119F030);
    v18 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      *v16 = *v17;
      v19 = (int *)type metadata accessor for Library.Context(0);
      v20 = v19[5];
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = type metadata accessor for Album(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v19[6];
      v27 = (char *)v16 + v26;
      v28 = (char *)v17 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v19[7];
      v33 = (char *)v16 + v32;
      v34 = (char *)v17 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v19[8];
      v39 = (char *)v16 + v38;
      v40 = (char *)v17 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v19[9];
      v45 = (char *)v16 + v44;
      v46 = (char *)v17 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v19[10];
      v51 = (char *)v16 + v50;
      v52 = (char *)v17 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v19[11];
      v57 = (char *)v16 + v56;
      v58 = (char *)v17 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v16 + v19[12]) = *((_BYTE *)v17 + v19[12]);
      *((_BYTE *)v16 + v19[13]) = *((_BYTE *)v17 + v19[13]);
      *((_BYTE *)v16 + v19[14]) = *((_BYTE *)v17 + v19[14]);
      *(_OWORD *)((char *)v16 + v19[15]) = *(_OWORD *)((char *)v17 + v19[15]);
      *(_QWORD *)((char *)v16 + v19[16]) = *(_QWORD *)((char *)v17 + v19[16]);
      *((_BYTE *)v16 + v19[17]) = *((_BYTE *)v17 + v19[17]);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000DC62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DC638);
}

uint64_t sub_1000DC638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = _s14TVEpisodesViewV10DataSourceOMa(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_10119EE98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1000DC6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DC6E0);
}

uint64_t sub_1000DC6E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = _s14TVEpisodesViewV10DataSourceOMa(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_10119EE98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s14TVEpisodesViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A0158, (uint64_t)&_s14TVEpisodesViewVMn);
}

void sub_1000DC790(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_100EAA098;
  v2 = _s14TVEpisodesViewV10DataSourceOMa(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1000DC838(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for TVSeason(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = type metadata accessor for TVShow(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1000DC908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
    v3 = type metadata accessor for TVSeason(0);
  else
    v3 = type metadata accessor for TVShow(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_1000DC954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for TVSeason(0);
    v7 = 1;
  }
  else
  {
    v6 = type metadata accessor for TVShow(0);
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1000DC9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s14TVEpisodesViewV10DataSourceOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for TVSeason(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for TVShow(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1000DCA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for TVSeason(0);
    v7 = 1;
  }
  else
  {
    v6 = type metadata accessor for TVShow(0);
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1000DCB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, _s14TVEpisodesViewV10DataSourceOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for TVSeason(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for TVShow(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1000DCBB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for TVShow(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TVSeason(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000DCC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_100007E8C(&qword_1011A03B0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVSeason(0);
  v5 = type metadata accessor for TVEpisode(0);
  v6 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v7 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  MusicLibrarySectionedRequest.init()(v4, v5, v6, v7);
  v8 = sub_100049F28(&qword_1011A3A00, &qword_1011A03B0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v9 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

uint64_t sub_1000DCD58@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[16];
  uint64_t *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;

  v106 = a1;
  v87 = type metadata accessor for TVSeason(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TVShow(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = _s14TVEpisodesViewV10DataSourceOMa(0);
  __chkstk_darwin(v105);
  v100 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_1011A0260);
  __chkstk_darwin(v99);
  v98 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011A0268);
  __chkstk_darwin(v97);
  v96 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Library.Context(0);
  v8 = __chkstk_darwin(v7);
  v94 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v107 = (uint64_t)&v81 - v10;
  v93 = sub_100007E8C(&qword_1011A0270);
  v11 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011A0278);
  __chkstk_darwin(v108);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011A0280);
  v16 = __chkstk_darwin(v104);
  v95 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v92 = (char *)&v81 - v18;
  v19 = sub_100007E8C(&qword_1011A0288);
  v102 = *(_QWORD *)(v19 - 8);
  v103 = v19;
  v20 = __chkstk_darwin(v19);
  v101 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = v1;
  v22 = static Axis.Set.vertical.getter(v20);
  v23 = sub_100007E8C(&qword_1011A0290);
  v24 = sub_1000E224C();
  ScrollView.init(_:showsIndicators:content:)(v22, 1, sub_1000E2244, v109, v23, v24);
  v25 = v1;
  v27 = *v1;
  v26 = v1[1];
  v28 = *((unsigned __int8 *)v1 + 16);
  v29 = sub_100007E8C(&qword_1011A02B0);
  v30 = sub_100049F28(&qword_1011A02B8, &qword_1011A02B0, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v90 = v29;
  v89 = v30;
  v31 = StateObject.wrappedValue.getter(v27, v26, v28, v29, v30);
  v111 = 0;
  static Binding.constant(_:)(&v112, &v111, &type metadata for Library.ContentFilterOption);
  v32 = v112;
  v33 = v113;
  v88 = v114;
  swift_retain(v112);
  swift_retain(v33);
  swift_retain(v31);
  v35 = ObservedObject.init(wrappedValue:)(v34, v29, v30);
  v37 = v36;
  v38 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v91 = v15;
  v39 = v13;
  v40 = v13;
  v41 = v93;
  v38(v15, v40, v93);
  swift_release(v31);
  swift_release(v33);
  v42 = swift_release(v32);
  v43 = &v15[*(int *)(v108 + 36)];
  *(_QWORD *)v43 = v35;
  *((_QWORD *)v43 + 1) = v37;
  *((_QWORD *)v43 + 2) = v32;
  *((_QWORD *)v43 + 3) = v33;
  v44 = (uint64_t)v92;
  v43[32] = v88;
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v39, v41, v42);
  v93 = (uint64_t)v25 + *(int *)(_s14TVEpisodesViewVMa(0) + 20);
  v45 = v94;
  sub_10082460C(v94);
  v46 = v107;
  sub_1000DE38C(v45, v107);
  sub_10005B748(v45, type metadata accessor for Library.Context);
  v47 = *v25;
  v48 = v25[1];
  v49 = *((unsigned __int8 *)v25 + 16);
  v50 = v90;
  v51 = v89;
  v52 = StateObject.wrappedValue.getter(v47, v48, v49, v90, v89);
  v53 = (uint64_t)v96;
  v54 = v97;
  v55 = (uint64_t)&v96[*(int *)(v97 + 36)];
  sub_10005B704(v46, v55, type metadata accessor for Library.Context);
  v56 = (_QWORD *)(v55 + *(int *)(sub_100007E8C(&qword_1011A02C0) + 36));
  swift_retain(v52);
  *v56 = ObservedObject.init(wrappedValue:)(v57, v50, v51);
  v56[1] = v58;
  v59 = (uint64_t)v91;
  v60 = v53;
  sub_10004A160((uint64_t)v91, v53, &qword_1011A0278);
  v61 = v53;
  v62 = v98;
  sub_10004A160(v61, v98, &qword_1011A0268);
  swift_storeEnumTagMultiPayload(v62, v99, 0);
  v63 = sub_1000E22D0();
  v64 = sub_1000E2354();
  v65 = (uint64_t)v95;
  v66 = v63;
  v67 = (uint64_t)v100;
  _ConditionalContent<>.init(storage:)(v62, v54, v108, v66, v64);
  sub_10004FF60(v60, &qword_1011A0268);
  sub_100065228(v65, v44, &qword_1011A0280);
  swift_release(v52);
  sub_10005B748(v107, type metadata accessor for Library.Context);
  sub_10004FF60(v59, &qword_1011A0278);
  sub_10005B704(v93, v67, _s14TVEpisodesViewV10DataSourceOMa);
  if (swift_getEnumCaseMultiPayload(v67, v105) == 1)
  {
    v68 = v86;
    v69 = v85;
    v70 = v87;
    v71.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v86 + 32))(v85, v67, v87);
    v72 = TVSeason.showName.getter(v71);
  }
  else
  {
    v68 = v83;
    v69 = v82;
    v70 = v84;
    v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 32))(v82, v67, v84);
    v72 = TVShow.name.getter(v74);
  }
  v75 = v72;
  v76 = v73;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  v112 = v75;
  v113 = v76;
  v77 = sub_1000E23F0();
  v78 = sub_100055B68();
  v79 = v101;
  View.navigationBarTitle<A>(_:)(&v112, v104, &type metadata for String, v77, v78);
  swift_bridgeObjectRelease(v76);
  sub_10004FF60(v44, &qword_1011A0280);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v102 + 32))(v106, v79, v103);
}

uint64_t sub_1000DD484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  int v21;

  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A02A8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = static HorizontalAlignment.leading.getter(v9);
  v20 = a1;
  v21 = 0;
  v13 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v21, v4, v13);
  v14 = sub_100007E8C(&qword_1011A0310);
  v15 = sub_1000E4570(&qword_1011A0318, &qword_1011A0310, (void (*)(void))sub_1000E2464, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v16 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v12, 0, 1, v6, sub_1000E245C, v19, v14, v15);
  LOBYTE(a1) = static Edge.Set.horizontal.getter(v16);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a2, v11, v7);
  v17 = a2 + *(int *)(sub_100007E8C(&qword_1011A0290) + 36);
  *(_BYTE *)v17 = a1;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_BYTE *)(v17 + 40) = 1;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1000DD640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v33 = a2;
  v3 = _s14TVEpisodesViewVMa(0);
  v30 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v30 + 64);
  __chkstk_darwin(v3);
  v5 = sub_100007E8C(&qword_1011A3A20);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A0310);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(unsigned __int8 *)(a1 + 16);
  v14 = sub_100007E8C(&qword_1011A02B0);
  v15 = sub_100049F28(&qword_1011A02B8, &qword_1011A02B0, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v16 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release(v16);
  v17 = sub_100007E8C(&qword_1011A3A30);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v7, &qword_1011A3A20);
    v19 = _swiftEmptyArrayStorage;
  }
  else
  {
    v19 = (_QWORD *)MusicLibrarySectionedResponse.sections.getter(v17);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  v34 = v19;
  sub_10005B704(a1, (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s14TVEpisodesViewVMa);
  v20 = *(unsigned __int8 *)(v30 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_1010B0678, v21 + v4, v20 | 7);
  sub_10005B6C0((uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, _s14TVEpisodesViewVMa);
  v23 = sub_100007E8C(&qword_1011A0358);
  v24 = sub_100007E8C(&qword_1011A0328);
  v25 = sub_100049F28(&qword_1011A0360, &qword_1011A0358, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = sub_1000E2464();
  v27 = sub_100049F28(&qword_1011A0368, (uint64_t *)&unk_1011A3A40, (uint64_t)&protocol conformance descriptor for MusicLibrarySection<A, B>);
  ForEach<>.init(_:content:)(&v34, sub_1000E2588, v22, v23, &type metadata for MusicItemID, v24, v25, v26, v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v10, v32);
}

uint64_t sub_1000DD904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v4 = _s14TVEpisodesViewV13SectionHeaderVMa(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  v13 = a1;
  v14 = a2;
  v8 = sub_100007E8C(&qword_1011A0340);
  v9 = sub_100048748(&qword_1011A0330, _s14TVEpisodesViewV13SectionHeaderVMa, (uint64_t)&unk_100EAA2D0);
  v10 = sub_1000E2508();
  return Section<>.init(header:content:)(v6, sub_1000E2594, v12, v4, v8, v9, v10);
}

uint64_t sub_1000DDA00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s14TVEpisodesViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C(&qword_1011BEB40);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s14TVEpisodesViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010B06A0, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s14TVEpisodesViewVMa);
  v14 = sub_100007E8C(&qword_1011A0350);
  v15 = sub_100049F28(&qword_1011A0370, &qword_1011BEB40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100049F28(&qword_1011A0348, &qword_1011A0350, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v17 = sub_100048748(&qword_1011A0378, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  return ForEach<>.init(_:content:)(v8, sub_1000E287C, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_1000DDBBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  v57 = a1;
  v64 = a3;
  v66 = type metadata accessor for Divider(0);
  v63 = *(_QWORD *)(v66 - 8);
  v5 = __chkstk_darwin(v66);
  v65 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v62 = (char *)&v55 - v7;
  v8 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  __chkstk_darwin(v8);
  v58 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for TVEpisode(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_1011A0380);
  v20 = __chkstk_darwin(v59);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v60 = v14;
  v61 = (uint64_t)&v55 - v23;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v56(v16, a1, v13);
  _s14TVEpisodesViewVMa(0);
  sub_10082460C((uint64_t)v12);
  v24 = *v12;
  swift_retain(*v12);
  sub_10005B748((uint64_t)v12, type metadata accessor for Library.Context);
  v26 = *a2;
  v25 = a2[1];
  v27 = *((unsigned __int8 *)a2 + 16);
  v28 = sub_100007E8C(&qword_1011A02B0);
  v29 = sub_100049F28(&qword_1011A02B8, &qword_1011A02B0, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v30 = v28;
  v31 = (uint64_t)v19;
  v32 = StateObject.wrappedValue.getter(v26, v25, v27, v30, v29);
  KeyPath = swift_getKeyPath(&unk_100EAA178);
  v34 = (uint64_t)v58;
  *v58 = KeyPath;
  v35 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  sub_1000DE048((uint64_t)v16, v24, v34, v32, v31);
  v56(v16, v57, v13);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v36 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v37 = Player.state<A>(for:)((uint64_t)v16, v13, v36);
  v38 = sub_100007E8C(&qword_1011A0390);
  v39 = sub_100049F28(&qword_1011A0398, &qword_1011A0390, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v40 = ObservedObject.init(wrappedValue:)(v37, v38, v39);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v13);
  sub_10005B704(v31, (uint64_t)v22, _s14TVEpisodesViewV13TVEpisodeCellVMa);
  v43 = (uint64_t *)&v22[*(int *)(v59 + 36)];
  *v43 = v40;
  v43[1] = v42;
  sub_10005B748(v31, _s14TVEpisodesViewV13TVEpisodeCellVMa);
  v44 = v61;
  v45 = sub_100065228((uint64_t)v22, v61, &qword_1011A0380);
  v46 = v62;
  Divider.init()(v45);
  sub_10004A160(v44, (uint64_t)v22, &qword_1011A0380);
  v47 = v63;
  v48 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v50 = v65;
  v49 = v66;
  v48(v65, v46, v66);
  v51 = v64;
  sub_10004A160((uint64_t)v22, v64, &qword_1011A0380);
  v52 = sub_100007E8C(&qword_1011A03A0);
  v48((char *)(v51 + *(int *)(v52 + 48)), v50, v49);
  v53 = *(void (**)(char *, uint64_t))(v47 + 8);
  v53(v46, v49);
  sub_10004FF60(v44, &qword_1011A0380);
  v53(v50, v49);
  return sub_10004FF60((uint64_t)v22, &qword_1011A0380);
}

uint64_t sub_1000DE048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;

  v10 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v48 - v15;
  v17 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a5, a1, v17);
  v18 = (int *)_s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  *(_QWORD *)(a5 + v18[5]) = a2;
  sub_100065228(a3, a5 + v18[6], (uint64_t *)&unk_1011C72A0);
  v19 = (_QWORD *)(a5 + v18[7]);
  v20 = sub_100007E8C(&qword_1011A02B0);
  v21 = sub_100049F28(&qword_1011A02B8, &qword_1011A02B0, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  *v19 = ObservedObject.init(wrappedValue:)(a4, v20, v21);
  v19[1] = v22;
  v23 = a5 + v18[8];
  *(_QWORD *)v23 = swift_getKeyPath(&unk_100EAA1A0);
  *(_BYTE *)(v23 + 8) = 0;
  v24 = a5 + v18[9];
  *(_QWORD *)v24 = sub_1000DEC04;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 0;
  v25 = (_QWORD *)(a5 + v18[10]);
  v26 = type metadata accessor for NavigationPusher();
  v27 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v25 = EnvironmentObject.init()(v26, v27);
  v25[1] = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v16, enum case for MusicLibrary.DownloadStatus.downloadable(_:), v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  State.init(wrappedValue:)(v14, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v29 = (_QWORD *)(a5 + v18[12]);
  v30 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v31 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v29 = EnvironmentObject.init()(v30, v31);
  v29[1] = v32;
  v33 = (_QWORD *)(a5 + v18[13]);
  v34 = type metadata accessor for NoticePresenter(0);
  v35 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v33 = EnvironmentObject.init()(v34, v35);
  v33[1] = v36;
  v37 = (_QWORD *)(a5 + v18[14]);
  v38 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v39 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v37 = EnvironmentObject.init()(v38, v39);
  v37[1] = v40;
  v41 = (_QWORD *)(a5 + v18[15]);
  v42 = type metadata accessor for TabSelectionManager(0);
  v43 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v41 = EnvironmentObject.init()(v42, v43);
  v41[1] = v44;
  v45 = a5 + v18[16];
  *(_QWORD *)v45 = swift_getKeyPath(&unk_100EAA1C8);
  *(_QWORD *)(v45 + 8) = 0;
  *(_BYTE *)(v45 + 16) = 0;
  v46 = a5 + v18[17];
  result = swift_getKeyPath(&unk_100EAA1F0);
  *(_QWORD *)v46 = result;
  *(_QWORD *)(v46 + 8) = 0;
  *(_BYTE *)(v46 + 16) = 0;
  return result;
}

uint64_t sub_1000DE38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v21[2];
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v23 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011C7320);
  __chkstk_darwin(v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVSeason(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011D1410);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TVShow(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s14TVEpisodesViewV10DataSourceOMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v21[1], (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v18, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_100048748(&qword_1011A0300, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    Library.Context.with<A>(_:)((uint64_t)v4, v5, v22);
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011C7320);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    sub_100048748((unint64_t *)&unk_1011CEA20, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    Library.Context.with<A>(_:)((uint64_t)v11, v12, v22);
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D1410);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void sub_1000DE634(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v55[3];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v55[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v55[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011BEB40);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v12);
  v14 = (char *)&v55[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  MusicLibrarySection.items.getter(v15, v16);
  sub_10031E420((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = type metadata accessor for TVEpisode(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_10119FD80);
LABEL_5:
    v40 = 0;
    v42 = 0;
    v47 = 0;
    v46 = 0;
    v53 = 0;
    v49 = 0.0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    goto LABEL_6;
  }
  v19 = TVEpisode.seasonNumber.getter();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v17);
  if ((v21 & 1) != 0)
    goto LABEL_5;
  v22 = String.LocalizationValue.init(stringLiteral:)(0x25206E6F73616553, 0xE900000000000064);
  static Locale.current.getter(v22);
  v23 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Season number for TV Episodes", 29, 2);
  v25 = v24;
  v26 = sub_100007E8C(&qword_1011E7E30);
  v27 = swift_allocObject(v26, 72, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v27 + 56) = &type metadata for Int;
  *(_QWORD *)(v27 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v27 + 32) = v19;
  v28 = static String.localizedStringWithFormat(_:_:)(v23, v25, v27);
  v30 = v29;
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v27);
  v55[0] = v28;
  v55[1] = v30;
  v31 = sub_100055B68();
  v32 = Text.init<A>(_:)(v55, &type metadata for String, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37 & 1;
  v39 = static Font.headline.getter();
  v40 = Text.font(_:)(v39, v32, v34, v38, v36);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  swift_release(v39);
  v47 = v44 & 1;
  sub_100055BAC(v32, v34, v38);
  swift_bridgeObjectRelease(v36);
  LOBYTE(v32) = static Edge.Set.top.getter(v48);
  v49 = EdgeInsets.init(_all:)(12.0);
  v53 = v32;
LABEL_6:
  *(_QWORD *)a1 = v40;
  *(_QWORD *)(a1 + 8) = v42;
  *(_QWORD *)(a1 + 16) = v47;
  *(_QWORD *)(a1 + 24) = v46;
  *(_QWORD *)(a1 + 32) = v53;
  *(double *)(a1 + 40) = v49;
  *(_QWORD *)(a1 + 48) = v50;
  *(_QWORD *)(a1 + 56) = v51;
  *(_QWORD *)(a1 + 64) = v52;
  *(_BYTE *)(a1 + 72) = 0;
}

uint64_t sub_1000DE97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for TVSeason(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TVShow(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s14TVEpisodesViewV10DataSourceOMa(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v14, v15);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    Hasher._combine(_:)(1uLL);
    v16 = sub_100048748(&qword_1011A0248, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    Hasher._combine(_:)(0);
    v18 = sub_100048748(&qword_1011A0250, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

Swift::Int sub_1000DEB48()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1000DE97C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1000DEB88(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1000DE97C((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1000DEBC4()
{
  return sub_100048748(&qword_1011A0240, _s14TVEpisodesViewV10DataSourceOMa, (uint64_t)"%f ");
}

uint64_t sub_1000DEBF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94F2C, 1);
}

uint64_t *sub_1000DEC04()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_1011A03A8);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return PresentedViewState.init()();
}

uint64_t sub_1000DEC3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t OpaqueTypeConformance2;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (**v127)(uint64_t);
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t result;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  unint64_t *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  _QWORD v155[4];
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  void *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE v190[32];
  uint64_t v191;
  _QWORD v192[5];
  _QWORD v193[5];
  __int128 v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  __int128 v198;
  _QWORD v199[5];
  _QWORD v200[5];
  uint64_t v201[11];

  v188 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011C72B0);
  v186 = *(_QWORD *)(v2 - 8);
  v187 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011A0520);
  __chkstk_darwin(v170);
  v169 = (uint64_t *)((char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175 = sub_100007E8C(&qword_1011A0528);
  v172 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v171 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A0530);
  v178 = *(_QWORD *)(v7 - 8);
  v179 = v7;
  __chkstk_darwin(v7);
  v176 = (uint64_t)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A0538);
  v182 = *(_QWORD *)(v9 - 8);
  v183 = v9;
  __chkstk_darwin(v9);
  v181 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_100007E8C(&qword_1011A0540);
  __chkstk_darwin(v180);
  v184 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)_s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  v173 = *((_QWORD *)v12 - 1);
  v13 = __chkstk_darwin(v12);
  v177 = (uint64_t)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = v14;
  __chkstk_darwin(v13);
  v161 = (uint64_t)&v156 - v15;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v16);
  v18 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TVEpisode(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v162 = (char *)&v156 - v23;
  v163 = v24;
  v25 = *(void (**)(void))(v24 + 16);
  v25();
  sub_1000E3E80();
  ((void (*)(char *, uint64_t, uint64_t))v25)(v22, v1, v19);
  v26 = v1;
  v27 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v189 = v19;
  v28 = (void *)MPCPlaybackIntent.init<A>(_:)(v22, v19, v27);
  v29 = v1 + v12[8];
  v30 = *(id *)v29;
  LOBYTE(v22) = *(_BYTE *)(v29 + 8);
  sub_1000A4100(*(id *)v29, (char)v22);
  v31 = sub_100824044(v30, (char)v22);
  sub_1000A4224(v30, (char)v22);
  v32 = v12[5];
  v158 = *(_QWORD *)(v26 + v32);
  v33 = type metadata accessor for PlaylistContext(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v164 = v18;
  v34(v18, 1, 1, v33);
  v35 = (uint64_t *)(v26 + v12[12]);
  v36 = *v35;
  if (*v35)
  {
    v159 = v31;
    v160 = v28;
    v185 = v4;
    v200[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v200[4] = &protocol witness table for <A> PresentedViewState<A>;
    v200[0] = v36;
    v37 = (uint64_t *)(v26 + v12[13]);
    v38 = *v37;
    if (*v37)
    {
      v199[3] = type metadata accessor for NoticePresenter(0);
      v199[4] = &protocol witness table for NoticePresenter;
      v199[0] = v38;
      v197 = 0;
      v195 = 0u;
      v196 = 0u;
      v194 = 0u;
      v198 = xmmword_100EA93A0;
      v39 = (uint64_t *)(v26 + v12[9]);
      v40 = *v39;
      v41 = v39[1];
      v42 = *((unsigned __int8 *)v39 + 16);
      swift_retain(v36);
      swift_retain(v38);
      v43 = sub_100007E8C(&qword_1011A03A8);
      v165 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v44 = StateObject.wrappedValue.getter(v40, v41, v42, v43, v165);
      v193[3] = v43;
      v193[4] = &protocol witness table for <A> PresentedViewState<A>;
      v166 = v43;
      v193[0] = v44;
      v45 = (uint64_t *)(v26 + v12[10]);
      v46 = *v45;
      if (*v45)
      {
        v47 = type metadata accessor for NavigationPusher();
        v192[3] = v47;
        v192[4] = &off_1010D58B0;
        v192[0] = v46;
        v191 = 0;
        memset(v190, 0, sizeof(v190));
        v48 = (uint64_t *)(v26 + v12[14]);
        v49 = *v48;
        if (*v48)
        {
          v167 = v39;
          v168 = v32;
          v50 = (uint64_t *)(v26 + v12[15]);
          v51 = *v50;
          v157 = v26;
          if (v51)
          {
            __chkstk_darwin(v47);
            v52 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EAA320);
            __chkstk_darwin(KeyPath);
            v155[2] = &type metadata for TabIdentifier;
            v155[3] = v52;
            v54 = swift_getKeyPath(&unk_100EAA358);
            swift_retain(v46);
            swift_retain(v49);
            swift_retain(v51);
            static Published.subscript.getter(v201, v55, KeyPath, v54);
            swift_release(v51);
            swift_release(KeyPath);
            swift_release(v54);
            v56 = v201[0];
            v57 = v12[16];
            v58 = v12;
            v59 = v157;
            v60 = v157 + v57;
            v61 = *(_QWORD *)v60;
            v62 = *(_QWORD *)(v60 + 8);
            LOBYTE(v54) = *(_BYTE *)(v60 + 16);
            sub_1000A410C(*(_QWORD *)v60, v62, v54);
            sub_100824224(v61, v62, v54);
            v64 = v63;
            sub_1000A4230(v61, v62, v54);
            sub_10066D160(v56);
            v66 = v65;
            v68 = v67;
            swift_release(v49);
            swift_bridgeObjectRelease(v64);
            v69 = v58;
            v70 = v59 + v58[17];
            v71 = *(_QWORD *)v70;
            v72 = *(_QWORD *)(v70 + 8);
            v73 = *(_BYTE *)(v70 + 16);
            sub_1000A411C(*(_QWORD *)v70, v72, v73);
            sub_100824400(v71, v72, v73, v201);
            sub_1000A4240(v71, v72, v73);
            v74 = v201[0];
            v75 = v201[1];
            v76 = v161;
            sub_10005B704(v59, v161, _s14TVEpisodesViewV13TVEpisodeCellVMa);
            v77 = v59;
            if (v75 >> 60 != 15)
            {
              v80 = v159;
              goto LABEL_10;
            }
            v78 = (_QWORD *)(v76 + v69[14]);
            v79 = *v78;
            v80 = v159;
            if (*v78)
            {
              swift_retain(*v78);
              v74 = sub_10066D7A8();
              v75 = v81;
              swift_release(v79);
LABEL_10:
              sub_10005B748(v76, _s14TVEpisodesViewV13TVEpisodeCellVMa);
              v82 = sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
              v83 = v189;
              *((_QWORD *)&v154 + 1) = v68;
              *((_QWORD *)&v153 + 1) = v190;
              *(_QWORD *)&v154 = v66;
              *(_QWORD *)&v153 = v192;
              v84 = v160;
              v85 = (uint64_t)v164;
              v86 = v162;
              MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v160, v80, v158, (uint64_t)v200, (uint64_t)v199, (uint64_t)&v194, (unint64_t)v193, (uint64_t)v201, v153, v154, v74, v75, v189, v82);
              sub_1000822B4(v74, v75);

              swift_bridgeObjectRelease(v68);
              sub_10004FF60((uint64_t)v190, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v194, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v85, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(char *, uint64_t))(v163 + 8))(v86, v83);
              sub_10004FF60((uint64_t)v192, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v193);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v199);
              v87 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v200);
              v88 = static VerticalAlignment.center.getter(v87);
              v89 = (uint64_t)v169;
              *v169 = v88;
              *(_QWORD *)(v89 + 8) = 0x402C000000000000;
              *(_BYTE *)(v89 + 16) = 0;
              v90 = sub_100007E8C(&qword_1011A0568);
              sub_1000DF960(v77, (uint64_t)v201, v89 + *(int *)(v90 + 44));
              v91 = Corner.medium.unsafeMutableAddressor();
              v92 = *v91;
              v93 = v91[1];
              v94 = *((_BYTE *)v91 + 16);
              v95 = *HI.HoverOutset.list.unsafeMutableAddressor();
              v96 = v77;
              v97 = sub_100049F28(&qword_1011A0570, &qword_1011A0520, (uint64_t)&protocol conformance descriptor for HStack<A>);
              v98 = v171;
              v99 = v94;
              v100 = v170;
              View.hover(corner:outset:isRelative:namespace:isEnabled:)(v92, v93, v99, 1u, 0, 1, 1, v170, *(double *)&v95, v97);
              v101 = sub_10004FF60(v89, &qword_1011A0520);
              v169 = &v156;
              __chkstk_darwin(v101);
              v102 = (_QWORD *)type metadata accessor for ContextualPreview(0);
              *(_QWORD *)&v194 = v100;
              *((_QWORD *)&v194 + 1) = v97;
              OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v194, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
              v104 = sub_1000E3EE4();
              v105 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
              v106 = v175;
              v107 = v176;
              View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)v201, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1000E3EDC, (uint64_t)v155, (uint64_t)UIScreen.Dimensions.size.getter, 0, v176, v175, (uint64_t)&type metadata for ActionType, v102, OpaqueTypeConformance2, v104, v105);
              (*(void (**)(char *, uint64_t))(v172 + 8))(v98, v106);
              v108 = StateObject.wrappedValue.getter(*v167, v167[1], *((unsigned __int8 *)v167 + 16), v166, v165);
              *(_QWORD *)&v194 = v106;
              *((_QWORD *)&v194 + 1) = &type metadata for ActionType;
              *(_QWORD *)&v195 = v102;
              *((_QWORD *)&v195 + 1) = OpaqueTypeConformance2;
              *(_QWORD *)&v196 = v104;
              *((_QWORD *)&v196 + 1) = v105;
              v109 = swift_getOpaqueTypeConformance2(&v194, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
              v110 = v181;
              v111 = v179;
              View.shareSheetPresenting(_:)(v108, v179, v109);
              v112 = swift_release(v108);
              (*(void (**)(uint64_t, uint64_t, __n128))(v178 + 8))(v107, v111, v112);
              v113 = sub_100048748(&qword_1011A0580, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
              v114 = MusicLibrary.state<A>(for:)(v96, v189, v113);
              v115 = v185;
              dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v116);
              swift_release(v114);
              v117 = v177;
              sub_10005B704(v96, v177, _s14TVEpisodesViewV13TVEpisodeCellVMa);
              v118 = *(unsigned __int8 *)(v173 + 80);
              v119 = (v118 + 16) & ~v118;
              v120 = swift_allocObject(&unk_1010B06C8, v119 + v174, v118 | 7);
              sub_10005B6C0(v117, v120 + v119, _s14TVEpisodesViewV13TVEpisodeCellVMa);
              v122 = v182;
              v121 = v183;
              v123 = (uint64_t)v184;
              (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v184, v110, v183);
              v124 = v180;
              v126 = v186;
              v125 = v187;
              (*(void (**)(uint64_t, char *, uint64_t))(v186 + 16))(v123 + *(int *)(v180 + 52), v115, v187);
              v127 = (uint64_t (**)(uint64_t))(v123 + *(int *)(v124 + 56));
              *v127 = sub_1000E40E0;
              v127[1] = (uint64_t (*)(uint64_t))v120;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v115, v125);
              v128 = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v110, v121);
              LOBYTE(v120) = static Edge.Set.vertical.getter(v128);
              v129 = EdgeInsets.init(_all:)(6.0);
              v131 = v130;
              v133 = v132;
              v135 = v134;
              v136 = v188;
              sub_10004A160(v123, v188, &qword_1011A0540);
              sub_1000E411C((uint64_t)v201);
              v137 = v136 + *(int *)(sub_100007E8C(&qword_1011A0588) + 36);
              *(_BYTE *)v137 = v120;
              *(double *)(v137 + 8) = v129;
              *(_QWORD *)(v137 + 16) = v131;
              *(_QWORD *)(v137 + 24) = v133;
              *(_QWORD *)(v137 + 32) = v135;
              *(_BYTE *)(v137 + 40) = 0;
              return sub_10004FF60(v123, &qword_1011A0540);
            }
          }
          else
          {
            v149 = v50[1];
            v150 = type metadata accessor for TabSelectionManager(0);
            v151 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain(v46);
            swift_retain(v49);
            EnvironmentObject.error()(0, v149, v150, v151);
            __break(1u);
          }
          v139 = v78[1];
          goto LABEL_17;
        }
LABEL_14:
        v139 = v48[1];
        swift_retain(v46);
LABEL_17:
        v140 = (uint64_t *)&unk_10119CBE0;
        v141 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v142 = &qword_1011C5B90;
        v143 = &unk_100EC0A50;
        goto LABEL_18;
      }
    }
    else
    {
      v144 = v37[1];
      v145 = type metadata accessor for NoticePresenter(0);
      v146 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain(v36);
      EnvironmentObject.error()(0, v144, v145, v146);
      __break(1u);
    }
    v147 = v45[1];
    v46 = type metadata accessor for NavigationPusher();
    v148 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v147, v46, v148);
    __break(1u);
    goto LABEL_14;
  }
  v139 = v35[1];
  v140 = (uint64_t *)&unk_1011B4E40;
  v141 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v142 = (unint64_t *)&unk_10119CC10;
  v143 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_18:
  v152 = sub_100049F28(v142, v140, (uint64_t)v143);
  result = EnvironmentObject.error()(0, v139, v141, v152);
  __break(1u);
  return result;
}

uint64_t sub_1000DF960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  ValueMetadata *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t KeyPath;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  ValueMetadata *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _OWORD v121[10];

  v107 = a2;
  v113 = a3;
  v106 = type metadata accessor for ControlSize(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for ButtonBorderShape(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_1011A0598);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100007E8C(&qword_1011A05A0);
  __chkstk_darwin(v92);
  v103 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for BorderlessButtonStyle(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for ButtonMenuStyle(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v88 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100007E8C(&qword_1011A05A8);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011A05B0);
  v93 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v114 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A05B8);
  v13 = __chkstk_darwin(v12);
  v112 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v110 = (char *)&v86 - v16;
  __chkstk_darwin(v15);
  v111 = (uint64_t)&v86 - v17;
  v108 = (char *)type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v18 = *((_QWORD *)v108 - 1);
  __chkstk_darwin(v108);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A05C0);
  __chkstk_darwin(v21);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A05C8);
  __chkstk_darwin(v24);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011A05D0);
  __chkstk_darwin(v27);
  v29 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011A05D8);
  v31 = __chkstk_darwin(v30);
  v109 = (uint64_t)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v86 - v34;
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v86 - v37;
  *(_QWORD *)v29 = static VerticalAlignment.center.getter(v36);
  *((_QWORD *)v29 + 1) = 0x402C000000000000;
  v29[16] = 0;
  v39 = sub_100007E8C(&qword_1011A05E0);
  sub_1000E040C(a1, (uint64_t)&v29[*(int *)(v39 + 44)]);
  v40 = *(_QWORD *)(a1 + *(int *)(_s14TVEpisodesViewV13TVEpisodeCellVMa(0) + 28) + 8);
  v41 = swift_retain(v40);
  dispatch thunk of MusicAutoupdatingResponse.request.getter(v41);
  swift_release(v40);
  v42 = sub_100007E8C(&qword_1011A03B0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v23, 0, 1, v42);
  v116 = a1;
  sub_100415C94((uint64_t)v23, (void (*)(uint64_t))sub_1000E41C8, (uint64_t)v26);
  sub_10004FF60((uint64_t)v23, &qword_1011A05C0);
  sub_100824838((uint64_t)v20);
  sub_1003D5BC4((uint64_t)v26, (uint64_t)v20, 0, 0, (uint64_t)v35);
  (*(void (**)(char *, char *))(v18 + 8))(v20, v108);
  sub_10004FF60((uint64_t)v26, &qword_1011A05C8);
  sub_10004FF60((uint64_t)v29, &qword_1011A05D0);
  v108 = v38;
  sub_100065228((uint64_t)v35, (uint64_t)v38, &qword_1011A05D8);
  sub_100065228(v107, (uint64_t)v121, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v121[0] + 1))
  {
    v121[7] = v121[2];
    v121[8] = v121[3];
    v121[9] = v121[4];
    v121[5] = v121[0];
    v121[6] = v121[1];
    v43 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v44 = sub_100007E8C(&qword_1011A05F8);
    v45 = sub_1000E41D0();
    v46 = v86;
    v47 = ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v43, v86, v44, v45);
    v48 = v88;
    ButtonMenuStyle.init()(v47);
    v49 = sub_1000E3EE4();
    v117 = &type metadata for ActionType;
    v118 = v44;
    v119 = v49;
    v120 = v45;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v51 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v52 = (ValueMetadata *)v89;
    v53 = v91;
    View.menuStyle<A>(_:)(v48, v89, v91, OpaqueTypeConformance2, v51);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v48, v53);
    v54 = (*(uint64_t (**)(char *, ValueMetadata *))(v87 + 8))(v46, v52);
    v55 = v100;
    BorderlessButtonStyle.init()(v54);
    v117 = v52;
    v118 = v53;
    v119 = OpaqueTypeConformance2;
    v120 = v51;
    v56 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v57 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v58 = v94;
    v59 = v102;
    v60 = View.buttonStyle<A>(_:)(v55, v115, v102, v56, v57);
    v61 = v97;
    static ButtonBorderShape.circle.getter(v60);
    KeyPath = swift_getKeyPath(&unk_100EAA378);
    v63 = (uint64_t)v103;
    v64 = (uint64_t *)&v103[*(int *)(v92 + 36)];
    v65 = sub_100007E8C(&qword_1011A0610);
    v66 = v98;
    v67 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))((char *)v64 + *(int *)(v65 + 28), v61, v99);
    *v64 = KeyPath;
    v68 = v95;
    v69 = v96;
    (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v63, v58, v96);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v67);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v69);
    v70 = v105;
    v71 = v104;
    v72 = v106;
    (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v104, enum case for ControlSize.regular(_:), v106);
    v73 = swift_getKeyPath(&unk_100EAA3A8);
    v74 = sub_100007E8C(&qword_1011A05E8);
    v75 = (uint64_t)v110;
    v76 = (uint64_t *)&v110[*(int *)(v74 + 36)];
    v77 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v76 + *(int *)(v77 + 28), v71, v72);
    *v76 = v73;
    sub_10004A160(v63, v75, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    sub_10004FF60(v63, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v55, v59);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v114, v115);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v75, 0, 1, v74);
  }
  else
  {
    v78 = sub_100007E8C(&qword_1011A05E8);
    v75 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v110, 1, 1, v78);
  }
  v79 = v111;
  sub_100065228(v75, v111, &qword_1011A05B8);
  v80 = (uint64_t)v108;
  v81 = v109;
  sub_10004A160((uint64_t)v108, v109, &qword_1011A05D8);
  v82 = v112;
  sub_10004A160(v79, v112, &qword_1011A05B8);
  v83 = v113;
  sub_10004A160(v81, v113, &qword_1011A05D8);
  v84 = sub_100007E8C(&qword_1011A05F0);
  sub_10004A160(v82, v83 + *(int *)(v84 + 48), &qword_1011A05B8);
  sub_10004FF60(v79, &qword_1011A05B8);
  sub_10004FF60(v80, &qword_1011A05D8);
  sub_10004FF60(v82, &qword_1011A05B8);
  return sub_10004FF60(v81, &qword_1011A05D8);
}

uint64_t sub_1000E040C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  char v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _OWORD *v50;
  __int128 v51;
  _BYTE *v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _BYTE v85[4];
  int v86;
  int v87;
  int v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[48];
  _OWORD v108[3];
  unsigned __int8 v109;
  _BYTE v110[7];
  _BYTE v111[7];
  unsigned __int8 v112;
  _BYTE v113[7];
  unsigned __int8 v114;
  _BYTE v115[7];
  unsigned __int8 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  _BYTE v131[7];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  char v144;
  _BYTE v145[7];
  double v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;

  v106 = a1;
  v97 = a2;
  v95 = _s27DownloadStatusIndicatorViewVMa(0);
  v2 = __chkstk_darwin(v95);
  v96 = &v85[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v94 = &v85[-v4];
  v91 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v5 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v7 = &v85[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = &v85[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v13 = &v85[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v93 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = &v85[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v105 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v18 = &v85[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v100 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v92 = &v85[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v99);
  v21 = &v85[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104 = sub_100007E8C(&qword_1011A0630);
  v22 = __chkstk_darwin(v104);
  v98 = &v85[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v102 = &v85[-v24];
  TVEpisode.artworkViewModel.getter(v13);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 5, 10, v25);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v107);
  v26 = v91;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v91);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v13, (uint64_t)v10, (uint64_t)v107, (uint64_t)v7, (uint64_t)v16);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v26);
  sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A3E10);
  v27 = Corner.large.unsafeMutableAddressor();
  v28 = *v27;
  v29 = v27[1];
  LOBYTE(v7) = *((_BYTE *)v27 + 16);
  v30 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v31 = sub_1000E4264();
  v128 = v30;
  v129 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(v28, v29, (char)v7, v14, OpaqueTypeConformance2);
  (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v16, v14);
  v33 = Border.artwork.unsafeMutableAddressor();
  v34 = *v33;
  v35 = *((double *)v33 + 1);
  v36 = *v27;
  v37 = v27[1];
  LOBYTE(v27) = *((_BYTE *)v27 + 16);
  LOBYTE(v7) = *((_BYTE *)v33 + 16);
  swift_retain(*v33);
  v128 = v14;
  v129 = OpaqueTypeConformance2;
  v38 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v39 = v92;
  v40 = (char)v27;
  v41 = v101;
  View.border(_:corner:)(v34, (char)v7, v36, v37, v40, v101, v38, v35);
  v42 = swift_release(v34);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v105 + 8))(v18, v41, v42);
  v43 = v100;
  v44 = v103;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v100 + 16))(v21, v39, v103);
  v45 = &v21[*(int *)(v99 + 36)];
  *(_QWORD *)v45 = 0x3FFC71C71C71C71CLL;
  *((_WORD *)v45 + 4) = 0;
  v46 = (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v39, v44);
  v47 = static Alignment.center.getter(v46);
  _FrameLayout.init(width:height:alignment:)(v108, 0, 1, 0x404E000000000000, 0, v47, v48);
  v49 = v98;
  sub_10004A160((uint64_t)v21, (uint64_t)v98, &qword_1011A0628);
  v50 = &v49[*(int *)(v104 + 36)];
  v51 = v108[1];
  *v50 = v108[0];
  v50[1] = v51;
  v50[2] = v108[2];
  sub_10004FF60((uint64_t)v21, &qword_1011A0628);
  v52 = v102;
  v53 = sub_100065228((uint64_t)v49, (uint64_t)v102, &qword_1011A0630);
  v101 = static HorizontalAlignment.leading.getter(v53);
  v54 = sub_1000E0D5C(v106, &v128);
  v99 = v129;
  v100 = v128;
  LOBYTE(v44) = v130;
  v104 = v133;
  v105 = v132;
  v103 = v134;
  LOBYTE(v39) = v135;
  v92 = v137;
  v93 = v136;
  v90 = v139;
  v91 = v138;
  v89 = v140;
  v88 = static Edge.Set.trailing.getter(v54);
  v55 = EdgeInsets.init(_all:)(12.0);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v116 = 0;
  v114 = v44;
  v112 = v39;
  v109 = 0;
  _s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  v62 = sub_100007E8C(&qword_1011A03B8);
  v63 = v94;
  State.wrappedValue.getter(v94, v62);
  v64 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 0, 1, v64);
  v128 = 0x4000000000000000;
  v65 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v128, &type metadata for CGFloat, v65);
  v128 = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)(&v128, &type metadata for CGFloat, v65);
  sub_10004A160((uint64_t)v52, (uint64_t)v49, &qword_1011A0630);
  LOBYTE(v44) = v116;
  LOBYTE(v34) = v114;
  v86 = v116;
  v87 = v114;
  LOBYTE(v65) = v112;
  LODWORD(v95) = v112;
  LODWORD(v106) = v109;
  v66 = v96;
  sub_10005B704((uint64_t)v63, (uint64_t)v96, _s27DownloadStatusIndicatorViewVMa);
  v67 = v97;
  sub_10004A160((uint64_t)v49, v97, &qword_1011A0630);
  v68 = (int *)sub_100007E8C(&qword_1011A0638);
  v69 = v67 + v68[12];
  v70 = v67;
  *(_QWORD *)&v117 = v101;
  *((_QWORD *)&v117 + 1) = 0x3FF0000000000000;
  LOBYTE(v118) = v44;
  *(_DWORD *)((char *)&v118 + 1) = *(_DWORD *)v115;
  DWORD1(v118) = *(_DWORD *)&v115[3];
  *((_QWORD *)&v118 + 1) = v100;
  *(_QWORD *)&v119 = v99;
  BYTE8(v119) = v34;
  *(_DWORD *)((char *)&v119 + 9) = *(_DWORD *)v113;
  HIDWORD(v119) = *(_DWORD *)&v113[3];
  *(_QWORD *)&v120 = v105;
  *((_QWORD *)&v120 + 1) = v104;
  *(_QWORD *)&v121 = v103;
  BYTE8(v121) = v65;
  HIDWORD(v121) = *(_DWORD *)&v111[3];
  *(_DWORD *)((char *)&v121 + 9) = *(_DWORD *)v111;
  v71 = v92;
  v72 = v93;
  *(_QWORD *)&v122 = v93;
  *((_QWORD *)&v122 + 1) = v92;
  v74 = v90;
  v73 = v91;
  *(_QWORD *)&v123 = v91;
  *((_QWORD *)&v123 + 1) = v90;
  v75 = v89;
  *(_QWORD *)&v124 = v89;
  LOBYTE(v67) = v88;
  BYTE8(v124) = v88;
  *(_DWORD *)((char *)&v124 + 9) = *(_DWORD *)v110;
  HIDWORD(v124) = *(_DWORD *)&v110[3];
  *(double *)&v125 = v55;
  *((_QWORD *)&v125 + 1) = v57;
  *(_QWORD *)&v126 = v59;
  *((_QWORD *)&v126 + 1) = v61;
  v127 = v106;
  v76 = v125;
  v77 = v126;
  *(_BYTE *)(v69 + 160) = v106;
  *(_OWORD *)(v69 + 128) = v76;
  *(_OWORD *)(v69 + 144) = v77;
  v78 = v118;
  *(_OWORD *)v69 = v117;
  *(_OWORD *)(v69 + 16) = v78;
  v79 = v119;
  v80 = v120;
  v81 = v124;
  *(_OWORD *)(v69 + 96) = v123;
  *(_OWORD *)(v69 + 112) = v81;
  v82 = v122;
  *(_OWORD *)(v69 + 64) = v121;
  *(_OWORD *)(v69 + 80) = v82;
  *(_OWORD *)(v69 + 32) = v79;
  *(_OWORD *)(v69 + 48) = v80;
  v83 = v70 + v68[16];
  *(_QWORD *)v83 = 0;
  *(_BYTE *)(v83 + 8) = 1;
  sub_10005B704((uint64_t)v66, v70 + v68[20], _s27DownloadStatusIndicatorViewVMa);
  sub_1000E43A4((uint64_t)&v117);
  sub_10005B748((uint64_t)v63, _s27DownloadStatusIndicatorViewVMa);
  sub_10004FF60((uint64_t)v102, &qword_1011A0630);
  sub_10005B748((uint64_t)v66, _s27DownloadStatusIndicatorViewVMa);
  v128 = v101;
  v129 = 0x3FF0000000000000;
  v130 = v86;
  *(_DWORD *)v131 = *(_DWORD *)v115;
  *(_DWORD *)&v131[3] = *(_DWORD *)&v115[3];
  v132 = v100;
  v133 = v99;
  LOBYTE(v134) = v87;
  *(_DWORD *)((char *)&v134 + 1) = *(_DWORD *)v113;
  HIDWORD(v134) = *(_DWORD *)&v113[3];
  v135 = v105;
  v136 = v104;
  v137 = (_BYTE *)v103;
  LOBYTE(v138) = v95;
  HIDWORD(v138) = *(_DWORD *)&v111[3];
  *(_DWORD *)((char *)&v138 + 1) = *(_DWORD *)v111;
  v139 = v72;
  v140 = v71;
  v141 = v73;
  v142 = v74;
  v143 = v75;
  v144 = v67;
  *(_DWORD *)&v145[3] = *(_DWORD *)&v110[3];
  *(_DWORD *)v145 = *(_DWORD *)v110;
  v146 = v55;
  v147 = v57;
  v148 = v59;
  v149 = v61;
  v150 = v106;
  sub_1000E4470((uint64_t)&v128);
  return sub_10004FF60((uint64_t)v98, &qword_1011A0630);
}

double sub_1000E0D5C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(_QWORD);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t inited;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  char v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  double result;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int v145;
  void (*v146)(char *, _QWORD, uint64_t);
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  unint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char v153[88];
  uint64_t v154;
  uint64_t v155;

  v140 = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v135 - v9;
  v151 = a1;
  v154 = TVEpisode.title.getter(v8);
  v155 = v11;
  v149 = sub_100055B68();
  v12 = Text.init<A>(_:)(&v154, &type metadata for String, v149);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  LODWORD(v154) = static HierarchicalShapeStyle.primary.getter();
  v147 = a1 + *(int *)(_s14TVEpisodesViewV13TVEpisodeCellVMa(0) + 24);
  sub_100824838((uint64_t)v10);
  v19 = *(void (**)(_QWORD))(v4 + 104);
  v145 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v146 = (void (*)(char *, _QWORD, uint64_t))v19;
  v19(v7);
  LOBYTE(a1) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v10, v7);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v142 = v7;
  v20(v7, v3);
  v150 = v10;
  v144 = v3;
  v148 = v20;
  v20(v10, v3);
  v21 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v154, a1 & 1, v12, v14, v18, v16, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  sub_100055BAC(v12, v14, v18);
  swift_bridgeObjectRelease(v16);
  v29 = static Font.body.getter(v28);
  v30 = Text.font(_:)(v29, v21, v23, v27, v25);
  v32 = v31;
  LOBYTE(v14) = v33;
  v35 = v34;
  swift_release(v29);
  sub_100055BAC(v21, v23, v27);
  swift_bridgeObjectRelease(v25);
  v37 = static Font.Weight.semibold.getter(v36);
  v141 = Text.fontWeight(_:)(*(_QWORD *)&v37, 0, v30, v32, v14 & 1, v35);
  v152 = v38;
  v139 = v39;
  v143 = v40;
  sub_100055BAC(v30, v32, v14 & 1);
  swift_bridgeObjectRelease(v35);
  v41 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v41, v153);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  v43 = sub_1000E15C8();
  v45 = v44;
  *(_QWORD *)(inited + 32) = v43;
  *(_QWORD *)(inited + 40) = v44;
  v46 = sub_1000E173C();
  v48 = v47;
  *(_QWORD *)(inited + 48) = v46;
  *(_QWORD *)(inited + 56) = v47;
  v49 = sub_1000E1910();
  v51 = v50;
  v138 = v49;
  *(_QWORD *)(inited + 64) = v49;
  *(_QWORD *)(inited + 72) = v50;
  if (v45)
  {
    swift_bridgeObjectRetain();
    v52 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v54 = v52[2];
    v53 = v52[3];
    if (v54 >= v53 >> 1)
      v52 = sub_100431480((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
    v52[2] = v54 + 1;
    v55 = &v52[2 * v54];
    v55[4] = v43;
    v55[5] = v45;
  }
  else
  {
    v52 = _swiftEmptyArrayStorage;
  }
  v56 = v144;
  v57 = v142;
  v58 = v148;
  if (v48)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      v52 = sub_100431480(0, v52[2] + 1, 1, v52);
    v60 = v52[2];
    v59 = v52[3];
    if (v60 >= v59 >> 1)
      v52 = sub_100431480((_QWORD *)(v59 > 1), v60 + 1, 1, v52);
    v52[2] = v60 + 1;
    v61 = &v52[2 * v60];
    v61[4] = v46;
    v61[5] = v48;
  }
  v62 = (uint64_t)v150;
  if (v51)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      v52 = sub_100431480(0, v52[2] + 1, 1, v52);
    v64 = v52[2];
    v63 = v52[3];
    if (v64 >= v63 >> 1)
      v52 = sub_100431480((_QWORD *)(v63 > 1), v64 + 1, 1, v52);
    v52[2] = v64 + 1;
    v65 = &v52[2 * v64];
    v65[4] = v138;
    v65[5] = v51;
  }
  swift_release(inited);
  v154 = (uint64_t)v52;
  v66 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v67 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v68 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v66, v67);
  v70 = v69;
  swift_bridgeObjectRelease(v52);
  v154 = v68;
  v155 = v70;
  v71 = Text.init<A>(_:)(&v154, &type metadata for String, v149);
  v73 = v72;
  v75 = v74;
  v77 = v76 & 1;
  LODWORD(v154) = static HierarchicalShapeStyle.secondary.getter(v71);
  sub_100824838(v62);
  v146(v57, v145, v56);
  LOBYTE(v68) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v62, v57);
  v58(v57, v56);
  v58((char *)v62, v56);
  v78 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v154, v68 & 1, v71, v73, v77, v75, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v79 = v57;
  v81 = v80;
  v83 = v82;
  v85 = v84 & 1;
  sub_100055BAC(v71, v73, v77);
  swift_bridgeObjectRelease(v75);
  v87 = static Font.footnote.getter(v86);
  v137 = Text.font(_:)(v87, v78, v81, v85, v83);
  v136 = v88;
  v90 = v89;
  v138 = v91;
  swift_release(v87);
  sub_100055BAC(v78, v81, v85);
  v92 = swift_bridgeObjectRelease(v83);
  v93 = TVEpisode.standardDescription.getter(v92);
  if (v94)
  {
    v154 = v93;
    v155 = v94;
    v95 = Text.init<A>(_:)(&v154, &type metadata for String, v149);
    v97 = v96;
    v99 = v98;
    v101 = v100 & 1;
    LODWORD(v154) = static HierarchicalShapeStyle.secondary.getter(v95);
    v102 = (uint64_t)v150;
    sub_100824838((uint64_t)v150);
    v146(v79, v145, v56);
    v103 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v102, v79);
    v104 = (void (*)(uint64_t, uint64_t))v148;
    v148(v79, v56);
    v104(v102, v56);
    v105 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v154, v103 & 1, v95, v97, v101, v99, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v107 = v106;
    v108 = v90;
    v110 = v109;
    v112 = v111 & 1;
    sub_100055BAC(v95, v97, v101);
    swift_bridgeObjectRelease(v99);
    v114 = static Font.footnote.getter(v113);
    v151 = Text.font(_:)(v114, v105, v107, v112, v110);
    v150 = (char *)v115;
    v117 = v116;
    v149 = v118;
    swift_release(v114);
    v119 = v117 & 1;
    sub_100055BAC(v105, v107, v112);
    v120 = v110;
    v90 = v108;
    swift_bridgeObjectRelease(v120);
  }
  else
  {
    v151 = 0;
    v150 = 0;
    v119 = 0;
    v149 = 0;
  }
  v121 = v139 & 1;
  LOBYTE(v154) = v139 & 1;
  v122 = v90 & 1;
  v123 = v141;
  v124 = v140;
  v126 = v151;
  v125 = v152;
  *v140 = v141;
  v124[1] = v125;
  *((_BYTE *)v124 + 16) = v121;
  v127 = v143;
  v128 = v137;
  v124[3] = v143;
  v124[4] = v128;
  v129 = v136;
  v124[5] = v136;
  *((_BYTE *)v124 + 48) = v122;
  v130 = v138;
  v124[7] = v138;
  v124[8] = v126;
  v131 = (uint64_t)v150;
  v124[9] = (uint64_t)v150;
  v124[10] = v119;
  v132 = v119;
  v133 = v149;
  v124[11] = v149;
  sub_100055BBC(v123, v125, v121);
  swift_bridgeObjectRetain();
  sub_100055BBC(v128, v129, v122);
  swift_bridgeObjectRetain();
  sub_1000E4440(v126, v131, v132, v133);
  sub_1000E450C(v126, v131, v132, v133);
  sub_100055BAC(v128, v129, v122);
  swift_bridgeObjectRelease(v130);
  sub_100055BAC(v123, v152, v154);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v127).n128_u64[0];
  return result;
}

uint64_t sub_1000E15C8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v18[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = TVEpisode.number.getter(v4);
  v8 = 0;
  if ((v9 & 1) == 0)
  {
    v10 = v7;
    v11 = String.LocalizationValue.init(stringLiteral:)(0x2065646F73697045, 0xEA00000000006425);
    static Locale.current.getter(v11);
    v12 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v2, "Episode number for TV Episodes.", 31, 2);
    v14 = v13;
    v15 = sub_100007E8C(&qword_1011E7E30);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v16 + 56) = &type metadata for Int;
    *(_QWORD *)(v16 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v16 + 32) = v10;
    v8 = static String.localizedStringWithFormat(_:_:)(v12, v14, v16);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v16);
  }
  return v8;
}

uint64_t sub_1000E173C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v0 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TVEpisode.releaseDate.getter(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A30A0);
    return 0;
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    v17 = static Date.FormatStyle.DateStyle.long.getter(v16);
    static Date.FormatStyle.TimeStyle.omitted.getter(v17);
    v15 = Date.formatted(date:time:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v20);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  return v15;
}

uint64_t sub_1000E1910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v0 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0);
  v7 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Duration.UnitsFormatStyle(0);
  v41 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = COERCE_DOUBLE(TVEpisode.duration.getter(v11));
  v15 = 0;
  if ((v16 & 1) == 0)
  {
    v17 = static Duration.seconds(_:)(*(_QWORD *)&v14, 0, v14);
    v38 = v18;
    v39 = v17;
    v19 = sub_100007E8C(&qword_1011A0640);
    v20 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
    v36 = v1;
    v37 = v4;
    v21 = v20;
    v22 = *(_QWORD *)(v20 - 8);
    v23 = *(_QWORD *)(v22 + 72);
    v24 = *(unsigned __int8 *)(v22 + 80);
    v35 = v0;
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject(v19, v25 + 2 * v23, v24 | 7);
    *(_OWORD *)(v26 + 16) = xmmword_100EA7A80;
    v27 = static Duration.UnitsFormatStyle.Unit.hours.getter();
    static Duration.UnitsFormatStyle.Unit.minutes.getter(v27);
    v28 = sub_1000476D0(v26);
    swift_setDeallocating(v26);
    swift_arrayDestroy(v26 + v25, 2, v21);
    v29 = swift_deallocClassInstance(v26, 32, 7);
    v30 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v29);
    v31 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v30);
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v31);
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)(v28, v9, 0, 1, v6, 0, 1, v3);
    v32 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v3, v35, v32);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v37);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v40);
    v33 = sub_100048748((unint64_t *)&unk_1011CEA50, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
    Duration.formatted<A>(_:)(&v43, v13, v39, v38, v10, v33);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
    return v43;
  }
  return v15;
}

uint64_t sub_1000E1BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1 + *(int *)(sub_100007E8C(&qword_1011A0620) + 36);
  sub_10004FF60(v3, &qword_10119F7C8);
  v4 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, a2, v4);
  v5 = enum case for GenericMusicItem.tvEpisode(_:);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v3, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  v8 = sub_100007E8C(&qword_10119F7C8);
  return swift_storeEnumTagMultiPayload(v3, v8, 0);
}

uint64_t sub_1000E1C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;

  v4 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVEpisode(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  TVEpisode.artworkViewModel.getter(v6);
  v11 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v12 = &v6[v11[5]];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 5, 10, v13);
  v14 = Corner.large.unsafeMutableAddressor();
  v15 = *((_BYTE *)v14 + 16);
  v16 = *(_OWORD *)v14;
  *(_QWORD *)&v6[v11[6]] = 0x3FFC71C71C71C71CLL;
  v17 = &v6[v11[7]];
  *(_OWORD *)v17 = v16;
  v17[16] = v15;
  v18 = TVEpisode.title.getter(v14);
  v20 = v19;
  v21 = TVEpisode.showName.getter();
  v22 = (uint64_t *)&v6[v4[5]];
  *v22 = v18;
  v22[1] = v20;
  v23 = (uint64_t *)&v6[v4[6]];
  *v23 = v21;
  v23[1] = v24;
  v25 = &v6[v4[7]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v6[v4[8]] = 1;
  v6[v4[9]] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_1000E1E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t result;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v2 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v15 - v7;
  _s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  v9 = sub_100007E8C(&qword_1011A03B8);
  State.wrappedValue.getter(v8, v9);
  v10 = sub_100048748(&qword_1011A0590, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v8, v2, v10);
  v12 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  result = v12(v8, v2);
  if ((v11 & 1) == 0)
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v14(v8, a1, v2);
    v14(v6, (uint64_t)v8, v2);
    State.wrappedValue.setter(v6, v9);
    return v12(v8, v2);
  }
  return result;
}

uint64_t sub_1000E1FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = type metadata accessor for TVSeason(0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVShow(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14TVEpisodesViewV10DataSourceOMa(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  v15 = sub_100007E8C(&qword_1011A0258);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10005B704(a1, (uint64_t)v18, _s14TVEpisodesViewV10DataSourceOMa);
  sub_10005B704(v29, v19, _s14TVEpisodesViewV10DataSourceOMa);
  if (swift_getEnumCaseMultiPayload(v18, v9) == 1)
  {
    sub_10005B704((uint64_t)v18, (uint64_t)v12, _s14TVEpisodesViewV10DataSourceOMa);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v21 = v26;
      v20 = v27;
      v5 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, v19, v28);
      v22 = static TVSeason.== infix(_:_:)(v12, v21);
      v23 = *(void (**)(char *, uint64_t))(v20 + 8);
      v23(v21, v5);
      v24 = v12;
LABEL_9:
      v23(v24, v5);
      sub_10005B748((uint64_t)v18, _s14TVEpisodesViewV10DataSourceOMa);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  }
  else
  {
    sub_10005B704((uint64_t)v18, (uint64_t)v14, _s14TVEpisodesViewV10DataSourceOMa);
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v19, v5);
      v22 = static TVShow.== infix(_:_:)(v14, v8);
      v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v8, v5);
      v24 = v14;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  sub_10004FF60((uint64_t)v18, &qword_1011A0258);
  v22 = 0;
  return v22 & 1;
}

uint64_t sub_1000E2244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000DD484(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000E224C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0298;
  if (!qword_1011A0298)
  {
    v1 = sub_100044B54(&qword_1011A0290);
    sub_100049F28(&qword_1011A02A0, &qword_1011A02A8, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0298);
  }
  return result;
}

unint64_t sub_1000E22D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A02C8;
  if (!qword_1011A02C8)
  {
    v1 = sub_100044B54(&qword_1011A0268);
    sub_1000E2354();
    sub_100049F28(&qword_1011A02F0, &qword_1011A02C0, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A02C8);
  }
  return result;
}

unint64_t sub_1000E2354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A02D0;
  if (!qword_1011A02D0)
  {
    v1 = sub_100044B54(&qword_1011A0278);
    sub_100049F28(&qword_1011A02D8, &qword_1011A0270, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_100049F28(&qword_1011A02E0, &qword_1011A02E8, (uint64_t)&unk_100EC0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A02D0);
  }
  return result;
}

unint64_t sub_1000E23F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A02F8;
  if (!qword_1011A02F8)
  {
    v1 = sub_100044B54(&qword_1011A0280);
    sub_1000E22D0();
    sub_1000E2354();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A02F8);
  }
  return result;
}

uint64_t sub_1000E245C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000DD640(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000E2464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0320;
  if (!qword_1011A0320)
  {
    v1 = sub_100044B54(&qword_1011A0328);
    sub_100048748(&qword_1011A0330, _s14TVEpisodesViewV13SectionHeaderVMa, (uint64_t)&unk_100EAA2D0);
    sub_1000E2508();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0320);
  }
  return result;
}

uint64_t _s14TVEpisodesViewV13SectionHeaderVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A04E0, (uint64_t)&_s14TVEpisodesViewV13SectionHeaderVMn);
}

unint64_t sub_1000E2508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0338;
  if (!qword_1011A0338)
  {
    v1 = sub_100044B54(&qword_1011A0340);
    sub_100049F28(&qword_1011A0348, &qword_1011A0350, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0338);
  }
  return result;
}

uint64_t sub_1000E2588(uint64_t a1)
{
  return sub_1000E2888(a1, sub_1000DD904);
}

uint64_t sub_1000E2594()
{
  uint64_t v0;

  return sub_1000DDA00(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000E25A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = _s14TVEpisodesViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_1000A6174(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = _s14TVEpisodesViewV10DataSourceOMa(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
    v8 = type metadata accessor for TVSeason(0);
  else
    v8 = type metadata accessor for TVShow(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v10 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  swift_release(*v9);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = (int *)type metadata accessor for Library.Context(0);
    v13 = (char *)v9 + v12[5];
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    v16 = (char *)v9 + v12[6];
    v17 = type metadata accessor for Artist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    v19 = (char *)v9 + v12[7];
    v20 = type metadata accessor for Composer(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    v22 = (char *)v9 + v12[8];
    v23 = type metadata accessor for Genre(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    v25 = (char *)v9 + v12[9];
    v26 = type metadata accessor for Playlist(0);
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
    v28 = (char *)v9 + v12[10];
    v29 = type metadata accessor for TVShow(0);
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
    v31 = (char *)v9 + v12[11];
    v32 = type metadata accessor for TVSeason(0);
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v12[15] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v12[16]));
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000E287C(uint64_t a1)
{
  return sub_1000E2888(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000DDBBC);
}

uint64_t sub_1000E2888(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s14TVEpisodesViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t _s14TVEpisodesViewV13TVEpisodeCellVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A0418, (uint64_t)&_s14TVEpisodesViewV13TVEpisodeCellVMn);
}

_QWORD *sub_1000E2918(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v76;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for TVEpisode(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = (_QWORD *)((char *)a1 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    swift_retain(v10);
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      v17 = *v12;
      *v11 = *v12;
      swift_retain(v17);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
    v18 = a3[7];
    v19 = a3[8];
    v20 = (_QWORD *)((char *)a1 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (char *)a1 + v19;
    v24 = *(void **)((char *)a2 + v19);
    v25 = *((_BYTE *)a2 + v19 + 8);
    swift_retain(v22);
    sub_1000A4100(v24, v25);
    *(_QWORD *)v23 = v24;
    v23[8] = v25;
    v26 = a3[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = *((_QWORD *)v28 + 1);
    LOBYTE(v23) = v28[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    *((_QWORD *)v27 + 1) = v30;
    v27[16] = (char)v23;
    v31 = a3[10];
    v32 = a3[11];
    v33 = (_QWORD *)((char *)a1 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v36 = *v34;
    v35 = v34[1];
    *v33 = v36;
    v33[1] = v35;
    v37 = (char *)a1 + v32;
    v38 = (char *)a2 + v32;
    v39 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
    v41 = swift_retain(v36);
    v40(v37, v38, v39, v41);
    v42 = *(int *)(sub_100007E8C(&qword_1011A03B8) + 28);
    v43 = *(_QWORD *)&v38[v42];
    *(_QWORD *)&v37[v42] = v43;
    v44 = a3[12];
    v45 = a3[13];
    v46 = (_QWORD *)((char *)a1 + v44);
    v47 = (_QWORD *)((char *)a2 + v44);
    v49 = *v47;
    v48 = v47[1];
    *v46 = v49;
    v46[1] = v48;
    v50 = (_QWORD *)((char *)a1 + v45);
    v51 = (_QWORD *)((char *)a2 + v45);
    v53 = *v51;
    v52 = v51[1];
    v76 = v53;
    *v50 = v53;
    v50[1] = v52;
    v54 = a3[14];
    v55 = a3[15];
    v56 = (_QWORD *)((char *)a1 + v54);
    v57 = (_QWORD *)((char *)a2 + v54);
    v59 = *v57;
    v58 = v57[1];
    *v56 = v59;
    v56[1] = v58;
    v60 = (_QWORD *)((char *)a1 + v55);
    v61 = (_QWORD *)((char *)a2 + v55);
    v63 = *v61;
    v62 = v61[1];
    *v60 = v63;
    v60[1] = v62;
    v64 = a3[16];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    v69 = v66[16];
    swift_retain(v43);
    swift_retain(v49);
    swift_retain(v76);
    swift_retain(v59);
    swift_retain(v63);
    sub_1000A410C(v67, v68, v69);
    *(_QWORD *)v65 = v67;
    *((_QWORD *)v65 + 1) = v68;
    v65[16] = v69;
    v70 = a3[17];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v73 = *(_QWORD *)v72;
    v74 = *((_QWORD *)v72 + 1);
    LOBYTE(v49) = v72[16];
    sub_1000A411C(*(_QWORD *)v72, v74, v49);
    *(_QWORD *)v71 = v73;
    *((_QWORD *)v71 + 1) = v74;
    v71[16] = v49;
  }
  return a1;
}

double sub_1000E2BC4(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  v5 = (_QWORD *)(a1 + a2[6]);
  v6 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  sub_1000A4224(*(id *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
  sub_1000A6174(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8));
  swift_release(*(_QWORD *)(a1 + a2[10]));
  v8 = a1 + a2[11];
  v9 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = sub_100007E8C(&qword_1011A03B8);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  swift_release(*(_QWORD *)(a1 + a2[12]));
  swift_release(*(_QWORD *)(a1 + a2[13]));
  swift_release(*(_QWORD *)(a1 + a2[14]));
  swift_release(*(_QWORD *)(a1 + a2[15]));
  sub_1000A4230(*(_QWORD *)(a1 + a2[16]), *(_QWORD *)(a1 + a2[16] + 8), *(_BYTE *)(a1 + a2[16] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[17]), *(_QWORD *)(a1 + a2[17] + 8), *(_BYTE *)(a1 + a2[17] + 16));
}

uint64_t sub_1000E2D38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v74;

  v6 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (uint64_t *)(a1 + v8);
  v11 = (uint64_t *)(a2 + v8);
  swift_retain(v9);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v11;
    *v10 = *v11;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a1 + v17;
  v22 = *(void **)(a2 + v17);
  v23 = *(_BYTE *)(a2 + v17 + 8);
  swift_retain(v20);
  sub_1000A4100(v22, v23);
  *(_QWORD *)v21 = v22;
  *(_BYTE *)(v21 + 8) = v23;
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  LOBYTE(v21) = *(_BYTE *)(v26 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v26, v28);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  *(_BYTE *)(v25 + 16) = v21;
  v29 = a3[10];
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (uint64_t *)(a2 + v29);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  v35 = a1 + v30;
  v36 = a2 + v30;
  v37 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v37 - 8) + 16);
  v39 = swift_retain(v34);
  v38(v35, v36, v37, v39);
  v40 = *(int *)(sub_100007E8C(&qword_1011A03B8) + 28);
  v41 = *(_QWORD *)(v36 + v40);
  *(_QWORD *)(v35 + v40) = v41;
  v42 = a3[12];
  v43 = a3[13];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (uint64_t *)(a2 + v42);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  v48 = (_QWORD *)(a1 + v43);
  v49 = (uint64_t *)(a2 + v43);
  v51 = *v49;
  v50 = v49[1];
  v74 = v51;
  *v48 = v51;
  v48[1] = v50;
  v52 = a3[14];
  v53 = a3[15];
  v54 = (_QWORD *)(a1 + v52);
  v55 = (uint64_t *)(a2 + v52);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  v58 = (_QWORD *)(a1 + v53);
  v59 = (uint64_t *)(a2 + v53);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  v62 = a3[16];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = *(_QWORD *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  v67 = *(_BYTE *)(v64 + 16);
  swift_retain(v41);
  swift_retain(v47);
  swift_retain(v74);
  swift_retain(v57);
  swift_retain(v61);
  sub_1000A410C(v65, v66, v67);
  *(_QWORD *)v63 = v65;
  *(_QWORD *)(v63 + 8) = v66;
  *(_BYTE *)(v63 + 16) = v67;
  v68 = a3[17];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  LOBYTE(v47) = *(_BYTE *)(v70 + 16);
  sub_1000A411C(*(_QWORD *)v70, v72, v47);
  *(_QWORD *)v69 = v71;
  *(_QWORD *)(v69 + 8) = v72;
  *(_BYTE *)(v69 + 16) = v47;
  return a1;
}

uint64_t sub_1000E2FB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;

  v6 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)(a2 + v10);
    sub_10004FF60(a1 + v10, (uint64_t *)&unk_1011C72D0);
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      v16 = *v12;
      *v11 = *v12;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(id *)v24;
  v26 = *(_BYTE *)(v24 + 8);
  sub_1000A4100(*(id *)v24, v26);
  v27 = *(void **)v23;
  v28 = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v26;
  sub_1000A4224(v27, v28);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  LOBYTE(v23) = *(_BYTE *)(v31 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v31, v33);
  v34 = *(_QWORD *)v30;
  v35 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v30 = v32;
  *(_QWORD *)(v30 + 8) = v33;
  *(_BYTE *)(v30 + 16) = v23;
  sub_1000A6174(v34, v35);
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a1 + v36);
  v40 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v40;
  swift_retain(v40);
  swift_release(v39);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  v41 = a3[11];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = *(int *)(sub_100007E8C(&qword_1011A03B8) + 28);
  v46 = *(_QWORD *)(v42 + v45);
  v47 = *(_QWORD *)(v43 + v45);
  *(_QWORD *)(v42 + v45) = v47;
  swift_retain(v47);
  swift_release(v46);
  v48 = a3[12];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a1 + v48);
  v52 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(a1 + v48) = v52;
  swift_retain(v52);
  swift_release(v51);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  v53 = a3[13];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = *(_QWORD *)(a1 + v53);
  v57 = *(_QWORD *)(a2 + v53);
  *(_QWORD *)(a1 + v53) = v57;
  swift_retain(v57);
  swift_release(v56);
  *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
  v58 = a3[14];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)(a1 + v58);
  v62 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)(a1 + v58) = v62;
  swift_retain(v62);
  swift_release(v61);
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
  v63 = a3[15];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(a1 + v63);
  v67 = *(_QWORD *)(a2 + v63);
  *(_QWORD *)(a1 + v63) = v67;
  swift_retain(v67);
  swift_release(v66);
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(v65 + 8);
  v68 = a3[16];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  LOBYTE(v65) = *(_BYTE *)(v70 + 16);
  sub_1000A410C(*(_QWORD *)v70, v72, v65);
  v73 = *(_QWORD *)v69;
  v74 = *(_QWORD *)(v69 + 8);
  v75 = *(_BYTE *)(v69 + 16);
  *(_QWORD *)v69 = v71;
  *(_QWORD *)(v69 + 8) = v72;
  *(_BYTE *)(v69 + 16) = v65;
  sub_1000A4230(v73, v74, v75);
  v76 = a3[17];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = *(_QWORD *)v78;
  v80 = *(_QWORD *)(v78 + 8);
  LOBYTE(v71) = *(_BYTE *)(v78 + 16);
  sub_1000A411C(*(_QWORD *)v78, v80, v71);
  v81 = *(_QWORD *)v77;
  v82 = *(_QWORD *)(v77 + 8);
  v83 = *(_BYTE *)(v77 + 16);
  *(_QWORD *)v77 = v79;
  *(_QWORD *)(v77 + 8) = v80;
  *(_BYTE *)(v77 + 16) = v71;
  sub_1000A4240(v81, v82, v83);
  return a1;
}

uint64_t sub_1000E32F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 v34;

  v6 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = a3[9];
  v16 = a3[10];
  v17 = a1 + v15;
  v18 = (__int128 *)(a2 + v15);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 16);
  *(_OWORD *)v17 = v19;
  v20 = *(_OWORD *)(a2 + v16);
  *(_BYTE *)(v17 + 16) = (_BYTE)v18;
  *(_OWORD *)(a1 + v16) = v20;
  v21 = a3[11];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)(v22 + *(int *)(v25 + 28)) = *(_QWORD *)(v23 + *(int *)(v25 + 28));
  v26 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v27 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[16];
  v29 = a3[17];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v32 = a1 + v29;
  v33 = (__int128 *)(a2 + v29);
  v34 = *v33;
  *(_BYTE *)(v32 + 16) = *((_BYTE *)v33 + 16);
  *(_OWORD *)v32 = v34;
  return a1;
}

uint64_t sub_1000E34B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  char v71;

  v6 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = a3[6];
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_10004FF60(a1 + v9, (uint64_t *)&unk_1011C72D0);
    v12 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = v15[1];
  *v15 = v18;
  v15[1] = v17;
  swift_release(v19);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  LOBYTE(v22) = *((_BYTE *)v22 + 8);
  v24 = *(void **)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = (_BYTE)v22;
  sub_1000A4224(v24, v25);
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_BYTE *)(v28 + 16);
  v30 = *(_QWORD *)v27;
  v31 = *(_QWORD *)(v27 + 8);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_BYTE *)(v27 + 16) = v29;
  sub_1000A6174(v30, v31);
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a1 + v32);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  swift_release(v35);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  v40 = *(int *)(sub_100007E8C(&qword_1011A03B8) + 28);
  v41 = *(_QWORD *)(v37 + v40);
  *(_QWORD *)(v37 + v40) = *(_QWORD *)(v38 + v40);
  swift_release(v41);
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_QWORD *)(a1 + v42);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_release(v45);
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  swift_release(v49);
  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  v50 = a3[14];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  swift_release(v53);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
  v54 = a3[15];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  swift_release(v57);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(v56 + 8);
  v58 = a3[16];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_BYTE *)(v60 + 16);
  v62 = *(_QWORD *)v59;
  v63 = *(_QWORD *)(v59 + 8);
  v64 = *(_BYTE *)(v59 + 16);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v61;
  sub_1000A4230(v62, v63, v64);
  v65 = a3[17];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(_BYTE *)(v67 + 16);
  v69 = *(_QWORD *)v66;
  v70 = *(_QWORD *)(v66 + 8);
  v71 = *(_BYTE *)(v66 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_BYTE *)(v66 + 16) = v68;
  sub_1000A4240(v69, v70, v71);
  return a1;
}

uint64_t sub_1000E3770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E377C);
}

uint64_t sub_1000E377C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for TVEpisode(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_100007E8C(&qword_1011A03B8);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[11];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1000E3850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E385C);
}

uint64_t sub_1000E385C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for TVEpisode(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A03B8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[11];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000E392C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[14];

  v2 = type metadata accessor for TVEpisode(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_100EAA228;
      v8[4] = &unk_100EAA240;
      v8[5] = &unk_100EAA098;
      v8[6] = &unk_100EAA258;
      sub_1000E3A44(319, (unint64_t *)&unk_1011A0428, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        v8[8] = &unk_100EAA258;
        v8[9] = &unk_100EAA258;
        v8[10] = &unk_100EAA258;
        v8[11] = &unk_100EAA258;
        v8[12] = &unk_100EAA098;
        v8[13] = &unk_100EAA098;
        swift_initStructMetadata(a1, 256, 14, v8, a1 + 16);
      }
    }
  }
}

void sub_1000E3A44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1000E3A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1000E3ADC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1000E3B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000E3B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000E3BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000E3BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000E3C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E3C40);
}

uint64_t sub_1000E3C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000E3C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E3C8C);
}

uint64_t sub_1000E3C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1000E3CD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000E3D38(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_1000E3D38(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_1011A04F0)
  {
    v4[0] = type metadata accessor for TVSeason(255);
    v4[1] = type metadata accessor for TVEpisode(255);
    v4[2] = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    v4[3] = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v2 = type metadata accessor for MusicLibrarySection(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1011A04F0);
  }
}

uint64_t sub_1000E3E00()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011A0280);
  v1[1] = &type metadata for String;
  v1[2] = sub_1000E23F0();
  v1[3] = sub_100055B68();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:)>>, 1);
}

uint64_t sub_1000E3E60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94F7C, 1);
}

uint64_t sub_1000E3E70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94F54, 1);
}

unint64_t sub_1000E3E80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A99D0;
  if (!qword_1011A99D0)
  {
    v1 = objc_opt_self(MPCPlaybackIntent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A99D0);
  }
  return result;
}

uint64_t sub_1000E3EC4()
{
  return 16;
}

__n128 sub_1000E3ED0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000E3EDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000E1C98(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000E3EE4()
{
  unint64_t result;

  result = qword_1011A2130;
  if (!qword_1011A2130)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1011A2130);
  }
  return result;
}

uint64_t sub_1000E3F28()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)_s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5]));
  v8 = (_QWORD *)(v0 + v4 + v1[6]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = v3 | 7;
  v12 = v4 + v5;
  swift_release(*(_QWORD *)(v6 + v1[7] + 8));
  sub_1000A4224(*(id *)(v6 + v1[8]), *(_BYTE *)(v6 + v1[8] + 8));
  sub_1000A6174(*(_QWORD *)(v6 + v1[9]), *(_QWORD *)(v6 + v1[9] + 8));
  swift_release(*(_QWORD *)(v6 + v1[10]));
  v13 = v6 + v1[11];
  v14 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = sub_100007E8C(&qword_1011A03B8);
  swift_release(*(_QWORD *)(v13 + *(int *)(v15 + 28)));
  swift_release(*(_QWORD *)(v6 + v1[12]));
  swift_release(*(_QWORD *)(v6 + v1[13]));
  swift_release(*(_QWORD *)(v6 + v1[14]));
  swift_release(*(_QWORD *)(v6 + v1[15]));
  sub_1000A4230(*(_QWORD *)(v6 + v1[16]), *(_QWORD *)(v6 + v1[16] + 8), *(_BYTE *)(v6 + v1[16] + 16));
  sub_1000A4240(*(_QWORD *)(v6 + v1[17]), *(_QWORD *)(v6 + v1[17] + 8), *(_BYTE *)(v6 + v1[17] + 16));
  return swift_deallocObject(v0, v12, v11);
}

uint64_t sub_1000E40E0(uint64_t a1)
{
  _s14TVEpisodesViewV13TVEpisodeCellVMa(0);
  return sub_1000E1E48(a1);
}

uint64_t sub_1000E411C(uint64_t a1)
{
  sub_1000E4164(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

void sub_1000E4164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_release(a10);

  }
}

uint64_t sub_1000E41C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1000E1BC4(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1000E41D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0600;
  if (!qword_1011A0600)
  {
    v1 = sub_100044B54(&qword_1011A05F8);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0600);
  }
  return result;
}

unint64_t sub_1000E4264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9260;
  if (!qword_1011C9260)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C5080);
    sub_1000E42E8();
    sub_100049F28((unint64_t *)&unk_1011C50A0, &qword_1011C9280, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9260);
  }
  return result;
}

unint64_t sub_1000E42E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5090;
  if (!qword_1011C5090)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C9270);
    swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.view(availableSize:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5090);
  }
  return result;
}

unint64_t sub_1000E4360()
{
  unint64_t result;

  result = qword_1011AE8E0;
  if (!qword_1011AE8E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011AE8E0);
  }
  return result;
}

uint64_t sub_1000E43A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  sub_100055BBC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_100055BBC(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1000E4440(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1000E4440(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100055BBC(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000E4470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  sub_100055BAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_100055BAC(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  sub_1000E450C(v7, v8, v9, v10);
  return a1;
}

double sub_1000E450C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BAC(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000E453C()
{
  return sub_1000E4570(&qword_1011A0648, &qword_1011A0650, (void (*)(void))sub_1000E45D4, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_1000E4570(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000E45D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0658;
  if (!qword_1011A0658)
  {
    v1 = sub_100044B54(&qword_1011C9470);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0658);
  }
  return result;
}

unint64_t sub_1000E463C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0660;
  if (!qword_1011A0660)
  {
    v1 = sub_100044B54(&qword_1011A0588);
    sub_100049F28(&qword_1011A0668, &qword_1011A0540, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0660);
  }
  return result;
}

void **sub_1000E46C0(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for GenericMusicItem(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v17 = (void **)((char *)v7 + v16);
    v18 = (void **)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      swift_retain(v19);
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return v7;
}

uint64_t sub_1000E47F4(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v8 = (id *)((char *)a1 + *(int *)(a2 + 28));
  if (*v8)
    return swift_release(v8[1]);
  return result;
}

void **sub_1000E4894(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v16 = (void **)((char *)a1 + v15);
  v17 = (void **)((char *)a2 + v15);
  if (*v17)
  {
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain(v18);
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

void **sub_1000E49A0(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v18 = a3[7];
  v19 = (void **)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  v21 = *(uint64_t *)((char *)a1 + v18);
  v22 = *v20;
  if (!v21)
  {
    if (v22)
    {
      v25 = v20[1];
      *v19 = v22;
      v19[1] = v25;
      swift_retain(v25);
      return a1;
    }
LABEL_13:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!v22)
  {
    swift_release(v19[1]);
    goto LABEL_13;
  }
  v23 = v20[1];
  v24 = v19[1];
  *v19 = v22;
  v19[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

_QWORD *sub_1000E4B2C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = *v14;
  if (*v14)
  {
    v16 = v14[1];
    *v13 = v15;
    v13[1] = v16;
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  return a1;
}

void **sub_1000E4C28(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (void **)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  if (!*(void **)((char *)a1 + v16))
  {
    if (v19)
    {
      v22 = v18[1];
      *v17 = v19;
      v17[1] = v22;
      return a1;
    }
LABEL_13:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    return a1;
  }
  if (!v19)
  {
    swift_release(v17[1]);
    goto LABEL_13;
  }
  v20 = v18[1];
  v21 = v17[1];
  *v17 = v19;
  v17[1] = v20;
  swift_release(v21);
  return a1;
}

uint64_t sub_1000E4DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E4DAC);
}

uint64_t sub_1000E4DAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1000E4E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E4E38);
}

char *sub_1000E4E38(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SegueContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A06C8;
  if (!qword_1011A06C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SegueContext);
  return result;
}

void sub_1000E4EEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000E4F78(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EAA3F0;
    v4[3] = &unk_100EAA408;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1000E4F78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A06D8)
  {
    v2 = type metadata accessor for GenericMusicItem(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A06D8);
  }
}

uint64_t sub_1000E4FCC(uint64_t a1, void *a2, char a3, void *a4)
{
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t (*v14)(uint64_t, id, _QWORD, uint64_t, uint64_t);
  id v15;
  char v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  __int128 v24[2];
  uint64_t v25;
  void *v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v26 = a4;
  v8 = sub_1000E5638();
  v9 = a4;
  v10 = sub_100007E8C(qword_1011A0718);
  if ((swift_dynamicCast(v24, &v26, v8, v10, 6) & 1) != 0)
  {
    sub_100064C48(v24, (uint64_t)v27);
    v11 = v28;
    v12 = v29;
    sub_100007E68(v27, v28);
    v13 = a2;
    if (!a2)
      v13 = v9;
    v14 = *(uint64_t (**)(uint64_t, id, _QWORD, uint64_t, uint64_t))(v12 + 16);
    v15 = a2;
    v16 = v14(a1, v13, a3 & 1, v11, v12);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
    if ((v16 & 1) != 0)
    {
      v17 = 1;
      return v17 & 1;
    }
  }
  else
  {
    v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_1000E55F8((uint64_t)v24);
  }
  v18 = objc_msgSend(v9, "parentViewController");
  if (v18)
  {
    v19 = v18;
    v20 = a2;
    if (!a2)
      v20 = v9;
    v21 = a2;
    v22 = v19;
    v17 = sub_1000E4FCC(a1, v20, a3 & 1, v22);

  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

id sub_1000E528C(uint64_t a1, uint64_t a2, char a3)
{
  id *v3;

  return objc_msgSend(*v3, "navigateTo:from:animated:", a1, a2, a3 & 1);
}

id sub_1000E52BC(uint64_t a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, "drop:animated:", a1, a2 & 1);
}

uint64_t sub_1000E52EC(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = objc_msgSend(v4, "selectedViewController");
  if (!v8
    || (v18[0] = v8,
        v9 = sub_1000E5638(),
        v10 = sub_100007E8C(qword_1011A0718),
        (swift_dynamicCast(&v15, v18, v9, v10, 6) & 1) == 0))
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v16 + 1))
  {
LABEL_6:
    sub_1000E55F8((uint64_t)&v15);
    v13 = 0;
    return v13 & 1;
  }
  sub_100064C48(&v15, (uint64_t)v18);
  v11 = v19;
  v12 = v20;
  sub_100007E68(v18, v19);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 16))(a1, a2, a3 & 1, v11, v12);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v18);
  return v13 & 1;
}

uint64_t sub_1000E5468(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = objc_msgSend(v3, "selectedViewController");
  if (!v6
    || (v16[0] = v6,
        v7 = sub_1000E5638(),
        v8 = sub_100007E8C(qword_1011A0718),
        (swift_dynamicCast(&v13, v16, v7, v8, 6) & 1) == 0))
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_6:
    sub_1000E55F8((uint64_t)&v13);
    return 0;
  }
  sub_100064C48(&v13, (uint64_t)v16);
  v9 = v17;
  v10 = v18;
  sub_100007E68(v16, v17);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 24))(a1, a2 & 1, v9, v10);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v16);
  return v11;
}

uint64_t sub_1000E55B4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000E52EC(a1, a2, a3) & 1;
}

uint64_t sub_1000E55D8(uint64_t a1, char a2)
{
  return sub_1000E5468(a1, a2);
}

uint64_t sub_1000E55F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000E5638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D470;
  if (!qword_10119D470)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10119D470);
  }
  return result;
}

void *sub_1000E5674(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  void *result;
  id v12;
  uint64_t v13;
  Class isa;
  id v15;

  v2 = v1;
  v4 = objc_msgSend(v1, "viewControllers");
  v5 = sub_1000E5638();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  sub_1008AB03C((uint64_t)a1, v6);
  v8 = v7;
  LOBYTE(v4) = v9;
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v6).n128_u64[0];
  result = 0;
  if ((v4 & 1) == 0)
  {
    v12 = objc_msgSend(v2, "viewControllers", v10);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v5);

    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setViewControllers:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    v15 = a1;
    return a1;
  }
  return result;
}

void sub_1000E578C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000E4F78(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
  }
}

uint64_t *sub_1000E57F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A20D0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_1000E58C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1000E5930(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1000E59D4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_1000E5AC4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1000E5B68(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1000E5C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E5C64);
}

uint64_t sub_1000E5C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000E5CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E5CB0);
}

uint64_t sub_1000E5CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s7ContextVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s7ContextVMn_0);
}

double sub_1000E5D00(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(__n128);
  uint64_t v22;
  __n128 v23;
  void *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(__n128);
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t (*v63)(__n128);
  __n128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  __n128 v76;
  uint64_t v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  double result;
  uint64_t v82;
  void (*v83)(__n128);
  __n128 v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  __n128 v107;
  __n128 v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  __n128 v126;
  void *v127;
  _BYTE v128[4];
  int v129;
  unint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  __int128 v143;
  id v144[3];
  __int128 v145;
  uint64_t ObjectType;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A08E0);
  v137 = *(_QWORD *)(v4 - 8);
  v138 = v4;
  __chkstk_darwin(v4);
  v136 = &v128[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011A2310);
  v140 = *(_QWORD *)(v6 - 8);
  v141 = v6;
  __chkstk_darwin(v6);
  v139 = &v128[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v8);
  v135 = &v128[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v131 = sub_100007E8C(&qword_1011A08F8);
  v10 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v12 = &v128[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A0900);
  v133 = *(_QWORD *)(v13 - 8);
  v134 = v13;
  __chkstk_darwin(v13);
  v132 = &v128[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v1[4];
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = *(_OWORD *)(v16 + 16 * v17 + 16);
    v19 = v1[2];
    v143 = v18;
    if (v19)
    {
      v20 = v2;
      v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v19 + 216);
      v22 = v18;
      swift_unknownObjectRetain(v18, v14);
      v23 = swift_retain(v19);
      v24 = (void *)v21(v23);
      v25 = swift_release(v19);
      if (a1)
      {
        v26 = (*(uint64_t (**)(__n128))(*a1 + 216))(v25);
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v145 = v26;
        v27 = _bridgeAnythingToObjectiveC<A>(_:)(&v145, ObjectType);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v145);
      }
      else
      {
        v27 = 0;
      }
      v28 = objc_msgSend(v24, "isEqual:", v27);

      swift_unknownObjectRelease(v27);
      v2 = v20;
      if ((v28 & 1) != 0)
        goto LABEL_23;
      v29 = (uint64_t *)v20[2];
      if (v29)
      {
        v30 = qword_10119B8A8;
        swift_retain(v20[2]);
        if (v30 != -1)
          swift_once(&qword_10119B8A8, sub_1000E7A08);
        v31 = type metadata accessor for Logger(0);
        sub_100048B14(v31, (uint64_t)qword_1011A07A0);
        swift_unknownObjectRetain_n(v22, 2);
        v32 = swift_retain_n(v29, 2);
        v33 = Logger.logObject.getter(v32);
        v34 = static os_log_type_t.default.getter();
        v35 = v34;
        if (os_log_type_enabled(v33, v34))
        {
          v36 = swift_slowAlloc(22, -1);
          v142 = (void *)swift_slowAlloc(64, -1);
          v144[0] = v142;
          *(_DWORD *)v36 = 136446466;
          v37 = *v29;
          v129 = v35;
          v38 = *(uint64_t (**)(__n128))(v37 + 240);
          v39 = swift_retain(v29);
          v40 = v38(v39);
          v130 = v10;
          v42 = v41;
          swift_release(v29);
          *(_QWORD *)&v145 = sub_100322200(v40, v42, (uint64_t *)v144);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, (char *)&v145 + 8);
          swift_release_n(v29, 2, v43);
          swift_bridgeObjectRelease(v42);
          *(_WORD *)(v36 + 12) = 2082;
          v145 = v143;
          swift_unknownObjectRetain(v22, v44);
          v45 = sub_100007E8C(&qword_1011A08D8);
          v46 = String.init<A>(describing:)(&v145, v45);
          v48 = v47;
          *(_QWORD *)&v145 = sub_100322200(v46, v47, (uint64_t *)v144);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, (char *)&v145 + 8);
          swift_unknownObjectRelease_n(v22, 2);
          v49 = v48;
          v10 = v130;
          swift_bridgeObjectRelease(v49);
          _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v129, "Adding videoContext==%{public}s to container=%{public}s", (uint8_t *)v36, 0x16u);
          v50 = v142;
          swift_arrayDestroy(v142, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v50, -1, -1);
          v51 = v36;
          v2 = v20;
          swift_slowDealloc(v51, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n(v22, 2);
          swift_release_n(v29, 2, v76);
        }
        v52 = 1;
        goto LABEL_22;
      }
    }
    else
    {
      swift_unknownObjectRetain(v18, v14);
    }
    if (!a1)
    {
LABEL_23:
      swift_unknownObjectRelease(v143);
      goto LABEL_24;
    }
    v142 = v2;
    v53 = qword_10119B8A8;
    swift_retain(a1);
    if (v53 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v54 = type metadata accessor for Logger(0);
    sub_100048B14(v54, (uint64_t)qword_1011A07A0);
    v55 = v143;
    swift_unknownObjectRetain_n(v143, 2);
    v56 = swift_retain_n(a1, 2);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = swift_slowAlloc(22, -1);
      v61 = (void *)swift_slowAlloc(64, -1);
      v144[0] = v61;
      *(_DWORD *)v60 = 136446466;
      v62 = *a1;
      v129 = v59;
      v63 = *(uint64_t (**)(__n128))(v62 + 240);
      v64 = swift_retain(a1);
      v65 = v63(v64);
      v130 = v10;
      v67 = v66;
      swift_release(a1);
      *(_QWORD *)&v145 = sub_100322200(v65, v67, (uint64_t *)v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, (char *)&v145 + 8);
      v52 = 2;
      swift_release_n(a1, 2, v68);
      swift_bridgeObjectRelease(v67);
      *(_WORD *)(v60 + 12) = 2082;
      v145 = v143;
      swift_unknownObjectRetain(v55, v69);
      v70 = sub_100007E8C(&qword_1011A08D8);
      v71 = String.init<A>(describing:)(&v145, v70);
      v73 = v72;
      *(_QWORD *)&v145 = sub_100322200(v71, v72, (uint64_t *)v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, (char *)&v145 + 8);
      swift_unknownObjectRelease_n(v55, 2);
      v74 = v73;
      v10 = v130;
      swift_bridgeObjectRelease(v74);
      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v129, "Removing videoContext=%{public}s from container=%{public}s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

    }
    else
    {

      v52 = 2;
      swift_unknownObjectRelease_n(v55, 2);
      swift_release_n(a1, 2, v75);
    }
    v29 = a1;
    v2 = v142;
LABEL_22:
    v77 = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t))(*((_QWORD *)&v143 + 1) + 8 * v52))(v29, v77);
    swift_release(v29);
    goto LABEL_23;
  }
LABEL_24:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100047938((uint64_t)_swiftEmptyArrayStorage);
    v78 = v127;
  }
  else
  {
    v78 = &_swiftEmptySetSingleton;
  }
  v79 = v2 + 3;
  swift_beginAccess(v2 + 3, &v145, 1, 0);
  v80 = v2[3];
  v2[3] = v78;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v80).n128_u64[0];
  v82 = v2[2];
  if (v82)
  {
    v83 = *(void (**)(__n128))(*(_QWORD *)v82 + 192);
    v84 = swift_retain(v2[2]);
    v83(v84);
    v85 = sub_1000A9B84();
    v142 = v2;
    v86 = v85;
    v144[0] = (id)static OS_dispatch_queue.main.getter(v85, v87, v88, v89, v90, v91, v92, v93);
    v94 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    *(_QWORD *)&v143 = *(_QWORD *)(*(_QWORD *)(v94 - 8) + 56);
    v95 = (uint64_t)v135;
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v143)(v135, 1, 1, v94);
    v96 = sub_100049F28((unint64_t *)&unk_1011A0910, &qword_1011A08F8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v130 = sub_10006A92C();
    v97 = v132;
    v98 = v12;
    v99 = v10;
    v100 = v131;
    Publisher.receive<A>(on:options:)(v144, v95, v131, v86, v96, v130);
    sub_1000A9BC0(v95);

    (*(void (**)(_BYTE *, uint64_t))(v99 + 8))(v98, v100);
    v101 = swift_allocObject(&unk_1010B0818, 24, 7);
    v102 = v142;
    swift_weakInit(v101 + 16, v142);
    v103 = sub_100049F28(&qword_1011A0920, (uint64_t *)&unk_1011A0900, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v104 = v134;
    v105 = Publisher<>.sink(receiveValue:)(sub_1000E7E04, v101, v134, v103);
    v106 = swift_release(v101);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v133 + 8))(v97, v104, v106);
    v107 = swift_beginAccess(v79, v144, 33, 0);
    AnyCancellable.store(in:)(v79, v107);
    swift_endAccess(v144);
    v108 = swift_release(v105);
    v109 = v136;
    v110 = (*(uint64_t (**)(__n128))(*(_QWORD *)v82 + 144))(v108);
    v144[0] = (id)static OS_dispatch_queue.main.getter(v110, v111, v112, v113, v114, v115, v116, v117);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v143)(v95, 1, 1, v94);
    v118 = sub_100049F28(&qword_1011A0928, (uint64_t *)&unk_1011A08E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v119 = v138;
    v120 = v139;
    Publisher.receive<A>(on:options:)(v144, v95, v138, v86, v118, v130);
    sub_1000A9BC0(v95);

    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v109, v119);
    v121 = swift_allocObject(&unk_1010B0818, 24, 7);
    swift_weakInit(v121 + 16, v102);
    v122 = sub_100049F28((unint64_t *)&unk_1011A0930, &qword_1011A2310, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v123 = v141;
    v124 = Publisher<>.sink(receiveValue:)(sub_1000E7E04, v121, v141, v122);
    v125 = swift_release(v121);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v140 + 8))(v120, v123, v125);
    v126 = swift_beginAccess(v79, v144, 33, 0);
    AnyCancellable.store(in:)(v79, v126);
    swift_endAccess(v144);
    swift_release(v82);
    *(_QWORD *)&result = swift_release(v124).n128_u64[0];
  }
  return result;
}

double sub_1000E6784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_1000E67D8();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_1000E67D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t ObjectType;
  double result;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v26 = *(_OWORD *)(v2 + 16 * v3 + 16);
      v4 = qword_10119B8A8;
      swift_retain(v1);
      swift_unknownObjectRetain(v26, v5);
      if (v4 != -1)
        swift_once(&qword_10119B8A8, sub_1000E7A08);
      v6 = type metadata accessor for Logger(0);
      sub_100048B14(v6, (uint64_t)qword_1011A07A0);
      swift_retain_n(v1, 2);
      v7 = swift_unknownObjectRetain_n(v26, 2);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc(22, -1);
        v11 = swift_slowAlloc(64, -1);
        v28 = v11;
        *(_DWORD *)v10 = 136446466;
        v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 240);
        v13 = swift_retain(v1);
        v14 = v12(v13);
        v16 = v15;
        swift_release(v1);
        *(_QWORD *)&v27 = sub_100322200(v14, v16, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, (char *)&v27 + 8);
        swift_release_n(v1, 2, v17);
        swift_bridgeObjectRelease(v16);
        *(_WORD *)(v10 + 12) = 2082;
        v27 = v26;
        swift_unknownObjectRetain(v26, v18);
        v19 = sub_100007E8C(&qword_1011A08D8);
        v20 = String.init<A>(describing:)(&v27, v19);
        v22 = v21;
        *(_QWORD *)&v27 = sub_100322200(v20, v21, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, (char *)&v27 + 8);
        swift_unknownObjectRelease_n(v26, 2);
        swift_bridgeObjectRelease(v22);
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Update videoContext=%{public}s on container=%{public}s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v11, -1, -1);
        swift_slowDealloc(v10, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v26, 2);
        swift_release_n(v1, 2, v23);
      }
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)&v26 + 1) + 24))(v1, ObjectType);
      swift_release(v1);
      *(_QWORD *)&result = swift_unknownObjectRelease(v26).n128_u64[0];
    }
  }
  return result;
}

double sub_1000E6A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t ObjectType;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return result;
  v4 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = a1 + 16 * v5;
    v7 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    v10 = v2 + 32;
    v9 = *(_QWORD *)(v2 + 32);
    v11 = *(_QWORD *)(v9 + 16);
    swift_unknownObjectRetain(v7, a2);
    if (!v11)
    {
      if (!v7)
      {
        v8 = 0;
        v12 = 0;
LABEL_34:
        swift_unknownObjectRelease(v12);
        *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
        return result;
      }
LABEL_14:
      swift_retain(v3);
      v12 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    v8 = 0;
    v10 = v2 + 32;
    v9 = *(_QWORD *)(v2 + 32);
    v11 = *(_QWORD *)(v9 + 16);
    if (!v11)
    {
      v12 = 0;
      goto LABEL_34;
    }
    v7 = 0;
  }
  v13 = v9 + 16 * v11;
  v12 = *(_QWORD *)(v13 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  swift_unknownObjectRetain(v12, a2);
  if (v7)
  {
    if (v12)
      v15 = v12 == v7;
    else
      v15 = 0;
    if (v15)
    {
      v8 = v7;
      goto LABEL_34;
    }
    if (!v12)
      goto LABEL_14;
  }
  else if (!v12)
  {
    v8 = 0;
    goto LABEL_34;
  }
  ObjectType = swift_getObjectType();
  v44 = v8;
  v17 = v10;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8);
  swift_retain(v3);
  swift_unknownObjectRetain(v12, v19);
  v18(v3, ObjectType, v14);
  v10 = v17;
  v8 = v44;
  swift_unknownObjectRelease(v12);
  v9 = *(_QWORD *)v10;
  if (v7)
  {
LABEL_17:
    if (!*(_QWORD *)(v9 + 16))
    {
      v20 = swift_getObjectType();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      swift_unknownObjectRetain(v7, v22);
      v21(v3, v20, v8);
      swift_unknownObjectRelease(v7);
    }
  }
  if (qword_10119B8A8 != -1)
    swift_once(&qword_10119B8A8, sub_1000E7A08);
  v23 = type metadata accessor for Logger(0);
  sub_100048B14(v23, (uint64_t)qword_1011A07A0);
  v24 = swift_retain_n(v3, 2);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    v46 = v43;
    *(_DWORD *)v27 = 136446210;
    v28 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 240);
    v29 = swift_retain(v3);
    v30 = v28(v29);
    v32 = v31;
    swift_release(v3);
    v45 = sub_100322200(v30, v32, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    swift_release_n(v3, 2, v33);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "╭ Updated containers chain for videoContext=%{public}s", v27, 0xCu);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2, v34);
  }
  v35 = *(_QWORD *)v10;
  v36 = *(_QWORD *)(*(_QWORD *)v10 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = (uint64_t *)(v35 + 40);
    do
    {
      v40 = *(v39 - 1);
      v41 = *v39;
      swift_unknownObjectRetain(v40, v37);
      sub_1000E6E58(v38, v40, v41, v4);
      swift_unknownObjectRelease(v40);
      v39 += 2;
      ++v38;
    }
    while (v36 != v38);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_unknownObjectRelease(v12);
  swift_release(v3);
  swift_unknownObjectRelease(v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v35).n128_u64[0];
  return result;
}

void sub_1000E6E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_10119B8A8 != -1)
    swift_once(&qword_10119B8A8, sub_1000E7A08);
  v8 = type metadata accessor for Logger(0);
  sub_100048B14(v8, (uint64_t)qword_1011A07A0);
  swift_retain_n(a4, 2);
  v9 = swift_unknownObjectRetain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v24 = v13;
    *(_DWORD *)v12 = 136315394;
    if (*(_QWORD *)(*(_QWORD *)(a4 + 32) + 16) - 1 == a1)
      v14 = 11572706;
    else
      v14 = 10393058;
    v22 = sub_100322200(v14, 0xA300000000000000, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_release_n(a4, 2, v15);
    swift_bridgeObjectRelease(0xA300000000000000);
    *(_WORD *)(v12 + 12) = 2082;
    v22 = a2;
    v23 = a3;
    swift_unknownObjectRetain(a2, v16);
    v17 = sub_100007E8C(&qword_1011A08D8);
    v18 = String.init<A>(describing:)(&v22, v17);
    v20 = v19;
    v22 = sub_100322200(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a2, 2);
    swift_release_n(a4, 2, v21);
  }
}

uint64_t sub_1000E7094()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for VideoPlaybackContext()
{
  return objc_opt_self(_TtC5Music20VideoPlaybackContext);
}

void sub_1000E70E8(uint64_t a1, id a2)
{
  void *v2;
  void *v3;
  uint64_t (*v6)(void);
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  double v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  __objc2_prot *v19;

  v3 = v2;
  v6 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 216);
  v7 = (void *)v6();
  v18 = objc_msgSend(v7, "playerViewController");

  v8 = objc_msgSend(v18, "parentViewController");
  if (v8)
  {
    v9 = v8;

    if (a2 && v9 == a2)
      goto LABEL_12;
  }
  else if (!a2)
  {
LABEL_12:

    return;
  }
  v10 = objc_msgSend(v18, "view", v18);
  if (!v10)
  {
    __break(1u);
    return;
  }
  v11 = v10;
  objc_msgSend(v10, "removeFromSuperview");

  if (!a2)
  {
    objc_msgSend(v18, "willMoveToParentViewController:", 0);
    objc_msgSend(v18, "removeFromParentViewController");
    goto LABEL_12;
  }
  v12 = a2;
  objc_msgSend(v12, "addChildViewController:", v18);
  v13 = (char *)objc_msgSend(v3, "artworkView");
  if (v13)
  {
    v15 = v13;
    v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
    *(_QWORD *)&v13[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = a1;
    swift_retain_n(a1, 2);
    sub_100675BF0(v16);

    swift_release(v16);
    *(_QWORD *)&v14 = swift_release(a1).n128_u64[0];
  }
  v17 = (void *)((uint64_t (*)(id))v6)(objc_msgSend(v18, "didMoveToParentViewController:", v12, v14));
  v19 = &OBJC_PROTOCOL___MPCVideoOutputDelegate;
  objc_msgSend(v17, "setVideoOutputDelegate:", swift_dynamicCastObjCProtocolConditional(v3, 1, &v19));

}

void sub_1000E72D8(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v10)(void);
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  double v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  __objc2_prot *v23;

  v5 = v4;
  v10 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 216);
  v11 = (void *)v10();
  v22 = objc_msgSend(v11, "playerViewController");

  v12 = objc_msgSend(v22, "parentViewController");
  if (v12)
  {
    v13 = v12;

    if (a2 && v13 == a2)
      goto LABEL_12;
  }
  else if (!a2)
  {
LABEL_12:

    return;
  }
  v14 = objc_msgSend(v22, "view", v22);
  if (!v14)
  {
    __break(1u);
    return;
  }
  v15 = v14;
  objc_msgSend(v14, "removeFromSuperview");

  if (!a2)
  {
    objc_msgSend(v22, "willMoveToParentViewController:", 0);
    objc_msgSend(v22, "removeFromParentViewController");
    goto LABEL_12;
  }
  v16 = a2;
  objc_msgSend(v16, "addChildViewController:", v22);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v17)
  {
    v19 = (void *)v17;
    v20 = *(_QWORD *)(v17 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
    *(_QWORD *)(v17 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext) = a1;
    swift_retain_n(a1, 2);
    sub_100675BF0(v20);

    swift_release(v20);
    *(_QWORD *)&v18 = swift_release(a1).n128_u64[0];
  }
  v21 = (void *)((uint64_t (*)(id))v10)(objc_msgSend(v22, "didMoveToParentViewController:", v16, v18));
  v23 = &OBJC_PROTOCOL___MPCVideoOutputDelegate;
  objc_msgSend(v21, "setVideoOutputDelegate:", swift_dynamicCastObjCProtocolConditional(v5, 1, &v23));

}

void sub_1000E74D8(uint64_t a1, id a2)
{
  void *v2;
  id v3;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  char *v11;
  double v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;

  v3 = v2;
  v20 = (id)(*(uint64_t (**)(void))(*(_QWORD *)a1 + 216))();
  v5 = objc_msgSend(v20, "playerViewController");
  v6 = objc_msgSend(v5, "parentViewController");

  if (v6)
  {

    if (a2 && v6 == a2)
      goto LABEL_4;
  }
  else if (!a2)
  {
LABEL_4:
    v7 = objc_msgSend(v20, "videoOutputDelegate");
    if (v7)
    {
      v8 = v7;
      *(_QWORD *)&v9 = swift_unknownObjectRelease(v7).n128_u64[0];
      if (v8 == v3)
        objc_msgSend(v20, "setVideoOutputDelegate:", 0, v9);
    }
    v10 = objc_msgSend(v20, "playerViewController");
    objc_msgSend(v10, "willMoveToParentViewController:", 0);

    v11 = (char *)objc_msgSend(v3, "artworkView");
    if (v11)
    {
      v13 = v11;
      v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = 0;
      sub_100675BF0(v14);

      *(_QWORD *)&v12 = swift_release(v14).n128_u64[0];
    }
    v19 = objc_msgSend(v20, "playerViewController", v12);
    objc_msgSend(v19, "removeFromParentViewController");

    v15 = v19;
    goto LABEL_14;
  }
  v16 = (char *)objc_msgSend(v3, "artworkView");
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
    *(_QWORD *)&v16[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = 0;
    sub_100675BF0(v18);

    swift_release(v18);
    return;
  }
  v15 = v20;
LABEL_14:

}

void sub_1000E76C0(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  id v14;
  uint64_t v15;
  double v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;

  v5 = v4;
  v24 = (id)(*(uint64_t (**)(void))(*(_QWORD *)a1 + 216))();
  v9 = objc_msgSend(v24, "playerViewController");
  v10 = objc_msgSend(v9, "parentViewController");

  if (v10)
  {

    if (a2 && v10 == a2)
      goto LABEL_4;
  }
  else if (!a2)
  {
LABEL_4:
    v11 = objc_msgSend(v24, "videoOutputDelegate");
    if (v11)
    {
      v12 = v11;
      *(_QWORD *)&v13 = swift_unknownObjectRelease(v11).n128_u64[0];
      if (v12 == v5)
        objc_msgSend(v24, "setVideoOutputDelegate:", 0, v13);
    }
    v14 = objc_msgSend(v24, "playerViewController");
    objc_msgSend(v14, "willMoveToParentViewController:", 0);

    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    if (v15)
    {
      v17 = (void *)v15;
      v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
      *(_QWORD *)(v15 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext) = 0;
      sub_100675BF0(v18);

      *(_QWORD *)&v16 = swift_release(v18).n128_u64[0];
    }
    v23 = objc_msgSend(v24, "playerViewController", v16);
    objc_msgSend(v23, "removeFromParentViewController");

    v19 = v23;
    goto LABEL_14;
  }
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
    *(_QWORD *)(v20 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext) = 0;
    sub_100675BF0(v22);

    swift_release(v22);
    return;
  }
  v19 = v24;
LABEL_14:

}

uint64_t sub_1000E78B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = objc_opt_self(UIViewController);
  v9 = swift_dynamicCastObjCClass(v4, v8);
  return a4(a1, v9, a2, a3);
}

uint64_t sub_1000E7918(void *a1, BOOL *a2, uint64_t *a3)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  ObjectType = swift_getObjectType(a1);
  v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for VideoContextContainer);
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = (uint64_t)a1;
  else
    v9 = 0;
  if (v9)
    v10 = a1;
  else
    v8 = 0;
  v11 = *a3;
  *a3 = v9;
  a3[1] = v8;
  result = swift_unknownObjectRelease(v11);
  *a2 = *a3 != 0;
  return result;
}

void sub_1000E7994()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v0 = type metadata accessor for VideoPlaybackContext();
  v1 = (_QWORD *)swift_allocObject(v0, 40, 7);
  v1[2] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100047938((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v2 = &_swiftEmptySetSingleton;
  }
  v1[3] = v2;
  v1[4] = _swiftEmptyArrayStorage;
  qword_10124C780 = (uint64_t)v1;
}

uint64_t sub_1000E7A08()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011A07A0);
  sub_100048B14(v0, (uint64_t)qword_1011A07A0);
  return static Logger.music(_:)(0xD000000000000017, 0x8000000100E2CC50);
}

uint64_t sub_1000E7A68(uint64_t a1, uint64_t a2)
{
  return sub_1000E78B4(a1, a2, (uint64_t)&off_1010B1990, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E72D8);
}

uint64_t sub_1000E7A8C(uint64_t a1, uint64_t a2)
{
  return sub_1000E78B4(a1, a2, (uint64_t)&off_1010B1990, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E76C0);
}

void sub_1000E7AB0(uint64_t a1, uint64_t a2)
{
  sub_1000E7D9C(a2, (uint64_t)&off_1010B1990);
}

void sub_1000E7AC0(uint64_t a1)
{
  void *v1;

  sub_1000E70E8(a1, v1);
}

void sub_1000E7AC8(uint64_t a1)
{
  void *v1;

  sub_1000E74D8(a1, v1);
}

void sub_1000E7AD0()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "artworkView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setNeedsLayout");

  }
}

uint64_t sub_1000E7B24(uint64_t a1, uint64_t a2)
{
  return sub_1000E78B4(a1, a2, (uint64_t)&off_1010D59F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E76C0);
}

void sub_1000E7B48(uint64_t a1, uint64_t a2)
{
  sub_1000E7D9C(a2, (uint64_t)&off_1010D59F0);
}

double sub_1000E7B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v9 = 1 - v5;
    for (i = (_QWORD *)(v4 + 16 * v5 + 16); *i != a1; i -= 2)
    {
      if (++v9 == 1)
        return result;
    }
    v11 = -v9;
    if (qword_10119B8A8 != -1)
      swift_once(&qword_10119B8A8, sub_1000E7A08);
    v12 = type metadata accessor for Logger(0);
    sub_100048B14(v12, (uint64_t)qword_1011A07A0);
    v13 = swift_unknownObjectRetain_n(a1, 2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v27 = a4;
      v28 = v17;
      *(_DWORD *)v16 = 136446210;
      v26 = a1;
      swift_unknownObjectRetain(a1, v18);
      v19 = sub_100007E8C(&qword_1011A08D8);
      v20 = String.init<A>(describing:)(&v26, v19);
      v26 = sub_100322200(v20, v21, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Resign active container=%{public}s", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
    }
    v26 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v22 = sub_1007287F4(v11);
    swift_unknownObjectRelease(v22);
    v23 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = v26;
    sub_1000E6A88(v23, v24);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_1000E7D9C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 16))();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

  }
}

uint64_t sub_1000E7DE0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000E7E04(uint64_t a1)
{
  uint64_t v1;

  return sub_1000E6784(a1, v1);
}

uint64_t *sub_1000E7E0C()
{
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  return &qword_10124C788;
}

id Application.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  objc_class *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  id *v47;
  id result;
  uint64_t v49;
  void *v50;
  NSURL *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[2];
  id v108[4];
  objc_super v109;

  v1 = type metadata accessor for DispatchQoS.QoSClass(0);
  v99 = *(_QWORD *)(v1 - 8);
  v100 = v1;
  __chkstk_darwin(v1);
  v98 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C((uint64_t *)&unk_1011A08E0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A2310);
  v105 = *(_QWORD *)(v4 - 8);
  v106 = v4;
  __chkstk_darwin(v4);
  v103 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v6);
  v97 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C((uint64_t *)&unk_1011A21E0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A8ED0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v91 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_10119E460);
  v17 = __chkstk_darwin(v16);
  v90 = (uint64_t)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v88 - v20;
  __chkstk_darwin(v19);
  v23 = (id *)((char *)&v88 - v22);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v24);
  v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (objc_class *)type metadata accessor for Application();
  v109.receiver = v0;
  v109.super_class = v27;
  v96 = objc_msgSendSuper2(&v109, "init");
  if (qword_10119B8D0 != -1)
    swift_once(&qword_10119B8D0, sub_1000E99D4);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100048B14(v28, (uint64_t)qword_10124C7B0);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Welcome to MusicX!", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  BagProvider.shared.unsafeMutableAddressor();
  v33 = type metadata accessor for TaskPriority(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v26, 1, 1, v33);
  v35 = swift_allocObject(&unk_1010B0840, 32, 7);
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  v36 = sub_1000E8908((uint64_t)v26, (uint64_t)&unk_1011A0960, v35);
  swift_release(v36);
  sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A13B0);
  objc_msgSend((id)objc_opt_self(MPMediaQuery), "setFilteringDisabled:", 1);
  v34(v26, 1, 1, v33);
  v37 = swift_allocObject(&unk_1010B0868, 32, 7);
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(v37 + 24) = 0;
  v38 = sub_1000E8908((uint64_t)v26, (uint64_t)&unk_1011A0970, v37);
  swift_release(v38);
  sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A13B0);
  v39 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v107[0] = 0xD00000000000001ALL;
  v107[1] = 0x8000000100E2CC70;
  v40 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)v107, (uint64_t)&type metadata for String, v40, (uint64_t)v108);

  if (v108[3])
  {
    if ((swift_dynamicCast(v107, v108, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0
      || (v107[0] & 1) != 0)
    {
      goto LABEL_18;
    }
    v89 = v13;
    v41 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    NSFileManager.musicAppGroupCachesURL.getter((uint64_t)v21);

    v42 = type metadata accessor for URL(0);
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    if (v44(v21, 1, v42) == 1)
    {
      sub_10004FF60((uint64_t)v21, &qword_10119E460);
      v45 = 1;
    }
    else
    {
      URL.appending(_:)(0x7472416F65646956, 0xEC0000006B726F77, 0);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v42);
      v45 = 0;
    }
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v23, v45, 1, v42);
    result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
    v49 = v90;
    if (!result)
    {
      __break(1u);
      return result;
    }
    v50 = result;
    sub_10004A160((uint64_t)v23, v90, &qword_10119E460);
    if (v44((char *)v49, 1, v42) == 1)
    {
      v52 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v51);
      v52 = v53;
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v49, v42);
    }
    v13 = v89;
    objc_msgSend(v50, "setVideoArtworkCacheURL:", v52);

    v46 = &qword_10119E460;
    v47 = v23;
  }
  else
  {
    v46 = &qword_10119DCC0;
    v47 = v108;
  }
  sub_10004FF60((uint64_t)v47, v46);
LABEL_18:
  objc_msgSend((id)objc_opt_self(MPCScriptedLooper), "setScriptedLoopingDisabled:", 1);
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v15, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v13);
  static MusicDataRequest.preferredExecutionMethod.setter(v15);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v54 = qword_10119B8B0;
  v55 = (id)qword_10124C798;
  if (v54 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  swift_retain(qword_10124C788);
  PlaybackController.player.setter(v56);

  v57 = sub_1000E9CD8();
  (*(void (**)(double))(*(_QWORD *)qword_10124C788 + 552))(v57);
  v58 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v108[0] = (id)static OS_dispatch_queue.main.getter(v58, v59, v60, v61, v62, v63, v64, v65);
  v66 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v91 = *(_QWORD *)(*(_QWORD *)(v66 - 8) + 56);
  v67 = (uint64_t)v97;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v91)(v97, 1, 1, v66);
  v68 = sub_100049F28((unint64_t *)&unk_1011A21F0, (uint64_t *)&unk_1011A21E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v69 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v70 = v93;
  Publisher.receive<A>(on:options:)(v108, v67, v93, v58, v68, v69);
  sub_10004FF60(v67, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v9, v70);
  v71 = sub_100049F28(&qword_1011A2200, (uint64_t *)&unk_1011A8ED0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v72 = v95;
  v73 = Publisher<>.sink(receiveValue:)(sub_1000E9B0C, 0, v95, v71);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v12, v72);
  v74 = qword_1011A0940;
  qword_1011A0940 = v73;
  v75 = swift_release(v74);
  v76 = v101;
  (*(void (**)(__n128))(*(_QWORD *)qword_10124C788 + 648))(v75);
  v78 = v98;
  v77 = v99;
  v79 = v100;
  (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, enum case for DispatchQoS.QoSClass.default(_:), v100);
  v80 = (void *)static OS_dispatch_queue.global(qos:)(v78);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  v108[0] = v80;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v91)(v67, 1, 1, v66);
  v81 = sub_100049F28(&qword_1011A0928, (uint64_t *)&unk_1011A08E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v83 = v103;
  v82 = v104;
  Publisher.receive<A>(on:options:)(v108, v67, v104, v58, v81, v69);
  sub_10004FF60(v67, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v102 + 8))(v76, v82);
  v84 = sub_100049F28((unint64_t *)&unk_1011A0930, &qword_1011A2310, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v85 = v106;
  v86 = Publisher<>.sink(receiveValue:)(sub_1000E905C, 0, v106, v84);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v83, v85);
  v87 = qword_1011A0948;
  qword_1011A0948 = v86;
  swift_release(v87);
  objc_msgSend((id)objc_opt_self(MusicSubscriptionStatusHacks), "setupSubscriptionStatusHacks");
  return v96;
}

uint64_t type metadata accessor for Application()
{
  return objc_opt_self(MusicApplication);
}

uint64_t sub_1000E8898()
{
  return swift_task_switch(sub_1000E88AC, 0, 0);
}

uint64_t sub_1000E88AC()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  objc_msgSend(v1, "beginObservingCloudLibraryEnabled");

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000E8908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A13B0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A13B0);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12, v15);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v18 = v17;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v19 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_1010B0930, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v11, v21, (char *)&type metadata for () + 8, &unk_1011E89A0, v20);
}

uint64_t sub_1000E8AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v25[4];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A13B0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A13B0);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v13, v16);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v19 = v18;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v20 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v17 = 0;
  v19 = 0;
LABEL_6:
  v21 = swift_allocObject(&unk_1010B0890, 32, 7);
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  v22 = sub_100007E8C(&qword_1011A09A0);
  if (v19 | v17)
  {
    v25[0] = 0;
    v25[1] = 0;
    v23 = v25;
    v25[2] = v17;
    v25[3] = v19;
  }
  else
  {
    v23 = 0;
  }
  return swift_task_create(v12, v23, v22, &unk_1011A3610, v21);
}

uint64_t sub_1000E8C40()
{
  return swift_task_switch(sub_1000E8C54, 0, 0);
}

uint64_t sub_1000E8C54()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;

  v1 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v2 = objc_msgSend(v1, "artworkDataSource");
  if (v2)
  {
    v3 = v2;
    v4 = objc_opt_self(MPMediaLibraryArtworkDataSource);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5)
      objc_msgSend(v5, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v3);
  }
  objc_msgSend(v1, "setCloudFilteringType:", 0);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", 2049);
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPMediaItemPropertyMediaType);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(MPMediaPropertyPredicate), "predicateWithValue:forProperty:", v6, v9);

  objc_msgSend(v1, "addLibraryFilterPredicate:", v10);
  objc_msgSend(v1, "beginGeneratingLibraryChangeNotifications");

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1000E8DB0(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *Strong;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    if ((a1 & 1) != 0 || ((*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x268))() & 1) == 0)
    {

    }
    else
    {
      v9 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
      type metadata accessor for MainActor(0);
      v11 = static MainActor.shared.getter(v10);
      v12 = swift_allocObject(&unk_1010B08E0, 32, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
      v13 = sub_100166D34((uint64_t)v6, (uint64_t)&unk_1011A09B8, v12);

      swift_release(v13);
    }
  }
}

uint64_t sub_1000E8EEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1[2] = a1;
  v2 = type metadata accessor for Notice.Variant(0);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Notice(0);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000E8F9C, v6, v7);
}

uint64_t sub_1000E8F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 48));
  sub_1000EA038();
  v2 = v1;
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    swift_storeEnumTagMultiPayload(v4, *(_QWORD *)(v0 + 24), 12);
    static Notice.variant(_:)(v4);
    sub_10005B748(v4, type metadata accessor for Notice.Variant);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 192))(v3, 0);
    swift_release(v2);
    sub_10005B748(v3, type metadata accessor for Notice);
  }
  v5 = v2 == 0;
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = v5;
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1000E905C(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unsigned __int8 v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v26[2];
  char v27[24];
  void *v28;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v8 = objc_msgSend(v7, "activeUserState");

  if (v8
    && (v9 = objc_msgSend(v8, "music"), v8, v9)
    && (v10 = objc_msgSend(v9, "userProfile"), v9, v10))
  {
    v11 = objc_msgSend(v10, "displayNameAccepted");

    if (!v6 || (v11 & 1) != 0)
      return;
  }
  else if ((v6 & 1) == 0)
  {
    return;
  }
  v12 = (void *)objc_opt_self(NSUserDefaults);
  v13 = objc_msgSend(v12, "standardUserDefaults");
  v14 = *((_QWORD *)SharePlayTogetherSession.didShowDisplayNameAck.unsafeMutableAddressor() + 1);
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  LOBYTE(v14) = objc_msgSend(v13, "BOOLForKey:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if ((v14 & 1) == 0)
  {
    v16 = objc_msgSend(v12, "standardUserDefaults");
    v17 = (uint64_t *)SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.unsafeMutableAddressor();
    v18 = *v17;
    v19 = v17[1];
    v28 = &type metadata for Bool;
    v27[0] = 1;
    v26[0] = v18;
    v26[1] = v19;
    v20 = sub_100055B68();
    swift_bridgeObjectRetain();
    NSUserDefaults.subscript.setter((uint64_t)v27, (uint64_t)v26, (uint64_t)&type metadata for String, v20);

    v21 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v21, v2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Application] [TermsAckFlow] Setting needsDisplayNameAck key", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

UIContentSizeCategory static Application._defaultContentSizeCategory()()
{
  uint64_t v0;
  id v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  UIContentSizeCategory result;
  objc_super v12;
  CGRect v13;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v2 = objc_msgSend(v1, "fixedCoordinateSpace");

  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_unknownObjectRelease(v2);
  v13.origin.x = v4;
  v13.origin.y = v6;
  v13.size.width = v8;
  v13.size.height = v10;
  if (CGRectGetWidth(v13) <= 320.0)
    return UIContentSizeCategoryMedium;
  v12.receiver = (id)swift_getObjCClassFromMetadata(v0);
  v12.super_class = (Class)&OBJC_METACLASS___MusicApplication;
  result = (UIContentSizeCategory)objc_msgSendSuper2(&v12, "_defaultContentSizeCategory");
  if (!result)
    __break(1u);
  return result;
}

id Application.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Application();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000E948C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for Player(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v1 = Player.init()();
  Player.with(_:)(sub_1000E94E8);
  v3 = v2;
  swift_release(v1);
  qword_10124C788 = v3;
}

void sub_1000E94E8(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
  v2 = static MPPropertySet.with(_:)(sub_1000E9568);

  *a1 = (id)v2;
  v3 = static MPPropertySet.with(_:)(sub_1000E9614);

  a1[1] = (id)v3;
}

uint64_t sub_1000E9568()
{
  id v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[56];

  sub_10053C6F8(1);
  v1 = v0;
  sub_10053C6F8(2);
  v3 = v2;
  v4 = (void *)*GroupActivitiesManager.Activity.playingProperties.unsafeMutableAddressor();
  v5 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  inited = swift_initStackObject(v5, v11);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AD0;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = v4;
  v10 = inited;
  specialized Array._endMutation()(inited);
  v7 = v4;
  v8 = static PropertySetCombinator.buildBlock(_:)(v10);
  swift_bridgeObjectRelease(v10);

  return v8;
}

uint64_t sub_1000E9614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[40];

  sub_10053C6F8(3);
  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  inited = swift_initStackObject(v2, v7);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A90;
  *(_QWORD *)(inited + 32) = v1;
  v6 = inited;
  specialized Array._endMutation()(inited);
  v4 = static PropertySetCombinator.buildBlock(_:)(v6);
  swift_bridgeObjectRelease(v6);
  return v4;
}

uint64_t sub_1000E968C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[5];

  v0 = _s11CoordinatorCMa_1();
  v1 = (_QWORD *)swift_allocObject(v0, 56, 7);
  v1[2] = 0;
  v1[3] = 0;
  v2 = sub_100007E8C(&qword_1011A09A8);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PassthroughSubject.init()();
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = v3;
  v6[3] = v0;
  v6[4] = &off_1010DCE88;
  v6[0] = v1;
  v4 = type metadata accessor for GroupActivitiesManager(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = GroupActivitiesManager.init(coordinator:)((uint64_t)v6);
  qword_10124C790 = result;
  return result;
}

uint64_t *sub_1000E9734()
{
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  return &qword_10124C790;
}

id sub_1000E9774()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id result;
  _QWORD v4[5];

  v0 = _s11CoordinatorCMa();
  v1 = swift_allocObject(v0, 41, 7);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 40) = 0;
  v4[3] = v0;
  v4[4] = &off_1010C15E0;
  v4[0] = v1;
  v2 = objc_allocWithZone((Class)type metadata accessor for PlaybackController());
  result = PlaybackController.init(coordinator:)(v4);
  qword_10124C798 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E97E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  _UNKNOWN **v7;

  v0 = _s11CoordinatorCMa_0();
  v1 = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(v1 + 16) = 0;
  v6 = v0;
  v7 = &off_1010C6028;
  *(_QWORD *)&v5 = v1;
  v2 = type metadata accessor for Collaboration.Manager();
  v3 = swift_allocObject(v2, 56, 7);
  result = sub_100064C48(&v5, v3 + 16);
  qword_10124C7A0 = v3;
  return result;
}

uint64_t sub_1000E9918@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  if (*a1)
    result = MPCPlayerResponse.videoContext.getter();
  else
    result = 0;
  *a2 = result;
  return result;
}

double sub_1000E994C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t *v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(uint64_t **)(Strong + 16);
    *(_QWORD *)(Strong + 16) = v2;
    swift_retain_n(v2, 2);
    sub_1000E5D00(v7);
    swift_release(v6);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000E99D4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124C7B0);
  sub_100048B14(v0, (uint64_t)qword_10124C7B0);
  return static Logger.music(_:)(0x746163696C707041, 0xEB000000006E6F69);
}

uint64_t sub_1000E9A38()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E9A5C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A095C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return swift_task_switch(sub_1000E88AC, 0, 0);
}

uint64_t sub_1000E9AB4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A096C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return swift_task_switch(sub_1000E8C54, 0, 0);
}

void sub_1000E9B0C(void **a1)
{
  void *v1;
  id v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(void (*)(char), uint64_t, __n128);
  __n128 v10;
  __n128 v11;
  void *v12;
  id v13;
  id v14;

  v1 = *a1;
  if (*a1)
  {
    v2 = objc_allocWithZone((Class)type metadata accessor for MCDSharePlayTogetherViewModel());
    v3 = v1;
    v4 = sub_1000A9920(v3);
    v5 = (void *)qword_10124C7A8;
    qword_10124C7A8 = (uint64_t)v4;
    v6 = v4;

    v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10119B898 != -1)
      swift_once(&qword_10119B898, sub_1000A98EC);
    objc_msgSend(v7, "postNotificationName:object:", qword_10124C760, 0);

    v8 = swift_allocObject(&unk_1010B08B8, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v3);
    v9 = *(void (**)(void (*)(char), uint64_t, __n128))((swift_isaMask & *v3) + 0x360);
    v10 = swift_retain(v8);
    v9(sub_1000EA220, v8, v10);

    swift_release_n(v8, 2, v11);
  }
  else
  {
    v12 = (void *)qword_10124C7A8;
    qword_10124C7A8 = 0;

    v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v14 = v13;
    if (qword_10119B898 != -1)
    {
      swift_once(&qword_10119B898, sub_1000A98EC);
      v13 = v14;
    }
    objc_msgSend(v13, "postNotificationName:object:", qword_10124C760, 0);

  }
}

double sub_1000E9CD8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  id v34;

  v0 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A09C0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A09C8);
  v33 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 456))();
  v14 = sub_100007E8C(&qword_1011A09D0);
  v15 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.map<A>(_:)(sub_1000E9918, 0, v3, v14, v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v34 = (id)static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v2, 1, 1, v24);
  v25 = sub_100049F28(&qword_1011A09D8, &qword_1011A09C0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v26 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v34, v2, v7, v16, v25, v26);
  sub_10004FF60((uint64_t)v2, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v27 = swift_allocObject(&unk_1010B0908, 24, 7);
  if (qword_10119B8A0 != -1)
    swift_once(&qword_10119B8A0, sub_1000E7994);
  swift_weakInit(v27 + 16, qword_10124C780);
  v28 = sub_100049F28(&qword_1011A09E0, &qword_1011A09C8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v29 = Publisher<>.sink(receiveValue:)(sub_1000EA2B0, v27, v11, v28);
  v30 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v13, v11, v30);
  v31 = qword_1011A0950;
  qword_1011A0950 = v29;
  *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  return result;
}

void sub_1000EA038()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "connectedScenes");
  v2 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v3 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  sub_10079470C(v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v9 = v6;
    else
      v9 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v6);
    if (v10)
      goto LABEL_3;
LABEL_11:

    swift_bridgeObjectRelease(v6);
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v6 + 32);
LABEL_6:
    v8 = v7;

    swift_bridgeObjectRelease(v6);
    UIWindowScene.noticePresenter.getter();

    return;
  }
  __break(1u);
}

uint64_t sub_1000EA1BC(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_10004A07C(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EA1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000EA220(char a1)
{
  uint64_t v1;

  sub_1000E8DB0(a1, v1);
}

uint64_t sub_1000EA228(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011A09B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return sub_1000E8EEC(a1);
}

uint64_t sub_1000EA28C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000EA2B0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1000E994C(a1, v1);
}

uint64_t sub_1000EA2B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000EA2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtC5Music14PlaylistEditor__entries;
  v2 = sub_100007E8C(&qword_1011A0B80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Music14PlaylistEditor__artwork;
  v4 = sub_100007E8C(&qword_1011A0B88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Music14PlaylistEditor__name;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC5Music14PlaylistEditor__description, v6);
  v8 = v0 + OBJC_IVAR____TtC5Music14PlaylistEditor__isPublic;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  sub_1000EA704(v0 + OBJC_IVAR____TtC5Music14PlaylistEditor_destination);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000EA3F0()
{
  return type metadata accessor for PlaylistEditor(0);
}

uint64_t type metadata accessor for PlaylistEditor(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A0A38;
  if (!qword_1011A0A38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistEditor);
  return result;
}

void sub_1000EA434(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1000EA54C(319, &qword_1011A0A48, (uint64_t *)&unk_1011C6870);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000EA54C(319, &qword_1011A0A50, (uint64_t *)&unk_1011C6680);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA598(319, (unint64_t *)&qword_1011A0A58, (uint64_t)&type metadata for String);
      if (v7 <= 0x3F)
      {
        v13 = *(_QWORD *)(v6 - 8) + 64;
        v14 = v13;
        sub_1000EA598(319, (unint64_t *)&qword_1011C4B00, (uint64_t)&type metadata for Bool);
        if (v9 <= 0x3F)
        {
          v15 = *(_QWORD *)(v8 - 8) + 64;
          sub_1000EA5DC(319);
          if (v11 <= 0x3F)
          {
            v16 = *(_QWORD *)(v10 - 8) + 64;
            swift_updateClassMetadata2(a1, 256, 6, v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1000EA54C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100044B54(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1000EA598(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1000EA5DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C46C0)
  {
    v2 = type metadata accessor for Playlist(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C46C0);
  }
}

void sub_1000EA634(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000EA5DC(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initClassMetadata2(a1, 0, 1, &v4, a1 + 96);
  }
}

uint64_t sub_1000EA6A0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1000EA6C8()
{
  uint64_t v0;

  sub_1000EA704(v0 + qword_10124C7D0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for LibraryPlaylistLoader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryPlaylistLoader);
}

uint64_t sub_1000EA704(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A30F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000EA744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1000EA75C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAA9D0);
  v4 = swift_getKeyPath(&unk_100EAAA08);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t *sub_1000EA7EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);

  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[11]);
  sub_10004FF60((uint64_t)v0 + qword_10124C7D8, (uint64_t *)&unk_1011A3E10);
  sub_10005B748((uint64_t)v0 + qword_10124C7E0, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v0 + qword_10124C7E8, &qword_10119E460);
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 168);
  v3 = type metadata accessor for Published(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 176)));
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 184)));
  return v0;
}

uint64_t sub_1000EA8D8()
{
  uint64_t v0;

  sub_1000EA7EC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000EA8FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  __int128 v11;

  v11 = *(_OWORD *)(v1 + 16);
  v2 = *(_QWORD **)(a1 + 24);
  v3 = v2[1];
  v4 = v2[4];
  v5 = *(_QWORD *)(v2[6] + 8);
  v10[0] = *(_QWORD *)(a1 + 16);
  v10[1] = v3;
  v10[2] = v4;
  v10[3] = v5;
  v6 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)v10);
  v7 = type metadata accessor for Optional(255, v6);
  v8 = type metadata accessor for State(0, v7);
  State.wrappedValue.getter(v10, v8);
  return v10[0];
}

uint64_t sub_1000EA974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  uint64_t v12;
  __int128 v13;

  v13 = *(_OWORD *)(v2 + 16);
  v3 = *(_QWORD **)(a2 + 24);
  v4 = v3[1];
  v5 = v3[4];
  v6 = *(_QWORD *)(v3[6] + 8);
  v11[0] = *(_QWORD *)(a2 + 16);
  v11[1] = v4;
  v11[2] = v5;
  v11[3] = v6;
  v12 = a1;
  v7 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)v11);
  v8 = type metadata accessor for Optional(255, v7);
  v9 = type metadata accessor for State(0, v8);
  return State.wrappedValue.setter(&v12, v9);
}

uint64_t sub_1000EA9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for VideoDetailItem(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a3 = result;
  return result;
}

uint64_t sub_1000EAA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t TupleTypeMetadata2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t OpaqueTypeConformance2;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  double (*v106)(uint64_t, char *, uint64_t);
  __n128 v107;
  char *v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(_QWORD, _QWORD, _QWORD);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169[8];
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  char v173[8];
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  v163 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v154 = a1;
  v162 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v161 = (uint64_t *)((char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v160 = type metadata accessor for TaskPriority(0);
  v159 = *(_QWORD *)(v160 - 8);
  v5 = __chkstk_darwin(v160);
  v158 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = *(_QWORD *)(a1 - 8);
  v157 = *(_QWORD *)(v156 + 64);
  __chkstk_darwin(v5);
  v155 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100044B54(&qword_1011A0CF8);
  v9 = *(_QWORD **)(a1 + 24);
  v11 = type metadata accessor for VideoDetailView.TextStack(255, v2, (uint64_t)v9, v10);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _FlexFrameLayout);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _PaddingLayout);
  v14 = v2;
  v166 = v2;
  v16 = type metadata accessor for VideoSource(255, v2, (uint64_t)v9, v15);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v16);
  v19 = type metadata accessor for PlaybackButton(255, v16, WitnessTable, v18);
  v20 = type metadata accessor for BorderedProminentButtonStyle(255);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v19);
  v22 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v185 = v19;
  v186 = v20;
  v187 = v21;
  v188 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v185, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v24 = sub_100044B54(&qword_1011A0610);
  v25 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _FrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v26, 0, 0);
  v28 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v28);
  v29 = type metadata accessor for VStack(255, v28);
  v30 = type metadata accessor for _BlendModeEffect(255);
  v31 = type metadata accessor for ModifiedContent(255, v29, v30);
  v32 = type metadata accessor for ModifiedContent(255, v31, &type metadata for _FlexFrameLayout);
  v33 = swift_getTupleTypeMetadata2(255, v8, v32, 0, 0);
  v34 = type metadata accessor for TupleView(255, v33);
  v150 = v34;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v34);
  v35 = type metadata accessor for HStack(0, v34, v149);
  v151 = *(_QWORD *)(v35 - 8);
  v134 = v35;
  __chkstk_darwin(v35);
  v146 = (char *)&v129 - v36;
  v38 = type metadata accessor for ModifiedContent(0, v37, &type metadata for _FlexFrameLayout);
  v152 = *(_QWORD *)(v38 - 8);
  v164 = (void (*)(_QWORD, _QWORD, _QWORD))v38;
  __chkstk_darwin(v38);
  v147 = (char *)&v129 - v39;
  v135 = type metadata accessor for ModifiedContent(0, v40, &type metadata for _PaddingLayout);
  v153 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v148 = (uint64_t *)((char *)&v129 - v41);
  v145 = v9;
  v42 = v9[1];
  v43 = v9[4];
  v167 = *(_QWORD *)(v9[6] + 8);
  v185 = v14;
  v186 = v42;
  v187 = v43;
  v188 = v167;
  v44 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)&v185);
  v45 = swift_getWitnessTable(&unk_100EC0318, v44);
  v47 = type metadata accessor for LibraryControl(255, v44, v45, v46);
  v48 = sub_100044B54(&qword_1011B5800);
  v49 = type metadata accessor for ModifiedContent(255, v47, v48);
  v50 = type metadata accessor for BorderedButtonStyle(255);
  v51 = swift_getWitnessTable(&unk_100EC0418, v47);
  v52 = sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v183 = v51;
  v184 = v52;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v54 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v185 = v49;
  v186 = v50;
  v187 = v53;
  v188 = v54;
  v55 = swift_getOpaqueTypeMetadata2(255, &v185, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v56 = type metadata accessor for ModifiedContent(255, v55, v24);
  v57 = sub_100044B54(&qword_1011A0618);
  v58 = type metadata accessor for ModifiedContent(255, v56, v57);
  v59 = type metadata accessor for Optional(255, v58);
  v60 = sub_100044B54(&qword_1011A0D10);
  v61 = swift_getTupleTypeMetadata2(255, v59, v60, 0, 0);
  v62 = type metadata accessor for TupleView(255, v61);
  v63 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v62);
  v64 = type metadata accessor for ToolbarItemGroup(255, v62, v63);
  v65 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v64);
  v185 = v64;
  v186 = v65;
  v66 = swift_getOpaqueTypeMetadata2(255, &v185, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v67 = v134;
  v68 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v134);
  v181 = v68;
  v182 = &protocol witness table for _FlexFrameLayout;
  v132 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v164);
  v179 = v132;
  v180 = &protocol witness table for _PaddingLayout;
  v69 = v135;
  v70 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v135);
  v185 = v64;
  v186 = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v185, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v185 = v69;
  v186 = v66;
  v187 = v70;
  v188 = OpaqueTypeConformance2;
  v130 = v70;
  v72 = swift_getOpaqueTypeMetadata2(0, &v185, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v141 = *(_QWORD *)(v72 - 8);
  v137 = v72;
  __chkstk_darwin(v72);
  v131 = (char *)&v129 - v73;
  v74 = type metadata accessor for _TaskModifier(255);
  v75 = type metadata accessor for ModifiedContent(0, v72, v74);
  v144 = *(_QWORD *)(v75 - 8);
  v138 = v75;
  __chkstk_darwin(v75);
  v165 = (char *)&v129 - v76;
  v185 = v69;
  v186 = v66;
  v187 = v70;
  v188 = OpaqueTypeConformance2;
  v77 = swift_getOpaqueTypeConformance2(&v185, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v133 = v77;
  v78 = sub_100048748(&qword_1011A0D18, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
  v177 = v77;
  v178 = v78;
  v139 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v75);
  v79 = v166;
  v185 = v75;
  v186 = v166;
  v187 = v139;
  v188 = v167;
  v142 = swift_getOpaqueTypeMetadata2(0, &v185, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v143 = *(_QWORD *)(v142 - 8);
  v80 = __chkstk_darwin(v142);
  v136 = (char *)&v129 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __chkstk_darwin(v80);
  v140 = (uint64_t)&v129 - v83;
  v84 = static VerticalAlignment.top.getter(v82);
  v85 = v145;
  v174 = v79;
  v175 = v145;
  v86 = v168;
  v176 = v168;
  v87 = v146;
  v88 = HStack.init(alignment:spacing:content:)(v84, qword_1011CCD38, 0, sub_1000F3530, v173, v150, v149);
  v89 = static Alignment.center.getter(v88);
  v90 = v147;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v89, v91, v67, v68);
  v92 = (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v87, v67);
  v93 = static Edge.Set.bottom.getter(v92);
  v94 = v148;
  v95 = v164;
  View.padding(_:_:)(v148, v93, 0x4034000000000000, 0, v164, v132);
  (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v152 + 8))(v90, v95);
  v170 = v79;
  v171 = v85;
  v172 = v86;
  v96 = v86;
  v97 = swift_checkMetadataState(0, v66);
  v98 = v131;
  View.toolbar<A>(content:)(sub_1000F353C, v169, v69, v97, v130, OpaqueTypeConformance2);
  (*(void (**)(_QWORD *, uint64_t))(v153 + 8))(v94, v69);
  v99 = v156;
  v164 = *(void (**)(_QWORD, _QWORD, _QWORD))(v156 + 16);
  v100 = v155;
  v101 = v154;
  v164(v155, v96, v154);
  v102 = *(unsigned __int8 *)(v99 + 80);
  v103 = (v102 + 32) & ~v102;
  v157 += v103;
  v153 = v102 | 7;
  v104 = swift_allocObject(&unk_1010B0C80, v157, v102 | 7);
  *(_QWORD *)(v104 + 16) = v79;
  *(_QWORD *)(v104 + 24) = v85;
  v105 = v85;
  v106 = *(double (**)(uint64_t, char *, uint64_t))(v99 + 32);
  v107.n128_f64[0] = v106(v104 + v103, v100, v101);
  v108 = v158;
  static TaskPriority.userInitiated.getter(v107);
  v109 = v137;
  View.task(priority:_:)(v108, &unk_1011A0D28, v104, v137, v133);
  v110 = swift_release(v104);
  (*(void (**)(char *, uint64_t, __n128))(v159 + 8))(v108, v160, v110);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v98, v109);
  v111 = v168;
  v112 = *(_QWORD *)(v168 + 8);
  swift_retain(v112);
  v113 = v161;
  sub_1000EA75C(v161);
  v114 = swift_release(v112);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v164)(v100, v111, v101, v114);
  v115 = swift_allocObject(&unk_1010B0CA8, v157, v153);
  v116 = v166;
  *(_QWORD *)(v115 + 16) = v166;
  *(_QWORD *)(v115 + 24) = v105;
  v106(v115 + v103, v100, v101);
  v117 = (uint64_t)v136;
  v118 = v138;
  v119 = v116;
  v120 = v116;
  v121 = v139;
  v122 = v167;
  v123 = v165;
  View.onChange<A>(of:initial:_:)(v113, 0, sub_1000F3A10, v115, v138, v119, v139, v167);
  v124 = swift_release(v115);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v162 + 8))(v113, v120, v124);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v123, v118);
  v185 = v118;
  v186 = v120;
  v187 = v121;
  v188 = v122;
  swift_getOpaqueTypeConformance2(&v185, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v125 = v140;
  v126 = v142;
  sub_10081EB14(v117, v142, v140);
  v127 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
  v127(v117, v126);
  sub_1000EA744(v125, v126, v163);
  return ((uint64_t (*)(uint64_t, uint64_t))v127)(v125, v126);
}

uint64_t sub_1000EB680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  double v75;
  uint64_t OpaqueTypeConformance2;
  char *v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  _QWORD v163[6];
  uint64_t v164;
  uint64_t v165;
  char v166[8];
  __int128 v167;
  __int128 v168;
  __int128 v169;

  v138 = a1;
  v157 = a4;
  v156 = type metadata accessor for BlendMode(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VideoDetailView.TextStack(255, a2, a3, v7);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _FlexFrameLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v133 = a2;
  v134 = a3;
  v12 = type metadata accessor for VideoSource(255, a2, a3, v11);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v12);
  v15 = type metadata accessor for PlaybackButton(255, v12, WitnessTable, v14);
  v16 = type metadata accessor for BorderedProminentButtonStyle(255);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v15);
  v18 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  *(_QWORD *)&v167 = v15;
  *((_QWORD *)&v167 + 1) = v16;
  *(_QWORD *)&v168 = v17;
  *((_QWORD *)&v168 + 1) = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v167, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v20 = sub_100044B54(&qword_1011A0610);
  v21 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _FrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v10, v22, 0, 0);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v146 = v24;
  v145 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v25 = type metadata accessor for VStack(0, v24);
  v26 = *(_QWORD *)(v25 - 8);
  v144 = v25;
  v149 = v26;
  __chkstk_darwin(v25);
  v143 = (char *)&v122 - v27;
  v28 = type metadata accessor for _BlendModeEffect(255);
  v29 = type metadata accessor for ModifiedContent(0, v25, v28);
  v30 = *(_QWORD *)(v29 - 8);
  v148 = v29;
  v152 = v30;
  __chkstk_darwin(v29);
  v142 = (char *)&v122 - v31;
  v151 = type metadata accessor for ModifiedContent(0, v32, &type metadata for _FlexFrameLayout);
  v153 = *(_QWORD *)(v151 - 8);
  v33 = __chkstk_darwin(v151);
  v147 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v150 = (uint64_t)&v122 - v35;
  v140 = sub_100007E8C(&qword_1011A0D78);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v137 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v38 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v40 = (char *)&v122 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v42 = (char *)&v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011A0D80);
  __chkstk_darwin(v122);
  v44 = (char *)&v122 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011A0D88);
  __chkstk_darwin(v125);
  v46 = (char *)&v122 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C(&qword_1011A0D90);
  v130 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v122 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011A0D98);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v127 = (char *)&v122 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011A0CF8);
  v49 = __chkstk_darwin(v131);
  v141 = (uint64_t)&v122 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __chkstk_darwin(v49);
  v129 = (char *)&v122 - v52;
  __chkstk_darwin(v51);
  v132 = (uint64_t)&v122 - v53;
  type metadata accessor for VideoDetailView(0, a2, a3, v54);
  v55 = v138;
  v56 = *(_QWORD *)(v138 + 8);
  v57 = v56 + qword_10124C7D8;
  v58 = v56 + qword_10124C7E0;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v166);
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v40, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v37);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v57, v58, (uint64_t)v166, (uint64_t)v40, (uint64_t)v42);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  v59 = sub_1000EC290();
  v60 = v55;
  LOBYTE(a2) = sub_1000EC290() > 1.77777778;
  v61 = v123;
  v62 = v124;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v44, v42, v124);
  v63 = &v44[*(int *)(v122 + 36)];
  *(double *)v63 = v59;
  v63[8] = 0;
  v63[9] = a2;
  v64 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v42, v62);
  v65 = static Alignment.center.getter(v64);
  _FrameLayout.init(width:height:alignment:)(&v167, 0x407E000000000000, 0, 0x4070E00000000000, 0, v65, v66);
  sub_10004A160((uint64_t)v44, (uint64_t)v46, &qword_1011A0D80);
  v67 = v125;
  v68 = &v46[*(int *)(v125 + 36)];
  v69 = v168;
  *(_OWORD *)v68 = v167;
  *((_OWORD *)v68 + 1) = v69;
  *((_OWORD *)v68 + 2) = v169;
  sub_10004FF60((uint64_t)v44, &qword_1011A0D80);
  v70 = sub_10005610C(&qword_1011A0DA0, &qword_1011A0D88, (void (*)(void))sub_1000F3E9C);
  v71 = v126;
  v72 = v67;
  View.corner(_:)(0x4028000000000000, -1, 0, v67, v70);
  sub_10004FF60((uint64_t)v46, &qword_1011A0D88);
  v73 = Border.artwork.unsafeMutableAddressor();
  v74 = *v73;
  v75 = *((double *)v73 + 1);
  LOBYTE(v67) = *((_BYTE *)v73 + 16);
  swift_retain(*v73);
  v164 = v72;
  v165 = v70;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v164, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v77 = v127;
  v78 = v128;
  View.border(_:corner:)(v74, v67, 0x4028000000000000, -1, 0, v128, OpaqueTypeConformance2, v75);
  v79 = swift_release(v74);
  v80 = (*(uint64_t (**)(char *, uint64_t, __n128))(v130 + 8))(v71, v78, v79);
  v81 = static Color.black.getter(v80);
  v164 = v81;
  LOWORD(v165) = 256;
  v82 = sub_100007E8C(&qword_1011A0DB0);
  v83 = sub_100049F28(&qword_1011A0DB8, &qword_1011A0DB0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
  v84 = v137;
  View.corner(_:)(0x4028000000000000, -1, 0, v82, v83);
  swift_release(v81);
  v86 = static Alignment.center.getter(v85);
  v88 = v87;
  v89 = v131;
  v90 = v129;
  v91 = &v129[*(int *)(v131 + 36)];
  v92 = v139;
  v93 = v140;
  (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v91, v84, v140);
  v94 = (uint64_t *)&v91[*(int *)(sub_100007E8C(&qword_1011A0DC0) + 36)];
  *v94 = v86;
  v94[1] = v88;
  v95 = v135;
  v96 = v136;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v90, v77, v136);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v84, v93);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v96);
  v97 = (uint64_t)v90;
  v98 = v132;
  v99 = sub_100065228(v97, v132, &qword_1011A0CF8);
  v100 = static HorizontalAlignment.leading.getter(v99);
  v158 = v133;
  v159 = v134;
  v160 = v60;
  v101 = v143;
  VStack.init(alignment:spacing:content:)(v100, 0, 0, sub_1000F3F30);
  v102 = v155;
  v103 = v154;
  v104 = v156;
  (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v154, enum case for BlendMode.plusLighter(_:), v156);
  v105 = v144;
  v106 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v144);
  v107 = v142;
  View.blendMode(_:)(v103, v105, v106);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
  v108 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v101, v105);
  v109 = static Alignment.center.getter(v108);
  v111 = v110;
  v163[4] = v106;
  v163[5] = &protocol witness table for _BlendModeEffect;
  v112 = v148;
  v113 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v148);
  v114 = (uint64_t)v147;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0x4070E00000000000, 0, 0, 1, 0, 1, v109, v111, v112, v113);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v107, v112);
  v163[2] = v113;
  v163[3] = &protocol witness table for _FlexFrameLayout;
  v115 = v151;
  v116 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v151);
  v117 = v150;
  sub_10081EB14(v114, v115, v150);
  v118 = v153;
  v119 = *(void (**)(uint64_t, uint64_t))(v153 + 8);
  v119(v114, v115);
  v120 = v141;
  sub_10004A160(v98, v141, &qword_1011A0CF8);
  v164 = v120;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v114, v117, v115);
  v165 = v114;
  v163[0] = v89;
  v163[1] = v115;
  v161 = sub_1000F3F3C();
  v162 = v116;
  sub_1004D49B8(&v164, 2uLL, (uint64_t)v163);
  v119(v117, v115);
  sub_10004FF60(v98, &qword_1011A0CF8);
  v119(v114, v115);
  return sub_10004FF60(v120, &qword_1011A0CF8);
}

double sub_1000EC290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double result;
  double v6;
  char v7;
  char v8;
  uint64_t v9;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(*(_QWORD *)(v0 + 8) + qword_10124C7D8, (uint64_t)v3, (uint64_t *)&unk_1011A3E10);
  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A3E10);
    return 1.77777778;
  }
  else
  {
    v6 = COERCE_DOUBLE(ArtworkImage.ViewModel.calculatedAspectRatio.getter());
    v8 = v7;
    sub_10005B748((uint64_t)v3, type metadata accessor for ArtworkImage.ViewModel);
    result = v6;
    if ((v8 & 1) != 0)
      return 1.77777778;
  }
  return result;
}

_QWORD *sub_1000EC384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t OpaqueTypeConformance2;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  void (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD v163[2];
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  char v174;
  uint64_t v175[6];
  _OWORD v176[10];
  char v177;
  uint64_t v178;
  void *v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  char v190;
  uint64_t v191;
  void *v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  char v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  _OWORD v210[2];
  __int128 v211;
  __int128 v212;
  char v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  _OWORD v220[4];
  char v221;

  v116 = a1;
  v152 = a4;
  v7 = type metadata accessor for ButtonBorderShape(0);
  v150 = *(_QWORD *)(v7 - 8);
  v151 = v7;
  __chkstk_darwin(v7);
  v149 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BorderedProminentButtonStyle(0);
  v143 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v142 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for VideoDetailView(0, a2, a3, v11);
  v137 = *(_QWORD *)(v139 - 8);
  v129 = *(_QWORD *)(v137 + 64);
  __chkstk_darwin(v139);
  v133 = (char *)&v115 - v12;
  v13 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v13);
  v124 = (uint64_t)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for VideoSource(255, a2, a3, v15);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v16);
  v154 = WitnessTable;
  v19 = type metadata accessor for SourcedPlaybackIntent(255, v16, WitnessTable, v18);
  v159 = v19;
  v20 = type metadata accessor for Optional(0, v19);
  __chkstk_darwin(v20);
  v157 = (uint64_t)&v115 - v21;
  v22 = v16;
  v155 = v16;
  v24 = type metadata accessor for PlaybackButton(0, v16, WitnessTable, v23);
  v126 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v125 = (uint64_t)&v115 - v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v24);
  v27 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v136 = v24;
  *(_QWORD *)&v214 = v24;
  v146 = v9;
  *((_QWORD *)&v214 + 1) = v9;
  v130 = v26;
  *(_QWORD *)&v215 = v26;
  v127 = v27;
  *((_QWORD *)&v215 + 1) = v27;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v214, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v131 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v128 = (char *)&v115 - v29;
  v30 = sub_100044B54(&qword_1011A0610);
  v132 = OpaqueTypeMetadata2;
  v31 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v30);
  v138 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v135 = (char *)&v115 - v32;
  v140 = v33;
  v148 = type metadata accessor for ModifiedContent(0, v33, &type metadata for _FrameLayout);
  v144 = *(_QWORD *)(v148 - 8);
  v34 = __chkstk_darwin(v148);
  v147 = (char *)&v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v134 = (char *)&v115 - v37;
  __chkstk_darwin(v36);
  v145 = (uint64_t)&v115 - v38;
  v39 = a2;
  v156 = a2;
  v160 = type metadata accessor for Optional(0, a2);
  v119 = *(_QWORD *)(v160 - 8);
  v40 = __chkstk_darwin(v160);
  v117 = (uint64_t *)((char *)&v115 - v41);
  v120 = *(_QWORD *)(v22 - 8);
  v42 = __chkstk_darwin(v40);
  v118 = (char *)&v115 - v43;
  v158 = *(_QWORD *)(v19 - 8);
  v44 = __chkstk_darwin(v42);
  v153 = (char *)&v115 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v45;
  __chkstk_darwin(v44);
  v47 = (char *)&v115 - v46;
  v48 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v204 = v48;
  swift_retain(v48);
  v50 = static Alignment.leading.getter(v49);
  v52 = v51;
  v141 = a3;
  v54 = type metadata accessor for VideoDetailView.TextStack(0, v39, a3, v53);
  v55 = swift_getWitnessTable(&unk_100EAAAE8, v54);
  v114 = v52;
  v56 = 1;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v50, v114, v54, v55);
  swift_release(v48);
  v57 = v214;
  v204 = v214;
  LOBYTE(v205) = v215;
  *((_QWORD *)&v205 + 1) = *((_QWORD *)&v215 + 1);
  LOBYTE(v206) = v216;
  *((_QWORD *)&v206 + 1) = *((_QWORD *)&v216 + 1);
  LOBYTE(v207) = v217;
  *((_QWORD *)&v207 + 1) = *((_QWORD *)&v217 + 1);
  LOBYTE(v208) = v218;
  *((_QWORD *)&v208 + 1) = *((_QWORD *)&v218 + 1);
  LOBYTE(v209) = v219;
  *((_QWORD *)&v209 + 1) = *((_QWORD *)&v219 + 1);
  LOBYTE(v210[0]) = v220[0];
  *(_OWORD *)((char *)v210 + 8) = *(_OWORD *)((char *)v220 + 8);
  v58 = static Edge.Set.top.getter(*((_QWORD *)&v219 + 1));
  v59 = type metadata accessor for ModifiedContent(0, v54, &type metadata for _FlexFrameLayout);
  v191 = v55;
  v192 = &protocol witness table for _FlexFrameLayout;
  v60 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v59);
  View.padding(_:_:)(&v193, v58, 0x4028000000000000, 0, v59, v60);
  v61 = v47;
  v62 = v116;
  swift_release(v57);
  v220[2] = v201;
  v220[3] = v202;
  v218 = v197;
  v219 = v198;
  v220[1] = v200;
  v220[0] = v199;
  v214 = v193;
  v215 = v194;
  v217 = v196;
  v216 = v195;
  v188 = v201;
  v189 = v202;
  v184 = v197;
  v185 = v198;
  v186 = v199;
  v187 = v200;
  v180 = v193;
  v181 = v194;
  v221 = v203;
  v190 = v203;
  v182 = v195;
  v183 = v196;
  v63 = v59;
  v64 = v156;
  v65 = type metadata accessor for ModifiedContent(0, v63, &type metadata for _PaddingLayout);
  v178 = v60;
  v179 = &protocol witness table for _PaddingLayout;
  v122 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v65);
  v123 = v65;
  sub_10081EB14((uint64_t)&v180, v65, (uint64_t)&v204);
  sub_1000F4038(&v214);
  v66 = *(_QWORD *)(v62 + 8);
  swift_retain(v66);
  v67 = v117;
  sub_1000EA75C(v117);
  v68 = swift_release(v66);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v64 - 8) + 56))(v67, 0, 1, v64, v68);
  v69 = v118;
  (*(void (**)(char *, _QWORD *, uint64_t))(v119 + 32))(v118, v67, v160);
  v160 = (uint64_t)v61;
  v70 = (uint64_t)v61;
  v71 = v155;
  PlaybackSource.sourcedIntent.getter(v155, v154, v70);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v69, v71);
  v72 = v124;
  sub_10004A160(*(_QWORD *)(v62 + 8) + qword_10124C7E8, v124, &qword_10119E460);
  v73 = type metadata accessor for URL(0);
  LODWORD(v69) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v72, 1, v73);
  sub_10004FF60(v72, &qword_10119E460);
  if ((_DWORD)v69 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16))(v157, v160, v159);
    v56 = 0;
  }
  v74 = v158;
  v75 = v159;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v157, v56, 1, v159);
  v76 = *(_QWORD *)(v62 + 8);
  v77 = v137;
  v78 = v133;
  v79 = v139;
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v133, v62, v139);
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v153, v160, v75);
  v80 = *(unsigned __int8 *)(v77 + 80);
  v81 = (v80 + 40) & ~v80;
  v82 = *(unsigned __int8 *)(v74 + 80);
  v83 = (v129 + v81 + v82) & ~v82;
  v84 = (char *)swift_allocObject(&unk_1010B0CD0, v83 + v121, v80 | v82 | 7);
  v85 = v141;
  *((_QWORD *)v84 + 2) = v156;
  *((_QWORD *)v84 + 3) = v85;
  *((_QWORD *)v84 + 4) = v76;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v84[v81], v78, v79);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v84[v83], v153, v75);
  swift_retain(v76);
  v86 = v125;
  v87 = PlaybackButton.init(mode:intent:onPerform:)(0, v157, (uint64_t)sub_1000F4274, (uint64_t)v84, v155, v154, v125);
  v88 = v142;
  BorderedProminentButtonStyle.init()(v87);
  v90 = v127;
  v89 = v128;
  v91 = v136;
  v92 = v146;
  v93 = v130;
  View.buttonStyle<A>(_:)(v88, v136, v146, v130, v127);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v88, v92);
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v86, v91);
  if (qword_10119C8D0 != -1)
    swift_once(&qword_10119C8D0, sub_10085F9E0);
  v94 = v149;
  static ButtonBorderShape.roundedRectangle(radius:)(*(double *)&qword_10124DA48);
  *(_QWORD *)&v193 = v91;
  *((_QWORD *)&v193 + 1) = v92;
  *(_QWORD *)&v194 = v93;
  *((_QWORD *)&v194 + 1) = v90;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v96 = v135;
  v97 = v132;
  View.buttonBorderShape(_:)(v94, v132, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v94, v151);
  v98 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v89, v97);
  v99 = static Alignment.center.getter(v98);
  v101 = v100;
  v102 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v175[4] = OpaqueTypeConformance2;
  v175[5] = v102;
  v103 = v140;
  v104 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v140);
  v105 = (uint64_t)v134;
  View.frame(width:height:alignment:)(0x406A400000000000, 0, 0, 1, v99, v101, v103, v104);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v96, v103);
  v175[2] = v104;
  v175[3] = (uint64_t)&protocol witness table for _FrameLayout;
  v106 = v148;
  v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v148);
  v108 = v145;
  sub_10081EB14(v105, v106, v145);
  v109 = v144;
  v110 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
  v110(v105, v106);
  v176[8] = v211;
  v176[9] = v212;
  v176[4] = v208;
  v176[5] = v209;
  v176[6] = v210[0];
  v176[7] = v210[1];
  v176[0] = v204;
  v176[1] = v205;
  v176[2] = v206;
  v176[3] = v207;
  v172 = v211;
  v173 = v212;
  v168 = v208;
  v169 = v209;
  v170 = v210[0];
  v171 = v210[1];
  v164 = v204;
  v165 = v205;
  v177 = v213;
  v174 = v213;
  v166 = v206;
  v167 = v207;
  v175[0] = (uint64_t)&v164;
  v111 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
  v112 = (uint64_t)v147;
  v111(v147, v108, v106);
  v175[1] = v112;
  sub_1000F4330(v176);
  v163[0] = v123;
  v163[1] = v106;
  v161 = v122;
  v162 = v107;
  sub_1004D49B8(v175, 2uLL, (uint64_t)v163);
  v110(v108, v106);
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v160, v159);
  v188 = v211;
  v189 = v212;
  v190 = v213;
  v184 = v208;
  v185 = v209;
  v186 = v210[0];
  v187 = v210[1];
  v180 = v204;
  v181 = v205;
  v182 = v206;
  v183 = v207;
  sub_1000F4038(&v180);
  v110(v112, v106);
  v201 = v172;
  v202 = v173;
  v203 = v174;
  v197 = v168;
  v198 = v169;
  v200 = v171;
  v199 = v170;
  v193 = v164;
  v194 = v165;
  v196 = v167;
  v195 = v166;
  return sub_1000F4038(&v193);
}

uint64_t sub_1000ECFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v48 = a5;
  v44 = a4;
  v45 = a1;
  v7 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v53 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  v54 = v7;
  v8 = type metadata accessor for VideoSource(255, v7, v53, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v8);
  v11 = type metadata accessor for SourcedPlaybackIntent(0, v8, WitnessTable, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v52 = (char *)&v43 - v14;
  v50 = type metadata accessor for PlaybackButton(0, v8, WitnessTable, v15);
  v43 = *(_QWORD *)(v50 - 8);
  v16 = *(_QWORD *)(v43 + 64);
  __chkstk_darwin(v50);
  v49 = (char *)&v43 - v17;
  v18 = type metadata accessor for OpenURLAction(0);
  v46 = *(_QWORD *)(v18 - 8);
  v47 = v18;
  __chkstk_darwin(v18);
  v51 = (uint64_t)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11);
  if ((_DWORD)result == 1)
  {
    sub_10004A160(a3 + qword_10124C7E8, (uint64_t)v22, &qword_10119E460);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    {
      return sub_10004FF60((uint64_t)v22, &qword_10119E460);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
      v29 = *(_QWORD *)(v44 + 200);
      if (v29)
      {
        type metadata accessor for VideoDetailView(0, v54, v53, v28);
        swift_retain(v29);
        sub_100823DD8(v51);
        v44 = v29;
        v30 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v49, v45, v50);
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v52, v48, v11);
        v31 = *(unsigned __int8 *)(v30 + 80);
        v32 = (v31 + 32) & ~v31;
        v33 = *(unsigned __int8 *)(v12 + 80);
        v34 = (v16 + v33 + v32) & ~v33;
        v35 = swift_allocObject(&unk_1010B0CF8, v34 + v13, v31 | v33 | 7);
        v36 = v53;
        *(_QWORD *)(v35 + 16) = v54;
        *(_QWORD *)(v35 + 24) = v36;
        (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v35 + v32, v49, v50);
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v35 + v34, v52, v11);
        v37 = v44;
        v38 = v51;
        sub_1009874BC(v44, v51, (uint64_t)v26, (uint64_t)sub_1000F4618, v35);
        swift_release(v37);
        v39 = swift_release(v35);
        (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v38, v47, v39);
        return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      }
      else
      {
        v40 = *(_QWORD *)(v44 + 208);
        v41 = sub_100007E8C(&qword_10119F4E8);
        v42 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
        result = EnvironmentObject.error()(0, v40, v41, v42);
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1000ED348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = type metadata accessor for VideoSource(255, a3, a4, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v5);
  v8 = type metadata accessor for SourcedPlaybackIntent(255, v5, WitnessTable, v7);
  v9 = type metadata accessor for Optional(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v17 - v11, a2, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v8);
  v15 = type metadata accessor for PlaybackButton(0, v5, WitnessTable, v14);
  sub_10014CD58((uint64_t)v12, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1000ED45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  _QWORD v45[2];
  char v46[16];
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v45[1] = a4;
  v7 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v7);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3[1];
  v11 = a3[4];
  v12 = *(_QWORD *)(a3[6] + 8);
  v52 = a2;
  v53 = v10;
  v54 = v11;
  v55 = v12;
  v13 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)&v52);
  WitnessTable = swift_getWitnessTable(&unk_100EC0318, v13);
  v16 = type metadata accessor for LibraryControl(255, v13, WitnessTable, v15);
  v17 = sub_100044B54(&qword_1011B5800);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for BorderedButtonStyle(255);
  v20 = swift_getWitnessTable(&unk_100EC0418, v16);
  v21 = sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v50 = v20;
  v51 = v21;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v23 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v52 = v18;
  v53 = v19;
  v54 = v22;
  v55 = v23;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v52, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v25 = sub_100044B54(&qword_1011A0610);
  v26 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v25);
  v27 = sub_100044B54(&qword_1011A0618);
  v28 = type metadata accessor for ModifiedContent(255, v26, v27);
  v29 = type metadata accessor for Optional(255, v28);
  v30 = sub_100044B54(&qword_1011A0D10);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v29, v30, 0, 0);
  v32 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v33 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v32);
  v34 = type metadata accessor for ToolbarItemGroup(0, v32, v33);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = __chkstk_darwin(v34);
  v38 = (char *)v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v36);
  v41 = (char *)v45 - v40;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v39);
  v47 = a2;
  v48 = a3;
  v49 = a1;
  ToolbarItemGroup.init(placement:content:)(v9, sub_1000F3BB8, v46, v32, v33);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v34);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v41, v38, v34);
  v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  v43(v38, v34);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v41, v34, v42);
  return ((uint64_t (*)(char *, uint64_t))v43)(v41, v34);
}

uint64_t sub_1000ED760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t WitnessTable;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t OpaqueTypeConformance2;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD, _QWORD);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t KeyPath;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  double v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  ValueMetadata *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  _QWORD *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  ValueMetadata *v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _BYTE v256[32];
  uint64_t v257;
  _QWORD v258[5];
  _QWORD v259[5];
  __int128 v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  __int128 v264;
  _QWORD v265[5];
  uint64_t v266[11];
  _BYTE v267[80];
  _OWORD v268[5];
  unsigned __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;

  v242 = a1;
  v229 = a4;
  v6 = type metadata accessor for ControlSize(0);
  v213 = *(_QWORD *)(v6 - 8);
  v214 = v6;
  __chkstk_darwin(v6);
  v212 = (char *)&v187 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ButtonBorderShape(0);
  v208 = *(_QWORD *)(v8 - 8);
  v209 = v8;
  __chkstk_darwin(v8);
  v206 = (char *)&v187 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A0D30);
  v204 = *(_QWORD *)(v10 - 8);
  v205 = v10;
  __chkstk_darwin(v10);
  v203 = (char *)&v187 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_1011A0D38);
  __chkstk_darwin(v198);
  v211 = (char *)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BorderedButtonStyle(0);
  v210 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v207 = (char *)&v187 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ButtonMenuStyle(0);
  v196 = *(_QWORD *)(v15 - 8);
  v197 = v15;
  __chkstk_darwin(v15);
  v194 = (char *)&v187 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_100007E8C(&qword_1011A05A8);
  v193 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v192 = (char *)&v187 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = sub_100007E8C(&qword_1011A05B0);
  v199 = *(_QWORD *)(v231 - 8);
  __chkstk_darwin(v231);
  v230 = (char *)&v187 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_100007E8C(&qword_1011A0D40);
  __chkstk_darwin(v201);
  v202 = (char *)&v187 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A0D48);
  v225 = *(_QWORD *)(v20 - 8);
  v226 = v20;
  __chkstk_darwin(v20);
  v200 = (char *)&v187 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for VideoDetailView(0, a2, (uint64_t)a3, v22);
  v218 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v217 = (char *)&v187 - v24;
  v25 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  v26 = __chkstk_darwin(v25);
  v237 = (char *)&v187 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v26);
  v236 = (uint64_t *)((char *)&v187 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v224 = sub_100007E8C(&qword_1011A0D10);
  v29 = __chkstk_darwin(v224);
  v228 = (char *)&v187 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v227 = (char *)&v187 - v31;
  v32 = a3[1];
  v33 = a3[4];
  v34 = *(_QWORD *)(a3[6] + 8);
  v221 = a2;
  *(_QWORD *)&v269 = a2;
  *((_QWORD *)&v269 + 1) = v32;
  v216 = v32;
  *(_QWORD *)&v270 = v33;
  *((_QWORD *)&v270 + 1) = v34;
  v35 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)&v269);
  WitnessTable = swift_getWitnessTable(&unk_100EC0318, v35);
  v38 = type metadata accessor for LibraryControl(255, v35, WitnessTable, v37);
  v39 = sub_100044B54(&qword_1011B5800);
  v40 = type metadata accessor for ModifiedContent(255, v38, v39);
  v41 = swift_getWitnessTable(&unk_100EC0418, v38);
  v42 = sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v266[9] = v41;
  v266[10] = v42;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  v44 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  *(_QWORD *)&v241 = v40;
  *((_QWORD *)&v241 + 1) = v13;
  *(_QWORD *)&v269 = v40;
  *((_QWORD *)&v269 + 1) = v13;
  *(_QWORD *)&v270 = v43;
  *((_QWORD *)&v270 + 1) = v44;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v269, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v190 = sub_100044B54(&qword_1011A0610);
  v46 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v190);
  v191 = sub_100044B54(&qword_1011A0618);
  v47 = type metadata accessor for ModifiedContent(0, v46, v191);
  v222 = *(_QWORD *)(v47 - 8);
  v48 = __chkstk_darwin(v47);
  v215 = (char *)&v187 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v220 = (uint64_t *)((char *)&v187 - v50);
  v240 = type metadata accessor for Optional(0, v47);
  v238 = *(_QWORD *)(v240 - 8);
  v51 = __chkstk_darwin(v240);
  v53 = (char *)&v187 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v239 = (uint64_t)&v187 - v54;
  v235 = v23;
  v55 = sub_1000EA8FC(v23);
  v233 = v46;
  v234 = v53;
  v223 = v43;
  v232 = v44;
  if (v55)
  {
    v56 = v55;
    swift_retain(v55);
    v57 = swift_checkMetadataState(0, v35);
    v58 = sub_100532B98(v56, v57, WitnessTable);
    v60 = v59;
    v61 = (uint64_t)v215;
    sub_10034A348(v58, v59, v57, WitnessTable, (uint64_t)v215);
    v62 = v241;
    swift_release(v60);
    swift_release(v56);
    v269 = __PAIR128__(*((unint64_t *)&v241 + 1), v62);
    *(_QWORD *)&v270 = v43;
    *((_QWORD *)&v270 + 1) = v44;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v269, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v64 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    v245 = OpaqueTypeConformance2;
    v246 = v64;
    v65 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v233);
    v66 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    v243 = v65;
    v244 = v66;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
    v67 = (void (*)(_QWORD, _QWORD))v220;
    sub_10081EB14(v61, v47, (uint64_t)v220);
    v68 = v222;
    v69 = *(void (**)(uint64_t, uint64_t))(v222 + 8);
    v69(v61, v47);
    v53 = v234;
    sub_1000EA744((uint64_t)v67, v47, (uint64_t)v234);
    v69((uint64_t)v67, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v53, 0, 1, v47);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56))(v53, 1, 1, v47);
    v269 = v241;
    *(_QWORD *)&v270 = v43;
    *((_QWORD *)&v270 + 1) = v44;
    v70 = swift_getOpaqueTypeConformance2(&v269, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v71 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    v266[7] = v70;
    v266[8] = v71;
    v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
    v73 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    v266[5] = v72;
    v266[6] = v73;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  }
  v74 = v47;
  sub_1004D497C((uint64_t)v53, v47, v239);
  v220 = *(uint64_t **)(v238 + 8);
  ((void (*)(char *, uint64_t))v220)(v53, v240);
  v75 = v242;
  v76 = *(_QWORD *)(v242 + 8);
  swift_retain(v76);
  sub_1000EA75C(v236);
  swift_release(v76);
  v77 = *(void **)(v75 + 120);
  v78 = *(_BYTE *)(v75 + 128);
  sub_1000A4100(v77, v78);
  v215 = (char *)sub_100824044(v77, v78);
  sub_1000A4224(v77, v78);
  v79 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v237, 1, 1, v79);
  v80 = v235;
  v81 = sub_1000F3A78();
  v82 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v266[4] = (uint64_t)&protocol witness table for <A> PresentedViewState<A>;
  v266[3] = v82;
  v266[0] = v81;
  swift_retain(v81);
  v83 = sub_1000F3AE8();
  v84 = type metadata accessor for NoticePresenter(0);
  v265[4] = &protocol witness table for NoticePresenter;
  v265[3] = v84;
  v265[0] = v83;
  v263 = 0;
  v261 = 0u;
  v262 = 0u;
  v260 = 0u;
  v264 = xmmword_100EA93A0;
  v85 = *(_QWORD *)(v75 + 64);
  v86 = *(_QWORD *)(v75 + 72);
  v87 = *(unsigned __int8 *)(v75 + 80);
  swift_retain(v83);
  v88 = sub_100007E8C(&qword_1011A03A8);
  v188 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v89 = StateObject.wrappedValue.getter(v85, v86, v87, v88, v188);
  v259[4] = &protocol witness table for <A> PresentedViewState<A>;
  v189 = v88;
  v259[3] = v88;
  v259[0] = v89;
  v90 = *(_QWORD *)(v75 + 88);
  if (!v90)
  {
    v179 = *(_QWORD *)(v242 + 96);
    v180 = type metadata accessor for NavigationPusher();
    v181 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v179, v180, v181);
    __break(1u);
    goto LABEL_13;
  }
  v222 = v74;
  v91 = type metadata accessor for NavigationPusher();
  v258[4] = &off_1010D58B0;
  v258[3] = v91;
  v258[0] = v90;
  v257 = 0;
  memset(v256, 0, sizeof(v256));
  swift_retain(v90);
  v92 = v242;
  v93 = sub_1000F3B48();
  v80 = v93;
  v94 = *(_QWORD *)(v92 + 184);
  if (!v94)
  {
LABEL_13:
    v182 = *(_QWORD *)(v242 + 192);
    v183 = type metadata accessor for TabSelectionManager(0);
    v184 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    swift_retain(v80);
    result = EnvironmentObject.error()(0, v182, v183, v184);
    __break(1u);
    return result;
  }
  __chkstk_darwin(v93);
  sub_1000502A4();
  KeyPath = swift_getKeyPath(&unk_100EAA918);
  __chkstk_darwin(KeyPath);
  v96 = swift_getKeyPath(&unk_100EAA950);
  swift_retain(v80);
  swift_retain(v94);
  static Published.subscript.getter(&v269, v97, KeyPath, v96);
  swift_release(v94);
  swift_release(KeyPath);
  swift_release(v96);
  v98 = v269;
  v99 = v242;
  v100 = *(_QWORD *)(v242 + 136);
  v101 = *(_QWORD *)(v242 + 144);
  v102 = *(_BYTE *)(v242 + 152);
  sub_1000A410C(v100, v101, v102);
  sub_100824224(v100, v101, v102);
  v104 = v103;
  sub_1000A4230(v100, v101, v102);
  sub_10066D160(v98);
  v106 = v105;
  v108 = v107;
  swift_release(v80);
  swift_bridgeObjectRelease(v104);
  v109 = *(_QWORD *)(v99 + 160);
  v110 = *(_QWORD *)(v99 + 168);
  LOBYTE(v100) = *(_BYTE *)(v99 + 176);
  sub_1000A411C(v109, v110, v100);
  sub_100824400(v109, v110, v100, (uint64_t *)&v269);
  v111 = sub_1000A4240(v109, v110, v100);
  v112 = *((_QWORD *)&v269 + 1);
  v113 = v269;
  v115 = v217;
  v114 = v218;
  v116 = v235;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v218 + 16))(v217, v99, v235, v111);
  if (v112 >> 60 == 15)
  {
    v118 = sub_1000F3B48();
    swift_retain(v118);
    v113 = sub_10066D7A8();
    v112 = v119;
    v117 = swift_release(v118);
  }
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v115, v116, v117);
  v120 = type metadata accessor for MusicLibrary(0);
  v121 = static MusicLibrary.shared.getter(v120);
  v122 = v221;
  *((_QWORD *)&v186 + 1) = v108;
  *((_QWORD *)&v185 + 1) = v256;
  *(_QWORD *)&v186 = v106;
  *(_QWORD *)&v185 = v258;
  v123 = v215;
  v124 = v236;
  v125 = (uint64_t)v237;
  MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(0, v215, v121, (uint64_t)v266, (uint64_t)v265, (uint64_t)&v260, (unint64_t)v259, (uint64_t)v267, v185, v186, v113, v112, v221, *(_QWORD *)(v216 + 8));
  swift_release(v121);
  sub_1000822B4(v113, v112);

  swift_bridgeObjectRelease(v108);
  sub_10004FF60((uint64_t)v256, &qword_1011A0558);
  sub_10004FF60((uint64_t)&v260, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60(v125, (uint64_t *)&unk_1011A20C0);
  (*(void (**)(_QWORD *, uint64_t))(v219 + 8))(v124, v122);
  sub_10004FF60((uint64_t)v258, &qword_1011A0560);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v259);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v265);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v266);
  sub_100065228((uint64_t)v267, (uint64_t)v268, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v268[0] + 1))
  {
    v271 = v268[2];
    v272 = v268[3];
    v273 = v268[4];
    v269 = v268[0];
    v270 = v268[1];
    v126 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v127 = sub_100007E8C(&qword_1011A05F8);
    v128 = sub_1000E41D0();
    v129 = v192;
    v130 = ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)&off_1010AA3C8, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v126, v192, v127, v128);
    v131 = v194;
    ButtonMenuStyle.init()(v130);
    v132 = sub_1000E3EE4();
    v247 = &type metadata for ActionType;
    v248 = v127;
    v249 = v132;
    v250 = v128;
    v133 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v134 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v135 = (ValueMetadata *)v195;
    v136 = v197;
    View.menuStyle<A>(_:)(v131, v195, v197, v133, v134);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v131, v136);
    v137 = (*(uint64_t (**)(char *, ValueMetadata *))(v193 + 8))(v129, v135);
    v138 = v207;
    BorderedButtonStyle.init()(v137);
    v247 = v135;
    v248 = v136;
    v249 = v133;
    v250 = v134;
    v139 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v140 = v203;
    v141 = View.buttonStyle<A>(_:)(v138, v231, *((_QWORD *)&v241 + 1), v139, v232);
    v142 = v206;
    static ButtonBorderShape.circle.getter(v141);
    v143 = swift_getKeyPath(&unk_100EAA970);
    v144 = (uint64_t)v211;
    v145 = (uint64_t *)&v211[*(int *)(v198 + 36)];
    v147 = v208;
    v146 = v209;
    (*(void (**)(char *, char *, uint64_t))(v208 + 16))((char *)v145 + *(int *)(v190 + 28), v142, v209);
    *v145 = v143;
    v149 = v204;
    v148 = v205;
    (*(void (**)(uint64_t, char *, uint64_t))(v204 + 16))(v144, v140, v205);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v142, v146);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v140, v148);
    v151 = v212;
    v150 = v213;
    v152 = v214;
    (*(void (**)(char *, _QWORD, uint64_t))(v213 + 104))(v212, enum case for ControlSize.regular(_:), v214);
    v153 = swift_getKeyPath(&unk_100EAA9A0);
    v154 = v201;
    v155 = (uint64_t)v202;
    v156 = (uint64_t *)&v202[*(int *)(v201 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))((char *)v156 + *(int *)(v191 + 28), v151, v152);
    *v156 = v153;
    sub_10004A160(v144, v155, &qword_1011A0D38);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);
    sub_10004FF60(v144, &qword_1011A0D38);
    v157 = *((_QWORD *)&v241 + 1);
    (*(void (**)(char *, _QWORD))(v210 + 8))(v138, *((_QWORD *)&v241 + 1));
    (*(void (**)(char *, uint64_t))(v199 + 8))(v230, v231);
    v158 = StateObject.wrappedValue.getter(*(_QWORD *)(v242 + 64), *(_QWORD *)(v242 + 72), *(unsigned __int8 *)(v242 + 80), v189, v188);
    v159 = sub_1000F3C70();
    v160 = v200;
    v161 = v154;
    v162 = v157;
    View.shareSheetPresenting(_:)(v158, v161, v159);
    swift_release(v158);
    sub_1000E411C((uint64_t)v267);
    sub_10004FF60(v155, &qword_1011A0D40);
    v164 = v225;
    v163 = v226;
    v165 = (uint64_t)v227;
    v166 = v160;
    v167 = v232;
    (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v227, v166, v226);
    v168 = 0;
    v169 = (uint64_t)v228;
  }
  else
  {
    v168 = 1;
    v165 = (uint64_t)v227;
    v169 = (uint64_t)v228;
    v164 = v225;
    v163 = v226;
    v167 = v232;
    v162 = *((_QWORD *)&v241 + 1);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v165, v168, 1, v163);
  v170 = v239;
  v171 = (uint64_t)v234;
  v172 = v240;
  (*(void (**)(char *, uint64_t, uint64_t))(v238 + 16))(v234, v239, v240);
  v266[0] = v171;
  sub_10004A160(v165, v169, &qword_1011A0D10);
  v266[1] = v169;
  v265[0] = v172;
  v265[1] = v224;
  *(_QWORD *)&v260 = v241;
  *((_QWORD *)&v260 + 1) = v162;
  *(_QWORD *)&v261 = v223;
  *((_QWORD *)&v261 + 1) = v167;
  v173 = swift_getOpaqueTypeConformance2(&v260, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v174 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v254 = v173;
  v255 = v174;
  v175 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v233);
  v176 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v252 = v175;
  v253 = v176;
  v251 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v222);
  *(_QWORD *)&v260 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v172);
  *((_QWORD *)&v260 + 1) = sub_1000F3BE4();
  sub_1004D49B8(v266, 2uLL, (uint64_t)v265);
  sub_10004FF60(v165, &qword_1011A0D10);
  v177 = (uint64_t (*)(uint64_t, uint64_t))v220;
  ((void (*)(uint64_t, uint64_t))v220)(v170, v172);
  sub_10004FF60(v169, &qword_1011A0D10);
  return v177(v171, v172);
}

uint64_t sub_1000EE9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for Optional(0, a2);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000EEA6C, v8, v9);
}

uint64_t sub_1000EEA6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v1 = *(_QWORD **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 64));
  v8 = type metadata accessor for VideoDetailView(0, v5, v4, v7);
  v9 = *(_QWORD *)(v6 + 8);
  swift_retain(v9);
  sub_1000EA75C(v1);
  v10 = swift_release(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5, v10);
  sub_1000EEB34((uint64_t)v1, v8);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EEB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  _QWORD v30[5];
  _QWORD v31[5];

  v4 = *(_QWORD *)(a2 + 16);
  v5 = type metadata accessor for Optional(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v25 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v7);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
  v14 = sub_1000EA8FC(a2);
  if (v14)
  {
    v15 = v14;
    sub_100536AA8((uint64_t)v12);
    swift_release(v15);
  }
  else
  {
    v16 = *(_QWORD **)(a2 + 24);
    v17 = v16[1];
    v18 = v16[4];
    v19 = *(_QWORD *)(v16[6] + 8);
    *(_QWORD *)&v25 = v4;
    *((_QWORD *)&v25 + 1) = v17;
    *(_QWORD *)&v26 = v18;
    *((_QWORD *)&v26 + 1) = v19;
    _s32Legacy_ActionableStateControllerCMa(0, (uint64_t)&v25);
    v20 = sub_1000F3A78();
    v31[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v31[4] = &protocol witness table for <A> PresentedViewState<A>;
    v31[0] = v20;
    swift_retain(v20);
    v21 = sub_1000F3AE8();
    v30[3] = type metadata accessor for NoticePresenter(0);
    v30[4] = &protocol witness table for NoticePresenter;
    v30[0] = v21;
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    v25 = 0u;
    v29 = xmmword_100EA93A0;
    type metadata accessor for MusicLibrary(0);
    swift_retain(v21);
    v23 = static MusicLibrary.shared.getter(v22);
    v24 = sub_100536EB4((uint64_t)v12, v31, (uint64_t)v30, (uint64_t)&v25, v23);
    sub_1000EA974(v24, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v4);
}

uint64_t sub_1000EED5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = type metadata accessor for Optional(0, a4);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v16 - v10, a2, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, a4);
  v14 = type metadata accessor for VideoDetailView(0, a4, a5, v13);
  sub_1000EEB34((uint64_t)v11, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000EEE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t TupleTypeMetadata;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[6];

  v36 = a3;
  v37 = a1;
  v38 = a4;
  v44[0] = sub_100044B54(&qword_1011A0F18);
  v44[1] = sub_100044B54(&qword_1011A0F20);
  v44[2] = sub_100044B54(&qword_1011A0F28);
  v44[3] = sub_100044B54(&qword_1011A0F30);
  v6 = sub_100044B54(&qword_1011A0F38);
  v8 = type metadata accessor for VideoDetailView.VideoBadges(255, a2, a3, v7);
  v9 = type metadata accessor for Optional(255, v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v13 = type metadata accessor for HStack(255, v11, WitnessTable);
  v44[4] = type metadata accessor for ModifiedContent(255, v13, &type metadata for _PaddingLayout);
  v44[5] = &type metadata for Spacer;
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v16 = type metadata accessor for VStack(0, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - v18;
  v20 = sub_100044B54(&qword_1011A45B0);
  v21 = type metadata accessor for ModifiedContent(0, v16, v20);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v35 - v27;
  v29 = static HorizontalAlignment.leading.getter(v26);
  v39 = a2;
  v40 = v36;
  v41 = v37;
  v30 = VStack.init(alignment:spacing:content:)(v29, 0, 0, sub_1000F55F8);
  LODWORD(v44[0]) = static HierarchicalShapeStyle.secondary.getter(v30);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v16);
  View.foregroundStyle<A>(_:)(v44, v16, &type metadata for HierarchicalShapeStyle, v31, &protocol witness table for HierarchicalShapeStyle);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v32 = sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v42 = v31;
  v43 = v32;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  sub_10081EB14((uint64_t)v25, v21, (uint64_t)v28);
  v33 = *(void (**)(char *, uint64_t))(v22 + 8);
  v33(v25, v21);
  sub_1000EA744((uint64_t)v28, v21, v38);
  return ((uint64_t (*)(char *, uint64_t))v33)(v28, v21);
}

uint64_t sub_1000EF144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  uint64_t v99;
  _QWORD *v100;
  int *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t (**v119)@<X0>(uint64_t@<X8>);
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  Swift::Int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  double v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  Swift::String v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  double v200;
  double v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(_QWORD *, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  void (*v224)(char *, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  char *v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  uint64_t OpaqueTypeConformance2;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t WitnessTable;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void *v286;
  _QWORD v287[6];
  uint64_t v288;
  char v289;
  _BYTE v290[176];
  uint64_t v291[8];
  uint64_t v292;
  __int128 v293;
  uint64_t v294;
  uint64_t v295;
  __int128 v296;
  char *v297;
  uint64_t v298;
  __int128 v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  char v305;
  double v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310;
  uint64_t v311;
  __int128 v312;
  uint64_t v313;
  uint64_t v314;
  __int128 v315;
  char *v316;
  uint64_t v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;

  v264 = a2;
  v265 = a3;
  v263 = a4;
  v7 = sub_100044B54(&qword_1011A0F38);
  v9 = type metadata accessor for VideoDetailView.VideoBadges(255, a2, a3, v8);
  v10 = type metadata accessor for Optional(255, v9);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v258 = v12;
  v13 = type metadata accessor for HStack(0, v12, WitnessTable);
  v260 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v259 = (char *)&v228 - v14;
  v231 = v15;
  v233 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _PaddingLayout);
  v261 = *(_QWORD *)(v233 - 8);
  v16 = __chkstk_darwin(v233);
  v232 = (char *)&v228 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v262 = (uint64_t)&v228 - v18;
  v19 = sub_100007E8C(&qword_1011A0F48);
  v255 = *(_QWORD *)(v19 - 8);
  v256 = v19;
  __chkstk_darwin(v19);
  v254 = (char *)&v228 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_100007E8C(&qword_1011A0F28);
  v21 = __chkstk_darwin(v273);
  v274 = (uint64_t)&v228 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v279 = (uint64_t)&v228 - v23;
  OpaqueTypeConformance2 = type metadata accessor for PlainButtonStyle(0);
  *(_QWORD *)&v252 = *(_QWORD *)(OpaqueTypeConformance2 - 8);
  __chkstk_darwin(OpaqueTypeConformance2);
  *(_QWORD *)&v251 = (char *)&v228 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v25);
  v240 = (char *)&v228 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_10119F840);
  __chkstk_darwin(v27);
  v243 = (uint64_t *)((char *)&v228 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v244 = sub_100007E8C(&qword_1011A0F50);
  __chkstk_darwin(v244);
  v245 = (uint64_t)&v228 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = sub_100007E8C(&qword_1011A0F58);
  __chkstk_darwin(v248);
  v246 = (uint64_t)&v228 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = sub_100007E8C(&qword_1011A0F60);
  *(_QWORD *)&v250 = *(_QWORD *)(v267 - 8);
  __chkstk_darwin(v267);
  v249 = (char *)&v228 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_100007E8C(&qword_1011A0F20);
  v278 = *(_QWORD *)(v272 - 8);
  v32 = __chkstk_darwin(v272);
  v271 = (char *)&v228 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v247 = (char *)&v228 - v35;
  __chkstk_darwin(v34);
  v277 = (char *)&v228 - v36;
  v37 = sub_100007E8C(&qword_1011A0F68);
  v269 = *(_QWORD *)(v37 - 8);
  v270 = v37;
  v38 = __chkstk_darwin(v37);
  v241 = v39;
  v242 = (char *)&v228 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v276 = (char *)&v228 - v40;
  v41 = sub_100007E8C(&qword_1011A0F70);
  v238 = *(_QWORD *)(v41 - 8);
  v239 = v41;
  __chkstk_darwin(v41);
  v237 = (char *)&v228 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = sub_100007E8C(&qword_1011A0F18);
  v43 = __chkstk_darwin(v266);
  v45 = (char *)&v228 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v275 = (uint64_t)&v228 - v46;
  v47 = a1;
  v280 = (_QWORD *)a1;
  v48 = *(_QWORD *)(a1 + 16);
  v49 = *(_QWORD *)(v47 + 24);
  v50 = sub_1004872C4((uint64_t)&off_1010AA3F0);
  swift_bridgeObjectRetain();
  v229 = v49;
  v230 = v48;
  v51 = Text.init(optional:options:)(v48, v49, v50);
  v234 = v52;
  v235 = v51;
  v54 = v53;
  v56 = v55;
  v57 = v52;
  KeyPath = swift_getKeyPath(&unk_100EAAB58);
  v236 = KeyPath;
  LODWORD(v50) = static HierarchicalShapeStyle.primary.getter();
  v59 = static Font.largeTitle.getter();
  v60 = swift_getKeyPath(&unk_100EAAB88);
  v311 = v51;
  *(_QWORD *)&v312 = v54;
  *((_QWORD *)&v312 + 1) = v56;
  v313 = v57;
  v314 = KeyPath;
  *(_QWORD *)&v315 = 1;
  BYTE8(v315) = 0;
  HIDWORD(v315) = v50;
  v316 = (char *)v60;
  v317 = v59;
  v61 = static Font.Weight.bold.getter(v60);
  v62 = sub_100007E8C(&qword_1011A0F78);
  v63 = sub_1000F5614();
  v64 = v237;
  View.fontWeight(_:)(*(_QWORD *)&v61, 0, v62, v63);
  sub_1000E450C(v235, v54, v56, v234);
  swift_release(v59);
  swift_release(v60);
  swift_release(v236);
  LOBYTE(v50) = static Edge.Set.top.getter(v65);
  v66 = (uint64_t)v280;
  v67 = sub_1000F041C((uint64_t)v280, v264);
  v68 = EdgeInsets.init(_all:)(v67);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v76 = v238;
  v75 = v239;
  (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v45, v64, v239);
  v77 = &v45[*(int *)(v266 + 36)];
  *v77 = v50;
  *((double *)v77 + 1) = v68;
  *((_QWORD *)v77 + 2) = v70;
  *((_QWORD *)v77 + 3) = v72;
  *((_QWORD *)v77 + 4) = v74;
  v77[40] = 0;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v75);
  v268 = v45;
  sub_100065228((uint64_t)v45, v275, &qword_1011A0F18);
  v78 = *(_QWORD *)(v66 + 56);
  v79 = *(_QWORD *)(v66 + 64);
  v80 = sub_1004872C4((uint64_t)&off_1010AA418);
  swift_bridgeObjectRetain();
  v81 = Text.init(optional:options:)(v78, v79, v80);
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v88 = swift_getKeyPath(&unk_100EAAB58);
  v239 = v88;
  v89 = static Font.largeTitle.getter();
  v90 = swift_getKeyPath(&unk_100EAAB88);
  v311 = v81;
  *(_QWORD *)&v312 = v83;
  *((_QWORD *)&v312 + 1) = v85;
  v313 = v87;
  v314 = v88;
  *(_QWORD *)&v315 = 2;
  BYTE8(v315) = 0;
  v316 = (char *)v90;
  v317 = v89;
  v91 = static Font.Weight.medium.getter();
  v92 = sub_100007E8C(&qword_1011A0FB8);
  v93 = sub_1000F57B8();
  v94 = v92;
  v95 = (uint64_t)v240;
  View.fontWeight(_:)(*(_QWORD *)&v91, 0, v94, v93);
  v96 = v87;
  v97 = v280;
  sub_1000E450C(v81, v83, v85, v96);
  swift_release(v89);
  swift_release(v90);
  swift_release(v239);
  v98 = (void *)v97[6];
  v99 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v95, 1, 1, v99);
  if (v98)
  {
    v100 = v243;
    *v243 = v98;
    v101 = (int *)type metadata accessor for SegueContext(0);
    sub_100065228(v95, (uint64_t)v100 + v101[5], (uint64_t *)&unk_1011A20D0);
    *((_BYTE *)v100 + v101[6]) = 0;
    v102 = (_QWORD *)((char *)v100 + v101[7]);
    *v102 = 0;
    v102[1] = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v101 - 1) + 56))(v100, 0, 1, v101);
  }
  else
  {
    sub_10004FF60(v95, (uint64_t *)&unk_1011A20D0);
    v103 = type metadata accessor for SegueContext(0);
    v100 = v243;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v243, 1, 1, v103);
  }
  v105 = v269;
  v104 = v270;
  v106 = v242;
  (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v242, v276, v270);
  v107 = *(unsigned __int8 *)(v105 + 80);
  v108 = (v107 + 16) & ~v107;
  v109 = swift_allocObject(&unk_1010B0E08, v108 + v241, v107 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v109 + v108, v106, v104);
  v110 = type metadata accessor for TabSelectionManager(0);
  v111 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v112 = v98;
  v113 = EnvironmentObject.init()(v110, v111);
  v115 = v114;
  v116 = (uint64_t)v100;
  v117 = v245;
  sub_100065228(v116, v245, &qword_10119F840);
  v118 = (int *)v244;
  v119 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v117 + *(int *)(v244 + 36));
  *v119 = sub_1000F58A0;
  v119[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v109;
  v120 = v117 + v118[10];
  *(_QWORD *)v120 = sub_1006096B0;
  *(_QWORD *)(v120 + 8) = 0;
  *(_BYTE *)(v120 + 16) = 0;
  v121 = (_QWORD *)(v117 + v118[11]);
  v122 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v123 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v121 = EnvironmentObject.init()(v122, v123);
  v121[1] = v124;
  v125 = (_QWORD *)(v117 + v118[12]);
  v126 = sub_100007E8C(&qword_10119F4E8);
  v127 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v125 = EnvironmentObject.init()(v126, v127);
  v125[1] = v128;
  v129 = (_QWORD *)(v117 + v118[13]);
  v130 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v131 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v129 = EnvironmentObject.init()(v130, v131);
  v129[1] = v132;
  v133 = (uint64_t *)(v117 + v118[14]);
  *v133 = v113;
  v133[1] = v115;
  v134 = (_QWORD *)(v117 + v118[15]);
  *v134 = swift_getKeyPath(&unk_100EAABB8);
  v135 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v134, v135, 0);
  v136 = v117 + v118[16];
  *(_QWORD *)v136 = swift_getKeyPath(&unk_100EAABE8);
  *(_BYTE *)(v136 + 8) = 0;
  v137 = v117 + v118[17];
  *(_QWORD *)v137 = swift_getKeyPath(&unk_100EAAC10);
  *(_QWORD *)(v137 + 8) = 0;
  *(_BYTE *)(v137 + 16) = 0;
  v138 = v117 + v118[18];
  *(_QWORD *)v138 = swift_getKeyPath(&unk_100EAAC38);
  *(_QWORD *)(v138 + 8) = 0;
  *(_BYTE *)(v138 + 16) = 0;
  v139 = v117 + v118[19];
  v140 = swift_getKeyPath(&unk_100EAAC60);
  *(_QWORD *)v139 = v140;
  *(_BYTE *)(v139 + 8) = 0;
  LODWORD(v139) = static HierarchicalShapeStyle.secondary.getter(v140);
  v141 = v246;
  sub_10004A160(v117, v246, &qword_1011A0F50);
  v142 = v248;
  *(_DWORD *)(v141 + *(int *)(v248 + 36)) = v139;
  v143 = sub_10004FF60(v117, &qword_1011A0F50);
  v144 = v251;
  PlainButtonStyle.init()(v143);
  v145 = sub_1000F5910();
  v146 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v147 = v249;
  v148 = OpaqueTypeConformance2;
  View.buttonStyle<A>(_:)(v144, v142, OpaqueTypeConformance2, v145, v146);
  (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v144, v148);
  sub_10004FF60(v141, &qword_1011A0F58);
  v149 = Corner.small.unsafeMutableAddressor();
  v150 = *v149;
  v151 = v149[1];
  LOBYTE(v141) = *((_BYTE *)v149 + 16);
  v152 = *HI.HoverOutset.text.unsafeMutableAddressor();
  v311 = v142;
  *(_QWORD *)&v312 = v148;
  *((_QWORD *)&v312 + 1) = v145;
  v313 = v146;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v311, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v153 = v247;
  v154 = v267;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v150, v151, v141, 0, 0, 1, 1, v267, *(double *)&v152, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v250 + 8))(v147, v154);
  (*(void (**)(char *, char *, uint64_t))(v278 + 32))(v277, v153, v272);
  v155 = v97[4];
  v156 = v97[5];
  v157 = sub_1004872C4((uint64_t)&off_1010AA440);
  swift_bridgeObjectRetain();
  v158 = Text.init(optional:options:)(v155, v156, v157);
  *(_QWORD *)&v252 = v158;
  v160 = v159;
  v162 = v161;
  v164 = v163;
  v165 = static Font.footnote.getter(v158);
  v166 = swift_getKeyPath(&unk_100EAAB88);
  v311 = v158;
  *(_QWORD *)&v312 = v160;
  *((_QWORD *)&v312 + 1) = v162;
  v313 = v164;
  v314 = v166;
  *(_QWORD *)&v315 = v165;
  v167 = static Font.Weight.bold.getter(v166);
  v168 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v169 = sub_1000F59AC();
  v170 = v254;
  View.fontWeight(_:)(*(_QWORD *)&v167, 0, v168, v169);
  v171 = (uint64_t)v280;
  sub_1000E450C(v252, v160, v162, v164);
  swift_release(v165);
  swift_release(v166);
  LOBYTE(v158) = static Edge.Set.top.getter(v172);
  v173 = EdgeInsets.init(_all:)(2.0);
  v175 = v174;
  v177 = v176;
  v179 = v178;
  v181 = v255;
  v180 = v256;
  v182 = v274;
  (*(void (**)(uint64_t, char *, uint64_t))(v255 + 16))(v274, v170, v256);
  v183 = v182 + *(int *)(v273 + 36);
  *(_BYTE *)v183 = v158;
  *(double *)(v183 + 8) = v173;
  *(_QWORD *)(v183 + 16) = v175;
  *(_QWORD *)(v183 + 24) = v177;
  *(_QWORD *)(v183 + 32) = v179;
  *(_BYTE *)(v183 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v181 + 8))(v170, v180);
  sub_100065228(v182, v279, &qword_1011A0F28);
  v184 = *(_QWORD *)(v171 + 80);
  if (!v184)
    goto LABEL_9;
  v185 = *(_QWORD *)(v171 + 72);
  v186 = String.trim()();
  swift_bridgeObjectRelease(v186._object);
  v187 = ((unint64_t)v186._object >> 56) & 0xF;
  if (((uint64_t)v186._object & 0x2000000000000000) == 0)
    v187 = v186._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v187)
  {
    v188 = v229;
    v189 = swift_bridgeObjectRetain();
    v190 = static Color.secondary.getter(v189);
    __chkstk_darwin(v190);
    v226 = v185;
    v227 = v184;
    v191 = sub_100007E8C(&qword_1011A1028);
    v192 = sub_1000F5D8C();
    ExpandableTextView.init<>(title:buttonColor:_:)(v230, v188, v190, (uint64_t (*)(__n128))sub_1000F5D84, v191, v192, (uint64_t)&v311);
    LOBYTE(v188) = v311;
    v193 = v313;
    v194 = v314;
    v195 = v317;
    v256 = v319;
    v254 = v316;
    v255 = v320;
    v250 = v315;
    v251 = v318;
    v252 = v312;
    v196 = swift_getKeyPath(&unk_100EAAB58);
    LOBYTE(v291[0]) = 0;
    v197 = static Edge.Set.top.getter(v196);
    v199 = v264;
    v198 = v265;
    v200 = sub_1000F0858((uint64_t)v280, v264);
    v201 = EdgeInsets.init(_all:)(v200);
    v290[0] = 0;
    LOBYTE(v292) = v188;
    v293 = v252;
    v294 = v193;
    v295 = v194;
    v171 = (uint64_t)v280;
    v296 = v250;
    v297 = v254;
    v298 = v195;
    v299 = v251;
    v300 = v256;
    v301 = v255;
    v302 = v196;
    v303 = 3;
    v304 = v291[0];
    v305 = v197;
    v306 = v201;
    v307 = v202;
    v308 = v203;
    v309 = v204;
    v310 = 0;
    UIScreen.Dimensions.size.getter(&v292);
    v205 = sub_100065228((uint64_t)&v292, (uint64_t)&v311, &qword_1011A0F30);
    v206 = v232;
    v207 = v233;
  }
  else
  {
LABEL_9:
    sub_1000F5A48(&v292);
    v205 = sub_100065228((uint64_t)&v292, (uint64_t)&v311, &qword_1011A0F30);
    v206 = v232;
    v207 = v233;
    v199 = v264;
    v198 = v265;
  }
  v208 = v231;
  v209 = __chkstk_darwin(v205);
  *(&v228 - 4) = v199;
  *(&v228 - 3) = v198;
  v226 = v171;
  v210 = static VerticalAlignment.center.getter(v209);
  v211 = v259;
  v212 = HStack.init(alignment:spacing:content:)(v210, 0x4018000000000000, 0, sub_1000F5A68, &v228 - 6, v258, WitnessTable);
  v213 = static Edge.Set.top.getter(v212);
  v214 = sub_1000F16D4(v171, v199);
  v215 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v208);
  View.padding(_:_:)(v206, v213, *(_QWORD *)&v214, 0, v208, v215);
  (*(void (**)(char *, uint64_t))(v260 + 8))(v211, v208);
  v291[6] = v215;
  v291[7] = (uint64_t)&protocol witness table for _PaddingLayout;
  v280 = (_QWORD *)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v207);
  v216 = v262;
  sub_10081EB14((uint64_t)v206, v207, v262);
  v217 = v261;
  v218 = *(void (**)(_QWORD *, uint64_t))(v261 + 8);
  v218(v206, v207);
  v219 = (uint64_t)v268;
  sub_10004A160(v275, (uint64_t)v268, &qword_1011A0F18);
  v291[0] = v219;
  v221 = (uint64_t)v271;
  v220 = v272;
  (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v271, v277, v272);
  v291[1] = v221;
  v222 = v206;
  v223 = v274;
  sub_10004A160(v279, v274, &qword_1011A0F28);
  v291[2] = v223;
  sub_100065228((uint64_t)&v311, (uint64_t)v290, &qword_1011A0F30);
  v291[3] = (uint64_t)v290;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v217 + 16))(v206, v216, v207);
  v288 = 0;
  v289 = 1;
  v291[4] = (uint64_t)v206;
  v291[5] = (uint64_t)&v288;
  sub_1000F5C70((uint64_t)&v311, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000F5A74);
  v287[0] = v266;
  v287[1] = v220;
  v287[2] = v273;
  v287[3] = sub_100007E8C(&qword_1011A0F30);
  v287[4] = v207;
  v287[5] = &type metadata for Spacer;
  v281 = sub_1000F5B1C(&qword_1011A0FE0, &qword_1011A0F18, &qword_1011A0F78, (uint64_t (*)(void))sub_1000F5614);
  v292 = v267;
  *(_QWORD *)&v293 = OpaqueTypeConformance2;
  v282 = swift_getOpaqueTypeConformance2(&v292, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v283 = sub_1000F5B1C(&qword_1011A0FE8, &qword_1011A0F28, (uint64_t *)&unk_1011B57E0, (uint64_t (*)(void))sub_1000F59AC);
  v284 = sub_1000E4570(&qword_1011A0FF0, &qword_1011A0F30, (void (*)(void))sub_1000F5BB0, (uint64_t)&protocol conformance descriptor for <A> A?);
  v285 = (uint64_t)v280;
  v286 = &protocol witness table for Spacer;
  sub_1004D49B8(v291, 6uLL, (uint64_t)v287);
  sub_1000F5C70((uint64_t)&v311, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000F5CDC);
  v218((_QWORD *)v216, v207);
  sub_10004FF60(v279, &qword_1011A0F28);
  v224 = *(void (**)(char *, uint64_t))(v278 + 8);
  v224(v277, v220);
  (*(void (**)(char *, uint64_t))(v269 + 8))(v276, v270);
  sub_10004FF60(v275, &qword_1011A0F18);
  v218(v222, v207);
  sub_100065228((uint64_t)v290, (uint64_t)&v292, &qword_1011A0F30);
  sub_1000F5C70((uint64_t)&v292, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000F5CDC);
  sub_10004FF60(v223, &qword_1011A0F28);
  v224(v271, v220);
  return sub_10004FF60((uint64_t)v268, &qword_1011A0F18);
}

double sub_1000F041C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  __n128 v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  unint64_t v42;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = type metadata accessor for Logger(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for TVEpisode(0);
  v46 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = *(_QWORD *)(a2 - 8);
  v17 = __chkstk_darwin(v14);
  v45 = (_QWORD **)((char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v20 = (char *)&v45 - v19;
  v47 = a1;
  sub_1000EA75C((_QWORD **)((char *)&v45 - v19));
  v21 = a2;
  if (!swift_dynamicCast(v16, v20, a2, v12, 0))
  {
    if (swift_dynamicCast(v11, v20, a2, v8, 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      v23 = v51;
      if (swift_dynamicCast(v7, v20, a2, v51, 0))
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v23);
        v22 = 8.0;
        goto LABEL_10;
      }
      v51 = a2;
      v24 = Logger.musicKit.unsafeMutableAddressor();
      v25 = v48;
      v26 = v49;
      v27 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v24, v50);
      v28 = v47;
      v29 = swift_retain_n(v47, 2);
      v30 = Logger.logObject.getter(v29);
      v32 = static os_log_type_t.fault.getter(v31);
      if (!os_log_type_enabled(v30, v32))
      {

        swift_release_n(v28, 2, v44);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
        v22 = 43.0;
        v21 = v51;
        goto LABEL_10;
      }
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v54 = v34;
      *(_DWORD *)v33 = 136446210;
      v35 = v45;
      sub_1000EA75C(v45);
      v36 = v35;
      v37 = v51;
      v38 = String.init<A>(describing:)(v36, v51);
      v40 = v39;
      v53 = sub_100322200(v38, v39, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_release_n(v28, 2, v41);
      v42 = v40;
      v21 = v37;
      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v30, v32, "Unhandled case for %{public}s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
    }
    v22 = 43.0;
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v22 = 23.0;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v21);
  return v22;
}

uint64_t sub_1000F0808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = swift_bridgeObjectRetain(a2);
  v7 = static Font.body.getter(v6);
  result = swift_getKeyPath(&unk_100EAAB88);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  a3[3] = v7;
  return result;
}

double sub_1000F0858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  __n128 v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVEpisode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicMovie(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(_QWORD *)(a2 - 8);
  v14 = __chkstk_darwin(v11);
  v39 = (_QWORD *)((char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v17 = (char *)v37 - v16;
  sub_1000EA75C((_QWORD *)((char *)v37 - v16));
  if (swift_dynamicCast(v13, v17, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_8:
    v18 = 19.0;
    goto LABEL_9;
  }
  if (!swift_dynamicCast(v8, v17, a2, v5, 0))
  {
    v19 = Logger.musicKit.unsafeMutableAddressor();
    v21 = v40;
    v20 = v41;
    v22 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v41, v19, v42);
    v23 = swift_retain_n(a1, 2);
    v24 = Logger.logObject.getter(v23);
    v26 = static os_log_type_t.fault.getter(v25);
    if (os_log_type_enabled(v24, v26))
    {
      v27 = a1;
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v45 = v38;
      *(_DWORD *)v28 = 136446210;
      v37[1] = v28 + 4;
      v29 = v39;
      sub_1000EA75C(v39);
      v30 = String.init<A>(describing:)(v29, a2);
      v32 = v31;
      v44 = sub_100322200(v30, v31, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_release_n(v27, 2, v33);
      swift_bridgeObjectRelease(v32);
      _os_log_impl((void *)&_mh_execute_header, v24, v26, "Unhandled case for %{public}s", v28, 0xCu);
      v34 = v38;
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v41, v42);
    }
    else
    {

      swift_release_n(a1, 2, v35);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
    }
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = 16.0;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, a2);
  return v18;
}

uint64_t sub_1000F0BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, uint64_t);
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_QWORD *, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t WitnessTable;
  unint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  uint64_t v100[3];

  v94 = a5;
  v87 = a3;
  v7 = type metadata accessor for VideoDetailView.VideoBadges(0, a2, a3, a4);
  v88 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v82 = (uint64_t *)((char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v8);
  v83 = (uint64_t)&v76 - v11;
  v85 = a2;
  v89 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = v14;
  v15 = type metadata accessor for Optional(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v76 - v20;
  v22 = sub_100007E8C(&qword_1011A1040);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v81 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v80 = (char *)&v76 - v26;
  v27 = sub_100007E8C(&qword_1011A0F38);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v84 = a1;
  v33 = *(_QWORD *)(a1 + 88);
  v95 = (char *)&v76 - v32;
  v92 = v30;
  v93 = v15;
  v90 = v31;
  v91 = v16;
  if (v33)
  {
    v77 = v23;
    v78 = v21;
    v79 = v19;
    v100[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v33 >> 62)
    {
      if (v33 >= 0)
        v47 = v33 & 0xFFFFFFFFFFFFFF8;
      else
        v47 = v33;
      swift_bridgeObjectRetain();
      result = _CocoaArrayWrapper.endIndex.getter(v47);
      v34 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v34)
      {
LABEL_4:
        if (v34 < 1)
        {
          __break(1u);
          return result;
        }
        v36 = 0;
        v37 = v22;
        do
        {
          if ((v33 & 0xC000000000000001) != 0)
            v41 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v33);
          else
            v41 = *(id *)(v33 + 8 * v36 + 32);
          v42 = v41;
          v43 = (*(uint64_t (**)(void))((swift_isaMask & *v41) + 0x78))();
          if ((v43 & 1) != 0)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v43);
            v38 = *(_QWORD *)(v100[0] + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
            v39 = v38;
            v37 = v22;
            v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v42);
            specialized ContiguousArray._endMutation()(v40);
          }
          else
          {

          }
          ++v36;
        }
        while (v34 != v36);
        swift_bridgeObjectRelease(v33);
        v44 = (_QWORD *)v100[0];
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease(v33);
    v44 = _swiftEmptyArrayStorage;
    v37 = v22;
LABEL_20:
    v100[0] = (uint64_t)v44;
    v48 = (_QWORD *)swift_allocObject(&unk_1010B0E30, 40, 7);
    v49 = v84;
    v46 = v85;
    v45 = v87;
    v48[2] = v85;
    v48[3] = v45;
    v48[4] = v49;
    swift_retain(v49);
    v50 = sub_100007E8C(&qword_1011A1058);
    v51 = sub_100049F28(&qword_1011A1060, &qword_1011A1058, (uint64_t)&protocol conformance descriptor for [A]);
    v52 = sub_100048748(&qword_1011A1068, (uint64_t (*)(uint64_t))type metadata accessor for JSBadgingItem, (uint64_t)&protocol conformance descriptor for JSObject);
    v53 = v81;
    ForEach<>.init(_:content:)(v100, sub_1000F5F4C, v48, v50, &type metadata for String, &type metadata for Text, v51, &protocol witness table for Text, v52);
    v54 = v77;
    v55 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
    v56 = v80;
    v55(v80, v53, v37);
    v57 = (uint64_t)v95;
    v55(v95, v56, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v57, 0, 1, v37);
    v19 = v79;
    v21 = v78;
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))((char *)&v76 - v32, 1, 1, v22);
  v45 = v87;
  v46 = v85;
LABEL_21:
  sub_1000EA75C(v13);
  v58 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 72);
  v59 = v58(v46, v45);
  v60 = v45;
  v61 = *(void (**)(_QWORD *, uint64_t))(v89 + 8);
  v61(v13, v46);
  v62 = *(_QWORD *)(v59 + 16);
  v63 = swift_bridgeObjectRelease(v59);
  if (v62)
  {
    sub_1000EA75C(v13);
    v64 = v58(v46, v60);
    v61(v13, v46);
    v65 = v82;
    sub_1000F1678(v64, v46, v60, v66, v82);
    v67 = v86;
    swift_getWitnessTable(&unk_100EAAD18, v86);
    v68 = v83;
    sub_10081EB14((uint64_t)v65, v67, v83);
    v69 = v88;
    v70 = *(void (**)(_QWORD *, uint64_t))(v88 + 8);
    v70(v65, v67);
    sub_1000EA744(v68, v67, (uint64_t)v19);
    v70((_QWORD *)v68, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v19, 0, 1, v67);
  }
  else
  {
    v67 = v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v88 + 56))(v19, 1, 1, v86, v63);
    swift_getWitnessTable(&unk_100EAAD18, v67);
  }
  sub_1004D497C((uint64_t)v19, v67, (uint64_t)v21);
  v71 = v91;
  v72 = *(void (**)(char *, uint64_t))(v91 + 8);
  v73 = v93;
  v72(v19, v93);
  v74 = (uint64_t)v95;
  v75 = (uint64_t)v92;
  sub_10004A160((uint64_t)v95, (uint64_t)v92, &qword_1011A0F38);
  v100[0] = v75;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v19, v21, v73);
  v100[1] = (uint64_t)v19;
  v99[0] = v90;
  v99[1] = v73;
  v97 = sub_1000F5E54();
  WitnessTable = swift_getWitnessTable(&unk_100EAAD18, v67);
  v98 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v73);
  sub_1004D49B8(v100, 2uLL, (uint64_t)v99);
  v72(v21, v73);
  sub_10004FF60(v74, &qword_1011A0F38);
  v72(v19, v73);
  return sub_10004FF60(v75, &qword_1011A0F38);
}

void sub_1000F1260(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for AttributedString(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **a1) + 0x90))(v5);
  v10 = v9;
  sub_1000F139C(v8, v9);
  v11 = swift_bridgeObjectRelease(v10);
  v12 = Text.init(_:)(v7, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v19 = static Font.footnote2.getter();
  v20 = Text.font(_:)(v19, v12, v14, v18, v16);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_release(v19);
  sub_100055BAC(v12, v14, v18);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v22;
  *(_BYTE *)(a2 + 16) = v24 & 1;
  *(_QWORD *)(a2 + 24) = v26;
}

uint64_t sub_1000F139C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v31;
  _QWORD v32[2];

  v4 = sub_100007E8C(&qword_1011A1070);
  __chkstk_darwin(v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A1078);
  __chkstk_darwin(v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A1080);
  __chkstk_darwin(v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A1088);
  __chkstk_darwin(v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A1090);
  __chkstk_darwin(v16);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v19);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_bridgeObjectRetain();
  AttributeContainer.init()(v22);
  AttributedString.init(_:attributes:)(a1, a2, v21);
  v32[0] = swift_getKeyPath(&unk_100EAAC88);
  KeyPath = swift_getKeyPath(&unk_100EAACB8);
  v24 = type metadata accessor for Text.Encapsulation.Scale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  v25 = type metadata accessor for Text.Encapsulation.Shape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
  v26 = type metadata accessor for Text.Encapsulation.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
  v27 = type metadata accessor for Text.Encapsulation.PlatterSize(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  v31 = 1;
  Text.Encapsulation.init(scale:shape:style:platterSize:lineWeight:color:minimumWidth:)(v15, v12, v9, v6, 0, 1, 0, 0, v31);
  v28 = type metadata accessor for Text.Encapsulation(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 0, 1, v28);
  v29 = sub_1000F5F74();
  return AttributedString.subscript.setter(v18, KeyPath, v29);
}

uint64_t sub_1000F1678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  unint64_t v5;
  uint64_t v7;

  *a5 = a1;
  type metadata accessor for VideoDetailView.VideoBadges(0, a2, a3, a4);
  v7 = 0x4026000000000000;
  v5 = sub_1000E4360();
  return ScaledMetric.init(wrappedValue:)(&v7, &type metadata for CGFloat, v5);
}

double sub_1000F16D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  __n128 v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVEpisode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicMovie(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(_QWORD *)(a2 - 8);
  v14 = __chkstk_darwin(v11);
  v39 = (_QWORD *)((char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v17 = (char *)v37 - v16;
  sub_1000EA75C((_QWORD *)((char *)v37 - v16));
  if (swift_dynamicCast(v13, v17, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_8:
    v18 = 17.0;
    goto LABEL_9;
  }
  if (!swift_dynamicCast(v8, v17, a2, v5, 0))
  {
    v19 = Logger.musicKit.unsafeMutableAddressor();
    v21 = v40;
    v20 = v41;
    v22 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v41, v19, v42);
    v23 = swift_retain_n(a1, 2);
    v24 = Logger.logObject.getter(v23);
    v26 = static os_log_type_t.fault.getter(v25);
    if (os_log_type_enabled(v24, v26))
    {
      v27 = a1;
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v45 = v38;
      *(_DWORD *)v28 = 136446210;
      v37[1] = v28 + 4;
      v29 = v39;
      sub_1000EA75C(v39);
      v30 = String.init<A>(describing:)(v29, a2);
      v32 = v31;
      v44 = sub_100322200(v30, v31, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_release_n(v27, 2, v33);
      swift_bridgeObjectRelease(v32);
      _os_log_impl((void *)&_mh_execute_header, v24, v26, "Unhandled case for %{public}s", v28, 0xCu);
      v34 = v38;
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v41, v42);
    }
    else
    {

      swift_release_n(a1, 2, v35);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
    }
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = 12.0;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, a2);
  return v18;
}

uint64_t sub_1000F1A28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100007E8C(qword_1011A10A0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_1000F1A80()
{
  uint64_t v0;

  v0 = sub_100007E8C(qword_1011A10A0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_1000F1AC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1000F5F74();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_1000F1AE8()
{
  AttributeScopes.SwiftUIAttributes.encapsulation.getter();
  __break(1u);
}

uint64_t sub_1000F1B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1000EEE38(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1000F1B10(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v17 = *v1;
  KeyPath = swift_getKeyPath(&unk_100EAAD70);
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 16))((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(&unk_1010B0ED0, v8 + v5, v7 | 7);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  swift_bridgeObjectRetain();
  v10 = sub_100007E8C(&qword_1011A1130);
  v11 = sub_100007E8C(&qword_1011A1138);
  v12 = sub_100049F28(&qword_1011A1140, &qword_1011A1130, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_1000F6794();
  v14 = sub_1000F67D8();
  return ForEach<>.init(_:id:content:)(&v17, KeyPath, sub_1000F672C, v9, v10, v11, v12, v13, v14);
}

double sub_1000F1C7C@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  double result;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;

  v8 = type metadata accessor for Image.ResizingMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0x8000000100E2CE10;
  v13 = 0x6974756C6F736572;
  if (*a1 == 1)
    v13 = 0xD000000000000012;
  else
    v12 = 0xED00004B342E6E6FLL;
  if (*a1)
    v14 = v13;
  else
    v14 = 0xD000000000000011;
  if (*a1)
    v15 = v12;
  else
    v15 = 0x8000000100E2CE30;
  v16 = Image.init(_:bundle:)(v14, v15, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
  v17 = Image.resizable(capInsets:resizingMode:)(v11, v16, 0.0, 0.0, 0.0, 0.0);
  v18 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
  type metadata accessor for VideoDetailView.VideoBadges(0, a2, a3, v19);
  v20 = sub_100007E8C(qword_1011C9550);
  v21 = ScaledMetric.wrappedValue.getter(&v30, v20);
  v22 = v30;
  v23 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(&v30, 0, 1, v22, 0, v23, v24);
  v25 = v30;
  v26 = v31;
  v27 = v32;
  v28 = v33;
  *(_QWORD *)a4 = v17;
  *(_QWORD *)(a4 + 8) = 0;
  *(_WORD *)(a4 + 16) = 1;
  *(_QWORD *)(a4 + 24) = v25;
  *(_BYTE *)(a4 + 32) = v26;
  *(_QWORD *)(a4 + 40) = v27;
  *(_BYTE *)(a4 + 48) = v28;
  result = *(double *)&v34;
  *(_OWORD *)(a4 + 56) = v34;
  return result;
}

uint64_t MusicVideo.mappingContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2458((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_1011A0B90, a1);
}

uint64_t sub_1000F1E70()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[64];

  v0 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v0, v20);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = sub_10031EBE8();
  *(_QWORD *)(inited + 40) = v2;
  if (*(_QWORD *)(MusicVideo.genreNames.getter() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v3 = sub_100055B68();
    v4 = StringProtocol.localizedUppercase.getter(&type metadata for String, v3);
    v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = 0;
    v6 = 0;
  }
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v6;
  v7 = *(_QWORD *)(inited + 40);
  if (!v7)
  {
    v9 = _swiftEmptyArrayStorage;
    if (!v6)
      goto LABEL_15;
    goto LABEL_10;
  }
  v8 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain();
  v9 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_100431480((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[2 * v11];
  v12[4] = v8;
  v12[5] = v7;
  v4 = *(_QWORD *)(inited + 48);
  v6 = *(_QWORD *)(inited + 56);
  if (v6)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_100431480(0, v9[2] + 1, 1, v9);
    v14 = v9[2];
    v13 = v9[3];
    if (v14 >= v13 >> 1)
      v9 = sub_100431480((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
    v9[2] = v14 + 1;
    v15 = &v9[2 * v14];
    v15[4] = v4;
    v15[5] = v6;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v16 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v17 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v16, v17);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1000F2098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_10119F7A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  return MusicLibraryMappingItem<>.mappingID.getter(a1, a2, v4);
}

uint64_t sub_1000F20F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F27A0(a1, &qword_1011A0B90, a2);
}

uint64_t TVEpisode.mappingContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2458((uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, &qword_1011A0B98, a1);
}

_QWORD *sub_1000F2110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;

  v0 = type metadata accessor for VideoCapabilities(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v26 - v6;
  v8 = TVEpisode.capabilities.getter(v5);
  static VideoCapabilities.resolution4K.getter(v8);
  v9 = sub_100048748(qword_1011A0DE0, (uint64_t (*)(uint64_t))&type metadata accessor for VideoCapabilities, (uint64_t)&protocol conformance descriptor for VideoCapabilities);
  v10 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v12 = (_QWORD *)((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  if ((v10 & 1) != 0)
  {
    v12 = sub_100431C48(0, 1, 1, _swiftEmptyArrayStorage);
    v13 = v12;
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_100431C48((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      v13 = v12;
    }
    v13[2] = v15 + 1;
    *((_BYTE *)v13 + v15 + 32) = 2;
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  v16 = TVEpisode.capabilities.getter(v12);
  static VideoCapabilities.dolbyAtmos.getter(v16);
  v17 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11(v4, v0);
  isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  if ((v17 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_100431C48(0, v13[2] + 1, 1, v13);
      v13 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v20 = v13[2];
    v19 = v13[3];
    if (v20 >= v19 >> 1)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_100431C48((_QWORD *)(v19 > 1), v20 + 1, 1, v13);
      v13 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v13[2] = v20 + 1;
    *((_BYTE *)v13 + v20 + 32) = 0;
  }
  v21 = TVEpisode.capabilities.getter(isUniquelyReferenced_nonNull_native);
  static VideoCapabilities.dolbyVision.getter(v21);
  v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11(v4, v0);
  v11(v7, v0);
  if ((v22 & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100431C48(0, v13[2] + 1, 1, v13);
    v24 = v13[2];
    v23 = v13[3];
    if (v24 >= v23 >> 1)
      v13 = sub_100431C48((_QWORD *)(v23 > 1), v24 + 1, 1, v13);
    v13[2] = v24 + 1;
    *((_BYTE *)v13 + v24 + 32) = 1;
  }
  return v13;
}

uint64_t sub_1000F23E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011A0378, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  return MusicLibraryMappingItem<>.mappingID.getter(a1, a2, v4);
}

uint64_t sub_1000F2438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F27A0(a1, &qword_1011A0B98, a2);
}

uint64_t MusicMovie.mappingContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2458((uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, &qword_1011A0BA0, a1);
}

uint64_t sub_1000F2458@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v3, v6);
  v7 = enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  v8 = sub_100007E8C(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

uint64_t sub_1000F24CC(_QWORD *a1)
{
  uint64_t result;

  a1[3] = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  a1[5] = sub_100048748(&qword_1011A0BA8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  result = sub_100048748(&qword_1011A0BB0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  a1[6] = result;
  return result;
}

void *sub_1000F2544()
{
  return &protocol witness table for MusicVideo;
}

uint64_t sub_1000F2550(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_100048748(&qword_1011A0BB8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  a1[2] = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  a1[3] = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  a1[4] = sub_100048748(&qword_1011A0580, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  a1[5] = sub_100048748(&qword_1011A0BC0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  result = sub_100048748(&qword_1011A0BC8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  a1[6] = result;
  return result;
}

uint64_t sub_1000F261C()
{
  return sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
}

uint64_t sub_1000F2648(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_100048748(&qword_1011A0BD0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  a1[2] = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  a1[3] = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  a1[4] = sub_100048748(&qword_1011A0BD8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  a1[5] = sub_100048748(&qword_1011A0BE0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  result = sub_100048748(qword_1011A0BE8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  a1[6] = result;
  return result;
}

uint64_t sub_1000F2714()
{
  return sub_100048748((unint64_t *)&unk_1011A99C0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
}

uint64_t sub_1000F2740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011A0DD8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  return MusicLibraryMappingItem<>.mappingID.getter(a1, a2, v4);
}

uint64_t sub_1000F2794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F27A0(a1, &qword_1011A0BA0, a2);
}

uint64_t sub_1000F27A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a3, v5, a1);
  v7 = enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  v8 = sub_100007E8C(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

void sub_1000F2808(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[12];

  v10[0] = &unk_100EAA7C0;
  v10[1] = &unk_100EAA7C0;
  v10[2] = &unk_100EAA7D8;
  v10[3] = &unk_100EAA7C0;
  v10[4] = &unk_100EAA7C0;
  v10[5] = &unk_100EAA7D8;
  sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[6] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v10[7] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v10[8] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Published(319, *(_QWORD *)(a1 + 80));
        if (v9 <= 0x3F)
        {
          v10[9] = *(_QWORD *)(v8 - 8) + 64;
          v10[10] = &unk_100EAA7D8;
          v10[11] = &unk_100EAA7D8;
          swift_initClassMetadata2(a1, 0, 12, v10, a1 + 96);
        }
      }
    }
  }
}

uint64_t type metadata accessor for VideoDetailItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoDetailItem);
}

uint64_t sub_1000F2924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

void sub_1000F292C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_100EAA838;
  v4[1] = &unk_100EAA7C0;
  v4[2] = &unk_100EAA7C0;
  v4[3] = &unk_100EAA7C0;
  v4[4] = &unk_100EAA850;
  v4[5] = &unk_100EAA7C0;
  v4[6] = &unk_100EAA7C0;
  v4[7] = &unk_100EAA868;
  v4[8] = &unk_100EAA850;
  v4[9] = &unk_100EAA850;
  v4[10] = &unk_100EAA7C0;
  v4[11] = &unk_100EAA7C0;
  sub_1000E3A44(319, (unint64_t *)&qword_10119F560, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 13, v4, a1 + 32);
  }
}

uint64_t sub_1000F29E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v38 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v38);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[3];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    v11 = a2[4];
    v10 = a2[5];
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v10;
    v13 = a2[6];
    v12 = a2[7];
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
    v14 = a2[8];
    v15 = a2[9];
    v16 = *((_BYTE *)a2 + 80);
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v11);
    swift_retain(v13);
    KeyValueObservationTrigger.keyPath.getter(v14, v15);
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    *(_BYTE *)(a1 + 80) = v16;
    v17 = a2[11];
    v18 = a2[12];
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    v20 = a2[13];
    v19 = a2[14];
    *(_QWORD *)(a1 + 104) = v20;
    *(_QWORD *)(a1 + 112) = v19;
    v21 = (void *)a2[15];
    LOBYTE(v11) = *((_BYTE *)a2 + 128);
    swift_retain(v17);
    swift_retain(v20);
    sub_1000A4100(v21, v11);
    *(_QWORD *)(a1 + 120) = v21;
    *(_BYTE *)(a1 + 128) = v11;
    v22 = a2[17];
    v23 = a2[18];
    LOBYTE(v11) = *((_BYTE *)a2 + 152);
    sub_1000A410C(v22, v23, v11);
    *(_QWORD *)(a1 + 136) = v22;
    *(_QWORD *)(a1 + 144) = v23;
    *(_BYTE *)(a1 + 152) = v11;
    v24 = a2[20];
    v25 = a2[21];
    LOBYTE(v11) = *((_BYTE *)a2 + 176);
    sub_1000A411C(v24, v25, v11);
    *(_QWORD *)(a1 + 160) = v24;
    *(_QWORD *)(a1 + 168) = v25;
    *(_BYTE *)(a1 + 176) = v11;
    v26 = a2[23];
    v27 = a2[24];
    *(_QWORD *)(a1 + 184) = v26;
    *(_QWORD *)(a1 + 192) = v27;
    v29 = a2[25];
    v28 = a2[26];
    v30 = *(int *)(a3 + 80);
    v31 = (uint64_t *)(a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    *(_QWORD *)(a1 + 200) = v29;
    *(_QWORD *)(a1 + 208) = v28;
    swift_retain(v26);
    swift_retain(v29);
    v33 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      v39 = *v32;
      *v31 = *v32;
      swift_retain(v39);
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return a1;
}

double sub_1000F2BCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  sub_1000A6174(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  swift_release(*(_QWORD *)(a1 + 88));
  swift_release(*(_QWORD *)(a1 + 104));
  sub_1000A4224(*(id *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_1000A4230(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
  sub_1000A4240(*(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
  swift_release(*(_QWORD *)(a1 + 184));
  swift_release(*(_QWORD *)(a1 + 200));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 80));
  v5 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000F2CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_BYTE *)(a2 + 80);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v12);
  KeyValueObservationTrigger.keyPath.getter(v13, v14);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = v15;
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  v19 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v18;
  v20 = *(void **)(a2 + 120);
  LOBYTE(v10) = *(_BYTE *)(a2 + 128);
  swift_retain(v16);
  swift_retain(v19);
  sub_1000A4100(v20, v10);
  *(_QWORD *)(a1 + 120) = v20;
  *(_BYTE *)(a1 + 128) = v10;
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  LOBYTE(v10) = *(_BYTE *)(a2 + 152);
  sub_1000A410C(v21, v22, v10);
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_BYTE *)(a1 + 152) = v10;
  v23 = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 168);
  LOBYTE(v10) = *(_BYTE *)(a2 + 176);
  sub_1000A411C(v23, v24, v10);
  *(_QWORD *)(a1 + 160) = v23;
  *(_QWORD *)(a1 + 168) = v24;
  *(_BYTE *)(a1 + 176) = v10;
  v25 = *(_QWORD *)(a2 + 184);
  v26 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v25;
  *(_QWORD *)(a1 + 192) = v26;
  v28 = *(_QWORD *)(a2 + 200);
  v27 = *(_QWORD *)(a2 + 208);
  v29 = *(int *)(a3 + 80);
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v27;
  swift_retain(v25);
  swift_retain(v28);
  v32 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
    v34 = 1;
  }
  else
  {
    v35 = *v31;
    *v30 = *v31;
    swift_retain(v35);
    v34 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v32, v34);
  return a1;
}

uint64_t sub_1000F2E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  swift_retain(v13);
  swift_release(v12);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v15;
  swift_retain(v15);
  swift_release(v14);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 72);
  v18 = *(_BYTE *)(a2 + 80);
  KeyValueObservationTrigger.keyPath.getter(v16, v17);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_BYTE *)(a1 + 80) = v18;
  sub_1000A6174(v19, v20);
  v21 = *(_QWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v22;
  swift_retain(v22);
  swift_release(v21);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v24;
  swift_retain(v24);
  swift_release(v23);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v25 = *(void **)(a2 + 120);
  LOBYTE(v17) = *(_BYTE *)(a2 + 128);
  sub_1000A4100(v25, v17);
  v26 = *(void **)(a1 + 120);
  v27 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v25;
  *(_BYTE *)(a1 + 128) = v17;
  sub_1000A4224(v26, v27);
  v28 = *(_QWORD *)(a2 + 136);
  v29 = *(_QWORD *)(a2 + 144);
  v30 = *(_BYTE *)(a2 + 152);
  sub_1000A410C(v28, v29, v30);
  v31 = *(_QWORD *)(a1 + 136);
  v32 = *(_QWORD *)(a1 + 144);
  v33 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 136) = v28;
  *(_QWORD *)(a1 + 144) = v29;
  *(_BYTE *)(a1 + 152) = v30;
  sub_1000A4230(v31, v32, v33);
  v34 = *(_QWORD *)(a2 + 160);
  v35 = *(_QWORD *)(a2 + 168);
  v36 = *(_BYTE *)(a2 + 176);
  sub_1000A411C(v34, v35, v36);
  v37 = *(_QWORD *)(a1 + 160);
  v38 = *(_QWORD *)(a1 + 168);
  v39 = *(_BYTE *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v34;
  *(_QWORD *)(a1 + 168) = v35;
  *(_BYTE *)(a1 + 176) = v36;
  sub_1000A4240(v37, v38, v39);
  v40 = *(_QWORD *)(a1 + 184);
  v41 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v41;
  swift_retain(v41);
  swift_release(v40);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v42 = *(_QWORD *)(a1 + 200);
  v43 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 200) = v43;
  swift_retain(v43);
  swift_release(v42);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  if (a1 != a2)
  {
    v44 = *(int *)(a3 + 80);
    v45 = (uint64_t *)(a1 + v44);
    v46 = (uint64_t *)(a2 + v44);
    sub_10004FF60(a1 + v44, &qword_10119F4E0);
    v47 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
      v49 = 1;
    }
    else
    {
      v50 = *v46;
      *v45 = *v46;
      swift_retain(v50);
      v49 = 0;
    }
    swift_storeEnumTagMultiPayload(v45, v47, v49);
  }
  return a1;
}

uint64_t sub_1000F30E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v6 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v6;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v7 = *(int *)(a3 + 80);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v10 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000F31F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v8);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v12;
  swift_release(v11);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  sub_1000A6174(v15, v16);
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v17);
  v18 = *(_QWORD *)(a1 + 104);
  v19 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v19;
  swift_release(v18);
  v20 = *(_BYTE *)(a2 + 128);
  v21 = *(void **)(a1 + 120);
  v22 = *(_BYTE *)(a1 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = v20;
  sub_1000A4224(v21, v22);
  v23 = *(_BYTE *)(a2 + 152);
  v24 = *(_QWORD *)(a1 + 136);
  v25 = *(_QWORD *)(a1 + 144);
  v26 = *(_BYTE *)(a1 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = v23;
  sub_1000A4230(v24, v25, v26);
  v27 = *(_BYTE *)(a2 + 176);
  v28 = *(_QWORD *)(a1 + 160);
  v29 = *(_QWORD *)(a1 + 168);
  v30 = *(_BYTE *)(a1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = v27;
  sub_1000A4240(v28, v29, v30);
  v31 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_release(v31);
  v32 = *(_QWORD *)(a1 + 200);
  v33 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v33;
  swift_release(v32);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  if (a1 != a2)
  {
    v34 = *(int *)(a3 + 80);
    v35 = (void *)(a1 + v34);
    v36 = (const void *)(a2 + v34);
    sub_10004FF60(a1 + v34, &qword_10119F4E0);
    v37 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
      swift_storeEnumTagMultiPayload(v35, v37, 1);
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000F33C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F33D4);
}

uint64_t sub_1000F33D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119F4F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 80), a2, v8);
  }
}

uint64_t sub_1000F3454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F3460);
}

uint64_t sub_1000F3460(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119F4F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 80), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for VideoDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoDetailView);
}

uint64_t sub_1000F34E4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F955CC, 1);
}

uint64_t type metadata accessor for VideoDetailView.TextStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoDetailView.TextStack);
}

uint64_t type metadata accessor for VideoSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoSource);
}

uint64_t sub_1000F3530@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1000EB680(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1000F353C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000ED45C(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_1000F354C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VideoDetailView(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011A0D24);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_10005AEE4;
  return sub_1000EE9D4(v9, v6, v7);
}

uint64_t sub_1000F35CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v25 = a1;
  v27 = a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = type metadata accessor for PlaybackEnqueueMode(0, v6, a3, a4);
  v26 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  v10 = type metadata accessor for Optional(0, v6);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)(v6 - 8);
  v16 = __chkstk_darwin(v12);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v24 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v5, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v14, v6);
    v22 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v9, v25, v7);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    else
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    sub_1000E3E80();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v6);
    v21 = MPCPlaybackIntent.init<A>(_:)(v18, v6, *(_QWORD *)(*(_QWORD *)(v27 + 24) + 24));
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v6);
  }
  return v21;
}

uint64_t sub_1000F37D4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1000EA75C(a1);
}

uint64_t sub_1000F37F4(uint64_t a1)
{
  return sub_1000F3814(a1);
}

uint64_t sub_1000F3814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 88);
  v12[2] = v3;
  v12[3] = v8;
  KeyPath = swift_getKeyPath(&unk_100EAA9D0);
  v12[0] = v3;
  v12[1] = v8;
  v10 = swift_getKeyPath(&unk_100EAAA08);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain(v1);
  return static Published.subscript.setter(v6, v1, KeyPath, v10);
}

uint64_t sub_1000F38EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = type metadata accessor for VideoDetailView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v4 + v8;
  swift_release(*(_QWORD *)(v4 + v8 + 8));
  swift_release(*(_QWORD *)(v4 + v8 + 16));
  swift_release(*(_QWORD *)(v4 + v8 + 24));
  swift_release(*(_QWORD *)(v4 + v8 + 32));
  swift_release(*(_QWORD *)(v4 + v8 + 48));
  sub_1000A6174(*(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72));
  swift_release(*(_QWORD *)(v4 + v8 + 88));
  swift_release(*(_QWORD *)(v4 + v8 + 104));
  sub_1000A4224(*(id *)(v10 + 120), *(_BYTE *)(v10 + 128));
  sub_1000A4230(*(_QWORD *)(v10 + 136), *(_QWORD *)(v10 + 144), *(_BYTE *)(v10 + 152));
  sub_1000A4240(*(_QWORD *)(v10 + 160), *(_QWORD *)(v10 + 168), *(_BYTE *)(v10 + 176));
  swift_release(*(_QWORD *)(v4 + v8 + 184));
  swift_release(*(_QWORD *)(v4 + v8 + 200));
  v11 = (_QWORD *)(v4 + v8 + *(int *)(v5 + 80));
  v12 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  return swift_deallocObject(v4, v8 + v9, v7 | 7);
}

uint64_t sub_1000F3A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VideoDetailView(0, v7, v8, a4) - 8) + 80);
  return sub_1000EED5C(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_1000F3A78()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(v0 + 32);
  if (!result)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v4 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    result = EnvironmentObject.error()(0, v2, v3, v4);
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F3AE8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(v0 + 48);
  if (!result)
  {
    v2 = *(_QWORD *)(v0 + 56);
    v3 = type metadata accessor for NoticePresenter(0);
    v4 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v2, v3, v4);
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F3B48()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(v0 + 104);
  if (!result)
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v4 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    result = EnvironmentObject.error()(0, v2, v3, v4);
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F3BB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000ED760(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_1000F3BCC()
{
  return 16;
}

__n128 sub_1000F3BD8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1000F3BE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A0D60;
  if (!qword_1011A0D60)
  {
    v1 = sub_100044B54(&qword_1011A0D10);
    v2[0] = sub_100044B54(&qword_1011A0D40);
    v2[1] = sub_1000F3C70();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0D60);
  }
  return result;
}

unint64_t sub_1000F3C70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0D68;
  if (!qword_1011A0D68)
  {
    v1 = sub_100044B54(&qword_1011A0D40);
    sub_1000F3CF4();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0D68);
  }
  return result;
}

unint64_t sub_1000F3CF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  result = qword_1011A0D70;
  if (!qword_1011A0D70)
  {
    v1 = sub_100044B54(&qword_1011A0D38);
    v2 = sub_100044B54(&qword_1011A05B0);
    v3 = type metadata accessor for BorderedButtonStyle(255);
    v4 = sub_100044B54(&qword_1011A05A8);
    v5 = type metadata accessor for ButtonMenuStyle(255);
    v10 = &type metadata for ActionType;
    v11 = sub_100044B54(&qword_1011A05F8);
    v12 = sub_1000E3EE4();
    v13 = sub_1000E41D0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v7 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v10 = (ValueMetadata *)v4;
    v11 = v5;
    v12 = OpaqueTypeConformance2;
    v13 = v7;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v9 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v10 = (ValueMetadata *)v2;
    v11 = v3;
    v12 = v8;
    v13 = v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0D70);
  }
  return result;
}

unint64_t sub_1000F3E9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A0DA8;
  if (!qword_1011A0DA8)
  {
    v1 = sub_100044B54(&qword_1011A0D80);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0DA8);
  }
  return result;
}

_QWORD *sub_1000F3F30@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1000EC384(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1000F3F3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011A0DC8;
  if (!qword_1011A0DC8)
  {
    v1 = sub_100044B54(&qword_1011A0CF8);
    v2 = sub_100044B54(&qword_1011A0D90);
    v4 = sub_100044B54(&qword_1011A0D88);
    v5 = sub_10005610C(&qword_1011A0DA0, &qword_1011A0D88, (void (*)(void))sub_1000F3E9C);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    sub_100049F28(&qword_1011A0DD0, &qword_1011A0DC0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0DC8);
  }
  return result;
}

_QWORD *sub_1000F4038(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1000F4060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v5 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  v7 = type metadata accessor for VideoDetailView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 40) & ~v9;
  v11 = v10 + *(_QWORD *)(v8 + 64);
  v13 = type metadata accessor for VideoSource(255, v5, v6, v12);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v13);
  v16 = type metadata accessor for SourcedPlaybackIntent(0, v13, WitnessTable, v15);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v11 + v18) & ~v18;
  v20 = *(_QWORD *)(v17 + 64);
  swift_release(*((_QWORD *)v4 + 4));
  v21 = &v4[v10];
  swift_release(*((_QWORD *)v21 + 1));
  swift_release(*((_QWORD *)v21 + 2));
  swift_release(*((_QWORD *)v21 + 3));
  swift_release(*((_QWORD *)v21 + 4));
  swift_release(*((_QWORD *)v21 + 6));
  sub_1000A6174(*((_QWORD *)v21 + 8), *((_QWORD *)v21 + 9));
  swift_release(*((_QWORD *)v21 + 11));
  swift_release(*((_QWORD *)v21 + 13));
  sub_1000A4224(*((id *)v21 + 15), v21[128]);
  sub_1000A4230(*((_QWORD *)v21 + 17), *((_QWORD *)v21 + 18), v21[152]);
  sub_1000A4240(*((_QWORD *)v21 + 20), *((_QWORD *)v21 + 21), v21[176]);
  swift_release(*((_QWORD *)v21 + 23));
  swift_release(*((_QWORD *)v21 + 25));
  v22 = &v21[*(int *)(v7 + 80)];
  v23 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {
    v25 = swift_release(*(_QWORD *)v22);
  }
  v26 = *(_QWORD *)(v5 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v26 + 48);
  if (!v27(&v4[v19], 1, v5, v25))
    (*(void (**)(char *, uint64_t))(v26 + 8))(&v4[v19], v5);
  v30 = &v4[v19 + *(int *)(v16 + 36)];
  v31 = type metadata accessor for PlaybackEnqueueMode(0, v5, v28, v29);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1
    || !((unsigned int (*)(char *, uint64_t, uint64_t))v27)(v30, 1, v5))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v5);
  }
  return swift_deallocObject(v4, v19 + v20, v9 | v18 | 7);
}

uint64_t sub_1000F4274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;

  v7 = v4[2];
  v8 = v4[3];
  v9 = *(_QWORD *)(type metadata accessor for VideoDetailView(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v10 + *(_QWORD *)(v9 + 64);
  v13 = type metadata accessor for VideoSource(255, v7, v8, v12);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v13);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SourcedPlaybackIntent(0, v13, WitnessTable, v15)
                                       - 8)
                           + 80);
  return sub_1000ECFB8(a1, a2, v4[4], (uint64_t)v4 + v10, (uint64_t)v4 + ((v11 + v16) & ~v16));
}

_QWORD *sub_1000F4330(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_1000F4358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for VideoSource(255, v5, *(_QWORD *)(v4 + 24), a4);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v6);
  v9 = (int *)type metadata accessor for PlaybackButton(0, v6, WitnessTable, v8);
  v10 = *((_QWORD *)v9 - 1);
  v41 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v41 + 32) & ~v41;
  v12 = *(_QWORD *)(v10 + 64);
  v14 = type metadata accessor for SourcedPlaybackIntent(0, v6, WitnessTable, v13);
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v12 + v17;
  v40 = *(_QWORD *)(v16 + 64);
  v19 = v4 + v11;
  if (*(_QWORD *)(v4 + v11 + 8))
    v15 = swift_release(*(_QWORD *)(v19 + 16));
  v20 = v11 + v18;
  v21 = v19 + v9[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v21, 1, v14, v15))
  {
    v22 = *(_QWORD *)(v5 - 8);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (!v23(v21, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v5);
    v26 = v21 + *(int *)(v14 + 36);
    v27 = type metadata accessor for PlaybackEnqueueMode(0, v5, v24, v25);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1 || !v23(v26, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v5);
  }
  v28 = v20 & ~v17;
  swift_release(*(_QWORD *)(v19 + v9[11]));
  swift_release(*(_QWORD *)(v19 + v9[12]));
  swift_release(*(_QWORD *)(v19 + v9[13]));
  sub_1000A4224(*(id *)(v19 + v9[14]), *(_BYTE *)(v19 + v9[14] + 8));
  swift_release(*(_QWORD *)(v19 + v9[15]));
  sub_1000A4230(*(_QWORD *)(v19 + v9[16]), *(_QWORD *)(v19 + v9[16] + 8), *(_BYTE *)(v19 + v9[16] + 16));
  sub_1000A4240(*(_QWORD *)(v19 + v9[17]), *(_QWORD *)(v19 + v9[17] + 8), *(_BYTE *)(v19 + v9[17] + 16));
  v29 = (_QWORD *)(v19 + v9[18]);
  v30 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
  }
  else
  {
    v32 = swift_release(*v29);
  }
  v33 = *(_QWORD *)(v5 - 8);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v33 + 48);
  if (!v34(v4 + v28, 1, v5, v32))
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v4 + v28, v5);
  v37 = v4 + v28 + *(int *)(v14 + 36);
  v38 = type metadata accessor for PlaybackEnqueueMode(0, v5, v35, v36);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1
    || !((unsigned int (*)(uint64_t, uint64_t, uint64_t))v34)(v37, 1, v5))
  {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v5);
  }
  return swift_deallocObject(v4, v28 + v40, v41 | v17 | 7);
}

uint64_t sub_1000F4618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for VideoSource(255, v5, v6, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v7);
  v10 = *(_QWORD *)(type metadata accessor for PlaybackButton(0, v7, WitnessTable, v9) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SourcedPlaybackIntent(0, v7, WitnessTable, v13) - 8)
                           + 80);
  return sub_1000ED348(v4 + v11, v4 + ((v11 + v12 + v14) & ~v14), v5, v6);
}

uint64_t sub_1000F46CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1000EA75C(a1);
}

uint64_t sub_1000F46EC(uint64_t a1)
{
  return sub_1000F3814(a1);
}

uint64_t sub_1000F470C()
{
  return 16;
}

__n128 sub_1000F4718(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t getEnumTagSinglePayload for Library.ContentFilterOption(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoTraits(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000F4800 + 4 * byte_100EAA615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000F4834 + 4 * byte_100EAA610[v4]))();
}

uint64_t sub_1000F4834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F483C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000F4844);
  return result;
}

uint64_t sub_1000F4850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000F4858);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000F485C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F4864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000F4870(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VideoTraits()
{
  return &type metadata for VideoTraits;
}

uint64_t sub_1000F4888(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1000F48F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain(v11);
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1000F49CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_1000F4A28(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1000F4AC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_1000F4BA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1000F4C38(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_1000F4D18(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1000F4E58(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = &_mh_execute_header.magic + 1;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = &dword_100000004;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_1000F5000()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1000F5008()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1000F502C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t OpaqueTypeConformance2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = *a1;
  v2 = (_QWORD *)a1[1];
  v3 = sub_100044B54(&qword_1011A0CF8);
  v5 = type metadata accessor for VideoDetailView.TextStack(255, v1, (uint64_t)v2, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FlexFrameLayout);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _PaddingLayout);
  v9 = type metadata accessor for VideoSource(255, v1, (uint64_t)v2, v8);
  WitnessTable = swift_getWitnessTable(&unk_100EAAB38, v9);
  v59 = type metadata accessor for PlaybackButton(255, v9, WitnessTable, v11);
  v60 = type metadata accessor for BorderedProminentButtonStyle(255);
  v61 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v59);
  v62 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v13 = sub_100044B54(&qword_1011A0610);
  v14 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _FrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v18 = type metadata accessor for VStack(255, v17);
  v19 = type metadata accessor for _BlendModeEffect(255);
  v20 = type metadata accessor for ModifiedContent(255, v18, v19);
  v21 = type metadata accessor for ModifiedContent(255, v20, &type metadata for _FlexFrameLayout);
  v22 = swift_getTupleTypeMetadata2(255, v3, v21, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v23);
  v25 = type metadata accessor for HStack(255, v23, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _FlexFrameLayout);
  v27 = type metadata accessor for ModifiedContent(255, v26, &type metadata for _PaddingLayout);
  v28 = v2[1];
  v29 = v2[4];
  v58 = *(_QWORD *)(v2[6] + 8);
  v59 = v1;
  v60 = v28;
  v61 = v29;
  v62 = v58;
  v30 = _s32Legacy_ActionableStateControllerCMa(255, (uint64_t)&v59);
  v31 = swift_getWitnessTable(&unk_100EC0318, v30);
  v33 = type metadata accessor for LibraryControl(255, v30, v31, v32);
  v34 = sub_100044B54(&qword_1011B5800);
  v35 = type metadata accessor for ModifiedContent(255, v33, v34);
  v36 = type metadata accessor for BorderedButtonStyle(255);
  swift_getWitnessTable(&unk_100EC0418, v33);
  sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v35);
  v38 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v59 = v35;
  v60 = v36;
  v61 = v37;
  v62 = v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v40 = type metadata accessor for ModifiedContent(255, v39, v13);
  v41 = sub_100044B54(&qword_1011A0618);
  v42 = type metadata accessor for ModifiedContent(255, v40, v41);
  v43 = type metadata accessor for Optional(255, v42);
  v44 = sub_100044B54(&qword_1011A0D10);
  v45 = swift_getTupleTypeMetadata2(255, v43, v44, 0, 0);
  v46 = type metadata accessor for TupleView(255, v45);
  v47 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v46);
  v48 = type metadata accessor for ToolbarItemGroup(255, v46, v47);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v48);
  v59 = v48;
  v60 = v49;
  v50 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v25);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v59 = v48;
  v60 = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v59 = v27;
  v60 = v50;
  v61 = v51;
  v62 = OpaqueTypeConformance2;
  v53 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v54 = type metadata accessor for _TaskModifier(255);
  v55 = type metadata accessor for ModifiedContent(255, v53, v54);
  v59 = v27;
  v60 = v50;
  v61 = v51;
  v62 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  sub_100048748(&qword_1011A0D18, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v55);
  v59 = v55;
  v60 = v1;
  v61 = v56;
  v62 = v58;
  return swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

unint64_t sub_1000F5574()
{
  unint64_t result;

  result = qword_1011A0EE8;
  if (!qword_1011A0EE8)
  {
    result = swift_getWitnessTable(&unk_100EAAAC0, &type metadata for VideoTraits);
    atomic_store(result, (unint64_t *)&qword_1011A0EE8);
  }
  return result;
}

uint64_t sub_1000F55B8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9565C, 1);
}

uint64_t type metadata accessor for VideoDetailView.VideoBadges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoDetailView.VideoBadges);
}

uint64_t sub_1000F55F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1000EF144(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1000F5614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0F80;
  if (!qword_1011A0F80)
  {
    v1 = sub_100044B54(&qword_1011A0F78);
    sub_1000F5698();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0F80);
  }
  return result;
}

unint64_t sub_1000F5698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0F88;
  if (!qword_1011A0F88)
  {
    v1 = sub_100044B54(&qword_1011A0F90);
    sub_1000F571C();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0F88);
  }
  return result;
}

unint64_t sub_1000F571C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0F98;
  if (!qword_1011A0F98)
  {
    v1 = sub_100044B54(&qword_1011A0FA0);
    sub_1000F5ED0((unint64_t *)&qword_1011C7230, (uint64_t *)&unk_1011B57F0, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0F98);
  }
  return result;
}

unint64_t sub_1000F57B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0FC0;
  if (!qword_1011A0FC0)
  {
    v1 = sub_100044B54(&qword_1011A0FB8);
    sub_1000F571C();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0FC0);
  }
  return result;
}

uint64_t sub_1000F583C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100007E8C(&qword_1011A0F68);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000F58A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_100007E8C(&qword_1011A0F68);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

unint64_t sub_1000F5910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0FC8;
  if (!qword_1011A0FC8)
  {
    v1 = sub_100044B54(&qword_1011A0F58);
    sub_100049F28(&qword_1011A0FD0, &qword_1011A0F50, (uint64_t)&unk_100EC4FD8);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0FC8);
  }
  return result;
}

unint64_t sub_1000F59AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0FD8;
  if (!qword_1011A0FD8)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011B57E0);
    sub_1000F5ED0((unint64_t *)&qword_1011C7230, (uint64_t *)&unk_1011B57F0, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0FD8);
  }
  return result;
}

double sub_1000F5A48(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 153) = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1000F5A68@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1000F0BAC(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1000F5A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a6)
  {
    swift_retain(a13);
    swift_retain(a14);
    swift_retain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_retain(a7);
    swift_retain(a8);
    swift_bridgeObjectRetain(a10);
    swift_retain(a11);
    return swift_retain(a12);
  }
  return result;
}

uint64_t sub_1000F5B1C(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    v9[0] = sub_100044B54(a3);
    v9[1] = a4();
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F5BB0()
{
  return sub_10005610C(&qword_1011A0FF8, &qword_1011A1000, (void (*)(void))sub_1000F5BD4);
}

unint64_t sub_1000F5BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1008;
  if (!qword_1011A1008)
  {
    v1 = sub_100044B54(&qword_1011A1010);
    sub_100049F28(&qword_1011A1018, &qword_1011A1020, (uint64_t)&protocol conformance descriptor for ExpandableTextView<A, B>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1008);
  }
  return result;
}

uint64_t sub_1000F5C70(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 168);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    v4);
  return a1;
}

uint64_t sub_1000F5CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease(a6);
    swift_release(a7);
    swift_bridgeObjectRelease(a10);
    swift_release(a11);
    swift_release(a14);
    swift_release(a2);
    swift_bridgeObjectRelease(a4);
    swift_release(a8);
    swift_release(a12);
    return swift_release(a13);
  }
  return result;
}

uint64_t sub_1000F5D84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F0808(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1000F5D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1030;
  if (!qword_1011A1030)
  {
    v1 = sub_100044B54(&qword_1011A1028);
    sub_1000F5E10();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1030);
  }
  return result;
}

unint64_t sub_1000F5E10()
{
  unint64_t result;

  result = qword_1011A1038;
  if (!qword_1011A1038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MarkupView, &type metadata for MarkupView);
    atomic_store(result, (unint64_t *)&qword_1011A1038);
  }
  return result;
}

unint64_t sub_1000F5E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1048;
  if (!qword_1011A1048)
  {
    v1 = sub_100044B54(&qword_1011A0F38);
    sub_1000F5ED0(&qword_1011A1050, &qword_1011A1040, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1048);
  }
  return result;
}

uint64_t sub_1000F5ED0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F5F28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1000F5F4C(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000F1260(a1, a2);
}

void sub_1000F5F58()
{
  AttributeScopes.SwiftUIAttributes.encapsulation.getter();
  __break(1u);
}

unint64_t sub_1000F5F74()
{
  unint64_t result;

  result = qword_1011A1098;
  if (!qword_1011A1098)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.EncapsulationAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.EncapsulationAttribute);
    atomic_store(result, (unint64_t *)&qword_1011A1098);
  }
  return result;
}

void sub_1000F5FB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1000F5F74();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1000F5FDC()
{
  return 8;
}

uint64_t sub_1000F5FE8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1000F5FF0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1000F6000()
{
  uint64_t v0;

  v0 = sub_100007E8C(qword_1011A10A0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1000F6044(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1000F6050(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
  }
}

uint64_t *sub_1000F60C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    v9 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_1000F6150(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1000F619C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  v7 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1000F6200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_QWORD *sub_1000F6278(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1000F62D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000F6348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F6354);
}

uint64_t sub_1000F6354(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_1000F63D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F63E0);
}

char *sub_1000F63E0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(qword_1011C9550);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

void sub_1000F6458(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A1128)
  {
    v2 = sub_1000E4360();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A1128);
  }
}

uint64_t sub_1000F64B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t TupleTypeMetadata;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *a1;
  v2 = a1[1];
  sub_100044B54(&qword_1011A0F18);
  sub_100044B54(&qword_1011A0F20);
  sub_100044B54(&qword_1011A0F28);
  sub_100044B54(&qword_1011A0F30);
  v3 = sub_100044B54(&qword_1011A0F38);
  v5 = type metadata accessor for VideoDetailView.VideoBadges(255, v1, v2, v4);
  v6 = type metadata accessor for Optional(255, v5);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for HStack(255, v8, WitnessTable);
  type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v13 = type metadata accessor for VStack(255, v12);
  v14 = sub_100044B54(&qword_1011A45B0);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v13);
  sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
}

uint64_t sub_1000F6664(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F95690, 1);
}

uint64_t sub_1000F6698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = type metadata accessor for VideoDetailView.VideoBadges(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v8 + *(_QWORD *)(v6 + 64);
  v10 = v7 | 7;
  v11 = v4 + v8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v8));
  v12 = v11 + *(int *)(v5 + 36);
  v13 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject(v4, v9, v10);
}

double sub_1000F672C@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  type metadata accessor for VideoDetailView.VideoBadges(0, v6, v7, a2);
  return sub_1000F1C7C(a1, v6, v7, a3);
}

unint64_t sub_1000F6794()
{
  unint64_t result;

  result = qword_1011A1148;
  if (!qword_1011A1148)
  {
    result = swift_getWitnessTable(&unk_100EAAA80, &type metadata for VideoTraits);
    atomic_store(result, (unint64_t *)&qword_1011A1148);
  }
  return result;
}

uint64_t sub_1000F67D8()
{
  return sub_10005610C(&qword_1011A1150, &qword_1011A1138, (void (*)(void))sub_1000F67FC);
}

unint64_t sub_1000F67FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1158;
  if (!qword_1011A1158)
  {
    v1 = sub_100044B54(&qword_1011A1160);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1158);
  }
  return result;
}

uint64_t sub_1000F6860()
{
  return sub_1000E4570(&qword_1011A1168, &qword_1011A1170, (void (*)(void))sub_1000F67D8, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
}

uint64_t storeEnumTagSinglePayload for NowPlayingQueueSectionViewModel.SectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000F68E0 + 4 * byte_100EAAD95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000F6914 + 4 * byte_100EAAD90[v4]))();
}

uint64_t sub_1000F6914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F691C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000F6924);
  return result;
}

uint64_t sub_1000F6930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000F6938);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000F693C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F6944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingQueueSectionViewModel.SectionType()
{
  return &type metadata for NowPlayingQueueSectionViewModel.SectionType;
}

uint64_t destroy for NowPlayingQueueSectionViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for NowPlayingQueueSectionViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for NowPlayingQueueSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for NowPlayingQueueSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingQueueSectionViewModel()
{
  return &type metadata for NowPlayingQueueSectionViewModel;
}

uint64_t *sub_1000F6AE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ArtworkImage.ViewModel(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      v17 = *(int *)(v11 + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = type metadata accessor for Artwork.CropStyle(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v23 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v24 = (uint64_t *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[8];
    v28 = a3[9];
    v29 = (uint64_t *)((char *)v4 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (uint64_t *)((char *)v4 + v28);
    v33 = (uint64_t *)((char *)a2 + v28);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[10];
    v36 = a3[11];
    v37 = (uint64_t *)((char *)v4 + v35);
    v38 = (uint64_t *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = (uint64_t *)((char *)v4 + v36);
    v41 = (uint64_t *)((char *)a2 + v36);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = a3[12];
    v44 = (uint64_t *)((char *)v4 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v15 = v45[1];
    *v44 = *v45;
    v44[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v34);
    swift_retain(v39);
    swift_retain(v42);
  }
  swift_retain(v15);
  return v4;
}

double sub_1000F6D18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 20);
    v8 = type metadata accessor for Artwork.CropStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_release(*(_QWORD *)(a1 + a2[9] + 8));
  swift_release(*(_QWORD *)(a1 + a2[10] + 8));
  swift_release(*(_QWORD *)(a1 + a2[11] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[12] + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1000F6E38(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ArtworkImage.ViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
    v15 = *(int *)(v10 + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v21 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[8];
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v25);
  v28 = (_QWORD *)((char *)a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = (_QWORD *)((char *)a1 + v26);
  v31 = (_QWORD *)((char *)a2 + v26);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = a3[10];
  v34 = a3[11];
  v35 = (_QWORD *)((char *)a1 + v33);
  v36 = (_QWORD *)((char *)a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = (_QWORD *)((char *)a1 + v34);
  v39 = (_QWORD *)((char *)a2 + v34);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = a3[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v32);
  swift_retain(v37);
  swift_retain(v40);
  swift_retain(v44);
  return a1;
}

_QWORD *sub_1000F7048(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ArtworkImage.ViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v25 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v8, v9, v25);
      v26 = *(int *)(v10 + 20);
      v27 = (void *)(v8 + v26);
      v28 = &v9[v26];
      v29 = type metadata accessor for Artwork.CropStyle(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v27, 1, v29);
      v33 = v31(v28, 1, v29);
      if (v32)
      {
        if (!v33)
        {
          (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v33)
        {
          (*(void (**)(void *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v23 = v27;
      v24 = v28;
      goto LABEL_8;
    }
    sub_1000F73C0(v8);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v23 = (void *)v8;
    v24 = v9;
LABEL_8:
    memcpy(v23, v24, v22);
    goto LABEL_14;
  }
  if (v14)
    goto LABEL_7;
  v15 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
  v16 = *(int *)(v10 + 20);
  v17 = (void *)(v8 + v16);
  v18 = &v9[v16];
  v19 = type metadata accessor for Artwork.CropStyle(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v34 = a3[7];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v37 = v35[1];
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v37);
  v38 = a3[8];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  *v39 = *v40;
  v41 = v39[1];
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v41);
  v42 = a3[9];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = v44[1];
  v46 = v43[1];
  *v43 = *v44;
  v43[1] = v45;
  swift_retain(v45);
  swift_release(v46);
  v47 = a3[10];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = v49[1];
  v51 = v48[1];
  *v48 = *v49;
  v48[1] = v50;
  swift_retain(v50);
  swift_release(v51);
  v52 = a3[11];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  v55 = v54[1];
  v56 = v53[1];
  *v53 = *v54;
  v53[1] = v55;
  swift_retain(v55);
  swift_release(v56);
  v57 = a3[12];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v60 = v59[1];
  v61 = v58[1];
  *v58 = *v59;
  v58[1] = v60;
  swift_retain(v60);
  swift_release(v61);
  return a1;
}

uint64_t sub_1000F73C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000F73FC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = type metadata accessor for Artwork.CropStyle(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v19 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v20 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_1000F75A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v26 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v9, v10, v26);
      v27 = *(int *)(v11 + 20);
      v28 = (void *)(v9 + v27);
      v29 = &v10[v27];
      v30 = type metadata accessor for Artwork.CropStyle(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
      v33 = v32(v28, 1, v30);
      v34 = v32(v29, 1, v30);
      if (v33)
      {
        if (!v34)
        {
          (*(void (**)(void *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v34)
        {
          (*(void (**)(void *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v24 = v28;
      v25 = v29;
      goto LABEL_8;
    }
    sub_1000F73C0(v9);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v24 = (void *)v9;
    v25 = v10;
LABEL_8:
    memcpy(v24, v25, v23);
    goto LABEL_14;
  }
  if (v15)
    goto LABEL_7;
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
  v17 = *(int *)(v11 + 20);
  v18 = (void *)(v9 + v17);
  v19 = &v10[v17];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v35 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  v41 = a3[8];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  v46 = v42[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease(v46);
  v47 = a3[9];
  v48 = *(_QWORD *)((char *)a1 + v47 + 8);
  *(_OWORD *)((char *)a1 + v47) = *(_OWORD *)((char *)a2 + v47);
  swift_release(v48);
  v49 = a3[10];
  v50 = *(_QWORD *)((char *)a1 + v49 + 8);
  *(_OWORD *)((char *)a1 + v49) = *(_OWORD *)((char *)a2 + v49);
  swift_release(v50);
  v51 = a3[11];
  v52 = *(_QWORD *)((char *)a1 + v51 + 8);
  *(_OWORD *)((char *)a1 + v51) = *(_OWORD *)((char *)a2 + v51);
  swift_release(v52);
  v53 = a3[12];
  v54 = *(_QWORD *)((char *)a1 + v53 + 8);
  *(_OWORD *)((char *)a1 + v53) = *(_OWORD *)((char *)a2 + v53);
  swift_release(v54);
  return a1;
}

uint64_t sub_1000F78BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F78C8);
}

uint64_t sub_1000F78C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1000F7948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F7954);
}

uint64_t sub_1000F7954(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingQueueSectionViewModel.Item(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A11D0;
  if (!qword_1011A11D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingQueueSectionViewModel.Item);
  return result;
}

void sub_1000F7A08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100EAADD8;
  sub_1000F7AA8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_100EAADD8;
    v4[4] = &unk_100EAADF0;
    v4[5] = (char *)&value witness table for () + 64;
    v4[6] = (char *)&value witness table for () + 64;
    v4[7] = (char *)&value witness table for () + 64;
    v4[8] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
  }
}

void sub_1000F7AA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A0C70[0])
  {
    v2 = type metadata accessor for ArtworkImage.ViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1011A0C70);
  }
}

uint64_t sub_1000F7AFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D0B4C(*a1, *a2);
}

Swift::Int sub_1000F7B08()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE600000000000000;
  v3 = 0x7478654E7075;
  if (v1 != 1)
  {
    v3 = 0x79616C506F747561;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x79726F74736968;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1000F7BA4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x7478654E7075;
  if (*v1 != 1)
  {
    v3 = 0x79616C506F747561;
    v2 = 0xE800000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x79726F74736968;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000F7C1C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE600000000000000;
  v4 = 0x7478654E7075;
  if (v2 != 1)
  {
    v4 = 0x79616C506F747561;
    v3 = 0xE800000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x79726F74736968;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1000F7CB4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1000F7EFC(*a1);
  *a2 = result;
  return result;
}

void sub_1000F7CE0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x7478654E7075;
  if (v2 != 1)
  {
    v5 = 0x79616C506F747561;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x79726F74736968;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1000F7D3C(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AA4F8;
}

uint64_t sub_1000F7D4C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_1000F7D58()
{
  _QWORD *v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  String.hash(into:)(v2, *v0, v0[1]);
  return Hasher._finalize()();
}

uint64_t sub_1000F7D98(uint64_t a1)
{
  _QWORD *v1;

  return String.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_1000F7DA0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  String.hash(into:)(v3, *v1, v1[1]);
  return Hasher._finalize()();
}

uint64_t static ActionMenu.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

unint64_t sub_1000F7E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1228;
  if (!qword_1011A1228)
  {
    v1 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(255);
    result = swift_getWitnessTable(&unk_100EAAE08, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1228);
  }
  return result;
}

void *sub_1000F7E58()
{
  return &protocol witness table for String;
}

unint64_t sub_1000F7E68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1230;
  if (!qword_1011A1230)
  {
    v1 = sub_100044B54(&qword_1011A1238);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011A1230);
  }
  return result;
}

unint64_t sub_1000F7EB8()
{
  unint64_t result;

  result = qword_1011A1240;
  if (!qword_1011A1240)
  {
    result = swift_getWitnessTable(&unk_100EAAF58, &type metadata for NowPlayingQueueSectionViewModel.SectionType);
    atomic_store(result, (unint64_t *)&qword_1011A1240);
  }
  return result;
}

unint64_t sub_1000F7EFC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AA490, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_1000F7F44()
{
  qword_10124C7F0 = Int.seconds.getter(108);
}

double sub_1000F7F64()
{
  double result;

  result = 260.0;
  xmmword_10124C800 = xmmword_100EAAF80;
  return result;
}

void sub_1000F7F78()
{
  qword_10124C810 = Int.seconds.getter(12);
}

double sub_1000F7F98()
{
  double result;

  result = 6.0;
  __asm { FMOV            V1.2D, #6.0 }
  xmmword_10124C820 = _Q1;
  *(_OWORD *)&qword_10124C830 = xmmword_100EAAF90;
  return result;
}

void sub_1000F7FB4()
{
  qword_10124C840 = Int.seconds.getter(44);
}

void sub_1000F7FD4()
{
  qword_10124C848 = Int.seconds.getter(8);
}

void sub_1000F7FF4()
{
  qword_10124C850 = Int.seconds.getter(12);
}

uint64_t sub_1000F8014(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(double *)(v4 + 200) = a3;
  *(double *)(v4 + 208) = a4;
  *(_QWORD *)(v4 + 184) = a1;
  *(_QWORD *)(v4 + 192) = a2;
  v5 = type metadata accessor for GenericMusicItem(0);
  *(_QWORD *)(v4 + 216) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 224) = v6;
  *(_QWORD *)(v4 + 232) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  *(_QWORD *)(v4 + 240) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  *(_QWORD *)(v4 + 248) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A1440);
  *(_QWORD *)(v4 + 256) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v4 + 264) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 272) = v11;
  *(_QWORD *)(v4 + 280) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 288) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 296) = v14;
  *(_QWORD *)(v4 + 304) = v15;
  return swift_task_switch(sub_1000F8140, v14, v15);
}

uint64_t sub_1000F8140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  sub_10004A160(*(_QWORD *)(v0 + 184), v3, &qword_1011A1440);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(double *)(v0 + 200);
    v5 = *(double *)(v0 + 208);
    swift_release(*(_QWORD *)(v0 + 288));
    sub_10004FF60(v4, &qword_1011A1440);
    GenericMusicItem.artworkPlaceholder.getter(v0 + 16);
    sub_10004A07C(0, (unint64_t *)&qword_10119E590, UIGraphicsImageRendererFormat_ptr);
    v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
    Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v7, v6, v5);
    v9 = v8;

    sub_100065228(v0 + 16, v0 + 152, &qword_10119E580);
    sub_100065200((id *)(v0 + 152));
    sub_100065228(v0 + 24, v0 + 144, &qword_10119E580);
    sub_100065200((id *)(v0 + 144));
    sub_100065228(v0 + 32, v0 + 112, &qword_10119E588);
    sub_100065200((id *)(v0 + 112));

    v11 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 240);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 248);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v17, "displayScale");
    v19 = v18;

    v20 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 1, 1, v20);
    v21 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 1, 1, v21);
    v22 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v0 + 312) = v22;
    *v22 = v0;
    v22[1] = sub_1000F83C8;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 240), 0, 0, *(double *)(v0 + 200), *(double *)(v0 + 208), 1.0 / v19);
  }
}

uint64_t sub_1000F83C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  *(_QWORD *)(*(_QWORD *)v2 + 320) = v1;
  swift_task_dealloc(v5);
  v6 = v4[30];
  v7 = v4[31];
  if (v1)
  {
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v7, (uint64_t *)&unk_1011A14A0);
    v8 = v4[37];
    v9 = v4[38];
    v10 = sub_1000F8504;
  }
  else
  {
    v4[41] = a1;
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v7, (uint64_t *)&unk_1011A14A0);
    v8 = v4[37];
    v9 = v4[38];
    v10 = sub_1000F8478;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_1000F8478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 288));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v6 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1000F8504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = swift_release(*(_QWORD *)(v0 + 288));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v5 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  v10 = type metadata accessor for Logger(0);
  sub_100048B14(v10, (uint64_t)qword_10124C858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  swift_errorRetain(v5);
  v11 = swift_errorRetain(v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 216);
  if (v14)
  {
    v19 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(64, -1);
    v41 = v40;
    *(_DWORD *)v19 = 136446466;
    v20 = sub_1000FDBCC();
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v18, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 160) = sub_100322200(v21, v22, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v17 + 8))(v16, v18, v24);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 168) = v15;
    swift_errorRetain(v15);
    v25 = sub_100007E8C(&qword_1011A14B0);
    v26 = String.init<A>(describing:)(v0 + 168, v25);
    v28 = v27;
    *(_QWORD *)(v0 + 176) = sub_100322200(v26, v27, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to retrieve image for music item=%{public}s with error=%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v17 + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    swift_errorRelease(v15);
    swift_errorRelease(v15);
  }

  v29 = *(_QWORD *)(v0 + 320);
  v31 = *(double *)(v0 + 200);
  v30 = *(double *)(v0 + 208);
  GenericMusicItem.artworkPlaceholder.getter(v0 + 64);
  sub_10004A07C(0, (unint64_t *)&qword_10119E590, UIGraphicsImageRendererFormat_ptr);
  v32 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v32, v31, v30);
  v34 = v33;

  sub_100065228(v0 + 64, v0 + 120, &qword_10119E580);
  sub_100065200((id *)(v0 + 120));
  sub_100065228(v0 + 72, v0 + 128, &qword_10119E580);
  sub_100065200((id *)(v0 + 128));
  sub_100065228(v0 + 80, v0 + 136, &qword_10119E588);
  sub_100065200((id *)(v0 + 136));

  swift_errorRelease(v29);
  v36 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 256);
  v38 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v34);
}

id sub_1000F88A4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  void *v8;
  void *v9;
  objc_class *ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  Class isa;
  id v37;
  id v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  Class v63;
  uint64_t v64;
  uint64_t v65;
  NSNumber v66;
  uint64_t v67;
  Class v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  id v76;
  char *v77;
  void *v78;
  uint64_t v79;
  id v80;
  id v81;
  char *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  Class v86;
  id v87;
  id v88;
  char *v90;
  id v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  objc_super v99;
  CGRect v100;
  CGRect v101;

  v9 = v8;
  v97 = a3;
  v91 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v17 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v17);
  v90 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v19);
  v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99.receiver = v9;
  v99.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v99, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v22, "setTintColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());
  v23 = objc_msgSend(v22, "layer");
  objc_msgSend(v23, "setCornerCurve:", kCACornerCurveContinuous);

  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v22, "addSubview:", v24);
  TaskPriority.init(rawValue:)(21);
  v25 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 0, 1, v25);
  v26 = (_QWORD *)swift_allocObject(&unk_1010B13B8, 80, 7);
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = a4;
  v26[5] = a5;
  v26[6] = v24;
  v26[7] = a6;
  v26[8] = a7;
  v26[9] = v22;
  v27 = v22;
  v96 = a5;
  swift_retain(a5);
  v28 = v24;
  v94 = a6;
  v95 = a7;
  sub_100048AAC(a6, a7);
  v29 = sub_1000E8908((uint64_t)v21, (uint64_t)&unk_1011A1468, (uint64_t)v26);
  swift_release(v29);
  v30 = (uint64_t)v21;
  v31 = v27;
  sub_10004FF60(v30, (uint64_t *)&unk_1011A13B0);
  v93 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v32 = swift_allocObject(v93, 40, 7);
  v92 = xmmword_100EA7A90;
  *(_OWORD *)(v32 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v32 + 32) = v28;
  v98 = v32;
  specialized Array._endMutation()(v32);
  v33 = v98;
  v34 = objc_allocWithZone((Class)UIStackView);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v35 = (char *)v28;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v37 = objc_msgSend(v34, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  objc_msgSend(v37, "setAlignment:", 3);
  objc_msgSend(v37, "setDistribution:", 0);
  objc_msgSend(v37, "setAxis:", 0);
  objc_msgSend(v37, "setInsetsLayoutMarginsFromSafeArea:", 0);
  v38 = objc_msgSend(v37, "layer");
  objc_msgSend(v38, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v31, "addSubview:", v37);
  if (a2)
  {
    v39 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v39, "setText:", v40, swift_bridgeObjectRelease(a2).n128_f64[0]);

    v41 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v39, "setFont:", v41);

    objc_msgSend(v39, "setLineBreakMode:", 2);
    objc_msgSend(v37, "addArrangedSubview:", v39);
    objc_msgSend(v37, "setLayoutMarginsRelativeArrangement:", 1);
    v42 = qword_10119B8F0;
    v43 = v37;
    if (v42 != -1)
      swift_once(&qword_10119B8F0, sub_1000F7F98);
    objc_msgSend(v43, "setLayoutMargins:", xmmword_10124C820, *(double *)&qword_10124C830, unk_10124C838);

    if (qword_10119B908 != -1)
      swift_once(&qword_10119B908, sub_1000F7FF4);
    objc_msgSend(v43, "setSpacing:", *(double *)&qword_10124C850);
    v44 = qword_10119B8E0;
    v45 = v43;
    if (v44 != -1)
      swift_once(&qword_10119B8E0, sub_1000F7F64);
    objc_msgSend(v45, "setFrame:", 0.0, 0.0, xmmword_10124C800);

    v46 = objc_msgSend(v31, "layer");
    if (qword_10119B8E8 != -1)
      swift_once(&qword_10119B8E8, sub_1000F7F78);
    objc_msgSend(v46, "setCornerRadius:", *(double *)&qword_10124C810);

    v47 = qword_10119B8F8;
    v48 = v35;
    if (v47 != -1)
      swift_once(&qword_10119B8F8, sub_1000F7FB4);
    v91 = v31;
    objc_msgSend(v48, "bounds", v35);
    objc_msgSend(v48, "setBounds:");

    objc_msgSend(v48, "setBackgroundColor:", v97);
    v49 = objc_msgSend(v48, "layer");
    if (qword_10119B900 != -1)
      swift_once(&qword_10119B900, sub_1000F7FD4);
    objc_msgSend(v49, "setCornerRadius:", *(double *)&qword_10124C848);

    v50 = objc_msgSend(v48, "layer");
    objc_msgSend(v50, "setMasksToBounds:", 1);

    v51 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    objc_msgSend(v45, "frame");
    objc_msgSend(v51, "setFrame:");
    objc_msgSend(v51, "setStartPoint:", 0.0, 0.5);
    objc_msgSend(v51, "setEndPoint:", 1.0, 0.5);
    v52 = sub_100007E8C(&qword_10119E430);
    v53 = swift_allocObject(v52, 128, 7);
    *(_OWORD *)(v53 + 16) = xmmword_100EA7AC0;
    v54 = (void *)objc_opt_self(UIColor);
    v55 = objc_msgSend(v54, "whiteColor");
    v56 = objc_msgSend(v55, "CGColor");

    type metadata accessor for CGColor(0);
    v58 = v57;
    *(_QWORD *)(v53 + 56) = v57;
    *(_QWORD *)(v53 + 32) = v56;
    v59 = objc_msgSend(v54, "whiteColor");
    v60 = objc_msgSend(v59, "CGColor");

    *(_QWORD *)(v53 + 88) = v58;
    *(_QWORD *)(v53 + 64) = v60;
    v61 = objc_msgSend(v54, "clearColor");
    v62 = objc_msgSend(v61, "CGColor");

    *(_QWORD *)(v53 + 120) = v58;
    *(_QWORD *)(v53 + 96) = v62;
    v63 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v51, "setColors:", v63, swift_bridgeObjectRelease(v53).n128_f64[0]);

    v64 = v93;
    v65 = swift_allocObject(v93, 56, 7);
    *(_OWORD *)(v65 + 16) = xmmword_100EA7AD0;
    sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
    *(NSNumber *)(v65 + 32) = NSNumber.init(integerLiteral:)(0);
    *(NSNumber *)(v65 + 40) = NSNumber.init(floatLiteral:)(0.9);
    objc_msgSend(v45, "frame");
    CGRectGetWidth(v100);
    objc_msgSend(v45, "layoutMargins");
    objc_msgSend(v45, "frame");
    CGRectGetWidth(v101);
    v66.super.super.isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    *(NSNumber *)(v65 + 48) = v66;
    v98 = v65;
    specialized Array._endMutation()(v66.super.super.isa);
    v67 = v98;
    v68 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v51, "setLocations:", v68, swift_bridgeObjectRelease(v67).n128_f64[0]);

    v31 = v91;
    v69 = objc_msgSend(v91, "layer");
    objc_msgSend(v69, "setMask:", v51);

    v35 = v90;
  }
  else
  {
    v70 = v31;
    v71 = UIView.Corner.medium.unsafeMutableAddressor();
    v72 = type metadata accessor for UIView.Corner(0);
    v73 = *(_QWORD *)(v72 - 8);
    v74 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v90, v71, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v72);
    UIView.corner.setter(v74);

    v75 = qword_10119B8D8;
    v76 = v37;
    if (v75 != -1)
      swift_once(&qword_10119B8D8, sub_1000F7F44);
    objc_msgSend(v76, "setFrame:", 0.0, 0.0, *(double *)&qword_10124C7F0, 1.0 / a8 * *(double *)&qword_10124C7F0);

    v77 = v35;
    objc_msgSend(v76, "frame");
    objc_msgSend(v77, "bounds");
    objc_msgSend(v77, "setBounds:");

    v64 = v93;
  }
  v78 = (void *)objc_opt_self(NSLayoutConstraint);
  v79 = swift_allocObject(v64, 40, 7);
  *(_OWORD *)(v79 + 16) = v92;
  v80 = objc_msgSend(v35, "widthAnchor");
  v81 = objc_msgSend(v35, "heightAnchor");
  v82 = v35;
  v83 = objc_msgSend(v80, "constraintEqualToAnchor:multiplier:", v81, a8);

  *(_QWORD *)(v79 + 32) = v83;
  v98 = v79;
  specialized Array._endMutation()(v84);
  v85 = v98;
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  v86 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v78, "activateConstraints:", v86, swift_bridgeObjectRelease(v85).n128_f64[0]);

  v87 = v31;
  objc_msgSend(v37, "frame");
  objc_msgSend(v87, "setFrame:");

  v88 = v87;
  objc_msgSend(v88, "layoutIfNeeded");
  sub_10004BA30(v94, v95);

  swift_release(v96);
  return v88;
}

uint64_t sub_1000F9488(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(void);
  uint64_t v14;

  v8[4] = a8;
  v8[5] = v14;
  v8[2] = a6;
  v8[3] = a7;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v8[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(void))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[7] = v11;
  *v11 = v8;
  v11[1] = sub_1000F9514;
  return v13();
}

uint64_t sub_1000F9514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000F9570, 0, 0);
}

uint64_t sub_1000F9570()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 64);
  v3 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(void **)(v0 + 16);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v1;
  v9 = v6;
  sub_100048AAC(v5, v4);
  v10 = v3;
  v12 = static MainActor.shared.getter(v11);
  v13 = (_QWORD *)swift_allocObject(&unk_1010B13E0, 72, 7);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = v9;
  v13[5] = v1;
  v13[6] = v5;
  v13[7] = v4;
  v13[8] = v10;
  v14 = sub_100166D14(v2, (uint64_t)&unk_1011A1490, (uint64_t)v13);

  swift_release(v14);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F9674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[7] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000F96E8, v11, v12);
}

uint64_t sub_1000F96E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  objc_msgSend(v3, "setImage:", v1);
  if (v2)
    (*(void (**)(_QWORD))(v0 + 32))(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for DragPreview()
{
  return objc_opt_self(_TtC5Music11DragPreview);
}

uint64_t *sub_1000F97F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for DragItem.Source(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      v14 = *(void **)v8;
      v15 = (void *)*((_QWORD *)v8 + 1);
      *v7 = v14;
      v7[1] = v15;
      v16 = v14;
      v17 = v15;
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return v5;
}

uint64_t type metadata accessor for DragItem.Source(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A1378, (uint64_t)&nominal type descriptor for DragItem.Source);
}

void sub_1000F98E8(_QWORD *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for DragItem.Source(0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {

  }
}

_QWORD *sub_1000F9964(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DragItem.Source(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
    v9 = 1;
  }
  else
  {
    v10 = *(void **)v6;
    v11 = (void *)*((_QWORD *)v6 + 1);
    *v5 = v10;
    v5[1] = v11;
    v12 = v10;
    v13 = v11;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v9);
  return a1;
}

uint64_t *sub_1000F9A18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    sub_10005B748((uint64_t)a1 + v7, type metadata accessor for DragItem.Source);
    v10 = type metadata accessor for DragItem.Source(0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      v13 = *(void **)v9;
      *v8 = *(_QWORD *)v9;
      v14 = (void *)*((_QWORD *)v9 + 1);
      v8[1] = v14;
      v15 = v13;
      v16 = v14;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
  }
  return a1;
}

_QWORD *sub_1000F9AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DragItem.Source(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_1000F9B98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_10005B748((uint64_t)a1 + v7, type metadata accessor for DragItem.Source);
    v10 = type metadata accessor for DragItem.Source(0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000F9C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F9C70);
}

uint64_t sub_1000F9C70(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DragItem.Source(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1000F9CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F9CF8);
}

char *sub_1000F9CF8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DragItem.Source(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DragItem(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A12D0, (uint64_t)&nominal type descriptor for DragItem);
}

uint64_t sub_1000F9D80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for DragItem.Source(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_1000F9DF8(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      v13 = a2[1];
      *(_QWORD *)a1 = v12;
      *((_QWORD *)a1 + 1) = v13;
      v14 = v12;
      v15 = v13;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_1000F9EB8(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

_QWORD *sub_1000F9F10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *(void **)a2;
    v11 = *(void **)(a2 + 8);
    *a1 = v10;
    a1[1] = v11;
    v12 = v10;
    v13 = v11;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **sub_1000F9FA4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragItem.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = a2[1];
      a1[1] = v11;
      v12 = v10;
      v13 = v11;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_1000FA058(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1000FA0E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragItem.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000FA188(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EAB068;
  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1000FA1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t (*v15)(_QWORD);
  void (*v16)(char *, char *, uint64_t);
  int v17;
  uint64_t v18;
  id v19;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v26 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v26 - v10;
  v12 = type metadata accessor for DragItem.Source(0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v1, (uint64_t)v14, v15);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v11, v14, v2);
    v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v16(v9, v11, v2);
    v16(v6, v9, v2);
    v17 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v17 == enum case for GenericMusicItem.album(_:))
    {
LABEL_3:
      v18 = 1;
LABEL_24:
      v23 = *(void (**)(char *, uint64_t))(v3 + 8);
      v23(v9, v2);
      v23(v6, v2);
      v23(v11, v2);
      return v18;
    }
    if (v17 == enum case for GenericMusicItem.artist(_:)
      || v17 == enum case for GenericMusicItem.composer(_:)
      || v17 == enum case for GenericMusicItem.curator(_:))
    {
      v18 = 2;
      goto LABEL_24;
    }
    if (v17 != enum case for GenericMusicItem.musicMovie(_:) && v17 != enum case for GenericMusicItem.musicVideo(_:))
    {
      if (v17 == enum case for GenericMusicItem.playlist(_:))
        goto LABEL_3;
      if (v17 != enum case for GenericMusicItem.song(_:))
      {
        if (v17 == enum case for GenericMusicItem.station(_:))
          goto LABEL_3;
        if (v17 != enum case for GenericMusicItem.tvEpisode(_:))
        {
          if (v17 != enum case for GenericMusicItem.tvSeason(_:))
          {
            v18 = 3;
            goto LABEL_24;
          }
          goto LABEL_3;
        }
      }
    }
    v18 = 0;
    goto LABEL_24;
  }
  v19 = *v14;

  objc_opt_self(MPModelSong);
  if (swift_dynamicCastObjCClass(v19)
    || (objc_opt_self(MPModelTVEpisode), swift_dynamicCastObjCClass(v19))
    || (objc_opt_self(MPModelTVShow), swift_dynamicCastObjCClass(v19))
    || (objc_opt_self(MPModelMovie), swift_dynamicCastObjCClass(v19)))
  {

    return 0;
  }
  else
  {
    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v19)
      || (objc_opt_self(MPModelAlbum), swift_dynamicCastObjCClass(v19))
      || (objc_opt_self(MPModelTVSeason), swift_dynamicCastObjCClass(v19))
      || (objc_opt_self(MPModelRadioStation), swift_dynamicCastObjCClass(v19)))
    {

      return 1;
    }
    else
    {
      objc_opt_self(MPModelArtist);
      if (swift_dynamicCastObjCClass(v19)
        || (objc_opt_self(MPModelComposer), swift_dynamicCastObjCClass(v19)))
      {

        return 2;
      }
      else
      {
        objc_opt_self(MPModelCurator);
        v25 = swift_dynamicCastObjCClass(v19);

        if (v25)
          return 2;
        else
          return 3;
      }
    }
  }
}

double sub_1000FA5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t (*)(_QWORD *, uint64_t), uint64_t);
  double result;
  uint64_t v16[7];

  swift_bridgeObjectRetain();
  JSShareRequest.RequestContent.init(contentDictionary:contentType:jsModel:)(a5, 1, 0, (uint64_t)v16);
  v8 = objc_allocWithZone((Class)type metadata accessor for JSShareRequest());
  JSShareRequest.init(requestContent:activityType:)(v16, UIActivityTypeCopyToPasteboard);
  v10 = v9;
  v11 = type metadata accessor for JSShareRequestCoordinator();
  swift_allocObject(v11, 32, 7);
  v12 = JSShareRequestCoordinator.init()();
  v13 = swift_allocObject(&unk_1010B1318, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = *(void (**)(void *, uint64_t (*)(_QWORD *, uint64_t), uint64_t))(*(_QWORD *)v12 + 152);
  sub_100048AAC(a1, a2);
  v14(v10, sub_1000FDBC4, v13);

  swift_release(v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000FA6D0(_QWORD *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t result;
  uint64_t v18;

  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(__n128))((swift_isaMask & *a1) + 0x110))(v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
      if (a3)
      {
        URL._bridgeToObjectiveC()(v14);
        v16 = v15;
        a3();

      }
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
  }
  result = sub_10004FF60((uint64_t)v8, &qword_10119E460);
  if (a3)
    return ((uint64_t (*)(_QWORD, uint64_t))a3)(0, a2);
  return result;
}

void sub_1000FA848(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1010B1408, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v8[4] = sub_1000FDA1C;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000FA900;
  v8[3] = &unk_1010B1420;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  objc_msgSend(a2, "setPreviewProvider:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

id sub_1000FA900(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

uint64_t sub_1000FA938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    v13 = Playlist.isShareable.getter();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    if ((v13 & 1) != 0)
      v14 = 1;
    else
      v14 = Playlist.canMakeShareable.getter();
    v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v6, v2);
    v17(v8, v2);
  }
  else
  {
    GenericMusicItem.catalogID.getter();
    v14 = v15 != 0;
    if (v15)
      v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v16);
  }
  return v14 & 1;
}

uint64_t sub_1000FAADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5[9] = a4;
  v5[10] = a5;
  v6 = type metadata accessor for UTType(0);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v5[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericMusicItem(0);
  v5[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[15] = v9;
  v5[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119E460);
  v11 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[17] = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D49E4);
  v5[18] = v12;
  *v12 = v5;
  v12[1] = sub_1000FABAC;
  return GenericMusicItem.shareURL.getter(v11);
}

uint64_t sub_1000FABAC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_1000FAC00, 0, 0);
}

uint64_t sub_1000FAC00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;

  v1 = v0[17];
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10004FF60(v1, &qword_10119E460);
    if (qword_10119B910 != -1)
      swift_once(&qword_10119B910, sub_1000FC88C);
    v5 = v0[9];
    v7 = v0[15];
    v6 = v0[16];
    v8 = v0[14];
    v9 = type metadata accessor for Logger(0);
    sub_100048B14(v9, (uint64_t)qword_10124C858);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    v13 = os_log_type_enabled(v11, v12);
    v15 = v0[15];
    v14 = v0[16];
    v16 = v0[14];
    if (v13)
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v42 = v41;
      *(_DWORD *)v17 = 136446210;
      v18 = sub_1000FDBCC();
      v19 = dispatch thunk of CustomStringConvertible.description.getter(v16, v18);
      v21 = v20;
      v0[8] = sub_100322200(v19, v20, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9);
      v22 = swift_bridgeObjectRelease(v21);
      (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v14, v16, v22);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "No share url for shareable drag item=%{public}s", v17, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v15 + 8))(v0[16], v0[14]);
    }

  }
  else
  {
    v24 = v0[12];
    v23 = v0[13];
    v25 = (void *)v0[10];
    v26 = v0[11];
    URL._bridgeToObjectiveC()(v4);
    v28 = v27;
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v30 = static UTType.url.getter(v29);
    UTType.identifier.getter(v30);
    v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v26);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v34 = swift_allocObject(&unk_1010B1340, 24, 7);
    v0[2] = _NSConcreteStackBlock;
    *(_QWORD *)(v34 + 16) = v28;
    v0[6] = sub_1000FDC14;
    v0[7] = v34;
    v0[3] = 1107296256;
    v0[4] = sub_10056D5E0;
    v0[5] = &unk_1010B1358;
    v35 = _Block_copy(v0 + 2);
    v36 = v0[7];
    v37 = v28;
    objc_msgSend(v25, "registerItemForTypeIdentifier:loadHandler:", v33, v35, swift_release(v36).n128_f64[0]);
    _Block_release(v35);

  }
  v38 = v0[16];
  v39 = v0[13];
  swift_task_dealloc(v0[17]);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return ((uint64_t (*)(void))v0[1])();
}

id sub_1000FAF3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  _QWORD v24[5];

  v2 = sub_100007E8C(&qword_1011A14E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragDropToLibrary(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = a1 + 32;
    v22 = a1;
    swift_bridgeObjectRetain();
    v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v13, (uint64_t)v24);
      sub_100064C78((uint64_t)v24, (uint64_t)v23);
      v15 = sub_100007E8C(&qword_1011AB320);
      v16 = swift_dynamicCast(v4, v23, v15, v5, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v16 ^ 1u, 1, v5);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_10004FF60((uint64_t)v4, &qword_1011A14E0);
      }
      else
      {
        sub_10005B6C0((uint64_t)v4, (uint64_t)v11, type metadata accessor for DragDropToLibrary);
        sub_10005B6C0((uint64_t)v11, (uint64_t)v9, type metadata accessor for DragDropToLibrary);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = (_QWORD *)sub_1004327F8(0, v14[2] + 1, 1, (unint64_t)v14);
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
          v14 = (_QWORD *)sub_1004327F8(v17 > 1, v18 + 1, 1, (unint64_t)v14);
        v14[2] = v18 + 1;
        sub_10005B6C0((uint64_t)v9, (uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for DragDropToLibrary);
      }
      v13 += 40;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(v22);
    if (v14[2])
      goto LABEL_12;
LABEL_14:
    swift_bridgeObjectRelease(v14);
    return objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  }
  v14 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_14;
LABEL_12:
  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 2, 2);
  swift_bridgeObjectRelease(v14);
  return v19;
}

id sub_1000FB204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  id v20;
  id v21;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  _QWORD v33[6];

  v3 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v23 = v1;
    v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v7 = a1 + 32;
    v8 = a1;
    swift_bridgeObjectRetain();
    v9 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v7, (uint64_t)v33);
      sub_100064C78((uint64_t)v33, (uint64_t)&v25);
      v10 = sub_100007E8C(&qword_1011AB320);
      if ((swift_dynamicCast(&v29, &v25, v10, &type metadata for DragDropToPlaylist, 6) & 1) == 0)
      {
        v32 = 0;
        v30 = 0u;
        v31 = 0u;
        v29 = 0u;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v33);
      if (*((_QWORD *)&v30 + 1))
      {
        v25 = v29;
        v26 = v30;
        v27 = v31;
        v28 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_10043280C(0, v9[2] + 1, 1, v9);
        v12 = v9[2];
        v11 = v9[3];
        if (v12 >= v11 >> 1)
          v9 = sub_10043280C((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        v9[2] = v12 + 1;
        v13 = &v9[7 * v12];
        v14 = v25;
        v15 = v26;
        v16 = v27;
        *((_BYTE *)v13 + 80) = v28;
        *((_OWORD *)v13 + 3) = v15;
        *((_OWORD *)v13 + 4) = v16;
        *((_OWORD *)v13 + 2) = v14;
      }
      else
      {
        sub_10004FF60((uint64_t)&v29, &qword_1011A14C8);
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v8);
    v5 = v24;
    v1 = v23;
    if (v9[2])
      goto LABEL_14;
LABEL_17:
    swift_bridgeObjectRelease(v9);
    return objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  }
  v9 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_17;
LABEL_14:
  v17 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  sub_10005B704(v1 + *(int *)(v17 + 20), (uint64_t)v5, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  v18 = type metadata accessor for IndexPath(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v5, 1, v18);
  v20 = objc_allocWithZone((Class)UICollectionViewDropProposal);
  if (v19 == 1)
  {
    v21 = objc_msgSend(v20, "initWithDropOperation:intent:", 2, 2);
  }
  else
  {
    v21 = objc_msgSend(v20, "initWithDropOperation:intent:", 2, 1);
    sub_10005B748((uint64_t)v5, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  }
  swift_bridgeObjectRelease(v9);
  return v21;
}

id sub_1000FB4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  _QWORD v22[6];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    v4 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v2, (uint64_t)v22);
      sub_100064C78((uint64_t)v22, (uint64_t)&v14);
      v5 = sub_100007E8C(&qword_1011AB320);
      if ((swift_dynamicCast(&v18, &v14, v5, &type metadata for DragDropToPlaylist, 6) & 1) == 0)
      {
        v21 = 0;
        v19 = 0u;
        v20 = 0u;
        v18 = 0u;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v22);
      if (*((_QWORD *)&v19 + 1))
      {
        v14 = v18;
        v15 = v19;
        v16 = v20;
        v17 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_10043280C(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_10043280C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v8 = &v4[7 * v7];
        v9 = v14;
        v10 = v15;
        v11 = v16;
        *((_BYTE *)v8 + 80) = v17;
        *((_OWORD *)v8 + 3) = v10;
        *((_OWORD *)v8 + 4) = v11;
        *((_OWORD *)v8 + 2) = v9;
      }
      else
      {
        sub_10004FF60((uint64_t)&v18, &qword_1011A14C8);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease(a1);
    if (v4[2])
      goto LABEL_14;
LABEL_16:
    swift_bridgeObjectRelease(v4);
    return objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  }
  v4 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_16;
LABEL_14:
  v12 = sub_1007E61F8();
  swift_bridgeObjectRelease(v4);
  return v12;
}

uint64_t sub_1000FB6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD v22[2];
  _BYTE v23[40];
  _QWORD v24[5];

  v3 = sub_100007E8C(&qword_1011A14E0);
  __chkstk_darwin(v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DragDropToLibrary(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v22 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v22[0] = a1;
    v22[1] = v1;
    v14 = a1 + 32;
    swift_bridgeObjectRetain();
    v15 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v14, (uint64_t)v24);
      sub_100064C78((uint64_t)v24, (uint64_t)v23);
      v16 = sub_100007E8C(&qword_1011AB320);
      v17 = swift_dynamicCast(v5, v23, v16, v6, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v17 ^ 1u, 1, v6);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_10004FF60((uint64_t)v5, &qword_1011A14E0);
      }
      else
      {
        sub_10005B6C0((uint64_t)v5, (uint64_t)v12, type metadata accessor for DragDropToLibrary);
        sub_10005B6C0((uint64_t)v12, (uint64_t)v10, type metadata accessor for DragDropToLibrary);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = (_QWORD *)sub_1004327F8(0, v15[2] + 1, 1, (unint64_t)v15);
        v19 = v15[2];
        v18 = v15[3];
        if (v19 >= v18 >> 1)
          v15 = (_QWORD *)sub_1004327F8(v18 > 1, v19 + 1, 1, (unint64_t)v15);
        v15[2] = v19 + 1;
        sub_10005B6C0((uint64_t)v10, (uint64_t)v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19, type metadata accessor for DragDropToLibrary);
      }
      v14 += 40;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v22[0]);
    if (v15[2])
      goto LABEL_12;
LABEL_14:
    v20 = 0;
    goto LABEL_15;
  }
  v15 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_14;
LABEL_12:
  v20 = sub_10063B384((uint64_t)v15);
LABEL_15:
  swift_bridgeObjectRelease(v15);
  return v20 & 1;
}

uint64_t sub_1000FB950(uint64_t a1, uint64_t (*a2)(_QWORD, __n128), __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t (*v16)(_QWORD, __n128);
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  _QWORD v25[6];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v16 = a2;
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v4, (uint64_t)v25);
      sub_100064C78((uint64_t)v25, (uint64_t)&v17);
      v7 = sub_100007E8C(&qword_1011AB320);
      if ((swift_dynamicCast(&v21, &v17, v7, &type metadata for DragDropToPlaylist, 6) & 1) == 0)
      {
        v24 = 0;
        v22 = 0u;
        v23 = 0u;
        v21 = 0u;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v25);
      if (*((_QWORD *)&v22 + 1))
      {
        v17 = v21;
        v18 = v22;
        v19 = v23;
        v20 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_10043280C(0, v6[2] + 1, 1, v6);
        v9 = v6[2];
        v8 = v6[3];
        if (v9 >= v8 >> 1)
          v6 = sub_10043280C((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
        v6[2] = v9 + 1;
        v10 = &v6[7 * v9];
        v11 = v17;
        v12 = v18;
        v13 = v19;
        *((_BYTE *)v10 + 80) = v20;
        *((_OWORD *)v10 + 3) = v12;
        *((_OWORD *)v10 + 4) = v13;
        *((_OWORD *)v10 + 2) = v11;
      }
      else
      {
        sub_10004FF60((uint64_t)&v21, &qword_1011A14C8);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    a3 = swift_bridgeObjectRelease(a1);
    a2 = v16;
    if (v6[2])
      goto LABEL_14;
LABEL_16:
    v14 = 0;
    goto LABEL_17;
  }
  v6 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_16;
LABEL_14:
  v14 = a2(v6, a3);
LABEL_17:
  swift_bridgeObjectRelease(v6);
  return v14 & 1;
}

uint64_t sub_1000FBB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)(v5 + 192) = a5;
  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 104) = a2;
  v6 = sub_100007E8C(&qword_1011A14F8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v5 + 136) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 144) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 152) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 160) = swift_task_alloc(v9);
  return swift_task_switch(sub_1000FBBBC, 0, 0);
}

uint64_t sub_1000FBBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *(_QWORD *)(v0 + 128);
      v6 = *(_QWORD *)(v0 + 136);
      sub_100064C78(v4, v0 + 16);
      sub_100064C78(v0 + 16, v0 + 56);
      v8 = sub_100007E8C(&qword_1011AB320);
      v9 = swift_dynamicCast(v7, v0 + 56, v8, v6, 6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v7, v9 ^ 1u, 1, v6);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v6) == 1)
      {
        sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011A14F8);
      }
      else
      {
        v11 = *(_QWORD *)(v0 + 152);
        v10 = *(_QWORD *)(v0 + 160);
        sub_10005B6C0(*(_QWORD *)(v0 + 128), v10, type metadata accessor for DragDropToQueue);
        sub_10005B6C0(v10, v11, type metadata accessor for DragDropToQueue);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = (_QWORD *)sub_100431C54(0, v5[2] + 1, 1, (unint64_t)v5);
        v13 = v5[2];
        v12 = v5[3];
        if (v13 >= v12 >> 1)
          v5 = (_QWORD *)sub_100431C54(v12 > 1, v13 + 1, 1, (unint64_t)v5);
        v14 = *(_QWORD *)(v0 + 152);
        v5[2] = v13 + 1;
        sub_10005B6C0(v14, (uint64_t)v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, type metadata accessor for DragDropToQueue);
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v0 + 168) = v5;
  if (v5[2])
  {
    v15 = (_QWORD *)swift_task_alloc(dword_1011CB3CC);
    *(_QWORD *)(v0 + 176) = v15;
    *v15 = v0;
    v15[1] = sub_1000FBE40;
    return sub_10081FDD8(*(_QWORD *)(v0 + 96), (uint64_t)v5, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 192));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    swift_bridgeObjectRelease(v5);
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000FBE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000FBEF4;
  else
    v3 = sub_1000FBEA4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000FBEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FBEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FBF50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_100007E8C(&qword_1011A14E0);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragDropToLibrary(0);
  v3[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[17] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v7);
  v3[19] = swift_task_alloc(v7);
  return swift_task_switch(sub_1000FBFE8, 0, 0);
}

uint64_t sub_1000FBFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 136);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *(_QWORD *)(v0 + 120);
      v6 = *(_QWORD *)(v0 + 128);
      sub_100064C78(v4, v0 + 16);
      sub_100064C78(v0 + 16, v0 + 56);
      v8 = sub_100007E8C(&qword_1011AB320);
      v9 = swift_dynamicCast(v7, v0 + 56, v8, v6, 6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v7, v9 ^ 1u, 1, v6);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v6) == 1)
      {
        sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011A14E0);
      }
      else
      {
        v11 = *(_QWORD *)(v0 + 144);
        v10 = *(_QWORD *)(v0 + 152);
        sub_10005B6C0(*(_QWORD *)(v0 + 120), v10, type metadata accessor for DragDropToLibrary);
        sub_10005B6C0(v10, v11, type metadata accessor for DragDropToLibrary);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = (_QWORD *)sub_1004327F8(0, v5[2] + 1, 1, (unint64_t)v5);
        v13 = v5[2];
        v12 = v5[3];
        if (v13 >= v12 >> 1)
          v5 = (_QWORD *)sub_1004327F8(v12 > 1, v13 + 1, 1, (unint64_t)v5);
        v14 = *(_QWORD *)(v0 + 144);
        v5[2] = v13 + 1;
        sub_10005B6C0(v14, (uint64_t)v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, type metadata accessor for DragDropToLibrary);
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v0 + 160) = v5;
  if (v5[2])
  {
    v15 = (_QWORD *)swift_task_alloc(dword_1011BF06C);
    *(_QWORD *)(v0 + 168) = v15;
    *v15 = v0;
    v15[1] = sub_1000FC268;
    return sub_10063B76C(*(_QWORD *)(v0 + 96), (uint64_t)v5);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    swift_bridgeObjectRelease(v5);
    v19 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000FC268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000FC31C;
  else
    v3 = sub_1000FC2CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000FC2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FC31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FC378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return swift_task_switch(sub_1000FC390, 0, 0);
}

uint64_t sub_1000FC390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v0 + 16);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    v5 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v4, v0 + 72);
      sub_100064C78(v0 + 72, v0 + 112);
      v6 = sub_100007E8C(&qword_1011AB320);
      if ((swift_dynamicCast(v0 + 16, v0 + 112, v6, &type metadata for DragDropToPlaylist, 6) & 1) == 0)
      {
        *(_BYTE *)(v0 + 64) = 0;
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 48) = 0u;
        *v3 = 0u;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
      if (*(_QWORD *)(v0 + 40))
      {
        v14 = *v3;
        v15 = *(_OWORD *)(v0 + 32);
        v16 = *(_OWORD *)(v0 + 48);
        v17 = *(_BYTE *)(v0 + 64);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_10043280C(0, v5[2] + 1, 1, v5);
        v8 = v5[2];
        v7 = v5[3];
        if (v8 >= v7 >> 1)
          v5 = sub_10043280C((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
        v5[2] = v8 + 1;
        v9 = &v5[7 * v8];
        *((_BYTE *)v9 + 80) = v17;
        *((_OWORD *)v9 + 3) = v15;
        *((_OWORD *)v9 + 4) = v16;
        *((_OWORD *)v9 + 2) = v14;
      }
      else
      {
        sub_10004FF60(v0 + 16, &qword_1011A14C8);
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v10 = *(_QWORD *)(v0 + 152);
  v11 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_bridgeObjectRelease(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
}

uint64_t sub_1000FC56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  return swift_task_switch(sub_1000FC588, 0, 0);
}

uint64_t sub_1000FC588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v0 + 16);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    v5 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v4, v0 + 72);
      sub_100064C78(v0 + 72, v0 + 112);
      v6 = sub_100007E8C(&qword_1011AB320);
      if ((swift_dynamicCast(v0 + 16, v0 + 112, v6, &type metadata for DragDropToPlaylist, 6) & 1) == 0)
      {
        *(_BYTE *)(v0 + 64) = 0;
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 48) = 0u;
        *v3 = 0u;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
      if (*(_QWORD *)(v0 + 40))
      {
        v15 = *v3;
        v16 = *(_OWORD *)(v0 + 32);
        v17 = *(_OWORD *)(v0 + 48);
        v18 = *(_BYTE *)(v0 + 64);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_10043280C(0, v5[2] + 1, 1, v5);
        v8 = v5[2];
        v7 = v5[3];
        if (v8 >= v7 >> 1)
          v5 = sub_10043280C((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
        v5[2] = v8 + 1;
        v9 = &v5[7 * v8];
        *((_BYTE *)v9 + 80) = v18;
        *((_OWORD *)v9 + 3) = v16;
        *((_OWORD *)v9 + 4) = v17;
        *((_OWORD *)v9 + 2) = v15;
      }
      else
      {
        sub_10004FF60(v0 + 16, &qword_1011A14C8);
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v0 + 176) = v5;
  if (v5[2])
  {
    v10 = (_QWORD *)swift_task_alloc(dword_1011CA154);
    *(_QWORD *)(v0 + 184) = v10;
    *v10 = v0;
    v10[1] = sub_1000FC7C0;
    return sub_1007E3340(*(_QWORD *)(v0 + 152), (uint64_t)v5);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
    v13 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = swift_bridgeObjectRelease(v5);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
  }
}

uint64_t sub_1000FC7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000FC858;
  else
    v3 = sub_1000FC824;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000FC824()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FC858()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FC88C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124C858);
  sub_100048B14(v0, (uint64_t)qword_10124C858);
  return static Logger.music(_:)(0x706F724467617244, 0xE800000000000000);
}

uint64_t sub_1000FC8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011A14D8 + dword_1011A14D8);
  v5 = (_QWORD *)swift_task_alloc(unk_1011A14DC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return v7(a1, a2);
}

uint64_t sub_1000FC968(uint64_t a1, __n128 a2)
{
  return sub_1000FB950(a1, (uint64_t (*)(_QWORD, __n128))sub_1007E3124, a2) & 1;
}

uint64_t sub_1000FC988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011A1508 + dword_1011A1508);
  v5 = (_QWORD *)swift_task_alloc(unk_1011A150C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return v7(a1, a2);
}

uint64_t sub_1000FCA00(uint64_t a1, __n128 a2)
{
  return sub_1000FB950(a1, (uint64_t (*)(_QWORD, __n128))sub_1007E2B50, a2) & 1;
}

uint64_t sub_1000FCA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011A14C0 + dword_1011A14C0);
  v5 = (_QWORD *)swift_task_alloc(unk_1011A14C4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return v7(a1, a2);
}

uint64_t sub_1000FCA98(uint64_t a1)
{
  uint64_t v1;

  return sub_1000FE31C(a1, *(void **)(v1 + 8));
}

uint64_t sub_1000FCAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v6 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v8 = *(_BYTE *)(v2 + 16);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011A14F0 + dword_1011A14F0);
  v9 = (_QWORD *)swift_task_alloc(unk_1011A14F4);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10005AEE4;
  return v11(a1, a2, v6, v7, v8);
}

id sub_1000FCB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  int v33;
  double (**v34)(void);
  uint64_t v35;
  char *v36;
  __n128 v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  double *v59;
  id v60;
  id v61;
  char *v63;
  uint64_t (**v64)(void);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  double (**v73)(void);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v76 = a2;
  v77 = a3;
  v67 = type metadata accessor for MusicVideo(0);
  v73 = *(double (***)(void))(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v64 = *(uint64_t (***)(void))(v5 - 8);
  v65 = v5;
  __chkstk_darwin(v5);
  v63 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v74 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v63 - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A1440);
  v71 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v71 + 64);
  __chkstk_darwin(v16);
  v72 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v63 - v22;
  v24 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a1;
  sub_1001CB080(v26);
  v78 = v26;
  sub_10004A160((uint64_t)v26, (uint64_t)v15, (uint64_t *)&unk_1011A3E10);
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v15, 1, v27) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3E10);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v23, 1, 1, v28);
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v23, v15, v29);
    sub_10005B748((uint64_t)v15, type metadata accessor for ArtworkImage.ViewModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, v29);
  }
  v31 = (uint64_t)v23;
  v32 = *(double *)&v78[*(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 24)];
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v70(v12, v79, v7);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v12, v7);
  v34 = v73;
  if (v33 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    v35 = v67;
    v36 = v66;
    v37.n128_f64[0] = v34[4]();
    v38 = (void *)MusicVideo.title.getter(v37);
LABEL_8:
    v68 = v39;
    v69 = v38;
    if (qword_10119B8F8 != -1)
      swift_once(&qword_10119B8F8, sub_1000F7FB4);
    v41 = v8;
    v42 = *(double *)&qword_10124C840;
    v43 = v32 * *(double *)&qword_10124C840;
    ((void (*)(char *, uint64_t))v34[1])(v36, v35);
    goto LABEL_14;
  }
  if (v33 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    v34 = (double (**)(void))v64;
    v36 = v63;
    v35 = v65;
    v40 = v64[4]();
    v38 = (void *)Song.title.getter(v40);
    goto LABEL_8;
  }
  if (qword_10119B8D8 != -1)
    swift_once(&qword_10119B8D8, sub_1000F7F44);
  v43 = *(double *)&qword_10124C7F0;
  v42 = 1.0 / v32 * *(double *)&qword_10124C7F0;
  v41 = v8;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  v68 = 0;
  v69 = 0;
LABEL_14:
  v44 = v31;
  sub_10004A160(v31, (uint64_t)v20, &qword_1011A1440);
  v45 = type metadata accessor for Artwork(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v20, 1, v45) == 1)
  {
    sub_10004FF60((uint64_t)v20, &qword_1011A1440);
LABEL_18:
    v73 = 0;
    goto LABEL_19;
  }
  v47 = (void *)Artwork.backgroundColor.getter();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v45);
  if (!v47)
    goto LABEL_18;
  v73 = (double (**)(void))objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v47);

LABEL_19:
  v48 = v72;
  sub_10004A160(v44, v72, &qword_1011A1440);
  v49 = v74;
  v50 = v79;
  v70(v74, v79, v7);
  v51 = *(unsigned __int8 *)(v71 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = v7;
  v54 = v41;
  v55 = *(unsigned __int8 *)(v41 + 80);
  v56 = (v17 + v55 + v52) & ~v55;
  v57 = (v75 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = swift_allocObject(&unk_1010B1390, v57 + 16, v51 | v55 | 7);
  sub_100065228(v48, v58 + v52, &qword_1011A1440);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v58 + v56, v49, v53);
  v59 = (double *)(v58 + v57);
  *v59 = v43;
  v59[1] = v42;
  v60 = objc_allocWithZone((Class)type metadata accessor for DragPreview());
  v61 = sub_1000F88A4(v69, v68, v73, (uint64_t)&unk_1011A1450, v58, v76, v77, v32);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v53);
  sub_10004FF60(v44, &qword_1011A1440);
  sub_10005B748((uint64_t)v78, type metadata accessor for ContextualPreview.Data);
  return v61;
}

id sub_1000FD13C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v19;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v19 - v14;
  v16 = a1;
  GenericMusicItem.init(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004BA30(a2, a3);

    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v17 = sub_1000FCB30((uint64_t)v12, a2, a3);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return v17;
}

id sub_1000FD2B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, void **, uint64_t);
  id v22;
  __n128 v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  objc_class *v40;
  id v41;
  id v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  char *v61;
  char *v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  char *v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;
  void **aBlock;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v88 = (uint64_t)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for GenericMusicItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v85 - v7;
  v9 = type metadata accessor for UTType(0);
  v86 = *(_QWORD *)(v9 - 8);
  v87 = v9;
  __chkstk_darwin(v9);
  v85 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DragItem.Source(0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v15 = objc_allocWithZone((Class)UIDragItem);
  v90 = v14;
  v16 = objc_msgSend(v15, "initWithItemProvider:", v14);
  v17 = *v0;
  swift_bridgeObjectRetain();
  sub_100007E8C(&qword_1011AB320);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setLocalObject:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = swift_allocObject(&unk_1010B11D8, 24, 7);
  *(_QWORD *)(v19 + 16) = v16;
  v20 = type metadata accessor for DragItem(0);
  sub_10005B704((uint64_t)v0 + *(int *)(v20 + 20), (uint64_t)v13, type metadata accessor for DragItem.Source);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    v87 = v19;
    v21 = *(void (**)(char *, void **, uint64_t))(v4 + 32);
    v21(v8, v13, v3);
    v22 = v16;
    if ((sub_1000FA938((uint64_t)v8) & 1) != 0)
    {
      v24 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v88, 1, 1, v24);
      v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v26 = (uint64_t)v89;
      v25(v89, v8, v3);
      v27 = *(unsigned __int8 *)(v4 + 80);
      v28 = v16;
      v29 = (v27 + 32) & ~v27;
      v30 = (v5 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
      v31 = swift_allocObject(&unk_1010B1250, v30 + 8, v27 | 7);
      v32 = v31 + v29;
      v16 = v28;
      *(_QWORD *)(v31 + 16) = 0;
      *(_QWORD *)(v31 + 24) = 0;
      v21((char *)v32, (void **)v26, v3);
      v33 = v90;
      *(_QWORD *)(v31 + v30) = v90;
      v34 = v33;
      v35 = v33;
      v36 = sub_100166D14(v88, (uint64_t)&unk_1011A13C8, v31);
      v23 = swift_release(v36);
    }
    else
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v26 = (uint64_t)v89;
      v34 = v90;
    }
    v19 = v87;
    ((void (*)(uint64_t, char *, uint64_t, __n128))v25)(v26, v8, v3, v23);
    swift_retain(v19);
    v77 = sub_1000FCB30(v26, (uint64_t)sub_1000FDA14, v19);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    goto LABEL_18;
  }
  v38 = *v13;
  v37 = v13[1];
  v39 = v16;

  v40 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v41 = objc_allocWithZone(v40);
  v42 = v38;
  v43 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v42);
  if (v43)
  {
    v44 = v43;
    v45 = objc_msgSend(v43, "effectiveStorePlatformDictionary");

    if (v45)
    {
      v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v45, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v47 = v85;
      v49 = static UTType.url.getter(v48);
      UTType.identifier.getter(v49);
      v51 = v50;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v47, v87);
      v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v51);
      v53 = swift_allocObject(&unk_1010B12C8, 24, 7);
      *(_QWORD *)(v53 + 16) = v46;
      v95 = sub_1000FE7A0;
      v96 = v53;
      aBlock = _NSConcreteStackBlock;
      v92 = 1107296256;
      v93 = sub_10056D5E0;
      v94 = &unk_1010B12E0;
      v54 = _Block_copy(&aBlock);
      v55 = v96;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v56 = swift_release(v55).n128_u64[0];
      v34 = v90;
      objc_msgSend(v90, "registerItemForTypeIdentifier:loadHandler:", v52, v54, v56);
      _Block_release(v54);
      swift_bridgeObjectRelease(v46);
LABEL_15:

      goto LABEL_16;
    }
  }
  objc_opt_self(MPModelAlbum);
  v57 = swift_dynamicCastObjCClass(v42);
  v34 = v90;
  if (v57)
  {
    v52 = v42;
    v58 = MPModelAlbum.orphanMusicVideo.getter();
    if (v58)
    {
      v59 = v58;
      objc_allocWithZone(v40);
      v60 = v59;
      v61 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v60);
      if (v61
        && (v62 = v61,
            v63 = objc_msgSend(v61, "effectiveStorePlatformDictionary"),
            v62,
            v63))
      {
        v88 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v63, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v64 = v85;
        v66 = static UTType.url.getter(v65);
        UTType.identifier.getter(v66);
        v68 = v67;
        (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v87);
        v89 = (char *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v68);
        v69 = swift_allocObject(&unk_1010B1278, 24, 7);
        v70 = v88;
        *(_QWORD *)(v69 + 16) = v88;
        v95 = sub_1000FDB6C;
        v96 = v69;
        aBlock = _NSConcreteStackBlock;
        v92 = 1107296256;
        v93 = sub_10056D5E0;
        v94 = &unk_1010B1290;
        v71 = _Block_copy(&aBlock);
        v72 = v16;
        v73 = v96;
        swift_bridgeObjectRetain();
        v74 = v73;
        v16 = v72;
        *(_QWORD *)&v75 = swift_release(v74).n128_u64[0];
        v76 = v89;
        objc_msgSend(v34, "registerItemForTypeIdentifier:loadHandler:", v89, v71, v75);
        _Block_release(v71);

        swift_bridgeObjectRelease(v70);
        v52 = v76;
      }
      else
      {

      }
    }
    goto LABEL_15;
  }
LABEL_16:
  swift_retain(v19);
  v78 = sub_1000FD13C(v42, (uint64_t)sub_1000FDA14, v19);
  if (!v78)
  {
    swift_release(v19);

    return v16;
  }
  v77 = v78;
LABEL_18:
  v79 = v77;
  v80 = swift_allocObject(&unk_1010B1200, 24, 7);
  *(_QWORD *)(v80 + 16) = v79;
  v95 = sub_1000FDA1C;
  v96 = v80;
  aBlock = _NSConcreteStackBlock;
  v92 = 1107296256;
  v93 = sub_1000FA900;
  v94 = &unk_1010B1218;
  v81 = _Block_copy(&aBlock);
  v82 = v96;
  v83 = v79;
  objc_msgSend(v16, "setPreviewProvider:", v81, swift_release(v82).n128_f64[0]);
  swift_release(v19);

  _Block_release(v81);
  return v16;
}

uint64_t sub_1000FD9F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000FDA14(void *a1)
{
  uint64_t v1;

  sub_1000FA848(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000FDA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000FDA30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000FDA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000FDAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011A13C4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_1000FAADC(a1, v6, v7, v8, v9);
}

double sub_1000FDB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1000FA5D4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1000FDB74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FDB98()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000FDBC4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000FA6D0(a1, a2, *(void (**)(void))(v2 + 16));
}

unint64_t sub_1000FDBCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1430;
  if (!qword_1011A1430)
  {
    v1 = type metadata accessor for GenericMusicItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for GenericMusicItem, v1);
    atomic_store(result, (unint64_t *)&qword_1011A1430);
  }
  return result;
}

uint64_t (*sub_1000FDC14(uint64_t (*result)(_QWORD, _QWORD)))(_QWORD, _QWORD)
{
  uint64_t v1;

  if (result)
    return (uint64_t (*)(_QWORD, _QWORD))result(*(_QWORD *)(v1 + 16), 0);
  return result;
}

uint64_t sub_1000FDC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v13 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  v10 = (v3 + v13 + v6) & ~v6;
  v11 = ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);
  return swift_deallocObject(v0, v11, v2 | v6 | 7);
}

uint64_t sub_1000FDD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  double v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v6;
  v8 = (double *)(v0 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v9 = *v8;
  v10 = v8[1];
  v11 = (_QWORD *)swift_task_alloc(dword_1011A144C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_1000FDE04;
  return sub_1000F8014(v0 + v3, v7, v9, v10);
}

uint64_t sub_1000FDE04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1000FDE54()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000FDEA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1011A1464);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10005AEE4;
  return sub_1000F9488(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000FDF40()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000FDF8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1011A148C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_1000F9674(a1, v4, v5, v6, v7, v8, v9, v10);
}

id sub_1000FE020()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)UIDragPreview), "initWithView:", *(_QWORD *)(v0 + 16));
}

id sub_1000FE054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  _QWORD v24[5];

  v2 = sub_100007E8C(&qword_1011A14F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragDropToQueue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = a1 + 32;
    v22 = a1;
    swift_bridgeObjectRetain();
    v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_100064C78(v13, (uint64_t)v24);
      sub_100064C78((uint64_t)v24, (uint64_t)v23);
      v15 = sub_100007E8C(&qword_1011AB320);
      v16 = swift_dynamicCast(v4, v23, v15, v5, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v16 ^ 1u, 1, v5);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_10004FF60((uint64_t)v4, &qword_1011A14F8);
      }
      else
      {
        sub_10005B6C0((uint64_t)v4, (uint64_t)v11, type metadata accessor for DragDropToQueue);
        sub_10005B6C0((uint64_t)v11, (uint64_t)v9, type metadata accessor for DragDropToQueue);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = (_QWORD *)sub_100431C54(0, v14[2] + 1, 1, (unint64_t)v14);
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
          v14 = (_QWORD *)sub_100431C54(v17 > 1, v18 + 1, 1, (unint64_t)v14);
        v14[2] = v18 + 1;
        sub_10005B6C0((uint64_t)v9, (uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for DragDropToQueue);
      }
      v13 += 40;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(v22);
    if (v14[2])
      goto LABEL_12;
LABEL_14:
    swift_bridgeObjectRelease(v14);
    return objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  }
  v14 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_14;
LABEL_12:
  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 2, 1);
  swift_bridgeObjectRelease(v14);
  return v19;
}

uint64_t sub_1000FE31C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[40];
  _QWORD v29[5];

  v4 = sub_100007E8C(&qword_1011A14F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DragDropToQueue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v25 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    v16 = _swiftEmptyArrayStorage;
    v21 = _swiftEmptyArrayStorage[2];
    if (v21)
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease(v16);
    return 0;
  }
  v26 = a1;
  v27 = a2;
  v15 = a1 + 32;
  swift_bridgeObjectRetain();
  v16 = _swiftEmptyArrayStorage;
  do
  {
    sub_100064C78(v15, (uint64_t)v29);
    sub_100064C78((uint64_t)v29, (uint64_t)v28);
    v17 = sub_100007E8C(&qword_1011AB320);
    v18 = swift_dynamicCast(v6, v28, v17, v7, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v18 ^ 1u, 1, v7);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v29);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10004FF60((uint64_t)v6, &qword_1011A14F8);
    }
    else
    {
      sub_10005B6C0((uint64_t)v6, (uint64_t)v13, type metadata accessor for DragDropToQueue);
      sub_10005B6C0((uint64_t)v13, (uint64_t)v11, type metadata accessor for DragDropToQueue);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (_QWORD *)sub_100431C54(0, v16[2] + 1, 1, (unint64_t)v16);
      v20 = v16[2];
      v19 = v16[3];
      if (v20 >= v19 >> 1)
        v16 = (_QWORD *)sub_100431C54(v19 > 1, v20 + 1, 1, (unint64_t)v16);
      v16[2] = v20 + 1;
      sub_10005B6C0((uint64_t)v11, (uint64_t)v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, type metadata accessor for DragDropToQueue);
    }
    v15 += 40;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease(v26);
  a2 = v27;
  v21 = v16[2];
  if (!v21)
    goto LABEL_17;
LABEL_12:
  v22 = (uint64_t)v16 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v23 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  while ((sub_1008230A0(v22, a2) & 1) != 0)
  {
    v22 += v23;
    if (!--v21)
    {
      swift_bridgeObjectRelease_n(v16, 2);
      return 1;
    }
  }
  swift_bridgeObjectRelease_n(v16, 2);
  return 0;
}

uint64_t getEnumTagSinglePayload for JSFlowcaseItem.ThumbnailHorizontalAlignment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DragDropIntentIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000FE6D8 + 4 * byte_100EAAFB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1000FE70C + 4 * byte_100EAAFB0[v4]))();
}

uint64_t sub_1000FE70C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000FE714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000FE71CLL);
  return result;
}

uint64_t sub_1000FE728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000FE730);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000FE734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000FE73C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DragDropIntentIdentifier()
{
  return &type metadata for DragDropIntentIdentifier;
}

unint64_t sub_1000FE75C()
{
  unint64_t result;

  result = qword_1011A1510;
  if (!qword_1011A1510)
  {
    result = swift_getWitnessTable(&unk_100EAB0EC, &type metadata for DragDropIntentIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011A1510);
  }
  return result;
}

uint64_t sub_1000FE7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for UserProfileObserver(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_1000FE874();
  qword_10124C870 = v1;
  return result;
}

uint64_t sub_1000FE810@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAB1B0);
  v4 = swift_getKeyPath(&unk_100EAB1D8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1000FE874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[2];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A9B80);
  v6 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v49 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A1610);
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  __chkstk_darwin(v9);
  v47 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A1618);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A2290);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v47 - v20;
  v22 = v1 + OBJC_IVAR____TtC5Music19UserProfileObserver__profile;
  v23 = type metadata accessor for UserProfile(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
  sub_1000FFEA0((uint64_t)v21, (uint64_t)v19);
  Published.init(initialValue:)(v19, v16);
  sub_10004FF60((uint64_t)v21, &qword_1011A2290);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22, v15, v12);
  v24 = OBJC_IVAR____TtC5Music19UserProfileObserver_capabilitiesSubscription;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilitiesSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_task) = 0;
  v25 = v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_QWORD *)(v25 + 112) = 0;
  v26 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  swift_retain(v26);
  ApplicationCapabilities.Controller.$capabilities.getter();
  swift_release(v26);
  v27 = sub_1000A9B84();
  v52[0] = (id)static OS_dispatch_queue.main.getter(v27, v28, v29, v30, v31, v32, v33, v34, v47, v48, v49, v50, v51, v52[0], v52[1]);
  v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 1, 1, v35);
  v36 = sub_100049F28(&qword_1011A1620, (uint64_t *)&unk_1011A9B80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v37 = sub_10006A92C();
  v39 = v47;
  v38 = v48;
  Publisher.receive<A>(on:options:)(v52, v4, v48, v27, v36, v37);
  sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v38);
  v40 = swift_allocObject(&unk_1010B1520, 24, 7);
  swift_weakInit(v40 + 16, v1);
  v41 = sub_100049F28(&qword_1011A1628, &qword_1011A1610, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v42 = v50;
  v43 = Publisher<>.sink(receiveValue:)(sub_1000FFF0C, v40, v50, v41);
  v44 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v39, v42, v44);
  v45 = *(_QWORD *)(v1 + v24);
  *(_QWORD *)(v1 + v24) = v43;
  swift_release(v45);
  return v1;
}

double sub_1000FEC0C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  _QWORD v43[16];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_QWORD *)a1 + 3);
  v37 = *((_QWORD *)a1 + 2);
  v38 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 7);
  v35 = *((_QWORD *)a1 + 6);
  v36 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 9);
  v34 = *((_QWORD *)a1 + 8);
  v9 = (void *)*((_QWORD *)a1 + 10);
  v40 = a1[88];
  v41 = *((_QWORD *)a1 + 12);
  v39 = a1[104];
  v10 = a2 + 16;
  v11 = *((_QWORD *)a1 + 14);
  swift_beginAccess(a2 + 16, v42, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v14 = Strong;
    v15 = 256;
    if (!v3)
      v15 = 0;
    v16 = v15 | v2;
    v17 = 0x10000;
    if (!v4)
      v17 = 0;
    v18 = v16 | v17;
    v19 = Strong + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities;
    sub_100065228(Strong + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities, (uint64_t)v43, &qword_1011A1630);
    v32 = *(_QWORD *)(v19 + 8);
    v33 = *(_QWORD *)v19;
    v30 = *(_QWORD *)(v19 + 24);
    v31 = *(_QWORD *)(v19 + 16);
    v28 = *(_QWORD *)(v19 + 40);
    v29 = *(_QWORD *)(v19 + 32);
    v26 = *(_QWORD *)(v19 + 56);
    v27 = *(_QWORD *)(v19 + 48);
    v24 = *(_OWORD *)(v19 + 80);
    v25 = *(_OWORD *)(v19 + 64);
    v23 = *(_OWORD *)(v19 + 96);
    v22 = *(_QWORD *)(v19 + 112);
    *(_QWORD *)v19 = v18;
    *(_QWORD *)(v19 + 8) = v38;
    *(_QWORD *)(v19 + 16) = v37;
    *(_QWORD *)(v19 + 24) = v5;
    *(_QWORD *)(v19 + 32) = v6;
    *(_QWORD *)(v19 + 40) = v36;
    *(_QWORD *)(v19 + 48) = v35;
    *(_QWORD *)(v19 + 56) = v7;
    *(_QWORD *)(v19 + 64) = v34;
    *(_QWORD *)(v19 + 72) = v8;
    *(_QWORD *)(v19 + 80) = v9;
    *(_QWORD *)(v19 + 88) = v40;
    *(_QWORD *)(v19 + 96) = v41;
    *(_QWORD *)(v19 + 104) = v39;
    *(_QWORD *)(v19 + 112) = v11;
    v20 = v9;
    swift_bridgeObjectRetain_n(v41, 2);
    swift_bridgeObjectRetain_n(v11, 2);
    swift_bridgeObjectRetain_n(v5, 2);
    swift_bridgeObjectRetain_n(v6, 2);
    swift_bridgeObjectRetain_n(v7, 2);
    swift_bridgeObjectRetain_n(v8, 2);
    v21 = v20;
    sub_100100014(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000FFF14);
    sub_1000FFF8C(v33, v32, v31, v30, v29, v28, v27, v26, v25, *((uint64_t *)&v25 + 1), (void *)v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22);
    sub_1000FF158((uint64_t)v43);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v41);

    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    sub_100100014(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000FFF8C);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000FEE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC5Music19UserProfileObserver_task;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_task);
  if (v2)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_task));
    Task.cancel()();
    swift_release(v2);
  }
  v3 = v0 + OBJC_IVAR____TtC5Music19UserProfileObserver__profile;
  v4 = sub_100007E8C(&qword_1011A1618);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilitiesSubscription));
  swift_release(*(_QWORD *)(v0 + v1));
  sub_1000FFF8C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 40), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 48), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 56), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 64), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 72), *(void **)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 80), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 88), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 96), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 104), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 112));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000FEF78()
{
  return type metadata accessor for UserProfileObserver(0);
}

uint64_t type metadata accessor for UserProfileObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A1568;
  if (!qword_1011A1568)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UserProfileObserver);
  return result;
}

void sub_1000FEFBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_1000FF03C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = &unk_100EAB160;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1000FF03C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A1578)
  {
    v2 = sub_100044B54(&qword_1011A2290);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A1578);
  }
}

uint64_t sub_1000FF094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_task);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_task) = a1;
  if (swift_retain(a1))
  {
    if (v3)
    {
      swift_retain(v3);
      v4 = swift_retain(a1);
      v5 = static Task.== infix(_:_:)(v4, v3, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
      swift_release(a1);
      swift_release(v3);
      if ((v5 & 1) != 0)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  else if (v3)
  {
LABEL_6:
    Task.cancel()();
LABEL_7:
    swift_release(v3);
  }
  return swift_release(a1);
}

uint64_t sub_1000FF158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  char v17;
  char v18;
  int v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE v49[24];
  uint64_t v50;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A2290);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v42 - v9;
  v43 = v1;
  v11 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19UserProfileObserver_capabilities + 24);
  if (v12)
    v13 = v11[1];
  else
    v13 = 0;
  sub_100065228(a1, (uint64_t)v49, &qword_1011A1630);
  if (v50)
  {
    v14 = ((v49[1] & 1) == 0) ^ v13;
    if (v12)
    {
LABEL_6:
      v15 = v11[88];
      goto LABEL_9;
    }
  }
  else
  {
    v14 = 0;
    if (v12)
      goto LABEL_6;
  }
  v15 = 4;
LABEL_9:
  sub_100065228(a1, (uint64_t)&v46, &qword_1011A1630);
  if (v47)
    v16 = 0;
  else
    v16 = v15 == 4;
  v17 = v16;
  if (v47 && v15 != 4)
  {
    sub_100100108(v48);
    v17 = v18;
  }
  if (*((_QWORD *)v11 + 3))
    v19 = *v11;
  else
    v19 = 2;
  result = sub_100065228(a1, (uint64_t)v44, &qword_1011A1630);
  if (v45)
  {
    if (v19 == 2)
      goto LABEL_37;
    if ((((v19 == 0) ^ v44[0]) & 1) != 0)
    {
      if (!v14)
        goto LABEL_25;
      goto LABEL_29;
    }
  }
  else if (v19 == 2)
  {
    if ((v14 & 1) == 0)
    {
LABEL_25:
      if (!(v13 & 1 | ((v17 & 1) == 0)))
        return result;
      goto LABEL_32;
    }
LABEL_29:
    if ((v17 & 1) != 0)
      return result;
    goto LABEL_32;
  }
  if (v19)
  {
LABEL_32:
    if (qword_10119BF80 != -1)
      swift_once(&qword_10119BF80, sub_1003AEAB8);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048B14(v21, (uint64_t)qword_10124CE78);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Triggering profile fetch…", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = type metadata accessor for TaskPriority(0);
    v27 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v42, 1, 1, v26);
    v28 = swift_allocObject(&unk_1010B1520, 24, 7);
    swift_weakInit(v28 + 16, v43);
    type metadata accessor for MainActor(0);
    v29 = swift_retain(v28);
    v30 = static MainActor.shared.getter(v29);
    v31 = (_QWORD *)swift_allocObject(&unk_1010B1548, 40, 7);
    v31[2] = v30;
    v31[3] = &protocol witness table for MainActor;
    v31[4] = v28;
    swift_release(v28);
    v32 = sub_100166D14(v27, (uint64_t)&unk_1011A1640, (uint64_t)v31);
    return sub_1000FF094(v32);
  }
LABEL_37:
  if (qword_10119BF80 != -1)
    swift_once(&qword_10119BF80, sub_1003AEAB8);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_100048B14(v33, (uint64_t)qword_10124CE78);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Not signed in — Clearing existing profile", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

  v38 = type metadata accessor for UserProfile(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v10, 1, 1, v38);
  KeyPath = swift_getKeyPath(&unk_100EAB1B0);
  v40 = swift_getKeyPath(&unk_100EAB1D8);
  sub_1000FFEA0((uint64_t)v10, (uint64_t)v8);
  v41 = v43;
  swift_retain(v43);
  static Published.subscript.setter(v8, v41, KeyPath, v40);
  return sub_10004FF60((uint64_t)v10, &qword_1011A2290);
}

uint64_t sub_1000FF5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v4[5] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicUserProfileRequest(0);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v4[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(sub_100007E8C(&qword_1011A2290) - 8);
  v4[10] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v4[11] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[12] = swift_task_alloc(v10);
  v4[13] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v4[14] = v11;
  v4[15] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[16] = v13;
  v4[17] = v14;
  return swift_task_switch(sub_1000FF6D8, v13, v14);
}

uint64_t sub_1000FF6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 144) = Strong;
  if (Strong)
  {
    MusicUserProfileRequest.init()();
    v3 = (_QWORD *)swift_task_alloc(dword_1011A164C);
    *(_QWORD *)(v0 + 152) = v3;
    *v3 = v0;
    v3[1] = sub_1000FF7B0;
    return sub_1000FF954(*(_QWORD *)(v0 + 104));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 120));
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000FF7B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 64);
  v2 = *(_QWORD *)(*v0 + 72);
  v4 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1000FF81C, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_1000FF81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 120));
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1000FFEA0(v2, v3);
  v8 = swift_retain(v1);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 40) & ~v10;
  v12 = (_QWORD *)swift_allocObject(&unk_1010B1570, v11 + v4, v10 | 7);
  v12[2] = v9;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v1;
  sub_100065228(v3, (uint64_t)v12 + v11, &qword_1011A2290);
  v13 = sub_100166D14(v6, (uint64_t)&unk_1011A1658, (uint64_t)v12);
  swift_release(v13);
  swift_release(v1);
  sub_10004FF60(v2, &qword_1011A2290);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FF954(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;

  v1[4] = a1;
  v2 = type metadata accessor for MusicUserProfileResponse(0);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v4 = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[7] = v4;
  v1[8] = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MusicUserProfileRequest.response()[1]);
  v1[10] = v6;
  *v6 = v1;
  v6[1] = sub_1000FF9FC;
  return MusicUserProfileRequest.response()(v4);
}

uint64_t sub_1000FF9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1000FFB08;
  else
    v6 = sub_1000FFA84;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000FFA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = swift_release(*(_QWORD *)(v0 + 72));
  MusicUserProfileResponse.userProfile.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = type metadata accessor for UserProfile(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FFB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 72));
  if (qword_10119BF80 != -1)
    swift_once(&qword_10119BF80, sub_1003AEAB8);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124CE78);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 88);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 24) = sub_100322200(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Encountered error fetching user profile: %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 88));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v14 = *(_QWORD *)(v0 + 32);
  v15 = type metadata accessor for UserProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FFD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A2290) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[4] = swift_task_alloc(v6);
  v5[5] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v5[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000FFDD0, v9, v10);
}

uint64_t sub_1000FFDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  sub_1000FFEA0(v2, v1);
  KeyPath = swift_getKeyPath(&unk_100EAB1B0);
  v6 = swift_getKeyPath(&unk_100EAB1D8);
  sub_1000FFEA0(v1, v3);
  swift_retain(v4);
  static Published.subscript.setter(v3, v4, KeyPath, v6);
  sub_10004FF60(v1, &qword_1011A2290);
  sub_1000FF094(0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FFEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A2290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FFEE8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000FFF0C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1000FEC0C(a1, v1);
}

uint64_t sub_1000FFF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  id v18;
  uint64_t result;

  if (a4)
  {
    v18 = a11;
    swift_bridgeObjectRetain(a13);
    swift_bridgeObjectRetain(a15);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a8);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

void sub_1000FFF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a15);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);

  }
}

_QWORD *sub_100100014(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14]);
  return a1;
}

uint64_t sub_100100070()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10010009C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A163C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_1000FF5E0(a1, v4, v5, v6);
}

void sub_100100108(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100100174(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1001001DC + 4 * byte_100EAB124[a2]))(0x6564696365646E75);
}

uint64_t sub_1001001DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6564696365646E75 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6564696365646E75, 0xE900000000000064, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000064);
  return v2 & 1;
}

uint64_t sub_10010028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011A2290) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v5 = type metadata accessor for UserProfile(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100100334(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011A2290) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011A1654);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1000FFD30(a1, v5, v6, v7, v8);
}

unint64_t sub_1001003D0()
{
  unint64_t result;

  result = qword_1011A1678;
  if (!qword_1011A1678)
  {
    result = swift_getWitnessTable(&unk_100EAB228, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A1678);
  }
  return result;
}

unint64_t sub_100100418()
{
  unint64_t result;

  result = qword_1011A1680;
  if (!qword_1011A1680)
  {
    result = swift_getWitnessTable(&unk_100EAB250, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A1680);
  }
  return result;
}

unint64_t sub_100100460()
{
  unint64_t result;

  result = qword_1011A1688;
  if (!qword_1011A1688)
  {
    result = swift_getWitnessTable(&unk_100EAB2E0, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A1688);
  }
  return result;
}

unint64_t sub_1001004A8()
{
  unint64_t result;

  result = qword_1011A1690;
  if (!qword_1011A1690)
  {
    result = swift_getWitnessTable(&unk_100EAB308, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A1690);
  }
  return result;
}

uint64_t sub_1001004EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F959B8, 1);
}

uint64_t sub_1001004FC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100100418();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10010053C()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124C878);
  sub_100048B14(v0, (uint64_t)qword_10124C878);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E2CF50);
}

uint64_t sub_10010059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[86] = a3;
  v3[85] = a2;
  v3[84] = a1;
  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v3[87] = v4;
  v3[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlaybackIntentDescriptor(0);
  v3[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B69C0);
  v3[90] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100100644, 0, 0);
}

uint64_t sub_100100644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  IntentParameter.wrappedValue.getter(v0 + 64);
  v1 = v0[64];
  v2 = v0[65];
  v0[91] = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_1011A16C4);
  v0[92] = v3;
  *v3 = v0;
  v3[1] = sub_1001006BC;
  return sub_100101D88((uint64_t)(v0 + 12), v1, v2);
}

uint64_t sub_1001006BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 736);
  *(_QWORD *)(*v1 + 744) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001019D8;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 728));
    v4 = sub_100100728;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100100728()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  NSString v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __n128 v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_type_t type;
  uint64_t v65;
  os_log_t log;
  NSObject *loga;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v1 = (_OWORD *)(v0 + 256);
  if (*(_QWORD *)(v0 + 120))
  {
    v2 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
    v3 = sub_100007E8C(&qword_1011A16E0);
    if ((swift_dynamicCast(v0 + 256, v0 + 96, v2, v3, 6) & 1) == 0)
    {
      *(_QWORD *)(v0 + 288) = 0;
      *v1 = 0u;
      *(_OWORD *)(v0 + 272) = 0u;
    }
  }
  else
  {
    sub_10004FF60(v0 + 96, (uint64_t *)&unk_1011B69E0);
    *v1 = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
    *(_QWORD *)(v0 + 288) = 0;
  }
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_QWORD *)(v0 + 208) = 0;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 544));
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 752) = v5;
  if (v5)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1011A16C4);
    *(_QWORD *)(v0 + 760) = v6;
    *v6 = v0;
    v6[1] = sub_100100E34;
    return sub_100101D88(v0 + 416, v4, v5);
  }
  sub_10004A160(v0 + 256, v0 + 16, &qword_1011A16C8);
  sub_10004A160(v0 + 176, v0 + 56, &qword_1011A16D0);
  v8 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v0 + 40))
  {
    if (v8)
    {
      v9 = (_QWORD *)(v0 + 296);
      v10 = *(_QWORD *)(v0 + 720);
      sub_100064C48((__int128 *)(v0 + 16), v0 + 336);
      sub_100064C48((__int128 *)(v0 + 56), v0 + 296);
      v11 = *(_QWORD *)(v0 + 320);
      log = *(os_log_t *)(v0 + 328);
      v12 = sub_100007E68((_QWORD *)(v0 + 296), v11);
      sub_1000E3E80();
      v13 = *(_QWORD *)(v11 - 8);
      v14 = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v13 + 16))(v14, v12, v11);
      sub_100064C78(v0 + 336, v0 + 216);
      v15 = type metadata accessor for MusicPlaybackSource(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
      v16 = (void *)MPCPlaybackIntent.init<A>(container:startingAt:playbackSource:)(v14, v0 + 216, v10, v11, log);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 336));
      v17 = v14;
    }
    else
    {
      v9 = (_QWORD *)(v0 + 376);
      sub_100064C48((__int128 *)(v0 + 16), v0 + 376);
      v25 = *(_QWORD *)(v0 + 400);
      v26 = *(_QWORD *)(v0 + 408);
      v27 = sub_100007E68((_QWORD *)(v0 + 376), v25);
      sub_1000E3E80();
      v28 = *(_QWORD *)(v25 - 8);
      v29 = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v28 + 16))(v29, v27, v25);
      v16 = (void *)MPCPlaybackIntent.init<A>(_:)(v29, v25, v26);
      v17 = v29;
    }
    goto LABEL_13;
  }
  if (v8)
  {
    v9 = (_QWORD *)(v0 + 456);
    v18 = *(_QWORD *)(v0 + 720);
    sub_100064C48((__int128 *)(v0 + 56), v0 + 456);
    v19 = *(_QWORD *)(v0 + 480);
    v20 = *(_QWORD *)(v0 + 488);
    v21 = sub_100007E68((_QWORD *)(v0 + 456), v19);
    sub_1000E3E80();
    v22 = *(_QWORD *)(v19 - 8);
    v23 = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v22 + 16))(v23, v21, v19);
    v24 = type metadata accessor for MusicPlaybackSource(0);
    v68 = 0u;
    v69 = 0u;
    v70 = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
    v16 = (void *)MPCPlaybackIntent.init<A>(container:startingAt:playbackSource:)(v23, &v68, v18, v19, v20);
    v17 = v23;
LABEL_13:
    swift_task_dealloc(v17);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);
    *(_QWORD *)(v0 + 776) = v16;
    v30 = *(_QWORD *)(v0 + 712);
    v31 = *(_QWORD **)(v0 + 704);
    v32 = *(_QWORD *)(v0 + 696);
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setPlayActivityFeatureName:", v33);

    *v31 = v16;
    swift_storeEnumTagMultiPayload(v31, v32, 0);
    v70 = 0;
    v68 = 0u;
    v69 = 0u;
    v34 = v16;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v31, (uint64_t)&v68, 2, 1, 0, 1, 0, 1, v30, 0);
    v35 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 784) = v35;
    *(_QWORD *)(v0 + 792) = static MainActor.shared.getter(v36);
    v37 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
    return swift_task_switch(sub_100101554, v37, v38);
  }
  if (qword_10119B928 != -1)
    swift_once(&qword_10119B928, sub_100108530);
  v39 = *(_QWORD *)(v0 + 688);
  v40 = *(_QWORD *)(v0 + 680);
  v41 = type metadata accessor for Logger(0);
  sub_100048B14(v41, (uint64_t)qword_1011A1660);
  swift_retain_n(v40, 4);
  v42 = swift_retain_n(v39, 4);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.error.getter();
  v45 = os_log_type_enabled(v43, v44);
  v47 = *(_QWORD *)(v0 + 688);
  v48 = *(_QWORD *)(v0 + 680);
  if (v45)
  {
    loga = v43;
    v49 = swift_slowAlloc(22, -1);
    v65 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v68 = v65;
    *(_DWORD *)v49 = 136446466;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 576));
    v50 = *(_QWORD *)(v0 + 584);
    *(_QWORD *)(v0 + 632) = sub_100322200(*(_QWORD *)(v0 + 576), v50, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640);
    v51 = swift_bridgeObjectRelease(v50);
    swift_release_n(v48, 2, v51);
    swift_release_n(v47, 2, v52);
    *(_WORD *)(v49 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 608));
    v53 = *(_QWORD *)(v0 + 616);
    v54 = Optional<A>.description.getter(*(_QWORD *)(v0 + 608), v53);
    type = v44;
    v56 = v55;
    swift_bridgeObjectRelease(v53);
    *(_QWORD *)(v0 + 656) = sub_100322200(v54, v56, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664);
    v57 = swift_bridgeObjectRelease(v56);
    swift_release_n(v48, 2, v57);
    swift_release_n(v47, 2, v58);
    v43 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, type, "No playable item found for item: %{public}s, container: %{public}s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 680), 4, v46);
    swift_release_n(v47, 4, v59);
  }

  static IntentResult.result<>()(v60);
  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  v61 = *(_QWORD *)(v0 + 720);
  v62 = *(_QWORD *)(v0 + 712);
  v63 = *(_QWORD *)(v0 + 704);
  sub_10004FF60(v0 + 256, &qword_1011A16C8);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100100E34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 760);
  *(_QWORD *)(*v1 + 768) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 752));
  if (v0)
    v4 = sub_100101A34;
  else
    v4 = sub_100100EA0;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100100EA0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  NSString v29;
  id v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t type;
  uint64_t v62;
  os_log_t log;
  NSObject *loga;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v1 = (_OWORD *)(v0 + 136);
  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  if (*(_QWORD *)(v0 + 440))
  {
    v2 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
    v3 = sub_100007E8C(&qword_1011A16D8);
    if ((swift_dynamicCast(v0 + 136, v0 + 416, v2, v3, 6) & 1) == 0)
    {
      *(_QWORD *)(v0 + 168) = 0;
      *v1 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
    }
  }
  else
  {
    sub_10004FF60(v0 + 416, (uint64_t *)&unk_1011B69E0);
    *v1 = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_QWORD *)(v0 + 168) = 0;
  }
  sub_100065228(v0 + 136, v0 + 176, &qword_1011A16D0);
  sub_10004A160(v0 + 256, v0 + 16, &qword_1011A16C8);
  sub_10004A160(v0 + 176, v0 + 56, &qword_1011A16D0);
  v4 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v0 + 40))
  {
    if (v4)
    {
      v5 = (_QWORD *)(v0 + 296);
      v6 = *(_QWORD *)(v0 + 720);
      sub_100064C48((__int128 *)(v0 + 16), v0 + 336);
      sub_100064C48((__int128 *)(v0 + 56), v0 + 296);
      v7 = *(_QWORD *)(v0 + 320);
      log = *(os_log_t *)(v0 + 328);
      v8 = sub_100007E68((_QWORD *)(v0 + 296), v7);
      sub_1000E3E80();
      v9 = *(_QWORD *)(v7 - 8);
      v10 = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 16))(v10, v8, v7);
      sub_100064C78(v0 + 336, v0 + 216);
      v11 = type metadata accessor for MusicPlaybackSource(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
      v12 = (void *)MPCPlaybackIntent.init<A>(container:startingAt:playbackSource:)(v10, v0 + 216, v6, v7, log);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 336));
      v13 = v10;
    }
    else
    {
      v5 = (_QWORD *)(v0 + 376);
      sub_100064C48((__int128 *)(v0 + 16), v0 + 376);
      v21 = *(_QWORD *)(v0 + 400);
      v22 = *(_QWORD *)(v0 + 408);
      v23 = sub_100007E68((_QWORD *)(v0 + 376), v21);
      sub_1000E3E80();
      v24 = *(_QWORD *)(v21 - 8);
      v25 = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v24 + 16))(v25, v23, v21);
      v12 = (void *)MPCPlaybackIntent.init<A>(_:)(v25, v21, v22);
      v13 = v25;
    }
    goto LABEL_11;
  }
  if (v4)
  {
    v5 = (_QWORD *)(v0 + 456);
    v14 = *(_QWORD *)(v0 + 720);
    sub_100064C48((__int128 *)(v0 + 56), v0 + 456);
    v15 = *(_QWORD *)(v0 + 480);
    v16 = *(_QWORD *)(v0 + 488);
    v17 = sub_100007E68((_QWORD *)(v0 + 456), v15);
    sub_1000E3E80();
    v18 = *(_QWORD *)(v15 - 8);
    v19 = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v18 + 16))(v19, v17, v15);
    v20 = type metadata accessor for MusicPlaybackSource(0);
    v65 = 0u;
    v66 = 0u;
    v67 = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
    v12 = (void *)MPCPlaybackIntent.init<A>(container:startingAt:playbackSource:)(v19, &v65, v14, v15, v16);
    v13 = v19;
LABEL_11:
    swift_task_dealloc(v13);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v5);
    *(_QWORD *)(v0 + 776) = v12;
    v26 = *(_QWORD *)(v0 + 712);
    v27 = *(_QWORD **)(v0 + 704);
    v28 = *(_QWORD *)(v0 + 696);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setPlayActivityFeatureName:", v29);

    *v27 = v12;
    swift_storeEnumTagMultiPayload(v27, v28, 0);
    v67 = 0;
    v65 = 0u;
    v66 = 0u;
    v30 = v12;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v27, (uint64_t)&v65, 2, 1, 0, 1, 0, 1, v26, 0);
    v31 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 784) = v31;
    *(_QWORD *)(v0 + 792) = static MainActor.shared.getter(v32);
    v33 = dispatch thunk of Actor.unownedExecutor.getter(v31, &protocol witness table for MainActor);
    return swift_task_switch(sub_100101554, v33, v34);
  }
  if (qword_10119B928 != -1)
    swift_once(&qword_10119B928, sub_100108530);
  v36 = *(_QWORD *)(v0 + 688);
  v37 = *(_QWORD *)(v0 + 680);
  v38 = type metadata accessor for Logger(0);
  sub_100048B14(v38, (uint64_t)qword_1011A1660);
  swift_retain_n(v37, 4);
  v39 = swift_retain_n(v36, 4);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter();
  v42 = os_log_type_enabled(v40, v41);
  v44 = *(_QWORD *)(v0 + 688);
  v45 = *(_QWORD *)(v0 + 680);
  if (v42)
  {
    loga = v40;
    v46 = swift_slowAlloc(22, -1);
    v62 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v65 = v62;
    *(_DWORD *)v46 = 136446466;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 576));
    v47 = *(_QWORD *)(v0 + 584);
    *(_QWORD *)(v0 + 632) = sub_100322200(*(_QWORD *)(v0 + 576), v47, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640);
    v48 = swift_bridgeObjectRelease(v47);
    swift_release_n(v45, 2, v48);
    swift_release_n(v44, 2, v49);
    *(_WORD *)(v46 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 608));
    v50 = *(_QWORD *)(v0 + 616);
    v51 = Optional<A>.description.getter(*(_QWORD *)(v0 + 608), v50);
    type = v41;
    v53 = v52;
    swift_bridgeObjectRelease(v50);
    *(_QWORD *)(v0 + 656) = sub_100322200(v51, v53, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664);
    v54 = swift_bridgeObjectRelease(v53);
    swift_release_n(v45, 2, v54);
    swift_release_n(v44, 2, v55);
    v40 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, type, "No playable item found for item: %{public}s, container: %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 680), 4, v43);
    swift_release_n(v44, 4, v56);
  }

  static IntentResult.result<>()(v57);
  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  v58 = *(_QWORD *)(v0 + 720);
  v59 = *(_QWORD *)(v0 + 712);
  v60 = *(_QWORD *)(v0 + 704);
  sub_10004FF60(v0 + 256, &qword_1011A16C8);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100101554()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 792));
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  return swift_task_switch(sub_1001015B8, 0, 0);
}

uint64_t sub_1001015B8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 784);
  *(_QWORD *)(v1 + 800) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100101618, v3, v4);
}

uint64_t sub_100101618()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t **v3;

  swift_release(v0[100]);
  v1 = (void *)qword_10124C798;
  v0[101] = qword_10124C798;
  v2 = dword_1011D86D4;
  v1;
  v3 = (uint64_t **)swift_task_alloc(v2);
  v0[102] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_100101690;
  return PlaybackController.add(_:route:)(v0[89], 0);
}

uint64_t sub_100101690()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 816);
  *(_QWORD *)(*v1 + 824) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100101AAC;
  }
  else
  {

    v4 = sub_1001016FC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001016FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  if (qword_10119B928 != -1)
    swift_once(&qword_10119B928, sub_100108530);
  v1 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)qword_1011A1660);
  swift_retain_n(v2, 4);
  v4 = swift_retain_n(v1, 4);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(_QWORD *)(v0 + 688);
  v10 = *(_QWORD *)(v0 + 680);
  if (v7)
  {
    v11 = swift_slowAlloc(22, -1);
    v29 = swift_slowAlloc(64, -1);
    v30 = v29;
    *(_DWORD *)v11 = 136446466;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 560));
    v12 = *(_QWORD *)(v0 + 568);
    *(_QWORD *)(v0 + 640) = sub_100322200(*(_QWORD *)(v0 + 560), v12, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648);
    v13 = swift_bridgeObjectRelease(v12);
    swift_release_n(v10, 2, v13);
    swift_release_n(v9, 2, v14);
    *(_WORD *)(v11 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 592));
    v15 = *(_QWORD *)(v0 + 600);
    v16 = Optional<A>.description.getter(*(_QWORD *)(v0 + 592), v15);
    v18 = v17;
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)(v0 + 624) = sub_100322200(v16, v18, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    v19 = swift_bridgeObjectRelease(v18);
    swift_release_n(v10, 2, v19);
    swift_release_n(v9, 2, v20);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Added new playback intent for item: %{public}s, container: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 680), 4, v8);
    swift_release_n(v9, 4, v21);
  }

  v22 = *(void **)(v0 + 776);
  v23 = *(_QWORD *)(v0 + 712);
  static IntentResult.result<>()(v24);

  sub_100108888(v23);
  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  v25 = *(_QWORD *)(v0 + 720);
  v26 = *(_QWORD *)(v0 + 712);
  v27 = *(_QWORD *)(v0 + 704);
  sub_10004FF60(v0 + 256, &qword_1011A16C8);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001019D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 728));
  v1 = *(_QWORD *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100101A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  sub_10004FF60(v0 + 256, &qword_1011A16C8);
  v1 = *(_QWORD *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100101AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29[2];

  if (qword_10119B928 != -1)
    swift_once(&qword_10119B928, sub_100108530);
  v1 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)qword_1011A1660);
  swift_retain_n(v2, 4);
  v4 = swift_retain_n(v1, 4);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(_QWORD *)(v0 + 688);
  v10 = *(_QWORD *)(v0 + 680);
  if (v7)
  {
    v11 = swift_slowAlloc(22, -1);
    v28 = swift_slowAlloc(64, -1);
    v29[0] = v28;
    *(_DWORD *)v11 = 136446466;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 496));
    v12 = *(_QWORD *)(v0 + 504);
    *(_QWORD *)(v0 + 664) = sub_100322200(*(_QWORD *)(v0 + 496), v12, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 664, v0 + 672);
    v13 = swift_bridgeObjectRelease(v12);
    swift_release_n(v10, 2, v13);
    swift_release_n(v9, 2, v14);
    *(_WORD *)(v11 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 528));
    v15 = *(_QWORD *)(v0 + 536);
    v16 = Optional<A>.description.getter(*(_QWORD *)(v0 + 528), v15);
    v18 = v17;
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)(v0 + 648) = sub_100322200(v16, v18, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656);
    v19 = swift_bridgeObjectRelease(v18);
    swift_release_n(v10, 2, v19);
    swift_release_n(v9, 2, v20);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to add new playback intent for item: %{public}s, container: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 680), 4, v8);
    swift_release_n(v9, 4, v21);
  }

  v22 = *(void **)(v0 + 776);
  v23 = *(_QWORD *)(v0 + 712);
  swift_willThrow(v24);

  sub_100108888(v23);
  sub_10004FF60(v0 + 176, &qword_1011A16D0);
  sub_10004FF60(v0 + 256, &qword_1011A16C8);
  v25 = *(_QWORD *)(v0 + 712);
  v26 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100101D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v3[80] = a3;
  v3[79] = a2;
  v3[78] = a1;
  v4 = sub_100007E8C(&qword_10119FC90);
  v3[81] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[82] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[83] = swift_task_alloc(v6);
  v3[84] = swift_task_alloc(v6);
  v7 = sub_100007E8C(&qword_10119FC98);
  v3[85] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[86] = v8;
  v3[87] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119FCA0);
  v3[88] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[89] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[90] = swift_task_alloc(v11);
  v3[91] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_10119FCA8);
  v3[92] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[93] = v13;
  v3[94] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119FD00);
  v3[95] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[96] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[97] = swift_task_alloc(v16);
  v3[98] = swift_task_alloc(v16);
  v17 = sub_100007E8C(&qword_10119FD08);
  v3[99] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v3[100] = v18;
  v3[101] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicSiriRepresentation.Kind(0);
  v3[102] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v3[103] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[104] = swift_task_alloc(v21);
  v3[105] = swift_task_alloc(v21);
  v3[106] = swift_task_alloc(v21);
  v3[107] = swift_task_alloc(v21);
  v3[108] = swift_task_alloc(v21);
  v22 = sub_100007E8C(&qword_10119FD98);
  v3[109] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_10119FDA0);
  v3[110] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[111] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[112] = swift_task_alloc(v25);
  v3[113] = swift_task_alloc(v25);
  v26 = sub_100007E8C(&qword_10119FDA8);
  v3[114] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v3[115] = v27;
  v28 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[116] = swift_task_alloc(v28);
  v3[117] = swift_task_alloc(v28);
  v29 = sub_100007E8C(&qword_10119FDB0);
  v3[118] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v3[119] = v30;
  v3[120] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E480) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[121] = swift_task_alloc(v31);
  v3[122] = swift_task_alloc(v31);
  v32 = sub_100007E8C((uint64_t *)&unk_1011B8DA0);
  v3[123] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v3[124] = v33;
  v34 = (*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[125] = swift_task_alloc(v34);
  v3[126] = swift_task_alloc(v34);
  v3[127] = swift_task_alloc(v34);
  v35 = sub_100007E8C(&qword_1011A9330);
  v3[128] = v35;
  v36 = *(_QWORD *)(v35 - 8);
  v3[129] = v36;
  v37 = (*(_QWORD *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[130] = swift_task_alloc(v37);
  v3[131] = swift_task_alloc(v37);
  v38 = sub_100007E8C((uint64_t *)&unk_1011A9320);
  v3[132] = v38;
  v39 = *(_QWORD *)(v38 - 8);
  v3[133] = v39;
  v3[134] = swift_task_alloc((*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[135] = swift_task_alloc(v40);
  v3[136] = swift_task_alloc(v40);
  v41 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  v3[137] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v3[138] = v42;
  v43 = (*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[139] = swift_task_alloc(v43);
  v3[140] = swift_task_alloc(v43);
  v3[141] = swift_task_alloc(v43);
  v44 = sub_100007E8C((uint64_t *)&unk_1011D1070);
  v3[142] = v44;
  v45 = *(_QWORD *)(v44 - 8);
  v3[143] = v45;
  v46 = (*(_QWORD *)(v45 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[144] = swift_task_alloc(v46);
  v3[145] = swift_task_alloc(v46);
  v47 = sub_100007E8C(&qword_10119FDE8);
  v3[146] = v47;
  v48 = *(_QWORD *)(v47 - 8);
  v3[147] = v48;
  v3[148] = swift_task_alloc((*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[149] = swift_task_alloc(v49);
  v3[150] = swift_task_alloc(v49);
  v50 = sub_100007E8C(&qword_1011A3D80);
  v3[151] = v50;
  v51 = *(_QWORD *)(v50 - 8);
  v3[152] = v51;
  v52 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[153] = swift_task_alloc(v52);
  v3[154] = swift_task_alloc(v52);
  v3[155] = swift_task_alloc(v52);
  v53 = sub_100007E8C(&qword_10119FE48);
  v3[156] = v53;
  v54 = *(_QWORD *)(v53 - 8);
  v3[157] = v54;
  v55 = (*(_QWORD *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[158] = swift_task_alloc(v55);
  v3[159] = swift_task_alloc(v55);
  v56 = type metadata accessor for MusicDataRequest.Source(0);
  v3[160] = v56;
  v57 = *(_QWORD *)(v56 - 8);
  v3[161] = v57;
  v3[162] = swift_task_alloc((*(_QWORD *)(v57 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C((uint64_t *)&unk_1011B6BB0);
  v3[163] = v58;
  v59 = *(_QWORD *)(v58 - 8);
  v3[164] = v59;
  v3[165] = swift_task_alloc((*(_QWORD *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for MusicSiriRepresentation.ParsedIdentifier(0);
  v3[166] = v60;
  v61 = *(_QWORD *)(v60 - 8);
  v3[167] = v61;
  v62 = (*(_QWORD *)(v61 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[168] = swift_task_alloc(v62);
  v3[169] = swift_task_alloc(v62);
  v3[170] = swift_task_alloc(v62);
  v3[171] = swift_task_alloc(v62);
  return swift_task_switch(sub_100102348, 0, 0);
}

uint64_t sub_100102348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  void (*v43)(uint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  void (*v65)(uint64_t, uint64_t, __n128);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  _BOOL4 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint8_t *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  _BOOL4 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint8_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void (*v221)(uint64_t, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235[3];

  static MusicSiriRepresentation.parse(_:)(*(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 640));
  v1 = *(_QWORD *)(v0 + 1360);
  v2 = *(_QWORD *)(v0 + 1336);
  v3 = *(_QWORD *)(v0 + 1328);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v4(v1, *(_QWORD *)(v0 + 1368), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v5 != enum case for MusicSiriRepresentation.ParsedIdentifier.catalog(_:))
  {
    if (v5 == enum case for MusicSiriRepresentation.ParsedIdentifier.library(_:))
    {
      v19 = *(char **)(v0 + 1360);
      v20 = *(_QWORD *)(v0 + 864);
      v21 = *(_QWORD *)(v0 + 824);
      v22 = *(_QWORD *)(v0 + 816);
      (*(void (**)(char *, _QWORD))(*(_QWORD *)(v0 + 1336) + 96))(v19, *(_QWORD *)(v0 + 1328));
      v230 = *(_QWORD *)v19;
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 2));
      v23 = sub_100007E8C(&qword_10119FE50);
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v20, &v19[*(int *)(v23 + 64)], v22);
      if (qword_10119B928 != -1)
        swift_once(&qword_10119B928, sub_100108530);
      v24 = *(_QWORD *)(v0 + 864);
      v25 = *(_QWORD *)(v0 + 856);
      v26 = *(_QWORD *)(v0 + 824);
      v27 = *(_QWORD *)(v0 + 816);
      v28 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 1480) = sub_100048B14(v28, (uint64_t)qword_1011A1660);
      v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
      v30 = v29(v25, v24, v27);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter(v31);
      v33 = os_log_type_enabled(v31, v32);
      v34 = *(_QWORD *)(v0 + 856);
      if (v33)
      {
        v35 = *(_QWORD *)(v0 + 848);
        v217 = *(_QWORD *)(v0 + 824);
        v221 = (void (*)(uint64_t, uint64_t, uint64_t))v29;
        v36 = *(_QWORD *)(v0 + 816);
        v37 = swift_slowAlloc(22, -1);
        v38 = swift_slowAlloc(32, -1);
        v235[0] = v38;
        *(_DWORD *)v37 = 134349314;
        *(_QWORD *)(v0 + 488) = v230;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 488, v0 + 496);
        *(_WORD *)(v37 + 12) = 2082;
        v221(v35, v34, v36);
        v39 = String.init<A>(describing:)(v35, v36);
        v41 = v40;
        *(_QWORD *)(v0 + 496) = sub_100322200(v39, v40, v235);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 496, v0 + 504);
        v42 = swift_bridgeObjectRelease(v41);
        v43 = *(void (**)(uint64_t, uint64_t, __n128))(v217 + 8);
        v44 = v36;
        v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v221;
        v43(v34, v44, v42);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Parsed to library id: %{public}lld %{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v43 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 824) + 8);
        ((void (*)(_QWORD, _QWORD))v43)(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 816));
      }

      *(_QWORD *)(v0 + 1488) = v43;
      v77 = *(_QWORD *)(v0 + 840);
      v78 = *(_QWORD *)(v0 + 824);
      v79 = *(_QWORD *)(v0 + 816);
      v29(v77, *(_QWORD *)(v0 + 864), v79);
      v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 88))(v77, v79);
      if (v80 == enum case for MusicSiriRepresentation.Kind.album(_:))
      {
        v81 = *(_QWORD *)(v0 + 792);
        v82 = type metadata accessor for Album(0);
        *(_QWORD *)(v0 + 1496) = v82;
        MusicLibraryRequest.init()(v82, &protocol witness table for Album);
        KeyPath = swift_getKeyPath(&unk_100EAB398);
        *(_QWORD *)(v0 + 520) = v230;
        v84 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v86 = MusicItemID.init(_:)(v84, v85);
        v88 = v87;
        *(_QWORD *)(v0 + 440) = v86;
        *(_QWORD *)(v0 + 448) = v87;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(KeyPath, v0 + 440, v81, &protocol witness table for MusicItemID);
        swift_release(KeyPath);
        swift_bridgeObjectRelease(v88);
        v89 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 1504) = v89;
        *v89 = v0;
        v89[1] = sub_1001056AC;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 792));
      }
      if (v80 == enum case for MusicSiriRepresentation.Kind.playlist(_:))
      {
        v106 = *(_QWORD *)(v0 + 736);
        v107 = type metadata accessor for Playlist(0);
        *(_QWORD *)(v0 + 1520) = v107;
        MusicLibraryRequest.init()(v107, &protocol witness table for Playlist);
        v108 = swift_getKeyPath(&unk_100EAB370);
        *(_QWORD *)(v0 + 544) = v230;
        v109 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v111 = MusicItemID.init(_:)(v109, v110);
        v113 = v112;
        *(_QWORD *)(v0 + 376) = v111;
        *(_QWORD *)(v0 + 384) = v112;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v108, v0 + 376, v106, &protocol witness table for MusicItemID);
        swift_release(v108);
        swift_bridgeObjectRelease(v113);
        v114 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 1528) = v114;
        *v114 = v0;
        v114[1] = sub_100105DE0;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));
      }
      if (v80 == enum case for MusicSiriRepresentation.Kind.song(_:))
      {
        v123 = *(_QWORD *)(v0 + 680);
        v124 = type metadata accessor for Song(0);
        *(_QWORD *)(v0 + 1544) = v124;
        MusicLibraryRequest.init()(v124, &protocol witness table for Song);
        v125 = swift_getKeyPath(&unk_100EAB348);
        *(_QWORD *)(v0 + 568) = v230;
        v126 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v128 = MusicItemID.init(_:)(v126, v127);
        v130 = v129;
        *(_QWORD *)(v0 + 424) = v128;
        *(_QWORD *)(v0 + 432) = v129;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v125, v0 + 424, v123, &protocol witness table for MusicItemID);
        swift_release(v125);
        swift_bridgeObjectRelease(v130);
        v131 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 1552) = v131;
        *v131 = v0;
        v131[1] = sub_100106514;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 680));
      }
      v134 = v29(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 864), *(_QWORD *)(v0 + 816));
      v135 = Logger.logObject.getter(v134);
      v136 = static os_log_type_t.error.getter();
      v137 = os_log_type_enabled(v135, v136);
      v138 = *(_QWORD *)(v0 + 1368);
      v139 = *(_QWORD *)(v0 + 1336);
      v140 = *(_QWORD *)(v0 + 1328);
      v233 = *(_QWORD *)(v0 + 864);
      if (v137)
      {
        v141 = *(_QWORD *)(v0 + 848);
        v216 = *(_QWORD *)(v0 + 832);
        v223 = *(_QWORD *)(v0 + 1336);
        v142 = *(_QWORD *)(v0 + 816);
        v220 = *(_QWORD *)(v0 + 1368);
        v143 = (uint8_t *)swift_slowAlloc(12, -1);
        v144 = swift_slowAlloc(32, -1);
        v235[0] = v144;
        *(_DWORD *)v143 = 136446210;
        v29(v141, v216, v142);
        v145 = String.init<A>(describing:)(v141, v142);
        v147 = v146;
        *(_QWORD *)(v0 + 584) = sub_100322200(v145, v146, v235);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 584, v0 + 592);
        v148 = swift_bridgeObjectRelease(v147);
        v43(v216, v142, v148);
        _os_log_impl((void *)&_mh_execute_header, v135, v136, "Unsupported library kind: \"%{public}s\"", v143, 0xCu);
        swift_arrayDestroy(v144, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v144, -1, -1);
        swift_slowDealloc(v143, -1, -1);

        ((void (*)(uint64_t, uint64_t))v43)(v233, v142);
        (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v220, v140);
      }
      else
      {
        v157 = *(_QWORD *)(v0 + 832);
        v158 = *(_QWORD *)(v0 + 816);

        ((void (*)(uint64_t, uint64_t))v43)(v157, v158);
        ((void (*)(uint64_t, uint64_t))v43)(v233, v158);
        (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
      }
      v159 = *(_QWORD *)(v0 + 840);
      v160 = *(_QWORD *)(v0 + 816);
      v161 = *(_QWORD *)(v0 + 624);
      *(_QWORD *)(v161 + 32) = 0;
      *(_OWORD *)v161 = 0u;
      *(_OWORD *)(v161 + 16) = 0u;
      ((void (*)(uint64_t, uint64_t))v43)(v159, v160);
    }
    else
    {
      if (qword_10119B928 != -1)
        swift_once(&qword_10119B928, sub_100108530);
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1352);
      v49 = *(_QWORD *)(v0 + 1328);
      v50 = type metadata accessor for Logger(0);
      sub_100048B14(v50, (uint64_t)qword_1011A1660);
      v51 = v4(v48, v47, v49);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.error.getter();
      v54 = os_log_type_enabled(v52, v53);
      v55 = *(_QWORD *)(v0 + 1368);
      v56 = *(_QWORD *)(v0 + 1352);
      if (v54)
      {
        v57 = *(_QWORD *)(v0 + 1344);
        v227 = *(_QWORD *)(v0 + 1336);
        v231 = *(_QWORD *)(v0 + 1368);
        v58 = *(_QWORD *)(v0 + 1328);
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v60 = swift_slowAlloc(32, -1);
        v235[0] = v60;
        *(_DWORD *)v59 = 136446210;
        v4(v57, v56, v58);
        v61 = String.init<A>(describing:)(v57, v58);
        v63 = v62;
        *(_QWORD *)(v0 + 592) = sub_100322200(v61, v62, v235);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600);
        v64 = swift_bridgeObjectRelease(v63);
        v65 = *(void (**)(uint64_t, uint64_t, __n128))(v227 + 8);
        v65(v56, v58, v64);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Unknown parsed id type: %{public}s", v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        v66 = v231;
        v67 = v58;
      }
      else
      {
        v90 = *(_QWORD *)(v0 + 1336);
        v91 = *(_QWORD *)(v0 + 1328);

        v65 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
        ((void (*)(uint64_t, uint64_t))v65)(v56, v91);
        v66 = v55;
        v67 = v91;
      }
      ((void (*)(uint64_t, uint64_t))v65)(v66, v67);
      v92 = *(_QWORD *)(v0 + 1360);
      v93 = *(_QWORD *)(v0 + 1328);
      v94 = *(_QWORD *)(v0 + 624);
      *(_QWORD *)(v94 + 32) = 0;
      *(_OWORD *)v94 = 0u;
      *(_OWORD *)(v94 + 16) = 0u;
      ((void (*)(uint64_t, uint64_t))v65)(v92, v93);
    }
    goto LABEL_27;
  }
  v6 = *(uint64_t **)(v0 + 1360);
  (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 1336) + 96))(v6, *(_QWORD *)(v0 + 1328));
  v7 = *v6;
  v8 = v6[1];
  v9 = v6[2];
  v10 = v6[3];
  if (qword_10119B928 != -1)
    swift_once(&qword_10119B928, sub_100108530);
  v11 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 1376) = sub_100048B14(v11, (uint64_t)qword_1011A1660);
  swift_bridgeObjectRetain_n(v8, 2);
  v12 = swift_bridgeObjectRetain_n(v10, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v229 = v7;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v224 = swift_slowAlloc(64, -1);
    v235[0] = v224;
    *(_DWORD *)v15 = 136446466;
    swift_bridgeObjectRetain();
    v16 = MusicItemID.description.getter(v7, v8);
    v18 = v17;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v0 + 608) = sub_100322200(v16, v18, v235);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 608, v0 + 616);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 616) = sub_100322200(v9, v10, v235);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Parsed to catalog id: %{public}s %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v224, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v224, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v8, 2);
    swift_bridgeObjectRelease_n(v10, 2);
  }

  if (v9 == 0x736D75626C61 && v10 == 0xE600000000000000)
  {
    v45 = v8;
    v46 = 0xE600000000000000;
LABEL_21:
    swift_bridgeObjectRelease(v46);
    v68 = *(_QWORD *)(v0 + 1304);
    v69 = *(_QWORD *)(v0 + 1296);
    v70 = *(_QWORD *)(v0 + 1288);
    v71 = *(_QWORD *)(v0 + 1280);
    v72 = swift_getKeyPath(&unk_100EAB438);
    *(_QWORD *)(v0 + 456) = v229;
    *(_QWORD *)(v0 + 464) = v45;
    v73 = type metadata accessor for Album(0);
    *(_QWORD *)(v0 + 1384) = v73;
    v74 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v72, v0 + 456, v73, &protocol witness table for Album, v74);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v70 + 104))(v69, enum case for MusicDataRequest.Source.widgets(_:), v71);
    MusicCatalogResourceRequest.source.setter(v69, v68);
    v75 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 1392) = v75;
    *v75 = v0;
    v75[1] = sub_100103ABC;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1272), *(_QWORD *)(v0 + 1304));
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736D75626C61, 0xE600000000000000, v9, v10, 0) & 1) != 0)
  {
    v45 = v8;
    v46 = v10;
    goto LABEL_21;
  }
  if (v9 == 0x7473696C79616C70 && v10 == 0xE900000000000073)
  {
    v104 = v8;
    v105 = 0xE900000000000073;
LABEL_35:
    swift_bridgeObjectRelease(v105);
    v115 = *(_QWORD *)(v0 + 1296);
    v116 = *(_QWORD *)(v0 + 1288);
    v117 = *(_QWORD *)(v0 + 1280);
    v118 = *(_QWORD *)(v0 + 1168);
    v119 = swift_getKeyPath(&unk_100EAB410);
    *(_QWORD *)(v0 + 392) = v229;
    *(_QWORD *)(v0 + 400) = v104;
    v120 = type metadata accessor for Playlist(0);
    *(_QWORD *)(v0 + 1408) = v120;
    v121 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v119, v0 + 392, v120, &protocol witness table for Playlist, v121);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v116 + 104))(v115, enum case for MusicDataRequest.Source.widgets(_:), v117);
    MusicCatalogResourceRequest.source.setter(v115, v118);
    v122 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 1416) = v122;
    *v122 = v0;
    v122[1] = sub_1001041B8;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1160), *(_QWORD *)(v0 + 1168));
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE900000000000073, v9, v10, 0) & 1) != 0)
  {
    v104 = v8;
    v105 = v10;
    goto LABEL_35;
  }
  if (v9 == 0x73676E6F73 && v10 == 0xE500000000000000)
  {
    v132 = v8;
    v133 = 0xE500000000000000;
LABEL_45:
    swift_bridgeObjectRelease(v133);
    v149 = *(_QWORD *)(v0 + 1296);
    v150 = *(_QWORD *)(v0 + 1288);
    v151 = *(_QWORD *)(v0 + 1280);
    v152 = *(_QWORD *)(v0 + 1056);
    v153 = swift_getKeyPath(&unk_100EAB3E8);
    *(_QWORD *)(v0 + 408) = v229;
    *(_QWORD *)(v0 + 416) = v132;
    v154 = type metadata accessor for Song(0);
    *(_QWORD *)(v0 + 1432) = v154;
    v155 = sub_100048748(&qword_10119EB78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v153, v0 + 408, v154, &protocol witness table for Song, v155);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v150 + 104))(v149, enum case for MusicDataRequest.Source.widgets(_:), v151);
    MusicCatalogResourceRequest.source.setter(v149, v152);
    v156 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 1440) = v156;
    *v156 = v0;
    v156[1] = sub_1001048B4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1056));
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73676E6F73, 0xE500000000000000, v9, v10, 0) & 1) != 0)
  {
    v132 = v8;
    v133 = v10;
    goto LABEL_45;
  }
  if (v9 != 0x736E6F6974617473 || v10 != 0xE800000000000000)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736E6F6974617473, 0xE800000000000000, v9, v10, 0) & 1) != 0)
    {
      v162 = v8;
      v163 = v10;
      goto LABEL_53;
    }
    v172 = v9;
    swift_bridgeObjectRelease(v8);
    v173 = swift_bridgeObjectRetain();
    v174 = Logger.logObject.getter(v173);
    v175 = static os_log_type_t.error.getter();
    v176 = os_log_type_enabled(v174, v175);
    v177 = *(_QWORD *)(v0 + 1368);
    v178 = *(_QWORD *)(v0 + 1336);
    v179 = *(_QWORD *)(v0 + 1328);
    if (v176)
    {
      v234 = *(_QWORD *)(v0 + 1328);
      v180 = (uint8_t *)swift_slowAlloc(12, -1);
      v226 = v177;
      v181 = swift_slowAlloc(32, -1);
      v235[0] = v181;
      *(_DWORD *)v180 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 504) = sub_100322200(v172, v10, v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 504, v0 + 512);
      swift_bridgeObjectRelease_n(v10, 3);
      _os_log_impl((void *)&_mh_execute_header, v174, v175, "Unsupported catalog type: \"%{public}s\"", v180, 0xCu);
      swift_arrayDestroy(v181, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v181, -1, -1);
      swift_slowDealloc(v180, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v226, v234);
    }
    else
    {

      swift_bridgeObjectRelease_n(v10, 2);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v177, v179);
    }
    v182 = *(_QWORD *)(v0 + 624);
    *(_QWORD *)(v182 + 32) = 0;
    *(_OWORD *)v182 = 0u;
    *(_OWORD *)(v182 + 16) = 0u;
LABEL_27:
    v95 = *(_QWORD *)(v0 + 1360);
    v96 = *(_QWORD *)(v0 + 1352);
    v97 = *(_QWORD *)(v0 + 1344);
    v98 = *(_QWORD *)(v0 + 1320);
    v99 = *(_QWORD *)(v0 + 1296);
    v100 = *(_QWORD *)(v0 + 1272);
    v101 = *(_QWORD *)(v0 + 1264);
    v102 = *(_QWORD *)(v0 + 1240);
    v103 = *(_QWORD *)(v0 + 1232);
    v183 = *(_QWORD *)(v0 + 1224);
    v184 = *(_QWORD *)(v0 + 1200);
    v185 = *(_QWORD *)(v0 + 1192);
    v186 = *(_QWORD *)(v0 + 1184);
    v187 = *(_QWORD *)(v0 + 1160);
    v188 = *(_QWORD *)(v0 + 1152);
    v189 = *(_QWORD *)(v0 + 1128);
    v190 = *(_QWORD *)(v0 + 1120);
    v191 = *(_QWORD *)(v0 + 1112);
    v192 = *(_QWORD *)(v0 + 1088);
    v193 = *(_QWORD *)(v0 + 1080);
    v194 = *(_QWORD *)(v0 + 1072);
    v195 = *(_QWORD *)(v0 + 1048);
    v196 = *(_QWORD *)(v0 + 1040);
    v197 = *(_QWORD *)(v0 + 1016);
    v198 = *(_QWORD *)(v0 + 1008);
    v199 = *(_QWORD *)(v0 + 1000);
    v200 = *(_QWORD *)(v0 + 976);
    v201 = *(_QWORD *)(v0 + 968);
    v202 = *(_QWORD *)(v0 + 960);
    v203 = *(_QWORD *)(v0 + 936);
    v204 = *(_QWORD *)(v0 + 928);
    v205 = *(_QWORD *)(v0 + 904);
    v206 = *(_QWORD *)(v0 + 896);
    v207 = *(_QWORD *)(v0 + 872);
    v208 = *(_QWORD *)(v0 + 864);
    v209 = *(_QWORD *)(v0 + 856);
    v210 = *(_QWORD *)(v0 + 848);
    v211 = *(_QWORD *)(v0 + 840);
    v212 = *(_QWORD *)(v0 + 832);
    v213 = *(_QWORD *)(v0 + 808);
    v214 = *(_QWORD *)(v0 + 784);
    v215 = *(_QWORD *)(v0 + 776);
    v218 = *(_QWORD *)(v0 + 752);
    v219 = *(_QWORD *)(v0 + 728);
    v222 = *(_QWORD *)(v0 + 720);
    v225 = *(_QWORD *)(v0 + 696);
    v228 = *(_QWORD *)(v0 + 672);
    v232 = *(_QWORD *)(v0 + 664);
    swift_task_dealloc(*(_QWORD *)(v0 + 1368));
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v183);
    swift_task_dealloc(v184);
    swift_task_dealloc(v185);
    swift_task_dealloc(v186);
    swift_task_dealloc(v187);
    swift_task_dealloc(v188);
    swift_task_dealloc(v189);
    swift_task_dealloc(v190);
    swift_task_dealloc(v191);
    swift_task_dealloc(v192);
    swift_task_dealloc(v193);
    swift_task_dealloc(v194);
    swift_task_dealloc(v195);
    swift_task_dealloc(v196);
    swift_task_dealloc(v197);
    swift_task_dealloc(v198);
    swift_task_dealloc(v199);
    swift_task_dealloc(v200);
    swift_task_dealloc(v201);
    swift_task_dealloc(v202);
    swift_task_dealloc(v203);
    swift_task_dealloc(v204);
    swift_task_dealloc(v205);
    swift_task_dealloc(v206);
    swift_task_dealloc(v207);
    swift_task_dealloc(v208);
    swift_task_dealloc(v209);
    swift_task_dealloc(v210);
    swift_task_dealloc(v211);
    swift_task_dealloc(v212);
    swift_task_dealloc(v213);
    swift_task_dealloc(v214);
    swift_task_dealloc(v215);
    swift_task_dealloc(v218);
    swift_task_dealloc(v219);
    swift_task_dealloc(v222);
    swift_task_dealloc(v225);
    swift_task_dealloc(v228);
    swift_task_dealloc(v232);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v162 = v8;
  v163 = 0xE800000000000000;
LABEL_53:
  swift_bridgeObjectRelease(v163);
  v164 = *(_QWORD *)(v0 + 1296);
  v165 = *(_QWORD *)(v0 + 1288);
  v166 = *(_QWORD *)(v0 + 1280);
  v167 = *(_QWORD *)(v0 + 944);
  v168 = swift_getKeyPath(&unk_100EAB3C0);
  *(_QWORD *)(v0 + 472) = v229;
  *(_QWORD *)(v0 + 480) = v162;
  v169 = type metadata accessor for Station(0);
  *(_QWORD *)(v0 + 1456) = v169;
  v170 = sub_100048748(&qword_10119FEC0, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
  MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v168, v0 + 472, v169, &protocol witness table for Station, v170);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v165 + 104))(v164, enum case for MusicDataRequest.Source.widgets(_:), v166);
  MusicCatalogResourceRequest.source.setter(v164, v167);
  v171 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  *(_QWORD *)(v0 + 1464) = v171;
  *v171 = v0;
  v171[1] = sub_100104FB0;
  return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 936), *(_QWORD *)(v0 + 944));
}

uint64_t sub_100103ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1392);
  *(_QWORD *)(*(_QWORD *)v1 + 1400) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100106C48;
  else
    v3 = sub_100103B20;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100103B20()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1256) + 16))(*(_QWORD *)(v0 + 1264), *(_QWORD *)(v0 + 1272), *(_QWORD *)(v0 + 1248));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v92 = v0 + 16;
  v94 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v89 = *(_QWORD *)(v0 + 1256);
    v4 = *(_QWORD *)(v0 + 1248);
    v84 = *(_QWORD *)(v0 + 1264);
    v86 = v4;
    v5 = *(_QWORD *)(v0 + 1240);
    v82 = *(_QWORD *)(v0 + 1216);
    v6 = *(_QWORD *)(v0 + 1208);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v96 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicCatalogResourceResponse.items.getter(v4);
    v9 = sub_100049F28(&qword_1011A16F8, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v5, v6);
    *(_QWORD *)(v0 + 600) = sub_100322200(v10, v12, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v0 + 608);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v89 + 8);
    v14(v84, v86, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found catalog albums: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 1256) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1264), *(_QWORD *)(v0 + 1248));
  }

  v15 = *(_QWORD *)(v0 + 1384);
  v16 = *(_QWORD *)(v0 + 1232);
  v17 = *(_QWORD *)(v0 + 1216);
  v18 = *(_QWORD *)(v0 + 1208);
  v19 = *(_QWORD *)(v0 + 1200);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 1248));
  sub_10031E1D4(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(_QWORD *)(v0 + 1320);
    v22 = *(_QWORD *)(v0 + 1312);
    v23 = *(_QWORD *)(v0 + 1304);
    v24 = *(_QWORD *)(v0 + 1200);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1272), *(_QWORD *)(v0 + 1248));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    sub_10004FF60(v24, &qword_1011A8FA0);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 1384);
    v90 = *(_QWORD *)(v0 + 1320);
    v26 = *(_QWORD *)(v0 + 1312);
    v27 = *(_QWORD *)(v0 + 1304);
    v28 = *(_QWORD *)(v0 + 1272);
    v29 = *(_QWORD *)(v0 + 1248);
    v30 = *(_QWORD *)(v0 + 1200);
    *(_QWORD *)(v0 + 80) = v25;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Album;
    v31 = sub_100049F68((_QWORD *)(v0 + 56));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v31, v30, v25);
    ((void (*)(uint64_t, uint64_t))v14)(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v90, v27);
  }
  sub_100065228(v0 + 56, v92, &qword_1011A16C8);
  sub_10004A160(v92, (uint64_t)v94, &qword_1011A16C8);
  v32 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 1368);
  v34 = *(_QWORD *)(v0 + 1336);
  v35 = *(_QWORD *)(v0 + 1328);
  v36 = *(_QWORD *)(v0 + 624);
  if (v32)
  {
    v37 = *(_QWORD *)(v0 + 288);
    v38 = sub_100007E68(v94, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v36 + 24) = v32;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 8);
    v39 = sub_100049F68((_QWORD *)v36);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v39, v38, v32);
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  }
  else
  {
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10004FF60((uint64_t)v94, &qword_1011A16C8);
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(_QWORD *)(v36 + 32) = 0;
  }
  v40 = *(_QWORD *)(v0 + 1360);
  v41 = *(_QWORD *)(v0 + 1352);
  v42 = *(_QWORD *)(v0 + 1344);
  v43 = *(_QWORD *)(v0 + 1320);
  v44 = *(_QWORD *)(v0 + 1296);
  v45 = *(_QWORD *)(v0 + 1272);
  v46 = *(_QWORD *)(v0 + 1264);
  v47 = *(_QWORD *)(v0 + 1240);
  v48 = *(_QWORD *)(v0 + 1232);
  v50 = *(_QWORD *)(v0 + 1224);
  v51 = *(_QWORD *)(v0 + 1200);
  v52 = *(_QWORD *)(v0 + 1192);
  v53 = *(_QWORD *)(v0 + 1184);
  v54 = *(_QWORD *)(v0 + 1160);
  v55 = *(_QWORD *)(v0 + 1152);
  v56 = *(_QWORD *)(v0 + 1128);
  v57 = *(_QWORD *)(v0 + 1120);
  v58 = *(_QWORD *)(v0 + 1112);
  v59 = *(_QWORD *)(v0 + 1088);
  v60 = *(_QWORD *)(v0 + 1080);
  v61 = *(_QWORD *)(v0 + 1072);
  v62 = *(_QWORD *)(v0 + 1048);
  v63 = *(_QWORD *)(v0 + 1040);
  v64 = *(_QWORD *)(v0 + 1016);
  v65 = *(_QWORD *)(v0 + 1008);
  v66 = *(_QWORD *)(v0 + 1000);
  v67 = *(_QWORD *)(v0 + 976);
  v68 = *(_QWORD *)(v0 + 968);
  v69 = *(_QWORD *)(v0 + 960);
  v70 = *(_QWORD *)(v0 + 936);
  v71 = *(_QWORD *)(v0 + 928);
  v72 = *(_QWORD *)(v0 + 904);
  v73 = *(_QWORD *)(v0 + 896);
  v74 = *(_QWORD *)(v0 + 872);
  v75 = *(_QWORD *)(v0 + 864);
  v76 = *(_QWORD *)(v0 + 856);
  v77 = *(_QWORD *)(v0 + 848);
  v78 = *(_QWORD *)(v0 + 840);
  v79 = *(_QWORD *)(v0 + 832);
  v80 = *(_QWORD *)(v0 + 808);
  v81 = *(_QWORD *)(v0 + 784);
  v83 = *(_QWORD *)(v0 + 776);
  v85 = *(_QWORD *)(v0 + 752);
  v87 = *(_QWORD *)(v0 + 728);
  v88 = *(_QWORD *)(v0 + 720);
  v91 = *(_QWORD *)(v0 + 696);
  v93 = *(_QWORD *)(v0 + 672);
  v95 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001041B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1416);
  *(_QWORD *)(*(_QWORD *)v1 + 1424) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100106F64;
  else
    v3 = sub_10010421C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010421C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1144) + 16))(*(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1160), *(_QWORD *)(v0 + 1136));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v92 = v0 + 16;
  v94 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v89 = *(_QWORD *)(v0 + 1144);
    v4 = *(_QWORD *)(v0 + 1136);
    v84 = *(_QWORD *)(v0 + 1152);
    v86 = v4;
    v5 = *(_QWORD *)(v0 + 1128);
    v82 = *(_QWORD *)(v0 + 1104);
    v6 = *(_QWORD *)(v0 + 1096);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v96 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicCatalogResourceResponse.items.getter(v4);
    v9 = sub_100049F28(&qword_1011A16F0, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v5, v6);
    *(_QWORD *)(v0 + 576) = sub_100322200(v10, v12, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 576, v0 + 584);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v89 + 8);
    v14(v84, v86, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found catalog playlists: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 1144) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1136));
  }

  v15 = *(_QWORD *)(v0 + 1408);
  v16 = *(_QWORD *)(v0 + 1120);
  v17 = *(_QWORD *)(v0 + 1104);
  v18 = *(_QWORD *)(v0 + 1096);
  v19 = *(_QWORD *)(v0 + 1088);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 1136));
  sub_10031E394(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(_QWORD *)(v0 + 1184);
    v22 = *(_QWORD *)(v0 + 1176);
    v23 = *(_QWORD *)(v0 + 1168);
    v24 = *(_QWORD *)(v0 + 1088);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1160), *(_QWORD *)(v0 + 1136));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    sub_10004FF60(v24, &qword_1011A30F0);
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_QWORD *)(v0 + 168) = 0;
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 1408);
    v90 = *(_QWORD *)(v0 + 1184);
    v26 = *(_QWORD *)(v0 + 1176);
    v27 = *(_QWORD *)(v0 + 1168);
    v28 = *(_QWORD *)(v0 + 1160);
    v29 = *(_QWORD *)(v0 + 1136);
    v30 = *(_QWORD *)(v0 + 1088);
    *(_QWORD *)(v0 + 160) = v25;
    *(_QWORD *)(v0 + 168) = &protocol witness table for Playlist;
    v31 = sub_100049F68((_QWORD *)(v0 + 136));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v31, v30, v25);
    ((void (*)(uint64_t, uint64_t))v14)(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v90, v27);
  }
  sub_100065228(v0 + 136, v92, &qword_1011A16C8);
  sub_10004A160(v92, (uint64_t)v94, &qword_1011A16C8);
  v32 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 1368);
  v34 = *(_QWORD *)(v0 + 1336);
  v35 = *(_QWORD *)(v0 + 1328);
  v36 = *(_QWORD *)(v0 + 624);
  if (v32)
  {
    v37 = *(_QWORD *)(v0 + 288);
    v38 = sub_100007E68(v94, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v36 + 24) = v32;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 8);
    v39 = sub_100049F68((_QWORD *)v36);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v39, v38, v32);
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  }
  else
  {
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10004FF60((uint64_t)v94, &qword_1011A16C8);
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(_QWORD *)(v36 + 32) = 0;
  }
  v40 = *(_QWORD *)(v0 + 1360);
  v41 = *(_QWORD *)(v0 + 1352);
  v42 = *(_QWORD *)(v0 + 1344);
  v43 = *(_QWORD *)(v0 + 1320);
  v44 = *(_QWORD *)(v0 + 1296);
  v45 = *(_QWORD *)(v0 + 1272);
  v46 = *(_QWORD *)(v0 + 1264);
  v47 = *(_QWORD *)(v0 + 1240);
  v48 = *(_QWORD *)(v0 + 1232);
  v50 = *(_QWORD *)(v0 + 1224);
  v51 = *(_QWORD *)(v0 + 1200);
  v52 = *(_QWORD *)(v0 + 1192);
  v53 = *(_QWORD *)(v0 + 1184);
  v54 = *(_QWORD *)(v0 + 1160);
  v55 = *(_QWORD *)(v0 + 1152);
  v56 = *(_QWORD *)(v0 + 1128);
  v57 = *(_QWORD *)(v0 + 1120);
  v58 = *(_QWORD *)(v0 + 1112);
  v59 = *(_QWORD *)(v0 + 1088);
  v60 = *(_QWORD *)(v0 + 1080);
  v61 = *(_QWORD *)(v0 + 1072);
  v62 = *(_QWORD *)(v0 + 1048);
  v63 = *(_QWORD *)(v0 + 1040);
  v64 = *(_QWORD *)(v0 + 1016);
  v65 = *(_QWORD *)(v0 + 1008);
  v66 = *(_QWORD *)(v0 + 1000);
  v67 = *(_QWORD *)(v0 + 976);
  v68 = *(_QWORD *)(v0 + 968);
  v69 = *(_QWORD *)(v0 + 960);
  v70 = *(_QWORD *)(v0 + 936);
  v71 = *(_QWORD *)(v0 + 928);
  v72 = *(_QWORD *)(v0 + 904);
  v73 = *(_QWORD *)(v0 + 896);
  v74 = *(_QWORD *)(v0 + 872);
  v75 = *(_QWORD *)(v0 + 864);
  v76 = *(_QWORD *)(v0 + 856);
  v77 = *(_QWORD *)(v0 + 848);
  v78 = *(_QWORD *)(v0 + 840);
  v79 = *(_QWORD *)(v0 + 832);
  v80 = *(_QWORD *)(v0 + 808);
  v81 = *(_QWORD *)(v0 + 784);
  v83 = *(_QWORD *)(v0 + 776);
  v85 = *(_QWORD *)(v0 + 752);
  v87 = *(_QWORD *)(v0 + 728);
  v88 = *(_QWORD *)(v0 + 720);
  v91 = *(_QWORD *)(v0 + 696);
  v93 = *(_QWORD *)(v0 + 672);
  v95 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001048B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1440);
  *(_QWORD *)(*(_QWORD *)v1 + 1448) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100107280;
  else
    v3 = sub_100104918;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100104918()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1032) + 16))(*(_QWORD *)(v0 + 1040), *(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1024));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v92 = v0 + 16;
  v94 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v89 = *(_QWORD *)(v0 + 1032);
    v4 = *(_QWORD *)(v0 + 1024);
    v84 = *(_QWORD *)(v0 + 1040);
    v86 = v4;
    v5 = *(_QWORD *)(v0 + 1016);
    v82 = *(_QWORD *)(v0 + 992);
    v6 = *(_QWORD *)(v0 + 984);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v96 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicCatalogResourceResponse.items.getter(v4);
    v9 = sub_100049F28(&qword_1011A16E8, (uint64_t *)&unk_1011B8DA0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v5, v6);
    *(_QWORD *)(v0 + 552) = sub_100322200(v10, v12, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 552, v0 + 560);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v89 + 8);
    v14(v84, v86, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found catalog songs: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 1032) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1040), *(_QWORD *)(v0 + 1024));
  }

  v15 = *(_QWORD *)(v0 + 1432);
  v16 = *(_QWORD *)(v0 + 1008);
  v17 = *(_QWORD *)(v0 + 992);
  v18 = *(_QWORD *)(v0 + 984);
  v19 = *(_QWORD *)(v0 + 976);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 1024));
  sub_10031E3E8(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(_QWORD *)(v0 + 1072);
    v22 = *(_QWORD *)(v0 + 1064);
    v23 = *(_QWORD *)(v0 + 1056);
    v24 = *(_QWORD *)(v0 + 976);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1024));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    sub_10004FF60(v24, &qword_10119E480);
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    *(_QWORD *)(v0 + 368) = 0;
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 1432);
    v90 = *(_QWORD *)(v0 + 1072);
    v26 = *(_QWORD *)(v0 + 1064);
    v27 = *(_QWORD *)(v0 + 1056);
    v28 = *(_QWORD *)(v0 + 1048);
    v29 = *(_QWORD *)(v0 + 1024);
    v30 = *(_QWORD *)(v0 + 976);
    *(_QWORD *)(v0 + 360) = v25;
    *(_QWORD *)(v0 + 368) = &protocol witness table for Song;
    v31 = sub_100049F68((_QWORD *)(v0 + 336));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v31, v30, v25);
    ((void (*)(uint64_t, uint64_t))v14)(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v90, v27);
  }
  sub_100065228(v0 + 336, v92, &qword_1011A16C8);
  sub_10004A160(v92, (uint64_t)v94, &qword_1011A16C8);
  v32 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 1368);
  v34 = *(_QWORD *)(v0 + 1336);
  v35 = *(_QWORD *)(v0 + 1328);
  v36 = *(_QWORD *)(v0 + 624);
  if (v32)
  {
    v37 = *(_QWORD *)(v0 + 288);
    v38 = sub_100007E68(v94, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v36 + 24) = v32;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 8);
    v39 = sub_100049F68((_QWORD *)v36);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v39, v38, v32);
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  }
  else
  {
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10004FF60((uint64_t)v94, &qword_1011A16C8);
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(_QWORD *)(v36 + 32) = 0;
  }
  v40 = *(_QWORD *)(v0 + 1360);
  v41 = *(_QWORD *)(v0 + 1352);
  v42 = *(_QWORD *)(v0 + 1344);
  v43 = *(_QWORD *)(v0 + 1320);
  v44 = *(_QWORD *)(v0 + 1296);
  v45 = *(_QWORD *)(v0 + 1272);
  v46 = *(_QWORD *)(v0 + 1264);
  v47 = *(_QWORD *)(v0 + 1240);
  v48 = *(_QWORD *)(v0 + 1232);
  v50 = *(_QWORD *)(v0 + 1224);
  v51 = *(_QWORD *)(v0 + 1200);
  v52 = *(_QWORD *)(v0 + 1192);
  v53 = *(_QWORD *)(v0 + 1184);
  v54 = *(_QWORD *)(v0 + 1160);
  v55 = *(_QWORD *)(v0 + 1152);
  v56 = *(_QWORD *)(v0 + 1128);
  v57 = *(_QWORD *)(v0 + 1120);
  v58 = *(_QWORD *)(v0 + 1112);
  v59 = *(_QWORD *)(v0 + 1088);
  v60 = *(_QWORD *)(v0 + 1080);
  v61 = *(_QWORD *)(v0 + 1072);
  v62 = *(_QWORD *)(v0 + 1048);
  v63 = *(_QWORD *)(v0 + 1040);
  v64 = *(_QWORD *)(v0 + 1016);
  v65 = *(_QWORD *)(v0 + 1008);
  v66 = *(_QWORD *)(v0 + 1000);
  v67 = *(_QWORD *)(v0 + 976);
  v68 = *(_QWORD *)(v0 + 968);
  v69 = *(_QWORD *)(v0 + 960);
  v70 = *(_QWORD *)(v0 + 936);
  v71 = *(_QWORD *)(v0 + 928);
  v72 = *(_QWORD *)(v0 + 904);
  v73 = *(_QWORD *)(v0 + 896);
  v74 = *(_QWORD *)(v0 + 872);
  v75 = *(_QWORD *)(v0 + 864);
  v76 = *(_QWORD *)(v0 + 856);
  v77 = *(_QWORD *)(v0 + 848);
  v78 = *(_QWORD *)(v0 + 840);
  v79 = *(_QWORD *)(v0 + 832);
  v80 = *(_QWORD *)(v0 + 808);
  v81 = *(_QWORD *)(v0 + 784);
  v83 = *(_QWORD *)(v0 + 776);
  v85 = *(_QWORD *)(v0 + 752);
  v87 = *(_QWORD *)(v0 + 728);
  v88 = *(_QWORD *)(v0 + 720);
  v91 = *(_QWORD *)(v0 + 696);
  v93 = *(_QWORD *)(v0 + 672);
  v95 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100104FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1464);
  *(_QWORD *)(*(_QWORD *)v1 + 1472) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10010759C;
  else
    v3 = sub_100105014;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100105014()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 920) + 16))(*(_QWORD *)(v0 + 928), *(_QWORD *)(v0 + 936), *(_QWORD *)(v0 + 912));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v92 = v0 + 16;
  v94 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v89 = *(_QWORD *)(v0 + 920);
    v4 = *(_QWORD *)(v0 + 912);
    v84 = *(_QWORD *)(v0 + 928);
    v86 = v4;
    v5 = *(_QWORD *)(v0 + 904);
    v82 = *(_QWORD *)(v0 + 888);
    v6 = *(_QWORD *)(v0 + 880);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v96 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicCatalogResourceResponse.items.getter(v4);
    v9 = sub_100049F28((unint64_t *)&unk_1011A1700, &qword_10119FDA0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v5, v6);
    *(_QWORD *)(v0 + 528) = sub_100322200(v10, v12, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 528, v0 + 536);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v89 + 8);
    v14(v84, v86, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found catalog stations: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 920) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 928), *(_QWORD *)(v0 + 912));
  }

  v15 = *(_QWORD *)(v0 + 1456);
  v16 = *(_QWORD *)(v0 + 896);
  v17 = *(_QWORD *)(v0 + 888);
  v18 = *(_QWORD *)(v0 + 880);
  v19 = *(_QWORD *)(v0 + 872);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 912));
  sub_10031E404(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(_QWORD *)(v0 + 960);
    v22 = *(_QWORD *)(v0 + 952);
    v23 = *(_QWORD *)(v0 + 944);
    v24 = *(_QWORD *)(v0 + 872);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 936), *(_QWORD *)(v0 + 912));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    sub_10004FF60(v24, &qword_10119FD98);
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_QWORD *)(v0 + 208) = 0;
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 1456);
    v90 = *(_QWORD *)(v0 + 960);
    v26 = *(_QWORD *)(v0 + 952);
    v27 = *(_QWORD *)(v0 + 944);
    v28 = *(_QWORD *)(v0 + 936);
    v29 = *(_QWORD *)(v0 + 912);
    v30 = *(_QWORD *)(v0 + 872);
    *(_QWORD *)(v0 + 200) = v25;
    *(_QWORD *)(v0 + 208) = &protocol witness table for Station;
    v31 = sub_100049F68((_QWORD *)(v0 + 176));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v31, v30, v25);
    ((void (*)(uint64_t, uint64_t))v14)(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v90, v27);
  }
  sub_100065228(v0 + 176, v92, &qword_1011A16C8);
  sub_10004A160(v92, (uint64_t)v94, &qword_1011A16C8);
  v32 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 1368);
  v34 = *(_QWORD *)(v0 + 1336);
  v35 = *(_QWORD *)(v0 + 1328);
  v36 = *(_QWORD *)(v0 + 624);
  if (v32)
  {
    v37 = *(_QWORD *)(v0 + 288);
    v38 = sub_100007E68(v94, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v36 + 24) = v32;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 8);
    v39 = sub_100049F68((_QWORD *)v36);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v39, v38, v32);
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  }
  else
  {
    sub_10004FF60(v92, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10004FF60((uint64_t)v94, &qword_1011A16C8);
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(_QWORD *)(v36 + 32) = 0;
  }
  v40 = *(_QWORD *)(v0 + 1360);
  v41 = *(_QWORD *)(v0 + 1352);
  v42 = *(_QWORD *)(v0 + 1344);
  v43 = *(_QWORD *)(v0 + 1320);
  v44 = *(_QWORD *)(v0 + 1296);
  v45 = *(_QWORD *)(v0 + 1272);
  v46 = *(_QWORD *)(v0 + 1264);
  v47 = *(_QWORD *)(v0 + 1240);
  v48 = *(_QWORD *)(v0 + 1232);
  v50 = *(_QWORD *)(v0 + 1224);
  v51 = *(_QWORD *)(v0 + 1200);
  v52 = *(_QWORD *)(v0 + 1192);
  v53 = *(_QWORD *)(v0 + 1184);
  v54 = *(_QWORD *)(v0 + 1160);
  v55 = *(_QWORD *)(v0 + 1152);
  v56 = *(_QWORD *)(v0 + 1128);
  v57 = *(_QWORD *)(v0 + 1120);
  v58 = *(_QWORD *)(v0 + 1112);
  v59 = *(_QWORD *)(v0 + 1088);
  v60 = *(_QWORD *)(v0 + 1080);
  v61 = *(_QWORD *)(v0 + 1072);
  v62 = *(_QWORD *)(v0 + 1048);
  v63 = *(_QWORD *)(v0 + 1040);
  v64 = *(_QWORD *)(v0 + 1016);
  v65 = *(_QWORD *)(v0 + 1008);
  v66 = *(_QWORD *)(v0 + 1000);
  v67 = *(_QWORD *)(v0 + 976);
  v68 = *(_QWORD *)(v0 + 968);
  v69 = *(_QWORD *)(v0 + 960);
  v70 = *(_QWORD *)(v0 + 936);
  v71 = *(_QWORD *)(v0 + 928);
  v72 = *(_QWORD *)(v0 + 904);
  v73 = *(_QWORD *)(v0 + 896);
  v74 = *(_QWORD *)(v0 + 872);
  v75 = *(_QWORD *)(v0 + 864);
  v76 = *(_QWORD *)(v0 + 856);
  v77 = *(_QWORD *)(v0 + 848);
  v78 = *(_QWORD *)(v0 + 840);
  v79 = *(_QWORD *)(v0 + 832);
  v80 = *(_QWORD *)(v0 + 808);
  v81 = *(_QWORD *)(v0 + 784);
  v83 = *(_QWORD *)(v0 + 776);
  v85 = *(_QWORD *)(v0 + 752);
  v87 = *(_QWORD *)(v0 + 728);
  v88 = *(_QWORD *)(v0 + 720);
  v91 = *(_QWORD *)(v0 + 696);
  v93 = *(_QWORD *)(v0 + 672);
  v95 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001056AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1504);
  *(_QWORD *)(*(_QWORD *)v1 + 1512) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001078B8;
  else
    v3 = sub_100105710;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100105710()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 768) + 16))(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 760));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v99 = v0 + 16;
  v101 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 1240);
    v91 = *(_QWORD *)(v0 + 1216);
    v5 = *(_QWORD *)(v0 + 1208);
    v96 = *(_QWORD *)(v0 + 768);
    v6 = *(_QWORD *)(v0 + 760);
    v86 = *(_QWORD *)(v0 + 776);
    v88 = v6;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v103 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicLibraryResponse.items.getter(v6);
    v9 = sub_100049F28(&qword_1011A16F8, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v5, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v4, v5);
    *(_QWORD *)(v0 + 512) = sub_100322200(v10, v12, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 512, v0 + 520);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v96 + 8);
    v14(v86, v88, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found library albums: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 768) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 760));
  }

  v15 = *(_QWORD *)(v0 + 1496);
  v16 = *(_QWORD *)(v0 + 1224);
  v17 = *(_QWORD *)(v0 + 1216);
  v18 = *(_QWORD *)(v0 + 1208);
  v19 = *(_QWORD *)(v0 + 1192);
  MusicLibraryResponse.items.getter(*(_QWORD *)(v0 + 760));
  sub_10031E1D4(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v22 = *(_QWORD *)(v0 + 1192);
    v23 = *(_QWORD *)(v0 + 864);
    v24 = *(_QWORD *)(v0 + 816);
    v25 = *(_QWORD *)(v0 + 808);
    v26 = *(_QWORD *)(v0 + 800);
    v27 = *(_QWORD *)(v0 + 792);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 760));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    v21(v23, v24);
    sub_10004FF60(v22, &qword_1011A8FA0);
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_QWORD *)(v0 + 128) = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 1496);
    v29 = *(_QWORD *)(v0 + 1192);
    v94 = *(_QWORD *)(v0 + 864);
    v97 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v89 = *(_QWORD *)(v0 + 808);
    v92 = *(_QWORD *)(v0 + 816);
    v30 = *(_QWORD *)(v0 + 800);
    v31 = *(_QWORD *)(v0 + 792);
    v32 = *(_QWORD *)(v0 + 784);
    v33 = (void (*)(uint64_t, uint64_t))v14;
    v34 = *(_QWORD *)(v0 + 760);
    *(_QWORD *)(v0 + 120) = v28;
    *(_QWORD *)(v0 + 128) = &protocol witness table for Album;
    v35 = sub_100049F68((_QWORD *)(v0 + 96));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v35, v29, v28);
    v33(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v89, v31);
    v97(v94, v92);
  }
  sub_100065228(v0 + 96, v99, &qword_1011A16C8);
  sub_10004A160(v99, (uint64_t)v101, &qword_1011A16C8);
  v36 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 1368);
  v38 = *(_QWORD *)(v0 + 1336);
  v39 = *(_QWORD *)(v0 + 1328);
  v40 = *(_QWORD *)(v0 + 624);
  if (v36)
  {
    v41 = *(_QWORD *)(v0 + 288);
    v42 = sub_100007E68(v101, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v40 + 24) = v36;
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 8);
    v43 = sub_100049F68((_QWORD *)v40);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v43, v42, v36);
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v101);
  }
  else
  {
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_10004FF60((uint64_t)v101, &qword_1011A16C8);
    *(_OWORD *)v40 = 0u;
    *(_OWORD *)(v40 + 16) = 0u;
    *(_QWORD *)(v40 + 32) = 0;
  }
  v44 = *(_QWORD *)(v0 + 1360);
  v45 = *(_QWORD *)(v0 + 1352);
  v46 = *(_QWORD *)(v0 + 1344);
  v47 = *(_QWORD *)(v0 + 1320);
  v48 = *(_QWORD *)(v0 + 1296);
  v49 = *(_QWORD *)(v0 + 1272);
  v50 = *(_QWORD *)(v0 + 1264);
  v51 = *(_QWORD *)(v0 + 1240);
  v52 = *(_QWORD *)(v0 + 1232);
  v54 = *(_QWORD *)(v0 + 1224);
  v55 = *(_QWORD *)(v0 + 1200);
  v56 = *(_QWORD *)(v0 + 1192);
  v57 = *(_QWORD *)(v0 + 1184);
  v58 = *(_QWORD *)(v0 + 1160);
  v59 = *(_QWORD *)(v0 + 1152);
  v60 = *(_QWORD *)(v0 + 1128);
  v61 = *(_QWORD *)(v0 + 1120);
  v62 = *(_QWORD *)(v0 + 1112);
  v63 = *(_QWORD *)(v0 + 1088);
  v64 = *(_QWORD *)(v0 + 1080);
  v65 = *(_QWORD *)(v0 + 1072);
  v66 = *(_QWORD *)(v0 + 1048);
  v67 = *(_QWORD *)(v0 + 1040);
  v68 = *(_QWORD *)(v0 + 1016);
  v69 = *(_QWORD *)(v0 + 1008);
  v70 = *(_QWORD *)(v0 + 1000);
  v71 = *(_QWORD *)(v0 + 976);
  v72 = *(_QWORD *)(v0 + 968);
  v73 = *(_QWORD *)(v0 + 960);
  v74 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 928);
  v76 = *(_QWORD *)(v0 + 904);
  v77 = *(_QWORD *)(v0 + 896);
  v78 = *(_QWORD *)(v0 + 872);
  v79 = *(_QWORD *)(v0 + 864);
  v80 = *(_QWORD *)(v0 + 856);
  v81 = *(_QWORD *)(v0 + 848);
  v82 = *(_QWORD *)(v0 + 840);
  v83 = *(_QWORD *)(v0 + 832);
  v84 = *(_QWORD *)(v0 + 808);
  v85 = *(_QWORD *)(v0 + 784);
  v87 = *(_QWORD *)(v0 + 776);
  v90 = *(_QWORD *)(v0 + 752);
  v93 = *(_QWORD *)(v0 + 728);
  v95 = *(_QWORD *)(v0 + 720);
  v98 = *(_QWORD *)(v0 + 696);
  v100 = *(_QWORD *)(v0 + 672);
  v102 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100105DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1528);
  *(_QWORD *)(*(_QWORD *)v1 + 1536) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100107BEC;
  else
    v3 = sub_100105E44;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100105E44()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 712) + 16))(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 704));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v99 = v0 + 16;
  v101 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 1128);
    v91 = *(_QWORD *)(v0 + 1104);
    v5 = *(_QWORD *)(v0 + 1096);
    v96 = *(_QWORD *)(v0 + 712);
    v6 = *(_QWORD *)(v0 + 704);
    v86 = *(_QWORD *)(v0 + 720);
    v88 = v6;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v103 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicLibraryResponse.items.getter(v6);
    v9 = sub_100049F28(&qword_1011A16F0, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v5, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v4, v5);
    *(_QWORD *)(v0 + 536) = sub_100322200(v10, v12, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 536, v0 + 544);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v96 + 8);
    v14(v86, v88, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found library playlists: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 712) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 704));
  }

  v15 = *(_QWORD *)(v0 + 1520);
  v16 = *(_QWORD *)(v0 + 1112);
  v17 = *(_QWORD *)(v0 + 1104);
  v18 = *(_QWORD *)(v0 + 1096);
  v19 = *(_QWORD *)(v0 + 1080);
  MusicLibraryResponse.items.getter(*(_QWORD *)(v0 + 704));
  sub_10031E394(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v22 = *(_QWORD *)(v0 + 1080);
    v23 = *(_QWORD *)(v0 + 864);
    v24 = *(_QWORD *)(v0 + 816);
    v25 = *(_QWORD *)(v0 + 752);
    v26 = *(_QWORD *)(v0 + 744);
    v27 = *(_QWORD *)(v0 + 736);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 704));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    v21(v23, v24);
    sub_10004FF60(v22, &qword_1011A30F0);
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    *(_QWORD *)(v0 + 328) = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 1520);
    v29 = *(_QWORD *)(v0 + 1080);
    v94 = *(_QWORD *)(v0 + 864);
    v97 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v89 = *(_QWORD *)(v0 + 752);
    v92 = *(_QWORD *)(v0 + 816);
    v30 = *(_QWORD *)(v0 + 744);
    v31 = *(_QWORD *)(v0 + 736);
    v32 = *(_QWORD *)(v0 + 728);
    v33 = (void (*)(uint64_t, uint64_t))v14;
    v34 = *(_QWORD *)(v0 + 704);
    *(_QWORD *)(v0 + 320) = v28;
    *(_QWORD *)(v0 + 328) = &protocol witness table for Playlist;
    v35 = sub_100049F68((_QWORD *)(v0 + 296));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v35, v29, v28);
    v33(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v89, v31);
    v97(v94, v92);
  }
  sub_100065228(v0 + 296, v99, &qword_1011A16C8);
  sub_10004A160(v99, (uint64_t)v101, &qword_1011A16C8);
  v36 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 1368);
  v38 = *(_QWORD *)(v0 + 1336);
  v39 = *(_QWORD *)(v0 + 1328);
  v40 = *(_QWORD *)(v0 + 624);
  if (v36)
  {
    v41 = *(_QWORD *)(v0 + 288);
    v42 = sub_100007E68(v101, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v40 + 24) = v36;
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 8);
    v43 = sub_100049F68((_QWORD *)v40);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v43, v42, v36);
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v101);
  }
  else
  {
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_10004FF60((uint64_t)v101, &qword_1011A16C8);
    *(_OWORD *)v40 = 0u;
    *(_OWORD *)(v40 + 16) = 0u;
    *(_QWORD *)(v40 + 32) = 0;
  }
  v44 = *(_QWORD *)(v0 + 1360);
  v45 = *(_QWORD *)(v0 + 1352);
  v46 = *(_QWORD *)(v0 + 1344);
  v47 = *(_QWORD *)(v0 + 1320);
  v48 = *(_QWORD *)(v0 + 1296);
  v49 = *(_QWORD *)(v0 + 1272);
  v50 = *(_QWORD *)(v0 + 1264);
  v51 = *(_QWORD *)(v0 + 1240);
  v52 = *(_QWORD *)(v0 + 1232);
  v54 = *(_QWORD *)(v0 + 1224);
  v55 = *(_QWORD *)(v0 + 1200);
  v56 = *(_QWORD *)(v0 + 1192);
  v57 = *(_QWORD *)(v0 + 1184);
  v58 = *(_QWORD *)(v0 + 1160);
  v59 = *(_QWORD *)(v0 + 1152);
  v60 = *(_QWORD *)(v0 + 1128);
  v61 = *(_QWORD *)(v0 + 1120);
  v62 = *(_QWORD *)(v0 + 1112);
  v63 = *(_QWORD *)(v0 + 1088);
  v64 = *(_QWORD *)(v0 + 1080);
  v65 = *(_QWORD *)(v0 + 1072);
  v66 = *(_QWORD *)(v0 + 1048);
  v67 = *(_QWORD *)(v0 + 1040);
  v68 = *(_QWORD *)(v0 + 1016);
  v69 = *(_QWORD *)(v0 + 1008);
  v70 = *(_QWORD *)(v0 + 1000);
  v71 = *(_QWORD *)(v0 + 976);
  v72 = *(_QWORD *)(v0 + 968);
  v73 = *(_QWORD *)(v0 + 960);
  v74 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 928);
  v76 = *(_QWORD *)(v0 + 904);
  v77 = *(_QWORD *)(v0 + 896);
  v78 = *(_QWORD *)(v0 + 872);
  v79 = *(_QWORD *)(v0 + 864);
  v80 = *(_QWORD *)(v0 + 856);
  v81 = *(_QWORD *)(v0 + 848);
  v82 = *(_QWORD *)(v0 + 840);
  v83 = *(_QWORD *)(v0 + 832);
  v84 = *(_QWORD *)(v0 + 808);
  v85 = *(_QWORD *)(v0 + 784);
  v87 = *(_QWORD *)(v0 + 776);
  v90 = *(_QWORD *)(v0 + 752);
  v93 = *(_QWORD *)(v0 + 728);
  v95 = *(_QWORD *)(v0 + 720);
  v98 = *(_QWORD *)(v0 + 696);
  v100 = *(_QWORD *)(v0 + 672);
  v102 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100106514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1552);
  *(_QWORD *)(*(_QWORD *)v1 + 1560) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100107F20;
  else
    v3 = sub_100106578;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100106578()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 656) + 16))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 648));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v99 = v0 + 16;
  v101 = (_QWORD *)(v0 + 256);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 1016);
    v91 = *(_QWORD *)(v0 + 992);
    v5 = *(_QWORD *)(v0 + 984);
    v96 = *(_QWORD *)(v0 + 656);
    v6 = *(_QWORD *)(v0 + 648);
    v86 = *(_QWORD *)(v0 + 664);
    v88 = v6;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v103 = v8;
    *(_DWORD *)v7 = 136446210;
    MusicLibraryResponse.items.getter(v6);
    v9 = sub_100049F28(&qword_1011A16E8, (uint64_t *)&unk_1011B8DA0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v5, v9);
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v4, v5);
    *(_QWORD *)(v0 + 560) = sub_100322200(v10, v12, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568);
    v13 = swift_bridgeObjectRelease(v12);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v96 + 8);
    v14(v86, v88, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Found library songs: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 656) + 8);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 648));
  }

  v15 = *(_QWORD *)(v0 + 1544);
  v16 = *(_QWORD *)(v0 + 1000);
  v17 = *(_QWORD *)(v0 + 992);
  v18 = *(_QWORD *)(v0 + 984);
  v19 = *(_QWORD *)(v0 + 968);
  MusicLibraryResponse.items.getter(*(_QWORD *)(v0 + 648));
  sub_10031E3E8(v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v20 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v22 = *(_QWORD *)(v0 + 968);
    v23 = *(_QWORD *)(v0 + 864);
    v24 = *(_QWORD *)(v0 + 816);
    v25 = *(_QWORD *)(v0 + 696);
    v26 = *(_QWORD *)(v0 + 688);
    v27 = *(_QWORD *)(v0 + 680);
    ((void (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 648));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    v21(v23, v24);
    sub_10004FF60(v22, &qword_10119E480);
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(_QWORD *)(v0 + 248) = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 1544);
    v29 = *(_QWORD *)(v0 + 968);
    v94 = *(_QWORD *)(v0 + 864);
    v97 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v89 = *(_QWORD *)(v0 + 696);
    v92 = *(_QWORD *)(v0 + 816);
    v30 = *(_QWORD *)(v0 + 688);
    v31 = *(_QWORD *)(v0 + 680);
    v32 = *(_QWORD *)(v0 + 672);
    v33 = (void (*)(uint64_t, uint64_t))v14;
    v34 = *(_QWORD *)(v0 + 648);
    *(_QWORD *)(v0 + 240) = v28;
    *(_QWORD *)(v0 + 248) = &protocol witness table for Song;
    v35 = sub_100049F68((_QWORD *)(v0 + 216));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v35, v29, v28);
    v33(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v89, v31);
    v97(v94, v92);
  }
  sub_100065228(v0 + 216, v99, &qword_1011A16C8);
  sub_10004A160(v99, (uint64_t)v101, &qword_1011A16C8);
  v36 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 1368);
  v38 = *(_QWORD *)(v0 + 1336);
  v39 = *(_QWORD *)(v0 + 1328);
  v40 = *(_QWORD *)(v0 + 624);
  if (v36)
  {
    v41 = *(_QWORD *)(v0 + 288);
    v42 = sub_100007E68(v101, *(_QWORD *)(v0 + 280));
    *(_QWORD *)(v40 + 24) = v36;
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 8);
    v43 = sub_100049F68((_QWORD *)v40);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v43, v42, v36);
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v101);
  }
  else
  {
    sub_10004FF60(v99, &qword_1011A16C8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_10004FF60((uint64_t)v101, &qword_1011A16C8);
    *(_OWORD *)v40 = 0u;
    *(_OWORD *)(v40 + 16) = 0u;
    *(_QWORD *)(v40 + 32) = 0;
  }
  v44 = *(_QWORD *)(v0 + 1360);
  v45 = *(_QWORD *)(v0 + 1352);
  v46 = *(_QWORD *)(v0 + 1344);
  v47 = *(_QWORD *)(v0 + 1320);
  v48 = *(_QWORD *)(v0 + 1296);
  v49 = *(_QWORD *)(v0 + 1272);
  v50 = *(_QWORD *)(v0 + 1264);
  v51 = *(_QWORD *)(v0 + 1240);
  v52 = *(_QWORD *)(v0 + 1232);
  v54 = *(_QWORD *)(v0 + 1224);
  v55 = *(_QWORD *)(v0 + 1200);
  v56 = *(_QWORD *)(v0 + 1192);
  v57 = *(_QWORD *)(v0 + 1184);
  v58 = *(_QWORD *)(v0 + 1160);
  v59 = *(_QWORD *)(v0 + 1152);
  v60 = *(_QWORD *)(v0 + 1128);
  v61 = *(_QWORD *)(v0 + 1120);
  v62 = *(_QWORD *)(v0 + 1112);
  v63 = *(_QWORD *)(v0 + 1088);
  v64 = *(_QWORD *)(v0 + 1080);
  v65 = *(_QWORD *)(v0 + 1072);
  v66 = *(_QWORD *)(v0 + 1048);
  v67 = *(_QWORD *)(v0 + 1040);
  v68 = *(_QWORD *)(v0 + 1016);
  v69 = *(_QWORD *)(v0 + 1008);
  v70 = *(_QWORD *)(v0 + 1000);
  v71 = *(_QWORD *)(v0 + 976);
  v72 = *(_QWORD *)(v0 + 968);
  v73 = *(_QWORD *)(v0 + 960);
  v74 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 928);
  v76 = *(_QWORD *)(v0 + 904);
  v77 = *(_QWORD *)(v0 + 896);
  v78 = *(_QWORD *)(v0 + 872);
  v79 = *(_QWORD *)(v0 + 864);
  v80 = *(_QWORD *)(v0 + 856);
  v81 = *(_QWORD *)(v0 + 848);
  v82 = *(_QWORD *)(v0 + 840);
  v83 = *(_QWORD *)(v0 + 832);
  v84 = *(_QWORD *)(v0 + 808);
  v85 = *(_QWORD *)(v0 + 784);
  v87 = *(_QWORD *)(v0 + 776);
  v90 = *(_QWORD *)(v0 + 752);
  v93 = *(_QWORD *)(v0 + 728);
  v95 = *(_QWORD *)(v0 + 720);
  v98 = *(_QWORD *)(v0 + 696);
  v100 = *(_QWORD *)(v0 + 672);
  v102 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100106C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 1368);
  v2 = *(_QWORD *)(v0 + 1336);
  v3 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1312) + 8))(*(_QWORD *)(v0 + 1320), *(_QWORD *)(v0 + 1304));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 1360);
  v5 = *(_QWORD *)(v0 + 1352);
  v6 = *(_QWORD *)(v0 + 1344);
  v7 = *(_QWORD *)(v0 + 1320);
  v8 = *(_QWORD *)(v0 + 1296);
  v9 = *(_QWORD *)(v0 + 1272);
  v10 = *(_QWORD *)(v0 + 1264);
  v11 = *(_QWORD *)(v0 + 1240);
  v12 = *(_QWORD *)(v0 + 1232);
  v14 = *(_QWORD *)(v0 + 1224);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1192);
  v17 = *(_QWORD *)(v0 + 1184);
  v18 = *(_QWORD *)(v0 + 1160);
  v19 = *(_QWORD *)(v0 + 1152);
  v20 = *(_QWORD *)(v0 + 1128);
  v21 = *(_QWORD *)(v0 + 1120);
  v22 = *(_QWORD *)(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 1088);
  v24 = *(_QWORD *)(v0 + 1080);
  v25 = *(_QWORD *)(v0 + 1072);
  v26 = *(_QWORD *)(v0 + 1048);
  v27 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1016);
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 1000);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 968);
  v33 = *(_QWORD *)(v0 + 960);
  v34 = *(_QWORD *)(v0 + 936);
  v35 = *(_QWORD *)(v0 + 928);
  v36 = *(_QWORD *)(v0 + 904);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 832);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 784);
  v46 = *(_QWORD *)(v0 + 776);
  v47 = *(_QWORD *)(v0 + 752);
  v48 = *(_QWORD *)(v0 + 728);
  v49 = *(_QWORD *)(v0 + 720);
  v50 = *(_QWORD *)(v0 + 696);
  v51 = *(_QWORD *)(v0 + 672);
  v52 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100106F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 1368);
  v2 = *(_QWORD *)(v0 + 1336);
  v3 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1176) + 8))(*(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1168));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 1360);
  v5 = *(_QWORD *)(v0 + 1352);
  v6 = *(_QWORD *)(v0 + 1344);
  v7 = *(_QWORD *)(v0 + 1320);
  v8 = *(_QWORD *)(v0 + 1296);
  v9 = *(_QWORD *)(v0 + 1272);
  v10 = *(_QWORD *)(v0 + 1264);
  v11 = *(_QWORD *)(v0 + 1240);
  v12 = *(_QWORD *)(v0 + 1232);
  v14 = *(_QWORD *)(v0 + 1224);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1192);
  v17 = *(_QWORD *)(v0 + 1184);
  v18 = *(_QWORD *)(v0 + 1160);
  v19 = *(_QWORD *)(v0 + 1152);
  v20 = *(_QWORD *)(v0 + 1128);
  v21 = *(_QWORD *)(v0 + 1120);
  v22 = *(_QWORD *)(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 1088);
  v24 = *(_QWORD *)(v0 + 1080);
  v25 = *(_QWORD *)(v0 + 1072);
  v26 = *(_QWORD *)(v0 + 1048);
  v27 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1016);
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 1000);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 968);
  v33 = *(_QWORD *)(v0 + 960);
  v34 = *(_QWORD *)(v0 + 936);
  v35 = *(_QWORD *)(v0 + 928);
  v36 = *(_QWORD *)(v0 + 904);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 832);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 784);
  v46 = *(_QWORD *)(v0 + 776);
  v47 = *(_QWORD *)(v0 + 752);
  v48 = *(_QWORD *)(v0 + 728);
  v49 = *(_QWORD *)(v0 + 720);
  v50 = *(_QWORD *)(v0 + 696);
  v51 = *(_QWORD *)(v0 + 672);
  v52 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100107280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 1368);
  v2 = *(_QWORD *)(v0 + 1336);
  v3 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1064) + 8))(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1056));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 1360);
  v5 = *(_QWORD *)(v0 + 1352);
  v6 = *(_QWORD *)(v0 + 1344);
  v7 = *(_QWORD *)(v0 + 1320);
  v8 = *(_QWORD *)(v0 + 1296);
  v9 = *(_QWORD *)(v0 + 1272);
  v10 = *(_QWORD *)(v0 + 1264);
  v11 = *(_QWORD *)(v0 + 1240);
  v12 = *(_QWORD *)(v0 + 1232);
  v14 = *(_QWORD *)(v0 + 1224);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1192);
  v17 = *(_QWORD *)(v0 + 1184);
  v18 = *(_QWORD *)(v0 + 1160);
  v19 = *(_QWORD *)(v0 + 1152);
  v20 = *(_QWORD *)(v0 + 1128);
  v21 = *(_QWORD *)(v0 + 1120);
  v22 = *(_QWORD *)(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 1088);
  v24 = *(_QWORD *)(v0 + 1080);
  v25 = *(_QWORD *)(v0 + 1072);
  v26 = *(_QWORD *)(v0 + 1048);
  v27 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1016);
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 1000);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 968);
  v33 = *(_QWORD *)(v0 + 960);
  v34 = *(_QWORD *)(v0 + 936);
  v35 = *(_QWORD *)(v0 + 928);
  v36 = *(_QWORD *)(v0 + 904);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 832);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 784);
  v46 = *(_QWORD *)(v0 + 776);
  v47 = *(_QWORD *)(v0 + 752);
  v48 = *(_QWORD *)(v0 + 728);
  v49 = *(_QWORD *)(v0 + 720);
  v50 = *(_QWORD *)(v0 + 696);
  v51 = *(_QWORD *)(v0 + 672);
  v52 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010759C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 1368);
  v2 = *(_QWORD *)(v0 + 1336);
  v3 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 952) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 944));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 1360);
  v5 = *(_QWORD *)(v0 + 1352);
  v6 = *(_QWORD *)(v0 + 1344);
  v7 = *(_QWORD *)(v0 + 1320);
  v8 = *(_QWORD *)(v0 + 1296);
  v9 = *(_QWORD *)(v0 + 1272);
  v10 = *(_QWORD *)(v0 + 1264);
  v11 = *(_QWORD *)(v0 + 1240);
  v12 = *(_QWORD *)(v0 + 1232);
  v14 = *(_QWORD *)(v0 + 1224);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1192);
  v17 = *(_QWORD *)(v0 + 1184);
  v18 = *(_QWORD *)(v0 + 1160);
  v19 = *(_QWORD *)(v0 + 1152);
  v20 = *(_QWORD *)(v0 + 1128);
  v21 = *(_QWORD *)(v0 + 1120);
  v22 = *(_QWORD *)(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 1088);
  v24 = *(_QWORD *)(v0 + 1080);
  v25 = *(_QWORD *)(v0 + 1072);
  v26 = *(_QWORD *)(v0 + 1048);
  v27 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1016);
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 1000);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 968);
  v33 = *(_QWORD *)(v0 + 960);
  v34 = *(_QWORD *)(v0 + 936);
  v35 = *(_QWORD *)(v0 + 928);
  v36 = *(_QWORD *)(v0 + 904);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 832);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 784);
  v46 = *(_QWORD *)(v0 + 776);
  v47 = *(_QWORD *)(v0 + 752);
  v48 = *(_QWORD *)(v0 + 728);
  v49 = *(_QWORD *)(v0 + 720);
  v50 = *(_QWORD *)(v0 + 696);
  v51 = *(_QWORD *)(v0 + 672);
  v52 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001078B8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 864);
  v6 = *(_QWORD *)(v0 + 816);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 800) + 8))(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 792));
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v7 = *(_QWORD *)(v0 + 1360);
  v8 = *(_QWORD *)(v0 + 1352);
  v9 = *(_QWORD *)(v0 + 1344);
  v10 = *(_QWORD *)(v0 + 1320);
  v11 = *(_QWORD *)(v0 + 1296);
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1264);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1232);
  v17 = *(_QWORD *)(v0 + 1224);
  v18 = *(_QWORD *)(v0 + 1200);
  v19 = *(_QWORD *)(v0 + 1192);
  v20 = *(_QWORD *)(v0 + 1184);
  v21 = *(_QWORD *)(v0 + 1160);
  v22 = *(_QWORD *)(v0 + 1152);
  v23 = *(_QWORD *)(v0 + 1128);
  v24 = *(_QWORD *)(v0 + 1120);
  v25 = *(_QWORD *)(v0 + 1112);
  v26 = *(_QWORD *)(v0 + 1088);
  v27 = *(_QWORD *)(v0 + 1080);
  v28 = *(_QWORD *)(v0 + 1072);
  v29 = *(_QWORD *)(v0 + 1048);
  v30 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1016);
  v32 = *(_QWORD *)(v0 + 1008);
  v33 = *(_QWORD *)(v0 + 1000);
  v34 = *(_QWORD *)(v0 + 976);
  v35 = *(_QWORD *)(v0 + 968);
  v36 = *(_QWORD *)(v0 + 960);
  v37 = *(_QWORD *)(v0 + 936);
  v38 = *(_QWORD *)(v0 + 928);
  v39 = *(_QWORD *)(v0 + 904);
  v40 = *(_QWORD *)(v0 + 896);
  v41 = *(_QWORD *)(v0 + 872);
  v42 = *(_QWORD *)(v0 + 864);
  v43 = *(_QWORD *)(v0 + 856);
  v44 = *(_QWORD *)(v0 + 848);
  v45 = *(_QWORD *)(v0 + 840);
  v46 = *(_QWORD *)(v0 + 832);
  v47 = *(_QWORD *)(v0 + 808);
  v48 = *(_QWORD *)(v0 + 784);
  v49 = *(_QWORD *)(v0 + 776);
  v50 = *(_QWORD *)(v0 + 752);
  v51 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v53 = *(_QWORD *)(v0 + 696);
  v54 = *(_QWORD *)(v0 + 672);
  v55 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100107BEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 864);
  v6 = *(_QWORD *)(v0 + 816);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 744) + 8))(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 736));
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v7 = *(_QWORD *)(v0 + 1360);
  v8 = *(_QWORD *)(v0 + 1352);
  v9 = *(_QWORD *)(v0 + 1344);
  v10 = *(_QWORD *)(v0 + 1320);
  v11 = *(_QWORD *)(v0 + 1296);
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1264);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1232);
  v17 = *(_QWORD *)(v0 + 1224);
  v18 = *(_QWORD *)(v0 + 1200);
  v19 = *(_QWORD *)(v0 + 1192);
  v20 = *(_QWORD *)(v0 + 1184);
  v21 = *(_QWORD *)(v0 + 1160);
  v22 = *(_QWORD *)(v0 + 1152);
  v23 = *(_QWORD *)(v0 + 1128);
  v24 = *(_QWORD *)(v0 + 1120);
  v25 = *(_QWORD *)(v0 + 1112);
  v26 = *(_QWORD *)(v0 + 1088);
  v27 = *(_QWORD *)(v0 + 1080);
  v28 = *(_QWORD *)(v0 + 1072);
  v29 = *(_QWORD *)(v0 + 1048);
  v30 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1016);
  v32 = *(_QWORD *)(v0 + 1008);
  v33 = *(_QWORD *)(v0 + 1000);
  v34 = *(_QWORD *)(v0 + 976);
  v35 = *(_QWORD *)(v0 + 968);
  v36 = *(_QWORD *)(v0 + 960);
  v37 = *(_QWORD *)(v0 + 936);
  v38 = *(_QWORD *)(v0 + 928);
  v39 = *(_QWORD *)(v0 + 904);
  v40 = *(_QWORD *)(v0 + 896);
  v41 = *(_QWORD *)(v0 + 872);
  v42 = *(_QWORD *)(v0 + 864);
  v43 = *(_QWORD *)(v0 + 856);
  v44 = *(_QWORD *)(v0 + 848);
  v45 = *(_QWORD *)(v0 + 840);
  v46 = *(_QWORD *)(v0 + 832);
  v47 = *(_QWORD *)(v0 + 808);
  v48 = *(_QWORD *)(v0 + 784);
  v49 = *(_QWORD *)(v0 + 776);
  v50 = *(_QWORD *)(v0 + 752);
  v51 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v53 = *(_QWORD *)(v0 + 696);
  v54 = *(_QWORD *)(v0 + 672);
  v55 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100107F20()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 864);
  v6 = *(_QWORD *)(v0 + 816);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 688) + 8))(*(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 680));
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v7 = *(_QWORD *)(v0 + 1360);
  v8 = *(_QWORD *)(v0 + 1352);
  v9 = *(_QWORD *)(v0 + 1344);
  v10 = *(_QWORD *)(v0 + 1320);
  v11 = *(_QWORD *)(v0 + 1296);
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1264);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1232);
  v17 = *(_QWORD *)(v0 + 1224);
  v18 = *(_QWORD *)(v0 + 1200);
  v19 = *(_QWORD *)(v0 + 1192);
  v20 = *(_QWORD *)(v0 + 1184);
  v21 = *(_QWORD *)(v0 + 1160);
  v22 = *(_QWORD *)(v0 + 1152);
  v23 = *(_QWORD *)(v0 + 1128);
  v24 = *(_QWORD *)(v0 + 1120);
  v25 = *(_QWORD *)(v0 + 1112);
  v26 = *(_QWORD *)(v0 + 1088);
  v27 = *(_QWORD *)(v0 + 1080);
  v28 = *(_QWORD *)(v0 + 1072);
  v29 = *(_QWORD *)(v0 + 1048);
  v30 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1016);
  v32 = *(_QWORD *)(v0 + 1008);
  v33 = *(_QWORD *)(v0 + 1000);
  v34 = *(_QWORD *)(v0 + 976);
  v35 = *(_QWORD *)(v0 + 968);
  v36 = *(_QWORD *)(v0 + 960);
  v37 = *(_QWORD *)(v0 + 936);
  v38 = *(_QWORD *)(v0 + 928);
  v39 = *(_QWORD *)(v0 + 904);
  v40 = *(_QWORD *)(v0 + 896);
  v41 = *(_QWORD *)(v0 + 872);
  v42 = *(_QWORD *)(v0 + 864);
  v43 = *(_QWORD *)(v0 + 856);
  v44 = *(_QWORD *)(v0 + 848);
  v45 = *(_QWORD *)(v0 + 840);
  v46 = *(_QWORD *)(v0 + 832);
  v47 = *(_QWORD *)(v0 + 808);
  v48 = *(_QWORD *)(v0 + 784);
  v49 = *(_QWORD *)(v0 + 776);
  v50 = *(_QWORD *)(v0 + 752);
  v51 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v53 = *(_QWORD *)(v0 + 696);
  v54 = *(_QWORD *)(v0 + 672);
  v55 = *(_QWORD *)(v0 + 664);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100108254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119B920 != -1)
    swift_once(&qword_10119B920, sub_10010053C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124C878);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001082C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1011A16BC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return sub_10010059C(a1, v5, v4);
}

uint64_t sub_10010832C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100108590();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100108350(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100100418();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for StartPlaybackAppIntent(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s5Music22StartPlaybackAppIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for StartPlaybackAppIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for StartPlaybackAppIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSSettingsUnauthenticatedSections(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSSettingsUnauthenticatedSections(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartPlaybackAppIntent()
{
  return &type metadata for StartPlaybackAppIntent;
}

uint64_t sub_100108504()
{
  return sub_100049F28(&qword_1011A16A0, &qword_1011A16A8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100108530()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011A1660);
  sub_100048B14(v0, (uint64_t)qword_1011A1660);
  return static Logger.music(_:)(0xD000000000000016, 0x8000000100EAB310);
}

uint64_t sub_100108590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119EC98);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_10119ECA8);
  v26 = 0x8000000100E2CF30;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E2CF30);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 1, 1, v11);
  v15 = type metadata accessor for String.IntentInputOptions(0);
  v29 = 0;
  v30 = 0;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v22(v7, 1, 1, v15);
  v16 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v21(v4, 1, 1, v16);
  v17 = enum case for InputConnectionBehavior.default(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v19 = v27;
  v18(v27, enum case for InputConnectionBehavior.default(_:), v28);
  v23 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v14, v10, &v29, v7, v4, v19);
  sub_100007E8C(&qword_1011A16B0);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, v26);
  v24(v10, 1, 1, v25);
  v29 = 0;
  v30 = 0;
  v22(v7, 1, 1, v15);
  v21(v4, 1, 1, v16);
  v18(v19, v17, v28);
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v14, v10, &v29, v7, v4, v19);
  return v23;
}

uint64_t sub_100108888(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001088E0(uint64_t a1, char *a2)
{
  char *v4;
  Class isa;
  double v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _OWORD *, __n128);
  uint64_t v10;
  __int128 v11;
  __n128 v12;
  _OWORD v13[2];
  _OWORD v14[2];

  v4 = &a2[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];
  if (((a2[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56] ^ *(unsigned __int8 *)(a1 + 56)) & 1) == 0)
  {
    isa = (Class)objc_msgSend(a2, "_indexPathsForPreparedItems");
    if (!isa)
    {
      v7 = type metadata accessor for IndexPath(0);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v7);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
    objc_msgSend(a2, "reconfigureItemsAtIndexPaths:", isa, v6);

  }
  v9 = *(void (**)(uint64_t, _OWORD *, __n128))&a2[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  if (v9)
  {
    v10 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate + 8];
    v11 = *((_OWORD *)v4 + 1);
    v13[0] = *(_OWORD *)v4;
    v13[1] = v11;
    v14[0] = *((_OWORD *)v4 + 2);
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)(v4 + 41);
    v12 = swift_retain(v10);
    v9(a1, v13, v12);
    sub_10004BA30((uint64_t)v9, v10);
  }
}

id sub_1001089FC(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  objc_super v20;
  _OWORD v21[2];
  _OWORD v22[2];

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = &v4[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC5Music23HIMetricsCollectionView____lazy_storage___artworkMetricsProvider];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = v4;
  HI.Grid.Metrics.init(width:variant:swiping:isAccessibilitySize:)(a2, a3, 0, (uint64_t)v21, 0.0);
  v12 = &v11[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];
  v13 = v21[1];
  *(_OWORD *)v12 = v21[0];
  *((_OWORD *)v12 + 1) = v13;
  *((_OWORD *)v12 + 2) = v22[0];
  *(_OWORD *)(v12 + 41) = *(_OWORD *)((char *)v22 + 9);

  v20.receiver = v11;
  v20.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v20, "initWithFrame:collectionViewLayout:", a1, 0.0, 0.0, 0.0, 0.0);
  v15 = sub_100007E8C(&qword_1011A1750);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v16 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v16 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v17 = v14;
  v18 = UIView.registerForTraitChanges<A>(_:handler:)(v16, sub_100109510, 0, ObjectType);
  swift_unknownObjectRelease(v18);
  swift_bridgeObjectRelease(v16);

  return v17;
}

void sub_100108B5C()
{
  char *v0;
  void *v1;
  double Width;
  double v3;
  char *v4;
  char v5;
  uint64_t v6;
  id v7;
  char v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  char isEscapingClosureAtFileLocation;
  _QWORD v19[5];
  uint64_t v20;
  objc_super v21;
  _OWORD v22[2];
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  CGRect v27;

  v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, "frame");
  Width = CGRectGetWidth(v27);
  v3 = Width - UIEdgeInsets.horizontal.getter(objc_msgSend(v0, "safeAreaInsets"));
  v4 = &v0[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];
  v5 = v0[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 26];
  v6 = v0[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 25];
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = UITraitCollection.isAccessibilitySizeCategory.getter();

  HI.Grid.Metrics.init(width:variant:swiping:isAccessibilitySize:)(v6, v5, v8 & 1, (uint64_t)v22, v3);
  v9 = *((_OWORD *)v4 + 1);
  v24 = *(_OWORD *)v4;
  v25 = v9;
  v26[0] = *((_OWORD *)v4 + 2);
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)(v4 + 41);
  v10 = v22[1];
  *(_OWORD *)v4 = v22[0];
  *((_OWORD *)v4 + 1) = v10;
  *((_OWORD *)v4 + 2) = v23[0];
  *(_OWORD *)(v4 + 41) = *(_OWORD *)((char *)v23 + 9);
  if ((static HI.Grid.Metrics.__derived_struct_equals(_:_:)((uint64_t)&v24, (uint64_t)v22) & 1) == 0)
  {
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1010B16F0, 88, 7);
    v13 = v25;
    *(_OWORD *)(v12 + 16) = v24;
    *(_OWORD *)(v12 + 32) = v13;
    *(_OWORD *)(v12 + 48) = v26[0];
    *(_OWORD *)(v12 + 57) = *(_OWORD *)((char *)v26 + 9);
    *(_QWORD *)(v12 + 80) = v1;
    v14 = swift_allocObject(&unk_1010B1718, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_100109410;
    *(_QWORD *)(v14 + 24) = v12;
    v19[4] = sub_10010942C;
    v20 = v14;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_10046D7B4;
    v19[3] = &unk_1010B1730;
    v15 = _Block_copy(v19);
    v16 = v20;
    v17 = v1;
    swift_retain(v14);
    objc_msgSend(v11, "performWithoutAnimation:", v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 109, 21, 44, 1);
    swift_release(v12);
    swift_release(v14);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_100108F1C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  _QWORD v14[5];
  uint64_t v15;

  v2 = v1;
  v4 = objc_msgSend(v1, "collectionViewLayout");
  sub_100109530();
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  if ((v5 & 1) == 0)
  {
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_1010B1768, 32, 7);
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = a1;
    v8 = swift_allocObject(&unk_1010B1790, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100109598;
    *(_QWORD *)(v8 + 24) = v7;
    v14[4] = sub_1001095DC;
    v15 = v8;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10046D7B4;
    v14[3] = &unk_1010B17A8;
    v9 = _Block_copy(v14);
    v10 = v15;
    v11 = v2;
    v12 = a1;
    swift_retain(v8);
    objc_msgSend(v6, "performWithoutAnimation:", v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 109, 74, 40, 1);
    swift_release(v7);
    swift_release(v8);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_1001090A4(void *a1, uint64_t a2)
{
  Class v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  Class v7;

  objc_msgSend(a1, "setCollectionViewLayout:", a2);
  v3 = (Class)objc_msgSend(a1, "indexPathsForVisibleItems");
  if (!v3)
  {
    v4 = type metadata accessor for IndexPath();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    v3 = isa;
  }
  v7 = v3;
  objc_msgSend(a1, "reloadItemsAtIndexPaths:");

}

double (*sub_1001091D0())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Music23HIMetricsCollectionView____lazy_storage___artworkMetricsProvider);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music23HIMetricsCollectionView____lazy_storage___artworkMetricsProvider);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music23HIMetricsCollectionView____lazy_storage___artworkMetricsProvider + 8);
  if (v2)
  {
    v4 = *(double (**)(uint64_t, uint64_t))(v0
                                                   + OBJC_IVAR____TtC5Music23HIMetricsCollectionView____lazy_storage___artworkMetricsProvider);
  }
  else
  {
    v5 = swift_allocObject(&unk_1010B17E0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = *v1;
    v7 = v1[1];
    v4 = sub_1001095D4;
    *v1 = (uint64_t)sub_1001095D4;
    v1[1] = v5;
    swift_retain(v5);
    sub_10004BA30(v6, v7);
  }
  sub_100048AAC(v2, v3);
  return v4;
}

double sub_10010927C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  double v6;
  id v7;
  id v8;
  _BYTE v10[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0.0;
  v5 = (void *)Strong;
  v6 = *(double *)(Strong + OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48);
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    v7 = objc_msgSend(v5, "traitCollection");
  else
    v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v8 = v7;
  objc_msgSend(v8, "displayScale");

  return v6;
}

uint64_t type metadata accessor for HIMetricsCollectionView()
{
  return objc_opt_self(_TtC5Music23HIMetricsCollectionView);
}

uint64_t sub_1001093EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 88, 7);
}

void sub_100109410()
{
  uint64_t v0;

  sub_1001088E0(v0 + 16, *(char **)(v0 + 80));
}

uint64_t sub_10010941C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10010942C()
{
  uint64_t v0;

  return static MPPropertySet.with(_:)(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100109434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100109444(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10010944C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.MultiselectOptions(0, v1);
  sub_10004FACC(v4, qword_10124C890);
  sub_100048B14(v4, (uint64_t)qword_10124C890);
  v5 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  return UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v3, 0, 0);
}

void sub_100109510()
{
  sub_100108B5C();
}

unint64_t sub_100109530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1758;
  if (!qword_1011A1758)
  {
    v1 = objc_opt_self(UICollectionViewLayout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A1758);
  }
  return result;
}

uint64_t sub_10010956C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100109598()
{
  uint64_t v0;

  sub_1001090A4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001095A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001095B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

double sub_1001095D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10010927C(a1, a2, v2);
}

uint64_t sub_1001095E8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v11 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
    v12 = (void *)(v9 + v11);
    v13 = (const void *)(v10 + v11);
    v14 = type metadata accessor for Playlist.Folder(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_retain(v4);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011B5660);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = (_QWORD *)(v7 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *(_QWORD *)(v7 + v19) = *(uint64_t *)((char *)a2 + v19);
    v23 = a3[10];
    *(_WORD *)(v7 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    *(_WORD *)(v7 + v23) = *(_WORD *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t _s9PlaylistsV5ScopeVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A1870, (uint64_t)&_s9PlaylistsV5ScopeVMn);
}

double sub_100109768(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + a2[6]);
  swift_bridgeObjectRelease(*v4);
  v5 = (char *)v4 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v6 = type metadata accessor for Playlist.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t sub_100109810(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  *(_QWORD *)(a1 + v7) = *(uint64_t *)((char *)a2 + v7);
  v10 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v11 = (void *)(v8 + v10);
  v12 = (const void *)(v9 + v10);
  v13 = type metadata accessor for Playlist.Folder(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_retain(v6);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[7];
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (uint64_t *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)(a1 + v18) = *(uint64_t *)((char *)a2 + v18);
  v22 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  *(_WORD *)(a1 + v22) = *(_WORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100109954(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v8 = a3[6];
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = *(uint64_t *)((char *)a1 + v8);
  *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v13 = (void *)(v9 + v12);
  v14 = (void *)(v10 + v12);
  v15 = type metadata accessor for Playlist.Folder(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = a3[7];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v22[1];
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = a3[8];
  v26 = *(uint64_t *)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v26);
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *v28 = *v29;
  v28[1] = v29[1];
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  v31[1] = v32[1];
  return a1;
}

uint64_t sub_100109B30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v10 = (void *)(v7 + v9);
  v11 = (const void *)(v8 + v9);
  v12 = type metadata accessor for Playlist.Folder(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  *(_WORD *)(a1 + v16) = *(_WORD *)(a2 + v16);
  return a1;
}

uint64_t *sub_100109C48(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = a3[6];
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = *(uint64_t *)((char *)a1 + v7);
  *(uint64_t *)((char *)a1 + v7) = *(uint64_t *)((char *)a2 + v7);
  swift_bridgeObjectRelease(v10);
  v11 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (void *)(v9 + v11);
  v14 = type metadata accessor for Playlist.Folder(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (uint64_t *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  v25 = v21[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease(v25);
  v26 = a3[8];
  v27 = *(uint64_t *)((char *)a1 + v26);
  *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[9];
  v29 = a3[10];
  v30 = (char *)a1 + v28;
  v31 = (char *)a2 + v28;
  *v30 = *v31;
  v30[1] = v31[1];
  v32 = (char *)a1 + v29;
  v33 = (char *)a2 + v29;
  *v32 = *v33;
  v32[1] = v33[1];
  return a1;
}

uint64_t sub_100109DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100109E04);
}

uint64_t sub_100109E04(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s9PlaylistsV5ScopeVMa(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_100109E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100109E8C);
}

char *sub_100109E8C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s9PlaylistsV5ScopeVMa(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t _s9PlaylistsVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A17C8, (uint64_t)&_s9PlaylistsVMn);
}

uint64_t sub_100109F14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100EAB4D0;
  result = _s9PlaylistsV5ScopeVMa(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EAB4E8;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_100EAB500;
    v4[6] = &unk_100EAB500;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100109FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Playlist.Folder(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011B5660);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_10010A0AC(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Playlist.Folder(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_10010A128(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Playlist.Folder(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_10010A1F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Playlist.Folder(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

_QWORD *sub_10010A314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Playlist.Folder(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_10010A3D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Playlist.Folder(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_10010A4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010A4F4);
}

uint64_t sub_10010A4F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_10010A574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010A580);
}

char *sub_10010A580(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10010A5F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10010A670(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_10010A670(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B1F80[0])
  {
    v2 = type metadata accessor for Playlist.Folder(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1011B1F80);
  }
}

uint64_t sub_10010A6C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10010A708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  v3 = __chkstk_darwin(v2);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - v5;
  v7 = type metadata accessor for Playlist.Folder(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v36 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist.Variant(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s9PlaylistsVMa(0);
  v18 = *(int *)(v17 + 28);
  v19 = (uint64_t *)(v1 + *(int *)(v17 + 24));
  v20 = *v19;
  v39 = *v19;
  v21 = *(_QWORD *)(v1 + v18 + 8);
  v22 = *(_QWORD *)(v1 + v18) & 0xFFFFFFFFFFFFLL;
  if ((v21 & 0x2000000000000000) != 0)
    v23 = HIBYTE(v21) & 0xF;
  else
    v23 = v22;
  if (v23)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Playlist.Variant.folder(_:), v10);
    swift_bridgeObjectRetain();
    sub_1001A3180((uint64_t)v13, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011CEF20);
    v20 = v39;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  KeyPath = swift_getKeyPath(&unk_100EAB6D8);
  v25 = sub_1004819E0(v20);
  swift_bridgeObjectRelease(v20);
  v26 = sub_10047D37C((uint64_t)v25);
  swift_release(v25);
  v27 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v28 = sub_100048748((unint64_t *)&unk_1011B56F0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v29 = sub_100048748(&qword_1011A19B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:memberOf:)(KeyPath, v26, v27, v28, v29);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v26);
  v30 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)v19 + *(int *)(v30 + 20), (uint64_t)v6, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B5660);
  v32 = v36;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v36, v6, v7);
  v33 = swift_getKeyPath(&unk_100EAB700);
  v34 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v32, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v34, 0, 1, v7);
  v35 = sub_100048748(&qword_1011B5710, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(v33, v34, v27, v35);
  swift_release(v33);
  sub_10004FF60(v34, (uint64_t *)&unk_1011B5660);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v32, v7);
}

void sub_10010AA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  __n128 v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = _s9PlaylistsVMa(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(_BYTE *)(v0 + *(int *)(v2 + 36)))
  {
    case 1:
      v5 = &unk_100EAB688;
      goto LABEL_10;
    case 3:
      KeyPath = swift_getKeyPath(&unk_100EAB6B0);
      v17 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
      v18 = KeyPath;
      v19 = 1;
      goto LABEL_11;
    case 4:
      KeyPath = swift_getKeyPath(&unk_100EAB660);
      v20 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
      v21 = sub_100048748((unint64_t *)&unk_1011B56F0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
      MusicLibrarySectionedRequest<>.sortItems<A>(by:ascending:)(KeyPath, 0, v20, v21);
      goto LABEL_12;
    case 5:
      v5 = &unk_100EAB638;
LABEL_10:
      KeyPath = swift_getKeyPath(v5);
      v17 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
      v18 = KeyPath;
      v19 = 0;
LABEL_11:
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v18, v19, v17);
LABEL_12:
      swift_release(KeyPath);
      break;
    case 6:
      return;
    default:
      if (qword_10119C028 != -1)
        swift_once(&qword_10119C028, sub_10046477C);
      v6 = type metadata accessor for Logger(0);
      sub_100048B14(v6, (uint64_t)static Logger.libraryView);
      v7 = sub_10005B704(v0, (uint64_t)v4, _s9PlaylistsVMa);
      v8 = Logger.logObject.getter(v7);
      v10 = static os_log_type_t.fault.getter(v9);
      if (os_log_type_enabled(v8, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        *(_DWORD *)v11 = 136446210;
        v23 = v12;
        LOBYTE(v22) = v4[*(int *)(v1 + 36)];
        v13 = String.init<A>(describing:)(&v22, &_s11ContentSortV6OptionON);
        v15 = v14;
        v22 = sub_100322200(v13, v14, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
        swift_bridgeObjectRelease(v15);
        sub_10005B748((uint64_t)v4, _s9PlaylistsVMa);
        _os_log_impl((void *)&_mh_execute_header, v8, v10, "Tried to apply unhandled sortOption=%{public}s to playlists request.", v11, 0xCu);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);
      }
      else
      {
        sub_10005B748((uint64_t)v4, _s9PlaylistsVMa);
      }

      break;
  }
}

void sub_10010ADA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v30[9];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(int *)(_s9PlaylistsVMa(0) + 32);
  v6 = *(_QWORD *)(v0 + v5);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_13;
  Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
  String.hash(into:)(v30, 0x657469726F766166, 0xE900000000000073);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_13;
  v10 = ~v8;
  while (!*(_BYTE *)(*(_QWORD *)(v6 + 48) + v9))
  {
    v11 = 0xE300000000000000;
    v12 = 7105633;
LABEL_8:
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
      goto LABEL_12;
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_13;
  }
  if (*(_BYTE *)(*(_QWORD *)(v6 + 48) + v9) == 2)
  {
    v11 = 0xE900000000000073;
    v12 = 0x64616F6C6E776F64;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_12:
  KeyPath = swift_getKeyPath(&unk_100EAB610);
  v15 = enum case for MusicFavoriteStatus.favorited(_:);
  v16 = type metadata accessor for MusicFavoriteStatus(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v4, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v19 = sub_100048748((unint64_t *)&unk_1011B56F0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v20 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v4, v18, v19, v20);
  swift_release(KeyPath);
  sub_10004FF60((uint64_t)v4, &qword_1011A19A0);
  v6 = *(_QWORD *)(v1 + v5);
LABEL_13:
  if (!*(_QWORD *)(v6 + 16))
    return;
  Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
  String.hash(into:)(v30, 0x64616F6C6E776F64, 0xE900000000000073);
  v21 = Hasher._finalize()();
  v22 = -1 << *(_BYTE *)(v6 + 32);
  v23 = v21 & ~v22;
  if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
    return;
  v24 = ~v22;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v6 + 48) + v23))
    {
      v25 = 0xE300000000000000;
      v26 = 7105633;
      goto LABEL_20;
    }
    v25 = 0xE900000000000073;
    v26 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v6 + 48) + v23) == 1)
    {
LABEL_20:
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v25, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease(v25);
      if ((v27 & 1) != 0)
        goto LABEL_23;
      v23 = (v23 + 1) & v24;
      if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_23:
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v28);
}

void sub_10010B13C(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  id v12;
  uint64_t *v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Swift::String v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  id v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Swift::String v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  void *v35;
  _UNKNOWN **v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  const char *v40;
  id v41;
  uint64_t *v42;
  uint64_t v43;
  void *v44;
  unint64_t v45;

  v6 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for MusicLibrary(0);
  *(_QWORD *)a3 = static MusicLibrary.shared.getter(v9);
  v10 = (int *)_s9PlaylistsVMa(0);
  v11 = (_QWORD *)(a3 + v10[7]);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v43 = v10[8];
  *(_QWORD *)(a3 + v43) = &_swiftEmptySetSingleton;
  *(_WORD *)(a3 + v10[10]) = 262;
  v42 = (uint64_t *)(a3 + v10[6]);
  sub_10005B704((uint64_t)a1, (uint64_t)v42, _s9PlaylistsV5ScopeVMa);
  *(_BYTE *)(a3 + 8) = a2;
  v41 = (id)objc_opt_self(NSUserDefaults);
  v12 = objc_msgSend(v41, "standardUserDefaults");
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v13 = (uint64_t *)sub_100048B14(v6, (uint64_t)qword_10124C8A8);
  v14 = sub_10010DC18(a1, v13);
  if (v14)
    v15 = 0xD000000000000011;
  else
    v15 = 0xD000000000000010;
  v40 = "LibraryPlaylists";
  v16 = (uint64_t)a1;
  if (v14)
    v17 = 0x8000000100E2D170;
  else
    v17 = 0x8000000100E2D150;
  v44 = (void *)v15;
  v45 = v17;
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 0x53746E65746E6F43;
  v18._object = (void *)0xEB0000000074726FLL;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19 = v45;
  v20 = sub_100049FE4();
  sub_10004A028();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v20, &v44);

  swift_bridgeObjectRelease(v19);
  v21 = (unsigned __int16)v44;
  sub_10005B704(v16, (uint64_t)v8, _s9PlaylistsV5ScopeVMa);
  if ((v21 & 0xFF00) == 0x200)
  {
    v22 = sub_10010DC18(v8, v13);
    v21 = sub_100464874(v22 | 0x80u);
    sub_10005B748((uint64_t)v8, _s9PlaylistsV5ScopeVMa);
    if ((v21 & 0xFF00) == 0x200)
    {
      LOBYTE(v23) = 1;
      LOBYTE(v21) = 6;
      goto LABEL_14;
    }
  }
  else
  {
    sub_10005B748((uint64_t)v8, _s9PlaylistsV5ScopeVMa);
  }
  v23 = (v21 >> 8) & 1;
LABEL_14:
  v24 = (_BYTE *)(a3 + v10[9]);
  *v24 = v21;
  v24[1] = v23;
  v25 = objc_msgSend(v41, "standardUserDefaults", v40);
  v26 = sub_10010DC18(v42, v13);
  if (v26)
    v27 = 0xD000000000000011;
  else
    v27 = 0xD000000000000010;
  if (v26)
    v28 = (unint64_t)v40 | 0x8000000000000000;
  else
    v28 = 0x8000000100E2D150;
  v29 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
  v44 = (void *)v27;
  v45 = v28;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = 0x704F7265746C6946;
  v30._object = (void *)0xEC0000006E6F6974;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v28);
  v31 = v45;
  v32 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  NSUserDefaults.decodeValue<A>(_:forKey:)(v29, v32, &v44);

  swift_bridgeObjectRelease(v31);
  v33 = v44;
  if (!v44)
  {
    v34 = sub_10010B558();
    Optional<A>.convertToSet.getter(v34);
    if (v35)
      v33 = v35;
    else
      v33 = &_swiftEmptySetSingleton;
  }
  v36 = sub_10010E2B0();
  v37 = swift_bridgeObjectRetain();
  v38 = sub_1001A53A0(v37, (uint64_t)v33);
  sub_10005B748(v16, _s9PlaylistsV5ScopeVMa);
  swift_bridgeObjectRelease(v36);
  v39 = v43;
  swift_bridgeObjectRelease(*(_QWORD *)(a3 + v43));
  *(_QWORD *)(a3 + v39) = v38;
}

uint64_t sub_10010B558()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  unsigned __int8 v4;
  uint64_t result;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  unint64_t v13;

  v1 = (uint64_t *)(v0 + *(int *)(_s9PlaylistsVMa(0) + 24));
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v2 = _s9PlaylistsV5ScopeVMa(0);
  v3 = (uint64_t *)sub_100048B14(v2, (uint64_t)qword_10124C8A8);
  if (sub_10010DC18(v1, v3))
    v4 = 6;
  else
    v4 = 8;
  result = sub_10010C130(v4);
  if (result == 3)
  {
    sub_10010DC18(v1, v3);
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(0xE000000000000000);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "stringForKey:", v7, 0);

    if (v8)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12._countAndFlagsBits = v9;
      v12._object = v11;
      v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9FA0, v12);
      swift_bridgeObjectRelease(v11);
      if (v13 >= 3)
        return 3;
      else
        return v13;
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t sub_10010B73C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  Swift::String v12;
  _QWORD v13[6];

  v3 = _s9PlaylistsVMa(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 32));
  result = sub_10016CD08(v4, a1);
  if ((result & 1) == 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v13[3] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
    v13[4] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    v13[5] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    v13[0] = v4;
    v7 = (uint64_t *)(v1 + *(int *)(v3 + 24));
    v8 = qword_10119B938;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      swift_once(&qword_10119B938, sub_10010BB4C);
    v9 = _s9PlaylistsV5ScopeVMa(0);
    v10 = (uint64_t *)sub_100048B14(v9, (uint64_t)qword_10124C8A8);
    if (sub_10010DC18(v7, v10))
      v11 = 0x8000000100E2D170;
    else
      v11 = 0x8000000100E2D150;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x704F7265746C6946;
    v12._object = (void *)0xEC0000006E6F6974;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v11);
    NSUserDefaults.encodeValue(_:forKey:)(v13);
    swift_bridgeObjectRelease(v11);

    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  }
  return result;
}

void sub_10010B8F4(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  char v7;
  void *v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  id v17;
  unint64_t v18;
  _QWORD v19[6];

  v3 = _s9PlaylistsVMa(0);
  v4 = v1 + *(int *)(v3 + 36);
  v5 = *(_BYTE *)v4;
  v6 = *(unsigned __int8 *)(v4 + 1);
  sub_1005CFF5C(*(_BYTE *)v4);
  if ((v7 & 1) == 0 || v6 != (unsigned __int16)(a1 & 0x100) >> 8)
  {
    v8 = (void *)objc_opt_self(NSUserDefaults);
    v9 = objc_msgSend(v8, "standardUserDefaults");
    v19[3] = &_s11ContentSortVN;
    v19[4] = sub_100049FE4();
    v19[5] = sub_10004A028();
    LOBYTE(v19[0]) = v5;
    BYTE1(v19[0]) = v6;
    v10 = (uint64_t *)(v1 + *(int *)(v3 + 24));
    if (qword_10119B938 != -1)
      swift_once(&qword_10119B938, sub_10010BB4C);
    v11 = _s9PlaylistsV5ScopeVMa(0);
    v12 = (uint64_t *)sub_100048B14(v11, (uint64_t)qword_10124C8A8);
    v13 = sub_10010DC18(v10, v12);
    v14 = 0xD000000000000010;
    if (v13)
    {
      v14 = 0xD000000000000011;
      v15 = 0x8000000100E2D170;
    }
    else
    {
      v15 = 0x8000000100E2D150;
    }
    v18 = v14;
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = 0x53746E65746E6F43;
    v16._object = (void *)0xEB0000000074726FLL;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
    NSUserDefaults.encodeValue(_:forKey:)(v19);
    swift_bridgeObjectRelease(v15);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v19);
    v17 = objc_msgSend(v8, "standardUserDefaults", v18);
    __asm { BR              X10 }
  }
}

uint64_t sub_10010BB4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  v0 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004FACC(v0, qword_10124C8A8);
  v1 = (_QWORD *)sub_100048B14(v0, (uint64_t)qword_10124C8A8);
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACAF0);
  v3 = type metadata accessor for Playlist.Variant(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v2, v6 + *(_QWORD *)(v4 + 72), v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA7AA0;
  v8 = v7 + v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v8, enum case for Playlist.Variant.personalMix(_:), v3);
  v9 = sub_100047034(v7);
  swift_setDeallocating(v7);
  swift_arrayDestroy(v8, 1, v3);
  swift_deallocClassInstance(v7, 32, 7);
  v10 = (char *)v1 + *(int *)(v0 + 20);
  v11 = type metadata accessor for Playlist.Folder(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *v1 = v9;
  return result;
}

Swift::Int sub_10010BC78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12[4];

  v1 = type metadata accessor for Playlist.Folder(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v12, 0);
  sub_100045F74(v12, *v0);
  v8 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    v9 = sub_100048748(&qword_1011A19C8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    dispatch thunk of Hashable.hash(into:)(v12, v1, v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return Hasher._finalize()();
}

void sub_10010BDE8(__int128 *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = type metadata accessor for Playlist.Folder(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100045F74(a1, *v2);
  sub_10004A160((uint64_t)v2 + *(int *)(a2 + 20), (uint64_t)v11, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1u);
    v12 = sub_100048748(&qword_1011A19C8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    dispatch thunk of Hashable.hash(into:)(a1, v5, v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

Swift::Int sub_10010BF44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15[4];

  v5 = type metadata accessor for Playlist.Folder(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v15, a1);
  sub_100045F74(v15, *v2);
  sub_10004A160((uint64_t)v2 + *(int *)(a2 + 20), (uint64_t)v11, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1u);
    v12 = sub_100048748(&qword_1011A19C8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    dispatch thunk of Hashable.hash(into:)(v15, v5, v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return Hasher._finalize()();
}

uint64_t sub_10010C0BC()
{
  return sub_100048748(&qword_1011A18A8, _s9PlaylistsV5ScopeVMa, (uint64_t)&unk_100EAB520);
}

uint64_t sub_10010C0E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemInternalFilter.variant.getter);
}

uint64_t sub_10010C0F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemFilter.parent.getter);
}

uint64_t sub_10010C100@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.name.getter, a2);
}

uint64_t sub_10010C10C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.dateAdded.getter);
}

uint64_t sub_10010C118(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemInternalSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10010C124(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.lastModifiedDate.getter);
}

uint64_t sub_10010C130(unsigned __int8 a1)
{
  id v2;
  Swift::String v3;
  void *object;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::Int v12;
  unsigned int v13;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3._countAndFlagsBits = sub_100484394(a1);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "stringForKey:", v5, swift_bridgeObjectRelease(0x8000000100E2D1F0).n128_f64[0], 0xD00000000000001FLL);

  v7 = 3;
  if (v6)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    v11._countAndFlagsBits = v8;
    v11._object = v10;
    v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9F50, v11);
    swift_bridgeObjectRelease(v10);
    if (v12 == 1)
      v13 = 1;
    else
      v13 = 3;
    if (v12)
      return v13;
    else
      return 0;
  }
  return v7;
}

uint64_t sub_10010C264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  __n128 v73;
  _BYTE *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  __n128 v80;
  os_log_type_t v81;
  uint8_t *v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::Int v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  Swift::Int v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void *v134;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t KeyPath;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  double (*v166)(char *, uint64_t, uint64_t);
  void (*v167)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  void *v172;
  _QWORD *v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;

  v4 = v3;
  v156 = a2;
  v150 = a3;
  v162 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v159 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v137 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v144 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v10);
  v149 = (uint64_t)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v157 = (uint64_t)&v136 - v13;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v14);
  v148 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v143 = (char *)&v136 - v17;
  __chkstk_darwin(v18);
  v158 = (char *)&v136 - v19;
  v142 = type metadata accessor for MusicFavoriteStatus(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v21);
  v139 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v146 = (char *)&v136 - v24;
  __chkstk_darwin(v25);
  v136 = (uint64_t)&v136 - v26;
  v27 = type metadata accessor for Playlist.Folder.Item(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for Playlist.Variant(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v136 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v32);
  v152 = (uint64_t)&v136 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011A19D0);
  v161 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v138 = (char *)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (char *)&v136 - v37;
  v39 = type metadata accessor for Playlist.Entry(0);
  v145 = v7;
  v40 = v7;
  v41 = a1;
  MusicLibrarySectionedRequest.init()(v40, v39, &protocol witness table for Playlist, &protocol witness table for Playlist.Entry);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v42, v34);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v4 + 8), v34);
  v43 = *(int *)(v21 + 28);
  v164 = v4;
  v44 = (uint64_t *)(v4 + v43);
  v45 = *v44;
  v46 = v44[1];
  v165 = v38;
  MusicLibrarySectionedRequest.filterSections<>(text:)(v45, v46, v34, &protocol witness table for Playlist);
  KeyPath = swift_getKeyPath(&unk_100EAB728);
  v47 = *(_QWORD *)(a1 + 16);
  v48 = _swiftEmptyArrayStorage;
  v163 = v34;
  v160 = v21;
  v168 = v27;
  v147 = v41;
  v169 = v28;
  if (v47)
  {
    v173 = _swiftEmptyArrayStorage;
    sub_10035C740(0, v47, 0);
    v49 = v41 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v28 + 72);
    v166 = *(double (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v167 = v50;
    do
    {
      v51.n128_f64[0] = v166(v30, v49, v27);
      v52 = Playlist.Folder.Item.id.getter(v51);
      v54 = v53;
      (*(void (**)(char *, uint64_t))(v169 + 8))(v30, v27);
      v48 = v173;
      if ((swift_isUniquelyReferenced_nonNull_native(v173) & 1) == 0)
      {
        sub_10035C740(0, v48[2] + 1, 1);
        v48 = v173;
      }
      v56 = v48[2];
      v55 = v48[3];
      if (v56 >= v55 >> 1)
      {
        sub_10035C740(v55 > 1, v56 + 1, 1);
        v48 = v173;
      }
      v48[2] = v56 + 1;
      v57 = &v48[2 * v56];
      v57[4] = v52;
      v57[5] = v54;
      v27 = v168;
      v49 += (uint64_t)v167;
      --v47;
    }
    while (v47);
    v34 = v163;
    v21 = v160;
  }
  MusicLibrarySectionedRequest.filterSections<A>(matching:memberOf:)(KeyPath, v48, v34, &protocol witness table for Playlist, &protocol witness table for MusicItemID);
  swift_release();
  v58 = swift_bridgeObjectRelease(v48);
  v59 = v164;
  v176 = *(_QWORD *)(v164 + *(int *)(v21 + 24));
  v60 = v154;
  v61 = v21;
  v62 = v34;
  v63 = (uint64_t)v153;
  v64 = v155;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v154 + 104))(v153, enum case for Playlist.Variant.folder(_:), v155, v58);
  swift_bridgeObjectRetain();
  v65 = v152;
  sub_1001A3180(v63, v152);
  v66 = v63;
  v67 = v62;
  v68 = v61;
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v66, v64);
  sub_10004FF60(v65, (uint64_t *)&unk_1011CEF20);
  v69 = swift_getKeyPath(&unk_100EAB750);
  v70 = v176;
  v71 = sub_1004819E0(v176);
  swift_bridgeObjectRelease(v70);
  v72 = sub_100048748(&qword_1011A19B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  MusicLibrarySectionedRequest<>.filterSections<A>(matching:memberOf:)(v69, v71, v67, &protocol witness table for Playlist, v72);
  swift_release();
  v73 = swift_release();
  v74 = (_BYTE *)(v59 + *(int *)(v61 + 36));
  switch(*v74)
  {
    case 1:
      v75 = &unk_100EAB7F0;
      goto LABEL_17;
    case 3:
      v75 = &unk_100EAB818;
      goto LABEL_17;
    case 4:
      v75 = &unk_100EAB7C8;
LABEL_17:
      v89 = swift_getKeyPath(v75);
      MusicLibrarySectionedRequest.sortSections<A>(by:ascending:)(v89, v74[1], v67, &protocol witness table for Playlist);
      goto LABEL_19;
    case 5:
      swift_getKeyPath(&unk_100EAB7A0);
      MusicLibrarySectionedRequest<>.sortSections<A>(by:ascending:)();
LABEL_19:
      v73 = swift_release();
      break;
    case 6:
      break;
    default:
      if (qword_10119C028 != -1)
        swift_once(&qword_10119C028, sub_10046477C);
      v76 = type metadata accessor for Logger(0);
      sub_100048B14(v76, (uint64_t)static Logger.libraryView);
      v77 = v136;
      v78 = sub_10005B704(v164, v136, _s9PlaylistsVMa);
      v79 = Logger.logObject.getter(v78);
      v81 = static os_log_type_t.fault.getter(v80);
      if (os_log_type_enabled(v79, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc(12, -1);
        v83 = (_QWORD *)swift_slowAlloc(32, -1);
        *(_DWORD *)v82 = 136446210;
        v173 = v83;
        LOBYTE(v170) = *(_BYTE *)(v77 + *(int *)(v160 + 36));
        v84 = String.init<A>(describing:)(&v170, &_s11ContentSortV6OptionON);
        v86 = v85;
        *(_QWORD *)&v170 = sub_100322200(v84, v85, (uint64_t *)&v173);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, (char *)&v170 + 8);
        v87 = v86;
        v67 = v163;
        swift_bridgeObjectRelease(v87);
        sub_10005B748(v77, _s9PlaylistsVMa);
        _os_log_impl((void *)&_mh_execute_header, v79, v81, "Tried to apply unhandled sortOption=%{public}s to playlists playback request.", v82, 0xCu);
        swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
        v88 = v83;
        v68 = v160;
        swift_slowDealloc(v88, -1, -1);
        swift_slowDealloc(v82, -1, -1);
      }
      else
      {
        sub_10005B748(v77, _s9PlaylistsVMa);
      }

      break;
  }
  v90 = *(int *)(v68 + 32);
  v91 = *(_QWORD *)(v164 + v90);
  if (!*(_QWORD *)(v91 + 16))
    goto LABEL_34;
  Hasher.init(_seed:)(&v173, *(_QWORD *)(v91 + 40));
  String.hash(into:)(&v173, 0x657469726F766166, 0xE900000000000073);
  v92 = Hasher._finalize()();
  v93 = -1 << *(_BYTE *)(v91 + 32);
  v94 = v92 & ~v93;
  if (((*(_QWORD *)(v91 + 56 + ((v94 >> 3) & 0xFFFFFFFFFFFFF8)) >> v94) & 1) == 0)
    goto LABEL_34;
  v95 = ~v93;
  while (!*(_BYTE *)(*(_QWORD *)(v91 + 48) + v94))
  {
    v96 = 0xE300000000000000;
    v97 = 7105633;
LABEL_29:
    v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v96, 0x657469726F766166, 0xE900000000000073, 0);
    v73 = swift_bridgeObjectRelease(v96);
    if ((v98 & 1) != 0)
      goto LABEL_33;
    v94 = (v94 + 1) & v95;
    if (((*(_QWORD *)(v91 + 56 + ((v94 >> 3) & 0xFFFFFFFFFFFFF8)) >> v94) & 1) == 0)
      goto LABEL_34;
  }
  if (*(_BYTE *)(*(_QWORD *)(v91 + 48) + v94) == 2)
  {
    v96 = 0xE900000000000073;
    v97 = 0x64616F6C6E776F64;
    goto LABEL_29;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_33:
  v99 = swift_getKeyPath(&unk_100EAB778);
  v100 = v141;
  v101 = v140;
  v102 = v142;
  (*(void (**)(char *, _QWORD, uint64_t))(v141 + 104))(v140, enum case for MusicFavoriteStatus.favorited(_:), v142);
  v103 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterSections<A>(matching:equalTo:)(v99, v101, v67, &protocol witness table for Playlist, v103);
  v104 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v101, v102, v104);
LABEL_34:
  v105 = *(_QWORD *)(v164 + v90);
  v106 = v169;
  if (!*(_QWORD *)(v105 + 16))
    goto LABEL_45;
  Hasher.init(_seed:)(&v173, *(_QWORD *)(v105 + 40));
  String.hash(into:)(&v173, 0x64616F6C6E776F64, 0xE900000000000073);
  v107 = Hasher._finalize()();
  v108 = -1 << *(_BYTE *)(v105 + 32);
  v109 = v107 & ~v108;
  if (((*(_QWORD *)(v105 + 56 + ((v109 >> 3) & 0xFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
    goto LABEL_45;
  v110 = ~v108;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v105 + 48) + v109))
    {
      v111 = 0xE300000000000000;
      v112 = 7105633;
      goto LABEL_41;
    }
    v111 = 0xE900000000000073;
    v112 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v105 + 48) + v109) == 1)
    {
LABEL_41:
      v113 = _stringCompareWithSmolCheck(_:_:expecting:)(v112, v111, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      v73 = swift_bridgeObjectRelease(v111);
      if ((v113 & 1) != 0)
        goto LABEL_44;
      v109 = (v109 + 1) & v110;
      if (((*(_QWORD *)(v105 + 56 + ((v109 >> 3) & 0xFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
        goto LABEL_45;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_44:
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v67);
LABEL_45:
  v114 = v159;
  v115 = (uint64_t)v158;
  v116 = v162;
  v167 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v159 + 56);
  v167(v158, 1, 1, v162, v73);
  v117 = v157;
  sub_10004A160(v156, v157, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v117, 1, v27) == 1)
  {
    v174 = v67;
    v175 = sub_10010E0A8();
    v118 = sub_100049F68(&v173);
    v119 = v161;
    (*(void (**)(_QWORD *, char *, uint64_t))(v161 + 16))(v118, v165, v67);
    v172 = 0;
    v170 = 0u;
    v171 = 0u;
    v120 = v148;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v173, &v170);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v167)(v120, 0, 1, v116);
    v121 = (uint64_t)v120;
    goto LABEL_50;
  }
  v122 = v149;
  sub_10004A160(v117, v149, (uint64_t *)&unk_1011AD730);
  v123 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 88))(v122, v27);
  v119 = v161;
  if (v123 == enum case for Playlist.Folder.Item.playlist(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v106 + 96))(v122, v27);
    v124 = v9;
    v125 = v144;
    v126 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v124, v122, v145);
    v174 = v67;
    v175 = sub_10010E0A8();
    v127 = sub_100049F68(&v173);
    v169 = *(_QWORD *)(v119 + 16);
    ((void (*)(_QWORD *, char *, uint64_t))v169)(v127, v165, v67);
    *((_QWORD *)&v171 + 1) = v126;
    v172 = &protocol witness table for Playlist;
    v128 = sub_100049F68(&v170);
    (*(void (**)(_QWORD *, char *, uint64_t))(v125 + 16))(v128, v124, v126);
    v129 = v143;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v173, &v170);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v167)(v129, 0, 1, v116);
    v121 = (uint64_t)v129;
LABEL_50:
    sub_10010E0F4(v121, v115);
    v67 = v163;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v122, v27);
    sub_10004FF60(v115, (uint64_t *)&unk_1011A3D60);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v115, 1, 1, v116);
  }
  sub_10004FF60(v117, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v115, 1, v116))
  {
    v130 = v115;
  }
  else
  {
    v131 = v115;
    v132 = v137;
    v133 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 16))(v137, v115, v116);
    v134 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v133);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v132, v116);
    objc_msgSend(v134, "setShuffleMode:", 0);

    v130 = v131;
  }
  sub_10010E13C(v130, v150);
  return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v165, v67);
}

uint64_t sub_10010D524@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.name.getter, a2);
}

uint64_t sub_10010D530(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10010D53C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalSortProperties.lastModifiedDate.getter);
}

uint64_t sub_10010D548(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalFilter.favoriteStatus.getter);
}

uint64_t sub_10010D554(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[3];
  v6 = a1[4];
  sub_100007E68(a1, v5);
  return a4(v5, v6);
}

void sub_10010D59C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Folder(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)v1;
  v11 = type metadata accessor for MusicLibrary(0);
  v12 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8));
  v13 = (int *)_s9PlaylistsVMa(0);
  v14 = (uint64_t *)(v1 + v13[6]);
  sub_100045F74(a1, *v14);
  v15 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)v14 + *(int *)(v15 + 20), (uint64_t)v10, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    v16 = sub_100048748(&qword_1011A19C8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v16);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v17 = (uint64_t *)(v2 + v13[7]);
  v18 = *v17;
  v19 = v17[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v18, v19);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(v2 + v13[8]);
  swift_bridgeObjectRetain();
  sub_100045DAC(a1, v20);
  swift_bridgeObjectRelease(v20);
  __asm { BR              X10 }
}

uint64_t sub_10010D7F8()
{
  uint64_t v0;
  Swift::UInt8 v1;
  uint64_t v2;
  uint64_t v3;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1);
  return ((uint64_t (*)(void))((char *)sub_10010D8DC + 4 * byte_100EAB4B3[*(unsigned __int8 *)(v2 + *(int *)(v3 + 40))]))();
}

void sub_10010D8DC()
{
  uint64_t v0;
  Swift::UInt8 v1;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1);
}

void sub_10010D9C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v2;
  v6 = type metadata accessor for TitledSection(0);
  v7 = type metadata accessor for Playlist.Folder.Item(0);
  v8 = sub_100048748(&qword_1011A18B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  MusicLibrarySectionedRequest.init()(v6, v7, &protocol witness table for TitledSection, v8);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v9);
  swift_retain(*(_QWORD *)v4);
  MusicLibrarySectionedRequest.library.setter(v10, v9);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v4 + 8), v9);
  sub_10010A708(a2);
  sub_10010AA98();
  sub_10010ADA8();
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v4 + *(int *)(a1 + 28)));
}

Swift::Int sub_10010DAB4()
{
  __int128 v1[4];

  Hasher.init(_seed:)(v1, 0);
  sub_10010D59C(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10010DAF4(uint64_t a1)
{
  __int128 v2[4];

  Hasher.init(_seed:)(v2, a1);
  sub_10010D59C(v2);
  return Hasher._finalize()();
}

uint64_t sub_10010DB30()
{
  return sub_100048748(&qword_1011A18B0, _s9PlaylistsVMa, (uint64_t)&unk_100EAB588);
}

uint64_t sub_10010DB5C()
{
  return sub_100048748(&qword_1011A18B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
}

uint64_t sub_10010DB88(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A1998, _s9PlaylistsVMa, (uint64_t)&unk_100EAB5B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10010DBC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemInternalFilter.favoriteStatus.getter);
}

uint64_t sub_10010DBD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.lastModifiedDate.getter);
}

uint64_t sub_10010DBDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemInternalSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10010DBE8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.dateAdded.getter);
}

uint64_t sub_10010DBF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemSortProperties.name.getter, a2);
}

uint64_t sub_10010DC00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemInternalFilter.variant.getter);
}

uint64_t sub_10010DC0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistFolderItemFilter.parent.getter);
}

BOOL sub_10010DC18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  char *v30;

  v4 = type metadata accessor for Playlist.Folder(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A19B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v29 - v18;
  sub_10016D044(*a1, *a2);
  if ((v20 & 1) == 0)
    return 0;
  v30 = v7;
  v21 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v19, (uint64_t *)&unk_1011B5660);
  sub_10004A160((uint64_t)a2 + *(int *)(v21 + 20), (uint64_t)v16, (uint64_t *)&unk_1011B5660);
  v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1011B5660);
  sub_10004A160((uint64_t)v16, v22, (uint64_t *)&unk_1011B5660);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B5660);
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B5660);
    if (v23(v22, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011B5660);
      return 1;
    }
    goto LABEL_7;
  }
  sub_10004A160((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1011B5660);
  if (v23(v22, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B5660);
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B5660);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_7:
    sub_10004FF60((uint64_t)v10, &qword_1011A19B8);
    return 0;
  }
  v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v30, v22, v4);
  v25 = sub_100048748(&qword_1011A19C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v24, v4, v25);
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v24, v4);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B5660);
  sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B5660);
  v27(v13, v4);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011B5660);
  return (v26 & 1) != 0;
}

uint64_t sub_10010DF38(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_13;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    goto LABEL_13;
  v4 = (int *)_s9PlaylistsVMa(0);
  if (!sub_10010DC18((uint64_t *)(a1 + v4[6]), (uint64_t *)(a2 + v4[6])))
    goto LABEL_13;
  v5 = v4[7];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  v10 = v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v8, v9, 0), v12 = 0, (v11 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a2 + v4[8])) & 1) != 0)
    {
      v13 = v4[9];
      v14 = *(unsigned __int8 *)(a1 + v13 + 1);
      v15 = *(unsigned __int8 *)(a2 + v13 + 1);
      sub_1005CFF5C(*(_BYTE *)(a1 + v13));
      v12 = 0;
      if ((v16 & 1) != 0 && ((v14 ^ v15) & 1) == 0)
      {
        v17 = v4[10];
        v18 = *(_BYTE *)(a1 + v17 + 1);
        v19 = *(_BYTE *)(a2 + v17 + 1);
        sub_1005CFF5C(*(_BYTE *)(a1 + v17));
        v12 = v20 & (v18 ^ v19 ^ 1);
      }
      return v12 & 1;
    }
LABEL_13:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_10010E060@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_10010E0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A19D8;
  if (!qword_1011A19D8)
  {
    v1 = sub_100044B54(&qword_1011A19D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A19D8);
  }
  return result;
}

uint64_t sub_10010E0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010E13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010E184(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalFilter.favoriteStatus.getter);
}

uint64_t sub_10010E190(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalSortProperties.lastModifiedDate.getter);
}

uint64_t sub_10010E19C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10010E1A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.libraryAddedDate.getter);
}

uint64_t sub_10010E1B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.name.getter, a2);
}

unint64_t sub_10010E1C0()
{
  unint64_t result;

  result = qword_1011A38B0;
  if (!qword_1011A38B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1011A38B0);
  }
  return result;
}

uint64_t sub_10010E204(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100044B54((uint64_t *)&unk_1011A38A0);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10010E26C()
{
  unint64_t result;

  result = qword_1011A38C0;
  if (!qword_1011A38C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1011A38C0);
  }
  return result;
}

_UNKNOWN **sub_10010E2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  id v4;
  id v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    sub_10005B704(v0, (uint64_t)v3, _s9PlaylistsVMa);
LABEL_4:
    sub_10005B748((uint64_t)v3, _s9PlaylistsVMa);
    return &off_1010AA0D0;
  }
  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  sub_10005B704(v0, (uint64_t)v3, _s9PlaylistsVMa);
  if (v5 == (id)6)
    goto LABEL_4;
  v11 = *v3;
  v7 = type metadata accessor for MusicLibrary(0);
  swift_retain();
  v10 = static MusicLibrary.shared.getter(v8);
  v9 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(v7) = dispatch thunk of static Equatable.== infix(_:_:)(&v11, &v10, v7, v9);
  swift_release();
  swift_release();
  sub_10005B748((uint64_t)v3, _s9PlaylistsVMa);
  if ((v7 & 1) != 0)
    return &off_1010AA0F8;
  else
    return &off_1010AA0D0;
}

uint64_t sub_10010E43C()
{
  return sub_100048748(&qword_10119D0A0, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_100EA61A0);
}

void sub_10010E468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  void *v41;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
    v5 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v40, v3, v4, v5);
    v1 = v40[0];
    v37 = v40[1];
    v7 = v40[2];
    v8 = v40[3];
    v9 = v40[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v37 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v35 = v7;
  v36 = (unint64_t)(v7 + 64) >> 6;
  v38 = _UIWindowSceneSessionRoleCarPlay;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (!v14)
    goto LABEL_39;
  v15 = v14;
  v39 = v14;
  v16 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  swift_unknownObjectRetain(v15, v17);
  swift_dynamicCast(&v41, &v39, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
  v18 = v41;
  *(_QWORD *)&v19 = swift_unknownObjectRelease(v15).n128_u64[0];
  v20 = v8;
  v21 = v9;
  if (!v18)
    goto LABEL_39;
  while (1)
  {
    v26 = objc_msgSend(v18, "session", v19, v35);
    v27 = objc_msgSend(v26, "role");

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v33 = v31;
    if (v28 == v32 && v30 == v31)
    {

      swift_bridgeObjectRelease_n(v30, 2);
      goto LABEL_39;
    }
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);

    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v33);
    if ((v34 & 1) != 0)
      goto LABEL_39;

    v8 = v20;
    v9 = v21;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v9)
      break;
    v21 = (v9 - 1) & v9;
    v22 = __clz(__rbit64(v9)) | (v8 << 6);
    v20 = v8;
LABEL_32:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v22);
    if (!v18)
      goto LABEL_39;
  }
  v23 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v23 >= v36)
    goto LABEL_39;
  v24 = *(_QWORD *)(v37 + 8 * v23);
  v20 = v8 + 1;
  if (v24)
    goto LABEL_31;
  v20 = v8 + 2;
  if (v8 + 2 >= v36)
    goto LABEL_39;
  v24 = *(_QWORD *)(v37 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 3;
  if (v8 + 3 >= v36)
    goto LABEL_39;
  v24 = *(_QWORD *)(v37 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 4;
  if (v8 + 4 >= v36)
    goto LABEL_39;
  v24 = *(_QWORD *)(v37 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v8 + 5;
  if (v8 + 5 >= v36)
    goto LABEL_39;
  v24 = *(_QWORD *)(v37 + 8 * v20);
  if (v24)
  {
LABEL_31:
    v21 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_32;
  }
  v25 = v8 + 6;
  while (v36 != v25)
  {
    v24 = *(_QWORD *)(v37 + 8 * v25++);
    if (v24)
    {
      v20 = v25 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10004FA7C(v1);
}

void *sub_10010E824(uint64_t a1)
{
  void *result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;

  result = &_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      v6 = *(void **)(a1 + 8 * i + 32);
      if (v6)
      {
        v7 = v6;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v9 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v8 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v9 >= v8 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
        v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized Array._endMutation()(v5);
      }
    }
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void sub_10010E900(char *a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  SEL *v13;
  id v14;
  __CFString *v15;
  id v16;
  void *v17;
  id v18;
  int v19;
  int v20;
  void *v21;
  id v22;
  id v23;
  __CFString *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __CFString *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  char v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  char v55;
  char v57;
  id v58;
  uint64_t v59;
  id v60;
  _QWORD *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unsigned __int8 isEscapingClosureAtFileLocation;
  SEL *v72;
  uint64_t v73;
  char v74;
  id v75;
  double v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  unsigned __int8 v82;
  unsigned int v83;
  uint64_t v84;
  char *v85;
  void *v86;
  double v87;
  void *v88;
  __CFString *v89;
  uint64_t v90;
  char *v91;
  id v92;
  char *v93;
  void *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  id v100;
  char *v101;
  id v102;
  char *v103;
  __CFString *v104;
  void *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  __int128 v112;
  id v113;
  id v114;
  id v115;
  double v116;
  double v117;
  double v118;
  float v119;
  double v120;
  double v121;
  double v122;
  id v123;
  id v124;
  BOOL v125;
  char v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  void *v137;
  id v138;
  id v139;
  void *v140;
  id v141;
  void *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);
  void *v146;
  char *v147;
  char *v148;
  __CFString *v149;
  char *v150;
  unsigned int (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  id v154;
  void *v155;
  uint64_t v156;
  id v157;
  id v158;
  void *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  unsigned __int8 v164;
  char *v165;
  void *v166;
  uint64_t v167;
  unsigned __int8 v168;
  char *v169;
  void *v170;
  uint64_t v171;
  unsigned __int8 v172;
  id v173;
  double v174;
  id v175;
  id v176;
  id v177;
  id v178;
  int v179;
  uint64_t v180;
  NSObject *v181;
  os_log_type_t v182;
  uint64_t v183;
  void *v184;
  _QWORD *v185;
  __CFString *v186;
  uint64_t v187;
  __CFString *v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  void *v193;
  id v194;
  id v195;
  uint64_t v196;
  void *v197;
  __CFString *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  double v204;
  void *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  NSObject *v209;
  os_log_type_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t (*v216)(uint64_t);
  void *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  void *v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t);
  void *v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  __n128 v231;
  __n128 v232;
  _QWORD v233[2];
  uint64_t v234;
  int v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  __int128 v244;
  __int128 v245;
  uint64_t length;
  __int128 v247;
  uint64_t v248;
  __CFString *v249;
  char *v250;
  __CFString *v251;
  void *v252;
  char v253[24];
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t (*v259)(uint64_t);
  void *v260;
  void (*v261)();
  __CFString *v262;
  BOOL v263;
  __int128 aBlock;
  __int128 v265;
  __int128 v266;
  uint64_t v267;

  v2 = v1;
  v250 = a1;
  v251 = (__CFString *)type metadata accessor for Logger(0);
  length = v251[-1].length;
  __chkstk_darwin(v251);
  v4 = (char *)v233 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v5);
  v241 = (char *)v233 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for IndexPath(0);
  v242 = *(_QWORD *)(v248 - 8);
  v7 = __chkstk_darwin(v248);
  v239 = (char *)v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v238 = (char *)v233 - v9;
  v236 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v236);
  v237 = (char *)v233 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
  v12 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  v13 = (SEL *)&selRef_referralObject;
  if (!v12)
  {
    LODWORD(v244) = sub_10011C4FC();
    v15 = 0;
    goto LABEL_9;
  }
  v14 = objc_msgSend(v12, "tracklist");
  v15 = (__CFString *)objc_msgSend(v14, "playingItem");

  LODWORD(v244) = sub_10011C4FC();
  if (!v15)
  {
LABEL_9:
    LODWORD(v245) = 10;
    v20 = 1;
    goto LABEL_12;
  }
  v16 = -[__CFString nowPlayingAudioFormat](v15, "nowPlayingAudioFormat");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "badging");
    if ((unint64_t)v18 >= 6)
      v19 = 10;
    else
      v19 = 0x8050604030AuLL >> (8 * v18);
    LODWORD(v245) = v19;

  }
  else
  {
    LODWORD(v245) = 10;
  }
  v20 = 0;
LABEL_12:
  v21 = *(void **)&v11[(_QWORD)v2];
  if (v21
    && (v22 = objc_msgSend(v21, "tracklist"),
        v23 = objc_msgSend(v22, "vocalsControlCommand"),
        v22,
        v23))
  {
    LODWORD(v247) = objc_msgSend(v23, "isActive");
    swift_unknownObjectRelease(v23);
  }
  else
  {
    LODWORD(v247) = 0;
  }
  v243 = v4;
  v249 = v15;
  v252 = v12;
  if ((v20 & 1) == 0)
  {
    v235 = v20;
    v240 = v11;
    v24 = v15;
    v25 = -[__CFString contentItemIdentifier](v24, "contentItemIdentifier");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    if (v250
      && (v29 = objc_msgSend(v250, "tracklist"),
          v30 = objc_msgSend(v29, "playingItem"),
          v29,
          v30))
    {
      v31 = objc_msgSend(v30, "contentItemIdentifier");

      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      if (v26 == v32 && v28 == v34)
      {
        swift_bridgeObjectRelease_n(v28, 2);

        v12 = v252;
LABEL_33:
        v11 = v240;
LABEL_34:
        LOBYTE(v20) = v235;
        goto LABEL_35;
      }
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v32, v34, 0);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v28);
      v12 = v252;
      if ((v47 & 1) != 0)
      {

        goto LABEL_33;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v28);
    }
    if (qword_10119C358 != -1)
      swift_once(&qword_10119C358, sub_1005EC118);
    sub_100048B14((uint64_t)v251, (uint64_t)qword_10124D428);
    v35 = v24;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v234 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v234;
      *(_DWORD *)v38 = 136446210;
      v233[1] = v38 + 4;
      v39 = -[__CFString contentItemIdentifier](v35, "contentItemIdentifier");
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      v13 = (SEL *)&selRef_referralObject;
      v43 = v40;
      v15 = v249;
      v257 = (_QWORD *)sub_100322200(v43, v42, (uint64_t *)&aBlock);
      v12 = v252;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, &v258);
      swift_bridgeObjectRelease(v42);

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Switched to playing item=%{public}s", v38, 0xCu);
      v44 = v234;
      swift_arrayDestroy(v234, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

    }
    v11 = v240;
    v45 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction);
    if (v45)
    {
      v46 = v45;
      dispatch thunk of ReactionEffectInteraction.clearReactions()();

    }
    sub_10011AF3C();

    goto LABEL_34;
  }
LABEL_35:
  sub_1001322B4();
  sub_1001329AC();
  sub_100133030();
  v48 = OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton;
  v49 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton);
  if (!v49)
  {
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  if (v12)
  {
    v50 = v49;
    v51 = objc_msgSend(v12, v13[455]);
    v52 = objc_msgSend(v51, "playingItem");

    if (v52)
    {

      v53 = 0;
      goto LABEL_41;
    }
  }
  else
  {
    v54 = v49;
  }
  v53 = 1;
LABEL_41:
  objc_msgSend(v49, "setHidden:", v53);

  v240 = (char *)v48;
  if ((_DWORD)v247)
  {
    v55 = 10;
LABEL_55:
    sub_10011C5C0(v55);
    LOBYTE(v69) = 0;
    v15 = v251;
    goto LABEL_56;
  }
  v55 = v245;
  if (v244 != 10 && v245 == 10)
    v57 = v20;
  else
    v57 = 1;
  if ((v57 & 1) != 0)
    goto LABEL_55;
  v58 = -[__CFString metadataObject](v15, "metadataObject");
  v55 = v245;
  if (!v58)
    goto LABEL_55;
  v59 = (uint64_t)v251;
  v60 = objc_msgSend(v58, "innermostModelObject");

  objc_opt_self(MPModelSong);
  if (!swift_dynamicCastObjCClass(v60)
    || (v61 = sub_1006706C0(), v62 = sub_100413F48(v244, (uint64_t)v61), swift_bridgeObjectRelease(v61), (v62 & 1) == 0))
  {

    v12 = v252;
    v13 = (SEL *)&selRef_referralObject;
    v55 = v245;
    goto LABEL_55;
  }
  v63 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v2);
  *(_QWORD *)&v266 = sub_10013C23C;
  *((_QWORD *)&v266 + 1) = v63;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v265 = sub_1001DBD98;
  *((_QWORD *)&v265 + 1) = &unk_1010B2A00;
  *(_QWORD *)&v247 = _Block_copy(&aBlock);
  v257 = _swiftEmptyArrayStorage;
  v69 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v63);
  v64 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v65 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  v66 = v237;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v257, v64, v65, v236, v69);
  v67 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
  v68 = DispatchWorkItem.init(flags:block:)(v66, v247);
  swift_release(*((_QWORD *)&v266 + 1));
  swift_release(v63);
  sub_10012D984(v68);

  LOBYTE(v69) = 1;
  v15 = (__CFString *)v59;
  v12 = v252;
  v13 = (SEL *)&selRef_referralObject;
LABEL_56:
  LOBYTE(aBlock) = 1;
  v70 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v70) & 1) == 0)
    goto LABEL_62;
  if (v12)
    isEscapingClosureAtFileLocation = objc_msgSend(v12, "isSharedListeningSession");
  else
    isEscapingClosureAtFileLocation = 0;
  v72 = (SEL *)&selRef_referralObject;
  if (qword_10119B8B8 != -1)
    goto LABEL_157;
  while (1)
  {
    v73 = qword_10124C790;
    swift_retain(qword_10124C790);
    v74 = GroupActivitiesManager.hasJoined.getter();
    swift_release(v73);
    v75 = sub_10012CF10();
    objc_msgSend(v75, v72[166], v74 & 1 | ((isEscapingClosureAtFileLocation & 1) == 0));

LABEL_62:
    sub_100130A44();
    v77 = *(void **)&v11[(_QWORD)v2];
    if (v77)
    {
      v78 = objc_msgSend(v77, v13[455]);
      v11 = (char *)objc_msgSend(v78, "vocalsControlCommand");

      v79 = v250;
      if (!v250)
        goto LABEL_68;
    }
    else
    {
      v11 = 0;
      v79 = v250;
      if (!v250)
        goto LABEL_68;
    }
    v80 = objc_msgSend(v79, v13[455]);
    v81 = objc_msgSend(v80, "vocalsControlCommand");

    if (v81)
    {
      v82 = objc_msgSend(v81, "isActive");
      *(_QWORD *)&v76 = swift_unknownObjectRelease(v81).n128_u64[0];
      goto LABEL_69;
    }
LABEL_68:
    v82 = 2;
LABEL_69:
    v250 = v11;
    if (v11)
    {
      v83 = objc_msgSend(v11, "isActive", v76);
      if ((v82 & 1) != 0)
      {
        if ((v83 & 1) == 0)
        {
LABEL_79:
          v84 = swift_allocObject(&unk_1010B28D0, 24, 7);
          *(_QWORD *)(v84 + 16) = v2;
          v88 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView);
          if (!v88)
          {
            v103 = v2;
            sub_10011C9E8();
            sub_100133D14();
            goto LABEL_86;
          }
          v89 = v15;
          sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
          v90 = qword_10119B9C0;
          v91 = v2;
          v92 = v88;
          if (v90 != -1)
            swift_once(&qword_10119B9C0, sub_10012C5F4);
          v93 = v11;
          v94 = (void *)qword_1011A1A70;
          v95 = swift_allocObject(&unk_1010B28F8, 24, 7);
          *(_QWORD *)(v95 + 16) = v92;
          v96 = v92;
          static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v94, 0, sub_10013C13C, v95, 0, 0, 0.0);
          swift_release(v95);
          if (qword_10119B9D0 != -1)
            swift_once(&qword_10119B9D0, sub_10012C688);
          v97 = qword_1011A1AA8;
          v98 = swift_allocObject(&unk_1010B2920, 24, 7);
          *(_QWORD *)(v98 + 16) = v96;
          v99 = (_QWORD *)swift_allocObject(&unk_1010B2948, 48, 7);
          v99[2] = v96;
          v99[3] = v91;
          v99[4] = sub_10013C118;
          v99[5] = v84;
          v100 = v96;
          v101 = v91;
          v102 = v100;
          swift_retain(v84);
          static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v97, 0, sub_10013C144, v98, sub_10013C194, (uint64_t)v99, 0.25, 0.0);
          swift_release(v99);
          swift_release(v98);

          swift_release(v84);
          v15 = v89;
          v12 = v252;
          v11 = v93;
          goto LABEL_92;
        }
      }
      else if (v83)
      {
        v84 = swift_allocObject(&unk_1010B2970, 24, 7);
        *(_QWORD *)(v84 + 16) = v2;
        v85 = v2;
        sub_100134348();
        v86 = *(void **)&v85[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
        if (!v86)
          goto LABEL_164;
        objc_msgSend(v86, "alpha");
        if (v87 == 0.0)
        {
          sub_10011C9E8();
          sub_100134558();
LABEL_86:
          swift_release(v84);
          goto LABEL_93;
        }
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        if (qword_10119B9C0 != -1)
          swift_once(&qword_10119B9C0, sub_10012C5F4);
        v104 = v15;
        v105 = (void *)qword_1011A1A70;
        v106 = swift_allocObject(&unk_1010B2998, 24, 7);
        *(_QWORD *)(v106 + 16) = v85;
        v107 = v85;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v105, 0, sub_10013C884, v106, 0, 0, 0.0);
        swift_release(v106);
        if (qword_10119B9D0 != -1)
          swift_once(&qword_10119B9D0, sub_10012C688);
        v108 = qword_1011A1AA8;
        v109 = swift_allocObject(&unk_1010B29C0, 24, 7);
        *(_QWORD *)(v109 + 16) = v107;
        v110 = swift_allocObject(&unk_1010B29E8, 32, 7);
        *(_QWORD *)(v110 + 16) = sub_10013C1A0;
        *(_QWORD *)(v110 + 24) = v84;
        v111 = v107;
        swift_retain(v84);
        static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v108, 0, sub_10013B3C4, v109, sub_10013B3D8, v110, 0.25, 0.0);
        swift_release(v110);
        swift_release(v109);
        swift_release(v84);
        v15 = v104;
        v11 = v250;
LABEL_92:
        v13 = (SEL *)&selRef_referralObject;
        goto LABEL_93;
      }
    }
    else if ((v82 & 1) != 0)
    {
      goto LABEL_79;
    }
    if ((v69 & 1) == 0)
      sub_100133704(v244);
LABEL_93:
    v263 = 0;
    v112 = 0uLL;
    if (v12)
    {
      v113 = objc_msgSend(v12, v13[455], 0.0);
      v114 = objc_msgSend(v113, "playingItem");

      if (v114)
      {
        v115 = objc_msgSend(v114, "duration");
        v116 = *(double *)&aBlock;
        v117 = *((double *)&v265 + 1);
        v118 = *(double *)&v266;
        v119 = *((float *)&v266 + 2);
        v120 = v118 + (static Date.timeIntervalSinceReferenceDate.getter(v115) - v116) * v119;
        if (v120 >= v117)
          v120 = v117;
        v121 = fmax(v120, 0.0);
        objc_msgSend(v114, "duration");
        v122 = *((double *)&v265 + 1);
        if (*((double *)&v265 + 1) <= v121)
        {
          v125 = 1;
        }
        else
        {
          v123 = objc_msgSend(v12, v13[455], *((double *)&v265 + 1));
          v124 = objc_msgSend(v123, "lastChangeDirection");

          v125 = v124 == (id)5;
        }
        v263 = v125;
        objc_msgSend(v114, "duration", v122);
        v247 = aBlock;
        v245 = v265;
        v244 = v266;
        v130 = 256;
        if (!BYTE1(v267))
          v130 = 0;
        v131 = v130 | v267;
        v132 = 0x10000;
        if (!BYTE2(v267))
          v132 = 0;
        v127 = v131 | v132;
        v133 = MPCPlayerResponseItem.isLiveContent.getter();

        v129 = v244;
        v128 = v245;
        v112 = v247;
        v126 = v133 ^ 1;
      }
      else
      {
        v126 = 0;
        v127 = 2;
        v128 = 0uLL;
        v129 = 0uLL;
        v112 = 0uLL;
      }
    }
    else
    {
      v126 = 0;
      v127 = 2;
      v128 = 0uLL;
      v129 = 0uLL;
    }
    aBlock = v112;
    v265 = v128;
    v266 = v129;
    v267 = v127;
    v134 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
    v135 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl);
    v136 = v248;
    if (!v135)
      goto LABEL_159;
    objc_msgSend(v135, "setEnabled:", v126 & 1);
    v137 = *(void **)((char *)v2 + v134);
    if (!v137)
      goto LABEL_160;
    v138 = v137;
    sub_1002DBFF0((uint64_t)&aBlock);

    if (!v12)
      goto LABEL_117;
    v139 = objc_msgSend(v12, v13[455]);
    if (!v139)
      goto LABEL_117;
    v140 = v139;
    v141 = objc_msgSend(v139, "playingItemIndexPath");
    if (!v141)
    {
      v152 = (uint64_t)v241;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v241, 1, 1, v136);
LABEL_116:

      sub_10004FF60(v152, (uint64_t *)&unk_1011A3D50);
LABEL_117:
      v169 = (char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle;
      v170 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle);
      v171 = *(_QWORD *)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle + 8);
      *(_QWORD *)v169 = 0;
      *((_QWORD *)v169 + 1) = 0;
      v172 = v169[16];
      v169[16] = -1;
      sub_10013C090(v170, v171, v172);
      sub_10012CDFC();
      if (!v12)
        goto LABEL_122;
      goto LABEL_118;
    }
    v142 = v141;
    v143 = v239;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v141);

    v144 = v242;
    v145 = *(void (**)(char *, char *, uint64_t))(v242 + 32);
    v146 = v12;
    v147 = (char *)v2;
    v148 = v11;
    v149 = v15;
    v150 = v241;
    v145(v241, v143, v136);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v150, 0, 1, v136);
    v151 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
    v152 = (uint64_t)v150;
    v15 = v149;
    v11 = v148;
    v2 = v147;
    v12 = v146;
    if (v151(v152, 1, v136) == 1)
      goto LABEL_116;
    v153 = (uint64_t)v238;
    v145(v238, (char *)v152, v136);
    v154 = objc_msgSend(v2, "view");
    if (!v154)
      goto LABEL_165;
    v155 = v154;
    v156 = v136;
    v157 = objc_msgSend(v154, "window");

    v158 = objc_msgSend(v157, "windowScene");
    sub_10034E508(v153, v158);
    v160 = v159;
    v162 = v161;
    v164 = v163;

    v165 = (char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle;
    v166 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle);
    v167 = *(_QWORD *)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle + 8);
    *(_QWORD *)v165 = v160;
    *((_QWORD *)v165 + 1) = v162;
    v168 = v165[16];
    v165[16] = v164;
    sub_10013C0F0(v160, v162, v164);
    sub_10013C090(v166, v167, v168);
    sub_10012CDFC();
    sub_10013C090(v160, v162, v164);

    (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v153, v156);
    v15 = v251;
    v12 = v252;
    v11 = v250;
LABEL_118:
    v173 = objc_msgSend(v12, "videoOutput");
    if (v173)
    {
      v175 = v173;
      objc_msgSend(v173, "setShowsPlaybackControls:", *((unsigned __int8 *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo));
      *(_QWORD *)&v174 = swift_unknownObjectRelease(v175).n128_u64[0];
    }
    v176 = objc_msgSend(v12, "videoOutput", v174);
    if (v176)
    {
      v177 = v176;
      v178 = objc_msgSend(v176, "playerViewController");
      swift_unknownObjectRelease(v177);

      v179 = 1;
      goto LABEL_123;
    }
LABEL_122:
    v179 = 0;
LABEL_123:
    if (qword_10119C358 != -1)
      swift_once(&qword_10119C358, sub_1005EC118);
    v180 = sub_100048B14((uint64_t)v15, (uint64_t)qword_10124D428);
    v72 = v12;
    v248 = v180;
    v181 = Logger.logObject.getter(v72);
    v182 = static os_log_type_t.default.getter(v181);
    if (os_log_type_enabled(v181, v182))
    {
      v183 = swift_slowAlloc(24, -1);
      v184 = v12;
      v185 = (_QWORD *)swift_slowAlloc(32, -1);
      v257 = v185;
      *(_DWORD *)v183 = 67240706;
      LODWORD(v254) = v179;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v254, (char *)&v254 + 4);
      *(_WORD *)(v183 + 8) = 1026;
      swift_beginAccess(&v263, v253, 0, 0);
      LODWORD(v254) = v263;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v254, (char *)&v254 + 4);
      *(_WORD *)(v183 + 14) = 2082;
      *(_QWORD *)&v247 = v72;
      if (v184)
      {
        v186 = CFSTR("MPCPlayerStateUnknown");
        switch((unint64_t)-[SEL state](v72, "state"))
        {
          case 0uLL:
            goto LABEL_131;
          case 1uLL:
            v186 = CFSTR("MPCPlayerStateStopped");
            goto LABEL_131;
          case 2uLL:
            v186 = CFSTR("MPCPlayerStatePlaying");
            goto LABEL_131;
          case 3uLL:
            v186 = CFSTR("MPCPlayerStateBuffering");
            goto LABEL_131;
          case 4uLL:
            v186 = CFSTR("MPCPlayerStatePaused");
            goto LABEL_131;
          case 5uLL:
            v186 = CFSTR("MPCPlayerStateSeeking");
            goto LABEL_131;
          case 6uLL:
            v186 = CFSTR("MPCPlayerStateInterrupted");
            goto LABEL_131;
          default:
            break;
        }
      }
      else
      {
        v186 = CFSTR("MPCPlayerStateUnknown");
LABEL_131:
        v188 = v186;
      }
      v15 = v186;
      v189 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v191 = v190;

      v254 = sub_100322200(v189, v191, (uint64_t *)&v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v254, &v255);
      swift_bridgeObjectRelease(v191);
      v72 = (SEL *)v247;

      _os_log_impl((void *)&_mh_execute_header, v181, v182, "Updating UI with new response: isVideo=%{BOOL,public}d, didReachEnd=%{BOOL,public}d, state=%{public}s", (uint8_t *)v183, 0x18u);
      swift_arrayDestroy(v185, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v185, -1, -1);
      swift_slowDealloc(v183, -1, -1);

      v12 = v252;
      v11 = v250;
    }
    else
    {

    }
    if (!v179 || (!v12 || -[SEL state](v72, "state") != (id)2) && (swift_beginAccess(&v263, &v254, 0, 0), v263))
    {
      v192 = OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput;
      v193 = *(void **)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput);
      if (v193)
      {
        v194 = objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)((char *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput), v187), "playerViewController");
        v195 = objc_msgSend(v194, "view");

        if (!v195)
          goto LABEL_161;
        objc_msgSend(v195, "layoutIfNeeded");

        v196 = swift_allocObject(&unk_1010B2880, 24, 7);
        *(_QWORD *)(v196 + 16) = v2;
        v261 = sub_10013C0E8;
        v262 = (__CFString *)v196;
        v257 = _NSConcreteStackBlock;
        v258 = 1107296256;
        v259 = sub_1001DBD98;
        v260 = &unk_1010B2898;
        v197 = _Block_copy(&v257);
        v198 = v262;
        v199 = v2;
        objc_msgSend(v193, "exitFullScreenWithCompletion:", v197, swift_release(v198).n128_f64[0]);
        _Block_release(v197);
        v199[OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo] = 0;
        v200 = *(_QWORD *)((char *)v2 + v192);
        *(_QWORD *)((char *)v2 + v192) = 0;
        swift_unknownObjectRelease(v193);
        swift_unknownObjectRelease(v200);
      }
    }
    v12 = (void *)objc_opt_self(MPModelObject);
    v69 = swift_allocObject(&unk_1010B2808, 24, 7);
    *(_QWORD *)(v69 + 16) = v2;
    v201 = swift_allocObject(&unk_1010B2830, 32, 7);
    *(_QWORD *)(v201 + 16) = sub_10013C0B8;
    *(_QWORD *)(v201 + 24) = v69;
    v261 = (void (*)())sub_1001095DC;
    v262 = (__CFString *)v201;
    v257 = _NSConcreteStackBlock;
    v258 = 1107296256;
    v259 = sub_10046D7B4;
    v260 = &unk_1010B2848;
    v202 = _Block_copy(&v257);
    v15 = v262;
    v13 = v2;
    swift_retain(v201);
    objc_msgSend(v12, "performWithoutEnforcement:", v202, swift_release(v15).n128_f64[0]);
    _Block_release(v202);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v201, "", 123, 188, 49, 1);
    swift_release(v201);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_157:
    swift_once(&qword_10119B8B8, sub_1000E968C);
  }
  v203 = *(uint64_t *)((char *)v13 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController);
  swift_retain(v203);
  sub_10091346C(v252);
  *(_QWORD *)&v204 = swift_release(v203).n128_u64[0];
  v205 = *(void **)((char *)v13 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  if (v205)
  {
    v206 = v205;
    sub_100125510(v206);

  }
  if (-[SEL isViewLoaded](v13, "isViewLoaded", v204))
  {
    v207 = v243;
    v208 = (uint64_t)v251;
    (*(void (**)(char *, uint64_t, __CFString *))(length + 16))(v243, v248, v251);
    v15 = v13;
    v209 = Logger.logObject.getter(v15);
    v210 = static os_log_type_t.default.getter(v209);
    if (os_log_type_enabled(v209, v210))
    {
      *(_QWORD *)&v247 = v72;
      v211 = swift_slowAlloc(22, -1);
      v212 = swift_slowAlloc(64, -1);
      v256 = v212;
      *(_DWORD *)v211 = 136446466;
      v213 = *(void **)&v240[(_QWORD)v2];
      if (v213)
      {
        objc_msgSend(v213, "frame");
        v257 = v214;
        v258 = v215;
        v259 = v216;
        v260 = v217;
        type metadata accessor for CGRect(0);
        v219 = v218;
        v220 = String.init<A>(describing:)(&v257, v218);
        v222 = v221;
        v257 = (_QWORD *)sub_100322200(v220, v221, &v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, &v258);
        swift_bridgeObjectRelease(v222);

        *(_WORD *)(v211 + 12) = 2082;
        v223 = *(void **)((char *)&v15->isa + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
        if (v223)
        {
          objc_msgSend(v223, "frame");
          v257 = v224;
          v258 = v225;
          v259 = v226;
          v260 = v227;
          v228 = String.init<A>(describing:)(&v257, v219);
          v230 = v229;
          v257 = (_QWORD *)sub_100322200(v228, v229, &v256);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, &v258);
          swift_bridgeObjectRelease(v230);

          _os_log_impl((void *)&_mh_execute_header, v209, v210, "Updating UI with new response: contextButton frame %{public}s topContainerView frame %{public}s", (uint8_t *)v211, 0x16u);
          swift_arrayDestroy(v212, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v212, -1, -1);
          swift_slowDealloc(v211, -1, -1);

          v231 = swift_unknownObjectRelease(v250);
          (*(void (**)(char *, __CFString *, __n128))(length + 8))(v243, v251, v231);
          goto LABEL_150;
        }
LABEL_163:

        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
        JUMPOUT(0x100110444);
      }
LABEL_162:

      __break(1u);
      goto LABEL_163;
    }

    v232 = swift_unknownObjectRelease(v11);
    (*(void (**)(char *, uint64_t, __n128))(length + 8))(v207, v208, v232);
LABEL_150:
    swift_release(v69);
  }
  else
  {

    swift_release(v69);
    swift_unknownObjectRelease(v11);
  }
}

void sub_100110460(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  id v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = sub_10011C4FC();
    v5 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
    if (v5
      && (v6 = objc_msgSend(v5, "tracklist"),
          v7 = objc_msgSend(v6, "playingItem"),
          v6,
          v7))
    {
      v8 = objc_msgSend(v7, "nowPlayingAudioFormat");

      v9 = 10;
      if (v8)
      {
        v10 = objc_msgSend(v8, "badging");
        if ((unint64_t)v10 >= 6)
          v9 = 10;
        else
          v9 = 0x8050604030AuLL >> (8 * v10);

      }
    }
    else
    {
      v9 = 10;
    }
    sub_10011C5C0(v9);
    sub_100133704(v4);

  }
}

void sub_100110574(uint64_t a1)
{
  void *v1;
  void *v2;
  char *v3;
  id v4;
  int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  _BOOL4 v9;
  _BOOL4 v10;
  id v11;

  v1 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v1)
  {
    v2 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
    if (v2)
    {
      v11 = v1;
      v3 = v2;
      v4 = objc_msgSend(v11, "state");
      v5 = sub_10012BFA4();
      if ((v5 & 1) != 0)
        v6 = 256;
      else
        v6 = 0;
      v7 = v6 | (v4 == (id)2) | 0x4000;
      v8 = *(_WORD *)&v3[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
      *(_WORD *)&v3[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = v7;
      if ((v8 & 0xC000) != 0x4000
        || (v9 = (v8 & 1) == 0, v10 = (v8 & 0x100) == 0, (v4 == (id)2) == v9)
        || ((v5 ^ v10) & 1) == 0)
      {
        sub_100675910();
        objc_msgSend(v3, "setNeedsLayout");
      }

    }
  }
}

void sub_100110680(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void (*v9)(__n128);
  uint64_t v10;
  __n128 v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  Class v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (**v28)();
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSString v32;
  void *Strong;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  Class isa;
  id v58;
  void *v59;
  char *v60;

  v2 = v1;
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView;
  v5 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
  if (!v5)
  {
    if (!a1)
      return;
LABEL_6:
    v9 = *(void (**)(__n128))&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler];
    if (v9)
    {
      v10 = *(_QWORD *)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler + 8];
      v11 = swift_retain(v10);
      v9(v11);
      sub_10004BA30((uint64_t)v9, v10);
    }
    if (!a1)
    {
LABEL_22:
      v26 = *(char **)&v2[v4];
      if (!v26)
        return;
      v27 = swift_allocObject(&unk_1010B19B8, 24, 7);
      swift_unknownObjectWeakInit(v27 + 16, v2);
      v28 = (void (**)())&v26[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
      v29 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
      v30 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler + 8];
      *v28 = sub_10013A3F4;
      v28[1] = (void (*)())v27;
      v31 = v26;
      sub_10004BA30(v29, v30);
      v60 = v31;
      v32 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "_setLayoutDebuggingIdentifier:", v32);

      if (v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] == 2
        && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView])) != 0)
      {
        v34 = Strong;
        objc_msgSend(Strong, "addSubview:", v60);

      }
      else
      {
        objc_msgSend(*(id *)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "addSubview:", v60, v60);
      }
      v2[OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
      sub_100125510(v60);
      objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v35 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v36 = swift_allocObject(v35, 64, 7);
      *(_OWORD *)(v36 + 16) = xmmword_100EA7AB0;
      v37 = objc_msgSend(v60, "centerXAnchor");
      v38 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide;
      v39 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide];
      if (v39)
      {
        v40 = objc_msgSend(v39, "centerXAnchor");
        v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);

        *(_QWORD *)(v36 + 32) = v41;
        v42 = objc_msgSend(v60, "centerYAnchor");
        v43 = *(void **)&v2[v38];
        if (v43)
        {
          v44 = objc_msgSend(v43, "centerYAnchor");
          v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);

          *(_QWORD *)(v36 + 40) = v45;
          v46 = objc_msgSend(v60, "widthAnchor");
          v47 = *(void **)&v2[v38];
          if (v47)
          {
            v48 = objc_msgSend(v47, "widthAnchor");
            v49 = objc_msgSend(v46, "constraintEqualToAnchor:", v48);

            *(_QWORD *)(v36 + 48) = v49;
            v50 = objc_msgSend(v60, "heightAnchor");
            v51 = *(void **)&v2[v38];
            if (v51)
            {
              v52 = v50;
              v53 = (void *)objc_opt_self(NSLayoutConstraint);
              v54 = objc_msgSend(v51, "heightAnchor");
              v55 = objc_msgSend(v52, "constraintEqualToAnchor:", v54);

              *(_QWORD *)(v36 + 56) = v55;
              specialized Array._endMutation()(v56);
              sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v53, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

              v58 = objc_msgSend(v2, "view");
              if (v58)
              {
                v59 = v58;
                objc_msgSend(v58, "setNeedsLayout");

                return;
              }
              goto LABEL_38;
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return;
          }
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_36;
    }
    v12 = a1;
    v13 = objc_msgSend(v12, "superview");
    if (v13)
    {
      v14 = v13;
      v15 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView];
      sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      v16 = v15;
      v17 = v14;
      LOBYTE(v14) = static NSObject.== infix(_:_:)(v17, v16);

      if ((v14 & 1) != 0)
        goto LABEL_17;
    }
    v18 = objc_msgSend(v12, "superview");
    v19 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView]);
    v20 = (void *)v19;
    if (v18)
    {
      if (v19)
      {
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        v21 = v18;
        v22 = static NSObject.== infix(_:_:)(v21, v20);

        if ((v22 & 1) == 0)
          goto LABEL_21;
LABEL_17:
        v23 = (Class)objc_msgSend(v12, "constraints");
        if (!v23)
        {
          v24 = sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
          v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v24);
          v23 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v25);
        }
        objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "deactivateConstraints:", v23);

        objc_msgSend(v12, "removeFromSuperview");
        goto LABEL_21;
      }

      v12 = v18;
    }
    else
    {
      if (!v19)
        goto LABEL_17;

      v12 = v20;
    }
LABEL_21:

    goto LABEL_22;
  }
  if (!a1)
    goto LABEL_6;
  type metadata accessor for NowPlayingContentView(0);
  v6 = a1;
  v7 = v5;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
    goto LABEL_6;
}

void sub_100110CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void (**)(void))(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler);
    v5 = *(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler + 8);
    sub_100048AAC((uint64_t)v4, v5);

    if (v4)
    {
      v4();
      sub_10004BA30((uint64_t)v4, v5);
    }
  }
}

void sub_100110D28(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView) = a1;
  v2 = a1;
  sub_100110680(v3);

}

id sub_100110D74()
{
  _BYTE *v0;
  uint64_t ObjectType;
  char *v2;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  void (*v36)(id, __n128);
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  objc_super v45;
  _OWORD v46[6];
  uint64_t v47;

  ObjectType = swift_getObjectType();
  v2 = &v0[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken] = 0;
  v0[OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState] = 3;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView] = 0;
  v3 = OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView;
  type metadata accessor for PassthroughView();
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait] = 10;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButtonPackageView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController] = 0;
  v6 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v6] = v8;
  v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView;
  type metadata accessor for NowPlayingAttributionView();
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v11 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v9] = v11;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView] = 0;
  v12 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
  type metadata accessor for NowPlayingShuffleButton();
  *(_QWORD *)&v5[v12] = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 0);
  v13 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
  type metadata accessor for NowPlayingRepeatButton();
  *(_QWORD *)&v5[v13] = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 0);
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton] = 0;
  v14 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration];
  v14[1] = 0;
  v14[2] = 0;
  *v14 = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton] = 0;
  v15 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButtonConfiguration];
  v15[1] = 0;
  v15[2] = 0;
  *v15 = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton] = 0;
  v16 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration];
  v16[1] = 0;
  v16[2] = 0;
  *v16 = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView] = 0;
  v17 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  type metadata accessor for NowPlayingRouteSharePlayTogetherControl();
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___bottomButtonsConfiguration] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___lyricsButtonStateImages] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedLeadingConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeMaskLayer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions] = &_swiftEmptySetSingleton;
  v18 = OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager;
  *(_QWORD *)&v5[v18] = objc_msgSend((id)objc_opt_self(MAMusicHapticsManager), "sharedManager");
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingHasTallMotionData] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
  v19 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter];
  *v19 = 0;
  v19[1] = 0;
  v20 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler];
  *v20 = 0;
  v20[1] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingRoutePicker] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingSharePlayTogetherSessionManagement] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView], 0);
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_bindings] = _swiftEmptyArrayStorage;
  v21 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_previousContentLayoutGuideFrame];
  *v21 = 0u;
  v21[1] = 0u;
  v22 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_previousArtworkFrame];
  *v22 = 0u;
  v22[1] = 0u;
  v23 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_previousBounds];
  *v23 = 0u;
  v23[1] = 0u;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer] = 0;
  v24 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = -1;
  v25 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController;
  v26 = type metadata accessor for TransportControlsController();
  v27 = swift_allocObject(v26, 104, 7);
  *(_OWORD *)(v27 + 16) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(_OWORD *)(v27 + 48) = 0u;
  *(_OWORD *)(v27 + 64) = 0u;
  *(_OWORD *)(v27 + 80) = 0u;
  *(_QWORD *)(v27 + 96) = 0;
  *(_QWORD *)&v5[v25] = v27;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___mediaControls] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___leaveSessionButton] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_didAnimateReactionOnce] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitWatchdog] = 0;
  v28 = &v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics];
  sub_100139E44(0, 0, (uint64_t)v46, 0.0, 0.0, UIEdgeInsetsZero.bottom);
  v29 = v46[5];
  *((_OWORD *)v28 + 4) = v46[4];
  *((_OWORD *)v28 + 5) = v29;
  *((_QWORD *)v28 + 12) = v47;
  v30 = v46[1];
  *(_OWORD *)v28 = v46[0];
  *((_OWORD *)v28 + 1) = v30;
  v31 = v46[3];
  *((_OWORD *)v28 + 2) = v46[2];
  *((_OWORD *)v28 + 3) = v31;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_needsSharePlayTogetherTooltipPresentation] = 0;
  v5[OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput] = 0;

  v45.receiver = v5;
  v45.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  v32 = objc_msgSendSuper2(&v45, "initWithNibName:bundle:", 0, 0);
  v33 = qword_10119B940;
  v34 = v32;
  if (v33 != -1)
    swift_once(&qword_10119B940, sub_10011A5A8);
  v35 = off_1011A19F0;
  v36 = *(void (**)(id, __n128))(*(_QWORD *)off_1011A19F0 + 96);
  v37 = v34;
  v38 = swift_retain(v35);
  v36(v37, v38);

  swift_release(v35);
  v39 = sub_100007E8C(&qword_1011A1750);
  v40 = swift_allocObject(v39, 80, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v40 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v40 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  *(_QWORD *)(v40 + 48) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v40 + 56) = &protocol witness table for UITraitAccessibilityContrast;
  v41 = sub_10013B23C();
  *(_QWORD *)(v40 + 64) = &type metadata for HasAnimatedBackgroundTrait;
  *(_QWORD *)(v40 + 72) = v41;
  v42 = v37;
  v43 = UIViewController.registerForTraitChanges<A>(_:handler:)(v40, sub_1001398A8, 0, ObjectType);

  swift_bridgeObjectRelease(v40);
  swift_unknownObjectRelease(v43);
  return v42;
}

id sub_100111658()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  objc_super v5;

  if (qword_10119B940 != -1)
    swift_once(&qword_10119B940, sub_10011A5A8);
  v1 = off_1011A19F0;
  v2 = *(void (**)(void))(*(_QWORD *)off_1011A19F0 + 104);
  swift_retain(off_1011A19F0);
  v3 = v0;
  v2();

  swift_release(v1);
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  return objc_msgSendSuper2(&v5, "dealloc");
}

void sub_100111DD8()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6[24];

  type metadata accessor for TintColorObservingView();
  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v2 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC5Music22TintColorObservingView_tintColorDidChangeCallback];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music22TintColorObservingView_tintColorDidChangeCallback], v6, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  *v3 = (uint64_t)sub_10013C6FC;
  v3[1] = v2;
  sub_10004BA30(v4, v5);
  objc_msgSend(v0, "setView:", v1);

}

void sub_100111EC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  objc_class *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  double v39;
  void *v40;
  double v41;
  void *v42;
  void *v43;
  id v44;
  NSString v45;
  id v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  NSString v53;
  void *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  NSString v60;
  id v61;
  void *v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  NSString v71;
  id v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  NSString v80;
  uint64_t v81;
  id v82;
  char *v83;
  char *v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  void (*v88)(unint64_t, unint64_t);
  _QWORD *v89;
  _QWORD *v90;
  double v91;
  double v92;
  void (*v93)(double, double);
  _QWORD *v94;
  void *v95;
  void *v96;
  double v97;
  void *v98;
  void *v99;
  id v100;
  NSString v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  __n128 v110;
  void *v111;
  void *v112;
  id v113;
  double v114;
  char *v115;
  NSString v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  _QWORD *v125;
  uint64_t v126;
  void (*v127)(void *(*)(uint64_t), uint64_t, __n128);
  _QWORD *v128;
  __n128 v129;
  uint64_t v130;
  uint64_t inited;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  void *v135;
  id v136;
  void *v137;
  uint64_t v138;
  id v139;
  void *v140;
  id v141;
  void *v142;
  uint64_t v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  id v151;
  void *v152;
  id v153;
  NSString v154;
  id v155;
  void *v156;
  uint64_t v157;
  void *v158;
  void *v159;
  void *v160;
  double v161;
  void *v162;
  void *v163;
  void *v164;
  id v165;
  id v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  id v171;
  NSString v172;
  __int128 v173;
  double v174;
  double v175;
  id v176;
  void *v177;
  uint64_t v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  id v183;
  void *v184;
  void *v185;
  void *v186;
  id v187;
  NSString v188;
  uint64_t v189;
  id v190;
  void *v191;
  uint64_t v192;
  void *v193;
  id v194;
  NSString v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  id v203;
  void *v204;
  void *v205;
  id v206;
  void *v207;
  void *v208;
  void *v209;
  double v210;
  void *v211;
  void *v212;
  id v213;
  id v214;
  void *v215;
  id v216;
  void *v217;
  id v218;
  void *v219;
  id v220;
  void *v221;
  id v222;
  NSString v223;
  void *v224;
  void *v225;
  uint64_t v226;
  id v227;
  id v228;
  void *v229;
  uint64_t v230;
  void *v231;
  void *v232;
  void *v233;
  void *v234;
  id v235;
  void *v236;
  void *v237;
  void *v238;
  id v239;
  NSString v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  void *v245;
  void *v246;
  void *v247;
  uint64_t v248;
  id v249;
  id v250;
  id v251;
  id v252;
  void *v253;
  uint64_t v254;
  void *v255;
  void *v256;
  void *v257;
  void *v258;
  void *v259;
  id v260;
  void *v261;
  id v262;
  NSString v263;
  id v264;
  void *v265;
  uint64_t v266;
  void *v267;
  id v268;
  uint64_t *v269;
  void *v270;
  void *v271;
  void *v272;
  id v273;
  NSString v274;
  id v275;
  void *v276;
  uint64_t v277;
  void *v278;
  void *v279;
  void *v280;
  id v281;
  void *v282;
  id v283;
  id v284;
  id v285;
  void *v286;
  id v287;
  double v288;
  void *v289;
  id v290;
  void *v291;
  id v292;
  double v293;
  void *v294;
  id v295;
  NSString v296;
  uint64_t v297;
  void *v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  id v304;
  void *v305;
  uint64_t v306;
  char *v307;
  id v308;
  id v309;
  void *v310;
  id v311;
  char *v312;
  id v313;
  void *v314;
  id v315;
  void *v316;
  id v317;
  id v318;
  NSString v319;
  void *v320;
  uint64_t v321;
  id v322;
  uint64_t v323;
  char *v324;
  void *v325;
  uint64_t v326;
  id v327;
  void *v328;
  id v329;
  char *v330;
  id v331;
  void *v332;
  uint64_t v333;
  id v334;
  void *v335;
  id v336;
  id v337;
  NSString v338;
  void *v339;
  uint64_t v340;
  id v341;
  uint64_t v342;
  id v343;
  void *v344;
  uint64_t v345;
  void *v346;
  void *v347;
  NSString *v348;
  id v349;
  id v350;
  _QWORD *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t v355;
  uint64_t v356;
  void *v357;
  void *v358;
  id v359;
  uint64_t *v360;
  void *v361;
  id v362;
  NSString v363;
  void *v364;
  id v365;
  void *v366;
  uint64_t v367;
  id v368;
  void *v369;
  uint64_t v370;
  id v371;
  void *v372;
  uint64_t v373;
  id v374;
  id v375;
  void *v376;
  uint64_t v377;
  void *v378;
  void *v379;
  id v380;
  id v381;
  _QWORD *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  void *v389;
  void *v390;
  id v391;
  NSString v392;
  void *v393;
  id v394;
  void *v395;
  uint64_t v396;
  id v397;
  void *v398;
  uint64_t v399;
  id v400;
  void *v401;
  uint64_t v402;
  id v403;
  id v404;
  void *v405;
  uint64_t v406;
  void *v407;
  void *v408;
  void *v409;
  id v410;
  void *v411;
  void *v412;
  id v413;
  NSString v414;
  void *v415;
  id v416;
  void *v417;
  uint64_t v418;
  id v419;
  uint64_t v420;
  uint64_t v421;
  _QWORD *v422;
  void *v423;
  _QWORD *v424;
  void *v425;
  void *v426;
  uint64_t v427;
  id v428;
  id v429;
  id v430;
  id v431;
  void *v432;
  uint64_t v433;
  void *v434;
  id v435;
  id v436;
  void *v437;
  void *v438;
  void *v439;
  void *v440;
  void *v441;
  void *v442;
  id v443;
  NSString v444;
  id v445;
  id v446;
  void *v447;
  uint64_t v448;
  void *v449;
  id v450;
  NSString v451;
  id v452;
  id v453;
  void *v454;
  uint64_t v455;
  void *v456;
  void *v457;
  id v458;
  void *v459;
  void *v460;
  uint64_t v461;
  id v462;
  id v463;
  void *v464;
  id v465;
  void *v466;
  id v467;
  NSString v468;
  void *v469;
  uint64_t v470;
  uint64_t v471;
  id v472;
  void *v473;
  uint64_t v474;
  id v475;
  void *v476;
  uint64_t v477;
  id v478;
  void *v479;
  uint64_t v480;
  id v481;
  id v482;
  uint64_t v483;
  void *v484;
  objc_class *ObjCClassFromMetadata;
  id v486;
  void *v487;
  uint64_t v488;
  void *v489;
  void *v490;
  id v491;
  void *v492;
  unint64_t v493;
  uint64_t v494;
  double v495;
  void *v496;
  id v497;
  void *v498;
  id v499;
  void *v500;
  id v501;
  NSString v502;
  void *v503;
  uint64_t v504;
  id v505;
  id v506;
  void *v507;
  uint64_t v508;
  void *v509;
  void *v510;
  id v511;
  void *v512;
  id v513;
  id v514;
  void *v515;
  id v516;
  id v517;
  _QWORD *v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t *v521;
  uint64_t v522;
  uint64_t v523;
  void *v524;
  id v525;
  void *v526;
  id v527;
  void *v528;
  id v529;
  NSString v530;
  void *v531;
  id v532;
  id v533;
  void *v534;
  uint64_t v535;
  id v536;
  uint64_t v537;
  uint64_t v538;
  _QWORD *v539;
  void *v540;
  _QWORD *v541;
  void *v542;
  void *v543;
  uint64_t v544;
  id v545;
  id v546;
  id v547;
  id v548;
  void *v549;
  uint64_t v550;
  void *v551;
  void *v552;
  void *v553;
  uint64_t v554;
  id v555;
  void *v556;
  void *v557;
  void *v558;
  void *v559;
  void *v560;
  id v561;
  void *v562;
  id v563;
  NSString v564;
  id v565;
  void *v566;
  uint64_t v567;
  void *v568;
  void *v569;
  id v570;
  void *v571;
  void *v572;
  id v573;
  void *v574;
  void *v575;
  id v576;
  NSString v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  _QWORD *v581;
  _QWORD *v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  UIContentSizeCategory v589;
  uint64_t v590;
  NSString *v591;
  NSString *v592;
  uint64_t v593;
  void (*v594)(id *, _QWORD);
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  void (*v601)(__n128);
  uint64_t v602;
  __n128 v603;
  uint64_t v604;
  id v605;
  void *v606;
  uint64_t v607;
  void *v608;
  id v609;
  void *v610;
  void *v611;
  uint64_t v612;
  id v613;
  uint64_t v614;
  __n128 v615;
  uint64_t v616;
  id v617;
  void *v618;
  uint64_t v619;
  void *v620;
  id v621;
  void *v622;
  void *v623;
  uint64_t v624;
  id v625;
  uint64_t v626;
  __n128 v627;
  double v628;
  uint64_t v629;
  void *v630;
  uint64_t *v631;
  uint64_t v632;
  void *v633;
  void *v634;
  void *v635;
  void *v636;
  void *v637;
  void *v638;
  uint64_t v639;
  id v640;
  id v641;
  id v642;
  void *v643;
  uint64_t v644;
  id v645;
  void *v646;
  id v647;
  void *v648;
  id v649;
  id v650;
  void *v651;
  id v652;
  unint64_t v653;
  uint64_t *v654;
  char *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  __n128 v674;
  void (*v675)(id *, _QWORD, __n128);
  uint64_t v676;
  __n128 v677;
  __n128 v678;
  char *v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  char *v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  __n128 v698;
  uint64_t (*v699)(id *, _QWORD, __n128);
  uint64_t v700;
  __n128 v701;
  __n128 v702;
  uint64_t v703;
  char *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  __n128 v721;
  void (*v722)(id *, _QWORD, __n128);
  uint64_t v723;
  __n128 v724;
  __n128 v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  _QWORD *v729;
  _QWORD *v730;
  void *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  id v738;
  uint64_t v739;
  void (*v740)(id *, _QWORD);
  uint64_t v741;
  uint64_t v742;
  _QWORD *v743;
  _QWORD *v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  NSString *v750;
  uint64_t v751;
  void (*v752)(id *, _QWORD);
  id v753;
  void *v754;
  char *v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  char *v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  __n128 v772;
  void (*v773)(id *, _QWORD, __n128);
  uint64_t v774;
  __n128 v775;
  __n128 v776;
  id v777;
  uint64_t v778;
  void *v779;
  __n128 v780;
  id v781;
  __n128 v782;
  char *v783;
  uint64_t v784;
  uint64_t v785;
  char *v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  id v793;
  id v794;
  char *v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  char *v799;
  uint64_t v800;
  char *v801;
  uint64_t v802;
  uint64_t v803;
  char *v804;
  uint64_t v805;
  uint64_t v806;
  char *v807;
  uint64_t v808;
  char *v809;
  uint64_t v810;
  uint64_t v811;
  char *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  char *v823;
  uint64_t v824;
  uint64_t *v825;
  uint64_t v826;
  uint64_t v827;
  UIContentSizeCategory v828;
  uint64_t v829;
  id v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  id aBlock;
  uint64_t v835;
  uint64_t (*v836)(uint64_t);
  void *v837;
  void (*v838)();
  uint64_t v839;
  char v840[56];
  objc_super v841;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A2300);
  v813 = *(_QWORD *)(v2 - 8);
  v814 = v2;
  __chkstk_darwin(v2);
  v812 = (char *)&v783 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v783 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A08E0);
  v808 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v807 = (char *)&v783 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2310);
  v810 = *(_QWORD *)(v10 - 8);
  v811 = v10;
  __chkstk_darwin(v10);
  v809 = (char *)&v783 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A21E0);
  v802 = *(_QWORD *)(v12 - 8);
  v803 = v12;
  __chkstk_darwin(v12);
  v801 = (char *)&v783 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A8ED0);
  v805 = *(_QWORD *)(v14 - 8);
  v806 = v14;
  __chkstk_darwin(v14);
  v804 = (char *)&v783 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v16);
  v823 = (char *)&v783 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A2318);
  v784 = *(_QWORD *)(v18 - 8);
  v785 = v18;
  __chkstk_darwin(v18);
  v783 = (char *)&v783 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A2320);
  v787 = *(_QWORD *)(v20 - 8);
  v788 = v20;
  __chkstk_darwin(v20);
  v786 = (char *)&v783 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A5EA0);
  __chkstk_darwin(v22);
  v24 = (char *)&v783 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s7ContextVMa_1(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v783 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v783 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (objc_class *)type metadata accessor for NowPlayingControlsViewController();
  v841.receiver = v0;
  v841.super_class = v31;
  objc_msgSendSuper2(&v841, "viewDidLoad");
  v32 = objc_msgSend(v0, "view");
  if (!v32)
  {
    __break(1u);
    goto LABEL_258;
  }
  v33 = v32;
  v799 = v7;
  v800 = v5;
  v34 = objc_msgSend(v32, "layer");

  objc_msgSend(v34, "setAllowsGroupBlending:", 0);
  v826 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView], "setHidden:", 1);
  sub_10004A07C(0, (unint64_t *)&unk_1011A2330, _UIGrabber_ptr);
  v35 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v36 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView] = v35;

  v37 = OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView;
  v38 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView];
  if (!v38)
  {
LABEL_258:
    __break(1u);
    goto LABEL_259;
  }
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v40 = *(void **)&v1[v37];
  if (!v40)
  {
LABEL_259:
    __break(1u);
    goto LABEL_260;
  }
  LODWORD(v39) = 1148846080;
  objc_msgSend(v40, "setContentCompressionResistancePriority:forAxis:", 0, v39);
  v42 = *(void **)&v1[v37];
  if (!v42)
  {
LABEL_260:
    __break(1u);
    goto LABEL_261;
  }
  v830 = v27;
  LODWORD(v41) = 1148846080;
  objc_msgSend(v42, "setContentHuggingPriority:forAxis:", 0, v41);
  v815 = v37;
  v43 = *(void **)&v1[v37];
  if (!v43)
  {
LABEL_261:
    __break(1u);
    goto LABEL_262;
  }
  v44 = v43;
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "_setLayoutDebuggingIdentifier:", v45);

  v827 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v46 = sub_100256B1C(0);
  v47 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton] = v46;

  v48 = OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton;
  v49 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton];
  if (!v49)
  {
LABEL_262:
    __break(1u);
    goto LABEL_263;
  }
  objc_msgSend(v49, "setExclusiveTouch:", 1);
  v50 = *(void **)&v1[v48];
  if (!v50)
  {
LABEL_263:
    __break(1u);
    goto LABEL_264;
  }
  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v51 = *(void **)&v1[v48];
  if (!v51)
  {
LABEL_264:
    __break(1u);
    goto LABEL_265;
  }
  v796 = v8;
  v797 = v4;
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v52, "_setLayoutDebuggingIdentifier:", v53);

  v798 = v48;
  v54 = *(void **)&v1[v48];
  if (!v54)
  {
LABEL_265:
    __break(1u);
    goto LABEL_266;
  }
  v55 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v1);
  v56 = v54;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C2D0, v55, v827);
  swift_release(v55);

  v57 = OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v58 = objc_msgSend(*(id *)&v1[v57], "layer");
  objc_msgSend(v58, "setAllowsGroupBlending:", 0);

  v816 = v57;
  v59 = *(id *)&v1[v57];
  v60 = String._bridgeToObjectiveC()();
  objc_msgSend(v59, "_setLayoutDebuggingIdentifier:", v60);

  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v61 = sub_100256B54();
  v62 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView] = v61;

  v63 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
  v64 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  if (!v64)
  {
LABEL_266:
    __break(1u);
    goto LABEL_267;
  }
  v65 = objc_msgSend(v64, "layer");
  objc_msgSend(v65, "setAllowsGroupBlending:", 0);

  v66 = *(void **)&v1[v63];
  if (!v66)
  {
LABEL_267:
    __break(1u);
    goto LABEL_268;
  }
  v67 = objc_msgSend(v66, "layer");
  objc_msgSend(v67, "setAllowsGroupOpacity:", 0);

  v68 = *(void **)&v1[v63];
  if (!v68)
  {
LABEL_268:
    __break(1u);
    goto LABEL_269;
  }
  objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v817 = v63;
  v69 = *(void **)&v1[v63];
  if (!v69)
  {
LABEL_269:
    __break(1u);
    goto LABEL_270;
  }
  v70 = v69;
  v71 = String._bridgeToObjectiveC()();
  objc_msgSend(v70, "_setLayoutDebuggingIdentifier:", v71);

  type metadata accessor for PassthroughView();
  v72 = sub_100256B54();
  v73 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView] = v72;

  v74 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView;
  v75 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView];
  if (!v75)
  {
LABEL_270:
    __break(1u);
    goto LABEL_271;
  }
  v76 = objc_msgSend(v75, "layer");
  objc_msgSend(v76, "setAllowsGroupBlending:", 0);

  v77 = *(void **)&v1[v74];
  if (!v77)
  {
LABEL_271:
    __break(1u);
    goto LABEL_272;
  }
  objc_msgSend(v77, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v825 = (uint64_t *)v74;
  v78 = *(void **)&v1[v74];
  if (!v78)
  {
LABEL_272:
    __break(1u);
    goto LABEL_273;
  }
  v79 = v78;
  v80 = String._bridgeToObjectiveC()();
  objc_msgSend(v79, "_setLayoutDebuggingIdentifier:", v80);

  v81 = SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor();
  sub_10005B704(v81, (uint64_t)v30, type metadata accessor for SymbolButton.Configuration);
  v82 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v83 = SymbolButton.init(configuration:handler:)((uint64_t)v30, 0, 0);
  v84 = SymbolButton.withProvider(_:)((uint64_t)sub_1001166A0, 0);

  v85 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton] = v84;

  v86 = OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton;
  v87 = *(_QWORD **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton];
  if (!v87)
  {
LABEL_273:
    __break(1u);
    goto LABEL_274;
  }
  v88 = *(void (**)(unint64_t, unint64_t))((swift_isaMask & *v87) + 0x100);
  v89 = v87;
  v88(0xD000000000000018, 0x8000000100E2E8A0);

  v90 = *(_QWORD **)&v1[v86];
  if (!v90)
  {
LABEL_274:
    __break(1u);
    goto LABEL_275;
  }
  v91 = Int.seconds.getter(35);
  v92 = Int.seconds.getter(68);
  v93 = *(void (**)(double, double))((swift_isaMask & *v90) + 0x208);
  v94 = v90;
  v93(v91, v92);

  v95 = *(void **)&v1[v86];
  if (!v95)
  {
LABEL_275:
    __break(1u);
    goto LABEL_276;
  }
  objc_msgSend(v95, "setExclusiveTouch:", 1);
  v96 = *(void **)&v1[v86];
  if (!v96)
  {
LABEL_276:
    __break(1u);
    goto LABEL_277;
  }
  objc_msgSend(v96, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v98 = *(void **)&v1[v86];
  if (!v98)
  {
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  LODWORD(v97) = 1148846080;
  objc_msgSend(v98, "setContentCompressionResistancePriority:forAxis:", 0, v97);
  v99 = *(void **)&v1[v86];
  if (!v99)
  {
LABEL_278:
    __break(1u);
LABEL_279:
    __break(1u);
    goto LABEL_280;
  }
  v100 = v99;
  v101 = String._bridgeToObjectiveC()();
  objc_msgSend(v100, "_setLayoutDebuggingIdentifier:", v101);

  if (qword_10119BBB0 != -1)
    swift_once(&qword_10119BBB0, sub_1001DF800);
  v102 = _s10ControllerCMa(0);
  swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
  v103 = swift_bridgeObjectRetain();
  v104 = sub_1001DC5EC(v103);
  v105 = _s7ContextV6SourceOMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v24, 1, 1, v105);
  v106 = (uint64_t)v830;
  sub_1001DBDC4((uint64_t)v24, 0, 255, 0, 1, 0, (uint64_t)v830);
  v107 = objc_allocWithZone((Class)_s7ControlCMa(0));
  swift_retain(v104);
  v108 = sub_1001E1F2C(v106, v104);
  v109 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController] = v104;
  swift_retain(v104);
  v110 = swift_release(v109);
  type metadata accessor for ReactionEffectInteraction(0, v110);
  v111 = (void *)ReactionEffectInteraction.__allocating_init()();
  v112 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction] = v111;
  v113 = v111;

  objc_msgSend(v108, "setMinimumContentSizeCategory:", UIContentSizeCategoryLarge);
  objc_msgSend(v108, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraLarge);
  objc_msgSend(v108, "addInteraction:", v113);
  objc_msgSend(v108, "setExclusiveTouch:", 1);
  objc_msgSend(v108, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v114) = 1148846080;
  objc_msgSend(v108, "setContentCompressionResistancePriority:forAxis:", 0, v114);
  v115 = v108;
  v116 = String._bridgeToObjectiveC()();
  objc_msgSend(v115, "_setLayoutDebuggingIdentifier:", v116);

  v117 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton] = v115;
  v795 = v115;

  v118 = sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v119 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v119 + 16, v1);
  v120 = static MPMediaLibraryFilteringOptions.none.getter();
  v821 = static MPMediaLibraryFilteringOptions.none.getter();
  v822 = v120;
  v121 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6576456B63696C43, 0xEA0000000000746ELL, 0, 0, 0, 0, 0, 0, 0, v120, v821, sub_10013C2D8, v119);
  v122 = *(void **)&v1[v86];
  if (!v122)
    goto LABEL_279;
  objc_msgSend(v122, "addAction:forControlEvents:", v121, 0x4000);
  v123 = *(void **)&v1[v86];
  if (!v123)
  {
LABEL_280:
    __break(1u);
    goto LABEL_281;
  }
  objc_msgSend(v123, "setContextMenuInteractionEnabled:", 1);
  v124 = *(void **)&v1[v86];
  if (!v124)
  {
LABEL_281:
    __break(1u);
    goto LABEL_282;
  }
  v820 = v118;
  v793 = v121;
  v794 = v113;
  objc_msgSend(v124, "setShowsMenuAsPrimaryAction:", 1);
  v125 = *(_QWORD **)&v1[v86];
  if (!v125)
  {
LABEL_282:
    __break(1u);
    goto LABEL_283;
  }
  v126 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v126 + 16, v1);
  v127 = *(void (**)(void *(*)(uint64_t), uint64_t, __n128))((swift_isaMask & *v125) + 0x228);
  v128 = v125;
  v129 = swift_retain(v126);
  v127(sub_10013C2E0, v126, v129);
  swift_release(v126);

  v130 = sub_100007E8C(&qword_1011A2340);
  inited = swift_initStackObject(v130, v840);
  v132 = sub_10004D7BC(inited, 3);
  v134 = v133;
  v135 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
  *v133 = v135;
  v136 = v135;
  v134[1] = sub_10011DAF0();
  v137 = *(void **)&v1[v86];
  v134[2] = v137;
  v138 = sub_10004A07C(0, &qword_1011A2348, UIStackView_ptr);
  sub_10004D7B0();
  v139 = v137;
  v140 = sub_10010E824(v132);
  swift_bridgeObjectRelease(v132);
  v141 = sub_1002E47AC((uint64_t)v140);
  v142 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView] = v141;

  v143 = OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView;
  v144 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView];
  if (!v144)
  {
LABEL_283:
    __break(1u);
    goto LABEL_284;
  }
  objc_msgSend(v144, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v145 = *(void **)&v1[v143];
  if (!v145)
  {
LABEL_284:
    __break(1u);
    goto LABEL_285;
  }
  objc_msgSend(v145, "setAxis:", 0);
  v146 = *(void **)&v1[v143];
  if (!v146)
  {
LABEL_285:
    __break(1u);
    goto LABEL_286;
  }
  objc_msgSend(v146, "setSpacing:", 16.0);
  v147 = *(void **)&v1[v143];
  if (!v147)
  {
LABEL_286:
    __break(1u);
    goto LABEL_287;
  }
  objc_msgSend(v147, "setAlignment:", 1);
  v148 = *(void **)&v1[v143];
  if (!v148)
  {
LABEL_287:
    __break(1u);
    goto LABEL_288;
  }
  objc_msgSend(v148, "setBaselineRelativeArrangement:", 1);
  v149 = *(void **)&v1[v143];
  if (!v149)
  {
LABEL_288:
    __break(1u);
    goto LABEL_289;
  }
  objc_msgSend(v149, "setClipsToBounds:", 0);
  v150 = *(void **)&v1[v143];
  if (!v150)
  {
LABEL_289:
    __break(1u);
    goto LABEL_290;
  }
  v151 = objc_msgSend(v150, "layer");
  objc_msgSend(v151, "setAllowsGroupBlending:", 0);

  v152 = *(void **)&v1[v143];
  if (!v152)
  {
LABEL_290:
    __break(1u);
    goto LABEL_291;
  }
  v153 = v152;
  v154 = String._bridgeToObjectiveC()();
  objc_msgSend(v153, "_setLayoutDebuggingIdentifier:", v154);

  sub_10004A07C(0, &qword_1011A2350, UILabel_ptr);
  v155 = sub_100256B18();
  v156 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel] = v155;

  v157 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel;
  v158 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v158)
  {
LABEL_291:
    __break(1u);
    goto LABEL_292;
  }
  v818 = 0;
  v828 = UIContentSizeCategoryExtraExtraExtraLarge;
  objc_msgSend(v158, "setMaximumContentSizeCategory:");
  v159 = *(void **)&v1[v157];
  if (!v159)
  {
LABEL_292:
    __break(1u);
    goto LABEL_293;
  }
  objc_msgSend(v159, "setAdjustsFontForContentSizeCategory:", 1);
  v160 = *(void **)&v1[v157];
  if (!v160)
  {
LABEL_293:
    __break(1u);
    goto LABEL_294;
  }
  objc_msgSend(v160, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v162 = *(void **)&v1[v157];
  if (!v162)
  {
LABEL_294:
    __break(1u);
    goto LABEL_295;
  }
  LODWORD(v161) = 1148846080;
  objc_msgSend(v162, "setContentCompressionResistancePriority:forAxis:", 0, v161);
  v163 = *(void **)&v1[v157];
  if (!v163)
  {
LABEL_295:
    __break(1u);
    goto LABEL_296;
  }
  v164 = (void *)objc_opt_self(UIColor);
  v165 = v163;
  v166 = objc_msgSend(v164, "labelColor");
  objc_msgSend(v165, "setTextColor:", v166);

  v167 = *(void **)&v1[v157];
  if (!v167)
  {
LABEL_296:
    __break(1u);
    goto LABEL_297;
  }
  objc_msgSend(v167, "setNumberOfLines:", 1);
  v168 = *(void **)&v1[v157];
  if (!v168)
  {
LABEL_297:
    __break(1u);
    goto LABEL_298;
  }
  objc_msgSend(v168, "setSizingRule:", 1);
  v169 = *(void **)&v1[v157];
  if (!v169)
  {
LABEL_298:
    __break(1u);
    goto LABEL_299;
  }
  objc_msgSend(v169, "_setWantsContentAwareTypesettingLanguage:", 1);
  v170 = *(void **)&v1[v157];
  if (!v170)
  {
LABEL_299:
    __break(1u);
LABEL_300:
    __break(1u);
    goto LABEL_301;
  }
  v830 = v164;
  v171 = v170;
  v172 = String._bridgeToObjectiveC()();
  objc_msgSend(v171, "_setLayoutDebuggingIdentifier:", v172);

  if (qword_10119B988 != -1)
    swift_once(&qword_10119B988, sub_10012C53C);
  v173 = xmmword_1011A1A08;
  v174 = *(double *)&qword_1011A1A18;
  v175 = unk_1011A1A20;
  sub_10004A07C(0, &qword_1011A2358, MPUMarqueeView_ptr);
  v176 = sub_100256B18();
  v177 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView] = v176;

  v178 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView;
  v179 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v179)
    goto LABEL_300;
  objc_msgSend(v179, "setContentGap:", 32.0);
  v180 = *(void **)&v1[v178];
  if (!v180)
  {
LABEL_301:
    __break(1u);
    goto LABEL_302;
  }
  v829 = OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView;
  objc_msgSend(v180, "setAnimationReferenceView:", *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView]);
  v181 = *(void **)&v1[v178];
  if (!v181)
  {
LABEL_302:
    __break(1u);
    goto LABEL_303;
  }
  objc_msgSend(v181, "setFadeEdgeInsets:", v173, v174, v175);
  v182 = *(void **)&v1[v178];
  if (!v182)
  {
LABEL_303:
    __break(1u);
    goto LABEL_304;
  }
  v183 = objc_msgSend(v182, "contentView");
  if (!v183)
  {
LABEL_304:
    __break(1u);
    goto LABEL_305;
  }
  if (!*(_QWORD *)&v1[v157])
  {
LABEL_305:
    __break(1u);
    goto LABEL_306;
  }
  v184 = v183;
  objc_msgSend(v183, "addSubview:");

  v185 = *(void **)&v1[v178];
  if (!v185)
  {
LABEL_306:
    __break(1u);
    goto LABEL_307;
  }
  v792 = v143;
  objc_msgSend(v185, "setViewForContentSize:", *(_QWORD *)&v1[v157]);
  v186 = *(void **)&v1[v178];
  if (!v186)
  {
LABEL_307:
    __break(1u);
    goto LABEL_308;
  }
  v791 = v104;
  v187 = v186;
  v188 = String._bridgeToObjectiveC()();
  objc_msgSend(v187, "_setLayoutDebuggingIdentifier:", v188);

  v189 = type metadata accessor for SizedToLabelButton();
  v190 = sub_100256B1C(1);
  v191 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton] = v190;

  v192 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton;
  v193 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v193)
  {
LABEL_308:
    __break(1u);
LABEL_309:
    __break(1u);
LABEL_310:
    __break(1u);
    goto LABEL_311;
  }
  v819 = v138;
  v194 = v193;
  v195 = String._bridgeToObjectiveC()();
  v196 = sub_10027D92C(0);
  v197 = v196[2];
  if (v197)
  {
    v198 = 0;
    v199 = v196 + 4;
    do
    {
      v201 = *v199++;
      v200 = v201;
      if ((v201 & ~v198) == 0)
        v200 = 0;
      v198 |= v200;
      --v197;
    }
    while (v197);
  }
  else
  {
    v198 = 0;
  }
  objc_msgSend(v194, "setTitle:forState:", v195, v198, swift_bridgeObjectRelease(v196).n128_f64[0]);

  v202 = *(void **)&v1[v192];
  if (!v202)
    goto LABEL_309;
  v203 = objc_msgSend(v202, "titleLabel");
  if (v203)
  {
    v204 = v203;
    objc_msgSend(v203, "setMaximumContentSizeCategory:", v828);

  }
  v205 = *(void **)&v1[v192];
  if (!v205)
    goto LABEL_310;
  v206 = objc_msgSend(v205, "titleLabel");
  objc_msgSend(v206, "setAdjustsFontForContentSizeCategory:", 1);

  v207 = *(void **)&v1[v192];
  if (!v207)
  {
LABEL_311:
    __break(1u);
    goto LABEL_312;
  }
  objc_msgSend(v207, "setExclusiveTouch:", 1);
  v208 = *(void **)&v1[v192];
  if (!v208)
  {
LABEL_312:
    __break(1u);
    goto LABEL_313;
  }
  objc_msgSend(v208, "setShowsMenuAsPrimaryAction:", 1);
  v209 = *(void **)&v1[v192];
  if (!v209)
  {
LABEL_313:
    __break(1u);
    goto LABEL_314;
  }
  objc_msgSend(v209, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v211 = *(void **)&v1[v192];
  if (!v211)
  {
LABEL_314:
    __break(1u);
    goto LABEL_315;
  }
  LODWORD(v210) = 1148846080;
  objc_msgSend(v211, "setContentCompressionResistancePriority:forAxis:", 0, v210);
  v212 = *(void **)&v1[v192];
  if (!v212)
  {
LABEL_315:
    __break(1u);
    goto LABEL_316;
  }
  v213 = v212;
  v214 = objc_msgSend(v830, "systemGrayColor");
  objc_msgSend(v213, "setTitleColor:forStates:", v214, 2);

  v215 = *(void **)&v1[v192];
  if (!v215)
  {
LABEL_316:
    __break(1u);
    goto LABEL_317;
  }
  v216 = objc_msgSend(v215, "titleLabel");
  objc_msgSend(v216, "setNumberOfLines:", 1);

  v217 = *(void **)&v1[v192];
  if (!v217)
  {
LABEL_317:
    __break(1u);
    goto LABEL_318;
  }
  v218 = objc_msgSend(v217, "titleLabel");
  objc_msgSend(v218, "setSizingRule:", 1);

  v219 = *(void **)&v1[v192];
  if (!v219)
  {
LABEL_318:
    __break(1u);
    goto LABEL_319;
  }
  v220 = objc_msgSend(v219, "titleLabel");
  objc_msgSend(v220, "_setWantsContentAwareTypesettingLanguage:", 1);

  v221 = *(void **)&v1[v192];
  if (!v221)
  {
LABEL_319:
    __break(1u);
    goto LABEL_320;
  }
  v222 = v221;
  v223 = String._bridgeToObjectiveC()();
  objc_msgSend(v222, "_setLayoutDebuggingIdentifier:", v223);

  v224 = *(void **)&v1[v192];
  if (!v224)
  {
LABEL_320:
    __break(1u);
    goto LABEL_321;
  }
  UIEdgeInsets.init(value:)();
  objc_msgSend(v224, "setContentEdgeInsets:");
  v225 = *(void **)&v1[v192];
  if (!v225)
  {
LABEL_321:
    __break(1u);
    goto LABEL_322;
  }
  v226 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v226 + 16, v1);
  v227 = v225;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C2E8, v226, v189);
  swift_release(v226);

  v228 = sub_100256B18();
  v229 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView] = v228;

  v230 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView;
  v231 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v231)
  {
LABEL_322:
    __break(1u);
    goto LABEL_323;
  }
  objc_msgSend(v231, "setContentGap:", 32.0);
  v232 = *(void **)&v1[v230];
  if (!v232)
  {
LABEL_323:
    __break(1u);
    goto LABEL_324;
  }
  objc_msgSend(v232, "setAnimationReferenceView:", *(_QWORD *)&v1[v829]);
  v233 = *(void **)&v1[v230];
  if (!v233)
  {
LABEL_324:
    __break(1u);
    goto LABEL_325;
  }
  objc_msgSend(v233, "setFadeEdgeInsets:", v173, v174, v175);
  v234 = *(void **)&v1[v230];
  if (!v234)
  {
LABEL_325:
    __break(1u);
    goto LABEL_326;
  }
  v235 = objc_msgSend(v234, "contentView");
  if (!v235)
  {
LABEL_326:
    __break(1u);
    goto LABEL_327;
  }
  if (!*(_QWORD *)&v1[v192])
  {
LABEL_327:
    __break(1u);
    goto LABEL_328;
  }
  v236 = v235;
  objc_msgSend(v235, "addSubview:");

  v237 = *(void **)&v1[v230];
  if (!v237)
  {
LABEL_328:
    __break(1u);
    goto LABEL_329;
  }
  objc_msgSend(v237, "setViewForContentSize:", *(_QWORD *)&v1[v192]);
  v238 = *(void **)&v1[v230];
  if (!v238)
  {
LABEL_329:
    __break(1u);
    goto LABEL_330;
  }
  v239 = v238;
  v240 = String._bridgeToObjectiveC()();
  objc_msgSend(v239, "_setLayoutDebuggingIdentifier:", v240);

  v241 = *(void **)&v1[v178];
  if (!v241)
  {
LABEL_330:
    __break(1u);
    goto LABEL_331;
  }
  objc_msgSend(v241, "addCoordinatedMarqueeView:", *(_QWORD *)&v1[v230]);
  v824 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v242 = swift_allocObject(v824, 56, 7);
  v243 = sub_10004D7C0(v242, 3);
  v245 = *(void **)&v1[v826];
  *v244 = v245;
  v246 = *(void **)&v1[v178];
  if (!v246)
  {
LABEL_331:
    __break(1u);
    goto LABEL_332;
  }
  v244[1] = v246;
  v247 = *(void **)&v1[v230];
  if (!v247)
  {
LABEL_332:
    __break(1u);
    goto LABEL_333;
  }
  v244[2] = v247;
  sub_10004D7B0();
  v248 = v243;
  v249 = v245;
  v250 = v246;
  v251 = v247;
  v252 = sub_1002E47AC(v248);
  v253 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView] = v252;

  v254 = v829;
  v255 = *(void **)&v1[v829];
  if (!v255)
  {
LABEL_333:
    __break(1u);
    goto LABEL_334;
  }
  objc_msgSend(v255, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v256 = *(void **)&v1[v254];
  if (!v256)
  {
LABEL_334:
    __break(1u);
    goto LABEL_335;
  }
  objc_msgSend(v256, "setAxis:", 1);
  v257 = *(void **)&v1[v254];
  if (!v257)
  {
LABEL_335:
    __break(1u);
    goto LABEL_336;
  }
  objc_msgSend(v257, "setAlignment:", 1);
  v258 = *(void **)&v1[v254];
  if (!v258)
  {
LABEL_336:
    __break(1u);
    goto LABEL_337;
  }
  objc_msgSend(v258, "setSpacing:", 0.0);
  v259 = *(void **)&v1[v254];
  if (!v259)
  {
LABEL_337:
    __break(1u);
    goto LABEL_338;
  }
  v260 = objc_msgSend(v259, "layer");
  objc_msgSend(v260, "setAllowsGroupBlending:", 0);

  v261 = *(void **)&v1[v254];
  if (!v261)
  {
LABEL_338:
    __break(1u);
    goto LABEL_339;
  }
  v262 = v261;
  v263 = String._bridgeToObjectiveC()();
  objc_msgSend(v262, "_setLayoutDebuggingIdentifier:", v263);

  type metadata accessor for PlayerTimeControl();
  v264 = ModelObjectBackedStoreItemMetadata.__allocating_init()();
  v265 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl] = v264;

  v266 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
  v267 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  if (!v267)
  {
LABEL_339:
    __break(1u);
    goto LABEL_340;
  }
  v268 = v267;
  v269 = sub_1005D2B48();
  objc_msgSend(v268, "setTintColor:", *v269);

  v270 = *(void **)&v1[v266];
  if (!v270)
  {
LABEL_340:
    __break(1u);
    goto LABEL_341;
  }
  objc_msgSend(v270, "setExclusiveTouch:", 1);
  v271 = *(void **)&v1[v266];
  if (!v271)
  {
LABEL_341:
    __break(1u);
    goto LABEL_342;
  }
  objc_msgSend(v271, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v272 = *(void **)&v1[v266];
  if (!v272)
  {
LABEL_342:
    __break(1u);
    goto LABEL_343;
  }
  v273 = v272;
  v274 = String._bridgeToObjectiveC()();
  objc_msgSend(v273, "_setLayoutDebuggingIdentifier:", v274);

  type metadata accessor for AudioTraitButton();
  v275 = sub_100256B54();
  v276 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton] = v275;

  v277 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
  v278 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
  if (!v278)
  {
LABEL_343:
    __break(1u);
    goto LABEL_344;
  }
  objc_msgSend(v278, "setTintColor:", *v269);
  v279 = *(void **)&v1[v277];
  if (!v279)
  {
LABEL_344:
    __break(1u);
    goto LABEL_345;
  }
  objc_msgSend(v279, "setMaximumContentSizeCategory:", v828);
  sub_10011C9E8();
  v280 = *(void **)&v1[v277];
  if (!v280)
  {
LABEL_345:
    __break(1u);
    goto LABEL_346;
  }
  v281 = objc_msgSend(v280, "layer");
  objc_msgSend(v281, "setMasksToBounds:", 0);

  v282 = *(void **)&v1[v277];
  if (!v282)
  {
LABEL_346:
    __break(1u);
    goto LABEL_347;
  }
  v283 = objc_msgSend(v282, "layer");
  v284 = objc_msgSend(v830, "whiteColor");
  v285 = objc_msgSend(v284, "CGColor");

  objc_msgSend(v283, "setShadowColor:", v285);
  v286 = *(void **)&v1[v277];
  if (!v286)
  {
LABEL_347:
    __break(1u);
    goto LABEL_348;
  }
  v287 = objc_msgSend(v286, "layer");
  LODWORD(v288) = 0;
  objc_msgSend(v287, "setShadowOpacity:", v288);

  v289 = *(void **)&v1[v277];
  if (!v289)
  {
LABEL_348:
    __break(1u);
    goto LABEL_349;
  }
  v290 = objc_msgSend(v289, "layer");
  objc_msgSend(v290, "setShadowRadius:", 0.0);

  v291 = *(void **)&v1[v277];
  if (!v291)
  {
LABEL_349:
    __break(1u);
    goto LABEL_350;
  }
  v292 = objc_msgSend(v291, "layer");
  v293 = Int.seconds.getter(0);
  objc_msgSend(v292, "setShadowOffset:", v293, v293);

  v294 = *(void **)&v1[v277];
  if (!v294)
  {
LABEL_350:
    __break(1u);
    goto LABEL_351;
  }
  v295 = v294;
  v296 = String._bridgeToObjectiveC()();
  objc_msgSend(v295, "_setLayoutDebuggingIdentifier:", v296);

  v297 = *(_QWORD *)&v1[v277];
  if (!v297)
  {
LABEL_351:
    __break(1u);
    goto LABEL_352;
  }
  *(_OWORD *)(v297 + OBJC_IVAR____TtC5Music16AudioTraitButton_hitRectMinimumSize) = xmmword_100EAB8B0;
  v298 = *(void **)&v1[v277];
  if (!v298)
  {
LABEL_352:
    __break(1u);
    goto LABEL_353;
  }
  v790 = v266;
  objc_msgSend(v298, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v819 = v277;
  v299 = *(void **)&v1[v277];
  if (!v299)
  {
LABEL_353:
    __break(1u);
    goto LABEL_354;
  }
  v300 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v300 + 16, v1);
  v301 = variable initialization expression of JSStore.storeFrontIdentifier();
  v303 = v302;
  v304 = v299;
  v305 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v301, v303, 0, 0, 0, 0, 0, 0, 0, v822, v821, sub_10013C2F0, v300);
  objc_msgSend(v304, "addAction:forControlEvents:", v305, 64);

  v306 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v307 = (char *)*(id *)&v1[v306];
  v308 = v830;
  v309 = objc_msgSend(v830, "whiteColor");
  v310 = *(void **)&v307[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedColor];
  *(_QWORD *)&v307[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedColor] = v309;
  v311 = v309;

  sub_1006B6C1C();
  v312 = (char *)*(id *)&v1[v306];
  v313 = objc_msgSend(v1, "view");
  if (!v313)
  {
LABEL_354:
    __break(1u);
    goto LABEL_355;
  }
  v314 = v313;
  v315 = objc_msgSend(v313, "tintColor");

  v316 = *(void **)&v312[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor];
  *(_QWORD *)&v312[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor] = v315;
  v317 = v315;

  sub_1006B6C1C();
  v318 = *(id *)&v1[v306];
  v319 = String._bridgeToObjectiveC()();
  objc_msgSend(v318, "_setLayoutDebuggingIdentifier:", v319);

  v320 = *(void **)&v1[v306];
  v321 = type metadata accessor for NowPlayingShuffleButton();
  v322 = v320;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_100117238, 0, v321);

  v323 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v324 = (char *)*(id *)&v1[v323];
  v325 = v308;
  v326 = v323;
  v327 = objc_msgSend(v325, "whiteColor");
  v328 = *(void **)&v324[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedColor];
  *(_QWORD *)&v324[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedColor] = v327;
  v329 = v327;

  sub_1008045F4();
  v330 = (char *)*(id *)&v1[v326];
  v331 = objc_msgSend(v1, "view");
  if (!v331)
  {
LABEL_355:
    __break(1u);
    goto LABEL_356;
  }
  v332 = v331;
  v333 = v306;
  v334 = objc_msgSend(v331, "tintColor");

  v335 = *(void **)&v330[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor];
  *(_QWORD *)&v330[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor] = v334;
  v336 = v334;

  sub_1008045F4();
  v337 = *(id *)&v1[v326];
  v338 = String._bridgeToObjectiveC()();
  objc_msgSend(v337, "_setLayoutDebuggingIdentifier:", v338);

  v339 = *(void **)&v1[v326];
  v340 = type metadata accessor for NowPlayingRepeatButton();
  v341 = v339;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_100117414, 0, v340);

  v342 = type metadata accessor for NowPlayingTransportButton();
  v343 = sub_100256B1C(0);
  v344 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton] = v343;

  v345 = OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton;
  v346 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
  if (!v346)
  {
LABEL_356:
    __break(1u);
    goto LABEL_357;
  }
  objc_msgSend(v346, "setExclusiveTouch:", 1);
  v347 = *(void **)&v1[v345];
  if (!v347)
  {
LABEL_357:
    __break(1u);
LABEL_358:
    __break(1u);
    goto LABEL_359;
  }
  v822 = v333;
  v348 = (NSString *)sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
  v349 = v347;
  v828 = v348;
  v350 = UIImage.init(systemName:pointSize:weight:)(68.0, 0x647261776B636162, 0xED00006C6C69662ELL, 5);
  v351 = sub_10027D92C(0);
  v352 = v351[2];
  if (v352)
  {
    v353 = 0;
    v354 = v351 + 4;
    do
    {
      v356 = *v354++;
      v355 = v356;
      if ((v356 & ~v353) == 0)
        v355 = 0;
      v353 |= v355;
      --v352;
    }
    while (v352);
  }
  else
  {
    v353 = 0;
  }
  objc_msgSend(v349, "setImage:forState:", v350, v353, swift_bridgeObjectRelease(v351).n128_f64[0]);

  v357 = *(void **)&v1[v345];
  if (!v357)
    goto LABEL_358;
  objc_msgSend(v357, "setHitRectInsets:", -25.0, -30.0, -25.0, 0.0);
  v358 = *(void **)&v1[v345];
  if (!v358)
  {
LABEL_359:
    __break(1u);
    goto LABEL_360;
  }
  v359 = v358;
  v360 = sub_1005D2B88();
  objc_msgSend(v359, "setTintColor:", *v360);

  v361 = *(void **)&v1[v345];
  if (!v361)
  {
LABEL_360:
    __break(1u);
    goto LABEL_361;
  }
  v362 = v361;
  v363 = String._bridgeToObjectiveC()();
  objc_msgSend(v362, "_setLayoutDebuggingIdentifier:", v363);

  v364 = *(void **)&v1[v345];
  if (!v364)
  {
LABEL_361:
    __break(1u);
    goto LABEL_362;
  }
  v365 = objc_msgSend(v364, "layer");
  objc_msgSend(v365, "setAllowsGroupBlending:", 0);

  v366 = *(void **)&v1[v345];
  if (!v366)
  {
LABEL_362:
    __break(1u);
    goto LABEL_363;
  }
  v367 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v367 + 16, v1);
  v368 = v366;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C2F8, v367, v342);
  swift_release(v367);

  v369 = *(void **)&v1[v345];
  if (!v369)
  {
LABEL_363:
    __break(1u);
    goto LABEL_364;
  }
  v370 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v370 + 16, v1);
  v371 = v369;
  ControlEventHandling<>.on(_:handler:)(0x1000000, (uint64_t)sub_10013C320, v370, v342);
  swift_release(v370);

  v372 = *(void **)&v1[v345];
  if (!v372)
  {
LABEL_364:
    __break(1u);
    goto LABEL_365;
  }
  v373 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v373 + 16, v1);
  v374 = v372;
  ControlEventHandling<>.on(_:handler:)(0x2000000, (uint64_t)sub_10013C348, v373, v342);
  swift_release(v373);

  v375 = sub_100256B1C(0);
  v376 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton] = v375;

  v377 = OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton;
  v378 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
  if (!v378)
  {
LABEL_365:
    __break(1u);
    goto LABEL_366;
  }
  objc_msgSend(v378, "setExclusiveTouch:", 1);
  v379 = *(void **)&v1[v377];
  if (!v379)
  {
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
    goto LABEL_368;
  }
  v821 = v326;
  v380 = v379;
  v381 = UIImage.init(systemName:pointSize:weight:)(68.0, 0x2E64726177726F66, 0xEC0000006C6C6966, 5);
  v382 = sub_10027D92C(0);
  v383 = v382[2];
  if (v383)
  {
    v384 = 0;
    v385 = v382 + 4;
    do
    {
      v387 = *v385++;
      v386 = v387;
      if ((v387 & ~v384) == 0)
        v386 = 0;
      v384 |= v386;
      --v383;
    }
    while (v383);
  }
  else
  {
    v384 = 0;
  }
  objc_msgSend(v380, "setImage:forState:", v381, v384, swift_bridgeObjectRelease(v382).n128_f64[0]);

  v388 = *(void **)&v1[v377];
  if (!v388)
    goto LABEL_367;
  objc_msgSend(v388, "setTintColor:", *v360);
  v389 = *(void **)&v1[v377];
  if (!v389)
  {
LABEL_368:
    __break(1u);
    goto LABEL_369;
  }
  objc_msgSend(v389, "setHitRectInsets:", -25.0, 0.0, -25.0, -30.0);
  v390 = *(void **)&v1[v377];
  if (!v390)
  {
LABEL_369:
    __break(1u);
    goto LABEL_370;
  }
  v391 = v390;
  v392 = String._bridgeToObjectiveC()();
  objc_msgSend(v391, "_setLayoutDebuggingIdentifier:", v392);

  v393 = *(void **)&v1[v377];
  if (!v393)
  {
LABEL_370:
    __break(1u);
    goto LABEL_371;
  }
  v394 = objc_msgSend(v393, "layer");
  objc_msgSend(v394, "setAllowsGroupBlending:", 0);

  v395 = *(void **)&v1[v377];
  if (!v395)
  {
LABEL_371:
    __break(1u);
    goto LABEL_372;
  }
  v396 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v396 + 16, v1);
  v397 = v395;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C370, v396, v342);
  swift_release(v396);

  v398 = *(void **)&v1[v377];
  if (!v398)
  {
LABEL_372:
    __break(1u);
    goto LABEL_373;
  }
  v399 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v399 + 16, v1);
  v400 = v398;
  ControlEventHandling<>.on(_:handler:)(0x1000000, (uint64_t)sub_10013C398, v399, v342);
  swift_release(v399);

  v401 = *(void **)&v1[v377];
  if (!v401)
  {
LABEL_373:
    __break(1u);
    goto LABEL_374;
  }
  v402 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v402 + 16, v1);
  v403 = v401;
  ControlEventHandling<>.on(_:handler:)(0x2000000, (uint64_t)sub_10013C3C0, v402, v342);
  swift_release(v402);

  v404 = sub_100256B1C(0);
  v405 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton] = v404;

  v406 = OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton;
  v407 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
  if (!v407)
  {
LABEL_374:
    __break(1u);
    goto LABEL_375;
  }
  objc_msgSend(v407, "setTintColor:", *v360);
  v408 = *(void **)&v1[v406];
  if (!v408)
  {
LABEL_375:
    __break(1u);
    goto LABEL_376;
  }
  v409 = (void *)objc_opt_self(MPButton);
  v410 = v408;
  objc_msgSend(v409, "easyTouchDefaultHitRectInsets");
  objc_msgSend(v410, "setHitRectInsets:");

  v411 = *(void **)&v1[v406];
  if (!v411)
  {
LABEL_376:
    __break(1u);
    goto LABEL_377;
  }
  objc_msgSend(v411, "setExclusiveTouch:", 1);
  v412 = *(void **)&v1[v406];
  if (!v412)
  {
LABEL_377:
    __break(1u);
    goto LABEL_378;
  }
  v413 = v412;
  v414 = String._bridgeToObjectiveC()();
  objc_msgSend(v413, "_setLayoutDebuggingIdentifier:", v414);

  v415 = *(void **)&v1[v406];
  if (!v415)
  {
LABEL_378:
    __break(1u);
    goto LABEL_379;
  }
  v416 = objc_msgSend(v415, "layer");
  objc_msgSend(v416, "setAllowsGroupBlending:", 0);

  v417 = *(void **)&v1[v406];
  if (!v417)
  {
LABEL_379:
    __break(1u);
    goto LABEL_380;
  }
  v418 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v418 + 16, v1);
  v419 = v417;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C3E8, v418, v342);
  swift_release(v418);

  v420 = swift_allocObject(v824, 56, 7);
  v421 = sub_10004D7C0(v420, 3);
  v423 = *(void **)&v1[v345];
  if (!v423)
  {
LABEL_380:
    __break(1u);
    goto LABEL_381;
  }
  v424 = v422;
  *v422 = v423;
  v425 = *(void **)&v1[v406];
  if (!v425)
  {
LABEL_381:
    __break(1u);
    goto LABEL_382;
  }
  v422[1] = v425;
  v426 = *(void **)&v1[v377];
  if (!v426)
  {
LABEL_382:
    __break(1u);
    goto LABEL_383;
  }
  v427 = v421;
  type metadata accessor for NowPlayingTransportControlStackView();
  v424[2] = v426;
  sub_10004D7B0();
  v428 = v423;
  v429 = v425;
  v430 = v426;
  v431 = sub_1002E47AC(v427);
  v432 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView] = v431;

  v433 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView;
  v434 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView];
  if (!v434)
  {
LABEL_383:
    __break(1u);
    goto LABEL_384;
  }
  v435 = v434;
  v436 = objc_msgSend(v830, "blackColor");
  objc_msgSend(v435, "setTintColor:", v436);

  v437 = *(void **)&v1[v433];
  if (!v437)
  {
LABEL_384:
    __break(1u);
    goto LABEL_385;
  }
  objc_msgSend(v437, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v438 = *(void **)&v1[v433];
  if (!v438)
  {
LABEL_385:
    __break(1u);
    goto LABEL_386;
  }
  objc_msgSend(v438, "setSemanticContentAttribute:", 1);
  v439 = *(void **)&v1[v433];
  if (!v439)
  {
LABEL_386:
    __break(1u);
    goto LABEL_387;
  }
  objc_msgSend(v439, "setAxis:", 0);
  v440 = *(void **)&v1[v433];
  if (!v440)
  {
LABEL_387:
    __break(1u);
    goto LABEL_388;
  }
  objc_msgSend(v440, "setDistribution:", 2);
  v441 = *(void **)&v1[v433];
  if (!v441)
  {
LABEL_388:
    __break(1u);
    goto LABEL_389;
  }
  objc_msgSend(v441, "setAlignment:", 3);
  v442 = *(void **)&v1[v433];
  if (!v442)
  {
LABEL_389:
    __break(1u);
    goto LABEL_390;
  }
  v443 = v442;
  v444 = String._bridgeToObjectiveC()();
  objc_msgSend(v443, "_setLayoutDebuggingIdentifier:", v444);

  type metadata accessor for VolumeSlider();
  v445 = sub_100256B54();
  v446 = UIView.forAutolayout.getter();

  v447 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider] = v446;

  v448 = OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider;
  v449 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider];
  if (!v449)
  {
LABEL_390:
    __break(1u);
    goto LABEL_391;
  }
  v450 = v449;
  v451 = String._bridgeToObjectiveC()();
  objc_msgSend(v450, "_setLayoutDebuggingIdentifier:", v451);

  sub_10004A07C(0, &qword_1011A2368, MPRouteLabel_ptr);
  v452 = sub_100256B18();
  v453 = UIView.forAutolayout.getter();

  v454 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel] = v453;

  v455 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel;
  v456 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
  if (!v456)
  {
LABEL_391:
    __break(1u);
    goto LABEL_392;
  }
  v820 = v433;
  objc_msgSend(v456, "setTextAlignment:", 1);
  v457 = *(void **)&v1[v455];
  if (!v457)
  {
LABEL_392:
    __break(1u);
    goto LABEL_393;
  }
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v458 = v457;
  v459 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  objc_msgSend(v458, "setFont:", v459);

  v460 = *(void **)((char *)v825 + (_QWORD)v1);
  if (!v460)
  {
LABEL_393:
    __break(1u);
    goto LABEL_394;
  }
  v789 = v448;
  if (!*(_QWORD *)&v1[v455])
  {
LABEL_394:
    __break(1u);
    goto LABEL_395;
  }
  objc_msgSend(v460, "addSubview:");
  v461 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  v462 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl]
                           + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton));
  v463 = sub_10016DA7C(0x6179616C70726961, 0xEC0000006F696475);
  if (!v463)
  {
LABEL_395:
    __break(1u);
    goto LABEL_396;
  }
  v464 = v463;
  objc_msgSend(v462, "setAccessoryImage:", v463);

  objc_msgSend(*(id *)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton), "setRouteLabelHidden:", 1);
  v465 = objc_retain(*(id *)(*(_QWORD *)&v1[v461]
                           + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton));
  v466 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  objc_msgSend(v465, "setFont:", v466);

  objc_msgSend(*(id *)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton), "setExclusiveTouch:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton), "setHitRectInsets:", -10.0, -28.0, -20.0, -28.0);
  v467 = objc_retain(*(id *)(*(_QWORD *)&v1[v461]
                           + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton));
  v468 = String._bridgeToObjectiveC()();
  objc_msgSend(v467, "_setLayoutDebuggingIdentifier:", v468);

  v469 = *(void **)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton);
  v470 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v470 + 16, v1);
  v471 = sub_10004A07C(0, &qword_1011A2370, MPRouteButton_ptr);
  v472 = v469;
  ControlEventHandling<>.on(_:handler:)(1, (uint64_t)sub_10013C3F0, v470, v471);
  swift_release(v470);

  v473 = *(void **)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton);
  v474 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v474 + 16, v1);
  v475 = v473;
  ControlEventHandling<>.on(_:handler:)(128, (uint64_t)sub_10013C3F8, v474, v471);
  swift_release(v474);

  v476 = *(void **)(*(_QWORD *)&v1[v461] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton);
  v477 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v477 + 16, v1);
  v478 = v476;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C400, v477, v471);
  swift_release(v477);

  v479 = *(void **)(*(_QWORD *)&v1[v461]
                  + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_sharePlayTogetherButton);
  v480 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v480 + 16, v1);
  v481 = v479;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C408, v480, v827);
  swift_release(v480);

  v482 = sub_10012CEA0();
  v483 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v483 + 16, v1);
  v838 = sub_10013C428;
  v839 = v483;
  aBlock = _NSConcreteStackBlock;
  v835 = 1107296256;
  v836 = sub_1001DBD98;
  v837 = &unk_1010B2B18;
  v484 = _Block_copy(&aBlock);
  objc_msgSend(v482, "setDismissHandler:", v484, swift_release(v839).n128_f64[0]);
  _Block_release(v484);

  v827 = sub_10004A07C(0, &qword_1011A2378, MPButton_ptr);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v486 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v487 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton] = v486;

  v488 = OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton;
  v489 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
  if (!v489)
  {
LABEL_396:
    __break(1u);
    goto LABEL_397;
  }
  objc_msgSend(v489, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v490 = *(void **)&v1[v488];
  if (!v490)
  {
LABEL_397:
    __break(1u);
    goto LABEL_398;
  }
  v491 = v490;
  objc_msgSend(v409, "easyTouchDefaultHitRectInsets");
  objc_msgSend(v491, "setHitRectInsets:");

  v492 = *(void **)&v1[v488];
  if (!v492)
  {
LABEL_398:
    __break(1u);
    goto LABEL_399;
  }
  objc_msgSend(v492, "setAdjustsImageWhenDisabled:", 0);
  v493 = sub_10011F4F4();
  v494 = __chkstk_darwin(v493);
  sub_10013A48C(v494, (void (*)(uint64_t, void *))sub_10013C430);
  *(_QWORD *)&v495 = swift_bridgeObjectRelease(v493).n128_u64[0];
  v496 = *(void **)&v1[v488];
  if (!v496)
  {
LABEL_399:
    __break(1u);
    goto LABEL_400;
  }
  v497 = objc_msgSend(v496, "layer", v495);
  objc_msgSend(v497, "setCornerCurve:", kCACornerCurveContinuous);

  v498 = *(void **)&v1[v488];
  if (!v498)
  {
LABEL_400:
    __break(1u);
    goto LABEL_401;
  }
  v499 = objc_msgSend(v498, "layer");
  objc_msgSend(v499, "setCornerRadius:", 8.0);

  v500 = *(void **)&v1[v488];
  if (!v500)
  {
LABEL_401:
    __break(1u);
    goto LABEL_402;
  }
  v501 = v500;
  v502 = String._bridgeToObjectiveC()();
  objc_msgSend(v501, "_setLayoutDebuggingIdentifier:", v502);

  v503 = *(void **)&v1[v488];
  if (!v503)
  {
LABEL_402:
    __break(1u);
    goto LABEL_403;
  }
  v504 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v504 + 16, v1);
  v505 = v503;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C45C, v504, v827);
  swift_release(v504);

  v506 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v507 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton] = v506;

  v508 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton;
  v509 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
  if (!v509)
  {
LABEL_403:
    __break(1u);
    goto LABEL_404;
  }
  objc_msgSend(v509, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v510 = *(void **)&v1[v508];
  if (!v510)
  {
LABEL_404:
    __break(1u);
    goto LABEL_405;
  }
  v511 = v510;
  objc_msgSend(v409, "easyTouchDefaultHitRectInsets");
  objc_msgSend(v511, "setHitRectInsets:");

  v512 = *(void **)&v1[v508];
  if (!v512)
  {
LABEL_405:
    __break(1u);
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  v513 = v512;
  v514 = sub_10016DA7C(0x6C75622E7473696CLL, 0xEB0000000074656CLL);
  if (v514)
  {
    v515 = v514;
    v516 = sub_10011F474();
    v517 = objc_msgSend(v515, "imageWithSymbolConfiguration:", v516);

  }
  else
  {
    v517 = 0;
  }
  v518 = sub_10027D92C(0);
  v519 = v518[2];
  if (v519)
  {
    v520 = 0;
    v521 = v518 + 4;
    do
    {
      v523 = *v521++;
      v522 = v523;
      if ((v523 & ~v520) == 0)
        v522 = 0;
      v520 |= v522;
      --v519;
    }
    while (v519);
  }
  else
  {
    v520 = 0;
  }
  objc_msgSend(v513, "setImage:forState:", v517, v520, swift_bridgeObjectRelease(v518).n128_f64[0]);

  v524 = *(void **)&v1[v508];
  if (!v524)
    goto LABEL_406;
  v525 = objc_msgSend(v524, "layer");
  objc_msgSend(v525, "setCornerCurve:", kCACornerCurveContinuous);

  v526 = *(void **)&v1[v508];
  if (!v526)
  {
LABEL_407:
    __break(1u);
    goto LABEL_408;
  }
  v527 = objc_msgSend(v526, "layer");
  objc_msgSend(v527, "setCornerRadius:", 8.0);

  v528 = *(void **)&v1[v508];
  if (!v528)
  {
LABEL_408:
    __break(1u);
    goto LABEL_409;
  }
  v529 = v528;
  v530 = String._bridgeToObjectiveC()();
  objc_msgSend(v529, "_setLayoutDebuggingIdentifier:", v530);

  v531 = *(void **)&v1[v508];
  if (!v531)
  {
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  v532 = v531;
  v533 = objc_msgSend(v830, "clearColor");
  objc_msgSend(v532, "setBackgroundColor:", v533);

  v534 = *(void **)&v1[v508];
  if (!v534)
  {
LABEL_410:
    __break(1u);
    goto LABEL_411;
  }
  v535 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v535 + 16, v1);
  v536 = v534;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10013C464, v535, v827);
  swift_release(v535);

  sub_100133030();
  sub_1001329AC();
  v537 = swift_allocObject(v824, 56, 7);
  v538 = sub_10004D7C0(v537, 3);
  v540 = *(void **)&v1[v488];
  if (!v540)
  {
LABEL_411:
    __break(1u);
    goto LABEL_412;
  }
  v541 = v539;
  *v539 = v540;
  v542 = *(void **)&v1[v461];
  v539[1] = v542;
  v543 = *(void **)&v1[v508];
  if (!v543)
  {
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  v544 = v538;
  type metadata accessor for PassThroughStackView();
  v541[2] = v543;
  sub_10004D7B0();
  v545 = v540;
  v546 = v542;
  v547 = v543;
  v548 = sub_1002E47AC(v544);
  v549 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView] = v548;

  v550 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView;
  v551 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView];
  if (!v551)
  {
LABEL_413:
    __break(1u);
    goto LABEL_414;
  }
  objc_msgSend(v551, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v552 = *(void **)&v1[v550];
  if (!v552)
  {
LABEL_414:
    __break(1u);
    goto LABEL_415;
  }
  objc_msgSend(v552, "setLayoutMarginsRelativeArrangement:", 1);
  v553 = *(void **)&v1[v550];
  if (!v553)
  {
LABEL_415:
    __break(1u);
LABEL_416:
    __break(1u);
    goto LABEL_417;
  }
  v554 = qword_10119B980;
  v555 = v553;
  if (v554 != -1)
    swift_once(&qword_10119B980, sub_10012C52C);
  objc_msgSend(v555, "setLayoutMargins:", *(double *)&qword_1011A1A00, *(double *)&qword_1011A1A00, *(double *)&qword_1011A1A00, *(double *)&qword_1011A1A00);

  v556 = *(void **)&v1[v550];
  if (!v556)
    goto LABEL_416;
  objc_msgSend(v556, "setAxis:", 0);
  v557 = *(void **)&v1[v550];
  if (!v557)
  {
LABEL_417:
    __break(1u);
    goto LABEL_418;
  }
  objc_msgSend(v557, "setDistribution:", 3);
  v558 = *(void **)&v1[v550];
  if (!v558)
  {
LABEL_418:
    __break(1u);
    goto LABEL_419;
  }
  objc_msgSend(v558, "setAlignment:", 3);
  v559 = *(void **)&v1[v550];
  if (!v559)
  {
LABEL_419:
    __break(1u);
    goto LABEL_420;
  }
  objc_msgSend(v559, "setSpacing:", 20.0);
  v560 = *(void **)&v1[v550];
  if (!v560)
  {
LABEL_420:
    __break(1u);
    goto LABEL_421;
  }
  v561 = objc_msgSend(v560, "layer");
  objc_msgSend(v561, "setAllowsGroupBlending:", 0);

  v562 = *(void **)&v1[v550];
  if (!v562)
  {
LABEL_421:
    __break(1u);
    goto LABEL_422;
  }
  v563 = v562;
  v564 = String._bridgeToObjectiveC()();
  objc_msgSend(v563, "_setLayoutDebuggingIdentifier:", v564);

  sub_10004A07C(0, &qword_1011A2380, UIImageView_ptr);
  v565 = sub_100256B54();
  v566 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView] = v565;

  v567 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
  v568 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView];
  if (!v568)
  {
LABEL_422:
    __break(1u);
    goto LABEL_423;
  }
  objc_msgSend(v568, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v569 = *(void **)&v1[v567];
  if (!v569)
  {
LABEL_423:
    __break(1u);
    goto LABEL_424;
  }
  v570 = v569;
  objc_msgSend(v570, "setBackgroundColor:", *sub_1005D2BC8());

  v571 = *(void **)&v1[v567];
  if (!v571)
  {
LABEL_424:
    __break(1u);
    goto LABEL_425;
  }
  objc_msgSend(v571, "setContentMode:", 4);
  v572 = *(void **)&v1[v567];
  if (!v572)
  {
LABEL_425:
    __break(1u);
LABEL_426:
    __break(1u);
    goto LABEL_427;
  }
  v573 = objc_msgSend(v572, "layer");
  if (qword_10119B998 != -1)
    swift_once(&qword_10119B998, sub_10012C56C);
  objc_msgSend(v573, "setCornerRadius:", *(double *)&qword_1011A1A48 * 0.5);

  v574 = *(void **)&v1[v567];
  if (!v574)
    goto LABEL_426;
  objc_msgSend(v574, "setHidden:", 1);
  v575 = *(void **)&v1[v567];
  if (!v575)
  {
LABEL_427:
    __break(1u);
LABEL_428:
    __break(1u);
    goto LABEL_429;
  }
  v576 = v575;
  v577 = String._bridgeToObjectiveC()();
  objc_msgSend(v576, "_setLayoutDebuggingIdentifier:", v577);

  sub_100132764();
  v828 = (UIContentSizeCategory)objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  if (static Artwork.Caching.Reference.== infix(_:_:)((uint64_t)-[NSString userInterfaceIdiom](v828, "userInterfaceIdiom"), 0))
  {
    v578 = sub_100007E8C(&qword_1011A23A8);
    v579 = swift_initStackObject(v578, &v831);
    v580 = sub_10004D62C(v579, 1);
    v582 = v581;
    UIScreen.Dimensions.size.getter(UIDeviceOrientationDidChangeNotification);
    v582[3] = &type metadata for NotificationTrigger;
    v582[4] = &protocol witness table for NotificationTrigger;
    *v582 = v583;
    v582[1] = v584;
    UIScreen.Dimensions.size.getter(v580);
    v586 = v585;
    v587 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v587 + 16, v1);
    v588 = swift_allocObject(&unk_1010B2B78, 32, 7);
    v589 = v828;
    *(_QWORD *)(v588 + 16) = v587;
    *(_QWORD *)(v588 + 24) = v589;
    LOBYTE(v587) = static MPCPlayerCommandRequest.isAvailable(in:)();
    v590 = type metadata accessor for Whitetail.Binding();
    swift_allocObject(v590, 48, 7);
    v591 = UIDeviceOrientationDidChangeNotification;
    v592 = v589;
    v593 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v586, v587 & 1, (uint64_t)sub_10013C4F0, v588);
    v594 = (void (*)(id *, _QWORD))sub_10012CD90((uint64_t)&aBlock);
    sub_10043B7A0(v593);
    v594(&aBlock, 0);
  }
  v595 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController;
  v596 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController];
  v597 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v597 + 16, v1);
  v598 = *(_QWORD *)(v596 + 88);
  v599 = *(_QWORD *)(v596 + 96);
  *(_QWORD *)(v596 + 88) = sub_10013C46C;
  *(_QWORD *)(v596 + 96) = v597;
  sub_10004BA30(v598, v599);
  v600 = *(_QWORD *)&v1[v595];
  v601 = *(void (**)(__n128))(v600 + 88);
  if (v601)
  {
    v602 = *(_QWORD *)(v600 + 96);
    v603 = swift_retain(v602);
    v601(v603);
    sub_10004BA30((uint64_t)v601, v602);
  }
  v604 = sub_10004A07C(0, &qword_1011A2388, UITapGestureRecognizer_ptr);
  v605 = sub_100256B54();
  v606 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer] = v605;

  v607 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer;
  v608 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer];
  if (!v608)
    goto LABEL_428;
  objc_msgSend(v608, "setDelegate:", v1);
  v609 = objc_msgSend(v1, "view");
  if (!v609)
  {
LABEL_429:
    __break(1u);
    goto LABEL_430;
  }
  if (!*(_QWORD *)&v1[v607])
  {
LABEL_430:
    __break(1u);
    goto LABEL_431;
  }
  v610 = v609;
  objc_msgSend(v609, "addGestureRecognizer:");

  v611 = *(void **)&v1[v607];
  if (!v611)
  {
LABEL_431:
    __break(1u);
    goto LABEL_432;
  }
  v612 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v612 + 16, v1);
  v613 = v611;
  swift_retain(v612);
  v614 = UIGestureRecognizerHandling<>.addHandler(_:)((uint64_t)sub_10013C474, v612, v604);
  swift_release_n(v612, 2, v615);

  swift_release(v614);
  v616 = sub_10004A07C(0, &qword_1011A2390, UIPinchGestureRecognizer_ptr);
  v617 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v618 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer] = v617;

  v619 = OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer;
  v620 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer];
  if (!v620)
  {
LABEL_432:
    __break(1u);
    goto LABEL_433;
  }
  objc_msgSend(v620, "setDelegate:", v1);
  v621 = objc_msgSend(v1, "view");
  if (!v621)
  {
LABEL_433:
    __break(1u);
    goto LABEL_434;
  }
  if (!*(_QWORD *)&v1[v619])
  {
LABEL_434:
    __break(1u);
    goto LABEL_435;
  }
  v622 = v621;
  objc_msgSend(v621, "addGestureRecognizer:");

  v623 = *(void **)&v1[v619];
  if (!v623)
  {
LABEL_435:
    __break(1u);
    goto LABEL_436;
  }
  v624 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v624 + 16, v1);
  v625 = v623;
  swift_retain(v624);
  v626 = UIGestureRecognizerHandling<>.addHandler(_:)((uint64_t)sub_10013C47C, v624, v616);
  swift_release_n(v624, 2, v627);

  *(_QWORD *)&v628 = swift_release(v626).n128_u64[0];
  objc_msgSend(*(id *)&v1[v826], "addSubview:", *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView], v628);
  v629 = v817;
  v630 = *(void **)&v1[v817];
  v631 = v825;
  v632 = v819;
  if (!v630)
  {
LABEL_436:
    __break(1u);
    goto LABEL_437;
  }
  if (!*(_QWORD *)&v1[v792])
  {
LABEL_437:
    __break(1u);
    goto LABEL_438;
  }
  objc_msgSend(v630, "addSubview:");
  v633 = *(void **)&v1[v629];
  if (!v633)
  {
LABEL_438:
    __break(1u);
    goto LABEL_439;
  }
  if (!*(_QWORD *)&v1[v829])
  {
LABEL_439:
    __break(1u);
    goto LABEL_440;
  }
  objc_msgSend(v633, "addSubview:");
  v634 = *(void **)((char *)v631 + (_QWORD)v1);
  if (!v634)
  {
LABEL_440:
    __break(1u);
    goto LABEL_441;
  }
  objc_msgSend(v634, "addSubview:", *(_QWORD *)&v1[v822]);
  v635 = *(void **)((char *)v631 + (_QWORD)v1);
  if (!v635)
  {
LABEL_441:
    __break(1u);
    goto LABEL_442;
  }
  objc_msgSend(v635, "addSubview:", *(_QWORD *)&v1[v821]);
  v636 = *(void **)((char *)v631 + (_QWORD)v1);
  if (!v636)
  {
LABEL_442:
    __break(1u);
    goto LABEL_443;
  }
  if (!*(_QWORD *)&v1[v789])
  {
LABEL_443:
    __break(1u);
    goto LABEL_444;
  }
  objc_msgSend(v636, "addSubview:");
  v637 = *(void **)((char *)v631 + (_QWORD)v1);
  if (!v637)
  {
LABEL_444:
    __break(1u);
    goto LABEL_445;
  }
  if (!*(_QWORD *)&v1[v820])
  {
LABEL_445:
    __break(1u);
    goto LABEL_446;
  }
  objc_msgSend(v637, "addSubview:");
  v638 = *(void **)((char *)v631 + (_QWORD)v1);
  if (!v638)
  {
LABEL_446:
    __break(1u);
    goto LABEL_447;
  }
  if (!*(_QWORD *)&v1[v567])
  {
LABEL_447:
    __break(1u);
    goto LABEL_448;
  }
  objc_msgSend(v638, "addSubview:");
  v639 = v816;
  if (!*(_QWORD *)&v1[v629])
  {
LABEL_448:
    __break(1u);
    goto LABEL_449;
  }
  objc_msgSend(*(id *)&v1[v816], "addSubview:");
  if (!*(uint64_t *)((char *)v631 + (_QWORD)v1))
  {
LABEL_449:
    __break(1u);
    goto LABEL_450;
  }
  objc_msgSend(*(id *)&v1[v639], "addSubview:");
  if (!*(_QWORD *)&v1[v790])
  {
LABEL_450:
    __break(1u);
    goto LABEL_451;
  }
  objc_msgSend(*(id *)&v1[v639], "addSubview:");
  if (!*(_QWORD *)&v1[v632])
  {
LABEL_451:
    __break(1u);
LABEL_452:
    __break(1u);
    goto LABEL_453;
  }
  objc_msgSend(*(id *)&v1[v639], "addSubview:");
  v640 = objc_msgSend(v1, "traitCollection");
  v641 = objc_msgSend(v640, "userInterfaceIdiom");

  if (static Artwork.Caching.Reference.== infix(_:_:)((uint64_t)v641, 0))
  {
    if (!*(_QWORD *)&v1[v550])
    {
LABEL_454:
      __break(1u);
      goto LABEL_455;
    }
    objc_msgSend(*(id *)&v1[v639], "addSubview:");
    if (!*(_QWORD *)&v1[v815])
    {
LABEL_455:
      __break(1u);
      goto LABEL_456;
    }
    objc_msgSend(*(id *)&v1[v639], "addSubview:");
    v642 = objc_msgSend(v1, "view");
    if (!v642)
    {
LABEL_456:
      __break(1u);
      goto LABEL_457;
    }
    v643 = v642;
    v644 = *(_QWORD *)&v1[v639];
  }
  else
  {
    v645 = objc_msgSend(v1, "view");
    if (!v645)
    {
LABEL_457:
      __break(1u);
      goto LABEL_458;
    }
    v646 = v645;
    objc_msgSend(v645, "addSubview:", *(_QWORD *)&v1[v639]);

    v647 = objc_msgSend(v1, "view");
    if (!v647)
    {
LABEL_458:
      __break(1u);
      goto LABEL_459;
    }
    if (!*(_QWORD *)&v1[v815])
    {
LABEL_459:
      __break(1u);
      goto LABEL_460;
    }
    v648 = v647;
    objc_msgSend(v647, "addSubview:");

    v649 = objc_msgSend(v1, "view");
    if (!v649)
    {
LABEL_460:
      __break(1u);
      goto LABEL_461;
    }
    v644 = *(_QWORD *)&v1[v550];
    if (!v644)
    {
LABEL_461:
      __break(1u);
      return;
    }
    v643 = v649;
  }
  objc_msgSend(v643, "addSubview:", v644);

  v650 = objc_msgSend(v1, "view");
  if (!v650)
    goto LABEL_452;
  if (!*(_QWORD *)&v1[v798])
  {
LABEL_453:
    __break(1u);
    goto LABEL_454;
  }
  v651 = v650;
  objc_msgSend(v650, "addSubview:");

  sub_100134E20();
  sub_10011FC14();
  type metadata accessor for NowPlayingContentView(0);
  v652 = UIStackView.SpacerView.__allocating_init(frame:)(v293, v293, v293, v293);
  sub_100110D28(v652);
  LOBYTE(aBlock) = 2;
  v653 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v653) & 1) == 0)
  {
    v654 = sub_1000E7E0C();
    v655 = v783;
    (*(void (**)(void))(*(_QWORD *)*v654 + 504))();
    v656 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    aBlock = (id)static OS_dispatch_queue.main.getter(v656, v657, v658, v659, v660, v661, v662, v663);
    v664 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v665 = (uint64_t)v823;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v664 - 8) + 56))(v823, 1, 1, v664);
    v666 = sub_100049F28(&qword_1011A2398, &qword_1011A2318, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v667 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v668 = v785;
    v669 = v786;
    Publisher.receive<A>(on:options:)(&aBlock, v665, v785, v656, v666, v667);
    sub_10004FF60(v665, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v784 + 8))(v655, v668);
    v670 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v670 + 16, v1);
    v671 = sub_100049F28(&qword_1011A23A0, (uint64_t *)&unk_1011A2320, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v672 = v788;
    v673 = Publisher<>.sink(receiveValue:)(sub_10013C484, v670, v788, v671);
    v674 = swift_release(v670);
    (*(void (**)(char *, uint64_t, __n128))(v787 + 8))(v669, v672, v674);
    v675 = (void (*)(id *, _QWORD, __n128))sub_10011FBB8((uint64_t)&aBlock);
    AnyCancellable.store(in:)(v676, v677);
    v678 = swift_release(v673);
    v675(&aBlock, 0, v678);
  }
  v825 = sub_1000E7E0C();
  v679 = v801;
  (*(void (**)(void))(*(_QWORD *)*v825 + 552))();
  v680 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v829 = v680;
  aBlock = (id)static OS_dispatch_queue.main.getter(v680, v681, v682, v683, v684, v685, v686, v687);
  v688 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v830 = *(id *)(*(_QWORD *)(v688 - 8) + 56);
  v689 = (uint64_t)v823;
  v826 = v688;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v830)(v823, 1, 1, v688);
  v690 = sub_100049F28((unint64_t *)&unk_1011A21F0, (uint64_t *)&unk_1011A21E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v691 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v692 = v803;
  v693 = v804;
  v827 = v691;
  Publisher.receive<A>(on:options:)(&aBlock, v689, v803, v680, v690, v691);
  sub_10004FF60(v689, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v802 + 8))(v679, v692);
  v694 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v694 + 16, v1);
  v695 = sub_100049F28(&qword_1011A2200, (uint64_t *)&unk_1011A8ED0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v696 = v806;
  v697 = Publisher<>.sink(receiveValue:)(sub_10013C48C, v694, v806, v695);
  v698 = swift_release(v694);
  (*(void (**)(char *, uint64_t, __n128))(v805 + 8))(v693, v696, v698);
  v699 = (uint64_t (*)(id *, _QWORD, __n128))sub_10011FBB8((uint64_t)&aBlock);
  AnyCancellable.store(in:)(v700, v701);
  v702 = swift_release(v697);
  v703 = v699(&aBlock, 0, v702);
  v704 = v807;
  v705 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*v825 + 648))(v703);
  v706 = v829;
  aBlock = (id)static OS_dispatch_queue.main.getter(v705, v707, v708, v709, v710, v711, v712, v713);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v830)(v689, 1, 1, v688);
  v714 = sub_100049F28(&qword_1011A0928, (uint64_t *)&unk_1011A08E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v715 = v809;
  v716 = v796;
  Publisher.receive<A>(on:options:)(&aBlock, v689, v796, v706, v714, v691);
  sub_10004FF60(v689, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v808 + 8))(v704, v716);
  v717 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v717 + 16, v1);
  v718 = sub_100049F28((unint64_t *)&unk_1011A0930, &qword_1011A2310, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v719 = v811;
  v720 = Publisher<>.sink(receiveValue:)(sub_10013C494, v717, v811, v718);
  v721 = swift_release(v717);
  (*(void (**)(char *, uint64_t, __n128))(v810 + 8))(v715, v719, v721);
  v722 = (void (*)(id *, _QWORD, __n128))sub_10011FBB8((uint64_t)&aBlock);
  AnyCancellable.store(in:)(v723, v724);
  v725 = swift_release(v720);
  v722(&aBlock, 0, v725);
  v726 = sub_100007E8C(&qword_1011A23A8);
  v727 = swift_initStackObject(v726, &v833);
  v728 = sub_10004D62C(v727, 1);
  v730 = v729;
  v731 = (void *)*sub_1007E64E0();
  UIScreen.Dimensions.size.getter(v731);
  v730[3] = &type metadata for NotificationTrigger;
  v730[4] = &protocol witness table for NotificationTrigger;
  *v730 = v732;
  v730[1] = v733;
  UIScreen.Dimensions.size.getter(v728);
  v735 = v734;
  v736 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v736 + 16, v1);
  LOBYTE(v715) = static MPCPlayerCommandRequest.isAvailable(in:)();
  v737 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v737, 48, 7);
  v738 = v731;
  v739 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v735, v715 & 1, (uint64_t)sub_10013C49C, v736);
  v740 = (void (*)(id *, _QWORD))sub_10012CD90((uint64_t)&aBlock);
  sub_10043B7A0(v739);
  v740(&aBlock, 0);
  v741 = swift_initStackObject(v726, &v832);
  v742 = sub_10004D62C(v741, 1);
  v744 = v743;
  UIScreen.Dimensions.size.getter(MPMediaLibraryDidChangeNotification);
  v744[3] = &type metadata for NotificationTrigger;
  v744[4] = &protocol witness table for NotificationTrigger;
  *v744 = v745;
  v744[1] = v746;
  UIScreen.Dimensions.size.getter(v742);
  v748 = v747;
  v749 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v749 + 16, v1);
  swift_allocObject(v737, 48, 7);
  v750 = MPMediaLibraryDidChangeNotification;
  v751 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v748, v715 & 1, (uint64_t)sub_10013C4BC, v749);
  v752 = (void (*)(id *, _QWORD))sub_10012CD90((uint64_t)&aBlock);
  sub_10043B7A0(v751);
  v752(&aBlock, 0);
  v753 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v754 = (void *)static MAMusicHaptics.enabledStatusDidChangeNotification.getter();
  v755 = v799;
  NSNotificationCenter.publisher(for:object:)(v754, 0);

  v756 = v829;
  aBlock = (id)static OS_dispatch_queue.main.getter(v757, v758, v759, v760, v761, v762, v763, v764);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v830)(v689, 1, 1, v826);
  v765 = sub_100048748((unint64_t *)&qword_1011A23B0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v766 = v812;
  v767 = v797;
  Publisher.receive<A>(on:options:)(&aBlock, v689, v797, v756, v765, v827);
  sub_10004FF60(v689, &qword_1011A08F0);

  v768 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v768 + 16, v1);
  v769 = sub_100049F28(&qword_1011A23B8, (uint64_t *)&unk_1011A2300, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v770 = v814;
  v771 = Publisher<>.sink(receiveValue:)(sub_10013C4DC, v768, v814, v769);
  v772 = swift_release(v768);
  (*(void (**)(char *, uint64_t, __n128))(v813 + 8))(v766, v770, v772);
  v773 = (void (*)(id *, _QWORD, __n128))sub_10011FBB8((uint64_t)&aBlock);
  AnyCancellable.store(in:)(v774, v775);
  v776 = swift_release(v771);
  v773(&aBlock, 0, v776);
  v777 = objc_msgSend((id)objc_opt_self(AXSettings), "sharedInstance");
  v778 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v778 + 16, v1);
  v838 = sub_10013C4E4;
  v839 = v778;
  aBlock = _NSConcreteStackBlock;
  v835 = 1107296256;
  v836 = sub_1001DBD98;
  v837 = &unk_1010B2B40;
  v779 = _Block_copy(&aBlock);
  v780 = swift_release(v839);
  objc_msgSend(v777, "registerUpdateBlock:forRetrieveSelector:withListener:", v779, Selector.init(_:)(0xD000000000000011, 0x8000000100E2E8C0, v780), v1);
  _Block_release(v779);

  sub_1001195D8();
  v781 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
  objc_msgSend(v781, "registerObserver:", v1);

  v782 = swift_release(v791);
  (*(void (**)(char *, uint64_t, __n128))(v800 + 8))(v755, v767, v782);
}

void sub_100116640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_1001166A0(uint64_t a1, uint64_t a2)
{
  void *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  *(_BYTE *)(a2 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 76)) = 0;
  v3 = (void *)UIViewConfigurationState.traitCollection.getter();
  v4 = sub_10013B23C();
  v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4);

  v6 = *(_QWORD *)(a2 + 200);
  if ((v5 & 1) != 0)
  {
    if (v6 != 1)
    {
      if (qword_10119C308 != -1)
        swift_once(&qword_10119C308, sub_1005D2EE4);
      v7 = qword_10124D3E8;
      v8 = *(void **)(a2 + 200);
      v9 = (id)qword_10124D3E8;

      *(_QWORD *)(a2 + 200) = v7;
    }
    if (qword_10119C300 != -1)
      swift_once(&qword_10119C300, sub_1005D2ED0);
    v10 = qword_10124D3E0;
    v11 = *(void **)(a2 + 112);
    v12 = (id)qword_10124D3E0;

    *(_QWORD *)(a2 + 112) = v10;
    v13 = kCAFilterPlusL;
    if (*(_QWORD *)(a2 + 200) != 1)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
      v16 = v15;
      swift_bridgeObjectRelease(*(_QWORD *)(a2 + 216));
      *(_QWORD *)(a2 + 208) = v14;
      *(_QWORD *)(a2 + 216) = v16;
    }
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v19 = v18;
    swift_bridgeObjectRelease(*(_QWORD *)(a2 + 96));
    *(_QWORD *)(a2 + 88) = v17;
    *(_QWORD *)(a2 + 96) = v19;
  }
  else
  {
    if (v6 == 1)
    {

      *(_QWORD *)(a2 + 112) = 0;
    }
    else
    {
      v20 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");

      *(_QWORD *)(a2 + 200) = v20;
      *(_QWORD *)(a2 + 112) = 0;
      if (*(_QWORD *)(a2 + 200) != 1)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(a2 + 216));
        *(_QWORD *)(a2 + 208) = 0;
        *(_QWORD *)(a2 + 216) = 0;
      }
    }
    swift_bridgeObjectRelease(*(_QWORD *)(a2 + 96));
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
  }
}

uint64_t sub_100116858(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  __n128 v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v3 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)&v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (void *)result;
    v14 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    sub_10012C274(v5);
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(0x41747865746E6F63, 0xED00006E6F697463, 5, 23, (uint64_t)v8, 0, 0, 5, (uint64_t)v11, 0, 0, 0xFF00u, v5, 0);
    v15 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v17 = v16;
    v19 = v18;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v20 = qword_10124C790;
    swift_retain(qword_10124C790);
    v21 = GroupActivitiesManager.hasJoined.getter();
    v22 = GroupActivitiesManager.participantsCount.getter();
    v23 = (uint64_t *)(v20 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v20 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v26, 0, 0);
    v24 = *v23;
    v25 = swift_release(v20);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v15) + 0xB8))(v11, v17, v19, v21 & 1, v22, v24, v25);

    swift_bridgeObjectRelease(v19);
    return sub_10005B748((uint64_t)v11, type metadata accessor for MetricsEvent.Click);
  }
  return result;
}

void *sub_100116AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return 0;
  v4 = (void *)Strong;
  v5 = sub_10013750C();

  return v5;
}

void sub_100116B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  char *v5;
  int v6;
  uint64_t v7;
  void (*v8)(id);
  id v9;
  char v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = &Strong[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle];
    v6 = Strong[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle + 16];
    if (v6 == 255 || (v6 & 1) != 0)
    {

    }
    else
    {
      v8 = *(void (**)(id))v5;
      v7 = *((_QWORD *)v5 + 1);
      v9 = sub_10013C108(*(void **)v5, v7, 0);
      v8(v9);

      sub_10013C090(v8, v7, v6);
    }
  }
}

void sub_100116BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  char v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  unsigned int v10;
  id v11;
  unsigned int v12;
  char v13;
  _BYTE *v14;
  char v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;
  double v19;
  unsigned __int8 v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t inited;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  void (**v57)();
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _QWORD *v61;
  unint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  char v65[64];
  char v66[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v66, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = sub_10011C4FC();
    if (((1 << v5) & 0x799) == 0)
    {
      v6 = OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState;
      if (v4[OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState] - 1 <= 1)
      {
        v7 = (void *)objc_opt_self(AXSettings);
        v8 = objc_msgSend(v7, "sharedInstance");
        v9 = objc_msgSend(v7, "sharedInstance");
        v10 = objc_msgSend(v9, "hapticMusicActive");

        objc_msgSend(v8, "setHapticMusicActive:", v10 ^ 1);
        if (v4[v6])
        {
          v11 = objc_msgSend(v7, "sharedInstance");
          v12 = objc_msgSend(v11, "hapticMusicActive");

          if (v12)
            v13 = 1;
          else
            v13 = 2;
          v4[v6] = v13;
        }
        sub_10011C9E8();
        goto LABEL_35;
      }
      v14 = *(_BYTE **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (v14)
      {
        v15 = v5;
        v16 = OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure;
        v17 = v14[OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure];
        v14[OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure] = 1;
        if ((v17 & 1) == 0)
        {
          v18 = v14;
          objc_msgSend(v18, "alpha");
          if (v19 != 0.0 && (objc_msgSend(v18, "isHidden") & 1) == 0)
          {
            v20 = objc_msgSend(v18, "isHighlighted");
            v21 = 0.5;
            if ((v20 & 1) == 0)
            {
              v21 = 1.0;
              if (v14[v16])
                v21 = 0.5;
            }
            objc_msgSend(v18, "setAlpha:", v21);
          }

        }
        v22 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
        if (!v22)
          goto LABEL_35;
        v23 = objc_msgSend(v22, "tracklist");
        v24 = objc_msgSend(v23, "playingItem");

        if (!v24)
          goto LABEL_35;
        v25 = objc_msgSend(v24, "musicAudio");

        if (!v25)
          goto LABEL_35;
        v26 = sub_100007E8C((uint64_t *)&unk_1011A2410);
        inited = swift_initStackObject(v26, v65);
        *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
        swift_getObjectType();
        v28 = objc_msgSend(v25, "activeFormat");
        v29 = MPNowPlayingInfoAudioFormat.inputDetails.getter();
        v31 = v30;

        *(_QWORD *)(inited + 32) = v29;
        *(_QWORD *)(inited + 40) = v31;
        v32 = sub_1000563CC();
        v34 = v33;
        *(_QWORD *)(inited + 48) = v32;
        *(_QWORD *)(inited + 56) = v33;
        if (v31)
        {
          swift_bridgeObjectRetain();
          v35 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
          v36 = v35[2];
          v37 = v35[3];
          v38 = v36 + 1;
          if (v36 >= v37 >> 1)
          {
            v64 = v36 + 1;
            v61 = v35;
            v62 = v35[2];
            v63 = sub_100431480((_QWORD *)(v37 > 1), v36 + 1, 1, v61);
            v36 = v62;
            v38 = v64;
            v35 = v63;
          }
          v35[2] = v38;
          v39 = &v35[2 * v36];
          v39[4] = v29;
          v39[5] = v31;
        }
        else
        {
          v35 = _swiftEmptyArrayStorage;
        }
        if (v34)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
            v35 = sub_100431480(0, v35[2] + 1, 1, v35);
          v41 = v35[2];
          v40 = v35[3];
          if (v41 >= v40 >> 1)
            v35 = sub_100431480((_QWORD *)(v40 > 1), v41 + 1, 1, v35);
          v35[2] = v41 + 1;
          v42 = &v35[2 * v41];
          v42[4] = v32;
          v42[5] = v34;
        }
        swift_release(inited);
        v43 = sub_100007E8C((uint64_t *)&unk_1011AD420);
        v44 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
        v45 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v43, v44);
        v47 = v46;
        swift_unknownObjectRelease(v25);
        swift_bridgeObjectRelease(v35);
        v48 = objc_allocWithZone((Class)type metadata accessor for AudioTraitDisclosureViewController());
        sub_100548BE8(v15, v45, v47);
        v50 = v49;
        objc_msgSend(v49, "setOverrideUserInterfaceStyle:", 2);
        v51 = objc_msgSend(v50, "view");
        if (v51)
        {
          v52 = v51;
          v53 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
          v54 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
          v55 = objc_msgSend(v53, "resolvedColorWithTraitCollection:", v54);

          objc_msgSend(v52, "setTintColor:", v55);
          v56 = swift_allocObject(&unk_1010B2C40, 24, 7);
          *(_QWORD *)(v56 + 16) = v4;
          v57 = (void (**)())&v50[OBJC_IVAR____TtC5Music34AudioTraitDisclosureViewController_dismissHandler];
          v58 = *(_QWORD *)&v50[OBJC_IVAR____TtC5Music34AudioTraitDisclosureViewController_dismissHandler];
          v59 = *(_QWORD *)&v50[OBJC_IVAR____TtC5Music34AudioTraitDisclosureViewController_dismissHandler + 8];
          *v57 = sub_10013C6F4;
          v57[1] = (void (*)())v56;
          v60 = v4;
          sub_10004BA30(v58, v59);
          objc_msgSend(v60, "presentViewController:animated:completion:", v50, 1, 0);

          goto LABEL_35;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_35:

  }
}

void sub_10011716C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  double v4;
  unsigned __int8 v5;
  double v6;
  _BYTE *v7;

  v1 = *(_BYTE **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (v1)
  {
    v2 = OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure;
    v3 = v1[OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure];
    v1[OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure] = 0;
    if (v3 == 1)
    {
      v7 = v1;
      objc_msgSend(v7, "alpha");
      if (v4 != 0.0 && (objc_msgSend(v7, "isHidden") & 1) == 0)
      {
        v5 = objc_msgSend(v7, "isHighlighted");
        v6 = 0.5;
        if ((v5 & 1) == 0)
        {
          v6 = 1.0;
          if (v1[v2])
            v6 = 0.5;
        }
        objc_msgSend(v7, "setAlpha:", v6);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

double sub_100117238(uint64_t a1)
{
  return sub_10012D1AC(a1, (uint64_t)&unk_1010B2C18, (uint64_t)&unk_1011A2408, (uint64_t (*)(char *, uint64_t, uint64_t))sub_100166D50);
}

uint64_t sub_100117254(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_1001172C0, v4, v5);
}

uint64_t sub_1001172C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 88) = qword_10124C798;
  *(_QWORD *)(v0 + 40) = &type metadata for Player.ShuffleCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.ShuffleCommand;
  *(_BYTE *)(v0 + 16) = 0;
  v2 = dword_1011D86AC;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_100117380;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_100117380(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 96));
  if (v1)
  {
    v5 = *(void **)(v4 + 88);
    swift_errorRelease(v1);

    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(_QWORD *)(v4 + 80);
    v8 = sub_10013C904;
  }
  else
  {

    *(_QWORD *)(v4 + 104) = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v4 + 16));
    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(_QWORD *)(v4 + 80);
    v8 = sub_10013C900;
  }
  return swift_task_switch(v8, v6, v7);
}

double sub_100117414(uint64_t a1)
{
  return sub_10012D1AC(a1, (uint64_t)&unk_1010B2BF0, (uint64_t)&unk_1011A23F8, (uint64_t (*)(char *, uint64_t, uint64_t))sub_100166D50);
}

uint64_t sub_100117430(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_10011749C, v4, v5);
}

uint64_t sub_10011749C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 88) = qword_10124C798;
  *(_QWORD *)(v0 + 40) = &type metadata for Player.RepeatCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.RepeatCommand;
  *(_BYTE *)(v0 + 16) = 0;
  v2 = dword_1011D86AC;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_10011755C;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_10011755C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 96));
  if (v1)
  {
    v5 = *(void **)(v4 + 88);
    swift_errorRelease(v1);

    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(_QWORD *)(v4 + 80);
    v8 = sub_10011762C;
  }
  else
  {

    *(_QWORD *)(v4 + 104) = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v4 + 16));
    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(_QWORD *)(v4 + 80);
    v8 = sub_1001175F0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1001175F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011762C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  **(_QWORD **)(v0 + 56) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100117670(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *);
  char *v20;
  _QWORD *v21;
  void (*v22)(void);
  char *v23;
  char *v24;
  uint64_t v25;
  char v26[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = *a3;
    v11 = *(void **)(Strong + *a3);
    if (v11)
    {
      if ((objc_msgSend(v11, "isHolding") & 1) != 0)
      {
LABEL_12:

        return;
      }
      v12 = &v9[*a4];
      v13 = *((_QWORD *)v12 + 2);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 16);
        swift_bridgeObjectRetain(*((_QWORD *)v12 + 2));
        if (v14 && (v15 = sub_10079C718(0), (v16 & 1) != 0))
        {
          v17 = *(_QWORD *)(v13 + 56) + 16 * v15;
          v19 = *(void (**)(uint64_t *))v17;
          v18 = *(_QWORD *)(v17 + 8);
          swift_retain(v18);
          swift_bridgeObjectRelease(v13);
          v25 = a1;
          v19(&v25);
          swift_release(v18);
        }
        else
        {
          swift_bridgeObjectRelease(v13);
        }
      }
      v20 = *(char **)&v9[v10];
      if (v20)
      {
        v21 = *(_QWORD **)&v20[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
        if (v21)
        {
          v22 = *(void (**)(void))((swift_isaMask & *v21) + 0x110);
          v23 = v20;
          v24 = v21;
          v22();

          v9 = v24;
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1001177B8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *);
  char *v18;
  _QWORD *v19;
  void (*v20)(double);
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  char v24[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = Strong + *a3;
    v11 = *(_QWORD *)(v10 + 16);
    if (!v11)
    {
LABEL_8:

      return;
    }
    v12 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain(*(_QWORD *)(v10 + 16));
    if (v12 && (v13 = sub_10079C718(1), (v14 & 1) != 0))
    {
      v15 = *(_QWORD *)(v11 + 56) + 16 * v13;
      v17 = *(void (**)(uint64_t *))v15;
      v16 = *(_QWORD *)(v15 + 8);
      swift_retain(v16);
      swift_bridgeObjectRelease(v11);
      v23 = a1;
      v17(&v23);
      swift_release(v16);
      v18 = *(char **)&v9[*a4];
      if (v18)
      {
        v19 = *(_QWORD **)&v18[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
        if (v19)
        {
          v20 = *(void (**)(double))((swift_isaMask & *v19) + 0x130);
          v21 = v18;
          v22 = v19;
          v20(0.5);

          return;
        }
        goto LABEL_8;
      }
      __break(1u);
    }
    else
    {

      swift_bridgeObjectRelease(v11);
    }
  }
}

void sub_1001178F0(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *);
  char *v18;
  _QWORD *v19;
  void (*v20)(void);
  char *v21;
  char *v22;
  uint64_t v23;
  char v24[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = Strong + *a3;
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRetain(*(_QWORD *)(v10 + 16));
      if (v12 && (v13 = sub_10079C718(2), (v14 & 1) != 0))
      {
        v15 = *(_QWORD *)(v11 + 56) + 16 * v13;
        v17 = *(void (**)(uint64_t *))v15;
        v16 = *(_QWORD *)(v15 + 8);
        swift_retain(v16);
        swift_bridgeObjectRelease(v11);
        v23 = a1;
        v17(&v23);
        swift_release(v16);
      }
      else
      {
        swift_bridgeObjectRelease(v11);
      }
    }
    v18 = *(char **)&v9[*a4];
    if (v18)
    {
      v19 = *(_QWORD **)&v18[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
      if (v19)
      {
        v20 = *(void (**)(void))((swift_isaMask & *v19) + 0x138);
        v21 = v18;
        v22 = v19;
        v20();

        v9 = v22;
      }

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100117A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *);
  uint64_t v12;
  _BYTE v13[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButtonConfiguration + 16);
    swift_bridgeObjectRetain(v6);

    if (v6)
    {
      if (*(_QWORD *)(v6 + 16) && (v7 = sub_10079C718(0), (v8 & 1) != 0))
      {
        v9 = *(_QWORD *)(v6 + 56) + 16 * v7;
        v11 = *(void (**)(uint64_t *))v9;
        v10 = *(_QWORD *)(v9 + 8);
        swift_retain(v10);
        swift_bridgeObjectRelease(v6);
        v12 = a1;
        v11(&v12);
        swift_release(v10);
      }
      else
      {
        swift_bridgeObjectRelease(v6);
      }
    }
  }
}

void sub_100117AE4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  double v21;
  id v22;
  _BYTE v23[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = sub_10012CEA0();
    v7 = objc_msgSend(a1, "accessoryImageView");
    objc_msgSend(v6, "setSourceView:", v7);

    v8 = sub_10012CEA0();
    v9 = objc_msgSend(v8, "configuration");

    v10 = *(id *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
    v11 = objc_msgSend(a1, "accessoryImageView");
    v12 = sub_100465BD0(v11, 1);
    v14 = v13;
    v16 = v15;
    v18 = v17;

    objc_msgSend(v9, "setSourceRect:", v12, v14, v16, v18);
    v19 = sub_10012CEA0();
    v20 = v19;
    v21 = *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 24];
    if (v21 <= *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 40])
      v21 = *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 40];
    objc_msgSend(v19, "setPreferredWidth:", v21);

    v22 = sub_10012CEA0();
    objc_msgSend(v22, "startPrewarming");

  }
}

void sub_100117C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10012CEA0();

    objc_msgSend(v5, "stopPrewarming");
  }
}

void sub_100117CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  char v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = sub_10012CEA0();
    objc_msgSend(v5, "present");

    v4[OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingRoutePicker] = 1;
    v6 = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate]);
    if (v6)
    {
      v7 = v6;
      v8 = OBJC_IVAR____TtC5Music24NowPlayingViewController_lyricsFullScreenTimer;
      v9 = *(void **)(v6 + OBJC_IVAR____TtC5Music24NowPlayingViewController_lyricsFullScreenTimer);
      if (v9)
      {
        objc_msgSend(v9, "invalidate");
        v10 = *(_BYTE **)(v7 + v8);
      }
      else
      {
        v10 = 0;
      }
      *(_QWORD *)(v7 + v8) = 0;

      swift_unknownObjectRelease(v7);
      v4 = v10;
    }

  }
}

void sub_100117DBC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_100117E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingRoutePicker) = 0;
    if ((*(_BYTE *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_needsSharePlayTogetherTooltipPresentation) & 1) != 0)
    {
      *(_BYTE *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_needsSharePlayTogetherTooltipPresentation) = 0;
      sub_10013008C();
    }
    v4 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate]);
    if (v4)
    {
      v5 = v4;
      sub_1005D3D18(4.0);
      swift_unknownObjectRelease(v5);
    }

  }
}

void sub_100117EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
    if (v6)
      swift_unknownObjectRelease(v6);
    v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton;
    v8 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "setSelected:", objc_msgSend(v9, "isSelected") ^ 1);

      v10 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
      if (v10)
      {
        objc_msgSend(v10, "setSelected:", 0);
        v11 = *(void **)&v4[v7];
        if (v11)
        {
          v12 = objc_msgSend(v11, "isSelected");
          v13 = swift_unknownObjectWeakLoadStrong(v5);
          v14 = v13;
          if (v12)
          {
            if (v13)
            {
              sub_1005EFF38();
LABEL_12:
              swift_unknownObjectRelease(v14);
            }
          }
          else if (v13)
          {
            sub_1005F03B4();
            goto LABEL_12;
          }
          sub_100133030();
          sub_1001322B4();
          sub_1001329AC();

          return;
        }
LABEL_17:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_100117FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
    if (v6)
      swift_unknownObjectRelease(v6);
    v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton;
    v8 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "setSelected:", objc_msgSend(v9, "isSelected") ^ 1);

      v10 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
      if (v10)
      {
        objc_msgSend(v10, "setSelected:", 0);
        v11 = *(void **)&v4[v7];
        if (v11)
        {
          v12 = objc_msgSend(v11, "isSelected");
          v13 = swift_unknownObjectWeakLoadStrong(v5);
          v14 = v13;
          if (v12)
          {
            if (v13)
            {
              sub_1005F0A34();
LABEL_12:
              swift_unknownObjectRelease(v14);
            }
          }
          else if (v13)
          {
            sub_1005F14CC();
            goto LABEL_12;
          }
          sub_1001322B4();
          sub_1001329AC();
          sub_100133030();

          return;
        }
LABEL_17:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_100118104(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if ((char *)objc_msgSend(a2, "orientation") - 1 <= (char *)3
      && sub_10013C4F8((uint64_t)objc_msgSend(a2, "orientation"))
      && !*(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput])
    {
      v6 = *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
      if (v6)
      {
        if (*(_QWORD *)(v6 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext))
        {
          v7 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton];
          if (!v7)
          {
            __break(1u);
            return;
          }
          v8 = objc_msgSend(v7, "contextMenuInteraction");
          objc_msgSend(v8, "dismissMenu");

          sub_100131050();
        }
      }
    }

  }
}

void sub_100118204(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  void *v53;
  _QWORD *v54;
  char *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  unsigned __int8 v88;
  id v89;
  id v90;
  id v91;
  void (*v92)(_QWORD *);
  id v93;
  id v94;
  void *v95;
  _QWORD *v96;
  id v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  id v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  void *v129;
  _QWORD *v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  void (*v135)(_QWORD *);
  id v136;
  id v137;
  void *v138;
  _QWORD *v139;
  id v140;
  id v141;
  id v142;
  void (*v143)(_QWORD *);
  id v144;
  id v145;
  void *v146;
  _QWORD *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  id v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  CGAffineTransform v215;
  char v216[24];
  char v217[24];
  _QWORD v218[10];
  _BYTE v219[80];
  _QWORD v220[10];
  _BYTE v221[80];
  _QWORD v222[10];
  _BYTE v223[80];
  _QWORD v224[10];
  _BYTE v225[80];
  _QWORD v226[10];
  _QWORD v227[10];
  _QWORD v228[11];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v217, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController);
    v4 = v3[2];
    v5 = v3[3];
    v7 = v3[4];
    v6 = v3[5];
    v8 = v3[6];
    v9 = v3[7];
    v10 = v3[8];
    v11 = v3[9];
    v209 = v1;
    v12 = v3[10];
    v13 = (char *)Strong;
    v14 = sub_100007E8C(&qword_1011A23E0);
    v15 = swift_allocObject(v14, 176, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100EA7AC0;
    v166 = v5;
    v167 = v4;
    *(_QWORD *)(v15 + 32) = v4;
    v164 = v15 + 32;
    *(_QWORD *)(v15 + 40) = v5;
    *(_QWORD *)(v15 + 48) = v7;
    v16 = *(void **)&v13[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
    *(_QWORD *)(v15 + 56) = v16;
    *(_QWORD *)(v15 + 64) = -1;
    *(_BYTE *)(v15 + 72) = 1;
    v169 = v8;
    v170 = v6;
    *(_QWORD *)(v15 + 80) = v6;
    *(_QWORD *)(v15 + 88) = v8;
    *(_QWORD *)(v15 + 96) = v9;
    v17 = *(void **)&v13[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
    *(_QWORD *)(v15 + 104) = v17;
    *(_QWORD *)(v15 + 112) = 0;
    *(_BYTE *)(v15 + 120) = 2;
    v172 = v11;
    v173 = v10;
    *(_QWORD *)(v15 + 128) = v10;
    *(_QWORD *)(v15 + 136) = v11;
    *(_QWORD *)(v15 + 144) = v12;
    v174 = v13;
    v18 = *(void **)&v13[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
    *(_QWORD *)(v15 + 152) = v18;
    *(_QWORD *)(v15 + 160) = 1;
    v212 = v15;
    *(_BYTE *)(v15 + 168) = 1;
    v19 = v18;
    v165 = v7;
    swift_bridgeObjectRetain_n(v7, 2);
    v168 = v9;
    swift_bridgeObjectRetain_n(v9, 2);
    v171 = v12;
    swift_bridgeObjectRetain_n(v12, 2);
    v20 = v16;
    v21 = v17;
    swift_beginAccess(v209, v216, 0, 0);
    v22 = 0;
    while (1)
    {
      v25 = v212 + v22;
      v26 = *(char **)(v212 + v22 + 56);
      if (!v26)
        goto LABEL_6;
      v213 = v22;
      v214 = *(char **)(v212 + v22 + 56);
      if (!*(_QWORD *)(v25 + 48))
      {
        v192 = *(_QWORD *)(v25 + 64);
        v211 = *(_BYTE *)(v25 + 72);
        v31 = &v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
        v32 = *(void **)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 16];
        v197 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 8];
        v203 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
        v33 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 24];
        v34 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 32];
        v35 = v26;
        v36 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 40];
        v37 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 48];
        v38 = *((_QWORD *)v31 + 7);
        v39 = *((_QWORD *)v31 + 8);
        v40 = *((_QWORD *)v31 + 9);
        *(_OWORD *)v31 = 0u;
        *((_OWORD *)v31 + 1) = 0u;
        *((_OWORD *)v31 + 2) = 0u;
        *((_OWORD *)v31 + 3) = 0u;
        *((_OWORD *)v31 + 4) = 0u;
        v41 = v35;
        sub_10013C57C(v203, v197, v32, v33, v34, v36, v37, v38, v39, v40);
        v42 = *((_QWORD *)v31 + 1);
        if (v42)
        {
          v43 = (void *)*((_QWORD *)v31 + 2);
          v44 = *((_QWORD *)v31 + 4);
          v45 = *((_QWORD *)v31 + 5);
          v46 = *((_QWORD *)v31 + 6);
          v47 = *((_QWORD *)v31 + 7);
          v49 = *((_QWORD *)v31 + 8);
          v48 = *((_QWORD *)v31 + 9);
          v198 = *((_QWORD *)v31 + 3);
          v204 = *(_QWORD *)v31;
          v228[0] = *(_QWORD *)v31;
          v228[1] = v42;
          v228[2] = v43;
          v228[3] = v198;
          v185 = v45;
          v188 = v44;
          v228[4] = v44;
          v228[5] = v45;
          v179 = v47;
          v182 = v46;
          v228[6] = v46;
          v228[7] = v47;
          v228[8] = v49;
          v228[9] = v48;
          swift_bridgeObjectRetain();
          v50 = v43;
          swift_bridgeObjectRetain();
          objc_msgSend(v41, "setImage:forState:", 0, 0);
          v51 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView;
          v52 = v41;
          v53 = *(void **)&v41[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
          if (v53)
          {
            v54 = *(_QWORD **)&v41[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
          }
          else
          {
            v89 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
            swift_bridgeObjectRetain();
            v90 = v50;
            swift_bridgeObjectRetain();
            v91 = CoreAnimationPackageView.init(definition:)((uint64_t)v228);
            v54 = UIView.forAutolayout.getter();

            v53 = 0;
          }
          v92 = *(void (**)(_QWORD *))((swift_isaMask & *v54) + 0xA0);
          sub_10013C5B4(v204, v42, v43, v198, v188, v185, v182, v179, v49, v48);
          v93 = v53;
          v92(v228);
          v94 = objc_msgSend(v52, "tintColor");
          (*(void (**)(id))((swift_isaMask & *v54) + 0xD8))(v94);
          if (objc_msgSend(v52, "isHighlighted"))
          {
            CGAffineTransformMakeScale(&v215, 0.8, 0.8);
          }
          else
          {
            v215.b = 0.0;
            v215.c = 0.0;
            v215.a = 1.0;
            v215.d = 1.0;
            v215.tx = 0.0;
            v215.ty = 0.0;
          }
          objc_msgSend(v54, "setTransform:", &v215);
          v22 = v213;
          v82 = v192;
          v95 = *(void **)&v52[v51];
          *(_QWORD *)&v52[v51] = v54;
          v96 = v54;
          sub_1003B3C84(v95);

          sub_10013C57C(v204, v42, v43, v198, v188, v185, v182, v179, v49, v48);
        }
        else
        {
          v81 = *(void **)&v41[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
          *(_QWORD *)&v41[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
          sub_1003B3C84(v81);

          v22 = v213;
          v82 = v192;
          v52 = v41;
        }
        v97 = sub_100914010(1, 0, v82, v211);
        objc_msgSend(v52, "setImage:forState:", v97, 0);

        objc_msgSend(v52, "setEnabled:", 0);
        v85 = v209;
        v86 = v214;
        goto LABEL_52;
      }
      v27 = *(_QWORD *)(v25 + 32);
      v28 = *(_QWORD *)(v25 + 40);
      v210 = *(_QWORD *)(v25 + 48);
      if ((_BYTE)v28)
      {
        if (v28 != 1)
        {
          if (v27)
          {
            if (v27 == 1)
            {
              v79 = v26;
              swift_bridgeObjectRetain();
              static CAPackageDefinition.pause.getter(v220);
              v30 = v221;
              CAPackageDefinition.scaled(byX:y:)((uint64_t)v221, 0.92, 0.92);
              v80 = v220;
            }
            else
            {
              v100 = v26;
              swift_bridgeObjectRetain();
              static CAPackageDefinition.stop.getter(v222);
              v30 = v223;
              CAPackageDefinition.scaled(byX:y:)((uint64_t)v223, 0.92, 0.92);
              v80 = v222;
            }
          }
          else
          {
            v99 = v26;
            swift_bridgeObjectRetain();
            static CAPackageDefinition.play.getter(v218);
            v30 = v219;
            CAPackageDefinition.scaled(byX:y:)((uint64_t)v219, 0.92, 0.92);
            v80 = v218;
          }
          sub_10013C5EC(v80);
LABEL_35:
          v101 = *((_QWORD *)v30 + 9);
          v102 = *(_OWORD *)(v30 + 24);
          v103 = *(_OWORD *)(v30 + 40);
          v104 = *((_QWORD *)v30 + 7);
          v105 = *((_QWORD *)v30 + 8);
          v106 = *((_QWORD *)v30 + 1);
          v107 = (void *)*((_QWORD *)v30 + 2);
          v108 = *(_QWORD *)v30;
          v109 = (uint64_t *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
          v201 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 8];
          v207 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
          v110 = *(void **)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 16];
          v111 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 24];
          v112 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 32];
          v113 = v109[5];
          v114 = v109[6];
          v190 = v109[7];
          v195 = v110;
          v115 = v109[8];
          v116 = v109[9];
          *v109 = v108;
          v109[1] = v106;
          v109[2] = (uint64_t)v107;
          *(_OWORD *)(v109 + 3) = v102;
          *(_OWORD *)(v109 + 5) = v103;
          v109[7] = v104;
          v109[8] = v105;
          v109[9] = v101;
          swift_bridgeObjectRetain_n(v106, 2);
          v117 = v107;
          swift_bridgeObjectRetain_n(v101, 2);
          v118 = v117;
          sub_10013C57C(v207, v201, v195, v111, v112, v113, v114, v190, v115, v116);
          v119 = v109[1];
          if (v119)
          {
            v177 = v118;
            v181 = v106;
            v120 = (void *)v109[2];
            v121 = v109[4];
            v122 = v109[5];
            v123 = v109[6];
            v124 = v109[7];
            v126 = v109[8];
            v125 = v109[9];
            v202 = v109[3];
            v208 = *v109;
            v226[0] = *v109;
            v226[1] = v119;
            v226[2] = v120;
            v226[3] = v202;
            v191 = v122;
            v196 = v121;
            v226[4] = v121;
            v226[5] = v122;
            v184 = v124;
            v187 = v123;
            v226[6] = v123;
            v226[7] = v124;
            v226[8] = v126;
            v226[9] = v125;
            swift_bridgeObjectRetain();
            v127 = v120;
            swift_bridgeObjectRetain();
            objc_msgSend(v214, "setImage:forState:", 0, 0);
            v128 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView;
            v86 = v214;
            v129 = *(void **)&v214[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
            if (v129)
            {
              v130 = *(_QWORD **)&v214[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
            }
            else
            {
              v132 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
              swift_bridgeObjectRetain();
              v133 = v127;
              swift_bridgeObjectRetain();
              v134 = CoreAnimationPackageView.init(definition:)((uint64_t)v226);
              v130 = UIView.forAutolayout.getter();

              v129 = 0;
            }
            v135 = *(void (**)(_QWORD *))((swift_isaMask & *v130) + 0xA0);
            sub_10013C5B4(v208, v119, v120, v202, v196, v191, v187, v184, v126, v125);
            v136 = v129;
            v135(v226);
            v137 = objc_msgSend(v214, "tintColor");
            (*(void (**)(id))((swift_isaMask & *v130) + 0xD8))(v137);
            if (objc_msgSend(v214, "isHighlighted"))
            {
              CGAffineTransformMakeScale(&v215, 0.8, 0.8);
            }
            else
            {
              v215.b = 0.0;
              v215.c = 0.0;
              v215.a = 1.0;
              v215.d = 1.0;
              v215.tx = 0.0;
              v215.ty = 0.0;
            }
            objc_msgSend(v130, "setTransform:", &v215);
            v22 = v213;
            v138 = *(void **)&v214[v128];
            *(_QWORD *)&v214[v128] = v130;
            v139 = v130;
            sub_1003B3C84(v138);

            sub_10013C57C(v208, v119, v120, v202, v196, v191, v187, v184, v126, v125);
            swift_bridgeObjectRelease_n(v101, 2);

            swift_bridgeObjectRelease_n(v181, 2);
            v85 = v209;
          }
          else
          {
            v86 = v214;
            v131 = *(void **)&v214[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
            *(_QWORD *)&v214[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
            sub_1003B3C84(v131);
            swift_bridgeObjectRelease_n(v101, 2);

            swift_bridgeObjectRelease_n(v106, 2);
            v85 = v209;
            v22 = v213;
          }
          v84 = v210;
          goto LABEL_51;
        }
        if (v27 == -1)
        {
          v98 = v26;
          swift_bridgeObjectRetain();
          v30 = v225;
          static CAPackageDefinition.skipBackward.getter((uint64_t)v225);
          goto LABEL_35;
        }
        if (v27 == 1)
        {
          v29 = v26;
          swift_bridgeObjectRetain();
          v30 = v224;
          static CAPackageDefinition.skipForward.getter(v224);
          goto LABEL_35;
        }
      }
      v186 = v28;
      v189 = *(_QWORD *)(v25 + 32);
      v55 = &v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
      v56 = *(void **)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 16];
      v199 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 8];
      v205 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
      v57 = v26;
      v58 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 24];
      v59 = *((_QWORD *)v55 + 4);
      v60 = *((_QWORD *)v55 + 5);
      v193 = *((_QWORD *)v55 + 6);
      v61 = *((_QWORD *)v55 + 7);
      v62 = *((_QWORD *)v55 + 8);
      v63 = *((_QWORD *)v55 + 9);
      *(_OWORD *)v55 = 0u;
      *((_OWORD *)v55 + 1) = 0u;
      *((_OWORD *)v55 + 2) = 0u;
      *((_OWORD *)v55 + 3) = 0u;
      *((_OWORD *)v55 + 4) = 0u;
      v64 = v57;
      swift_bridgeObjectRetain();
      sub_10013C57C(v205, v199, v56, v58, v59, v60, v193, v61, v62, v63);
      v65 = *((_QWORD *)v55 + 1);
      if (v65)
      {
        v67 = (void *)*((_QWORD *)v55 + 2);
        v66 = *((_QWORD *)v55 + 3);
        v68 = *((_QWORD *)v55 + 4);
        v69 = *((_QWORD *)v55 + 5);
        v70 = *((_QWORD *)v55 + 6);
        v71 = *((_QWORD *)v55 + 7);
        v72 = *((_QWORD *)v55 + 8);
        v73 = *((_QWORD *)v55 + 9);
        v175 = *(_QWORD *)v55;
        v227[0] = *(_QWORD *)v55;
        v227[1] = v65;
        v227[2] = v67;
        v200 = v68;
        v206 = v66;
        v227[3] = v66;
        v227[4] = v68;
        v194 = v69;
        v227[5] = v69;
        v180 = v71;
        v183 = v70;
        v227[6] = v70;
        v227[7] = v71;
        v176 = v72;
        v227[8] = v72;
        v227[9] = v73;
        swift_bridgeObjectRetain();
        v178 = v67;
        v74 = v67;
        swift_bridgeObjectRetain();
        objc_msgSend(v64, "setImage:forState:", 0, 0);
        v75 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView;
        v76 = v64;
        v77 = *(void **)&v64[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
        if (v77)
        {
          v78 = *(_QWORD **)&v64[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
        }
        else
        {
          v140 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
          swift_bridgeObjectRetain();
          v141 = v74;
          swift_bridgeObjectRetain();
          v142 = CoreAnimationPackageView.init(definition:)((uint64_t)v227);
          v78 = UIView.forAutolayout.getter();

          v77 = 0;
        }
        v22 = v213;
        v143 = *(void (**)(_QWORD *))((swift_isaMask & *v78) + 0xA0);
        sub_10013C5B4(v175, v65, v178, v206, v200, v194, v183, v180, v176, v73);
        v144 = v77;
        v143(v227);
        v145 = objc_msgSend(v64, "tintColor");
        (*(void (**)(id))((swift_isaMask & *v78) + 0xD8))(v145);
        if (objc_msgSend(v64, "isHighlighted"))
        {
          CGAffineTransformMakeScale(&v215, 0.8, 0.8);
        }
        else
        {
          v215.b = 0.0;
          v215.c = 0.0;
          v215.a = 1.0;
          v215.d = 1.0;
          v215.tx = 0.0;
          v215.ty = 0.0;
        }
        objc_msgSend(v78, "setTransform:", &v215);
        v85 = v209;
        v86 = v214;
        v146 = *(void **)&v64[v75];
        *(_QWORD *)&v64[v75] = v78;
        v147 = v78;
        sub_1003B3C84(v146);

        sub_10013C57C(v175, v65, v178, v206, v200, v194, v183, v180, v176, v73);
        v84 = v210;
        v88 = v186;
        v87 = v189;
      }
      else
      {
        v83 = *(void **)&v64[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
        *(_QWORD *)&v64[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
        sub_1003B3C84(v83);

        v85 = v209;
        v84 = v210;
        v22 = v213;
        v86 = v214;
        v88 = v186;
        v87 = v189;
        v76 = v64;
      }
      v148 = sub_100914010(1, 0, v87, v88);
      objc_msgSend(v76, "setImage:forState:", v148, 0);

LABEL_51:
      v149 = *(_QWORD *)(v84 + 16);
      objc_msgSend(v86, "setEnabled:", v149 != 0, swift_bridgeObjectRelease(v84).n128_f64[0]);
      if (v149)
        goto LABEL_3;
LABEL_52:
      v150 = swift_unknownObjectWeakLoadStrong(v85);
      if (!v150)
      {
LABEL_3:
        v23 = v86;
        goto LABEL_4;
      }
      v151 = (void *)v150;
      v152 = *(void **)(v150 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
      v153 = v152;
      v154 = v86;

      if (v152)
      {
        v155 = objc_msgSend(v153, "tracklist");

        v156 = objc_msgSend(v155, "playingItem");
        if (v156)
        {
          v24 = MPCPlayerResponseItem.isLiveContent.getter();

          goto LABEL_5;
        }
      }
LABEL_4:
      v24 = 0;
LABEL_5:
      objc_msgSend(v86, "setHidden:", v24 & 1);

LABEL_6:
      v22 += 48;
      if (v22 == 144)
      {
        swift_setDeallocating(v212);
        v157 = sub_100007E8C(&qword_1011A23E8);
        swift_arrayDestroy(v164, 3, v157);
        swift_deallocClassInstance(v212, 32, 7);
        v158 = &v174[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration];
        v159 = *(_QWORD *)&v174[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration + 16];
        *(_QWORD *)v158 = v167;
        *((_QWORD *)v158 + 1) = v166;
        *((_QWORD *)v158 + 2) = v165;
        swift_bridgeObjectRelease(v159);
        v160 = &v174[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButtonConfiguration];
        v161 = *(_QWORD *)&v174[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButtonConfiguration + 16];
        *(_QWORD *)v160 = v170;
        *((_QWORD *)v160 + 1) = v169;
        *((_QWORD *)v160 + 2) = v168;
        swift_bridgeObjectRelease(v161);
        v162 = &v174[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration];
        v163 = *(_QWORD *)&v174[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration + 16];
        *(_QWORD *)v162 = v173;
        *((_QWORD *)v162 + 1) = v172;
        *((_QWORD *)v162 + 2) = v171;

        swift_bridgeObjectRelease(v163);
        return;
      }
    }
  }
}

double sub_100118FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return result;
  v6 = (void *)Strong;
  if (*(unsigned __int8 *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_mode) - 1 > 1)
  {
    v10 = *(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
    if (v10
      && *(_QWORD *)(v10 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext)
      && !*(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput))
    {
      sub_100131050();
    }
    goto LABEL_11;
  }
  v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
  if (!v7)
  {
LABEL_11:

    return result;
  }
  v8 = v7;
  v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Music24NowPlayingViewController_mode) >> 62;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
      sub_1005F03B4();
  }
  else
  {
    sub_1005F14CC();
  }

  *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  return result;
}

void sub_1001190D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  uint64_t v11;
  id v12;
  _BYTE v13[40];
  _BYTE v14[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    sub_100064C78(a1, (uint64_t)v13);
    v7 = sub_100007E8C(&qword_1011A23D8);
    v8 = sub_10004A07C(0, &qword_1011A2390, UIPinchGestureRecognizer_ptr);
    if ((swift_dynamicCast(&v12, v13, v7, v8, 6) & 1) != 0)
    {
      v9 = v12;
      objc_msgSend(v12, "scale");
      if (v10 > 1.0)
      {
        v11 = *(_QWORD *)&v6[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
        if (v11)
        {
          if (*(_QWORD *)(v11 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext))
          {
            if (!*(_QWORD *)&v6[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput])
              sub_100131050();
          }
        }
      }

    }
    else
    {

    }
  }
}

void sub_1001191D8(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath);
    *(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath) = v2;
    v7 = v2;

    sub_1001312F8();
  }
}

void sub_100119258(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession);
    *(_QWORD *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession) = v2;
    v7 = v2;
    sub_10012F9C0(v6);

  }
}

void sub_1001192DC(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  char *v11;
  char *v12;
  char *v13;
  char v14[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (!v2)
      goto LABEL_14;
    v6 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
    v7 = objc_msgSend(v6, "activeUserState");

    if (!v7)
      goto LABEL_9;
    v8 = objc_msgSend(v7, "music");

    if (v8
      && (v9 = objc_msgSend(v8, "userProfile"), v8, v9)
      && (v10 = objc_msgSend(v9, "displayNameAccepted"), v9, (v10 & 1) != 0))
    {
LABEL_14:
      if (*(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession])
      {
LABEL_11:

        return;
      }
      v11 = *(char **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
      v12 = &v11[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style];
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style] = 0;
    }
    else
    {
LABEL_9:
      v11 = *(char **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
      v12 = &v11[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style];
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style] = 1;
    }
    v12[8] = 1;
    v13 = v11;
    sub_1004653EC();

    goto LABEL_11;
  }
}

void sub_100119450(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    a2();

  }
}

void sub_1001194A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1001195D8();

  }
}

void sub_1001194F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _BYTE *v3;
  uint64_t v4;
  id v5;
  unsigned int v6;
  char v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_BYTE *)Strong;
    v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState;
    if (*(_BYTE *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState))
    {
      v5 = objc_msgSend((id)objc_opt_self(AXSettings), "sharedInstance");
      v6 = objc_msgSend(v5, "hapticMusicActive");

      if (v6)
        v7 = 1;
      else
        v7 = 2;
      v3[v4] = v7;
    }
    sub_1001195D8();

  }
}

void sub_1001195D8()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v1 = sub_10013C044();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Accessibility, v1) & 1) != 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager);
    v3 = objc_msgSend(v2, "musicHapticsEnabled");
    v5 = OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken;
    v6 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken);
    if (v3)
    {
      if (!v6)
      {
        objc_msgSend(v2, "setTreatCodesAsAdamIDs:", 1);
        v7 = swift_allocObject(&unk_1010B19B8, 24, 7);
        swift_unknownObjectWeakInit(v7 + 16, v0);
        v14[4] = sub_10013C088;
        v15 = v7;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        v14[2] = sub_1001197F4;
        v14[3] = &unk_1010B27D0;
        v8 = _Block_copy(v14);
        v9 = objc_msgSend(v2, "addStatusObserver:", v8, swift_release(v15).n128_f64[0]);
        _Block_release(v8);
        v10 = *(_QWORD *)(v0 + v5);
        *(_QWORD *)(v0 + v5) = v9;
LABEL_9:
        swift_unknownObjectRelease(v10);
        goto LABEL_10;
      }
    }
    else if (!v6)
    {
LABEL_10:
      sub_10011C9E8();
      return;
    }
    swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken), v4);
    if ((objc_msgSend(v2, "musicHapticsEnabled") & 1) == 0)
    {
      objc_msgSend(v2, "removeStatusObserver:", v6);
      v11 = *(_QWORD *)(v0 + v5);
      *(_QWORD *)(v0 + v5) = 0;
      swift_unknownObjectRelease(v11);
      *(_BYTE *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState) = 3;
      v12 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
      v13 = v12;
      sub_10010E900((char *)v12);

    }
    v10 = v6;
    goto LABEL_9;
  }
}

void sub_100119780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v4 = a4 + 16;
  swift_beginAccess(a4 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
    v8 = v7;
    sub_10010E900((char *)v7);

  }
}

uint64_t sub_1001197F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  swift_retain(v4);
  v5(v6, v8, a3);
  swift_release(v4);
  return swift_bridgeObjectRelease(v8);
}

void sub_100119858(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "presentedViewController");

  if (!v3)
    sub_1002569C4();
  v4 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v1, "presentingViewController");
    v7 = v6;
    if (v6)

    objc_msgSend(v5, "setHidden:", v7 == 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_10011995C(char a1)
{
  char *v1;
  void *v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v5, "viewDidAppear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (v3)
  {
    objc_msgSend(v3, "setMarqueeEnabled:withOptions:", 1, 0);
    v4 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
    if (v4)
    {
      objc_msgSend(v4, "setMarqueeEnabled:withOptions:", 1, 0);
      sub_10011A5E4();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_100119A2C(char a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  double result;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v7, "viewWillDisappear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction];
  if (v3)
  {
    v4 = v3;
    dispatch thunk of ReactionEffectInteraction.clearReactions()();

  }
  if (qword_10119C288 != -1)
    swift_once(&qword_10119C288, sub_100594184);
  v5 = qword_1011BB650;
  swift_retain(qword_1011BB650);
  sub_100595160(1, 0);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_100119B18(char a1)
{
  char *v1;
  id v3;
  double v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1 & 1);
  v3 = objc_msgSend(v1, "presentedViewController");

  if (!v3)
  {
    if (qword_10119B8A0 != -1)
      swift_once(&qword_10119B8A0, sub_1000E7994);
    v4 = sub_10067B994(v1, qword_10124C780);
  }
  if (*(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken])
    objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager], "removeStatusObserver:", v4);
}

void sub_100119C1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  double *v33;
  __int128 v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  __int128 v73;
  __int128 v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  objc_super v81;

  v1 = v0;
  v81.receiver = v0;
  v81.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v81, "viewDidLayoutSubviews");
  v2 = OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide;
  v3 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide];
  if (!v3)
  {
    __break(1u);
    goto LABEL_28;
  }
  type metadata accessor for CGRect(0);
  v5 = v4;
  objc_msgSend(v3, "layoutFrame");
  v76 = v6;
  v77 = v7;
  v78 = v8;
  v79 = v9;
  v10 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousContentLayoutGuideFrame];
  v11 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousContentLayoutGuideFrame + 16];
  v73 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousContentLayoutGuideFrame];
  v74 = v11;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v76, &v73, v5) & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate]);
    if (Strong)
    {
      v13 = *(void **)&v1[v2];
      if (!v13)
      {
LABEL_31:
        __break(1u);
        return;
      }
      v14 = Strong;
      v15 = v13;
      sub_1005E9A4C(v1, v15);
      swift_unknownObjectRelease(v14);

    }
    v16 = *(void **)&v1[v2];
    if (!v16)
      goto LABEL_29;
    objc_msgSend(v16, "layoutFrame");
    *(_QWORD *)v10 = v17;
    *((_QWORD *)v10 + 1) = v18;
    *((_QWORD *)v10 + 2) = v19;
    *((_QWORD *)v10 + 3) = v20;
  }
  v21 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView;
  v22 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
  if (v22)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView], "frame");
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v28 = 0;
    v30 = 0;
  }
  v31 = v22 == 0;
  v32 = sub_100007E8C(&qword_1011A22F0);
  v76 = v24;
  v77 = v26;
  v78 = v28;
  v79 = v30;
  v80 = v31;
  v33 = (double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousArtworkFrame];
  v34 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousArtworkFrame + 16];
  v73 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousArtworkFrame];
  v74 = v34;
  v75 = 0;
  sub_10013C274();
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v76, &v73, v32) & 1) != 0)
  {
    v35 = *(void **)&v1[v21];
    if (v35)
    {
      objc_msgSend(v35, "frame");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;
    }
    else
    {
      v41 = 0.0;
      v43 = 0.0;
      v37 = 0.0;
      v39 = 0.0;
    }
    v44 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate]);
    if (v44)
    {
      v45 = v44;
      sub_1005E9E44(v1, v37, v39, v41, v43);
      swift_unknownObjectRelease(v45);
    }
    *v33 = v37;
    v33[1] = v39;
    v33[2] = v41;
    v33[3] = v43;
  }
  v46 = objc_msgSend(v1, "view");
  if (!v46)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v47 = v46;
  objc_msgSend(v46, "bounds");
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;

  v76 = v49;
  v77 = v51;
  v78 = v53;
  v79 = v55;
  v56 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousBounds];
  v57 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousBounds + 16];
  v73 = *(_OWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousBounds];
  v74 = v57;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v76, &v73, v5) & 1) == 0)
    return;
  v58 = objc_msgSend(v1, "view");
  if (!v58)
    goto LABEL_30;
  v59 = v58;
  objc_msgSend(v58, "bounds");
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;

  *(_QWORD *)v56 = v61;
  *((_QWORD *)v56 + 1) = v63;
  *((_QWORD *)v56 + 2) = v65;
  *((_QWORD *)v56 + 3) = v67;
  if (qword_10119C358 != -1)
    swift_once(&qword_10119C358, sub_1005EC118);
  v68 = type metadata accessor for Logger(0);
  v69 = sub_100048B14(v68, (uint64_t)qword_10124D428);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v72 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "[NowPlayingControlsViewController] bounds changed, updating metrics", v72, 2u);
    swift_slowDealloc(v72, -1, -1);
  }

  sub_10012E6BC();
}

void sub_10011A00C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  unsigned __int8 v29;
  objc_super v30;

  v2 = v1;
  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for NowPlayingControlsViewController();
  objc_msgSendSuper2(&v30, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = v4;
  if (a1)
  {
    if (v4)
    {
      sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
      v6 = a1;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
        return;
    }
  }
  else
  {
    if (!v4)
      return;

  }
  v8 = objc_msgSend(v2, "traitCollection");
  if (a1)
    v9 = objc_msgSend(a1, "layoutDirection");
  else
    v9 = 0;
  v10 = objc_msgSend(v8, "layoutDirection");
  if (a1 && v9 == v10 || (sub_100132764(), a1))
  {
    v11 = sub_10013B23C();
    v12 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v11) & 1;
  }
  else
  {
    v12 = 2;
  }
  v13 = sub_10013B23C();
  v14 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v13);
  if (v12 != 2 && (((v12 != 0) ^ v14) & 1) == 0)
  {
    if (a1)
    {
      v15 = sub_10013B424();
      v16 = sub_10013B468();
      UITraitCollection.subscript.getter(&v29, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v15, v16);
      v17 = v29;
    }
    else
    {
      v17 = 3;
    }
    v18 = sub_10013B424();
    v19 = sub_10013B468();
    UITraitCollection.subscript.getter(&v29, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v18, v19);
    __asm { BR              X11 }
  }
  v20 = objc_msgSend(v2, "traitCollection");
  v21 = sub_10013B424();
  v22 = sub_10013B468();
  UITraitCollection.subscript.getter(&v29, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v21, v22);

  v23 = *((_BYTE *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType);
  *((_BYTE *)v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType) = v29;
  sub_10012C768(v23);
  sub_1001322B4();
  sub_100134E20();
  if (qword_10119C358 != -1)
    swift_once(&qword_10119C358, sub_1005EC118);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100048B14(v24, (uint64_t)qword_10124D428);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[NowPlayingControlsViewController] trait collection changed, updating metrics", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  sub_10012E6BC();
}

void sub_10011A594(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView) = a1;

}

void *sub_10011A5A8()
{
  uint64_t v0;
  void *result;

  v0 = type metadata accessor for LifecyclePatrol();
  swift_allocObject(v0, 24, 7);
  result = (void *)LifecyclePatrol.init()();
  off_1011A19F0 = result;
  return result;
}

void sub_10011A5E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_didAnimateReactionOnce) & 1) == 0)
  {
    v5 = sub_10012D4A8();
    if (v5)
    {
      v16 = v5;
      objc_opt_self(MPModelPlaylist);
      if (swift_dynamicCastObjCClass(v16) && MPModelPlaylist.hasJoinedCollaboration.getter() && (sub_10012D73C(), v6))
      {
        v7 = v6;
        v8 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
        type metadata accessor for MainActor(0);
        v9 = v7;
        v10 = v1;
        v12 = static MainActor.shared.getter(v11);
        v13 = (_QWORD *)swift_allocObject(&unk_1010B2790, 48, 7);
        v13[2] = v12;
        v13[3] = &protocol witness table for MainActor;
        v13[4] = v9;
        v13[5] = v10;
        v14 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011A22B8, (uint64_t)v13);

        swift_release(v14);
      }
      else
      {

      }
    }
  }
}

uint64_t sub_10011A760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  _QWORD *v8;

  v5[2] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[4] = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1011A614C);
  v5[6] = v8;
  *v8 = v5;
  v8[1] = sub_10011A7EC;
  return sub_1001DBE44();
}

uint64_t sub_10011A7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10011A864, v4, v5);
}

uint64_t sub_10011A864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  BOOL v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  id *v14;
  _QWORD *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 40));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = (unint64_t)v3 >> 62;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v13 = *(_QWORD *)(v0 + 56);
      else
        v13 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRetain();
      v40 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v3);
      if ((v40 & 0x8000000000000000) == 0)
        goto LABEL_40;
      __break(1u);
      goto LABEL_39;
    }
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
      v5 = 3;
    else
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (i = *(_QWORD *)(v0 + 56); ; i = *(_QWORD *)(v0 + 56))
    {
      if (v5)
        v7 = (i & 0xC000000000000001) == 0;
      else
        v7 = 1;
      if (!v7)
      {
        sub_10004A07C(0, &qword_1011A22C0, MPModelPlaylistEntryReaction_ptr);
        v8 = 0;
        do
        {
          v9 = v8 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v8);
          v8 = v9;
        }
        while (v5 != v9);
        i = *(_QWORD *)(v0 + 56);
      }
      if (v4)
      {
        v25 = i & 0xFFFFFFFFFFFFFF8;
        if (v3 < 0)
          v26 = v3;
        else
          v26 = v25;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.subscript.getter(0, v5, v26);
        v4 = v27;
        v10 = v28;
        v30 = v29;
        swift_bridgeObjectRelease_n(v3, 2);
        v5 = v30 >> 1;
        v13 = v5 - v10;
        v12 = v5 <= v10;
        if (v5 == v10)
        {
LABEL_30:
          v15 = _swiftEmptyArrayStorage;
          goto LABEL_32;
        }
      }
      else
      {
        v10 = 0;
        v11 = i & 0xFFFFFFFFFFFFFF8;
        v4 = (i & 0xFFFFFFFFFFFFFF8) + 32;
        v13 = v5;
        v12 = v5 <= 0;
        if (!v5)
          goto LABEL_30;
      }
      if (!v12)
        break;
LABEL_39:
      __break(1u);
LABEL_40:
      if (v5 >= 3)
        v41 = 3;
      else
        v41 = v5;
      if (v5 >= 0)
        v5 = v41;
      else
        v5 = 3;
      swift_bridgeObjectRetain();
      v42 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v3);
      if (v42 < v5)
        __break(1u);
    }
    swift_unknownObjectRetain(v11, v2);
    v14 = (id *)(v4 + 8 * v10);
    v15 = _swiftEmptyArrayStorage;
    do
    {
      v16 = *v14;
      v17 = objc_msgSend(v16, "reactionText");
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = sub_100431480(0, v15[2] + 1, 1, v15);
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
          v15 = sub_100431480((_QWORD *)(v22 > 1), v23 + 1, 1, v15);
        v15[2] = v23 + 1;
        v24 = &v15[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
      }
      else
      {

      }
      ++v14;
      --v13;
    }
    while (v13);
    swift_unknownObjectRelease(v11);
LABEL_32:
    v31 = *(_QWORD *)(v0 + 24);
    v32 = *(void **)(v0 + 16);
    swift_unknownObjectRelease(v11);
    v33 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 1, 1, v33);
    v34 = v32;
    v36 = static MainActor.shared.getter(v35);
    v37 = (_QWORD *)swift_allocObject(&unk_1010B27B8, 48, 7);
    v37[2] = v36;
    v37[3] = &protocol witness table for MainActor;
    v37[4] = v34;
    v37[5] = v15;
    v38 = sub_100166D14(v31, (uint64_t)&unk_1011A22D0, (uint64_t)v37);
    swift_release(v38);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011AB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10011AC2C, v10, v11);
}

uint64_t sub_10011AC2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  int v6;
  id v7;
  void *v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (uint64_t *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode);
  if (v3 != 3 && v3 != 0)
    goto LABEL_20;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v5 = qword_10124C790;
  swift_retain(qword_10124C790);
  v6 = GroupActivitiesManager.hasJoined.getter();
  swift_release(v5);
  v7 = sub_10012D4A8();
  if (!v7)
    goto LABEL_13;
  v8 = v7;
  objc_opt_self(MPModelPlaylist);
  if (!swift_dynamicCastObjCClass(v8))
  {

LABEL_13:
    if ((v6 & 1) == 0)
      goto LABEL_20;
    goto LABEL_14;
  }
  v9 = MPModelPlaylist.hasJoinedCollaboration.getter();

  if (((v6 | v9) & 1) == 0)
    goto LABEL_20;
LABEL_14:
  v11 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 40);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1006A14E8(v14);
  swift_bridgeObjectRelease(v13);
  v16 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v16, v12);
  v17 = swift_bridgeObjectRetain_n(v15, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v22 = *(_QWORD *)(v0 + 48);
  v21 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 40);
  if (v20)
  {
    v35 = *(_QWORD *)(v0 + 40);
    v34 = *(_QWORD *)(v0 + 56);
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v36 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = swift_bridgeObjectRetain();
    v27 = Set.description.getter(v26, &type metadata for String, &protocol witness table for String);
    v29 = v28;
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)(v0 + 16) = sub_100322200(v27, v29, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease_n(v15, 2);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Reaction] Will animate latest reactions=%s", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v34, v35);
  }
  else
  {
    swift_bridgeObjectRelease_n(v15, 2);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  v30 = *v1;
  v31 = *(void **)(*v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction);
  if (v31)
  {
    v32 = v31;
    dispatch thunk of ReactionEffectInteraction.showReactions(_:)(v15);

    v30 = *v1;
  }
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(v30 + OBJC_IVAR___MusicNowPlayingControlsViewController_didAnimateReactionOnce) = 1;
LABEL_20:
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10011AF3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v11;
  int v12;
  id v13;
  void *v14;
  _BOOL4 v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id result;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[OBJC_IVAR___MusicNowPlayingControlsViewController_mode];
  if (v9 != 3 && v9 != 0)
    goto LABEL_11;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v11 = qword_10124C790;
  swift_retain(qword_10124C790);
  v12 = GroupActivitiesManager.hasJoined.getter();
  swift_release(v11);
  v13 = sub_10012D4A8();
  if (!v13)
  {
LABEL_19:
    if ((v12 & 1) == 0)
      goto LABEL_11;
    goto LABEL_20;
  }
  v14 = v13;
  objc_opt_self(MPModelPlaylist);
  if (!swift_dynamicCastObjCClass(v14))
  {

    goto LABEL_19;
  }
  v15 = MPModelPlaylist.hasJoinedCollaboration.getter();

  if (((v12 | v15) & 1) == 0)
  {
LABEL_11:
    v16 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController];
    if (v16)
    {
      swift_retain(*(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController]);
      sub_1001DF694();
      swift_release(v16);
    }
    v17 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction];
    if (v17)
    {
      v18 = v17;
      dispatch thunk of ReactionEffectInteraction.clearReactions()();

    }
    v19 = OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton;
    result = *(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
    if (result)
    {
      objc_msgSend(result, "setAlpha:", 0.0);
      result = *(id *)&v1[v19];
      if (result)
        return objc_msgSend(result, "setHidden:", 1);
    }
    return result;
  }
LABEL_20:
  v21 = sub_10012D4A8();
  if (v21)
  {
    v22 = v21;
    objc_opt_self(MPModelPlaylist);
    v23 = swift_dynamicCastObjCClass(v22);
    if (v23)
    {
      v24 = v23;
      sub_10012D73C();
      if (v25)
      {
        v26 = v25;
        if (MPModelPlaylist.hasJoinedCollaboration.getter())
        {
          v27 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
          type metadata accessor for MainActor(0);
          v46 = v1;
          v28 = v26;
          v29 = v22;
          v31 = static MainActor.shared.getter(v30);
          v32 = (_QWORD *)swift_allocObject(&unk_1010B2740, 56, 7);
          v32[2] = v31;
          v32[3] = &protocol witness table for MainActor;
          v32[4] = v46;
          v32[5] = v28;
          v32[6] = v24;
          v33 = sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011A2288, (uint64_t)v32);

          swift_release(v33);
          goto LABEL_27;
        }

      }
    }

  }
LABEL_27:
  v34 = qword_10124C790;
  swift_retain(qword_10124C790);
  GroupActivitiesManager.sessionForReactionAssociation()();
  v36 = v35;
  swift_release(v34);
  if (v36)
  {
    v37 = Logger.groupActivities.unsafeMutableAddressor();
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v37, v2);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[Reaction] Attaching the session to the picker.", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v42 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction];
    if (v42)
    {
      v43 = v42;
      dispatch thunk of ReactionEffectInteraction.associateWithSession<A>(_:)(v36);

    }
    swift_release(v36);
  }
  v44 = OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton;
  result = *(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
  if (result)
  {
    objc_msgSend(result, "setAlpha:", 1.0);
    result = *(id *)&v1[v44];
    if (result)
      return objc_msgSend(result, "setHidden:", 0);
  }
  return result;
}

uint64_t sub_10011B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v6[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[8] = v9;
  v6[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s7ContextVMa_1(0);
  v6[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[11] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v6[12] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[13] = swift_task_alloc(v13);
  v6[14] = swift_task_alloc(v13);
  v14 = _s7ContextV6SourceOMa(0);
  v6[15] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[16] = v15;
  v6[17] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A2290);
  v6[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  v6[19] = v17;
  v6[20] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  v6[21] = v19;
  v6[22] = v20;
  return swift_task_switch(sub_10011B494, v19, v20);
}

uint64_t sub_10011B494()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  double Current;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  double v45;
  uint8_t *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void *v73;

  *(CFAbsoluteTime *)(v0 + 184) = CFAbsoluteTimeGetCurrent();
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  v1 = *(_QWORD **)(v0 + 144);
  v2 = qword_10124C870;
  KeyPath = swift_getKeyPath(&unk_100EABBE8);
  v4 = swift_getKeyPath(&unk_100EABC10);
  static Published.subscript.getter(v1, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = type metadata accessor for UserProfile(0);
  *(_QWORD *)(v0 + 192) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 200) = v6;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 144), &qword_1011A2290);
    v7 = *(_QWORD *)(v0 + 24);
    v8 = OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController;
    *(_QWORD *)(v0 + 224) = 0;
    *(_QWORD *)(v0 + 232) = v8;
    v9 = *(_QWORD *)(v7 + v8);
    *(_QWORD *)(v0 + 240) = v9;
    if (v9)
    {
      v10 = *(_QWORD *)(v0 + 32);
      v11 = dword_1011A5C14;
      swift_retain(v9);
      v12 = (_QWORD *)swift_task_alloc(v11);
      *(_QWORD *)(v0 + 248) = v12;
      *v12 = v0;
      v12[1] = sub_10011BE90;
      return sub_1001DE2E4(v10);
    }
    else
    {
      swift_release(*(_QWORD *)(v0 + 160));
      v15 = *(_QWORD *)(v0 + 232);
      v16 = *(_OWORD **)(v0 + 136);
      v17 = *(_QWORD *)(v0 + 120);
      v18 = *(_QWORD *)(v0 + 24);
      *v16 = *(_OWORD *)(v0 + 32);
      swift_storeEnumTagMultiPayload(v16, v17, 1);
      v19 = *(_QWORD *)(v18 + v15);
      if (!v19 || (v20 = *(unsigned __int8 *)(v19 + 24), v20 == 255))
      {
        v27 = *(void **)(v0 + 40);
        v28 = *(id *)(v0 + 32);
        v29 = v27;
        v73 = 0;
        v72 = -1;
      }
      else
      {
        v21 = *(_QWORD *)(v0 + 136);
        v22 = *(void **)(v0 + 40);
        v23 = *(_QWORD *)(v19 + 16);
        v24 = *(id *)(v0 + 32);
        v25 = v22;
        swift_retain(v19);
        sub_10013BC6C(v23, v20);
        v73 = sub_1001DE010(v21, v23, v20 & 1);
        v72 = v26;
        sub_10013BC80(v23, v20);
        swift_release(v19);
      }
      v30 = *(void **)(v0 + 224);
      v31 = *(_QWORD *)(v0 + 128);
      v33 = *(_QWORD *)(v0 + 112);
      v32 = *(_QWORD *)(v0 + 120);
      v35 = *(_QWORD *)(v0 + 72);
      v34 = *(int **)(v0 + 80);
      v37 = *(_QWORD *)(v0 + 56);
      v36 = *(_QWORD *)(v0 + 64);
      sub_10005B704(*(_QWORD *)(v0 + 136), v33, _s7ContextV6SourceOMa);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
      v38 = v33 + v34[5];
      *(_QWORD *)v38 = v73;
      *(_BYTE *)(v38 + 8) = v72;
      *(_QWORD *)(v33 + v34[6]) = v30;
      *(_BYTE *)(v33 + v34[7]) = 1;
      *(_BYTE *)(v33 + v34[8]) = 0;
      v39 = v30;
      Current = CFAbsoluteTimeGetCurrent();
      v41 = Logger.collaboration.unsafeMutableAddressor();
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v41, v37);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.default.getter(v43);
      if (os_log_type_enabled(v43, v44))
      {
        v45 = *(double *)(v0 + 184);
        v46 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v46 = 134217984;
        *(double *)(v0 + 16) = Current - v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "[Reaction] Did update context in %f seconds", v46, 0xCu);
        swift_slowDealloc(v46, -1, -1);
      }

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
      v47 = sub_10012D4A8();
      if (v47)
      {
        v48 = v47;
        v49 = *(void **)(v0 + 40);
        v50 = objc_msgSend(v47, "identifiers");

        v51 = objc_msgSend(v49, "identifiers");
        LODWORD(v49) = objc_msgSend(v50, "intersectsSet:", v51);

        if ((_DWORD)v49)
        {
          v53 = *(_QWORD *)(v0 + 104);
          v52 = *(_QWORD *)(v0 + 112);
          v55 = *(_QWORD *)(v0 + 88);
          v54 = *(_QWORD *)(v0 + 96);
          v56 = *(_QWORD *)(v0 + 48);
          v57 = *(void **)(v0 + 24);
          v58 = type metadata accessor for TaskPriority(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v56, 1, 1, v58);
          sub_10005B704(v52, v53, _s7ContextVMa_1);
          v59 = v57;
          v61 = static MainActor.shared.getter(v60);
          v62 = *(unsigned __int8 *)(v55 + 80);
          v63 = (v62 + 40) & ~v62;
          v64 = (_QWORD *)swift_allocObject(&unk_1010B2768, v63 + v54, v62 | 7);
          v64[2] = v61;
          v64[3] = &protocol witness table for MainActor;
          v64[4] = v59;
          sub_10013BDD0(v53, (uint64_t)v64 + v63);
          v65 = sub_100166D34(v56, (uint64_t)&unk_1011A22A8, (uint64_t)v64);
          swift_release(v65);
        }
      }

      v66 = *(_QWORD *)(v0 + 136);
      v67 = *(_QWORD *)(v0 + 144);
      v69 = *(_QWORD *)(v0 + 104);
      v68 = *(_QWORD *)(v0 + 112);
      v70 = *(_QWORD *)(v0 + 72);
      v71 = *(_QWORD *)(v0 + 48);
      sub_10005B748(v68, _s7ContextVMa_1);
      sub_10005B748(v66, _s7ContextV6SourceOMa);
      swift_task_dealloc(v67);
      swift_task_dealloc(v66);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc(dword_1011A6144);
    *(_QWORD *)(v0 + 208) = v14;
    *v14 = v0;
    v14[1] = sub_10011B9E0;
    return sub_1001DC020();
  }
}

uint64_t sub_10011B9E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10011BA38, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_10011BA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  double Current;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  double v38;
  uint8_t *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 192));
  v1 = *(_QWORD *)(v0 + 24);
  v2 = OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController;
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 232) = v2;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 240) = v3;
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v5 = dword_1011A5C14;
    swift_retain(v3);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 248) = v6;
    *v6 = v0;
    v6[1] = sub_10011BE90;
    return sub_1001DE2E4(v4);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_OWORD **)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 24);
    *v9 = *(_OWORD *)(v0 + 32);
    swift_storeEnumTagMultiPayload(v9, v10, 1);
    v12 = *(_QWORD *)(v11 + v8);
    if (!v12 || (v13 = *(unsigned __int8 *)(v12 + 24), v13 == 255))
    {
      v20 = *(void **)(v0 + 40);
      v21 = *(id *)(v0 + 32);
      v22 = v20;
      v66 = 0;
      v65 = -1;
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 136);
      v15 = *(void **)(v0 + 40);
      v16 = *(_QWORD *)(v12 + 16);
      v17 = *(id *)(v0 + 32);
      v18 = v15;
      swift_retain(v12);
      sub_10013BC6C(v16, v13);
      v66 = sub_1001DE010(v14, v16, v13 & 1);
      v65 = v19;
      sub_10013BC80(v16, v13);
      swift_release(v12);
    }
    v23 = *(void **)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 72);
    v27 = *(int **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 56);
    v29 = *(_QWORD *)(v0 + 64);
    sub_10005B704(*(_QWORD *)(v0 + 136), v26, _s7ContextV6SourceOMa);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v25);
    v31 = v26 + v27[5];
    *(_QWORD *)v31 = v66;
    *(_BYTE *)(v31 + 8) = v65;
    *(_QWORD *)(v26 + v27[6]) = v23;
    *(_BYTE *)(v26 + v27[7]) = 1;
    *(_BYTE *)(v26 + v27[8]) = 0;
    v32 = v23;
    Current = CFAbsoluteTimeGetCurrent();
    v34 = Logger.collaboration.unsafeMutableAddressor();
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v34, v30);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = *(double *)(v0 + 184);
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v39 = 134217984;
      *(double *)(v0 + 16) = Current - v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "[Reaction] Did update context in %f seconds", v39, 0xCu);
      swift_slowDealloc(v39, -1, -1);
    }

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    v40 = sub_10012D4A8();
    if (v40)
    {
      v41 = v40;
      v42 = *(void **)(v0 + 40);
      v43 = objc_msgSend(v40, "identifiers");

      v44 = objc_msgSend(v42, "identifiers");
      LODWORD(v42) = objc_msgSend(v43, "intersectsSet:", v44);

      if ((_DWORD)v42)
      {
        v46 = *(_QWORD *)(v0 + 104);
        v45 = *(_QWORD *)(v0 + 112);
        v48 = *(_QWORD *)(v0 + 88);
        v47 = *(_QWORD *)(v0 + 96);
        v49 = *(_QWORD *)(v0 + 48);
        v50 = *(void **)(v0 + 24);
        v51 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 1, 1, v51);
        sub_10005B704(v45, v46, _s7ContextVMa_1);
        v52 = v50;
        v54 = static MainActor.shared.getter(v53);
        v55 = *(unsigned __int8 *)(v48 + 80);
        v56 = (v55 + 40) & ~v55;
        v57 = (_QWORD *)swift_allocObject(&unk_1010B2768, v56 + v47, v55 | 7);
        v57[2] = v54;
        v57[3] = &protocol witness table for MainActor;
        v57[4] = v52;
        sub_10013BDD0(v46, (uint64_t)v57 + v56);
        v58 = sub_100166D34(v49, (uint64_t)&unk_1011A22A8, (uint64_t)v57);
        swift_release(v58);
      }
    }

    v59 = *(_QWORD *)(v0 + 136);
    v60 = *(_QWORD *)(v0 + 144);
    v62 = *(_QWORD *)(v0 + 104);
    v61 = *(_QWORD *)(v0 + 112);
    v63 = *(_QWORD *)(v0 + 72);
    v64 = *(_QWORD *)(v0 + 48);
    sub_10005B748(v61, _s7ContextVMa_1);
    sub_10005B748(v59, _s7ContextV6SourceOMa);
    swift_task_dealloc(v60);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10011BE90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  swift_task_dealloc(*(_QWORD *)(*v0 + 248));
  swift_release(v2);
  return swift_task_switch(sub_10011BEE4, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_10011BEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double Current;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  double v31;
  uint8_t *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  void *v60;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_OWORD **)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  *v3 = *(_OWORD *)(v0 + 32);
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  v5 = *(_QWORD *)(v1 + v2);
  if (!v5 || (v6 = *(unsigned __int8 *)(v5 + 24), v6 == 255))
  {
    v13 = *(void **)(v0 + 40);
    v14 = *(id *)(v0 + 32);
    v15 = v13;
    v60 = 0;
    v59 = -1;
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(void **)(v0 + 40);
    v9 = *(_QWORD *)(v5 + 16);
    v10 = *(id *)(v0 + 32);
    v11 = v8;
    swift_retain(v5);
    sub_10013BC6C(v9, v6);
    v60 = sub_1001DE010(v7, v9, v6 & 1);
    v59 = v12;
    sub_10013BC80(v9, v6);
    swift_release(v5);
  }
  v16 = *(void **)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 120);
  v21 = *(_QWORD *)(v0 + 72);
  v20 = *(int **)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 64);
  sub_10005B704(*(_QWORD *)(v0 + 136), v19, _s7ContextV6SourceOMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
  v24 = v19 + v20[5];
  *(_QWORD *)v24 = v60;
  *(_BYTE *)(v24 + 8) = v59;
  *(_QWORD *)(v19 + v20[6]) = v16;
  *(_BYTE *)(v19 + v20[7]) = 1;
  *(_BYTE *)(v19 + v20[8]) = 0;
  v25 = v16;
  Current = CFAbsoluteTimeGetCurrent();
  v27 = Logger.collaboration.unsafeMutableAddressor();
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v27, v23);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = *(double *)(v0 + 184);
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v32 = 134217984;
    *(double *)(v0 + 16) = Current - v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[Reaction] Did update context in %f seconds", v32, 0xCu);
    swift_slowDealloc(v32, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v33 = sub_10012D4A8();
  if (v33)
  {
    v34 = v33;
    v35 = *(void **)(v0 + 40);
    v36 = objc_msgSend(v33, "identifiers");

    v37 = objc_msgSend(v35, "identifiers");
    LODWORD(v35) = objc_msgSend(v36, "intersectsSet:", v37);

    if ((_DWORD)v35)
    {
      v39 = *(_QWORD *)(v0 + 104);
      v38 = *(_QWORD *)(v0 + 112);
      v41 = *(_QWORD *)(v0 + 88);
      v40 = *(_QWORD *)(v0 + 96);
      v42 = *(_QWORD *)(v0 + 48);
      v43 = *(void **)(v0 + 24);
      v44 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 1, 1, v44);
      sub_10005B704(v38, v39, _s7ContextVMa_1);
      v45 = v43;
      v47 = static MainActor.shared.getter(v46);
      v48 = *(unsigned __int8 *)(v41 + 80);
      v49 = (v48 + 40) & ~v48;
      v50 = (_QWORD *)swift_allocObject(&unk_1010B2768, v49 + v40, v48 | 7);
      v50[2] = v47;
      v50[3] = &protocol witness table for MainActor;
      v50[4] = v45;
      sub_10013BDD0(v39, (uint64_t)v50 + v49);
      v51 = sub_100166D34(v42, (uint64_t)&unk_1011A22A8, (uint64_t)v50);
      swift_release(v51);
    }
  }

  v52 = *(_QWORD *)(v0 + 136);
  v53 = *(_QWORD *)(v0 + 144);
  v55 = *(_QWORD *)(v0 + 104);
  v54 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 72);
  v57 = *(_QWORD *)(v0 + 48);
  sub_10005B748(v54, _s7ContextVMa_1);
  sub_10005B748(v52, _s7ContextV6SourceOMa);
  swift_task_dealloc(v53);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011C2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a1;
  v6 = (*(_QWORD *)(*(_QWORD *)(_s7ContextVMa_1(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v6);
  v5[12] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_10011C354, v9, v10);
}

uint64_t sub_10011C354()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 104));
  v2 = *(char **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    sub_10005B704(*(_QWORD *)(v0 + 80), v4, _s7ContextVMa_1);
    v5 = (uint64_t)&v2[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context];
    swift_beginAccess(&v2[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], v0 + 16, 0, 0);
    sub_10005B704(v5, v3, _s7ContextVMa_1);
    swift_beginAccess(v5, v0 + 40, 33, 0);
    v6 = v2;
    sub_10013BEA8(v4, v5);
    swift_endAccess(v0 + 40);
    sub_1001E2B24(v3);
    sub_10005B748(v4, _s7ContextVMa_1);
    sub_10005B748(v3, _s7ContextVMa_1);

  }
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  **(_BYTE **)(v0 + 64) = v2 == 0;
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10011C4C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton) = a1;

}

void sub_10011C4D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl) = a1;

}

void sub_10011C4E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton) = a1;

}

uint64_t sub_10011C4FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  unsigned __int8 v4;
  uint64_t result;

  v1 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v1)
  {
    v2 = objc_msgSend(v1, "tracklist");
    v3 = objc_msgSend(v2, "vocalsControlCommand");

    if (v3)
    {
      v4 = objc_msgSend(v3, "isActive");
      swift_unknownObjectRelease(v3);
      if ((v4 & 1) != 0)
        return *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait);
    }
  }
  if (!objc_msgSend(*(id *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager), "musicHapticsEnabled"))return *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait);
  result = *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState);
  if ((_DWORD)result == 3)
    return *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait);
  return result;
}

void sub_10011C5C0(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unsigned __int8 v7;
  double v8;
  int v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  _BYTE *v15;
  _BYTE *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  BOOL v39[8];
  uint64_t v40;

  v3 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
  v4 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  if (v4
    && (v5 = objc_msgSend(v4, "tracklist"),
        v6 = objc_msgSend(v5, "vocalsControlCommand"),
        v5,
        v6)
    && (v7 = objc_msgSend(v6, "isActive"),
        *(_QWORD *)&v8 = swift_unknownObjectRelease(v6).n128_u64[0],
        (v7 & 1) != 0)
    || !objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager], "musicHapticsEnabled")|| (v9 = v1[OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState], v9 == 3))
  {
    LOBYTE(v9) = a1;
  }
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait] = v9;
  v10 = *(void **)&v1[v3];
  if (v10)
  {
    v11 = objc_msgSend(v10, "tracklist", v8);
    v12 = objc_msgSend(v11, "playingItem");

    if (v12)
    {
      if (qword_10119C358 != -1)
        swift_once(&qword_10119C358, sub_1005EC118);
      v13 = type metadata accessor for Logger(0);
      sub_100048B14(v13, (uint64_t)qword_10124D428);
      v14 = v12;
      v15 = v1;
      v37 = v14;
      v16 = v15;
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(32, -1);
        v20 = swift_slowAlloc(96, -1);
        v40 = v20;
        *(_DWORD *)v19 = 136446722;
        v21 = objc_msgSend(v37, "contentItemIdentifier");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v38 = sub_100322200(v22, v24, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39);

        swift_bridgeObjectRelease(v24);
        *(_WORD *)(v19 + 12) = 2082;
        LOBYTE(v38) = sub_10011C4FC();
        v25 = sub_100007E8C(&qword_1011A2270);
        v26 = String.init<A>(describing:)(&v38, v25);
        v28 = v27;
        v38 = sub_100322200(v26, v27, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39);

        *(_QWORD *)&v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
        *(_WORD *)(v19 + 22) = 2082;
        v30 = objc_msgSend(v37, "nowPlayingAudioFormat", v29);
        v31 = v30;
        if (v30)
        {
          v32 = objc_msgSend(v30, "badging");

        }
        else
        {
          v32 = 0;
        }
        v38 = (uint64_t)v32;
        v39[0] = v31 == 0;
        v33 = sub_100007E8C(&qword_1011A2278);
        v34 = String.init<A>(describing:)(&v38, v33);
        v36 = v35;
        v38 = sub_100322200(v34, v35, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39);

        swift_bridgeObjectRelease(v36);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "[AudioTrait](%{public}s) Updated playing item audio trait=%{public}s based on audio format badge=%{public}s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy(v20, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

      }
    }
  }
}

void sub_10011C9E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  id v29;
  void (*v30)(_QWORD *, _QWORD);
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  id v50;
  void (*v51)(_QWORD *, _QWORD);
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  unint64_t v63;
  char v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _QWORD);
  void *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[4];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v2);
  v4 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C4EA0);
  __chkstk_darwin(v5);
  v104 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributeContainer(0);
  v8 = *(_QWORD *)(v7 - 8);
  v105 = v7;
  v106 = v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v103 = (char *)&v101 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v101 - v14;
  v16 = type metadata accessor for UIButton.Configuration(0);
  v107 = *(_QWORD *)(v16 - 8);
  v108 = v16;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v101 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v101 - v23;
  v25 = sub_10011C4FC();
  v26 = v25;
  if (v25 > 0xAu)
    goto LABEL_19;
  if (((1 << v25) & 0x18) == 0)
  {
    if (((1 << v25) & 0x300) != 0)
    {
      static UIButton.Configuration.plain()(v25);
      v29 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v30 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v109);
      UIBackgroundConfiguration.backgroundColor.setter(v29);
      v30(v109, 0);
      sub_10011D490(v26);
      if (v31)
      {
        v32 = v31;
        if (qword_10119C2F8 != -1)
          swift_once(&qword_10119C2F8, sub_1005D2E98);
        v33 = objc_msgSend(v32, "imageWithTintColor:renderingMode:", qword_10124D3D8, 1);
        v34 = v33;
        UIButton.Configuration.image.setter(v33);
        v35 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleCaption2, 2);
        v36 = UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v35);
        AttributeContainer.init()(v36);
        KeyPath = swift_getKeyPath(&unk_100EABB08);
        *(&v101 - 2) = (id)__chkstk_darwin(KeyPath);
        v38 = swift_getKeyPath(&unk_100EABB38);
        sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
        v109[0] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightMedium);
        v39 = sub_10013BAC4();
        AttributeContainer.subscript.setter(v109, v38, v39);
        sub_10011D7F8(v26);
        if (v41)
        {
          v42 = v40;
          v43 = v41;
          v45 = v105;
          v44 = v106;
          v46 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
          v102 = v34;
          v47 = v103;
          v46(v103, v11, v105);
          v101 = v32;
          v48 = v104;
          AttributedString.init(_:attributes:)(v42, v43, v47);
          v49 = type metadata accessor for AttributedString(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
          UIButton.Configuration.attributedTitle.setter(v48);

          (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v106 + 8))(v11, v105);

        }
      }
      UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
      UIButton.Configuration.imagePadding.setter(4.0);
      v93 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (!v93)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v94 = v107;
      v95 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v4, v19, v108);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v4, 0, 1, v95);
      v96 = v93;
      UIButton.configuration.setter(v4);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v19, v95);
LABEL_33:
      v97 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
      v98 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (v98)
      {
        v99 = v98;
        objc_msgSend(v99, "setUserInteractionEnabled:", (0x66u >> sub_10011C4FC()) & 1);

        v100 = *(void **)&v1[v97];
        if (v100)
        {
          objc_msgSend(v100, "layoutIfNeeded");
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_38;
    }
    if (((1 << v25) & 0x480) != 0)
    {
      v27 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (!v27)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v4, 1, 1, v108);
      v28 = v27;
      UIButton.configuration.setter(v4);

      goto LABEL_33;
    }
LABEL_19:
    static UIButton.Configuration.borderedTinted()();
    v62 = objc_msgSend(v0, "traitCollection");
    v63 = sub_10013B23C();
    v64 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v63);

    if ((v64 & 1) != 0)
    {
      if (qword_10119C318 != -1)
        swift_once(&qword_10119C318, sub_1005D2F9C);
      v65 = (id)qword_10124D3F8;
    }
    else
    {
      v65 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    }
    v66 = v65;
    sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
    v67 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption2, UIFontWeightBold);
    v68 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v67, 2);

    v102 = v68;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v68);
    sub_10011D490(v26);
    if (v69)
    {
      v70 = v69;
      UIButton.Configuration.image.setter(objc_msgSend(v69, "imageWithTintColor:renderingMode:", v66, 1));

    }
    AttributeContainer.init()(v69);
    v71 = swift_getKeyPath(&unk_100EABB08);
    *(&v101 - 2) = (id)__chkstk_darwin(v71);
    v72 = swift_getKeyPath(&unk_100EABB38);
    v109[0] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption2, UIFontWeightMedium);
    v73 = sub_10013BAC4();
    AttributeContainer.subscript.setter(v109, v72, v73);
    v74 = swift_getKeyPath(&unk_100EABB78);
    *(&v101 - 2) = (id)__chkstk_darwin(v74);
    v75 = swift_getKeyPath(&unk_100EABBA8);
    v109[0] = v66;
    v76 = sub_10013BB48();
    v77 = v66;
    AttributeContainer.subscript.setter(v109, v75, v76);
    sub_10011D7F8(v26);
    v80 = v105;
    if (v79)
    {
      v81 = v78;
      v82 = v79;
      v83 = v77;
      v84 = v103;
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v15, v105);
      v85 = v104;
      v86 = v84;
      v77 = v83;
      AttributedString.init(_:attributes:)(v81, v82, v86);
      v87 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v85, 0, 1, v87);
      UIButton.Configuration.attributedTitle.setter(v85);
    }
    UIButton.Configuration.contentInsets.setter(2.5, 7.0, 2.5, 7.0);
    UIButton.Configuration.imagePadding.setter(4.0);
    v88 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v109);
    UIBackgroundConfiguration.cornerRadius.setter(5.0);
    v88(v109, 0);
    v89 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
    if (!v89)
      goto LABEL_42;
    v90 = v107;
    v91 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v4, v24, v108);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v4, 0, 1, v91);
    v92 = v89;
    UIButton.configuration.setter(v4);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v15, v80);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v24, v91);
    goto LABEL_33;
  }
  static UIButton.Configuration.plain()(v25);
  v50 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v51 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v109);
  UIBackgroundConfiguration.backgroundColor.setter(v50);
  v51(v109, 0);
  v52 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleCaption1, UIContentSizeCategoryExtraExtraExtraLarge);
  if (v52)
  {
    v53 = v52;
    v54 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v52);

    v55 = v54;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v54);
    sub_10011D490(v26);
    if (v56)
    {
      v57 = v56;
      if (qword_10119C2F8 != -1)
        swift_once(&qword_10119C2F8, sub_1005D2E98);
      UIButton.Configuration.image.setter(objc_msgSend(v57, "imageWithTintColor:renderingMode:", qword_10124D3D8, 1));

    }
    v58 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
    if (!v58)
      goto LABEL_41;
    v59 = v107;
    v60 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v4, v22, v108);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v4, 0, 1, v60);
    v61 = v58;
    UIButton.configuration.setter(v4);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v60);
    goto LABEL_33;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_10011D490(char a1)
{
  __asm { BR              X10 }
}

id sub_10011D4C0()
{
  id v0;
  NSString v1;
  id v2;

  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v0 = (id)qword_10124D260;
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v1, v0);

  return v2;
}

void sub_10011D7F8(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_10011D89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t, unint64_t))String.LocalizationValue.init(stringLiteral:))(0x616C696176616E55, 0xEB00000000656C62);
  ((void (*)(uint64_t))static Locale.current.getter)(v2);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t))String.init(localized:table:bundle:locale:comment:))(v1, 0, 0, 0, v0, 0, 0, 256);
}

void sub_10011D9A0()
{
  JUMPOUT(0x10011D98CLL);
}

void sub_10011D9BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView) = a1;

}

void sub_10011D9D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView) = a1;

}

void sub_10011DA28(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton) = a1;

}

id sub_10011DA3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  _BYTE v10[80];

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButtonPackageView;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButtonPackageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButtonPackageView);
  }
  else
  {
    v4 = v0;
    sub_10011EFF4((uint64_t)v10);
    v5 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
    v6 = CoreAnimationPackageView.init(definition:)((uint64_t)v10);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_10011DAF0()
{
  return sub_10012CF24(&OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButton, (uint64_t (*)(uint64_t))sub_10011DB38);
}

char *sub_10011DB38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  int64x2_t v14;
  int64x2_t v15;
  char *v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  char *v27;
  double v28;
  char *v29;
  NSString v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v36[56];

  v2 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v2);
  v4 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v36[-v9 - 8];
  SymbolButton.Configuration.init()((uint64_t)v8);
  static UIView.Corner.rounded.getter(v11);
  v12 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  sub_1000A5508((uint64_t)v4, (uint64_t)&v8[v5[9]], &qword_10119DDD8);
  v8[v5[19]] = 0;
  v13 = sub_10011DA3C();
  SymbolButton.CustomView.init(view:)((unint64_t)v13, (uint64_t)v36, v14, v15);
  sub_1000A5508((uint64_t)v36, (uint64_t)&v8[v5[10]], &qword_1011A2230);
  v16 = SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor();
  v17 = *v16;
  v18 = (void *)*((_QWORD *)v16 + 1);
  v19 = (void *)*((_QWORD *)v16 + 2);
  v20 = v16[24];
  v21 = v19;
  v22 = v18;
  SymbolButton.Configuration.withAccessibility(_:)(v17, v18, v19, v20, (uint64_t)v10);

  sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  v23 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, a1);
  sub_10005B704((uint64_t)v10, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  v24 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a1);
  v25 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v26 = SymbolButton.init(configuration:handler:)((uint64_t)v8, (uint64_t)sub_10013BA00, v24);
  v27 = SymbolButton.withProvider(_:)((uint64_t)sub_10013B9F8, v23);

  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v27) + 0x100))(0xD000000000000019, 0x8000000100E2E640);
  (*(void (**)(double, double))((swift_isaMask & *(_QWORD *)v27) + 0x208))(35.0, 68.0);
  objc_msgSend(v27, "setExclusiveTouch:", 1);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, "setContentCompressionResistancePriority:forAxis:", 0, v28);
  v29 = v27;
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setLayoutDebuggingIdentifier:", v30);

  v31 = AccessibilityIdentifier.nowPlayingFavoriteButton.unsafeMutableAddressor();
  v32 = *v31;
  v33 = v31[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v32, v33);
  swift_release(v23);
  sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  return v29;
}

void sub_10011DEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _QWORD *v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10013BA8C(*(_QWORD *)(a2 + 192), *(void **)(a2 + 200), *(_QWORD *)(a2 + 208), *(_QWORD *)(a2 + 216));
    *(_OWORD *)(a2 + 192) = xmmword_100EA85A0;
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 216) = 0;
    v7 = sub_10011DA3C();
    v8 = UIViewConfigurationState.isHighlighted.getter();
    v9 = (v8 & 1) == 0;
    if ((v8 & 1) != 0)
      v10 = 0x6F44206863756F54;
    else
      v10 = 0x7055206863756F54;
    if (v9)
      v11 = 0xE800000000000000;
    else
      v11 = 0xEA00000000006E77;
    (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t))((swift_isaMask & *v7) + 0xF0))(v10, v11, 0x6E6F74747562, 0xE600000000000000);

    swift_bridgeObjectRelease(v11);
    v12 = sub_10011DA3C();
    v13 = UIViewConfigurationState.isSelected.getter();
    v14 = (v13 & 1) == 0;
    if ((v13 & 1) != 0)
      v15 = 28239;
    else
      v15 = 6710863;
    if (v14)
      v16 = 0xE300000000000000;
    else
      v16 = 0xE200000000000000;
    (*(void (**)(uint64_t, unint64_t))((swift_isaMask & *v12) + 0xC0))(v15, v16);

  }
}

void sub_10011E000(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v19[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
    if (v9)
    {
      v10 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
      type metadata accessor for MainActor(0);
      v11 = v9;
      v12 = a1;
      v13 = v8;
      v15 = static MainActor.shared.getter(v14);
      v16 = (_QWORD *)swift_allocObject(&unk_1010B26D8, 56, 7);
      v16[2] = v15;
      v16[3] = &protocol witness table for MainActor;
      v16[4] = v11;
      v16[5] = v12;
      v16[6] = v13;
      v17 = sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011A2240, (uint64_t)v16);
      swift_release(v17);

      v8 = v11;
    }

  }
}

uint64_t sub_10011E14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  v7 = type metadata accessor for Notice.Variant(0);
  v6[15] = v7;
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v6[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119E460);
  v6[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricsEvent.Click(0);
  v6[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for MetricsPageProperties(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[21] = swift_task_alloc(v12);
  v6[22] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v6[23] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v6[24] = v15;
  v6[25] = v16;
  return swift_task_switch(sub_10011E294, v15, v16);
}

uint64_t sub_10011E294()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 104);
  v2 = MPCPlayerResponse.isPlayingItemFavorited.getter();
  *(_BYTE *)(v0 + 248) = v2 & 1;
  objc_msgSend(v1, "setSelected:", (v2 & 1) == 0);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v3 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 208) = qword_10124C798;
  *(_QWORD *)(v0 + 40) = &type metadata for Player.FavoriteCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.FavoriteCommand;
  *(_BYTE *)(v0 + 16) = 0;
  v4 = dword_1011D86AC;
  v3;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 216) = v5;
  *v5 = v0;
  v5[1] = sub_10011E37C;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_10011E37C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v6 = *(void **)(*(_QWORD *)v2 + 208);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  *(_QWORD *)(*(_QWORD *)v2 + 224) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = v4[24];
    v8 = v4[25];
    v9 = sub_10011E960;
  }
  else
  {

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 2);
    v7 = v4[24];
    v8 = v4[25];
    v9 = sub_10011E400;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10011E400()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;

  if ((*(_BYTE *)(v0 + 248) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 184));
    v2 = *(uint64_t **)(v0 + 168);
    v1 = *(uint64_t **)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    sub_10012C274(v1);
    v5 = *v1;
    v6 = v1[1];
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
    swift_bridgeObjectRetain();
    v8 = sub_100041F44((uint64_t)&off_1010AA650);
    sub_10005B704((uint64_t)v1, (uint64_t)v2, type metadata accessor for MetricsPageProperties);
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v5, v6, 5, 18, v3, 0, 0, 9, v4, v8, 0, 0x300u, v2, 0);
    v9 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v11 = v10;
    v13 = v12;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v29 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 160);
    v15 = qword_10124C790;
    swift_retain(qword_10124C790);
    v16 = GroupActivitiesManager.hasJoined.getter();
    v17 = GroupActivitiesManager.participantsCount.getter();
    v18 = (uint64_t *)(v15 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v15 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v0 + 56, 0, 0);
    v19 = *v18;
    v20 = swift_release(v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v9) + 0xB8))(v14, v11, v13, v16 & 1, v17, v19, v20);

    swift_bridgeObjectRelease(v13);
    sub_10005B748(v14, type metadata accessor for MetricsEvent.Click);
    sub_10005B748(v29, type metadata accessor for MetricsPageProperties);
    v21 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v28 = (_QWORD *)swift_task_alloc(dword_1011DCC6C);
    *(_QWORD *)(v0 + 232) = v28;
    *v28 = v0;
    v28[1] = sub_10011E690;
    return static Task<>.sleep(for:)(0.5);
  }
}

uint64_t sub_10011E690()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10011ECB0;
  else
    v4 = sub_10011E6F0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200));
}

uint64_t sub_10011E6F0()
{
  uint64_t v0;
  id v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  objc_msgSend(v1, "notificationOccurred:", 0);

  v3 = *(uint64_t **)(v0 + 168);
  v2 = *(uint64_t **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  sub_10012C274(v2);
  v6 = *v2;
  v7 = v2[1];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  swift_bridgeObjectRetain();
  v9 = sub_100041F44((uint64_t)&off_1010AA650);
  sub_10005B704((uint64_t)v2, (uint64_t)v3, type metadata accessor for MetricsPageProperties);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v6, v7, 5, 17, v4, 0, 0, 9, v5, v9, 0, 0x300u, v3, 0);
  v10 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v12 = v11;
  v14 = v13;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v29 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 160);
  v16 = qword_10124C790;
  swift_retain(qword_10124C790);
  v17 = GroupActivitiesManager.hasJoined.getter();
  v18 = GroupActivitiesManager.participantsCount.getter();
  v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v16 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v0 + 56, 0, 0);
  v20 = *v19;
  v21 = swift_release(v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v10) + 0xB8))(v15, v12, v14, v17 & 1, v18, v20, v21);

  swift_bridgeObjectRelease(v14);
  sub_10005B748(v15, type metadata accessor for MetricsEvent.Click);
  sub_10005B748(v29, type metadata accessor for MetricsPageProperties);
  v22 = *(_QWORD *)(v0 + 168);
  v24 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144);
  v27 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011E960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  swift_release(*(_QWORD *)(v0 + 184));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 224);
  if (qword_10119C500 != -1)
    swift_once(&qword_10119C500, sub_10066DEA4);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D560);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v34 = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 80, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 88) = sub_100322200(v9, v10, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform ToggleFavoriteCommand with error: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  if (*(_BYTE *)(v0 + 248) == 1)
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000022, 0x8000000100E2E6B0);
    static Locale.current.getter(v14);
    v15 = "Short error message for undo favorite action";
    v16 = v13;
    v17 = v12;
    v18 = 44;
  }
  else
  {
    v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E2E660);
    static Locale.current.getter(v19);
    v15 = "Short error message for favorite action";
    v16 = v13;
    v17 = v12;
    v18 = 39;
  }
  v20 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v17, v15, v18, 2);
  v22 = v21;
  v23 = UIViewController.noticePresenter.getter();
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)(v0 + 120);
    v26 = *(uint64_t **)(v0 + 128);
    *v26 = v20;
    v26[1] = v22;
    swift_storeEnumTagMultiPayload(v26, v25, 2);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v24 + 184))(v26, 1);
    swift_release(v24);
    swift_errorRelease(v1);
    sub_10005B748((uint64_t)v26, type metadata accessor for Notice.Variant);
  }
  else
  {
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
  }
  v27 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011ECB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 240);
  if (qword_10119C500 != -1)
    swift_once(&qword_10119C500, sub_10066DEA4);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D560);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v34 = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 80, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 88) = sub_100322200(v9, v10, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform ToggleFavoriteCommand with error: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  if (*(_BYTE *)(v0 + 248) == 1)
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000022, 0x8000000100E2E6B0);
    static Locale.current.getter(v14);
    v15 = "Short error message for undo favorite action";
    v16 = v13;
    v17 = v12;
    v18 = 44;
  }
  else
  {
    v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E2E660);
    static Locale.current.getter(v19);
    v15 = "Short error message for favorite action";
    v16 = v13;
    v17 = v12;
    v18 = 39;
  }
  v20 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v17, v15, v18, 2);
  v22 = v21;
  v23 = UIViewController.noticePresenter.getter();
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)(v0 + 120);
    v26 = *(uint64_t **)(v0 + 128);
    *v26 = v20;
    v26[1] = v22;
    swift_storeEnumTagMultiPayload(v26, v25, 2);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v24 + 184))(v26, 1);
    swift_release(v24);
    swift_errorRelease(v1);
    sub_10005B748((uint64_t)v26, type metadata accessor for Notice.Variant);
  }
  else
  {
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
  }
  v27 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

__n128 sub_10011EFF4@<Q0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = sub_10013B23C();
  v6 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v5);

  if ((v6 & 1) != 0)
    goto LABEL_6;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceStyle");

  v9 = objc_msgSend(v2, "traitCollection");
  v10 = objc_msgSend(v9, "accessibilityContrast");

  if (v8 == (id)1)
  {
    static CAPackageDefinition.favoriteHighContrastLight.getter(&v16);
    goto LABEL_7;
  }
  if (v8 != (id)2)
  {
LABEL_6:
    static CAPackageDefinition.favorite.getter(&v16);
  }
  else if (v10 == (id)1)
  {
    static CAPackageDefinition.favoriteHighContrastDark.getter(&v16);
  }
  else
  {
    static CAPackageDefinition.favoriteDark.getter(&v16);
  }
LABEL_7:
  v11 = v21;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v17;
  *(_QWORD *)a1 = v16;
  *(_OWORD *)(a1 + 8) = v15;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 72) = v11;
  return result;
}

void sub_10011F184(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton) = a1;

}

uint64_t sub_10011F198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController) = a1;
  return swift_release(v2);
}

void sub_10011F1B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView) = a1;

}

void sub_10011F208(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel) = a1;

}

void sub_10011F21C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView) = a1;

}

void sub_10011F274(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton) = a1;

}

void sub_10011F288(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView) = a1;

}

void sub_10011F29C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView) = a1;

}

void sub_10011F2B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView) = a1;

}

void sub_10011F308(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton) = a1;

}

void sub_10011F360(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton) = a1;

}

void sub_10011F3B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton) = a1;

}

void sub_10011F3CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider) = a1;

}

void sub_10011F3E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView) = a1;

}

void sub_10011F438(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel) = a1;

}

void sub_10011F44C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton) = a1;

}

void sub_10011F460(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton) = a1;

}

id sub_10011F474()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___bottomButtonsConfiguration;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___bottomButtonsConfiguration);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___bottomButtonsConfiguration);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 6, 20.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

unint64_t sub_10011F4F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t inited;
  NSString v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___lyricsButtonStateImages;
  if (*(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___lyricsButtonStateImages))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___lyricsButtonStateImages);
  }
  else
  {
    v3 = sub_100007E8C(&qword_1011A2218);
    inited = swift_initStackObject(v3, &v17);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = 0;
    v5 = String._bridgeToObjectiveC()();
    v6 = (void *)objc_opt_self(UIImage);
    v7 = objc_msgSend(v6, "systemImageNamed:", v5);

    if (v7)
    {
      v8 = sub_10011F474();
      v9 = objc_msgSend(v7, "imageWithSymbolConfiguration:", v8);

    }
    else
    {
      v9 = 0;
    }
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 48) = 4;
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v6, "systemImageNamed:", v10);

    if (v11)
    {
      v12 = sub_10011F474();
      v13 = objc_msgSend(v11, "imageWithSymbolConfiguration:", v12);

    }
    else
    {
      v13 = 0;
    }
    *(_QWORD *)(inited + 56) = v13;
    v2 = sub_100046800((_QWORD *)inited);
    swift_setDeallocating(inited);
    v14 = sub_100007E8C((uint64_t *)&unk_1011A2220);
    swift_arrayDestroy(inited + 32, 2, v14);
    v15 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v15);
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_10011F6E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide) = a1;

}

void sub_10011F6F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide) = a1;

}

void sub_10011F708(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide) = a1;

}

uint64_t sub_10011F71C(uint64_t a1)
{
  return sub_10011F990(a1, &OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints);
}

void *sub_10011F728(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10011F76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011F784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011F79C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011F7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011F7CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011F7E4(uint64_t a1)
{
  return sub_10011F990(a1, &OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints);
}

void *sub_10011F7F0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10011F834(uint64_t a1)
{
  return sub_10011F990(a1, &OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints);
}

void *sub_10011F840(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints, a1, 33, 0);
  return &j_j__swift_endAccess;
}

void sub_10011F884()
{
  char *v0;
  unint64_t *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8[24];
  uint64_t v9;

  v1 = (unint64_t *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints];
  swift_beginAccess(&v0[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints], v8, 0, 0);
  v9 = *v1;
  v2 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView];
  swift_bridgeObjectRetain();
  if ((objc_msgSend(v2, "isHidden") & 1) == 0)
  {
    v3 = v0;
    v4 = sub_1001399EC((unint64_t *)&v9, (uint64_t)v3);

    v5 = v9;
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v7 = v9;
      else
        v7 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v5);
      if (v6 >= v4)
        goto LABEL_4;
    }
    else
    {
      v6 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6 >= v4)
      {
LABEL_4:
        sub_1001FEEB8(v4, v6);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10011F984(uint64_t a1)
{
  return sub_10011F990(a1, &OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints);
}

uint64_t sub_10011F990(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_bridgeObjectRelease(v5);
}

void *sub_10011F9DC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_10011FA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10011FA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

void sub_10011FA50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint) = a1;

}

void sub_10011FA64(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint) = a1;

}

void sub_10011FA78(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint) = a1;

}

void sub_10011FA8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint) = a1;

}

void sub_10011FAA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint) = a1;

}

void sub_10011FAB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint) = a1;

}

void sub_10011FAC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint) = a1;

}

void sub_10011FADC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint) = a1;

}

void sub_10011FAF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint) = a1;

}

void sub_10011FB04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint) = a1;

}

void sub_10011FB18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint) = a1;

}

void sub_10011FB2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint) = a1;

}

void sub_10011FB40(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint) = a1;

}

void sub_10011FB54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint);
  *(_QWORD *)(v1
            + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint) = a1;

}

void sub_10011FB68(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint) = a1;

}

void sub_10011FB7C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint) = a1;

}

void sub_10011FB90(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint) = a1;

}

void sub_10011FBA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView) = a1;

}

void *sub_10011FBB8(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10011FBFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

void sub_10011FC14()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  uint64_t v25;
  id v26;
  NSString v27;
  void *v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  NSString v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  double v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  id v131;
  id v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  void *v137;
  uint64_t v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  _QWORD *v147;
  id v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  void *v154;
  id v155;
  id v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  void *v162;
  _QWORD *v163;
  id v164;
  id v165;
  void *v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  id v172;
  id v173;
  void *v174;
  id v175;
  id v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  void *v181;
  id v182;
  id v183;
  id v184;
  id v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  void *v190;
  _QWORD *v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  id v195;
  id v196;
  id v197;
  id v198;
  void *v199;
  uint64_t v200;
  id v201;
  id v202;
  void *v203;
  id v204;
  void *v205;
  id v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  void *v212;
  _QWORD *v213;
  id v214;
  id v215;
  void *v216;
  id v217;
  id v218;
  void *v219;
  id v220;
  id v221;
  void *v222;
  id v223;
  id v224;
  void *v225;
  id v226;
  id v227;
  void *v228;
  id v229;
  id v230;
  void *v231;
  id v232;
  id v233;
  void *v234;
  id v235;
  id v236;
  uint64_t v237;
  double v238;
  void *v239;
  id v240;
  void *v241;
  id v242;
  id v243;
  double v244;
  id v245;
  void *v246;
  void *v247;
  id v248;
  id v249;
  id v250;
  id v251;
  double v252;
  id v253;
  void *v254;
  id v255;
  id v256;
  void *v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  void *v261;
  _QWORD *v262;
  id v263;
  uint64_t v264;
  void *v265;
  id v266;
  id v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  id v272;
  id v273;
  id v274;
  id v275;
  id v276;
  void *v277;
  id v278;
  void *v279;
  id v280;
  id v281;
  void *v282;
  id v283;
  void *v284;
  id v285;
  id v286;
  void *v287;
  id v288;
  void *v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  void *v295;
  id v296;
  id v297;
  id v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  void *v304;
  _QWORD *v305;
  id v306;
  void *v307;
  id v308;
  id v309;
  void *v310;
  id v311;
  void *v312;
  id v313;
  id v314;
  void *v315;
  id v316;
  id v317;
  void *v318;
  id v319;
  id v320;
  id v321;
  void *v322;
  id v323;
  void *v324;
  id v325;
  id v326;
  void *v327;
  id v328;
  void *v329;
  id v330;
  id v331;
  id v332;
  id v333;
  id v334;
  void *v335;
  id v336;
  void *v337;
  char **v338;
  id v339;
  id v340;
  uint64_t *v341;
  uint64_t v342;
  double v343;
  void *v344;
  id v345;
  __objc2_prot_list **p_base_prots;
  void *v347;
  id v348;
  uint64_t v349;
  void *v350;
  id v351;
  id v352;
  void *v353;
  id v354;
  void *v355;
  id v356;
  id v357;
  void *v358;
  void *v359;
  id v360;
  id v361;
  void *v362;
  void *v363;
  id v364;
  id v365;
  id v366;
  id v367;
  void *v368;
  id v369;
  id v370;
  void *v371;
  uint64_t v372;
  id v373;
  id v374;
  id v375;
  void *v376;
  id v377;
  id v378;
  void *v379;
  uint64_t v380;
  id v381;
  id v382;
  void *v383;
  id v384;
  id v385;
  id v386;
  void *v387;
  uint64_t v388;
  _QWORD *v389;
  uint64_t v390;
  void *v391;
  _QWORD *v392;
  id v393;
  void *v394;
  id v395;
  id v396;
  void *v397;
  id v398;
  id v399;
  void *v400;
  id v401;
  id v402;
  void *v403;
  id v404;
  id v405;
  id v406;
  void *v407;
  id v408;
  void *v409;
  id v410;
  id v411;
  id v412;
  uint64_t v413;
  void *v414;
  id v415;
  uint64_t v416;
  id v417;
  id v418;
  void *v419;
  id v420;
  id v421;
  id v422;
  void *v423;
  id v424;
  void *v425;
  id v426;
  id v427;
  void *v428;
  id v429;
  void *v430;
  id v431;
  id v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  _QWORD *v437;
  void *v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD *v441;
  void *v442;
  id v443;
  id v444;
  void *v445;
  id v446;
  id v447;
  id v448;
  void *v449;
  id v450;
  id v451;
  void *v452;
  id v453;
  id v454;
  id v455;
  void *v456;
  id v457;
  id v458;
  id v459;
  void *v460;
  id v461;
  void *v462;
  id v463;
  id v464;
  uint64_t v465;
  void *v466;
  id v467;
  id v468;
  id v469;
  void *v470;
  id v471;
  id v472;
  void *v473;
  id v474;
  id v475;
  id v476;
  uint64_t v477;
  uint64_t v478;
  _QWORD *v479;
  uint64_t v480;
  uint64_t v481;
  void *v482;
  _QWORD *v483;
  id v484;
  void *v485;
  id v486;
  id v487;
  void *v488;
  id v489;
  uint64_t v490;
  void *v491;
  id v492;
  id v493;
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  _QWORD *v497;
  uint64_t v498;
  id v499;
  id v500;
  void *v501;
  id v502;
  id v503;
  id v504;
  id v505;
  void *v506;
  id v507;
  id v508;
  uint64_t v509;
  void *v510;
  id v511;
  id v512;
  void *v513;
  id v514;
  id v515;
  id v516;
  void *v517;
  id v518;
  id v519;
  id v520;
  id v521;
  void *v522;
  id v523;
  id v524;
  void *v525;
  id v526;
  id v527;
  void *v528;
  id v529;
  id v530;
  void *v531;
  id v532;
  id v533;
  void *v534;
  void *v535;
  id v536;
  id v537;
  id v538;
  void *v539;
  id v540;
  id v541;
  void *v542;
  id v543;
  id v544;
  id v545;
  uint64_t v546;
  void *v547;
  id v548;
  id v549;
  id v550;
  void *v551;
  id v552;
  id v553;
  id v554;
  void *v555;
  uint64_t v556;
  id v557;
  id v558;
  id v559;
  uint64_t v560;
  void *v561;
  _QWORD *v562;
  uint64_t (*v563)(void);
  _QWORD *v564;
  void *v565;
  id v566;
  id v567;
  double v568;
  id v569;
  uint64_t v570;
  void *v571;
  id v572;
  void *v573;
  id v574;
  id v575;
  void *v576;
  id v577;
  void *v578;
  id v579;
  id v580;
  void *v581;
  id v582;
  void *v583;
  id v584;
  id v585;
  uint64_t v586;
  void *v587;
  id v588;
  void *v589;
  id v590;
  id v591;
  void *v592;
  id v593;
  void *v594;
  id v595;
  id v596;
  void *v597;
  id v598;
  void *v599;
  id v600;
  id v601;
  void *v602;
  id v603;
  void *v604;
  id v605;
  id v606;
  void *v607;
  id v608;
  void *v609;
  id v610;
  id v611;
  void *v612;
  id v613;
  void *v614;
  id v615;
  id v616;
  void *v617;
  id v618;
  void *v619;
  id v620;
  id v621;
  void *v622;
  id v623;
  void *v624;
  id v625;
  id v626;
  void *v627;
  uint64_t v628;
  void *v629;
  id v630;
  id v631;
  id v632;
  id v633;
  void *v634;
  id v635;
  uint64_t v636;
  void *v637;
  _QWORD *v638;
  uint64_t (*v639)(void);
  _QWORD *v640;
  void *v641;
  id v642;
  id v643;
  void *v644;
  id v645;
  uint64_t v646;
  id v647;
  id v648;
  void *v649;
  id v650;
  id v651;
  id v652;
  void *v653;
  id v654;
  id v655;
  id v656;
  void *v657;
  uint64_t v658;
  void *v659;
  uint64_t v660;
  id v661;
  id v662;
  void *v663;
  id v664;
  id v665;
  uint64_t v666;
  void *v667;
  id v668;
  void *v669;
  id v670;
  id v671;
  void *v672;
  id v673;
  void *v674;
  id v675;
  id v676;
  void *v677;
  id v678;
  void *v679;
  id v680;
  id v681;
  void *v682;
  id v683;
  void *v684;
  id v685;
  id v686;
  id v687;
  id v688;
  uint64_t v689;
  void *v690;
  id v691;
  id v692;
  id v693;
  void *v694;
  id v695;
  id v696;
  id v697;
  uint64_t v698;
  void *v699;
  _QWORD *v700;
  uint64_t (*v701)(void);
  _QWORD *v702;
  void *v703;
  id v704;
  id v705;
  id v706;
  uint64_t v707;
  uint64_t v708;
  void *v709;
  id v710;
  id v711;
  void *v712;
  id v713;
  void *v714;
  id v715;
  id v716;
  void *v717;
  id v718;
  void *v719;
  id v720;
  id v721;
  void *v722;
  id v723;
  id v724;
  id v725;
  uint64_t v726;
  id v727;
  id v728;
  id v729;
  id v730;
  id v731;
  id v732;
  id v733;
  id v734;
  uint64_t v735;
  id v736;
  id v737;
  id v738;
  id v739;
  id v740;
  id v741;
  id v742;
  id v743;
  void *v744;
  void *v745;
  id v746;
  uint64_t v747;
  uint64_t v748;
  id v749;
  id v750;
  void *v751;
  id v752;
  id v753;
  void *v754;
  id v755;
  void *v756;
  id v757;
  id v758;
  void *v759;
  id v760;
  id v761;
  uint64_t v762;
  void *v763;
  id v764;
  id v765;
  void *v766;
  id v767;
  void *v768;
  id v769;
  id v770;
  void *v771;
  id v772;
  id v773;
  void *v774;
  id v775;
  void *v776;
  id v777;
  id v778;
  id v779;
  void *v780;
  id v781;
  id v782;
  id v783;
  void *v784;
  id v785;
  id v786;
  id v787;
  uint64_t v788;
  void *v789;
  id v790;
  id v791;
  double v792;
  id v793;
  id v794;
  void *v795;
  id v796;
  id v797;
  id v798;
  void *v799;
  id v800;
  id v801;
  void *v802;
  uint64_t v803;
  uint64_t v804;
  void *v805;
  id v806;
  id v807;
  id v808;
  void *v809;
  id v810;
  void *v811;
  id v812;
  id v813;
  void *v814;
  id v815;
  void *v816;
  id v817;
  id v818;
  void *v819;
  id v820;
  void *v821;
  id v822;
  id v823;
  uint64_t v824;
  id v825;
  uint64_t v826;
  id v827;
  id v828;
  id v829;
  id v830;
  id v831;
  id v832;
  id v833;
  id v834;
  id v835;
  id v836;
  id v837;
  id v838;
  uint64_t v839;
  void *v840;
  char **v841;
  id v842;
  char **v843;
  uint64_t v844;
  void *v845;
  uint64_t v846;
  _QWORD *v847;
  _QWORD *v848;
  id v849;
  id v850;
  void *v851;
  id v852;
  id v853;
  id v854;
  uint64_t v855;
  void *v856;
  id v857;
  id v858;
  id v859;
  void *v860;
  id v861;
  id v862;
  id v863;
  id v864;
  id v865;
  uint64_t v866;
  uint64_t v867;
  unint64_t v868;
  double v869;
  uint64_t v870;
  _QWORD *v871;
  _QWORD *v872;
  id v873;
  id v874;
  id v875;
  void *v876;
  id v877;
  id v878;
  id v879;
  id v880;
  id v881;
  id v882;
  id v883;
  id v884;
  id v885;
  id v886;
  id v887;
  id v888;
  id v889;
  id v890;
  void *v891;
  id v892;
  id v893;
  uint64_t v894;
  uint64_t v895;
  void *v896;
  id v897;
  uint64_t v898;
  void *v899;
  _QWORD *v900;
  uint64_t (*v901)(void);
  _QWORD *v902;
  void *v903;
  id v904;
  id v905;
  void *v906;
  void *v907;
  id v908;
  id v909;
  void *v910;
  id v911;
  id v912;
  void *v913;
  void *v914;
  id v915;
  id v916;
  id v917;
  id v918;
  void *v919;
  void *v920;
  id v921;
  id v922;
  void *v923;
  id v924;
  void *v925;
  id v926;
  id v927;
  void *v928;
  void *v929;
  id v930;
  void *v931;
  id v932;
  id v933;
  void *v934;
  void *v935;
  id v936;
  void *v937;
  void *v938;
  id v939;
  id v940;
  id v941;
  id v942;
  void *v943;
  void *v944;
  id v945;
  void *v946;
  void *v947;
  uint64_t v948;
  id v949;
  id v950;
  id v951;
  void *v952;
  uint64_t v953;
  uint64_t *v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t *v958;
  uint64_t v959;
  id v960;
  id v961;
  BOOL v962;
  uint64_t v963;
  char *v964;
  uint64_t v965;
  uint64_t v966;
  _QWORD *v967;
  void *v968;
  uint64_t v969;
  id v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  NSObject *v975;
  os_log_type_t v976;
  _QWORD *v977;
  uint8_t *v978;
  __n128 v979;
  id v980;
  id v981;
  id v982;
  id v983;
  void *v984;
  double v985;
  double v986;
  double v987;
  char *v988;
  __int128 v989;
  __int128 v990;
  __int128 v991;
  void *v992;
  uint64_t v993;
  Class isa;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  char *v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  id v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  id v1018;
  id v1019;
  id v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  _OWORD v1034[6];
  uint64_t v1035;
  char v1036[24];
  char v1037[24];
  char v1038[24];
  char v1039[32];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v995 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, &qword_1011A2208, UILayoutGuide_ptr);
  v6 = sub_100256B54();
  v7 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide];
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide] = v6;

  v1024 = OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide;
  v8 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide];
  if (!v8)
  {
    __break(1u);
    goto LABEL_261;
  }
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setIdentifier:", v10);

  v11 = objc_msgSend(v0, "view");
  if (!v11)
  {
LABEL_261:
    __break(1u);
    goto LABEL_262;
  }
  v998 = v5;
  v999 = v3;
  if (!*(_QWORD *)&v0[v1024])
  {
LABEL_262:
    __break(1u);
    goto LABEL_263;
  }
  v12 = v11;
  objc_msgSend(v11, "addLayoutGuide:");

  v13 = sub_100256B54();
  v14 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide];
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide] = v13;

  v15 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide;
  v16 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide];
  if (!v16)
  {
LABEL_263:
    __break(1u);
    goto LABEL_264;
  }
  v997 = v2;
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setIdentifier:", v18);

  if (!*(_QWORD *)&v0[v15])
  {
LABEL_264:
    __break(1u);
    goto LABEL_265;
  }
  v1027 = OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "addLayoutGuide:");
  v19 = sub_100256B54();
  v20 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide];
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide] = v19;

  v21 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide;
  v22 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide];
  if (!v22)
  {
LABEL_265:
    __break(1u);
    goto LABEL_266;
  }
  v1021 = v15;
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setIdentifier:", v24);

  v1023 = v21;
  if (!*(_QWORD *)&v0[v21])
  {
LABEL_266:
    __break(1u);
    goto LABEL_267;
  }
  v25 = v1027;
  objc_msgSend(*(id *)&v0[v1027], "addLayoutGuide:");
  v26 = sub_100256B54();
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setIdentifier:", v27);

  v28 = *(void **)&v0[v25];
  v1020 = v26;
  objc_msgSend(v28, "addLayoutGuide:", v26);
  v29 = sub_100256B54();
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setIdentifier:", v30);

  v1025 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
  v31 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  if (!v31)
  {
LABEL_267:
    __break(1u);
    goto LABEL_268;
  }
  objc_msgSend(v31, "addLayoutGuide:", v29);
  v32 = sub_100256B54();
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setIdentifier:", v33);

  v34 = *(void **)&v0[v25];
  v1019 = v32;
  objc_msgSend(v34, "addLayoutGuide:", v32);
  v35 = sub_100256B54();
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setIdentifier:", v36);

  v37 = objc_msgSend(v1, "view");
  if (!v37)
  {
LABEL_268:
    __break(1u);
    goto LABEL_269;
  }
  v38 = v37;
  objc_msgSend(v37, "addLayoutGuide:", v35);

  v1009 = OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView;
  v39 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView];
  if (!v39)
  {
LABEL_269:
    __break(1u);
    goto LABEL_270;
  }
  v1010 = v29;
  v40 = objc_msgSend(v39, "topAnchor");
  v41 = objc_msgSend(v1, "view");
  if (!v41)
  {
LABEL_270:
    __break(1u);
    goto LABEL_271;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, "safeAreaLayoutGuide");

  v44 = objc_msgSend(v43, "topAnchor");
  v45 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v44, *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 8]);

  v46 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint] = v45;

  v1028 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v47 = swift_allocObject(v1028, 64, 7);
  v1026 = sub_10004D56C(v47, 4);
  v49 = v1024;
  v50 = *(void **)&v1[v1024];
  if (!v50)
  {
LABEL_271:
    __break(1u);
    goto LABEL_272;
  }
  v51 = v48;
  v52 = objc_msgSend(v50, "leadingAnchor");
  v53 = v1027;
  v54 = objc_msgSend(*(id *)&v1[v1027], "leadingAnchor");
  v55 = objc_msgSend(v52, "constraintEqualToAnchor:", v54);

  *v51 = v55;
  v56 = *(void **)&v1[v49];
  if (!v56)
  {
LABEL_272:
    __break(1u);
    goto LABEL_273;
  }
  v57 = objc_msgSend(v56, "trailingAnchor");
  v58 = objc_msgSend(*(id *)&v1[v53], "trailingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  v51[1] = v59;
  v60 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
  v61 = objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton], "trailingAnchor");
  v1013 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView;
  v62 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView];
  if (!v62)
  {
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
    goto LABEL_275;
  }
  v1007 = v60;
  v1018 = v35;
  v63 = objc_msgSend(v62, "leadingAnchor");
  v64 = v1024;
  if (qword_10119B960 != -1)
    swift_once(&qword_10119B960, sub_10012C454);
  v65 = objc_msgSend(v61, "constraintEqualToAnchor:constant:", v63, -*(double *)&qword_10124C8D8);

  v51[2] = v65;
  v1008 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
  v66 = objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton], "leadingAnchor");
  v67 = *(void **)&v1[v1013];
  if (!v67)
    goto LABEL_274;
  v68 = objc_msgSend(v67, "trailingAnchor");
  v69 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v68, *(double *)&qword_10124C8D8);

  v51[3] = v69;
  v70 = v1026;
  sub_10004BA5C();
  v71 = v70;
  v72 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints], v1036, 1, 0);
  v73 = *(_QWORD *)v72;
  *(_QWORD *)v72 = v71;
  swift_bridgeObjectRelease(v73);
  v74 = swift_allocObject(v1028, 80, 7);
  v76 = sub_10004D56C(v74, 6);
  v77 = *(void **)&v1[v64];
  if (!v77)
  {
LABEL_275:
    __break(1u);
    goto LABEL_276;
  }
  v78 = v75;
  v1026 = v76;
  v79 = objc_msgSend(v77, "leadingAnchor");
  v80 = *(void **)&v1[v1009];
  if (!v80)
  {
LABEL_276:
    __break(1u);
    goto LABEL_277;
  }
  v81 = objc_msgSend(v80, "leadingAnchor");
  v82 = objc_msgSend(v79, "constraintEqualToAnchor:", v81);

  *v78 = v82;
  v83 = *(void **)&v1[v64];
  if (!v83)
  {
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  v84 = objc_msgSend(v83, "trailingAnchor");
  v85 = objc_msgSend(v1, "view");
  if (!v85)
  {
LABEL_278:
    __break(1u);
    goto LABEL_279;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "trailingAnchor");

  v88 = sub_1005D2C08(2);
  v89 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v87, -v88);

  v78[1] = v89;
  v90 = *(void **)&v1[v64];
  if (!v90)
  {
LABEL_279:
    __break(1u);
    goto LABEL_280;
  }
  v91 = objc_msgSend(v90, "bottomAnchor");
  v92 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView;
  v93 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView];
  if (!v93)
  {
LABEL_280:
    __break(1u);
    goto LABEL_281;
  }
  v94 = objc_msgSend(v93, "topAnchor");
  v95 = objc_msgSend(v91, "constraintEqualToAnchor:", v94);

  v78[2] = v95;
  v96 = *(void **)&v1[v64];
  if (!v96)
  {
LABEL_281:
    __break(1u);
    goto LABEL_282;
  }
  v97 = objc_msgSend(v96, "topAnchor");
  v98 = objc_msgSend(v1, "view");
  if (!v98)
  {
LABEL_282:
    __break(1u);
LABEL_283:
    __break(1u);
    goto LABEL_284;
  }
  v99 = v98;
  v1014 = v92;
  v100 = objc_msgSend(v98, "topAnchor");

  if (qword_10119B948 != -1)
    swift_once(&qword_10119B948, sub_10012C3F4);
  v101 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v100, *(double *)&qword_10124C8C0);

  v78[3] = v101;
  v102 = objc_msgSend(*(id *)&v1[v1007], "leadingAnchor");
  v103 = v1019;
  v104 = objc_msgSend(v1019, "leadingAnchor");
  v105 = objc_msgSend(v102, "constraintGreaterThanOrEqualToAnchor:constant:", v104, -2.0);

  v78[4] = v105;
  v106 = objc_msgSend(*(id *)&v1[v1008], "trailingAnchor");
  v107 = objc_msgSend(v103, "trailingAnchor");
  v108 = objc_msgSend(v106, "constraintGreaterThanOrEqualToAnchor:constant:", v107, 2.0);

  v78[5] = v108;
  v109 = v1026;
  sub_10004BA5C();
  v110 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints] = v109;
  swift_bridgeObjectRelease(v110);
  v111 = swift_allocObject(v1028, 48, 7);
  v1026 = sub_10004D56C(v111, 2);
  v113 = v112;
  v114 = v1027;
  v115 = objc_msgSend(*(id *)&v1[v1027], "leadingAnchor");
  v116 = objc_msgSend(v1, "view");
  if (!v116)
    goto LABEL_283;
  v117 = v116;
  v118 = objc_msgSend(v116, "leadingAnchor");

  v119 = objc_msgSend(v115, "constraintEqualToAnchor:", v118);
  *v113 = v119;
  v120 = objc_msgSend(*(id *)&v1[v114], "trailingAnchor");
  v121 = objc_msgSend(v1, "view");
  if (!v121)
  {
LABEL_284:
    __break(1u);
    goto LABEL_285;
  }
  v122 = v121;
  v123 = objc_msgSend(v121, "trailingAnchor");

  v124 = objc_msgSend(v120, "constraintEqualToAnchor:", v123);
  v113[1] = v124;
  v125 = v1026;
  sub_10004BA5C();
  v126 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints] = v125;
  swift_bridgeObjectRelease(v126);
  v127 = swift_allocObject(v1028, 48, 7);
  v128 = sub_10004D56C(v127, 2);
  v130 = v129;
  v131 = objc_msgSend(*(id *)&v1[v114], "leadingAnchor");
  v132 = objc_msgSend(v1, "view");
  if (!v132)
  {
LABEL_285:
    __break(1u);
    goto LABEL_286;
  }
  v133 = v132;
  v134 = objc_msgSend(v132, "leadingAnchor");

  v135 = objc_msgSend(v131, "constraintEqualToAnchor:constant:", v134, v88);
  *v130 = v135;
  v136 = objc_msgSend(*(id *)&v1[v114], "widthAnchor");
  v1026 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
  v137 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  v138 = v1021;
  if (!v137)
  {
LABEL_286:
    __break(1u);
    goto LABEL_287;
  }
  v139 = objc_msgSend(v137, "widthAnchor");
  v140 = objc_msgSend(v136, "constraintEqualToAnchor:", v139);

  v130[1] = v140;
  sub_10004BA5C();
  v141 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints] = v128;
  swift_bridgeObjectRelease(v141);
  v142 = swift_allocObject(v1028, 56, 7);
  v144 = sub_10004D56C(v142, 3);
  v145 = v1023;
  v146 = *(void **)&v1[v1023];
  if (!v146)
  {
LABEL_287:
    __break(1u);
    goto LABEL_288;
  }
  v147 = v143;
  v148 = objc_msgSend(v146, "centerXAnchor");
  v149 = objc_msgSend(*(id *)&v1[v1027], "centerXAnchor");
  v150 = objc_msgSend(v148, "constraintEqualToAnchor:", v149);

  *v147 = v150;
  v151 = *(void **)&v1[v145];
  if (!v151)
  {
LABEL_288:
    __break(1u);
    goto LABEL_289;
  }
  v152 = objc_msgSend(v151, "widthAnchor");
  v153 = objc_msgSend(v152, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 24]);

  v147[1] = v153;
  v154 = *(void **)&v1[v145];
  if (!v154)
  {
LABEL_289:
    __break(1u);
    goto LABEL_290;
  }
  v155 = objc_msgSend(v154, "heightAnchor");
  v156 = objc_msgSend(v155, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 32]);

  v147[2] = v156;
  sub_10004BA5C();
  v157 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints], v1037, 1, 0);
  v158 = *v157;
  *v157 = v144;
  swift_bridgeObjectRelease(v158);
  v159 = swift_allocObject(v1028, 64, 7);
  v161 = sub_10004D56C(v159, 4);
  v162 = *(void **)&v1[v138];
  if (!v162)
  {
LABEL_290:
    __break(1u);
    goto LABEL_291;
  }
  v163 = v160;
  v164 = objc_msgSend(v162, "widthAnchor");
  v165 = objc_msgSend(v164, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 24]);

  *v163 = v165;
  v166 = *(void **)&v1[v138];
  if (!v166)
  {
LABEL_291:
    __break(1u);
    goto LABEL_292;
  }
  v167 = objc_msgSend(v166, "heightAnchor");
  v168 = objc_msgSend(v167, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 32]);

  v163[1] = v168;
  v169 = *(void **)&v1[v138];
  if (!v169)
  {
LABEL_292:
    __break(1u);
    goto LABEL_293;
  }
  v1022 = v161;
  v170 = objc_msgSend(v169, "centerXAnchor");
  v171 = v1027;
  v172 = objc_msgSend(*(id *)&v1[v1027], "centerXAnchor");
  v173 = objc_msgSend(v170, "constraintEqualToAnchor:", v172);

  v163[2] = v173;
  v174 = *(void **)&v1[v138];
  if (!v174)
  {
LABEL_293:
    __break(1u);
    goto LABEL_294;
  }
  v175 = objc_msgSend(v174, "topAnchor");
  v176 = objc_msgSend(*(id *)&v1[v171], "topAnchor");
  v177 = objc_msgSend(v175, "constraintEqualToAnchor:constant:", v176, *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 16]);

  v163[3] = v177;
  v178 = v1022;
  sub_10004BA5C();
  v179 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints] = v178;
  *(_QWORD *)&v180 = swift_bridgeObjectRelease(v179).n128_u64[0];
  v181 = *(void **)&v1[v138];
  if (!v181)
  {
LABEL_294:
    __break(1u);
    goto LABEL_295;
  }
  v182 = objc_msgSend(v181, "topAnchor", v180);
  v183 = objc_msgSend(*(id *)&v1[v171], "safeAreaLayoutGuide");
  v184 = objc_msgSend(v183, "topAnchor");

  v185 = objc_msgSend(v182, "constraintEqualToAnchor:constant:", v184, sub_1005D2C08(v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]));
  v186 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint] = v185;

  v187 = swift_allocObject(v1028, 64, 7);
  v188 = sub_10004D56C(v187, 4);
  v190 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint];
  if (!v190)
  {
LABEL_295:
    __break(1u);
    goto LABEL_296;
  }
  v191 = v189;
  *v189 = v190;
  v192 = v1021;
  v193 = *(void **)&v1[v1021];
  if (!v193)
  {
LABEL_296:
    __break(1u);
    goto LABEL_297;
  }
  v194 = v188;
  v195 = v190;
  v196 = objc_msgSend(v193, "leadingAnchor");
  v197 = objc_msgSend(*(id *)&v1[v1027], "leadingAnchor");
  v198 = objc_msgSend(v196, "constraintEqualToAnchor:constant:", v197, sub_1005D2C08(v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]));

  v191[1] = v198;
  v199 = *(void **)&v1[v192];
  if (!v199)
  {
LABEL_297:
    __break(1u);
LABEL_298:
    __break(1u);
    goto LABEL_299;
  }
  v200 = v192;
  v201 = objc_msgSend(v199, "widthAnchor");
  if (qword_10119B950 != -1)
    swift_once(&qword_10119B950, sub_10012C414);
  v202 = objc_msgSend(v201, "constraintEqualToConstant:", *(double *)&qword_10124C8C8);

  v191[2] = v202;
  v203 = *(void **)&v1[v192];
  if (!v203)
    goto LABEL_298;
  v204 = objc_msgSend(v203, "heightAnchor");
  v205 = *(void **)&v1[v192];
  if (!v205)
  {
LABEL_299:
    __break(1u);
    goto LABEL_300;
  }
  v206 = objc_msgSend(v205, "widthAnchor");
  v207 = objc_msgSend(v204, "constraintEqualToAnchor:", v206);

  v191[3] = v207;
  sub_10004BA5C();
  v208 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints] = v194;
  swift_bridgeObjectRelease(v208);
  v209 = swift_allocObject(v1028, 64, 7);
  v211 = sub_10004D56C(v209, 4);
  v212 = *(void **)&v1[v200];
  if (!v212)
  {
LABEL_300:
    __break(1u);
    goto LABEL_301;
  }
  v213 = v210;
  v214 = objc_msgSend(v212, "widthAnchor");
  v215 = objc_msgSend(v1, "view");
  if (!v215)
  {
LABEL_301:
    __break(1u);
    goto LABEL_302;
  }
  v216 = v215;
  v217 = objc_msgSend(v215, "widthAnchor");

  v218 = objc_msgSend(v214, "constraintEqualToAnchor:", v217);
  *v213 = v218;
  v219 = *(void **)&v1[v200];
  if (!v219)
  {
LABEL_302:
    __break(1u);
    goto LABEL_303;
  }
  v220 = objc_msgSend(v219, "heightAnchor");
  v221 = objc_msgSend(v1, "view");
  if (!v221)
  {
LABEL_303:
    __break(1u);
    goto LABEL_304;
  }
  v222 = v221;
  v223 = objc_msgSend(v221, "heightAnchor");

  v224 = objc_msgSend(v220, "constraintEqualToAnchor:", v223);
  v213[1] = v224;
  v225 = *(void **)&v1[v200];
  if (!v225)
  {
LABEL_304:
    __break(1u);
    goto LABEL_305;
  }
  v226 = objc_msgSend(v225, "centerXAnchor");
  v227 = objc_msgSend(v1, "view");
  if (!v227)
  {
LABEL_305:
    __break(1u);
    goto LABEL_306;
  }
  v228 = v227;
  v229 = objc_msgSend(v227, "centerXAnchor");

  v230 = objc_msgSend(v226, "constraintEqualToAnchor:", v229);
  v213[2] = v230;
  v231 = *(void **)&v1[v200];
  if (!v231)
  {
LABEL_306:
    __break(1u);
    goto LABEL_307;
  }
  v232 = objc_msgSend(v231, "topAnchor");
  v233 = objc_msgSend(v1, "view");
  if (!v233)
  {
LABEL_307:
    __break(1u);
    goto LABEL_308;
  }
  v234 = v233;
  v235 = objc_msgSend(v233, "topAnchor");

  v236 = objc_msgSend(v232, "constraintEqualToAnchor:", v235);
  v213[3] = v236;
  sub_10004BA5C();
  v237 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints] = v211;
  *(_QWORD *)&v238 = swift_bridgeObjectRelease(v237).n128_u64[0];
  v239 = *(void **)&v1[v1025];
  if (!v239)
  {
LABEL_308:
    __break(1u);
    goto LABEL_309;
  }
  v240 = objc_msgSend(v239, "topAnchor", v238);
  v241 = *(void **)&v1[v1023];
  if (!v241)
  {
LABEL_309:
    __break(1u);
    goto LABEL_310;
  }
  v242 = objc_msgSend(v241, "bottomAnchor");
  v243 = objc_msgSend(v240, "constraintEqualToAnchor:", v242);

  LODWORD(v244) = 1148829696;
  v245 = objc_msgSend(v243, "withPriority:", v244);

  v246 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint] = v245;

  v247 = *(void **)&v1[v1025];
  if (!v247)
  {
LABEL_310:
    __break(1u);
    goto LABEL_311;
  }
  v248 = objc_msgSend(v247, "centerYAnchor");
  v249 = v1020;
  v250 = objc_msgSend(v1020, "centerYAnchor");
  v251 = objc_msgSend(v248, "constraintEqualToAnchor:", v250);

  LODWORD(v252) = 1148829696;
  v253 = objc_msgSend(v251, "withPriority:", v252);

  v254 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint] = v253;

  v255 = objc_msgSend(v249, "heightAnchor");
  v256 = objc_msgSend(v255, "constraintEqualToConstant:", 90.0);

  v257 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint] = v256;

  v258 = swift_allocObject(v1028, 96, 7);
  v260 = sub_10004D56C(v258, 8);
  v1011 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel;
  v261 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v261)
  {
LABEL_311:
    __break(1u);
    goto LABEL_312;
  }
  v262 = v259;
  v263 = objc_msgSend(v261, "leadingAnchor");
  v264 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView;
  v265 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v265)
  {
LABEL_312:
    __break(1u);
LABEL_313:
    __break(1u);
    goto LABEL_314;
  }
  v266 = objc_msgSend(v265, "leadingAnchor");
  if (qword_10119B988 != -1)
    swift_once(&qword_10119B988, sub_10012C53C);
  v267 = objc_msgSend(v263, "constraintEqualToAnchor:constant:", v266, *((double *)&xmmword_1011A1A08 + 1));

  *v262 = v267;
  v268 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint];
  if (!v268)
    goto LABEL_313;
  v262[1] = v268;
  v269 = v1025;
  v270 = v1026;
  v271 = *(void **)&v1[v1025];
  v272 = v1020;
  if (!v271)
  {
LABEL_314:
    __break(1u);
    goto LABEL_315;
  }
  v273 = v268;
  v274 = objc_msgSend(v271, "centerYAnchor");
  v275 = objc_msgSend(v272, "centerYAnchor");
  v276 = objc_msgSend(v274, "constraintGreaterThanOrEqualToAnchor:", v275);

  v262[2] = v276;
  v277 = *(void **)&v1[v269];
  if (!v277)
  {
LABEL_315:
    __break(1u);
    goto LABEL_316;
  }
  v278 = objc_msgSend(v277, "leadingAnchor");
  v279 = *(void **)&v1[v270];
  if (!v279)
  {
LABEL_316:
    __break(1u);
    goto LABEL_317;
  }
  v280 = objc_msgSend(v279, "leadingAnchor");
  v281 = objc_msgSend(v278, "constraintEqualToAnchor:constant:", v280, -*((double *)&xmmword_1011A1A08 + 1));

  v262[3] = v281;
  v282 = *(void **)&v1[v1025];
  if (!v282)
  {
LABEL_317:
    __break(1u);
    goto LABEL_318;
  }
  v283 = objc_msgSend(v282, "trailingAnchor");
  v284 = *(void **)&v1[v270];
  if (!v284)
  {
LABEL_318:
    __break(1u);
    goto LABEL_319;
  }
  v285 = objc_msgSend(v284, "trailingAnchor");
  v286 = objc_msgSend(v283, "constraintEqualToAnchor:", v285);

  v262[4] = v286;
  v287 = *(void **)&v1[v1025];
  if (!v287)
  {
LABEL_319:
    __break(1u);
    goto LABEL_320;
  }
  v288 = objc_msgSend(v287, "heightAnchor");
  v1006 = OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton;
  v289 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton];
  if (!v289)
  {
LABEL_320:
    __break(1u);
    goto LABEL_321;
  }
  v290 = objc_msgSend(v289, "heightAnchor");
  v291 = objc_msgSend(v288, "constraintGreaterThanOrEqualToAnchor:", v290);

  v262[5] = v291;
  v1005 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView;
  v292 = objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView], "leadingAnchor");
  v1004 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView;
  v293 = objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView], "leadingAnchor");
  v294 = objc_msgSend(v292, "constraintEqualToAnchor:constant:", v293, *((double *)&xmmword_1011A1A08 + 1));

  v262[6] = v294;
  v1022 = OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView;
  v295 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView];
  if (!v295)
  {
LABEL_321:
    __break(1u);
    goto LABEL_322;
  }
  v296 = objc_msgSend(v295, "centerYAnchor");
  v297 = objc_msgSend(v1010, "centerYAnchor");
  v298 = objc_msgSend(v296, "constraintEqualToAnchor:", v297);

  v262[7] = v298;
  sub_10004BA5C();
  v299 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints], v1038, 1, 0);
  v300 = *v299;
  *v299 = v260;
  swift_bridgeObjectRelease(v300);
  v301 = swift_allocObject(v1028, 88, 7);
  v303 = sub_10004D56C(v301, 7);
  v304 = *(void **)&v1[v1011];
  if (!v304)
  {
LABEL_322:
    __break(1u);
    goto LABEL_323;
  }
  v305 = v302;
  v306 = objc_msgSend(v304, "leadingAnchor");
  v307 = *(void **)&v1[v264];
  if (!v307)
  {
LABEL_323:
    __break(1u);
LABEL_324:
    __break(1u);
    goto LABEL_325;
  }
  v308 = objc_msgSend(v307, "leadingAnchor");
  if (qword_10119B990 != -1)
    swift_once(&qword_10119B990, sub_10012C554);
  v309 = objc_msgSend(v306, "constraintEqualToAnchor:constant:", v308, *((double *)&xmmword_1011A1A28 + 1));

  *v305 = v309;
  v310 = *(void **)&v1[v1025];
  if (!v310)
    goto LABEL_324;
  v311 = objc_msgSend(v310, "centerYAnchor");
  v312 = *(void **)&v1[v1021];
  if (!v312)
  {
LABEL_325:
    __break(1u);
    goto LABEL_326;
  }
  v313 = objc_msgSend(v312, "centerYAnchor");
  v314 = objc_msgSend(v311, "constraintEqualToAnchor:constant:", v313, 3.0);

  v305[1] = v314;
  v1017 = OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView;
  v315 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView];
  if (!v315)
  {
LABEL_326:
    __break(1u);
    goto LABEL_327;
  }
  v316 = objc_msgSend(v315, "leadingAnchor");
  v317 = objc_msgSend(v1, "view");
  if (!v317)
  {
LABEL_327:
    __break(1u);
    goto LABEL_328;
  }
  v318 = v317;
  v319 = objc_msgSend(v317, "layoutMarginsGuide");

  v320 = objc_msgSend(v319, "leadingAnchor");
  v321 = objc_msgSend(v316, "constraintEqualToAnchor:constant:", v320, *(double *)&qword_10124C8C8);

  v305[2] = v321;
  v322 = *(void **)&v1[v1025];
  if (!v322)
  {
LABEL_328:
    __break(1u);
    goto LABEL_329;
  }
  v323 = objc_msgSend(v322, "trailingAnchor");
  v324 = *(void **)&v1[v1026];
  if (!v324)
  {
LABEL_329:
    __break(1u);
    goto LABEL_330;
  }
  v325 = objc_msgSend(v324, "trailingAnchor");
  v326 = objc_msgSend(v323, "constraintEqualToAnchor:", v325);

  v305[3] = v326;
  v327 = *(void **)&v1[v1025];
  if (!v327)
  {
LABEL_330:
    __break(1u);
    goto LABEL_331;
  }
  v328 = objc_msgSend(v327, "heightAnchor");
  v329 = *(void **)&v1[v1006];
  if (!v329)
  {
LABEL_331:
    __break(1u);
    goto LABEL_332;
  }
  v330 = objc_msgSend(v329, "heightAnchor");
  v331 = objc_msgSend(v328, "constraintGreaterThanOrEqualToAnchor:", v330);

  v305[4] = v331;
  v332 = objc_msgSend(*(id *)&v1[v1005], "leadingAnchor");
  v333 = objc_msgSend(*(id *)&v1[v1004], "leadingAnchor");
  v334 = objc_msgSend(v332, "constraintEqualToAnchor:constant:", v333, *((double *)&xmmword_1011A1A28 + 1));

  v305[5] = v334;
  v335 = *(void **)&v1[v1022];
  if (!v335)
  {
LABEL_332:
    __break(1u);
    goto LABEL_333;
  }
  v336 = objc_msgSend(v335, "centerYAnchor");
  v337 = *(void **)&v1[v1025];
  v338 = &selRef_setMetricsOverlay_;
  if (!v337)
  {
LABEL_333:
    __break(1u);
    goto LABEL_334;
  }
  v339 = objc_msgSend(v337, "centerYAnchor");
  v340 = objc_msgSend(v336, "constraintEqualToAnchor:", v339);

  v305[6] = v340;
  sub_10004BA5C();
  v341 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints], v1039, 1, 0);
  v342 = *v341;
  *v341 = v303;
  *(_QWORD *)&v343 = swift_bridgeObjectRelease(v342).n128_u64[0];
  v1003 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton;
  v344 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v344)
  {
LABEL_334:
    __break(1u);
LABEL_335:
    __break(1u);
    goto LABEL_336;
  }
  v345 = objc_msgSend(v344, "titleLabel", v343);
  p_base_prots = (__objc2_prot_list **)(&JSAccount + 40);
  if (v345)
  {
    v347 = v345;
    v348 = objc_msgSend(v345, "leadingAnchor");
    v349 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView;
    v350 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
    if (!v350)
    {
LABEL_467:
      __break(1u);
      goto LABEL_468;
    }
    v351 = objc_msgSend(v350, "leadingAnchor");
    v352 = objc_msgSend(v348, "constraintEqualToAnchor:constant:", v351, *((double *)&xmmword_1011A1A08 + 1));

    v353 = sub_10011F840((uint64_t)v1034);
    sub_10043B7A0(v352);
    ((void (*)(_OWORD *, _QWORD))v353)(v1034, 0);
    v354 = objc_msgSend(v347, "leadingAnchor");
    v355 = *(void **)&v1[v349];
    if (!v355)
    {
LABEL_468:
      __break(1u);
      goto LABEL_469;
    }
    v356 = objc_msgSend(v355, "leadingAnchor");
    v357 = objc_msgSend(v354, "constraintEqualToAnchor:constant:", v356, *((double *)&xmmword_1011A1A28 + 1));

    v358 = sub_10011F9DC((uint64_t)v1034);
    sub_10043B7A0(v357);
    ((void (*)(_OWORD *, _QWORD))v358)(v1034, 0);

    p_base_prots = &JSAccount.base_prots;
    v338 = &selRef_setMetricsOverlay_;
  }
  v1001 = v264;
  v359 = *(void **)&v1[v1026];
  if (!v359)
    goto LABEL_335;
  v360 = objc_msgSend(v359, v338[160]);
  v361 = objc_msgSend(v360, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 40]);

  v362 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint] = v361;

  v996 = OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton;
  v363 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
  v365 = v1018;
  v364 = v1019;
  if (!v363)
  {
LABEL_336:
    __break(1u);
    goto LABEL_337;
  }
  v366 = objc_msgSend(v363, v338[160]);
  v367 = objc_msgSend(v366, "constraintEqualToConstant:", 40.0);

  v368 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint] = v367;

  v369 = objc_msgSend(v364, "heightAnchor");
  v370 = objc_msgSend(v369, "constraintEqualToConstant:", 0.0);

  v371 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint] = v370;

  v1015 = OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider;
  v372 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider];
  if (!v372)
  {
LABEL_337:
    __break(1u);
    goto LABEL_338;
  }
  v373 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v372
                                                               + OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide), (SEL)p_base_prots[484]));
  v374 = objc_msgSend(v365, "topAnchor");
  v375 = objc_msgSend(v373, "constraintEqualToAnchor:constant:", v374, *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 88]);

  v376 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint] = v375;

  v377 = objc_msgSend(v365, "heightAnchor");
  v378 = objc_msgSend(v377, "constraintEqualToConstant:", 108.0);

  v379 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint] = v378;

  v380 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  v381 = objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl], "leadingAnchor");
  v382 = objc_msgSend(v1, "view");
  if (!v382)
  {
LABEL_338:
    __break(1u);
    goto LABEL_339;
  }
  v383 = v382;
  v384 = objc_msgSend(v382, "layoutMarginsGuide");

  v385 = objc_msgSend(v384, "leadingAnchor");
  v386 = objc_msgSend(v381, "constraintEqualToAnchor:", v385);

  v387 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint] = v386;

  v388 = swift_allocObject(v1028, 104, 7);
  v1000 = sub_10004D56C(v388, 9);
  v390 = v1014;
  v391 = *(void **)&v1[v1014];
  if (!v391)
  {
LABEL_339:
    __break(1u);
    goto LABEL_340;
  }
  v392 = v389;
  v393 = objc_msgSend(v391, "centerXAnchor");
  v1021 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView;
  v394 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView];
  if (!v394)
  {
LABEL_340:
    __break(1u);
    goto LABEL_341;
  }
  v395 = objc_msgSend(v394, "centerXAnchor");
  v396 = objc_msgSend(v393, "constraintEqualToAnchor:", v395);

  *v392 = v396;
  v397 = *(void **)&v1[v390];
  if (!v397)
  {
LABEL_341:
    __break(1u);
LABEL_342:
    __break(1u);
LABEL_343:
    __break(1u);
    goto LABEL_344;
  }
  v398 = objc_msgSend(v397, "widthAnchor");
  if (qword_10119B980 != -1)
    swift_once(&qword_10119B980, sub_10012C52C);
  v399 = objc_msgSend(v398, "constraintEqualToConstant:", *(double *)&qword_1011A1A00 + *(double *)&qword_1011A1A00 + 266.0);

  v392[1] = v399;
  v400 = *(void **)&v1[v390];
  if (!v400)
    goto LABEL_342;
  v401 = objc_msgSend(v400, "heightAnchor");
  if (qword_10119B9B0 != -1)
    swift_once(&qword_10119B9B0, sub_10012C59C);
  v402 = objc_msgSend(v401, "constraintEqualToConstant:", *(double *)&qword_1011A1A60 + *(double *)&qword_1011A1A00 + *(double *)&qword_1011A1A00);

  v392[2] = v402;
  v403 = *(void **)&v1[v390];
  if (!v403)
    goto LABEL_343;
  v1016 = v380;
  v404 = objc_msgSend(v403, "centerYAnchor");
  v405 = objc_msgSend(v365, "centerYAnchor");
  v406 = objc_msgSend(v404, "constraintLessThanOrEqualToAnchor:", v405);

  v392[3] = v406;
  v407 = *(void **)&v1[v390];
  if (!v407)
  {
LABEL_344:
    __break(1u);
    goto LABEL_345;
  }
  v408 = objc_msgSend(v407, "bottomAnchor");
  v409 = *(void **)&v1[v1021];
  if (!v409)
  {
LABEL_345:
    __break(1u);
    goto LABEL_346;
  }
  v410 = objc_msgSend(v409, "safeAreaLayoutGuide");
  v411 = objc_msgSend(v410, "bottomAnchor");

  v412 = objc_msgSend(v408, "constraintGreaterThanOrEqualToAnchor:constant:", v411, *(double *)&qword_1011A1A00 + -14.0);
  v392[4] = v412;
  v413 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel;
  v414 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
  if (!v414)
  {
LABEL_346:
    __break(1u);
    goto LABEL_347;
  }
  v415 = objc_msgSend(v414, "topAnchor");
  v416 = v1016;
  v417 = objc_msgSend(*(id *)&v1[v1016], "bottomAnchor");
  v418 = objc_msgSend(v415, "constraintEqualToAnchor:constant:", v417, 6.0);

  v392[5] = v418;
  v419 = *(void **)&v1[v413];
  if (!v419)
  {
LABEL_347:
    __break(1u);
    goto LABEL_348;
  }
  v420 = objc_msgSend(v419, "centerXAnchor");
  v421 = objc_msgSend(*(id *)&v1[v416], "centerXAnchor");
  v422 = objc_msgSend(v420, "constraintEqualToAnchor:", v421);

  v392[6] = v422;
  v423 = *(void **)&v1[v413];
  if (!v423)
  {
LABEL_348:
    __break(1u);
    goto LABEL_349;
  }
  v424 = objc_msgSend(v423, "leadingAnchor");
  v1012 = OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton;
  v425 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
  if (!v425)
  {
LABEL_349:
    __break(1u);
    goto LABEL_350;
  }
  v426 = objc_msgSend(v425, "trailingAnchor");
  v427 = objc_msgSend(v424, "constraintGreaterThanOrEqualToAnchor:", v426);

  v392[7] = v427;
  v428 = *(void **)&v1[v413];
  if (!v428)
  {
LABEL_350:
    __break(1u);
    goto LABEL_351;
  }
  v429 = objc_msgSend(v428, "trailingAnchor");
  v1002 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton;
  v430 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
  if (!v430)
  {
LABEL_351:
    __break(1u);
    goto LABEL_352;
  }
  v431 = objc_msgSend(v430, "leadingAnchor");
  v432 = objc_msgSend(v429, "constraintLessThanOrEqualToAnchor:", v431);

  v392[8] = v432;
  v433 = v1000;
  sub_10004BA5C();
  v434 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints] = v433;
  swift_bridgeObjectRelease(v434);
  v435 = swift_allocObject(v1028, 96, 7);
  v436 = sub_10004D56C(v435, 8);
  v438 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint];
  v439 = v1016;
  if (!v438)
  {
LABEL_352:
    __break(1u);
    goto LABEL_353;
  }
  v440 = v436;
  v441 = v437;
  *v437 = v438;
  v442 = *(void **)&v1[v439];
  v443 = v438;
  v444 = objc_msgSend(v442, "centerYAnchor");
  v445 = *(void **)&v1[v1012];
  if (!v445)
  {
LABEL_353:
    __break(1u);
    goto LABEL_354;
  }
  v446 = objc_msgSend(v445, "centerYAnchor");
  v447 = objc_msgSend(v444, "constraintEqualToAnchor:", v446);

  v441[1] = v447;
  v448 = objc_msgSend(*(id *)&v1[v439], "trailingAnchor");
  v449 = *(void **)&v1[v1014];
  if (!v449)
  {
LABEL_354:
    __break(1u);
    goto LABEL_355;
  }
  v450 = objc_msgSend(v449, "leadingAnchor");
  v451 = objc_msgSend(v448, "constraintLessThanOrEqualToAnchor:", v450);

  v441[2] = v451;
  v452 = *(void **)&v1[v413];
  if (!v452)
  {
LABEL_355:
    __break(1u);
    goto LABEL_356;
  }
  v453 = objc_msgSend(v452, "leadingAnchor");
  v454 = objc_msgSend(*(id *)&v1[v439], "trailingAnchor");
  v455 = objc_msgSend(v453, "constraintEqualToAnchor:constant:", v454, 6.0);

  v441[3] = v455;
  v456 = *(void **)&v1[v413];
  if (!v456)
  {
LABEL_356:
    __break(1u);
    goto LABEL_357;
  }
  v457 = objc_msgSend(v456, "centerYAnchor");
  v458 = objc_msgSend(*(id *)&v1[v439], "centerYAnchor");
  v459 = objc_msgSend(v457, "constraintEqualToAnchor:", v458);

  v441[4] = v459;
  v460 = *(void **)&v1[v413];
  if (!v460)
  {
LABEL_357:
    __break(1u);
    goto LABEL_358;
  }
  v461 = objc_msgSend(v460, "trailingAnchor");
  v462 = *(void **)&v1[v1012];
  if (!v462)
  {
LABEL_358:
    __break(1u);
    goto LABEL_359;
  }
  v463 = objc_msgSend(v462, "leadingAnchor");
  v464 = objc_msgSend(v461, "constraintLessThanOrEqualToAnchor:", v463);

  v441[5] = v464;
  v465 = v1014;
  v466 = *(void **)&v1[v1014];
  if (!v466)
  {
LABEL_359:
    __break(1u);
    goto LABEL_360;
  }
  v467 = objc_msgSend(v466, "topAnchor");
  v468 = objc_msgSend(v1018, "topAnchor");
  v469 = objc_msgSend(v467, "constraintEqualToAnchor:constant:", v468, -*(double *)&qword_1011A1A00);

  v441[6] = v469;
  v470 = *(void **)&v1[v465];
  if (!v470)
  {
LABEL_360:
    __break(1u);
    goto LABEL_361;
  }
  v471 = objc_msgSend(v470, "trailingAnchor");
  v472 = objc_msgSend(v1, "view");
  if (!v472)
  {
LABEL_361:
    __break(1u);
    goto LABEL_362;
  }
  v473 = v472;
  v474 = objc_msgSend(v472, "layoutMarginsGuide");

  v475 = objc_msgSend(v474, "trailingAnchor");
  v476 = objc_msgSend(v471, "constraintEqualToAnchor:constant:", v475, *(double *)&qword_1011A1A00);

  v441[7] = v476;
  sub_10004BA5C();
  v477 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints] = v440;
  swift_bridgeObjectRelease(v477);
  v478 = swift_allocObject(v1028, 48, 7);
  v480 = sub_10004D56C(v478, 2);
  v481 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
  v482 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
  if (!v482)
  {
LABEL_362:
    __break(1u);
    goto LABEL_363;
  }
  v483 = v479;
  v484 = objc_msgSend(v482, "centerXAnchor");
  v485 = *(void **)&v1[v1026];
  if (!v485)
  {
LABEL_363:
    __break(1u);
    goto LABEL_364;
  }
  v486 = objc_msgSend(v485, "centerXAnchor");
  v487 = objc_msgSend(v484, "constraintEqualToAnchor:", v486);

  *v483 = v487;
  v488 = *(void **)&v1[v481];
  if (!v488)
  {
LABEL_364:
    __break(1u);
    goto LABEL_365;
  }
  v489 = objc_msgSend(v488, "centerYAnchor");
  v490 = *(_QWORD *)&v1[v1026];
  if (!v490)
  {
LABEL_365:
    __break(1u);
    goto LABEL_366;
  }
  v491 = v489;
  v492 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v490
                                                               + OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel), "centerYAnchor"));
  v493 = objc_msgSend(v491, "constraintEqualToAnchor:", v492);

  v483[1] = v493;
  sub_10004BA5C();
  v494 = v480;
  v495 = swift_allocObject(v1028, 608, 7);
  v1014 = sub_10004D56C(v495, 72);
  v497 = v496;
  v498 = v1027;
  v499 = objc_msgSend(*(id *)&v1[v1027], "topAnchor");
  v500 = objc_msgSend(v1, "view");
  if (!v500)
  {
LABEL_366:
    __break(1u);
    goto LABEL_367;
  }
  v501 = v500;
  v1000 = v494;
  v502 = objc_msgSend(v500, "topAnchor");

  v503 = objc_msgSend(v499, "constraintEqualToAnchor:", v502);
  *v497 = v503;
  v504 = objc_msgSend(*(id *)&v1[v498], "bottomAnchor");
  v505 = objc_msgSend(v1, "view");
  if (!v505)
  {
LABEL_367:
    __break(1u);
    goto LABEL_368;
  }
  v506 = v505;
  v507 = objc_msgSend(v505, "bottomAnchor");

  v508 = objc_msgSend(v504, "constraintEqualToAnchor:", v507);
  v497[1] = v508;
  v509 = OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton;
  v510 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton];
  if (!v510)
  {
LABEL_368:
    __break(1u);
    goto LABEL_369;
  }
  v511 = objc_msgSend(v510, "topAnchor");
  v512 = objc_msgSend(v1, "view");
  if (!v512)
  {
LABEL_369:
    __break(1u);
    goto LABEL_370;
  }
  v513 = v512;
  v514 = objc_msgSend(v512, "safeAreaLayoutGuide");

  v515 = objc_msgSend(v514, "topAnchor");
  v516 = objc_msgSend(v511, "constraintEqualToAnchor:", v515);

  v497[2] = v516;
  v517 = *(void **)&v1[v509];
  if (!v517)
  {
LABEL_370:
    __break(1u);
    goto LABEL_371;
  }
  v518 = objc_msgSend(v517, "bottomAnchor");
  v519 = objc_msgSend(*(id *)&v1[v1027], "safeAreaLayoutGuide");
  v520 = objc_msgSend(v519, "topAnchor");

  v521 = objc_msgSend(v518, "constraintEqualToAnchor:constant:", v520, sub_1005D2C08(v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]));
  v497[3] = v521;
  v522 = *(void **)&v1[v509];
  if (!v522)
  {
LABEL_371:
    __break(1u);
    goto LABEL_372;
  }
  v523 = objc_msgSend(v522, "leadingAnchor");
  v524 = objc_msgSend(v1, "view");
  if (!v524)
  {
LABEL_372:
    __break(1u);
    goto LABEL_373;
  }
  v525 = v524;
  v526 = objc_msgSend(v524, "leadingAnchor");

  v527 = objc_msgSend(v523, "constraintEqualToAnchor:", v526);
  v497[4] = v527;
  v528 = *(void **)&v1[v509];
  if (!v528)
  {
LABEL_373:
    __break(1u);
    goto LABEL_374;
  }
  v529 = objc_msgSend(v528, "trailingAnchor");
  v530 = objc_msgSend(v1, "view");
  if (!v530)
  {
LABEL_374:
    __break(1u);
    goto LABEL_375;
  }
  v531 = v530;
  v532 = objc_msgSend(v530, "trailingAnchor");

  v533 = objc_msgSend(v529, "constraintEqualToAnchor:", v532);
  v497[5] = v533;
  v534 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint];
  if (!v534)
  {
LABEL_375:
    __break(1u);
    goto LABEL_376;
  }
  v497[6] = v534;
  v535 = *(void **)&v1[v1009];
  if (!v535)
  {
LABEL_376:
    __break(1u);
    goto LABEL_377;
  }
  v536 = v534;
  v537 = objc_msgSend(v535, "centerXAnchor");
  v538 = objc_msgSend(v1, "view");
  if (!v538)
  {
LABEL_377:
    __break(1u);
    goto LABEL_378;
  }
  v539 = v538;
  v540 = objc_msgSend(v538, "centerXAnchor");

  v541 = objc_msgSend(v537, "constraintEqualToAnchor:", v540);
  v497[7] = v541;
  v542 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint];
  v543 = v1020;
  if (!v542)
  {
LABEL_378:
    __break(1u);
    goto LABEL_379;
  }
  v497[8] = v542;
  v544 = v542;
  v545 = objc_msgSend(v543, "leadingAnchor");
  v546 = v1026;
  v547 = *(void **)&v1[v1026];
  if (!v547)
  {
LABEL_379:
    __break(1u);
    goto LABEL_380;
  }
  v548 = objc_msgSend(v547, "leadingAnchor");
  v549 = objc_msgSend(v545, "constraintEqualToAnchor:", v548);

  v497[9] = v549;
  v550 = objc_msgSend(v543, "trailingAnchor");
  v551 = *(void **)&v1[v546];
  if (!v551)
  {
LABEL_380:
    __break(1u);
    goto LABEL_381;
  }
  v552 = objc_msgSend(v551, "trailingAnchor");
  v553 = objc_msgSend(v550, "constraintEqualToAnchor:", v552);

  v497[10] = v553;
  v554 = objc_msgSend(v543, "topAnchor");
  v555 = *(void **)&v1[v1023];
  v556 = v1025;
  if (!v555)
  {
LABEL_381:
    __break(1u);
    goto LABEL_382;
  }
  v557 = objc_msgSend(v555, "bottomAnchor");
  v558 = objc_msgSend(v554, "constraintEqualToAnchor:", v557);

  v497[11] = v558;
  v559 = objc_msgSend(v543, "bottomAnchor");
  v560 = *(_QWORD *)&v1[v1026];
  if (!v560)
  {
LABEL_382:
    __break(1u);
    goto LABEL_383;
  }
  v561 = v559;
  v562 = *(_QWORD **)(v560 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
  v563 = *(uint64_t (**)(void))((swift_isaMask & *v562) + 0x170);
  v564 = v562;
  v565 = (void *)v563();

  v566 = objc_msgSend(v565, "topAnchor");
  v567 = objc_msgSend(v561, "constraintEqualToAnchor:constant:", v566, 10.0);

  LODWORD(v568) = 1144750080;
  v569 = objc_msgSend(v567, "withPriority:", v568);

  v497[12] = v569;
  v570 = v1006;
  v571 = *(void **)&v1[v1006];
  if (!v571)
  {
LABEL_383:
    __break(1u);
    goto LABEL_384;
  }
  v572 = objc_msgSend(v571, "heightAnchor");
  v573 = *(void **)&v1[v570];
  if (!v573)
  {
LABEL_384:
    __break(1u);
    goto LABEL_385;
  }
  v574 = objc_msgSend(v573, "widthAnchor");
  v575 = objc_msgSend(v572, "constraintEqualToAnchor:", v574);

  v497[13] = v575;
  v576 = *(void **)&v1[v1022];
  if (!v576)
  {
LABEL_385:
    __break(1u);
    goto LABEL_386;
  }
  v577 = objc_msgSend(v576, "heightAnchor");
  v578 = *(void **)&v1[v570];
  if (!v578)
  {
LABEL_386:
    __break(1u);
    goto LABEL_387;
  }
  v579 = objc_msgSend(v578, "widthAnchor");
  v580 = objc_msgSend(v577, "constraintEqualToAnchor:", v579);

  v497[14] = v580;
  v581 = *(void **)&v1[v1022];
  if (!v581)
  {
LABEL_387:
    __break(1u);
    goto LABEL_388;
  }
  v582 = objc_msgSend(v581, "trailingAnchor");
  v583 = *(void **)&v1[v556];
  if (!v583)
  {
LABEL_388:
    __break(1u);
    goto LABEL_389;
  }
  v584 = objc_msgSend(v583, "trailingAnchor");
  v585 = objc_msgSend(v582, "constraintEqualToAnchor:", v584);

  v497[15] = v585;
  v586 = OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton;
  v587 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
  if (!v587)
  {
LABEL_389:
    __break(1u);
    goto LABEL_390;
  }
  v588 = objc_msgSend(v587, "widthAnchor");
  v589 = *(void **)&v1[v586];
  if (!v589)
  {
LABEL_390:
    __break(1u);
    goto LABEL_391;
  }
  v590 = objc_msgSend(v589, "heightAnchor");
  v591 = objc_msgSend(v588, "constraintGreaterThanOrEqualToAnchor:", v590);

  v497[16] = v591;
  v592 = *(void **)&v1[v586];
  if (!v592)
  {
LABEL_391:
    __break(1u);
    goto LABEL_392;
  }
  v593 = objc_msgSend(v592, "heightAnchor");
  v594 = *(void **)&v1[v1022];
  if (!v594)
  {
LABEL_392:
    __break(1u);
    goto LABEL_393;
  }
  v595 = objc_msgSend(v594, "heightAnchor");
  v596 = objc_msgSend(v593, "constraintEqualToAnchor:", v595);

  v497[17] = v596;
  v597 = *(void **)&v1[v1011];
  if (!v597)
  {
LABEL_393:
    __break(1u);
    goto LABEL_394;
  }
  v598 = objc_msgSend(v597, "topAnchor");
  v599 = *(void **)&v1[v1001];
  if (!v599)
  {
LABEL_394:
    __break(1u);
    goto LABEL_395;
  }
  v600 = objc_msgSend(v599, "topAnchor");
  v601 = objc_msgSend(v598, "constraintEqualToAnchor:", v600);

  v497[18] = v601;
  v602 = *(void **)&v1[v1003];
  if (!v602)
  {
LABEL_395:
    __break(1u);
    goto LABEL_396;
  }
  v603 = objc_msgSend(v602, "topAnchor");
  v604 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v604)
  {
LABEL_396:
    __break(1u);
    goto LABEL_397;
  }
  v605 = objc_msgSend(v604, "topAnchor");
  v606 = objc_msgSend(v603, "constraintEqualToAnchor:", v605);

  v497[19] = v606;
  v607 = *(void **)&v1[v1017];
  if (!v607)
  {
LABEL_397:
    __break(1u);
    goto LABEL_398;
  }
  v608 = objc_msgSend(v607, "leadingAnchor");
  v609 = *(void **)&v1[v556];
  if (!v609)
  {
LABEL_398:
    __break(1u);
    goto LABEL_399;
  }
  v610 = objc_msgSend(v609, "leadingAnchor");
  v611 = objc_msgSend(v608, "constraintEqualToAnchor:", v610);

  v497[20] = v611;
  v612 = *(void **)&v1[v1017];
  if (!v612)
  {
LABEL_399:
    __break(1u);
    goto LABEL_400;
  }
  v613 = objc_msgSend(v612, "trailingAnchor");
  v614 = *(void **)&v1[v1022];
  if (!v614)
  {
LABEL_400:
    __break(1u);
    goto LABEL_401;
  }
  v615 = objc_msgSend(v614, "leadingAnchor");
  v616 = objc_msgSend(v613, "constraintEqualToAnchor:constant:", v615, -4.0);

  v497[21] = v616;
  v617 = *(void **)&v1[v1017];
  if (!v617)
  {
LABEL_401:
    __break(1u);
    goto LABEL_402;
  }
  v618 = objc_msgSend(v617, "topAnchor");
  v619 = *(void **)&v1[v556];
  if (!v619)
  {
LABEL_402:
    __break(1u);
    goto LABEL_403;
  }
  v620 = objc_msgSend(v619, "topAnchor");
  v621 = objc_msgSend(v618, "constraintEqualToAnchor:", v620);

  v497[22] = v621;
  v622 = *(void **)&v1[v1017];
  if (!v622)
  {
LABEL_403:
    __break(1u);
    goto LABEL_404;
  }
  v623 = objc_msgSend(v622, "bottomAnchor");
  v624 = *(void **)&v1[v556];
  if (!v624)
  {
LABEL_404:
    __break(1u);
    goto LABEL_405;
  }
  v625 = objc_msgSend(v624, "bottomAnchor");
  v626 = objc_msgSend(v623, "constraintEqualToAnchor:", v625);

  v497[23] = v626;
  v627 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint];
  v628 = v1021;
  if (!v627)
  {
LABEL_405:
    __break(1u);
    goto LABEL_406;
  }
  v497[24] = v627;
  v629 = *(void **)&v1[v1026];
  if (!v629)
  {
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  v630 = v627;
  v631 = objc_msgSend(v629, "centerXAnchor");
  v632 = objc_msgSend(*(id *)&v1[v1027], "centerXAnchor");
  v633 = objc_msgSend(v631, "constraintEqualToAnchor:", v632);

  v497[25] = v633;
  v634 = *(void **)&v1[v628];
  if (!v634)
  {
LABEL_407:
    __break(1u);
    goto LABEL_408;
  }
  v635 = objc_msgSend(v634, "topAnchor");
  v636 = *(_QWORD *)&v1[v1026];
  if (!v636)
  {
LABEL_408:
    __break(1u);
    goto LABEL_409;
  }
  v637 = v635;
  v638 = *(_QWORD **)(v636 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
  v639 = *(uint64_t (**)(void))((swift_isaMask & *v638) + 0x170);
  v640 = v638;
  v641 = (void *)v639();

  v642 = objc_msgSend(v641, "bottomAnchor");
  v643 = objc_msgSend(v637, "constraintEqualToAnchor:", v642);

  v497[26] = v643;
  v644 = *(void **)&v1[v628];
  if (!v644)
  {
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  v645 = objc_msgSend(v644, "leadingAnchor");
  v646 = v1027;
  v647 = objc_msgSend(*(id *)&v1[v1027], "leadingAnchor");
  v648 = objc_msgSend(v645, "constraintEqualToAnchor:", v647);

  v497[27] = v648;
  v649 = *(void **)&v1[v628];
  if (!v649)
  {
LABEL_410:
    __break(1u);
    goto LABEL_411;
  }
  v650 = objc_msgSend(v649, "trailingAnchor");
  v651 = objc_msgSend(*(id *)&v1[v646], "trailingAnchor");
  v652 = objc_msgSend(v650, "constraintEqualToAnchor:", v651);

  v497[28] = v652;
  v653 = *(void **)&v1[v628];
  if (!v653)
  {
LABEL_411:
    __break(1u);
    goto LABEL_412;
  }
  v654 = objc_msgSend(v653, "bottomAnchor");
  v655 = objc_msgSend(*(id *)&v1[v646], "bottomAnchor");
  v656 = objc_msgSend(v654, "constraintEqualToAnchor:", v655);

  v497[29] = v656;
  v657 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint];
  if (!v657)
  {
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  v497[30] = v657;
  v658 = OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton;
  v659 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
  v660 = v996;
  if (!v659)
  {
LABEL_413:
    __break(1u);
    goto LABEL_414;
  }
  v661 = v657;
  v662 = objc_msgSend(v659, "widthAnchor");
  v663 = *(void **)&v1[v660];
  if (!v663)
  {
LABEL_414:
    __break(1u);
    goto LABEL_415;
  }
  v664 = objc_msgSend(v663, "widthAnchor");
  v665 = objc_msgSend(v662, "constraintEqualToAnchor:", v664);

  v497[31] = v665;
  v666 = OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton;
  v667 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
  if (!v667)
  {
LABEL_415:
    __break(1u);
    goto LABEL_416;
  }
  v668 = objc_msgSend(v667, "widthAnchor");
  v669 = *(void **)&v1[v660];
  if (!v669)
  {
LABEL_416:
    __break(1u);
    goto LABEL_417;
  }
  v670 = objc_msgSend(v669, "widthAnchor");
  v671 = objc_msgSend(v668, "constraintEqualToAnchor:", v670);

  v497[32] = v671;
  v672 = *(void **)&v1[v660];
  if (!v672)
  {
LABEL_417:
    __break(1u);
    goto LABEL_418;
  }
  v673 = objc_msgSend(v672, "heightAnchor");
  v674 = *(void **)&v1[v660];
  if (!v674)
  {
LABEL_418:
    __break(1u);
    goto LABEL_419;
  }
  v675 = objc_msgSend(v674, "widthAnchor");
  v676 = objc_msgSend(v673, "constraintEqualToAnchor:", v675);

  v497[33] = v676;
  v677 = *(void **)&v1[v658];
  if (!v677)
  {
LABEL_419:
    __break(1u);
    goto LABEL_420;
  }
  v678 = objc_msgSend(v677, "heightAnchor");
  v679 = *(void **)&v1[v658];
  if (!v679)
  {
LABEL_420:
    __break(1u);
    goto LABEL_421;
  }
  v680 = objc_msgSend(v679, "widthAnchor");
  v681 = objc_msgSend(v678, "constraintEqualToAnchor:", v680);

  v497[34] = v681;
  v682 = *(void **)&v1[v666];
  if (!v682)
  {
LABEL_421:
    __break(1u);
    goto LABEL_422;
  }
  v1025 = v658;
  v683 = objc_msgSend(v682, "heightAnchor");
  v684 = *(void **)&v1[v666];
  if (!v684)
  {
LABEL_422:
    __break(1u);
    goto LABEL_423;
  }
  v685 = objc_msgSend(v684, "widthAnchor");
  v686 = objc_msgSend(v683, "constraintEqualToAnchor:", v685);

  v497[35] = v686;
  v687 = v1019;
  v688 = objc_msgSend(v1019, "leadingAnchor");
  v689 = v1026;
  v690 = *(void **)&v1[v1026];
  if (!v690)
  {
LABEL_423:
    __break(1u);
    goto LABEL_424;
  }
  v691 = objc_msgSend(v690, "leadingAnchor");
  v692 = objc_msgSend(v688, "constraintEqualToAnchor:", v691);

  v497[36] = v692;
  v693 = objc_msgSend(v687, "trailingAnchor");
  v694 = *(void **)&v1[v689];
  if (!v694)
  {
LABEL_424:
    __break(1u);
    goto LABEL_425;
  }
  v695 = objc_msgSend(v694, "trailingAnchor");
  v696 = objc_msgSend(v693, "constraintEqualToAnchor:", v695);

  v497[37] = v696;
  v697 = objc_msgSend(v687, "topAnchor");
  v698 = *(_QWORD *)&v1[v689];
  if (!v698)
  {
LABEL_425:
    __break(1u);
    goto LABEL_426;
  }
  v699 = v697;
  v700 = *(_QWORD **)(v698 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
  v701 = *(uint64_t (**)(void))((swift_isaMask & *v700) + 0x170);
  v702 = v700;
  v703 = (void *)v701();

  v704 = objc_msgSend(v703, "bottomAnchor");
  v705 = objc_msgSend(v699, "constraintEqualToAnchor:constant:", v704, 5.0);

  v497[38] = v705;
  v706 = objc_msgSend(v687, "bottomAnchor");
  v707 = *(_QWORD *)&v1[v1015];
  v708 = v1025;
  if (!v707)
  {
LABEL_426:
    __break(1u);
    goto LABEL_427;
  }
  v709 = v706;
  v710 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v707
                                                               + OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide), "topAnchor"));
  v711 = objc_msgSend(v709, "constraintEqualToAnchor:", v710);

  v497[39] = v711;
  v712 = *(void **)&v1[v1013];
  if (!v712)
  {
LABEL_427:
    __break(1u);
    goto LABEL_428;
  }
  v713 = objc_msgSend(v712, "topAnchor");
  v714 = *(void **)&v1[v1021];
  if (!v714)
  {
LABEL_428:
    __break(1u);
LABEL_429:
    __break(1u);
    goto LABEL_430;
  }
  v715 = objc_msgSend(v714, "topAnchor");
  if (qword_10119B978 != -1)
    swift_once(&qword_10119B978, sub_10012C51C);
  v716 = objc_msgSend(v713, "constraintEqualToAnchor:constant:", v715, *(double *)&qword_1011A19F8);

  v497[40] = v716;
  v717 = *(void **)&v1[v708];
  if (!v717)
    goto LABEL_429;
  v718 = objc_msgSend(v717, "centerXAnchor");
  v719 = *(void **)&v1[v1021];
  if (!v719)
  {
LABEL_430:
    __break(1u);
    goto LABEL_431;
  }
  v720 = objc_msgSend(v719, "centerXAnchor");
  v721 = objc_msgSend(v718, "constraintEqualToAnchor:", v720);

  v497[41] = v721;
  v722 = *(void **)&v1[v1013];
  if (!v722)
  {
LABEL_431:
    __break(1u);
LABEL_432:
    __break(1u);
    goto LABEL_433;
  }
  v723 = objc_msgSend(v722, "centerYAnchor");
  v724 = objc_msgSend(v687, "centerYAnchor");
  v725 = objc_msgSend(v723, "constraintEqualToAnchor:", v724);

  v497[42] = v725;
  v726 = v1007;
  v727 = objc_msgSend(*(id *)&v1[v1007], "centerYAnchor");
  v728 = objc_msgSend(v687, "centerYAnchor");
  v729 = objc_msgSend(v727, "constraintEqualToAnchor:", v728);

  v497[43] = v729;
  v730 = objc_msgSend(*(id *)&v1[v726], "widthAnchor");
  if (qword_10119B958 != -1)
    swift_once(&qword_10119B958, sub_10012C434);
  v731 = objc_msgSend(v730, "constraintEqualToConstant:", *(double *)&qword_10124C8D0);

  v497[44] = v731;
  v732 = objc_msgSend(*(id *)&v1[v726], "heightAnchor");
  v733 = objc_msgSend(*(id *)&v1[v726], "widthAnchor");
  v734 = objc_msgSend(v732, "constraintEqualToAnchor:", v733);

  v497[45] = v734;
  v735 = v1008;
  v736 = objc_msgSend(*(id *)&v1[v1008], "centerYAnchor");
  v737 = objc_msgSend(v687, "centerYAnchor");
  v738 = objc_msgSend(v736, "constraintEqualToAnchor:", v737);

  v497[46] = v738;
  v739 = objc_msgSend(*(id *)&v1[v735], "widthAnchor");
  v740 = objc_msgSend(v739, "constraintEqualToConstant:", *(double *)&qword_10124C8D0);

  v497[47] = v740;
  v741 = objc_msgSend(*(id *)&v1[v735], "heightAnchor");
  v742 = objc_msgSend(*(id *)&v1[v735], "widthAnchor");
  v743 = objc_msgSend(v741, "constraintEqualToAnchor:", v742);

  v497[48] = v743;
  v744 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint];
  if (!v744)
    goto LABEL_432;
  v497[49] = v744;
  v745 = *(void **)&v1[v1015];
  v746 = v1018;
  v747 = v1026;
  v748 = v1002;
  if (!v745)
  {
LABEL_433:
    __break(1u);
    goto LABEL_434;
  }
  v749 = v744;
  v750 = objc_msgSend(v745, "leadingAnchor");
  v751 = *(void **)&v1[v747];
  if (!v751)
  {
LABEL_434:
    __break(1u);
    goto LABEL_435;
  }
  v752 = objc_msgSend(v751, "leadingAnchor");
  v753 = objc_msgSend(v750, "constraintEqualToAnchor:constant:", v752, 1.0);

  v497[50] = v753;
  v754 = *(void **)&v1[v1015];
  if (!v754)
  {
LABEL_435:
    __break(1u);
    goto LABEL_436;
  }
  v755 = objc_msgSend(v754, "trailingAnchor");
  v756 = *(void **)&v1[v747];
  if (!v756)
  {
LABEL_436:
    __break(1u);
    goto LABEL_437;
  }
  v757 = objc_msgSend(v756, "trailingAnchor");
  v758 = objc_msgSend(v755, "constraintEqualToAnchor:constant:", v757, -1.0);

  v497[51] = v758;
  v759 = *(void **)&v1[v1015];
  if (!v759)
  {
LABEL_437:
    __break(1u);
    goto LABEL_438;
  }
  v760 = objc_msgSend(v759, "heightAnchor");
  v761 = objc_msgSend(v760, "constraintEqualToConstant:", 40.0);

  v497[52] = v761;
  v762 = v1012;
  v763 = *(void **)&v1[v1012];
  if (!v763)
  {
LABEL_438:
    __break(1u);
    goto LABEL_439;
  }
  v764 = objc_msgSend(v763, "heightAnchor");
  v765 = objc_msgSend(v764, "constraintEqualToConstant:", *(double *)&qword_1011A1A60);

  v497[53] = v765;
  v766 = *(void **)&v1[v762];
  if (!v766)
  {
LABEL_439:
    __break(1u);
    goto LABEL_440;
  }
  v767 = objc_msgSend(v766, "widthAnchor");
  v768 = *(void **)&v1[v762];
  if (!v768)
  {
LABEL_440:
    __break(1u);
    goto LABEL_441;
  }
  v769 = objc_msgSend(v768, "heightAnchor");
  v770 = objc_msgSend(v767, "constraintEqualToAnchor:", v769);

  v497[54] = v770;
  v771 = *(void **)&v1[v748];
  if (!v771)
  {
LABEL_441:
    __break(1u);
    goto LABEL_442;
  }
  v772 = objc_msgSend(v771, "heightAnchor");
  v773 = objc_msgSend(v772, "constraintEqualToConstant:", *(double *)&qword_1011A1A60);

  v497[55] = v773;
  v774 = *(void **)&v1[v748];
  if (!v774)
  {
LABEL_442:
    __break(1u);
    goto LABEL_443;
  }
  v775 = objc_msgSend(v774, "widthAnchor");
  v776 = *(void **)&v1[v748];
  if (!v776)
  {
LABEL_443:
    __break(1u);
    goto LABEL_444;
  }
  v777 = objc_msgSend(v776, "heightAnchor");
  v778 = objc_msgSend(v775, "constraintEqualToAnchor:", v777);

  v497[56] = v778;
  v779 = objc_msgSend(v746, "leadingAnchor");
  v780 = *(void **)&v1[v747];
  if (!v780)
  {
LABEL_444:
    __break(1u);
    goto LABEL_445;
  }
  v781 = objc_msgSend(v780, "leadingAnchor");
  v782 = objc_msgSend(v779, "constraintEqualToAnchor:", v781);

  v497[57] = v782;
  v783 = objc_msgSend(v746, "trailingAnchor");
  v784 = *(void **)&v1[v747];
  if (!v784)
  {
LABEL_445:
    __break(1u);
    goto LABEL_446;
  }
  v785 = objc_msgSend(v784, "trailingAnchor");
  v786 = objc_msgSend(v783, "constraintEqualToAnchor:", v785);

  v497[58] = v786;
  v787 = objc_msgSend(v746, "bottomAnchor");
  v788 = v1021;
  v789 = *(void **)&v1[v1021];
  if (!v789)
  {
LABEL_446:
    __break(1u);
    goto LABEL_447;
  }
  v790 = objc_msgSend(v789, "bottomAnchor");
  v791 = objc_msgSend(v787, "constraintEqualToAnchor:", v790);

  LODWORD(v792) = 1144750080;
  v793 = objc_msgSend(v791, "withPriority:", v792);

  v497[59] = v793;
  v794 = objc_msgSend(v746, "bottomAnchor");
  v795 = *(void **)&v1[v788];
  if (!v795)
  {
LABEL_447:
    __break(1u);
    goto LABEL_448;
  }
  v796 = objc_msgSend(v795, "bottomAnchor");
  v797 = objc_msgSend(v794, "constraintLessThanOrEqualToAnchor:", v796);

  v497[60] = v797;
  v798 = objc_msgSend(*(id *)&v1[v1016], "bottomAnchor");
  v799 = *(void **)&v1[v788];
  if (!v799)
  {
LABEL_448:
    __break(1u);
    goto LABEL_449;
  }
  v800 = objc_msgSend(v799, "bottomAnchor");
  v801 = objc_msgSend(v798, "constraintLessThanOrEqualToAnchor:", v800);

  v497[61] = v801;
  v802 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint];
  v803 = v1002;
  if (!v802)
  {
LABEL_449:
    __break(1u);
    goto LABEL_450;
  }
  v497[62] = v802;
  v804 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
  v805 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView];
  if (!v805)
  {
LABEL_450:
    __break(1u);
LABEL_451:
    __break(1u);
    goto LABEL_452;
  }
  v806 = v802;
  v807 = objc_msgSend(v805, "widthAnchor");
  if (qword_10119B998 != -1)
    swift_once(&qword_10119B998, sub_10012C56C);
  v808 = objc_msgSend(v807, "constraintEqualToConstant:", *(double *)&qword_1011A1A48);

  v497[63] = v808;
  v809 = *(void **)&v1[v804];
  if (!v809)
    goto LABEL_451;
  v810 = objc_msgSend(v809, "heightAnchor");
  v811 = *(void **)&v1[v804];
  if (!v811)
  {
LABEL_452:
    __break(1u);
    goto LABEL_453;
  }
  v812 = objc_msgSend(v811, "widthAnchor");
  v813 = objc_msgSend(v810, "constraintEqualToAnchor:", v812);

  v497[64] = v813;
  v814 = *(void **)&v1[v804];
  if (!v814)
  {
LABEL_453:
    __break(1u);
    goto LABEL_454;
  }
  v815 = objc_msgSend(v814, "trailingAnchor");
  v816 = *(void **)&v1[v803];
  if (!v816)
  {
LABEL_454:
    __break(1u);
LABEL_455:
    __break(1u);
    goto LABEL_456;
  }
  v817 = objc_msgSend(v816, "trailingAnchor");
  if (qword_10119B9A0 != -1)
    swift_once(&qword_10119B9A0, sub_10012C57C);
  v818 = objc_msgSend(v815, "constraintEqualToAnchor:constant:", v817, *(double *)&qword_1011A1A50);

  v497[65] = v818;
  v819 = *(void **)&v1[v804];
  if (!v819)
    goto LABEL_455;
  v820 = objc_msgSend(v819, "topAnchor");
  v821 = *(void **)&v1[v803];
  if (!v821)
  {
LABEL_456:
    __break(1u);
LABEL_457:
    __break(1u);
LABEL_458:
    __break(1u);
    goto LABEL_459;
  }
  v822 = objc_msgSend(v821, "topAnchor");
  v823 = objc_msgSend(v820, "constraintEqualToAnchor:constant:", v822, -*(double *)&qword_1011A1A50);

  v497[66] = v823;
  v824 = v1005;
  v825 = objc_msgSend(*(id *)&v1[v1005], "topAnchor");
  v826 = v1004;
  v827 = objc_msgSend(*(id *)&v1[v1004], "topAnchor");
  v828 = objc_msgSend(v825, "constraintEqualToAnchor:", v827);

  v497[67] = v828;
  v829 = objc_msgSend(*(id *)&v1[v824], "bottomAnchor");
  v830 = objc_msgSend(*(id *)&v1[v826], "bottomAnchor");
  v831 = objc_msgSend(v829, "constraintEqualToAnchor:", v830);

  v497[68] = v831;
  v832 = objc_msgSend(*(id *)&v1[v824], "trailingAnchor");
  v833 = objc_msgSend(*(id *)&v1[v826], "trailingAnchor");
  v834 = objc_msgSend(v832, "constraintEqualToAnchor:", v833);

  v497[69] = v834;
  v835 = objc_msgSend(*(id *)&v1[v824], "heightAnchor");
  if (qword_10119B9E8 != -1)
    swift_once(&qword_10119B9E8, sub_10012C748);
  v836 = objc_msgSend(v835, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_1011A1AC0);

  v497[70] = v836;
  v837 = objc_msgSend(*(id *)&v1[v1016], "heightAnchor");
  v838 = objc_msgSend(v837, "constraintEqualToConstant:", *(double *)&qword_1011A1A60);

  v497[71] = v838;
  v839 = v1014;
  sub_10004BA5C();
  v1033 = v839;
  v840 = *(void **)&v1[v1003];
  v841 = &selRef_referralObject;
  if (!v840)
    goto LABEL_457;
  v842 = objc_msgSend(v840, "titleLabel");
  v843 = &selRef_setMetricsOverlay_;
  v844 = v1027;
  if (v842)
  {
    v845 = v842;
    v846 = swift_allocObject(v1028, 64, 7);
    v1025 = sub_10004D56C(v846, 4);
    v848 = v847;
    v849 = v1010;
    v850 = objc_msgSend(v1010, "topAnchor");
    v851 = *(void **)&v1[v1011];
    if (!v851)
    {
LABEL_469:
      __break(1u);
      goto LABEL_470;
    }
    v852 = objc_msgSend(v851, "topAnchor");
    v853 = objc_msgSend(v850, "constraintEqualToAnchor:", v852);

    *v848 = v853;
    v854 = objc_msgSend(v849, "leadingAnchor");
    v855 = v1001;
    v856 = *(void **)&v1[v1001];
    if (!v856)
    {
LABEL_470:
      __break(1u);
      goto LABEL_471;
    }
    v857 = objc_msgSend(v856, "leadingAnchor");
    v858 = objc_msgSend(v854, "constraintEqualToAnchor:", v857);

    v848[1] = v858;
    v859 = objc_msgSend(v849, "trailingAnchor");
    v860 = *(void **)&v1[v855];
    v843 = &selRef_setMetricsOverlay_;
    if (!v860)
    {
LABEL_471:
      __break(1u);
      goto LABEL_472;
    }
    v861 = objc_msgSend(v860, "trailingAnchor");
    v862 = objc_msgSend(v859, "constraintEqualToAnchor:", v861);

    v848[2] = v862;
    v863 = objc_msgSend(v849, "bottomAnchor");
    v864 = objc_msgSend(v845, "bottomAnchor");
    v865 = objc_msgSend(v863, "constraintEqualToAnchor:", v864);

    v848[3] = v865;
    v866 = v1025;
    sub_10004BA5C();
    v867 = v866;
    sub_100465240((uint64_t)&v1033, v866);

    swift_bridgeObjectRelease(v867);
    v844 = v1027;
    v841 = &selRef_referralObject;
  }
  LOBYTE(v1034[0]) = 1;
  v868 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v868) & 1) != 0)
  {
    v870 = swift_allocObject(v1028, 64, 7);
    v1025 = sub_10004D56C(v870, 4);
    v872 = v871;
    v873 = sub_10012CF10();
    v874 = objc_msgSend(v873, "topAnchor");

    v875 = objc_msgSend(v1, v841[483]);
    if (!v875)
    {
LABEL_472:
      __break(1u);
      goto LABEL_473;
    }
    v876 = v875;
    v877 = objc_msgSend(v875, "safeAreaLayoutGuide");

    v878 = objc_msgSend(v877, "topAnchor");
    v879 = objc_msgSend(v874, "constraintEqualToAnchor:", v878);

    *v872 = v879;
    v880 = sub_10012CF10();
    v881 = objc_msgSend(v880, "heightAnchor");

    v882 = objc_msgSend(v881, "constraintEqualToConstant:", 28.0);
    v872[1] = v882;
    v883 = sub_10012CF10();
    v884 = objc_msgSend(v883, "widthAnchor");

    v885 = sub_10012CF10();
    v886 = objc_msgSend(v885, "heightAnchor");

    v887 = objc_msgSend(v884, "constraintEqualToAnchor:", v886);
    v872[2] = v887;
    v888 = sub_10012CF10();
    v889 = objc_msgSend(v888, "trailingAnchor");

    v890 = objc_msgSend(v1, "view");
    if (!v890)
    {
LABEL_473:
      __break(1u);
      goto LABEL_474;
    }
    v891 = v890;
    v892 = objc_msgSend(v890, "trailingAnchor");

    v893 = objc_msgSend(v889, v843[272], v892, -10.0);
    v872[3] = v893;
    v894 = v1025;
    sub_10004BA5C();
    v895 = v894;
    sub_100465240((uint64_t)&v1033, v894);
    *(_QWORD *)&v869 = swift_bridgeObjectRelease(v895).n128_u64[0];
  }
  v896 = *(void **)&v1[v1024];
  if (!v896)
    goto LABEL_458;
  v897 = objc_msgSend(v896, "bottomAnchor", v869);
  v898 = *(_QWORD *)&v1[v1026];
  if (!v898)
  {
LABEL_459:
    __break(1u);
    goto LABEL_460;
  }
  v899 = v897;
  v900 = *(_QWORD **)(v898 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
  v901 = *(uint64_t (**)(void))((swift_isaMask & *v900) + 0x170);
  v902 = v900;
  v903 = (void *)v901();

  v904 = objc_msgSend(v903, "topAnchor");
  v905 = objc_msgSend(v899, "constraintEqualToAnchor:", v904);

  v906 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint] = v905;

  v907 = *(void **)&v1[v1024];
  if (!v907)
  {
LABEL_460:
    __break(1u);
    goto LABEL_461;
  }
  v908 = objc_msgSend(v907, "bottomAnchor");
  v909 = objc_msgSend(v1, "view");
  if (!v909)
  {
LABEL_461:
    __break(1u);
    goto LABEL_462;
  }
  v910 = v909;
  v911 = objc_msgSend(v909, "bottomAnchor");

  v912 = objc_msgSend(v908, "constraintEqualToAnchor:", v911);
  v913 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint] = v912;

  v914 = *(void **)&v1[v1024];
  if (!v914)
  {
LABEL_462:
    __break(1u);
LABEL_463:
    __break(1u);
    goto LABEL_464;
  }
  v915 = objc_msgSend(v914, "topAnchor");
  v916 = objc_msgSend(*(id *)&v1[v844], "safeAreaLayoutGuide");
  v917 = objc_msgSend(v916, "topAnchor");

  v918 = objc_msgSend(v915, "constraintEqualToAnchor:constant:", v917, *(double *)&qword_10124C8C8+ sub_1005D2C08(v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]));
  v919 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint] = v918;

  v920 = (void *)objc_opt_self(UIDevice);
  v921 = objc_msgSend(v920, "currentDevice");
  v922 = objc_msgSend(v921, "userInterfaceIdiom");

  if (static Artwork.Caching.Reference.== infix(_:_:)((uint64_t)v922, 0))
  {
    v923 = *(void **)&v1[v1024];
    if (!v923)
    {
LABEL_474:
      __break(1u);
      goto LABEL_475;
    }
    v924 = objc_msgSend(v923, "topAnchor");
    v925 = *(void **)&v1[v1023];
    if (!v925)
    {
LABEL_475:
      __break(1u);
      goto LABEL_476;
    }
    v926 = objc_msgSend(v925, "bottomAnchor");
    v927 = objc_msgSend(v924, "constraintEqualToAnchor:", v926);

    v928 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint];
    *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint] = v927;

    v929 = *(void **)&v1[v1024];
    if (!v929)
    {
LABEL_476:
      __break(1u);
      goto LABEL_477;
    }
    v930 = objc_msgSend(v929, "topAnchor");
    v931 = *(void **)&v1[v1023];
    if (!v931)
    {
LABEL_477:
      __break(1u);
      goto LABEL_478;
    }
    v932 = objc_msgSend(v931, "topAnchor");
    v933 = objc_msgSend(v930, "constraintEqualToAnchor:constant:", v932, *(double *)&qword_10124C8C8);

    v934 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint];
    *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint] = v933;

  }
  else
  {
    v935 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
    if (!v935)
    {
LABEL_478:
      __break(1u);
      goto LABEL_479;
    }
    v936 = v935;
    v937 = sub_10011F728((uint64_t)v1034);
    sub_10043B7A0(v936);
    ((void (*)(_OWORD *, _QWORD))v937)(v1034, 0);
  }
  v938 = *(void **)&v1[v1024];
  if (!v938)
    goto LABEL_463;
  v939 = objc_msgSend(v938, "topAnchor");
  v940 = objc_msgSend(*(id *)&v1[v1027], "safeAreaLayoutGuide");
  v941 = objc_msgSend(v940, "topAnchor");

  v942 = objc_msgSend(v939, "constraintEqualToAnchor:constant:", v941, sub_1005D2C08(v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]));
  v943 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint] = v942;

  v944 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
  if (!v944)
  {
LABEL_464:
    __break(1u);
    goto LABEL_465;
  }
  v945 = v944;
  v946 = sub_10011F728((uint64_t)v1034);
  sub_10043B7A0(v945);
  ((void (*)(_OWORD *, _QWORD))v946)(v1034, 0);
  v947 = *(void **)&v1[v1023];
  v948 = v997;
  if (!v947)
  {
LABEL_465:
    __break(1u);
LABEL_466:
    __break(1u);
    goto LABEL_467;
  }
  v949 = objc_msgSend(v947, "topAnchor");
  v950 = objc_msgSend(*(id *)&v1[v1027], "topAnchor");
  v951 = objc_msgSend(v949, "constraintEqualToAnchor:constant:", v950, *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 16]);

  v952 = sub_10011F7F0((uint64_t)v1034);
  sub_10043B7A0(v951);
  ((void (*)(_OWORD *, _QWORD))v952)(v1034, 0);
  v953 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints];
  swift_bridgeObjectRetain();
  sub_100465240((uint64_t)&v1033, v953);
  swift_bridgeObjectRelease(v953);
  v954 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints], &v1032, 0, 0);
  v955 = *v954;
  swift_bridgeObjectRetain();
  sub_100465240((uint64_t)&v1033, v955);
  swift_bridgeObjectRelease(v955);
  sub_10011F884();
  v957 = v956;
  sub_100465240((uint64_t)&v1033, v956);
  swift_bridgeObjectRelease(v957);
  v958 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints], &v1031, 0, 0);
  v959 = *v958;
  swift_bridgeObjectRetain();
  sub_100465240((uint64_t)&v1033, v959);
  v960 = objc_msgSend(v920, "currentDevice", swift_bridgeObjectRelease(v959).n128_f64[0]);
  v961 = objc_msgSend(v960, "userInterfaceIdiom");

  v962 = static Artwork.Caching.Reference.== infix(_:_:)((uint64_t)v961, 0);
  v964 = v998;
  v963 = v999;
  if (!v962)
    goto LABEL_255;
  v965 = swift_allocObject(v1028, 40, 7);
  v966 = sub_10004D56C(v965, 1);
  v968 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
  if (v968)
  {
    *v967 = v968;
    sub_10004BA5C();
    v969 = v966;
    v970 = v968;
    sub_100465240((uint64_t)&v1033, v969);
    swift_bridgeObjectRelease(v969);
LABEL_255:
    v971 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints];
    swift_bridgeObjectRetain();
    sub_100465240((uint64_t)&v1033, v971);
    swift_bridgeObjectRelease(v971);
    v972 = v1000;
    sub_100465240((uint64_t)&v1033, v1000);
    swift_bridgeObjectRelease(v972);
    v973 = sub_1005D2B00();
    v974 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v963 + 16))(v964, v973, v948);
    v975 = Logger.logObject.getter(v974);
    v976 = static os_log_type_t.default.getter(v975);
    v977 = sub_10027D88C(0);
    if (os_log_type_enabled(v975, v976))
    {
      v978 = (uint8_t *)sub_1008EBAC0(2);
      v1029 = 0;
      v1030 = 0;
      *(_WORD *)v978 = 0;
      *(_QWORD *)&v1034[0] = v978 + 2;
      sub_100267888((uint64_t)v977, (uint64_t)v1034, (uint64_t)&v1030, (uint64_t)&v1029);
      swift_bridgeObjectRelease(v977);
      _os_log_impl((void *)&_mh_execute_header, v975, v976, "[NowPlayingControlsViewController] setting up constraints, updating metrics", v978, 2u);
      sub_1008ECBD8((uint64_t)v978);

    }
    else
    {

      v979 = swift_bridgeObjectRelease(v977);
    }
    (*(void (**)(char *, uint64_t, __n128))(v963 + 8))(v964, v948, v979);
    v980 = objc_msgSend(v1, "view");
    v982 = v1019;
    v981 = v1020;
    v983 = v1018;
    if (v980)
    {
      v984 = v980;
      v985 = Int.seconds.getter(0);
      v986 = Int.seconds.getter(414);
      v987 = Int.seconds.getter(896);
      objc_msgSend(v984, "setFrame:", v985, v985, v986, v987);

      sub_100139E44(0, 0, (uint64_t)v1034, v986, v987, 34.0);
      v988 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics];
      v989 = v1034[5];
      *((_OWORD *)v988 + 4) = v1034[4];
      *((_OWORD *)v988 + 5) = v989;
      *((_QWORD *)v988 + 12) = v1035;
      v990 = v1034[1];
      *(_OWORD *)v988 = v1034[0];
      *((_OWORD *)v988 + 1) = v990;
      v991 = v1034[3];
      *((_OWORD *)v988 + 2) = v1034[2];
      *((_OWORD *)v988 + 3) = v991;
      sub_10012DB78();
      sub_100132DD8();
      v992 = (void *)objc_opt_self(NSLayoutConstraint);
      v993 = v1033;
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v992, "activateConstraints:", isa, swift_bridgeObjectRelease(v993).n128_f64[0]);

      return;
    }
    goto LABEL_466;
  }
LABEL_479:
  __break(1u);
}

void sub_100125510(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void **v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char *v32;
  __int16 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unsigned int v37;
  void *v38;
  int v39;
  __int16 v40;
  __int16 v41;
  __int16 v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  __int16 v52;
  int v53;
  _BOOL4 v54;
  unsigned __int8 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  id (*v65)();
  uint64_t v66;
  char v67[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music21NowPlayingContentView_mode;
  if ((*(_WORD *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] & 0xC000) == 0)
  {
    v5 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
    if (!v5 || (objc_msgSend(v5, "alpha"), v6 != 1.0))
    {
      v7 = (void *)objc_opt_self(UIView);
      v8 = swift_allocObject(&unk_1010B2688, 24, 7);
      *(_QWORD *)(v8 + 16) = v2;
      v65 = sub_10013B9D0;
      v66 = v8;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v62 = 1107296256;
      v63 = sub_1001DBD98;
      v64 = &unk_1010B26A0;
      v9 = _Block_copy(&aBlock);
      v10 = v66;
      v11 = v2;
      swift_release(v10);
      objc_msgSend(v7, "animateWithDuration:animations:", v9, 0.15);
      _Block_release(v9);
    }
    v12 = *(void **)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
    if (v12)
      objc_msgSend(v12, "removeFromSuperview");
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView], "setHidden:", 0);
  }
  if ((v2[OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates] & 1) != 0)
    return;
  v13 = *(void ***)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints];
  v14 = (uint64_t *)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints];
  swift_beginAccess(&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints], v67, 0, 0);
  v15 = *v14;
  aBlock = (uint64_t)v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100804E18(v15);
  v16 = aBlock;
  v57 = a1;
  v58 = v4;
  if ((unint64_t)aBlock >> 62)
  {
    if (aBlock < 0)
      v30 = aBlock;
    else
      v30 = aBlock & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v16);
    if (v17)
      goto LABEL_11;
LABEL_35:
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v16).n128_u64[0];
    if (v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] - 1 <= 1)
    {
      v32 = a1;
      v33 = *(_WORD *)&a1[v58];
      *(_WORD *)&a1[v58] = 257;
      if ((v33 & 0xC101) == 0x101)
        return;
      goto LABEL_56;
    }
    v34 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
    v35 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
    v32 = v57;
    v36 = v58;
    if (v35)
    {
      if (objc_msgSend(v35, "state", v31) == (id)2)
      {
        v37 = 1;
        goto LABEL_45;
      }
      if (*(_QWORD *)&v2[v34])
        goto LABEL_44;
    }
    v38 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath];
    if (!v38)
LABEL_44:
      v37 = 0;
    else
      v37 = objc_msgSend(v38, "isSystemMusicPath", v31) ^ 1;
LABEL_45:
    v39 = sub_10012BFA4();
    if ((v39 & 1) != 0)
      v40 = 256;
    else
      v40 = 0;
    v41 = v40 | v37 | 0x4000;
    v42 = *(_WORD *)&v57[v58];
    if ((v42 & 0xC000) != 0x4000)
    {
      *(_WORD *)&v57[v58] = v41;
      goto LABEL_56;
    }
    v43 = v39;
    if (((v37 ^ v42) & 1) == 0
      && ((v39 ^ ((v42 & 0x100) == 0)) & 1) != 0)
    {
      return;
    }
    if (((v37 ^ v42) & 1) == 0)
    {
      if (((v39 ^ ((v42 & 0x100) == 0)) & 1) == 0)
      {
        *(_WORD *)&v57[v58] = v41;
        sub_100675910();
        objc_msgSend(v57, "setNeedsLayout");
        objc_msgSend(v57, "setNeedsLayout");
      }
LABEL_64:
      v52 = *(_WORD *)&v57[v36];
      *(_WORD *)&v57[v36] = v41;
      if ((v52 & 0xC000) == 0x4000)
      {
        v53 = (v52 & 1) == 0;
        v54 = (v52 & 0x100) == 0;
        if (v37 != v53 && ((v43 ^ v54) & 1) != 0)
          return;
      }
LABEL_56:
      sub_100675910();
      objc_msgSend(v32, "setNeedsLayout");
      return;
    }
    v44 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 500.0, 1000.0, 0.0, 0.0);
    v45 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.1878, 0.0023, 0.5399, 0.9629);
    if ((v42 & 1) != 0)
    {
      if ((v37 & 1) == 0)
      {
        v46 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 5.0, 500.0, 1000.0, 0.0, 0.0);

        objc_msgSend(v46, "setSpringCubicTimingParameters:", v45);
LABEL_62:
        v44 = v46;
      }
    }
    else if (v37)
    {
      v46 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 28.0, 0.0, 0.0);

      goto LABEL_62;
    }
    v47 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringAnimator), "initWithDuration:timingParameters:", v44, 0.0);
    v48 = swift_allocObject(&unk_1010B2638, 26, 7);
    *(_QWORD *)(v48 + 16) = v57;
    *(_WORD *)(v48 + 24) = v41;
    v65 = sub_10013B9C4;
    v66 = v48;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v62 = 1107296256;
    v63 = sub_1001DBD98;
    v64 = &unk_1010B2650;
    v49 = _Block_copy(&aBlock);
    v50 = v66;
    v51 = v57;
    objc_msgSend(v47, "addAnimations:", v49, swift_release(v50).n128_f64[0]);
    _Block_release(v49);
    objc_msgSend(v47, "setInterruptible:", 0);
    objc_msgSend(v47, "startAnimation");

    v36 = v58;
    goto LABEL_64;
  }
  v17 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_35;
LABEL_11:
  if (v17 >= 1)
  {
    v18 = 0;
    v56 = (uint64_t)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 24];
    v59 = (uint64_t)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 32];
    v60 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
    while (1)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      else
        v20 = *(id *)(v16 + 8 * v18 + 32);
      v21 = v20;
      if (objc_msgSend(v20, "firstAttribute") != (id)7 || objc_msgSend(v21, "relation"))
        goto LABEL_15;
      v22 = v2;
      v23 = *(void **)&v2[v60];
      if (v23)
      {
        v24 = objc_msgSend(v23, "tracklist");
        v25 = objc_msgSend(v24, "playingItem");

        if (v25)
        {
          v26 = objc_msgSend(v25, "metadataObject");

          if (v26)
          {
            v27 = objc_msgSend(v26, "innermostModelObject");
            objc_opt_self(MPModelSong);
            v28 = (void *)swift_dynamicCastObjCClass(v27);
            if (v28)
            {
              v55 = objc_msgSend(v28, "hasVideo");

              v19 = (double *)v56;
              if ((v55 & 1) != 0)
                goto LABEL_14;
            }
            else
            {

              objc_opt_self(MPModelTVEpisode);
              if (swift_dynamicCastObjCClass(v27))
              {

                v19 = (double *)v56;
                goto LABEL_14;
              }
              objc_opt_self(MPModelMovie);
              v29 = swift_dynamicCastObjCClass(v27);

              v19 = (double *)v56;
              if (v29)
                goto LABEL_14;
            }
          }
        }
      }
      v19 = (double *)v59;
LABEL_14:
      objc_msgSend(v21, "setConstant:", *v19);
      v2 = v22;
LABEL_15:
      ++v18;

      if (v17 == v18)
        goto LABEL_35;
    }
  }
  __break(1u);
}

id sub_100125C64(char *a1, unsigned __int16 a2)
{
  unsigned int v3;

  v3 = *(unsigned __int16 *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
  *(_WORD *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = a2;
  if (a2 >> 14)
  {
    if (a2 >> 14 == 1)
    {
      if ((v3 & 0xC000) != 0x4000)
        goto LABEL_10;
      goto LABEL_6;
    }
    if (v3 == 0x8000)
      return objc_msgSend(a1, "layoutIfNeeded");
LABEL_10:
    sub_100675910();
    objc_msgSend(a1, "setNeedsLayout");
    return objc_msgSend(a1, "layoutIfNeeded");
  }
  if (v3 >= 0x4000)
    goto LABEL_10;
LABEL_6:
  if (((a2 & 1) == 0) == (v3 & 1) || ((((a2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8)) & 1) == 0)
    goto LABEL_10;
  return objc_msgSend(a1, "layoutIfNeeded");
}

void sub_100125D14()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentView);
  if (!Strong)
    return;
  if (*(_BYTE *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode) != 2)
  {
LABEL_11:

    return;
  }
  v8 = Strong;
  if (!*(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_animationData))
  {
    sub_100136688(Strong, 4u);
    Strong = v8;
    goto LABEL_11;
  }
  if (qword_10119C5F0 != -1)
    swift_once(&qword_10119C5F0, sub_100690724);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124D6E8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Currently animating, defering top views move", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  *(_BYTE *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate) = 1;
}

void sub_100125E64()
{
  char *v0;
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  double Height;
  void *v6;
  double v7;
  id v8;
  id v9;
  CGRect v10;

  if (qword_10119B950 != -1)
    swift_once(&qword_10119B950, sub_10012C414);
  v1 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide];
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType;
  v3 = dbl_100EABC38[v0[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]];
  v4 = *(double *)&qword_10124C8C8;
  objc_msgSend(v1, "layoutFrame");
  Height = CGRectGetHeight(v10);
  v6 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint];
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = -v4 - v3;
  if (v7 <= *(double *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset])
    v7 = *(double *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset];
  if (Height >= v7)
    Height = v7;
  objc_msgSend(v6, "setConstant:", Height + dbl_100EABC38[v0[v2]]);
  v8 = objc_msgSend(v0, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setNeedsLayout");

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_100125F84(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v2 = a1;
  result = swift_getObjectType();
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_mode;
  if (v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] != v2)
  {
    v5 = objc_msgSend(v1, "view");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "window");

      if (v7)
      {
        v8 = objc_msgSend(v7, "windowScene");

        if (v8)
        {
          objc_msgSend(v8, "activationState");

        }
      }
      v9 = v1[v4];
      v1[v4] = v2;
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1001265E0);
  }
  return result;
}

void sub_100126638(char a1, char a2, char *a3)
{
  char *v3;
  uint64_t v4;
  void *v8;
  CGFloat v9;
  void *v10;
  id v11;
  Class isa;
  CGFloat v13;
  void *v14;
  void *v15;
  id v16;
  Class v17;
  id v18;
  id v19;
  id v20;
  id v21;
  Class v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  char v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  CGFloat v54;
  void *v55;
  void *v56;
  id v57;
  CGFloat v58;
  void *v59;
  CGFloat ty;
  char *v61;
  id v62;
  CGFloat v63;
  void *v64;
  void *v65;
  CGFloat v66;
  char *v67;
  uint64_t v68;
  id v69;
  id v70;
  CGFloat v71;
  uint64_t v72;
  void *v73;
  CGFloat v74;
  id v75;
  id v76;
  CGFloat v77;
  void *v78;
  CGFloat v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  void *Strong;
  void *v101;
  _QWORD *v102;
  id v103;
  id v104;
  void *v105;
  CGFloat v106;
  id v107;
  __n128 v108;
  _QWORD v109[6];
  _QWORD *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  char *v119;
  id v120;
  uint64_t v121;
  CGAffineTransform aBlock;

  v8 = (void *)sub_100007E8C((uint64_t *)&unk_1011A1470);
  v9 = COERCE_DOUBLE(swift_allocObject(v8, 40, 7));
  *(_OWORD *)(*(_QWORD *)&v9 + 16) = xmmword_100EA7A90;
  if ((a1 & 1) == 0)
    goto LABEL_6;
  v10 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
  if (!v10)
  {
    __break(1u);
    goto LABEL_36;
  }
  v3 = (char *)objc_opt_self(NSLayoutConstraint);
  *(_QWORD *)(*(_QWORD *)&v9 + 32) = v10;
  aBlock.a = v9;
  specialized Array._endMutation()(v3);
  v4 = sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  v11 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v9).n128_f64[0]);

  v13 = COERCE_DOUBLE(swift_allocObject(v8, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v13 + 16) = xmmword_100EA7DB0;
  v8 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint];
  if (!v8)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(_QWORD *)(*(_QWORD *)&v13 + 32) = v8;
  v14 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
  if (v14)
  {
LABEL_10:
    *(_QWORD *)(*(_QWORD *)&v13 + 40) = v14;
    aBlock.a = v13;
    specialized Array._endMutation()(*(_QWORD *)&v13);
    v20 = v8;
    v21 = v14;
    v22 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v22, swift_bridgeObjectRelease(*(_QWORD *)&aBlock.a).n128_f64[0]);

    goto LABEL_11;
  }
  __break(1u);
LABEL_6:
  v15 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint];
  if (!v15)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v3 = (char *)objc_opt_self(NSLayoutConstraint);
  *(_QWORD *)(*(_QWORD *)&v9 + 32) = v15;
  aBlock.a = v9;
  specialized Array._endMutation()(v3);
  v4 = sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  v16 = v15;
  v17 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "deactivateConstraints:", v17, swift_bridgeObjectRelease(*(_QWORD *)&v9).n128_f64[0]);

  v18 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v19 = objc_msgSend(v18, "userInterfaceIdiom");

  if (v19)
  {
    v13 = COERCE_DOUBLE(swift_allocObject(v8, 48, 7));
    *(_OWORD *)(*(_QWORD *)&v13 + 16) = xmmword_100EA7DB0;
    v8 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
    if (v8)
    {
      *(_QWORD *)(*(_QWORD *)&v13 + 32) = v8;
      v14 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
      if (v14)
        goto LABEL_10;
      goto LABEL_39;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v34 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
  if (!v34)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(v34, "setActive:", 1);
LABEL_11:
  v23 = swift_allocObject(&unk_1010B23B8, 32, 7);
  *(_BYTE *)(v23 + 16) = a1 & 1;
  *(_QWORD *)(v23 + 24) = a3;
  v3 = (char *)swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a3);
  v4 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a3);
  v24 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a3);
  if ((a2 & 1) == 0)
  {
    v31 = a3;
    swift_retain(v3);
    swift_retain(v4);
    swift_retain(v24);
    sub_10012917C(a1 & 1, (uint64_t)v31);
    sub_1001292AC((uint64_t)v3);
    swift_release(v3);
    sub_100129524(v4);
    swift_release(v4);
    sub_100129754(v24);
    swift_release_n(v24, 2, v32);
    swift_release(v23);
    swift_release(v3);
    v33 = v4;
LABEL_15:
    swift_release(v33);
    return;
  }
  v25 = OBJC_IVAR___MusicNowPlayingControlsViewController_animationData;
  v26 = *(_QWORD *)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData];
  if (v26)
  {
    v27 = swift_unknownObjectWeakInit(&aBlock, a3);
    __chkstk_darwin(v27);
    v109[2] = &aBlock;
    v109[3] = sub_10013B874;
    v109[4] = v23;
    v28 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, a3);
    v29 = (_QWORD *)swift_allocObject(&unk_1010B2610, 56, 7);
    v29[2] = v28;
    v29[3] = sub_10013B880;
    v29[4] = v3;
    v29[5] = sub_10013B888;
    v29[6] = v4;
    a3;
    swift_retain(v26);
    swift_retain(v28);
    swift_retain(v3);
    swift_retain(v4);
    sub_10068F948(v26, (uint64_t)sub_10013B890, v24, (void (*)(id))sub_10013B93C, (uint64_t)v109, (uint64_t)sub_10013B980, (uint64_t)v29);
    swift_release(v26);
    swift_release(v4);
    swift_release(v3);
    swift_release(v24);
    swift_release(v29);
    swift_release(v28);
    swift_release(v23);
    swift_unknownObjectWeakDestroy(&aBlock, v30);
    return;
  }
  v121 = v24;
  v35 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
  v36 = *(void **)&a3[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  if (!v36)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    swift_release(v4);
    swift_release(v3);
    __break(1u);
    goto LABEL_43;
  }
  v37 = a3;
  swift_retain(v3);
  v38 = objc_msgSend(v36, "snapshotViewAfterScreenUpdates:", 0, swift_retain(v4).n128_f64[0]);
  if (!v38)
  {
    swift_release(v3);
    v108 = swift_release(v4);
    sub_100126638(a1 & 1, 0, v37, v108);
    swift_release(v121);
    swift_release(v4);
    swift_release(v3);
    v33 = v23;
    goto LABEL_15;
  }
  v39 = v38;
  v118 = v25;
  v40 = objc_msgSend(v37, "traitCollection");
  v41 = sub_10013B23C();
  v42 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v41);

  if ((v42 & 1) != 0)
  {
    v43 = objc_msgSend(v39, "layer");
    objc_msgSend(v43, "setCompositingFilter:", kCAFilterPlusL);

    v44 = objc_msgSend(v39, "layer");
    objc_msgSend(v44, "setAllowsGroupBlending:", 0);

    v45 = objc_msgSend(v39, "layer");
    objc_msgSend(v45, "setAllowsGroupOpacity:", 0);

  }
  v46 = *(void **)&a3[v35];
  if (!v46)
    goto LABEL_42;
  objc_msgSend(v46, "frame");
  objc_msgSend(v39, "setFrame:");
  objc_msgSend(*(id *)&v37[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "insertSubview:atIndex:", v39, 0);
  sub_1001292AC((uint64_t)v3);
  swift_release(v3);
  sub_100129524(v4);
  v47 = objc_msgSend(v37, "view", swift_release(v4).n128_f64[0]);
  if (!v47)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v48 = v47;
  objc_msgSend(v47, "layoutIfNeeded");

  sub_10012917C(a1 & 1, (uint64_t)v37);
  v49 = *(void **)&a3[v35];
  if (!v49)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  CGAffineTransformMakeTranslation(&aBlock, 0.0, 130.0);
  objc_msgSend(v49, "setTransform:", &aBlock);
  v50 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 350.0, 40.0, 0.0, 0.0);
  v51 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v50, 0.0);

  v52 = swift_allocObject(&unk_1010B23E0, 32, 7);
  *(_QWORD *)(v52 + 16) = v39;
  *(_QWORD *)(v52 + 24) = v37;
  v53 = v37;
  v120 = v39;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10013B898, v52);
  swift_release(v52);
  v54 = COERCE_DOUBLE(swift_allocObject(&unk_1010B19B8, 24, 7));
  swift_unknownObjectWeakInit(*(_QWORD *)&v54 + 16, v53);
  *(_QWORD *)&aBlock.tx = sub_10013B8BC;
  aBlock.ty = v54;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_10012F6FC;
  *(_QWORD *)&aBlock.d = &unk_1010B23F8;
  v55 = _Block_copy(&aBlock);
  v117 = v51;
  objc_msgSend(v51, "addCompletion:", v55, swift_release(*(_QWORD *)&aBlock.ty).n128_f64[0]);
  _Block_release(v55);
  v56 = *(void **)&a3[v35];
  if (!v56)
  {
LABEL_45:
    __break(1u);
    return;
  }
  objc_msgSend(v56, "setAlpha:", 0.0);
  v57 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.18, 0.42, 0.0, 0.58, 1.0);
  v115 = v57;
  v58 = COERCE_DOUBLE(swift_allocObject(&unk_1010B2430, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v58 + 16) = v53;
  *(_QWORD *)&aBlock.tx = sub_10013B800;
  aBlock.ty = v58;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B2448;
  v59 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v61 = v53;
  objc_msgSend(v57, "addAnimations:", v59, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v59);
  v62 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.18, 0.42, 0.0, 0.58, 1.0);
  v113 = v62;
  v63 = COERCE_DOUBLE(swift_allocObject(&unk_1010B2480, 32, 7));
  v64 = v120;
  *(_QWORD *)(*(_QWORD *)&v63 + 16) = v120;
  *(_QWORD *)(*(_QWORD *)&v63 + 24) = v61;
  *(_QWORD *)&aBlock.tx = sub_10013B8C4;
  aBlock.ty = v63;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B2498;
  v65 = _Block_copy(&aBlock);
  v66 = aBlock.ty;
  v67 = v61;
  v114 = v64;
  objc_msgSend(v62, "addAnimations:", v65, swift_release(*(_QWORD *)&v66).n128_f64[0]);
  _Block_release(v65);
  v68 = _s13AnimationDataC7ContextCMa();
  v120 = (id)swift_allocObject(v68, 16, 7);
  v69 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 450.0, 45.0, 0.0, 0.0);
  v70 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v69, 0.0);
  v112 = v70;

  v71 = COERCE_DOUBLE(swift_allocObject(&unk_1010B24D0, 32, 7));
  v72 = v121;
  *(_QWORD *)(*(_QWORD *)&v71 + 16) = sub_10013B890;
  *(_QWORD *)(*(_QWORD *)&v71 + 24) = v72;
  *(_QWORD *)&aBlock.tx = sub_10013C910;
  aBlock.ty = v71;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B24E8;
  v73 = _Block_copy(&aBlock);
  v74 = aBlock.ty;
  swift_retain(v72);
  objc_msgSend(v70, "addAnimations:", v73, swift_release(*(_QWORD *)&v74).n128_f64[0]);
  _Block_release(v73);
  v75 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 450.0, 45.0, 0.0, 0.0);
  v76 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v75, 0.0);
  v111 = v76;

  v77 = COERCE_DOUBLE(swift_allocObject(&unk_1010B2520, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v77 + 16) = v67;
  *(_QWORD *)&aBlock.tx = sub_10013C8AC;
  aBlock.ty = v77;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B2538;
  v78 = _Block_copy(&aBlock);
  v79 = aBlock.ty;
  v119 = v67;
  objc_msgSend(v76, "addAnimations:", v78, swift_release(*(_QWORD *)&v79).n128_f64[0]);
  _Block_release(v78);
  v80 = _s13AnimationDataCMa();
  swift_allocObject(v80, 104, 7);
  v81 = v114;
  v82 = v117;
  v83 = v113;
  v84 = v115;
  v85 = v112;
  v86 = v111;
  v117 = v82;
  v115 = v83;
  v111 = v84;
  v113 = v86;
  v114 = v85;
  v87 = sub_1006921A8(1, v81, v82, v83, v84, v85, v86);
  v88 = *(_QWORD *)(v87 + 80);
  v89 = v120;
  *(_QWORD *)(v87 + 80) = v120;
  swift_retain(v89);
  swift_release(v88);
  v90 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v90 + 16, v119);
  v91 = swift_allocObject(&unk_1010B2570, 32, 7);
  *(_QWORD *)(v91 + 16) = v90;
  *(_QWORD *)(v91 + 24) = v81;
  v92 = swift_allocObject(&unk_1010B2598, 32, 7);
  *(_QWORD *)(v92 + 16) = sub_10013B8D0;
  *(_QWORD *)(v92 + 24) = v91;
  v110 = (_QWORD *)(v87 + 88);
  swift_beginAccess(v87 + 88, &aBlock, 33, 0);
  v93 = *(_QWORD **)(v87 + 88);
  v112 = v81;
  swift_retain(v90);
  swift_retain(v91);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v93);
  *(_QWORD *)(v87 + 88) = v93;
  v116 = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v93 = sub_100431F80(0, v93[2] + 1, 1, v93);
    *v110 = v93;
  }
  v96 = v93[2];
  v95 = v93[3];
  if (v96 >= v95 >> 1)
  {
    v93 = sub_100431F80((_QWORD *)(v95 > 1), v96 + 1, 1, v93);
    *v110 = v93;
  }
  v93[2] = v96 + 1;
  v97 = &v93[2 * v96];
  v97[4] = sub_1001095DC;
  v97[5] = v92;
  swift_endAccess(&aBlock);
  swift_release(v91);
  swift_release(v90);
  v98 = *(_QWORD *)&a3[v118];
  *(_QWORD *)&a3[v118] = v87;
  swift_retain_n(v87, 2);
  swift_release(v98);
  v99 = OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate;
  if (v119[OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate] == 1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v119[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView]);
    if (Strong)
    {
      v101 = Strong;
      sub_100136688(Strong, 4u);

      v119[v99] = 0;
    }
  }
  swift_release(v87);
  v102 = (_QWORD *)swift_allocObject(&unk_1010B25C0, 40, 7);
  v103 = v120;
  v102[2] = v120;
  v102[3] = v87;
  v104 = v111;
  v102[4] = v111;
  *(_QWORD *)&aBlock.tx = sub_10013B858;
  *(_QWORD *)&aBlock.ty = v102;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_10012F6FC;
  *(_QWORD *)&aBlock.d = &unk_1010B25D8;
  v105 = _Block_copy(&aBlock);
  v106 = aBlock.ty;
  v107 = v104;
  swift_retain(v103);
  swift_retain(v87);
  objc_msgSend(v115, "addCompletion:", v105, swift_release(*(_QWORD *)&v106).n128_f64[0]);
  _Block_release(v105);
  objc_msgSend(v115, "startAnimation");
  objc_msgSend(v114, "startAnimation");
  objc_msgSend(v113, "startAnimation");
  objc_msgSend(v117, "startAnimation");
  swift_release(v116);
  swift_release(v3);
  swift_release(v4);
  swift_release(v121);
  swift_release(v87);

  swift_release(v103);
}

void sub_100127664(char a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  void *v11;
  CGFloat v12;
  id v13;
  Class isa;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  char v19;
  CGFloat v20;
  void *v21;
  char *v22;
  id v23;
  Class v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  char *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  unint64_t v39;
  char v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  uint64_t Strong;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  char v53;
  __n128 v54;
  void *v55;
  void *v56;
  id v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  double v77;
  id v78;
  id v79;
  uint64_t v80;
  _BYTE *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  void *v89;
  _BYTE *v90;
  id v91;
  CGFloat v92;
  void *v93;
  CGFloat ty;
  _BYTE *v95;
  uint64_t v96;
  void *v97;
  id v98;
  _QWORD *v99;
  void *v100;
  CGFloat v101;
  id v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  char *v107;
  uint64_t v108;
  char *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  id v118;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void *v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  void *v131;
  CGFloat v132;
  char *v133;
  id v134;
  _QWORD v135[4];
  _QWORD *v136;
  char *v137;
  char *v138;
  id v139;
  id v140;
  uint64_t v141;
  char *v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  CGAffineTransform aBlock;

  v9 = (char *)sub_100007E8C((uint64_t *)&unk_1011A1470);
  *(double *)&v10 = COERCE_DOUBLE(swift_allocObject(v9, 40, 7));
  *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
  v11 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint];
  if (!v11)
  {
    __break(1u);
    goto LABEL_59;
  }
  v12 = *(double *)&v10;
  v4 = (char *)objc_opt_self(NSLayoutConstraint);
  *(_QWORD *)(*(_QWORD *)&v12 + 32) = v11;
  aBlock.a = v12;
  specialized Array._endMutation()(v4);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  v13 = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "deactivateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v12).n128_f64[0]);

  v15 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if (v16)
    goto LABEL_5;
  v17 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint];
  if (!v17)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  objc_msgSend(v17, "setActive:", 0);
LABEL_5:
  if (!a2[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType])
  {
    v18 = 0x746361706D6F63;
LABEL_9:
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, 0xE700000000000000, 0x4572616C75676572, 0xEF6465646E657478, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v19 & 1) != 0)
      goto LABEL_14;
    v20 = COERCE_DOUBLE(swift_allocObject(v9, 48, 7));
    *(_OWORD *)(*(_QWORD *)&v20 + 16) = xmmword_100EA7DB0;
    v9 = *(char **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
    if (v9)
    {
      *(_QWORD *)(*(_QWORD *)&v20 + 32) = v9;
      v21 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
      if (v21)
      {
        *(_QWORD *)(*(_QWORD *)&v20 + 40) = v21;
        aBlock.a = v20;
        specialized Array._endMutation()(*(_QWORD *)&v20);
        v22 = v9;
        v23 = v21;
        v24 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v4, "activateConstraints:", v24, swift_bridgeObjectRelease(*(_QWORD *)&aBlock.a).n128_f64[0]);

        goto LABEL_14;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (a2[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType] == 1)
  {
    v18 = 0x72616C75676572;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease(0xEF6465646E657478);
LABEL_14:
  v4 = (char *)swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a2);
  v9 = (char *)swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a2);
  v25 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, a2);
  v26 = swift_allocObject(&unk_1010B19B8, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, a2);
  if ((a1 & 1) == 0)
  {
    swift_retain(v4);
    swift_retain(v9);
    swift_retain(v25);
    swift_retain(v26);
    sub_100128BF4(v25);
    swift_release(v25);
    sub_100137160();
    sub_100128A54((uint64_t)v9);
    swift_release(v9);
    sub_100128804((uint64_t)v4);
    swift_release(v4);
    sub_100128D00(v26);
    swift_release(v26);
    v33 = *(id *)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView];
    sub_100136688(v33, 4u);

    objc_msgSend(a2, "setControlsHidden:animated:", 0, 0);
    swift_release(v25);
    swift_release(v9);
    swift_release(v4);
    v34 = (char *)v26;
LABEL_18:
    swift_release(v34);
    return;
  }
  v27 = OBJC_IVAR___MusicNowPlayingControlsViewController_animationData;
  v28 = *(_QWORD *)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData];
  if (v28)
  {
    v29 = swift_unknownObjectWeakInit(&aBlock, a2);
    __chkstk_darwin(v29);
    v135[2] = &aBlock;
    v30 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16, a2);
    v31 = (_QWORD *)swift_allocObject(&unk_1010B2390, 56, 7);
    v31[2] = v30;
    v31[3] = sub_10013B76C;
    v31[4] = v4;
    v31[5] = sub_10013B774;
    v31[6] = v9;
    swift_retain(v28);
    swift_retain(v30);
    swift_retain(v4);
    swift_retain(v9);
    sub_10068F948(v28, (uint64_t)sub_10013B77C, v25, (void (*)(id))sub_10013B85C, (uint64_t)v135, (uint64_t)sub_10013B868, (uint64_t)v31);
    swift_release(v28);
    swift_release(v9);
    swift_release(v4);
    swift_release(v26);
    swift_release(v25);
    swift_release(v31);
    swift_release(v30);
    swift_unknownObjectWeakDestroy(&aBlock, v32);
    return;
  }
  v149 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
  v35 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  if (!v35)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    swift_release(v9);
    swift_release(v4);
    __break(1u);
    goto LABEL_64;
  }
  swift_retain(v4);
  v36 = objc_msgSend(v35, "snapshotViewAfterScreenUpdates:", 0, swift_retain(v9).n128_f64[0]);
  if (!v36)
  {
    swift_release(v4);
    v54 = swift_release(v9);
    sub_100127664(0, a2, a3, a4, v54);
    swift_release(v26);
    swift_release(v25);
    swift_release(v9);
    v34 = v4;
    goto LABEL_18;
  }
  v37 = v36;
  LODWORD(v147) = a3;
  v146 = v27;
  v38 = objc_msgSend(a2, "traitCollection");
  v39 = sub_10013B23C();
  v40 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v39);

  if ((v40 & 1) != 0)
  {
    v41 = objc_msgSend(v37, "layer");
    objc_msgSend(v41, "setCompositingFilter:", kCAFilterPlusL);

    v42 = objc_msgSend(v37, "layer");
    objc_msgSend(v42, "setAllowsGroupBlending:", 0);

    v43 = objc_msgSend(v37, "layer");
    objc_msgSend(v43, "setAllowsGroupOpacity:", 0);

  }
  v44 = &a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView];
  Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView]);
  v148 = v25;
  v46 = v149;
  v137 = v44;
  if (!Strong)
    goto LABEL_36;
  v47 = (void *)Strong;
  v48 = *(void **)&a2[v149];
  if (!v48)
  {
LABEL_68:
    swift_release(v9);
    swift_release(v4);
    __break(1u);
    goto LABEL_69;
  }
  v49 = objc_msgSend(v48, "superview");
  v50 = swift_unknownObjectWeakLoadStrong(v44);
  v51 = (void *)v50;
  if (v49)
  {
    if (v50)
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      v52 = v49;
      v46 = v149;
      v53 = static NSObject.== infix(_:_:)(v52, v51);

      if ((v53 & 1) == 0)
        goto LABEL_35;
LABEL_31:
      v55 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView];
      v56 = *(void **)&a2[v46];
      if (!v56)
      {
LABEL_71:
        v134 = v55;
        swift_release(v9);
        swift_release(v4);
        __break(1u);
        return;
      }
      v57 = v55;
      objc_msgSend(v56, "frame");
      objc_msgSend(v57, "convertRect:fromCoordinateSpace:", v47);
      v59 = v58;
      v61 = v60;
      v63 = v62;
      v65 = v64;

      objc_msgSend(v37, "setFrame:", v59, v61, v63, v65);
      goto LABEL_38;
    }
    v51 = v49;
  }
  else if (!v50)
  {
    goto LABEL_31;
  }

  v47 = v51;
LABEL_35:

LABEL_36:
  v66 = *(void **)&a2[v46];
  if (!v66)
  {
LABEL_67:
    swift_release(v9);
    swift_release(v4);
    __break(1u);
    goto LABEL_68;
  }
  objc_msgSend(v66, "frame");
  objc_msgSend(v37, "setFrame:");
LABEL_38:
  v67 = OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView;
  objc_msgSend(*(id *)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "insertSubview:atIndex:", v37, 0);
  if (a2[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingHasTallMotionData] == 1)
  {
    v68 = *(id *)&a2[v67];
    sub_100136688(v68, v147);

    v69 = objc_msgSend(a2, "view");
    if (!v69)
    {
LABEL_70:
      swift_release(v9);
      swift_release(v4);
      __break(1u);
      goto LABEL_71;
    }
    v70 = v69;
    objc_msgSend(v69, "layoutIfNeeded");

  }
  v71 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v71)
    goto LABEL_63;
  objc_msgSend(v71, "setMarqueeEnabled:withOptions:", 0, 0);
  v72 = *(void **)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v72)
  {
LABEL_64:
    swift_release(v9);
    swift_release(v4);
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  objc_msgSend(v72, "setMarqueeEnabled:withOptions:", 0, 0);
  sub_100128804((uint64_t)v4);
  swift_release(v4);
  sub_100128A54((uint64_t)v9);
  swift_release(v9);
  v73 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset;
  if (*(double *)&a2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset] == 0.0)
  {
    v74 = objc_msgSend(a2, "view");
    if (!v74)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v75 = v74;
    objc_msgSend(v74, "layoutIfNeeded");

  }
  sub_100137160();
  objc_msgSend(v37, "setHidden:", *(double *)&a2[v73] != 0.0);
  v76 = *(void **)&a2[v46];
  v147 = (uint64_t)v37;
  if (!v76)
    goto LABEL_65;
  v142 = v4;
  v77 = 50.0;
  if (*(double *)&a2[v73] <= 0.0)
    v77 = -300.0;
  CGAffineTransformMakeTranslation(&aBlock, 0.0, v77);
  objc_msgSend(v76, "setTransform:", &aBlock);
  v78 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 450.0, 45.0, 0.0, 0.0);
  v79 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v78, 0.0);

  v80 = swift_allocObject(&unk_1010B21D8, 24, 7);
  *(_QWORD *)(v80 + 16) = a2;
  v81 = a2;
  v144 = v79;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10013C8AC, v80);
  swift_release(v80);
  v82 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 450.0, 45.0, 0.0, 0.0);
  v83 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v82, 0.0);

  v84 = swift_allocObject(&unk_1010B2200, 32, 7);
  *(_QWORD *)(v84 + 16) = sub_10013B77C;
  v85 = v148;
  *(_QWORD *)(v84 + 24) = v148;
  swift_retain(v85);
  v143 = v83;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10004D5F4, v84);
  swift_release(v84);
  v86 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 450.0, 45.0, 0.0, 0.0);
  v87 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v86, 0.0);

  v88 = swift_allocObject(&unk_1010B2228, 32, 7);
  v89 = (void *)v147;
  *(_QWORD *)(v88 + 16) = v147;
  *(_QWORD *)(v88 + 24) = v81;
  v90 = v81;
  v91 = v89;
  v145 = v87;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10013B7DC, v88);
  swift_release(v88);
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.18, 0.42, 0.0, 0.58, 1.0);
  v92 = COERCE_DOUBLE(swift_allocObject(&unk_1010B2250, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v92 + 16) = v90;
  *(_QWORD *)&aBlock.tx = sub_10013B800;
  aBlock.ty = v92;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B2268;
  v93 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v95 = v90;
  objc_msgSend(v4, "addAnimations:", v93, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v93);
  v96 = _s13AnimationDataC7ContextCMa();
  v147 = swift_allocObject(v96, 16, 7);
  v97 = *(void **)&a2[v149];
  if (!v97)
    goto LABEL_66;
  objc_msgSend(v97, "setAlpha:", 0.0);
  v98 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.1, 0.42, 0.0, 0.58, 1.0);
  v99 = (_QWORD *)swift_allocObject(&unk_1010B22A0, 40, 7);
  v99[2] = v91;
  v99[3] = sub_10013B784;
  v99[4] = v26;
  *(_QWORD *)&aBlock.tx = sub_10013B814;
  *(_QWORD *)&aBlock.ty = v99;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1001DBD98;
  *(_QWORD *)&aBlock.d = &unk_1010B22B8;
  v100 = _Block_copy(&aBlock);
  v101 = aBlock.ty;
  v102 = v91;
  swift_retain(v26);
  objc_msgSend(v98, "addAnimations:", v100, swift_release(*(_QWORD *)&v101).n128_f64[0]);
  _Block_release(v100);
  objc_msgSend(v95, "setControlsHidden:animated:", 0, 1);
  v103 = _s13AnimationDataCMa();
  swift_allocObject(v103, 104, 7);
  v104 = v102;
  v105 = v145;
  v106 = v98;
  v107 = v4;
  v108 = (uint64_t)v95;
  v109 = v107;
  v110 = v143;
  v145 = v105;
  v140 = v106;
  v138 = v109;
  v143 = v144;
  v144 = v110;
  v111 = sub_1006921A8(0, v104, v105, v106, v109, v110, v143);
  v112 = *(_QWORD *)(v111 + 80);
  v113 = v147;
  *(_QWORD *)(v111 + 80) = v147;
  swift_retain(v113);
  swift_release(v112);
  v114 = swift_allocObject(&unk_1010B19B8, 24, 7);
  v149 = v108;
  swift_unknownObjectWeakInit(v114 + 16, v108);
  v115 = swift_allocObject(&unk_1010B22F0, 32, 7);
  *(_QWORD *)(v115 + 16) = v114;
  *(_QWORD *)(v115 + 24) = v104;
  v116 = swift_allocObject(&unk_1010B2318, 32, 7);
  *(_QWORD *)(v116 + 16) = sub_10013B84C;
  *(_QWORD *)(v116 + 24) = v115;
  swift_beginAccess(v111 + 88, &aBlock, 33, 0);
  v117 = *(_QWORD **)(v111 + 88);
  v118 = v104;
  swift_retain(v114);
  swift_retain(v115);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v117);
  *(_QWORD *)(v111 + 88) = v117;
  v141 = v26;
  v139 = v118;
  v136 = (_QWORD *)(v111 + 88);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v117 = sub_100431F80(0, v117[2] + 1, 1, v117);
    *(_QWORD *)(v111 + 88) = v117;
  }
  v121 = v117[2];
  v120 = v117[3];
  v122 = v142;
  if (v121 >= v120 >> 1)
  {
    v117 = sub_100431F80((_QWORD *)(v120 > 1), v121 + 1, 1, v117);
    *v136 = v117;
  }
  v117[2] = v121 + 1;
  v123 = &v117[2 * v121];
  v123[4] = sub_10010942C;
  v123[5] = v116;
  swift_endAccess(&aBlock);
  swift_release(v115);
  swift_release(v114);
  v124 = *(_QWORD *)&a2[v146];
  *(_QWORD *)&a2[v146] = v111;
  swift_retain_n(v111, 2);
  swift_release(v124);
  v125 = OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate;
  if (*(_BYTE *)(v149 + OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate) == 1)
  {
    v126 = (void *)swift_unknownObjectWeakLoadStrong(v137);
    if (v126)
    {
      v127 = v126;
      sub_100136688(v126, 4u);

      *(_BYTE *)(v149 + v125) = 0;
    }
  }
  swift_release(v111);
  v128 = (_QWORD *)swift_allocObject(&unk_1010B2340, 40, 7);
  v129 = v147;
  v128[2] = v147;
  v128[3] = v111;
  v130 = v138;
  v128[4] = v138;
  *(_QWORD *)&aBlock.tx = sub_10013B858;
  *(_QWORD *)&aBlock.ty = v128;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_10012F6FC;
  *(_QWORD *)&aBlock.d = &unk_1010B2358;
  v131 = _Block_copy(&aBlock);
  v132 = aBlock.ty;
  v133 = v130;
  swift_retain(v129);
  swift_retain(v111);
  objc_msgSend(v140, "addCompletion:", v131, swift_release(*(_QWORD *)&v132).n128_f64[0]);
  _Block_release(v131);
  objc_msgSend(v143, "startAnimation");
  objc_msgSend(v145, "startAnimation");
  objc_msgSend(v140, "startAnimation");
  objc_msgSend(v144, "startAnimation");
  swift_release(v148);
  swift_release(v9);
  swift_release(v122);
  swift_release(v141);
  swift_release(v111);

  swift_release(v129);
}

void sub_100128804(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  Class isa;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _BOOL8 v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  unint64_t v21;
  char v22[24];
  uint64_t v23;
  char v24[24];
  char v25[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = &v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints];
    swift_beginAccess(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints], v24, 0, 0);
    v6 = *(_QWORD *)v5;
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v8 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint];
    if (v8)
    {
      v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView;
      v10 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView];
      v11 = v8;
      v12 = (objc_msgSend(v10, "isHidden") & 1) == 0
         && v3[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] - 3 < 0xFFFFFFFE;
      objc_msgSend(v11, "setActive:", v12);

      v13 = (uint64_t *)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints];
      swift_beginAccess(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints], v22, 0, 0);
      v14 = *v13;
      v23 = v14;
      v15 = *(void **)&v3[v9];
      swift_bridgeObjectRetain();
      if ((objc_msgSend(v15, "isHidden") & 1) != 0)
        goto LABEL_10;
      v16 = v3;
      v17 = sub_1001399EC((unint64_t *)&v23, (uint64_t)v16);

      v18 = v23;
      if ((unint64_t)v23 >> 62)
      {
        if (v23 < 0)
          v21 = v23;
        else
          v21 = v23 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v19 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(v18);
        if (v19 >= v17)
          goto LABEL_9;
      }
      else
      {
        v19 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v19 >= v17)
        {
LABEL_9:
          sub_1001FEEB8(v17, v19);
          v14 = v23;
LABEL_10:
          v20 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v4, "activateConstraints:", v20, swift_bridgeObjectRelease(v14).n128_f64[0]);

          return;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100128A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return;
  v3 = (char *)Strong;
  v4 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView);
  if (!v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v5 = qword_10119B988;
  v6 = v4;
  if (v5 != -1)
    swift_once(&qword_10119B988, sub_10012C53C);
  objc_msgSend(v6, "setFadeEdgeInsets:", xmmword_1011A1A08, *(double *)&qword_1011A1A18, unk_1011A1A20);

  v7 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v7)
    goto LABEL_13;
  objc_msgSend(v7, "setFadeEdgeInsets:", xmmword_1011A1A08, *(double *)&qword_1011A1A18, unk_1011A1A20);
  sub_10011AF3C();
  sub_1001312F8();
  if (qword_10119C358 != -1)
    swift_once(&qword_10119C358, sub_1005EC118);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100048B14(v8, (uint64_t)qword_10124D428);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[NowPlayingControlsViewController] setting regular mode, updating metrics", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  sub_10012E6BC();
}

void sub_100128BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  void *v4;
  int v5;
  int v6;
  char *v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  int v11;
  _BOOL4 v12;
  char *v13;
  char v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
    if (v4)
      v5 = objc_msgSend(v4, "state") == (id)2;
    else
      v5 = 0;
    v6 = sub_10012BFA4();
    v7 = *(char **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
    if (v7)
    {
      if ((v6 & 1) != 0)
        v8 = 256;
      else
        v8 = 0;
      v9 = v8 | v5 | 0x4000;
      v10 = *(_WORD *)&v7[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
      *(_WORD *)&v7[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = v9;
      if ((v10 & 0xC000) != 0x4000
        || (v11 = (v10 & 1) == 0, v12 = (v10 & 0x100) == 0, v5 == v11)
        || ((v6 ^ v12) & 1) == 0)
      {
        v13 = v7;
        sub_100675910();
        objc_msgSend(v13, "setNeedsLayout");

      }
    }

  }
}

void sub_100128D00(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return;
  v3 = (char *)Strong;
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
  v5 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v5, "setHidden:", 0);
  v6 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(v6, "setAlpha:", 1.0);
  v7 = *(void **)&v3[v4];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    return;
  }
  objc_msgSend(v7, "setAlpha:", 1.0);
  v8 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView];
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v9, "setHidden:", 0);

  }
}

void sub_100128DDC(uint64_t a1)
{
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(a1, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100137160();

  }
}

void sub_100128E28(uint64_t a1, uint64_t (*a2)(id), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  _QWORD v16[6];
  _BYTE v17[24];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = *(id *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView);
    sub_100136688(v9, 4u);

    v10 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
    v11 = *(void **)&v8[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
    if (v11)
    {
      objc_msgSend(v11, "setAlpha:", 1.0);
      v12 = *(void **)&v8[v10];
      if (v12)
      {
        v16[0] = 0x3FF0000000000000;
        v16[1] = 0;
        v16[2] = 0;
        v16[3] = 0x3FF0000000000000;
        v16[4] = 0;
        v16[5] = 0;
        v13 = a2(objc_msgSend(v12, "setTransform:", v16));
        a4(v13);
        if (*(double *)&v8[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset] != 0.0)
        {
LABEL_7:

          return;
        }
        v14 = objc_msgSend(v8, "view");
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, "layoutIfNeeded");

          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_100128F68(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _BYTE v20[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return;
  v5 = (char *)Strong;
  if (qword_10119C5F0 != -1)
    swift_once(&qword_10119C5F0, sub_100690724);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048B14(v6, (uint64_t)qword_10124D6E8);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Completion initial setRegularMode", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(id *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView];
  sub_100136688(v11, 4u);

  objc_msgSend(a2, "removeFromSuperview");
  v12 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v12, "setMarqueeEnabled:withOptions:", 1, 0);
  v13 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v13, "setMarqueeEnabled:withOptions:", 1, 0);
  v14 = objc_msgSend(v5, "view");
  if (!v14)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v15 = v14;
  objc_msgSend(v14, "layoutIfNeeded");

  v16 = *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData];
  *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData] = 0;
  swift_release(v16);
  v17 = OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate;
  if (v5[OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate] == 1)
  {
    v18 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView]);
    if (v18)
    {
      v19 = v18;
      sub_100136688(v18, 4u);

      v5[v17] = 0;
    }
  }

}

void sub_10012917C(char a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;
  Class v10;

  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (!v5)
  {
    if ((a1 & 1) != 0)
      sub_100136F64();
    else
      sub_100136D90();
  }
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v9 = *(_QWORD *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints);
  swift_bridgeObjectRetain();
  v10 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

}

void sub_1001292AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  unint64_t *v4;
  unint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  Class isa;
  char *v20;
  uint64_t v21;
  Class v22;
  unint64_t v23;
  unint64_t v24[4];
  char v25[24];
  char v26[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return;
  v3 = (char *)Strong;
  v4 = (unint64_t *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints);
  swift_beginAccess(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints, v25, 0, 0);
  v5 = *v4;
  v24[0] = *v4;
  v6 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView];
  swift_bridgeObjectRetain();
  if ((objc_msgSend(v6, "isHidden") & 1) == 0)
  {
    v7 = v3;
    v8 = sub_1001399EC(v24, (uint64_t)v7);

    v9 = v24[0];
    if (v24[0] >> 62)
    {
      if ((v24[0] & 0x8000000000000000) != 0)
        v23 = v24[0];
      else
        v23 = v24[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v10 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v9);
      if (v10 >= v8)
        goto LABEL_5;
    }
    else
    {
      v10 = *(_QWORD *)((v24[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= v8)
      {
LABEL_5:
        sub_1001FEEB8(v8, v10);
        v5 = v24[0];
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_6:
  v11 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint];
  if (!v11)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v24[0] = v5;
  v12 = v11;
  v13 = swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = (void *)objc_opt_self(NSLayoutConstraint);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
  specialized Array._endMutation()(v17);
  v18 = v24[0];
  swift_bridgeObjectRelease(v5);

  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = &v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints];
  swift_beginAccess(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints], v24, 0, 0);
  v21 = *(_QWORD *)v20;
  swift_bridgeObjectRetain();
  v22 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "activateConstraints:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

}

void sub_100129524(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _BYTE v22[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return;
  v3 = (char *)Strong;
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView;
  v5 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView);
  if (!v5)
  {
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v5, "setMarqueeEnabled:withOptions:", 0, 0);
  v6 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView;
  v7 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v7)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v7, "setMarqueeEnabled:withOptions:", 0, 0);
  v8 = *(void **)&v3[v4];
  if (!v8)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = qword_10119B990;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_10119B990, sub_10012C554);
  objc_msgSend(v10, "setFadeEdgeInsets:", xmmword_1011A1A28, *(double *)&qword_1011A1A38, unk_1011A1A40);

  v11 = *(void **)&v3[v6];
  if (!v11)
    goto LABEL_19;
  objc_msgSend(v11, "setFadeEdgeInsets:", xmmword_1011A1A28, *(double *)&qword_1011A1A38, unk_1011A1A40);
  v12 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v12)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = (void *)objc_opt_self(UIFont);
  v14 = v12;
  v15 = objc_msgSend(v13, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v14, "setFont:", v15);

  v16 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v16)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v17 = objc_msgSend(v16, "titleLabel");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v13, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    objc_msgSend(v18, "setFont:", v19);

  }
  v20 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton];
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v21, "setHidden:", 1);

  }
}

void sub_100129754(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  char *v5;
  __int16 v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
    v5 = v4;

    if (v4)
    {
      v6 = *(_WORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
      *(_WORD *)&v5[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = 257;
      if ((v6 & 0xC101) != 0x101)
      {
        sub_100675910();
        objc_msgSend(v5, "setNeedsLayout");
      }

    }
  }
}

uint64_t sub_100129800(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t Strong;
  void *v5;
  _BYTE v7[24];

  swift_beginAccess(a1, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100125E64();

  }
  return a2();
}

void sub_100129864(uint64_t a1, uint64_t (*a2)(id), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  _QWORD v15[6];
  _BYTE v16[24];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
    v10 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
    if (v10)
    {
      objc_msgSend(v10, "setAlpha:", 1.0);
      v11 = *(void **)&v8[v9];
      if (v11)
      {
        v15[0] = 0x3FF0000000000000;
        v15[1] = 0;
        v15[2] = 0;
        v15[3] = 0x3FF0000000000000;
        v15[4] = 0;
        v15[5] = 0;
        v12 = a2(objc_msgSend(v11, "setTransform:", v15));
        a4(v12);
        v13 = objc_msgSend(v8, "view");
        if (v13)
        {
          v14 = v13;
          objc_msgSend(v13, "layoutIfNeeded");

          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

id sub_100129960(void *a1, uint64_t a2, CGFloat a3)
{
  id result;
  CGAffineTransform v6;

  CGAffineTransformMakeTranslation(&v6, 0.0, a3);
  objc_msgSend(a1, "setTransform:", &v6);
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  if (result)
  {
    *(_OWORD *)&v6.a = 0x3FF0000000000000uLL;
    v6.c = 0.0;
    v6.d = 1.0;
    *(_OWORD *)&v6.tx = 0uLL;
    return objc_msgSend(result, "setTransform:", &v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001299F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (!a1)
    {
      v6 = *(void **)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView);
      if (v6)
      {
        objc_msgSend(v6, "setMarqueeEnabled:withOptions:", 1, 0);
        v7 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
        if (v7)
        {
          objc_msgSend(v7, "setMarqueeEnabled:withOptions:", 1, 0);
          goto LABEL_6;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_6:

  }
}

void sub_100129A94(void *a1, uint64_t a2)
{
  void *v3;
  id v4;

  objc_msgSend(a1, "setAlpha:", 0.0);
  v3 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction);
  if (v3)
  {
    v4 = v3;
    dispatch thunk of ReactionEffectInteraction.clearReactions()();

  }
}

void sub_100129AFC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _BYTE v17[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    if (qword_10119C5F0 != -1)
      swift_once(&qword_10119C5F0, sub_100690724);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048B14(v6, (uint64_t)qword_10124D6E8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Completion initial setCollapsedMode", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData];
    *(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData] = 0;
    swift_release(v11);
    v12 = OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate;
    if (v5[OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate] == 1)
    {
      v13 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView]);
      if (v13)
      {
        v14 = v13;
        sub_100136688(v13, 4u);

        v5[v12] = 0;
      }
    }
    objc_msgSend(a2, "removeFromSuperview");
    v15 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
    if (v15)
    {
      objc_msgSend(v15, "setMarqueeEnabled:withOptions:", 1, 0);
      v16 = *(void **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
      if (v16)
      {
        objc_msgSend(v16, "setMarqueeEnabled:withOptions:", 1, 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100129CB8(char a1, char a2)
{
  _BYTE *v2;
  char v3;
  _BYTE *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  Class isa;
  uint64_t v17;
  void *v18;
  id v19;
  Class v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _BYTE *v26;
  double v27;
  id v28;
  void *v29;
  id v30;
  _BYTE *v31;
  char v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  Class v37;
  uint64_t v38;
  void *v39;
  id v40;
  Class v41;
  Class v42;
  void *v43;
  uint64_t v44;
  id v45;
  Class v46;
  void *v47;
  uint64_t v48;
  id v49;
  Class v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  void *v55;
  void *v56;
  void **aBlock;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  void *v60;
  void *v61;
  uint64_t v62;

  v3 = a1 & 1;
  if (v2[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden] == (a1 & 1))
    return;
  v4 = v2;
  v2[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden] = v3;
  v7 = 0x746361706D6F63;
  v8 = OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType;
  v9 = 0x746361706D6F63;
  if (v2[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType])
  {
    if (v2[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType] != 1)
    {
      swift_bridgeObjectRelease(0xEF6465646E657478);
LABEL_12:
      v21 = v4[v8];
      if (!v4[v8])
        goto LABEL_15;
      goto LABEL_13;
    }
    v9 = 0x72616C75676572;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, 0xE700000000000000, 0x4572616C75676572, 0xEF6465646E657478, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v10 & 1) != 0)
    goto LABEL_12;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7A90;
  if ((a1 & 1) != 0)
  {
    v13 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
    if (!v13)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v14 = (void *)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v12 + 32) = v13;
    aBlock = (void **)v12;
    specialized Array._endMutation()(v14);
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    v15 = v13;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v17 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100EA7A90;
    v18 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint];
    if (!v18)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    *(_QWORD *)(v17 + 32) = v18;
    aBlock = (void **)v17;
    specialized Array._endMutation()(v17);
    v19 = v18;
    v20 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "activateConstraints:", v20, swift_bridgeObjectRelease(aBlock).n128_f64[0]);

    v21 = v4[v8];
    if (!v4[v8])
      goto LABEL_15;
  }
  else
  {
    v34 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint];
    if (!v34)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v35 = (void *)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v12 + 32) = v34;
    aBlock = (void **)v12;
    specialized Array._endMutation()(v35);
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    v36 = v34;
    v37 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v35, "deactivateConstraints:", v37, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v38 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v38 + 16) = xmmword_100EA7A90;
    v39 = *(void **)&v4[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint];
    if (!v39)
    {
LABEL_35:
      __break(1u);
      return;
    }
    *(_QWORD *)(v38 + 32) = v39;
    aBlock = (void **)v38;
    specialized Array._endMutation()(v38);
    v40 = v39;
    v41 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v35, "activateConstraints:", v41, swift_bridgeObjectRelease(aBlock).n128_f64[0]);

    v7 = 0x746361706D6F63;
    v21 = v4[v8];
    if (!v4[v8])
      goto LABEL_15;
  }
LABEL_13:
  if (v21 != 1)
  {
    swift_bridgeObjectRelease(0xEF6465646E657478);
    if ((a1 & 1) != 0)
      return;
    goto LABEL_19;
  }
  v7 = 0x72616C75676572;
LABEL_15:
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE700000000000000, 0x4572616C75676572, 0xEF6465646E657478, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v22 & 1) != 0 && (a1 & 1) != 0)
    return;
LABEL_19:
  v23 = swift_allocObject(&unk_1010B2A38, 32, 7);
  *(_BYTE *)(v23 + 16) = v3;
  *(_QWORD *)(v23 + 24) = v4;
  v24 = swift_allocObject(&unk_1010B2A60, 25, 7);
  *(_QWORD *)(v24 + 16) = v4;
  *(_BYTE *)(v24 + 24) = v3;
  if ((a2 & 1) == 0)
  {
    v31 = v4;
    v32 = a1 & 1;
    sub_10012A40C(v32, (uint64_t)v31);
    sub_10012A690((uint64_t)v31, v32);
    v33 = objc_msgSend(v31, "view");
    if (v33)
    {
      v56 = v33;
      objc_msgSend(v33, "setNeedsLayout");
      swift_release(v23);
      swift_release(v24);

      return;
    }
    __break(1u);
    goto LABEL_32;
  }
  v25 = objc_allocWithZone((Class)UISpringTimingParameters);
  v26 = v4;
  v27 = 0.0;
  v28 = objc_msgSend(v25, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  v29 = v28;
  v55 = v26;
  if ((a1 & 1) != 0)
  {
    v30 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 986.0, 62.0, 0.0, 0.0);
    v27 = 0.1;
  }
  else
  {
    v30 = v28;
  }
  sub_10004A07C(0, &qword_1011A22E0, UIViewPropertyAnimator_ptr);
  v42 = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v30).super.isa;
  v61 = sub_10013C244;
  v62 = v23;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_1001DBD98;
  v60 = &unk_1010B2A78;
  v43 = _Block_copy(&aBlock);
  v44 = v62;
  swift_retain(v23);
  -[objc_class addAnimations:](v42, "addAnimations:", v43, swift_release(v44).n128_f64[0]);
  _Block_release(v43);
  v45 = v29;
  v46 = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v45).super.isa;
  v61 = sub_10013C250;
  v62 = v24;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_1001DBD98;
  v60 = &unk_1010B2AA0;
  v47 = _Block_copy(&aBlock);
  v48 = v62;
  swift_retain(v24);
  -[objc_class addAnimations:](v46, "addAnimations:", v47, swift_release(v48).n128_f64[0]);
  _Block_release(v47);
  v49 = v45;
  v50 = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v49).super.isa;
  v51 = swift_allocObject(&unk_1010B2AD8, 24, 7);
  *(_QWORD *)(v51 + 16) = v55;
  v61 = sub_10013C25C;
  v62 = v51;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_1001DBD98;
  v60 = &unk_1010B2AF0;
  v52 = _Block_copy(&aBlock);
  v53 = v62;
  v54 = v55;
  -[objc_class addAnimations:](v50, "addAnimations:", v52, swift_release(v53).n128_f64[0]);
  _Block_release(v52);
  -[objc_class startAnimation](v42, "startAnimation");
  -[objc_class startAnimation](v46, "startAnimation");
  -[objc_class startAnimationAfterDelay:](v50, "startAnimationAfterDelay:", v27);
  swift_release(v23);
  swift_release(v24);

}

id sub_10012A40C(char a1, uint64_t a2)
{
  double v3;
  uint64_t v4;
  id result;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  int v11;
  uint64_t v13;
  id v14;
  uint64_t v15;
  int v16;
  id v17;
  void *v18;
  _BOOL4 v19;
  double v20;
  id v21;
  id v22;
  char v23;
  double v24;

  if ((a1 & 1) != 0)
    v3 = 0.0;
  else
    v3 = 1.0;
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView;
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  result = objc_msgSend(result, "setAlpha:", v3);
  v7 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl);
  if (!v7)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = *(void **)(a2 + v4);
  if (!v8)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v9 = v7;
  objc_msgSend(v8, "alpha");
  objc_msgSend(v9, "setAlpha:");

  objc_msgSend(*(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl), "setAlpha:", v3);
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView);
  if (!result)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(result, "setAlpha:", v3);
  v10 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton);
  if (!v10)
    goto LABEL_24;
  v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode);
  if (v11 != 3 && v11 != 0)
  {
    v21 = v10;
    goto LABEL_22;
  }
  v13 = qword_10119B8B8;
  v14 = v10;
  if (v13 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v15 = qword_10124C790;
  swift_retain(qword_10124C790);
  v16 = GroupActivitiesManager.hasJoined.getter();
  swift_release(v15);
  v17 = sub_10012D4A8();
  if (v17)
  {
    v18 = v17;
    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v18))
    {
      v19 = MPModelPlaylist.hasJoinedCollaboration.getter();

      v20 = v3;
      if (((v16 | v19) & 1) != 0)
        goto LABEL_23;
      goto LABEL_22;
    }

  }
  v20 = v3;
  if ((v16 & 1) == 0)
LABEL_22:
    v20 = 0.0;
LABEL_23:
  objc_msgSend(v10, "setAlpha:", v20);

LABEL_24:
  v22 = sub_10011DAF0();
  v23 = sub_10012C0D8();
  v24 = 0.0;
  if ((v23 & 1) != 0)
    v24 = 1.0;
  objc_msgSend(v22, "setAlpha:", v24);

  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (!result)
    goto LABEL_35;
  objc_msgSend(result, "setAlpha:", v3);
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider);
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  objc_msgSend(result, "setAlpha:", v3);
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView);
  if (result)
    return objc_msgSend(result, "setHidden:", a1 & 1);
  return result;
}

void sub_10012A690(uint64_t a1, char a2)
{
  void *v4;
  CGFloat b;
  double a;
  double d;
  CGFloat c;
  CGFloat ty;
  CGFloat tx;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  CGAffineTransform v45;

  CGAffineTransformMakeTranslation(&v45, 0.0, 40.0);
  v4 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView);
  if (!v4)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  b = v45.b;
  a = v45.a;
  d = v45.d;
  c = v45.c;
  ty = v45.ty;
  tx = v45.tx;
  v11 = 1.0;
  if ((a2 & 1) != 0)
    v12 = v45.a;
  else
    v12 = 1.0;
  if ((a2 & 1) != 0)
    v13 = v45.b;
  else
    v13 = 0.0;
  if ((a2 & 1) != 0)
    v14 = v45.c;
  else
    v14 = 0.0;
  if ((a2 & 1) != 0)
  {
    v11 = v45.d;
    v15 = v45.tx;
  }
  else
  {
    v15 = 0.0;
  }
  if ((a2 & 1) != 0)
    v16 = v45.ty;
  else
    v16 = 0.0;
  v45.a = v12;
  v45.b = v13;
  v45.c = v14;
  v45.d = v11;
  v45.tx = v15;
  v45.ty = v16;
  objc_msgSend(v4, "setTransform:", &v45);
  v17 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
  v18 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl);
  if (!v18)
    goto LABEL_42;
  if ((a2 & 1) != 0)
  {
    CGAffineTransformMakeTranslation(&v45, 0.0, 65.0);
    v20 = *(_OWORD *)&v45.a;
    v19 = *(_OWORD *)&v45.c;
    v21 = *(_OWORD *)&v45.tx;
  }
  else
  {
    v19 = xmmword_100EAB8C0;
    v20 = xmmword_100EAB8D0;
    v21 = 0uLL;
  }
  *(_OWORD *)&v45.a = v20;
  *(_OWORD *)&v45.c = v19;
  *(_OWORD *)&v45.tx = v21;
  objc_msgSend(v18, "setTransform:", &v45);
  v22 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (!v22)
    goto LABEL_43;
  v23 = *(void **)(a1 + v17);
  if (!v23)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v24 = v22;
  objc_msgSend(v23, "transform");
  objc_msgSend(v24, "setTransform:", &v45);

  v25 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView);
  if (!v25)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if ((a2 & 1) != 0)
  {
    CGAffineTransformMakeTranslation(&v45, 0.0, 15.0);
    v27 = *(_OWORD *)&v45.a;
    v26 = *(_OWORD *)&v45.c;
    v28 = *(_OWORD *)&v45.tx;
  }
  else
  {
    v26 = xmmword_100EAB8C0;
    v27 = xmmword_100EAB8D0;
    v28 = 0uLL;
  }
  *(_OWORD *)&v45.a = v27;
  *(_OWORD *)&v45.c = v26;
  *(_OWORD *)&v45.tx = v28;
  objc_msgSend(v25, "setTransform:", &v45);
  v29 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider);
  if (!v29)
    goto LABEL_46;
  if ((a2 & 1) != 0)
  {
    CGAffineTransformMakeTranslation(&v45, 0.0, 5.0);
    v31 = *(_OWORD *)&v45.a;
    v30 = *(_OWORD *)&v45.c;
    v32 = *(_OWORD *)&v45.tx;
  }
  else
  {
    v30 = xmmword_100EAB8C0;
    v31 = xmmword_100EAB8D0;
    v32 = 0uLL;
  }
  *(_OWORD *)&v45.a = v31;
  *(_OWORD *)&v45.c = v30;
  *(_OWORD *)&v45.tx = v32;
  objc_msgSend(v29, "setTransform:", &v45);
  v33 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton);
  if (!v33)
    goto LABEL_47;
  v34 = a;
  v35 = b;
  v36 = c;
  v37 = d;
  v38 = tx;
  v39 = ty;
  if ((a2 & 1) == 0)
  {
    v35 = 0.0;
    v34 = 1.0;
    v36 = 0.0;
    v37 = 1.0;
    v38 = 0.0;
    v39 = 0.0;
  }
  v45.a = v34;
  v45.b = v35;
  v45.c = v36;
  v45.d = v37;
  v45.tx = v38;
  v45.ty = v39;
  objc_msgSend(v33, "setTransform:", &v45);
  v40 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton);
  if (!v40)
    goto LABEL_48;
  if ((a2 & 1) == 0)
  {
    d = 1.0;
    ty = 0.0;
    tx = 0.0;
    c = 0.0;
    b = 0.0;
    a = 1.0;
  }
  v45.a = a;
  v45.b = b;
  v45.c = c;
  v45.d = d;
  v45.tx = tx;
  v45.ty = ty;
  objc_msgSend(v40, "setTransform:", &v45);
  v41 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl);
  v45.a = a;
  v45.b = b;
  v45.c = c;
  v45.d = d;
  v45.tx = tx;
  v45.ty = ty;
  objc_msgSend(v41, "setTransform:", &v45);
  v42 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView);
  if (v42)
  {
    v43 = *(void **)(a1 + v17);
    if (v43)
    {
      v44 = v42;
      objc_msgSend(v43, "transform");
      objc_msgSend(v44, "setTransform:", &v45);

      return;
    }
LABEL_49:
    __break(1u);
  }
}

void sub_10012AA0C(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

void sub_10012AA9C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[8];

  swift_unknownObjectWeakInit(v10, v0);
  v1 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v2 = objc_msgSend(v1, "activeUserState");

  v3 = objc_msgSend(v2, "music");
  v4 = objc_msgSend(v3, "userProfile");

  v5 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession);
  if (v5)
  {
    swift_unknownObjectWeakInit(&v9, v0);
    v6 = v5;
    if (v4 && objc_msgSend(v4, "collaborationAllowed"))
      sub_10012B9A0((uint64_t)&v9, v6);
    else
      sub_10012AC34((uint64_t)v10);

    swift_unknownObjectWeakDestroy(&v9, v7);
LABEL_7:
    swift_unknownObjectWeakDestroy(v10, v8);
    return;
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  if (((*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 624))() & 1) != 0)
  {
    if (v4)
    {
      if (!objc_msgSend(v4, "displayNameAccepted"))
        sub_10012AC34((uint64_t)v10);

    }
    goto LABEL_7;
  }
  swift_unknownObjectWeakDestroy(v10, v8);

}

void sub_10012AC34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *Strong;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  char v22[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1, v22, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "view");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "window");

      if (v10)
      {
        v11 = objc_msgSend(v10, "windowScene");

        if (v11)
        {
          v12 = Logger.sharePlayTogether.unsafeMutableAddressor();
          v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
          v14 = Logger.logObject.getter(v13);
          v15 = static os_log_type_t.default.getter(v14);
          if (os_log_type_enabled(v14, v15))
          {
            v16 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v16 = 0;
            _os_log_impl((void *)&_mh_execute_header, v14, v15, "[NowPlayingControlsViewController] [TermsAckFlow] user tapped session button, displaying ack flow", v16, 2u);
            swift_slowDealloc(v16, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          v17 = *(_QWORD *)&v7[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession];
          v18 = !v17 || (*(_BYTE *)(v17 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) & 1) == 0;
          v19 = swift_allocObject(&unk_1010B19B8, 24, 7);
          swift_unknownObjectWeakInit(v19 + 16, v7);
          swift_retain(v19);
          sub_1007C4014(v11, v18, (uint64_t)sub_10013B6B8, v19, 0, 0);
          swift_release_n(v19, 2, v20);

        }
      }

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10012AE54(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  _QWORD *v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id aBlock[5];
  _QWORD *v63;
  uint64_t v64;
  char v65[24];
  char v66[24];

  v4 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A21E0);
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A8ED0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v66, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v19 = (char *)Strong;
    v57 = v11;
    v58 = v10;
    v59 = a1;
    v20 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v20, v14);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[NowPlayingControlsViewController] [TermsAckFlow] profile updated, waiting for session", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v25 = swift_allocObject(&unk_1010B2098, 24, 7);
    *(_QWORD *)(v25 + 16) = 0;
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 552))();
    v26 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    aBlock[0] = (id)static OS_dispatch_queue.main.getter(v26, v27, v28, v29, v30, v31, v32, v33);
    v34 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
    v35 = sub_100049F28((unint64_t *)&unk_1011A21F0, (uint64_t *)&unk_1011A21E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v36 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v37 = v61;
    Publisher.receive<A>(on:options:)(aBlock, v6, v61, v26, v35, v36);
    sub_10004FF60((uint64_t)v6, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v37);
    v38 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16, v19);
    v39 = (_QWORD *)swift_allocObject(&unk_1010B20C0, 40, 7);
    v40 = v59;
    v39[2] = v59;
    v39[3] = v38;
    v39[4] = v25;
    v41 = sub_100049F28(&qword_1011A2200, (uint64_t *)&unk_1011A8ED0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v42 = v40;
    swift_retain(v25);
    v43 = v58;
    v44 = Publisher<>.sink(receiveValue:)(sub_10013B6E8, v39, v58, v41);
    v45 = swift_release(v39);
    (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v13, v43, v45);
    swift_beginAccess(v25 + 16, v65, 1, 0);
    v46 = *(_QWORD *)(v25 + 16);
    *(_QWORD *)(v25 + 16) = v44;
    swift_release(v46);
    v47 = *(_QWORD *)(v25 + 16);
    if (v47)
    {
      swift_beginAccess(&v19[OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions], aBlock, 33, 0);
      swift_retain(v47);
      sub_100194D9C(&v64, v47);
      v48 = v64;
      swift_endAccess(aBlock);
      swift_release(v48);
      v49 = (void *)objc_opt_self(NSTimer);
      v50 = swift_allocObject(&unk_1010B19B8, 24, 7);
      swift_unknownObjectWeakInit(v50 + 16, v19);
      v51 = (_QWORD *)swift_allocObject(&unk_1010B20E8, 40, 7);
      v51[2] = v42;
      v51[3] = v50;
      v51[4] = v25;
      aBlock[4] = sub_10013B72C;
      v63 = v51;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100223938;
      aBlock[3] = &unk_1010B2100;
      v52 = _Block_copy(aBlock);
      v53 = v63;
      v54 = v42;
      swift_retain(v25);
      swift_release(v53);
      v55 = objc_msgSend(v49, "scheduledTimerWithTimeInterval:repeats:block:", 0, v52, 5.0);
      _Block_release(v52);
      v56 = *(void **)&v19[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer];
      *(_QWORD *)&v19[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer] = v55;
      swift_release(v25);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10012B3B4(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *Strong;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t aBlock[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = Logger.sharePlayTogether.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  v14 = v12;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v29 = a4;
    v30 = a2;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    aBlock[0] = v26;
    *(_DWORD *)v17 = 136315138;
    v27 = v12;
    v28 = a3;
    if (v12)
    {
      v19 = *(_QWORD *)&v14[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier];
      v18 = *(_QWORD *)&v14[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier + 8];
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = 0xE300000000000000;
      v19 = 7104878;
    }
    v33 = sub_100322200(v19, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease(v18);

    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[NowPlayingControlsViewController] [TermsAckFlow] got session %s", v17, 0xCu);
    v20 = v26;
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a4 = v29;
    a2 = v30;
    a3 = v28;
    if (v27)
      goto LABEL_8;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v12)
    {
LABEL_8:
      v21 = swift_allocObject(&unk_1010B19B8, 24, 7);
      swift_beginAccess(a3 + 16, &v33, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
      swift_unknownObjectWeakInit(v21 + 16, Strong);

      v23 = swift_allocObject(&unk_1010B2138, 32, 7);
      *(_QWORD *)(v23 + 16) = v21;
      *(_QWORD *)(v23 + 24) = a4;
      aBlock[4] = (uint64_t)sub_10013B764;
      v32 = v23;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001DBD98;
      aBlock[3] = (uint64_t)&unk_1010B2150;
      v24 = _Block_copy(aBlock);
      v25 = v32;
      swift_retain(a4);
      objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v24, swift_release(v25).n128_f64[0]);
      _Block_release(v24);
    }
  }
}

void sub_10012B6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer), "invalidate");
    v7 = *(void **)&v5[v6];
    *(_QWORD *)&v5[v6] = 0;

    swift_beginAccess(a2 + 16, v13, 0, 0);
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      swift_beginAccess(&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions], v12, 33, 0);
      swift_retain(v8);
      v10 = sub_1001A3684(v9);
      swift_endAccess(v12);
      swift_release(v8);
      v11 = swift_release(v10);
      sub_10012AA9C(v11);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10012B7A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *Strong;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a3 + 16;
  v12 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[NowPlayingControlsViewController] [TermsAckFlow] timed out waiting for session, dismissing", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  swift_beginAccess(v11, v28, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v18 = *(void **)&Strong[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer];
    *(_QWORD *)&Strong[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer] = 0;

  }
  swift_beginAccess(v11, v27, 0, 0);
  v19 = swift_unknownObjectWeakLoadStrong(v11);
  if (v19)
  {
    v20 = (char *)v19;
    v21 = (uint64_t *)(a4 + 16);
    swift_beginAccess(v21, v26, 0, 0);
    v22 = *v21;
    if (v22)
    {
      swift_beginAccess(&v20[OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions], v25, 33, 0);
      swift_retain(v22);
      v24 = sub_1001A3684(v23);
      swift_endAccess(v25);

      swift_release(v22);
      swift_release(v24);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10012B9A0(uint64_t a1, void *a2)
{
  uint64_t Strong;
  char *v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  double v11;
  double *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  double (**v36)();
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  _QWORD aBlock[5];
  uint64_t v45;
  char v46[24];

  swift_beginAccess(a1, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0));
    v7 = (char *)sub_1007B2CC4((uint64_t)a2);
    v8 = v7;
    v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
    v10 = *(void **)(*(_QWORD *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl]
                   + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_sharePlayTogetherButton);
    v11 = *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 24];
    if (v11 <= *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 40])
      v11 = *(double *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 40];
    if (v11 > 414.0)
      v11 = 414.0;
    v12 = (double *)&v7[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_preferredWidth];
    *v12 = v11;
    *((_BYTE *)v12 + 8) = 0;
    v13 = v10;
    objc_msgSend(v8, "setModalPresentationStyle:", 7);
    v14 = objc_msgSend(v8, "popoverPresentationController");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "setDelegate:", v5);

    }
    v16 = objc_msgSend(v8, "popoverPresentationController");
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, "setSourceView:", v13);

    }
    v18 = objc_msgSend(v8, "popoverPresentationController");
    if (v18)
    {
      v19 = v18;
      v20 = *(id *)&v5[v9];
      objc_msgSend(v13, "bounds");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      objc_msgSend(v20, "frame");
      v28 = v27;
      v30 = v29;
      v31 = objc_msgSend(v20, "superview");
      objc_msgSend(v13, "convertPoint:fromView:", v31, v28, v30);
      v33 = v32;

      if (qword_10119C060 != -1)
        swift_once(&qword_10119C060, sub_100465390);
      v34 = *(double *)&qword_1011B4ED8;

      objc_msgSend(v19, "setSourceRect:", v22, v33 - v34, v24, v26);
    }
    v35 = swift_allocObject(&unk_1010B2020, 24, 7);
    *(_QWORD *)(v35 + 16) = v5;
    v36 = (double (**)())&v8[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_onDismiss];
    v37 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_onDismiss];
    v38 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_onDismiss + 8];
    *v36 = sub_10013B6A8;
    v36[1] = (double (*)())v35;
    v39 = v5;
    sub_10004BA30(v37, v38);
    v40 = swift_allocObject(&unk_1010B2048, 24, 7);
    *(_QWORD *)(v40 + 16) = v39;
    aBlock[4] = sub_10013B6B0;
    v45 = v40;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010B2060;
    v41 = _Block_copy(aBlock);
    v42 = v45;
    v43 = v39;
    objc_msgSend(v43, "presentViewController:animated:completion:", v8, 1, v41, swift_release(v42).n128_f64[0]);
    _Block_release(v41);

  }
}

double sub_10012BCF0(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;

  *(_BYTE *)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingSharePlayTogetherSessionManagement) = 0;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_1005D3D18(4.0);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_10012BD44(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  *(_BYTE *)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingSharePlayTogetherSessionManagement) = 1;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
  if (Strong)
  {
    v2 = Strong;
    v3 = OBJC_IVAR____TtC5Music24NowPlayingViewController_lyricsFullScreenTimer;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC5Music24NowPlayingViewController_lyricsFullScreenTimer);
    if (v4)
    {
      objc_msgSend(v4, "invalidate");
      v5 = *(id *)(v2 + v3);
    }
    else
    {
      v5 = 0;
    }
    *(_QWORD *)(v2 + v3) = 0;
    swift_unknownObjectRelease(v2);

  }
}

uint64_t sub_10012BDD8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  _BOOL8 v19;
  CGPoint v21;
  CGRect v22;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer);
  if (v4)
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011A21D0, UIGestureRecognizer_ptr);
    v5 = v4;
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)(v5, v6);

    if ((v7 & 1) != 0)
      goto LABEL_5;
  }
  v8 = *(void **)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer);
  if (!v8)
    return 1;
  sub_10004A07C(0, (unint64_t *)&unk_1011A21D0, UIGestureRecognizer_ptr);
  v9 = a1;
  v10 = v8;
  v11 = static NSObject.== infix(_:_:)(v10, v9);

  if ((v11 & 1) == 0)
    return 1;
LABEL_5:
  v12 = *(void **)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  if (!v12)
    return 0;
  v13 = v12;
  if ((objc_msgSend(v13, "isHidden") & 1) != 0 || (objc_msgSend(v13, "alpha"), v14 <= 0.0))
  {
    v19 = 0;
  }
  else
  {
    objc_msgSend(a1, "locationInView:", v13);
    v16 = v15;
    v18 = v17;
    objc_msgSend(v13, "bounds");
    v21.x = v16;
    v21.y = v18;
    v19 = CGRectContainsPoint(v22, v21);
  }

  return v19;
}

uint64_t sub_10012BFA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "tracklist");
  v3 = objc_msgSend(v2, "playingItem");

  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, "metadataObject");

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "innermostModelObject");
  v6 = objc_opt_self(MPModelSong);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = (uint64_t)objc_msgSend(v7, "hasVideo");

  }
  else
  {

    v9 = objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v5, v9))
    {
      v8 = 1;
    }
    else
    {
      v10 = objc_opt_self(MPModelMovie);
      v8 = swift_dynamicCastObjCClass(v5, v10) != 0;
    }
  }

  return v8;
}

unint64_t sub_10012C0D8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = objc_msgSend(v3, "tracklist");
    v5 = objc_msgSend(v4, "playingItem");

    if (v5)
    {
      v6 = (unint64_t)objc_msgSend(v5, "metadataObject");

      if (v6)
      {
        v7 = objc_msgSend((id)v6, "innermostModelObject");

        objc_opt_self(MPModelSong);
        v8 = swift_dynamicCastObjCClass(v7);
        if (!v8)
          goto LABEL_10;
        v9 = (void *)v8;
        if (!static Player.FavoriteCommand.isAvailable(in:)(v3))
        {
          v6 = 0;
          v14 = v3;
          v3 = v7;
          goto LABEL_13;
        }
        sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
        if (LibraryAddable.isUserLibraryAddable.getter())
        {
          v10 = objc_msgSend(v2, "traitCollection");
          v11 = UITraitCollection.mediaLibrary.getter();

          sub_10072FD0C(v11, v9);
          v6 = v12 == 1;
          sub_10013B670(v13, v12);

        }
        else
        {
LABEL_10:
          v6 = 0;
        }
        v14 = v7;
LABEL_13:

      }
    }
    else
    {
      v6 = 0;
    }

    return v6;
  }
  return 0;
}

void sub_10012C274(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (!v6)
    goto LABEL_5;
  v7 = objc_msgSend(v6, "tracklist");
  v8 = objc_msgSend(v7, "playingItem");

  if (!v8
    || (v9 = objc_msgSend(v8, "metadataObject"), v8, !v9)
    || (v10 = objc_msgSend(v9, "innermostModelObject"),
        v9,
        v11 = MPModelObject.bestIdentifier(for:)(0, 2u),
        v13 = v12,
        v10,
        !v13))
  {
LABEL_5:
    swift_bridgeObjectRelease(0);
    v11 = 0;
    v13 = 0xE000000000000000;
  }
  v14 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v11, v13, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, (uint64_t)v5, 0, 0, 0, a1);
}

void sub_10012C3F4()
{
  qword_10124C8C0 = Int.seconds.getter(60);
}

void sub_10012C414()
{
  qword_10124C8C8 = Int.seconds.getter(72);
}

void sub_10012C434()
{
  qword_10124C8D0 = Int.seconds.getter(28);
}

void sub_10012C454()
{
  qword_10124C8D8 = Int.seconds.getter(56);
}

void sub_10012C474()
{
  qword_10124C8E0 = Int.seconds.getter(8);
}

void sub_10012C494()
{
  qword_10124C8E8 = Int.seconds.getter(7);
}

BOOL sub_10012C4B4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_100139908((uint64_t)v11, (uint64_t)v13);
}

void sub_10012C51C()
{
  qword_1011A19F8 = 0x4038000000000000;
}

void sub_10012C52C()
{
  qword_1011A1A00 = 0x4028000000000000;
}

double sub_10012C53C()
{
  double result;

  result = 0.0;
  xmmword_1011A1A08 = xmmword_100EAB8E0;
  *(_OWORD *)&qword_1011A1A18 = xmmword_100EAB8E0;
  return result;
}

double sub_10012C554()
{
  double result;

  result = 0.0;
  xmmword_1011A1A28 = xmmword_100EAB8F0;
  *(_OWORD *)&qword_1011A1A38 = xmmword_100EAB8F0;
  return result;
}

void sub_10012C56C()
{
  qword_1011A1A48 = 0x4034000000000000;
}

void sub_10012C57C()
{
  qword_1011A1A50 = 0x4022000000000000;
}

void sub_10012C58C()
{
  qword_1011A1A58 = 0x4000000000000000;
}

void sub_10012C59C()
{
  qword_1011A1A60 = 0x4040000000000000;
}

id sub_10012C5AC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 40.0, 12.0, 0.0, 0.0);
  qword_1011A1A68 = (uint64_t)result;
  return result;
}

id sub_10012C5F4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  qword_1011A1A70 = (uint64_t)result;
  return result;
}

CGFloat sub_10012C644()
{
  CGFloat result;
  CGAffineTransform v1;

  CGAffineTransformMakeScale(&v1, 0.9, 0.9);
  result = v1.a;
  *(CGAffineTransform *)byte_1011A1A78 = v1;
  return result;
}

id sub_10012C688()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0.75;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1011A1AA8 = (uint64_t)result;
  return result;
}

id sub_10012C6C8()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1011A1AB0 = (uint64_t)result;
  return result;
}

id sub_10012C708()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0.75;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1011A1AB8 = (uint64_t)result;
  return result;
}

void sub_10012C748()
{
  qword_1011A1AC0 = Int.seconds.getter(24);
}

void sub_10012C768(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  int v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  Class v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  Class v31;
  uint64_t v32;
  Class v33;
  void *v34;
  uint64_t v35;
  Class v36;
  uint64_t *v37;
  uint64_t v38;
  Class v39;
  void *v40;
  uint64_t v41;
  Class v42;
  uint64_t *v43;
  uint64_t v44;
  Class v45;
  uint64_t Strong;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];

  v2 = v1;
  v4 = 0x746361706D6F63;
  v5 = OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType;
  v6 = a1;
  if (!a1)
  {
    v8 = 0xE700000000000000;
    v7 = 0x746361706D6F63;
    if (*(_BYTE *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType))
      goto LABEL_9;
LABEL_13:
    v9 = 0xE700000000000000;
    if (v7 != 0x746361706D6F63)
      goto LABEL_18;
    goto LABEL_16;
  }
  if (a1 == 1)
    v7 = 0x72616C75676572;
  else
    v7 = 0x4572616C75676572;
  if (v6 == 1)
    v8 = 0xE700000000000000;
  else
    v8 = 0xEF6465646E657478;
  if (!*(_BYTE *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType))
    goto LABEL_13;
LABEL_9:
  if (*(_BYTE *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType) == 1)
  {
    v9 = 0xE700000000000000;
    v4 = 0x72616C75676572;
    if (v7 != 0x72616C75676572)
      goto LABEL_18;
  }
  else
  {
    v4 = 0x4572616C75676572;
    v9 = 0xEF6465646E657478;
    if (v7 != 0x4572616C75676572)
      goto LABEL_18;
  }
LABEL_16:
  if (v8 == v9)
  {
    swift_bridgeObjectRelease_n(v8, 2);
    return;
  }
LABEL_18:
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v4, v9, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  if ((v10 & 1) != 0)
    return;
  v11 = *(unsigned __int8 *)(v2 + v5);
  if (a1)
  {
    if (a1 == 1)
    {
      if (*(_BYTE *)(v2 + v5))
      {
        if (v11 != 1)
        {
          v12 = (_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints);
          swift_beginAccess(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints, v51, 0, 0);
          v13 = *(void **)(v2
                         + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint);
          if (v13)
          {
            v14 = *v12;
            v49 = *v12;
            swift_bridgeObjectRetain_n(*v12, 2);
            v15 = v13;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
            v17 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v16 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v17 >= v16 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
            v18 = (void *)objc_opt_self(NSLayoutConstraint);
            v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
            specialized Array._endMutation()(v19);

            swift_bridgeObjectRelease(v14);
            sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v18, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v49).n128_f64[0]);

            v21 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints);
            swift_bridgeObjectRetain();
            v22 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v18, "activateConstraints:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

            goto LABEL_39;
          }
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        goto LABEL_39;
      }
    }
    else
    {
      if (*(_BYTE *)(v2 + v5))
      {
        if (v11 == 1)
        {
          v34 = (void *)objc_opt_self(NSLayoutConstraint);
          v35 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints);
          sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
          swift_bridgeObjectRetain();
          v36 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v34, "deactivateConstraints:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

          v37 = (uint64_t *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints);
          swift_beginAccess(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints, v51, 0, 0);
          v38 = *v37;
          swift_bridgeObjectRetain();
          v39 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v34, "activateConstraints:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

        }
        goto LABEL_39;
      }
      v40 = (void *)objc_opt_self(NSLayoutConstraint);
      v41 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain();
      v42 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v40, "deactivateConstraints:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

      v43 = (uint64_t *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints);
      swift_beginAccess(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints, v51, 0, 0);
      v44 = *v43;
      swift_bridgeObjectRetain();
      v45 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v40, "activateConstraints:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

    }
    sub_100132DD8();
    goto LABEL_39;
  }
  if (*(_BYTE *)(v2 + v5))
  {
    if (v11 != 1)
    {
      v23 = (_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints);
      swift_beginAccess(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints, v51, 0, 0);
      v24 = *(void **)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint);
      if (!v24)
        goto LABEL_43;
      v25 = *v23;
      v50 = *v23;
      swift_bridgeObjectRetain_n(*v23, 2);
      v26 = v24;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v28 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = (void *)objc_opt_self(NSLayoutConstraint);
      v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      specialized Array._endMutation()(v30);

      swift_bridgeObjectRelease(v25);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      v31 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v29, "deactivateConstraints:", v31, swift_bridgeObjectRelease(v50).n128_f64[0]);

      v32 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints);
      swift_bridgeObjectRetain();
      v33 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v29, "activateConstraints:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

    }
    sub_100132F00();
  }
LABEL_39:
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
  if (Strong)
  {
    v47 = Strong;
    v48 = sub_1005F1AD4(*(_BYTE *)(v2 + v5));
    swift_unknownObjectRelease(v47);
    sub_100125F84(v48);
  }
}

uint64_t sub_10012CD80()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType);
}

void *sub_10012CD90(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_bindings, a1, 33, 0);
  return &j_j__swift_endAccess;
}

void sub_10012CDD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer) = a1;

}

void sub_10012CDE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer) = a1;

}

id sub_10012CDFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  id result;
  uint64_t v6;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton);
  if (v2)
    objc_msgSend(v2, "setEnabled:", *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle + 16) != 255);
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle + 16);
  result = *(id *)(v0 + v1);
  if (v3 == 255 || (v3 & 1) == 0)
  {
    if (result)
    {
      v6 = 0;
      return objc_msgSend(result, "setMenu:", v6);
    }
  }
  else
  {
    if (result)
    {
      v6 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle);
      return objc_msgSend(result, "setMenu:", v6);
    }
    __break(1u);
  }
  return result;
}

id sub_10012CEA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___mediaControls;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___mediaControls);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___mediaControls);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)MPMediaControls), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10012CF10()
{
  return sub_10012CF24(&OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___leaveSessionButton, (uint64_t (*)(uint64_t))sub_10012CF80);
}

id sub_10012CF24(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_10012CF80(void *a1)
{
  id v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  NSString v7;
  uint64_t v8;
  id result;
  void *v10;

  v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 20.0);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v3);

  if (qword_10119C2F8 != -1)
    swift_once(&qword_10119C2F8, sub_1005D2E98);
  objc_msgSend(v2, "setTintColor:", qword_10124D3D8);
  objc_msgSend(v2, "setImage:forState:", v5, 0);
  objc_msgSend(v2, "setExclusiveTouch:", 1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "_setLayoutDebuggingIdentifier:", v7);

  v8 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10012D190, 0, v8);
  result = objc_msgSend(a1, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "addSubview:", v6);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10012D190(uint64_t a1)
{
  return sub_10012D1AC(a1, (uint64_t)&unk_1010B1FF8, (uint64_t)&unk_1011A21C8, (uint64_t (*)(char *, uint64_t, uint64_t))sub_100980B50);
}

double sub_10012D1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor(0);
  v12 = static MainActor.shared.getter(v11);
  v13 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
  v14 = a4(v9, a3, v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_10012D284(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_10012D2F0, v4, v5);
}

uint64_t sub_10012D2F0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  v0[11] = qword_10124C798;
  v0[5] = &type metadata for Player.LeaveSessionCommand;
  v0[6] = &protocol witness table for Player.LeaveSessionCommand;
  v2 = dword_1011D86AC;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_10012D3AC;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)(v0 + 2), 0x10000, 0, 0);
}

uint64_t sub_10012D3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v6 = *(void **)(*(_QWORD *)v2 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  *(_QWORD *)(*(_QWORD *)v2 + 104) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = v4[9];
    v8 = v4[10];
    v9 = sub_10012D468;
  }
  else
  {
    v4[14] = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 2);
    v7 = v4[9];
    v8 = v4[10];
    v9 = sub_10012D42C;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10012D42C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012D468()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10012D4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v24;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v24 - v9;
  v11 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (!v11)
    return 0;
  v12 = objc_msgSend(v11, "tracklist");
  if (!v12)
    return 0;
  v13 = v12;
  v14 = objc_msgSend(v12, "playingItemIndexPath");
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v16(v3, v8, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:

    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A3D50);
    return 0;
  }
  v16(v10, v3, v4);
  v17 = objc_msgSend(v13, "items");
  v18 = objc_msgSend(v17, "sectionAtIndex:", IndexPath.section.getter(v17));

  v19 = objc_msgSend(v18, "metadataObject");
  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_12:

    return 0;
  }
  v20 = objc_msgSend(v19, "flattenedGenericObject");
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    goto LABEL_12;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "anyObject");

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v22;
}

void sub_10012D73C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v12;
  uint64_t v13;

  v1 = sub_10012D4A8();
  if (v1)
  {
    v2 = v1;
    objc_opt_self(MPModelPlaylist);
    v3 = swift_dynamicCastObjCClass(v2);

    if (v3)
    {
      v13 = 0;
      v4 = (void *)objc_opt_self(MPModelObject);
      v5 = swift_allocObject(&unk_1010B1F80, 32, 7);
      *(_QWORD *)(v5 + 16) = &v13;
      *(_QWORD *)(v5 + 24) = v0;
      v6 = swift_allocObject(&unk_1010B1FA8, 32, 7);
      *(_QWORD *)(v6 + 16) = sub_10013B5D0;
      *(_QWORD *)(v6 + 24) = v5;
      aBlock[4] = sub_1001095DC;
      v12 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10046D7B4;
      aBlock[3] = &unk_1010B1FC0;
      v7 = _Block_copy(aBlock);
      v8 = v12;
      v9 = v0;
      swift_retain(v6);
      objc_msgSend(v4, "performWithoutEnforcement:", v7, swift_release(v8).n128_f64[0]);
      _Block_release(v7);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 123, 2852, 49, 1);
      swift_release(v6);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
      else
        swift_release(v5);
    }
  }
}

void sub_10012D8B8(void **a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;

  v3 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v3)
  {
    v4 = objc_msgSend(v3, "tracklist");
    v5 = objc_msgSend(v4, "playingItem");

    v6 = objc_msgSend(v5, "metadataObject");
    v7 = objc_msgSend(v6, "playlistEntry");

  }
  else
  {
    v7 = 0;
  }
  v8 = *a1;
  *a1 = v7;

}

void sub_10012D970(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction) = a1;

}

double sub_10012D984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  double result;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchTimeInterval(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DispatchTime(0);
  v29 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v29 - v12;
  v14 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitWatchdog;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitWatchdog);
  *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitWatchdog) = a1;
  v30 = a1;
  swift_retain(a1);
  if (v15)
    dispatch thunk of DispatchWorkItem.cancel()(v16);
  v17 = *(_QWORD *)(v2 + v14);
  if (v17)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    swift_retain(v17);
    v26 = (void *)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
    static DispatchTime.now()(v26);
    *v7 = 250;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchTimeInterval.milliseconds(_:), v4);
    + infix(_:_:)(v11, v7);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    v27 = *(void (**)(char *, uint64_t))(v29 + 8);
    v27(v11, v8);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v13, v17);
    swift_release(v17);

    v27(v13, v8);
  }
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  return result;
}

void sub_10012DB78()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  double *v4;
  double *v5;
  void *v6;
  double *v7;
  char **v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  NSArray v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  char *v49;
  double v50;
  void *v51;
  char *v52;
  char *v53;
  double v54;
  void *v55;
  char *v56;
  char *v57;
  double v58;
  void *v59;
  char *v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double *v70;
  double *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  id v86;
  void *v87;
  uint64_t v88;
  unsigned __int8 v89;
  double *v90;
  char **v91;
  uint64_t v92;
  double *v93;
  uint64_t v94;
  double *v95;
  uint64_t v96[3];

  v1 = v0;
  if (!objc_msgSend(v0, "isViewLoaded"))
    return;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v3 = v2;
  v4 = (double *)OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType;
  v5 = dbl_100EABC38;
  objc_msgSend(v2, "setLayoutMargins:", 0.0, dbl_100EABC38[(char)v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]], 0.0, dbl_100EABC38[(char)v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]]);

  v6 = (void *)objc_opt_self(UIFont);
  v7 = (double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics];
  v8 = (char **)objc_msgSend(v6, "systemFontOfSize:weight:", *(double *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics], UIFontWeightSemibold);
  v92 = OBJC_IVAR___MusicNowPlayingControlsViewController_mode;
  if (v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] - 1 >= 2)
  {
    v9 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
    if (!v9)
    {
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    objc_msgSend(v9, "setFont:", v8);
    v10 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
    if (!v10)
      goto LABEL_118;
    v11 = objc_msgSend(v10, "titleLabel");
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v6, "systemFontOfSize:weight:", *v7, UIFontWeightRegular);
      objc_msgSend(v12, "setFont:", v13);

    }
  }
  v14 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint;
  v15 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint];
  if (!v15)
    goto LABEL_100;
  objc_msgSend(v15, "setConstant:", v7[6]);
  v16 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint];
  if (!v16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  v17 = *(void **)&v1[v14];
  if (!v17)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v18 = v16;
  objc_msgSend(v17, "constant");
  v20 = v19 * 0.5;
  objc_msgSend(v8, "ascender");
  objc_msgSend(v18, "setConstant:", v20 - v21);

  v22 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint];
  if (!v22)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  objc_msgSend(v22, "setConstant:", v7[9]);
  v23 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView];
  if (!v23)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  objc_msgSend(v23, "setSpacing:", v7[10]);
  v24 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint];
  if (!v24)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  objc_msgSend(v24, "setConstant:", v7[12]);
  v25 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint];
  if (!v25)
  {
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  objc_msgSend(v25, "setConstant:", -v7[11]);
  if (!*((_BYTE *)v4 + (_QWORD)v1))
    goto LABEL_22;
  if (*((_BYTE *)v4 + (_QWORD)v1) != 1)
  {
    v27 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint];
    if (v27)
    {
      v28 = qword_10119B970;
      v29 = v27;
      if (v28 != -1)
        goto LABEL_98;
      goto LABEL_21;
    }
    goto LABEL_123;
  }
  v26 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint];
  if (!v26)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
    return;
  }
  objc_msgSend(v26, "setConstant:", 0.0);
  while (1)
  {
LABEL_22:
    v30 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint;
    v31 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint];
    if (((_BYTE)v7[8] & 1) != 0)
    {
      if (!v31)
        goto LABEL_119;
      if (objc_msgSend(v31, "isActive"))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v33 = swift_allocObject(v32, 40, 7);
        *(_OWORD *)(v33 + 16) = xmmword_100EA7A90;
        v34 = *(void **)&v1[v30];
        if (!v34)
          goto LABEL_124;
        v35 = v33;
        v36 = (void *)objc_opt_self(NSLayoutConstraint);
        *(_QWORD *)(v35 + 32) = v34;
        v96[0] = v35;
        specialized Array._endMutation()(v36);
        v37 = v96[0];
        sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
        v38 = v34;
        v39.super.isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v36, "deactivateConstraints:", v39.super.isa, swift_bridgeObjectRelease(v37).n128_f64[0]);
LABEL_32:

      }
    }
    else
    {
      if (!v31)
        goto LABEL_120;
      objc_msgSend(v31, "setConstant:", v7[7]);
      v40 = *(void **)&v1[v30];
      if (!v40)
        goto LABEL_121;
      if ((objc_msgSend(v40, "isActive") & 1) == 0)
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v42 = swift_allocObject(v41, 40, 7);
        *(_OWORD *)(v42 + 16) = xmmword_100EA7A90;
        v43 = *(void **)&v1[v30];
        if (!v43)
          goto LABEL_125;
        v44 = v42;
        v45 = (void *)objc_opt_self(NSLayoutConstraint);
        *(_QWORD *)(v44 + 32) = v43;
        v96[0] = v44;
        specialized Array._endMutation()(v45);
        v46 = v96[0];
        sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
        v47 = v43;
        v39.super.isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v45, "activateConstraints:", v39.super.isa, swift_bridgeObjectRelease(v46).n128_f64[0]);
        goto LABEL_32;
      }
    }
    v48 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint];
    if (!v48)
      goto LABEL_107;
    objc_msgSend(v48, "setConstant:", v7[5]);
    v49 = *(char **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
    if (!v49)
      goto LABEL_108;
    v50 = v7[9] + 8.0;
    *(double *)&v49[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidth] = v50;
    v51 = *(void **)&v49[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
    if (!v51)
      goto LABEL_109;
    v52 = v49;
    objc_msgSend(v51, "setConstant:", v50);
    objc_msgSend(v52, "invalidateIntrinsicContentSize");

    v53 = *(char **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
    if (!v53)
      goto LABEL_110;
    v54 = v7[9] + 8.0;
    *(double *)&v53[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidth] = v54;
    v55 = *(void **)&v53[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
    if (!v55)
      goto LABEL_111;
    v56 = v53;
    objc_msgSend(v55, "setConstant:", v54);
    objc_msgSend(v56, "invalidateIntrinsicContentSize");

    v57 = *(char **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
    if (!v57)
      goto LABEL_112;
    v58 = v7[9] + 8.0;
    *(double *)&v57[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidth] = v58;
    v59 = *(void **)&v57[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
    if (!v59)
      goto LABEL_113;
    v60 = v57;
    objc_msgSend(v59, "setConstant:", v58);
    objc_msgSend(v60, "invalidateIntrinsicContentSize");

    v61 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint];
    if (!v61)
      goto LABEL_114;
    objc_msgSend(v61, "setConstant:", v7[1]);
    v62 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint];
    if (!v62)
      goto LABEL_115;
    objc_msgSend(v62, "setConstant:", v5[*((char *)v4 + (_QWORD)v1)]);
    v63 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint];
    if (!v63)
      goto LABEL_116;
    v64 = qword_10119B950;
    v65 = v63;
    if (v64 != -1)
      swift_once(&qword_10119B950, sub_10012C414);
    objc_msgSend(v65, "setConstant:", *(double *)&qword_10124C8C8 + v5[*((char *)v4 + (_QWORD)v1)]);

    v29 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints];
    v66 = (uint64_t *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints];
    swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints], v96, 0, 0);
    v67 = *v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100804E18(v67);
    v93 = v4;
    v91 = v8;
    if ((unint64_t)v29 >> 62)
      break;
    v68 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = &selRef_setMetricsOverlay_;
    if (!v68)
      goto LABEL_75;
LABEL_47:
    if (v68 >= 1)
    {
      v69 = 0;
      v70 = v7 + 2;
      v94 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
      v95 = v7 + 4;
      v90 = v7 + 3;
      while (1)
      {
        if ((v29 & 0xC000000000000001) != 0)
          v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v69, v29);
        else
          v72 = *(id *)(v29 + 8 * v69 + 32);
        v73 = v72;
        if (objc_msgSend(v72, "firstAttribute") != (id)7 || objc_msgSend(v73, "relation"))
        {
          if (objc_msgSend(v73, "firstAttribute") != (id)8 || (v74 = objc_msgSend(v73, "relation"), v71 = v95, v74))
          {
            v75 = objc_msgSend(v73, "firstAttribute");
            v71 = v70;
            if (v75 != (id)3)
              goto LABEL_51;
          }
          goto LABEL_50;
        }
        v76 = *(void **)&v1[v94];
        if (v76)
        {
          v77 = objc_msgSend(v76, "tracklist");
          v78 = objc_msgSend(v77, "playingItem");

          if (v78)
          {
            v79 = objc_msgSend(v78, "metadataObject");

            if (v79)
            {
              v80 = objc_msgSend(v79, "innermostModelObject");
              objc_opt_self(MPModelSong);
              v81 = (void *)swift_dynamicCastObjCClass(v80);
              if (v81)
              {
                v89 = objc_msgSend(v81, "hasVideo");

                v71 = v90;
                if ((v89 & 1) != 0)
                  goto LABEL_50;
              }
              else
              {

                objc_opt_self(MPModelTVEpisode);
                if (swift_dynamicCastObjCClass(v80))
                {

                  v71 = v90;
                  goto LABEL_50;
                }
                objc_opt_self(MPModelMovie);
                v82 = swift_dynamicCastObjCClass(v80);

                v71 = v90;
                if (v82)
                  goto LABEL_50;
              }
            }
          }
        }
        v71 = v95;
LABEL_50:
        objc_msgSend(v73, "setConstant:", *v71);
LABEL_51:
        ++v69;

        if (v68 == v69)
          goto LABEL_75;
      }
    }
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    swift_once(&qword_10119B970, sub_10012C494);
LABEL_21:
    objc_msgSend((id)v29, "setConstant:", *(double *)&qword_10124C8E8);

  }
  if (v29 < 0)
    v83 = v29;
  else
    v83 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v68 = _CocoaArrayWrapper.endIndex.getter(v83);
  swift_bridgeObjectRelease(v29);
  v8 = &selRef_setMetricsOverlay_;
  if (v68)
    goto LABEL_47;
LABEL_75:
  swift_bridgeObjectRelease(v29);
  v29 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints];
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v88 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints];
    else
      v88 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v84 = _CocoaArrayWrapper.endIndex.getter(v88);
  }
  else
  {
    v84 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v7 = v93;
  v4 = dbl_100EABC38;
  v5 = (double *)&selRef_setMetricsOverlay_;
  if (!v84)
    goto LABEL_88;
  if (v84 < 1)
    goto LABEL_97;
  for (i = 0; i != v84; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0)
      v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v29);
    else
      v86 = *(id *)(v29 + 8 * i + 32);
    v87 = v86;
    if (objc_msgSend(v86, "firstAttribute") == (id)5 || objc_msgSend(v87, "firstAttribute") == (id)3)
      objc_msgSend(v87, "setConstant:", dbl_100EABC38[*((char *)v93 + (_QWORD)v1)]);

  }
LABEL_88:
  swift_bridgeObjectRelease(v29);
  if (v1[v92] == 2)
    sub_100125E64();

}

__n128 sub_10012E644@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __n128 result;

  v2 = v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 48);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 56);
  v5 = *(_BYTE *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 64);
  v6 = *(_OWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics);
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v2 + 72);
  result = *(__n128 *)(v2 + 88);
  *(__n128 *)(a1 + 88) = result;
  return result;
}

__n128 sub_10012E68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;

  v2 = v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_metrics;
  v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 80) = v3;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(a1 + 96);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v2 = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 16) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 48) = v5;
  sub_10012DB78();
  return result;
}

void sub_10012E6BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char **v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v17;
  id v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _OWORD v75[6];
  uint64_t v76;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v6 = &selRef_referralObject;
    v7 = objc_msgSend(v0, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "bounds");
      v10 = v9;
      v12 = v11;

      v13 = objc_msgSend(v1, "view");
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, "safeAreaInsets");
        v16 = v15;

        v17 = OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType;
        LOBYTE(v14) = v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType];
        v18 = objc_msgSend(v1, "traitCollection");
        sub_100139E44((char)v14, v18, (uint64_t)v75, v10, v12, v16);

        v19 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics];
        v20 = v75[3];
        v21 = v75[5];
        *((_OWORD *)v19 + 4) = v75[4];
        *((_OWORD *)v19 + 5) = v21;
        v22 = v75[1];
        v23 = v75[2];
        *(_OWORD *)v19 = v75[0];
        *((_OWORD *)v19 + 1) = v22;
        *((_QWORD *)v19 + 12) = v76;
        *((_OWORD *)v19 + 2) = v23;
        *((_OWORD *)v19 + 3) = v20;
        sub_10012DB78();
        if (qword_10119C358 != -1)
          swift_once(&qword_10119C358, sub_1005EC118);
        v24 = sub_100048B14(v2, (uint64_t)qword_10124D428);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v24, v2);
        v6 = v1;
        v25 = Logger.logObject.getter(v6);
        v26 = static os_log_type_t.default.getter(v25);
        if (!os_log_type_enabled(v25, (os_log_type_t)v26))
        {

          goto LABEL_11;
        }
        v64 = v26;
        v65 = v17;
        v27 = swift_slowAlloc(42, -1);
        v63 = swift_slowAlloc(128, -1);
        v74 = v63;
        *(_DWORD *)v27 = 136446978;
        v28 = *((_QWORD *)v19 + 6);
        v29 = *((_QWORD *)v19 + 7);
        v30 = v19[64];
        v31 = *((_OWORD *)v19 + 1);
        v66 = *(_OWORD *)v19;
        v67 = v31;
        v68 = *((_OWORD *)v19 + 2);
        v69 = v28;
        v70 = v29;
        v71 = v30;
        v72 = *(_OWORD *)(v19 + 72);
        v73 = *(_OWORD *)(v19 + 88);
        v32 = String.init<A>(describing:)(&v66, &type metadata for NowPlayingControlsViewController.UIMetrics);
        v34 = v33;
        *(_QWORD *)&v66 = sub_100322200(v32, v33, &v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, (char *)&v66 + 8);
        swift_bridgeObjectRelease(v34);

        *(_WORD *)(v27 + 12) = 2082;
        v35 = objc_msgSend(v6, "view");
        if (v35)
        {
          v36 = v35;
          objc_msgSend(v35, "bounds");
          v38 = v37;
          v40 = v39;

          v41 = CGSize.description.getter(v38, v40);
          v43 = v42;
          *(_QWORD *)&v66 = sub_100322200(v41, v42, &v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, (char *)&v66 + 8);
          swift_bridgeObjectRelease(v43);

          *(_WORD *)(v27 + 22) = 2082;
          v44 = objc_msgSend(v6, "view");
          if (v44)
          {
            v45 = v44;
            objc_msgSend(v44, "safeAreaInsets");
            v47 = v46;
            v49 = v48;
            v51 = v50;
            v53 = v52;

            *(_QWORD *)&v66 = v47;
            *((_QWORD *)&v66 + 1) = v49;
            *(_QWORD *)&v67 = v51;
            *((_QWORD *)&v67 + 1) = v53;
            type metadata accessor for UIEdgeInsets(0);
            v55 = String.init<A>(describing:)(&v66, v54);
            v57 = v56;
            *(_QWORD *)&v66 = sub_100322200(v55, v56, &v74);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, (char *)&v66 + 8);
            swift_bridgeObjectRelease(v57);

            *(_WORD *)(v27 + 32) = 2082;
            LOBYTE(v66) = v1[v65];
            v58 = String.init<A>(describing:)(&v66, &type metadata for NowPlayingViewController.LayoutType);
            v60 = v59;
            *(_QWORD *)&v66 = sub_100322200(v58, v59, &v74);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, (char *)&v66 + 8);
            swift_bridgeObjectRelease(v60);

            _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v64, "[NowPlayingControlsViewController] updated metrics=%{public}s with size=%{public}s safeAreaInsets=%{public}s layoutType=%{public}s", (uint8_t *)v27, 0x2Au);
            v61 = v63;
            swift_arrayDestroy(v63, 4, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v61, -1, -1);
            swift_slowDealloc(v27, -1, -1);
LABEL_11:

            (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            sub_100130D30();
            return;
          }
LABEL_16:

          __break(1u);
          return;
        }
LABEL_15:

        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

void sub_10012EC50(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  unint64_t v20;
  char v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  NSString v27;
  Class isa;
  id v29;
  unsigned __int8 v30;
  uint64_t v31;
  Swift::String v32;
  unint64_t v33;
  uint64_t v34;
  NSString *v35;
  void *v36;
  NSString *v37;
  id v38;
  unint64_t v39;
  id v40;
  NSString v41;
  Class v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  NSString v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  char *v58;
  id v59;
  char *v60;
  char *v61;
  id v62;
  void *v63;
  id v64;
  unsigned __int8 v65;
  void *v66;
  void *v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  void *v76;
  __int128 v77;
  NSString *v78;
  id v79;
  id v80;
  id v81;
  char v82[72];
  char v83[24];
  uint64_t aBlock;
  unint64_t v85;
  void *v86;
  void *v87;
  uint64_t (*v88)(char);
  uint64_t v89;
  char v90[56];

  v3 = v2;
  v79 = a2;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "title");
  if (v11)
  {
    v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v15);
    String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
    v14 = v16;
  }
  v17 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v17, v90);
  v77 = xmmword_100EA7AA0;
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v78 = NSForegroundColorAttributeName;
  v19 = objc_msgSend(v3, "traitCollection");
  v20 = sub_10013B23C();
  v21 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v20);

  v81 = a1;
  if ((v21 & 1) == 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    goto LABEL_8;
  }
  if (qword_10119C300 != -1)
    goto LABEL_38;
  while (1)
  {
    v22 = (id)qword_10124D3E0;
LABEL_8:
    v23 = v22;
    v24 = sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
    *(_QWORD *)(inited + 64) = v24;
    *(_QWORD *)(inited + 40) = v23;
    v25 = sub_100041C10(inited);
    v26 = objc_allocWithZone((Class)NSMutableAttributedString);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    type metadata accessor for Key(0);
    sub_100048748((unint64_t *)&qword_10119D8C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA7920);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend(v26, "initWithString:attributes:", v27, isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    v30 = objc_msgSend(v81, "isExplicitSong");
    v80 = v29;
    if ((v30 & 1) != 0)
    {
      v31 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess(v31 + 32, v83, 0, 0);
      v32 = *(Swift::String *)(v31 + 32);
      aBlock = 32;
      v85 = 0xE100000000000000;
      String.append(_:)(v32);
      v33 = v85;
      v34 = swift_initStackObject(v17, v82);
      *(_OWORD *)(v34 + 16) = v77;
      v35 = v78;
      *(_QWORD *)(v34 + 32) = v78;
      v36 = (void *)objc_opt_self(UIColor);
      v37 = v35;
      v38 = objc_msgSend(v36, "secondaryLabelColor");
      *(_QWORD *)(v34 + 64) = v24;
      *(_QWORD *)(v34 + 40) = v38;
      v39 = sub_100041C10(v34);
      v40 = objc_allocWithZone((Class)NSAttributedString);
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      v42 = Dictionary._bridgeToObjectiveC()().super.isa;
      v43 = objc_msgSend(v40, "initWithString:attributes:", v41, v42, swift_bridgeObjectRelease(v39).n128_f64[0]);

      v29 = v80;
      objc_msgSend(v80, "appendAttributedString:", v43);

    }
    v44 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
    if (!v44)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    objc_msgSend(v44, "setAttributedText:", v29);
    v45 = v81;
    MPModelSong.preferredBylineAttribution(with:radioStation:)((uint64_t)&off_1010AA2D8, v79);
    v47 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
    if (!v47)
      goto LABEL_40;
    v48 = v46;
    if (v46)
    {
      v49 = v47;
      v50 = String._bridgeToObjectiveC()();
    }
    else
    {
      v51 = v47;
      v50 = 0;
    }
    objc_msgSend(v47, "setTitle:forState:", v50, 0);

    v52 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
    if (!v52)
      goto LABEL_41;
    objc_msgSend(v52, "setHidden:", v48 == 0);
    v53 = objc_msgSend(v45, "artworkCatalog", swift_bridgeObjectRelease(v48).n128_f64[0]);
    v54 = v53;
    v55 = *(char **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
    if (!v55)
      goto LABEL_27;
    v56 = OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog;
    v57 = *(void **)&v55[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog];
    if (!v53)
    {
      if (!v57)
        goto LABEL_28;
      v60 = v55;
      goto LABEL_25;
    }
    if (!v57)
    {
      v61 = v55;
      v62 = v54;
LABEL_25:
      *(_QWORD *)&v55[v56] = v54;
      v59 = v54;

      sub_100675910();
      objc_msgSend(v55, "setNeedsLayout");
      goto LABEL_26;
    }
    v58 = v55;
    v59 = v54;
    if ((objc_msgSend(v59, "isArtworkVisuallyIdenticalToCatalog:", v57) & 1) == 0)
    {
      v57 = *(void **)&v55[v56];
      goto LABEL_25;
    }
    v55 = v58;
LABEL_26:

    v54 = v55;
LABEL_27:

LABEL_28:
    v63 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
    if (v63)
    {
      v64 = v63;
      v65 = MPCPlayerResponse.isPlayingItemFavorited.getter();

    }
    else
    {
      v65 = 0;
    }
    v66 = (void *)objc_opt_self(UIView);
    inited = swift_allocObject(&unk_1010B1E90, 25, 7);
    *(_QWORD *)(inited + 16) = v3;
    *(_BYTE *)(inited + 24) = v65 & 1;
    v17 = swift_allocObject(&unk_1010B1EB8, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_10013B4E4;
    *(_QWORD *)(v17 + 24) = inited;
    v88 = (uint64_t (*)(char))sub_1001095DC;
    v89 = v17;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v85 = 1107296256;
    v86 = sub_10046D7B4;
    v87 = &unk_1010B1ED0;
    v67 = _Block_copy(&aBlock);
    v68 = v89;
    v3 = v3;
    swift_retain(v17);
    objc_msgSend(v66, "performWithoutAnimation:", v67, swift_release(v68).n128_f64[0]);
    _Block_release(v67);
    v14 = 1;
    LOBYTE(v67) = swift_isEscapingClosureAtFileLocation(v17, "", 123, 2983, 40, 1);
    swift_release(v17);
    if ((v67 & 1) == 0)
      break;
    __break(1u);
LABEL_38:
    swift_once(&qword_10119C300, sub_1005D2ED0);
  }
  v69 = sub_10011DAF0();
  objc_msgSend(v69, "setHidden:", (sub_10012C0D8() & 1) == 0);

  v70 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager];
  if (objc_msgSend(v70, "musicHapticsEnabled")
    && (v71 = objc_msgSend(v45, "identifiers"),
        MPIdentifierSet.bestStoreIdentifier.getter(),
        v73 = v72,
        v71,
        v73))
  {
    v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v73);
    v75 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v75 + 16, v3);
    v88 = sub_10013B53C;
    v89 = v75;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v85 = 1107296256;
    v86 = sub_10012F6FC;
    v87 = &unk_1010B1EF8;
    v76 = _Block_copy(&aBlock);
    objc_msgSend(v70, "checkHapticTrackAvailabilityForMediaMatchingCode:completionHandler:", v74, v76, swift_release(v89).n128_f64[0]);

    _Block_release(v76);
  }
  else
  {
    v74 = v80;
  }

  swift_release(inited);
}

uint64_t sub_10012F4AC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;
  char v38[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v38, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (void *)result;
    v14 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v22 = static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
    v35 = v5;
    v23 = (void *)v22;
    v24 = swift_allocObject(&unk_1010B1F30, 25, 7);
    *(_QWORD *)(v24 + 16) = v13;
    *(_BYTE *)(v24 + 24) = a1 & 1;
    aBlock[4] = sub_10013B544;
    v37 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010B1F48;
    v25 = _Block_copy(aBlock);
    v34 = v8;
    v26 = v25;
    v27 = v37;
    v28 = v13;
    v29 = swift_release(v27);
    static DispatchQoS.unspecified.getter(v29);
    aBlock[0] = _swiftEmptyArrayStorage;
    v30 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v32 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v4, v30);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v34);
  }
  return result;
}

uint64_t sub_10012F6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_10012F73C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  char *v27;
  char *v28;
  id v29;
  _BYTE v30[16];

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel);
  if (!v9)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v10 = v9;
  v11 = objc_msgSend(a1, "title");
  if (v11)
  {
    v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v15);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v14 = v16;
  }
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v17, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v18 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton);
  if (!v18)
    goto LABEL_21;
  objc_msgSend(v18, "setTitle:forState:", 0, 0);
  v19 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView);
  if (!v19)
  {
LABEL_22:
    __break(1u);
    return;
  }
  objc_msgSend(v19, "setHidden:", 1);
  v20 = objc_msgSend(a1, "artworkCatalog");
  v21 = v20;
  v22 = *(char **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  if (v22)
  {
    v23 = OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog;
    v24 = *(void **)&v22[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog];
    if (v20)
    {
      if (v24)
      {
        v25 = v22;
        v26 = v21;
        if ((objc_msgSend(v26, "isArtworkVisuallyIdenticalToCatalog:", v24) & 1) != 0)
        {
          v22 = v25;
          v21 = v26;
LABEL_17:

          goto LABEL_18;
        }
        v24 = *(void **)&v22[v23];
      }
      else
      {
        v28 = v22;
        v29 = v21;
      }
    }
    else
    {
      if (!v24)
        return;
      v27 = v22;
    }
    *(_QWORD *)&v22[v23] = v21;
    v21 = v21;

    sub_100675910();
    objc_msgSend(v22, "setNeedsLayout");
    goto LABEL_17;
  }
LABEL_18:

}

void sub_10012F9C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A23C0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession;
  v12 = *(void **)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession);
  if (v12)
  {
    if (!a1)
      goto LABEL_5;
    type metadata accessor for SharePlayTogetherSession(0);
    v13 = a1;
    v14 = v12;
    v15 = static NSObject.== infix(_:_:)(v14, v13);

    if ((v15 & 1) != 0)
      return;
    v12 = *(void **)(v2 + v11);
    if (v12)
    {
LABEL_5:
      v16 = swift_allocObject(&unk_1010B19B8, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16, v2);
      v17 = swift_allocObject(&unk_1010B2BA0, 32, 7);
      *(_QWORD *)(v17 + 16) = v16;
      *(_QWORD *)(v17 + 24) = v12;
      v18 = type metadata accessor for SharePlayTogetherSession(0);
      sub_100048748(&qword_10119F838, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
      v19 = v12;
      swift_retain(v16);
      v45 = ObservableObject<>.objectWillChange.getter(v18);
      v20 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v44 = (id)static OS_dispatch_queue.main.getter(v20, v21, v22, v23, v24, v25, v26, v27);
      v28 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v6, 1, 1, v28);
      v29 = type metadata accessor for ObservableObjectPublisher(0);
      v43 = v8;
      v30 = v29;
      v31 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      Publisher.receive<A>(on:options:)(&v44, v6, v30, v20, &protocol witness table for ObservableObjectPublisher, v31);
      sub_10004FF60((uint64_t)v6, &qword_1011A08F0);

      swift_release(v45);
      v32 = (_QWORD *)swift_allocObject(&unk_1010B2BC8, 40, 7);
      v32[2] = v19;
      v32[3] = sub_10013C538;
      v32[4] = v17;
      v33 = sub_100049F28((unint64_t *)&qword_1011A23D0, (uint64_t *)&unk_1011A23C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v34 = v19;
      swift_retain(v17);
      v35 = Publisher<>.sink(receiveValue:)(sub_10013C570, v32, v7, v33);
      v36 = swift_release(v32);
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v10, v7, v36);
      v37 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription);
      *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription) = v35;
      swift_release(v37);
      sub_10012FD78(v16, v34);
      swift_release(v16);
      sub_10013008C();
      swift_release(v17);

      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  v38 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription);
  *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription) = 0;
  swift_release(v38);
  v39 = *(char **)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl);
  v40 = &v39[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style];
  *(_QWORD *)v40 = 0;
  v40[8] = 1;
  v41 = v39;
  sub_1004653EC();

  sub_100134E20();
  sub_100130A44();
}

void sub_10012FD78(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  char v6;
  char *v7;
  uint64_t (*v8)(void);
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(void);
  _BYTE *v15;
  BOOL v16;
  char v17[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x268))();
    v7 = *(char **)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
    if ((v6 & 1) != 0)
    {
      v8 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0x1B0);
      v9 = v7;
      v10 = v8();
      v11 = &v9[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style];
      *(_QWORD *)v11 = v10;
      v11[8] = 0;
    }
    else
    {
      v12 = &v7[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style];
      *(_QWORD *)v12 = 1;
      v12[8] = 1;
      v13 = v7;
    }
    sub_1004653EC();

    v14 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0x1E0);
    v15 = *(id *)&v5[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
    v16 = v14() > 0;
    v15[OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_isBadgeVisible] = v16;
    sub_100466F64();

    sub_100130A44();
    sub_100134E20();

  }
}

uint64_t sub_10012FED0(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.sharePlayTogether.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = a2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v22 = a3;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v21[1] = a4;
    v16 = v15;
    *(_DWORD *)v15 = 134349056;
    v21[0] = v15 + 4;
    v17 = (*(uint64_t (**)(uint8_t *))((swift_isaMask & (uint64_t)v12->isa) + 0x180))(v15);
    v18 = *(_QWORD *)(v17 + 16);

    swift_bridgeObjectRelease(v17);
    v23 = v18;
    a3 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[NowPlayingControlsViewController] session.objectWillChange participant count: %{public}ld", v16, 0xCu);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {

    v13 = v12;
  }

  v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a3(v19);
}

void sub_10013008C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unsigned __int8 (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint8_t *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t, uint64_t);
  _BOOL4 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90[3];
  __int16 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v85 = (char *)&v81 - v8;
  v9 = __chkstk_darwin(v7);
  v84 = (char *)&v81 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v81 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v81 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v81 - v17;
  v19 = *(_QWORD **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession);
  if (v19)
  {
    v88 = v6;
    v20 = *(unsigned __int8 (**)(void))((swift_isaMask & *v19) + 0x138);
    v21 = v19;
    v87 = v20() != 1 && v20() != 2;
    v31 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v86 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v86(v18, v31, v2);
    v32 = v21;
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(12, -1);
      v81 = v1;
      v36 = (uint8_t *)v35;
      v37 = swift_slowAlloc(32, -1);
      v83 = v2;
      v38 = v37;
      v90[0] = v37;
      v82 = v3;
      *(_DWORD *)v36 = 136446210;
      LOBYTE(v89) = v20();
      type metadata accessor for MRGroupSessionRouteType(0);
      v40 = String.init<A>(describing:)(&v89, v39);
      v42 = v41;
      v89 = sub_100322200(v40, v41, v90);
      v3 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90);
      swift_bridgeObjectRelease(v42);

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded session.routeType=%{public}s", v36, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      v43 = v38;
      v2 = v83;
      swift_slowDealloc(v43, -1, -1);
      v44 = v36;
      v1 = v81;
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

    }
    v30 = *(void (**)(char *, uint64_t))(v3 + 8);
    v30(v18, v2);
    v6 = v88;
    if (v87)
    {
LABEL_17:
      if ((*(_BYTE *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingRoutePicker) & 1) != 0)
      {
        *(_BYTE *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_needsSharePlayTogetherTooltipPresentation) = 1;
        v45 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v46 = v85;
        v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v85, v45, v2);
        v48 = Logger.logObject.getter(v47);
        v49 = static os_log_type_t.default.getter(v48);
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded deferring, picker is being presented", v50, 2u);
          swift_slowDealloc(v50, -1, -1);
        }

        v30(v46, v2);
      }
      else
      {
        v51 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v52 = v84;
        v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v84, v51, v2);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.default.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = v1;
          v57 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v57 = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded requesting tooltip", v57, 2u);
          v58 = v57;
          v1 = v56;
          swift_slowDealloc(v58, -1, -1);
        }

        v30(v52, v2);
        v59 = v1;
        v60 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl)
                       + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_sharePlayTogetherButton);
        v61 = swift_allocObject(&unk_1010B19B8, 24, 7);
        swift_unknownObjectWeakInit(v61 + 16, v59);
        v62 = swift_allocObject(&unk_1010B1E68, 32, 7);
        *(_QWORD *)(v62 + 16) = v61;
        *(_QWORD *)(v62 + 24) = v60;
        v63 = v59 + OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter;
        v64 = *(_QWORD *)(v59 + OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter);
        v65 = *(_QWORD *)(v63 + 8);
        v66 = qword_10119C288;
        v67 = v60;
        swift_unknownObjectRetain(v64, v68);
        if (v66 != -1)
          swift_once(&qword_10119C288, sub_100594184);
        v69 = qword_1011BB650;
        LOBYTE(v90[0]) = 2;
        v90[1] = (uint64_t)sub_10013B4B8;
        v90[2] = v62;
        v91 = 257;
        v92 = 15;
        v93 = 0u;
        v94 = 0u;
        v95 = 0u;
        v96 = v64;
        v97 = v65;
        swift_unknownObjectWeakInit(&v98, 0);
        swift_unknownObjectRetain(v64, v70);
        swift_retain(v69);
        swift_retain(v62);
        sub_100048AAC(0, 0);
        sub_100048AAC(0, 0);
        sub_100048AAC(0, 0);
        sub_1005947EC((char *)v90);
        swift_release(v69);
        sub_10013B3F0(v90);
        swift_unknownObjectRelease(v64);
        swift_release(v62);
        sub_10004BA30(0, 0);
        sub_10004BA30(0, 0);
        sub_10004BA30(0, 0);

      }
      return;
    }
  }
  else
  {
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    if (((*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 624))() & 1) != 0)
    {
      v22 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl)
          + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style;
      if (*(_BYTE *)(v22 + 8) != 1 || *(_QWORD *)v22)
      {
        v23 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v86 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
        v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v13, v23, v2);
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.default.getter(v25);
        if (os_log_type_enabled(v25, v26))
        {
          v27 = v1;
          v28 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded isEligibleForHostingSharePlayTogetherSession=true, control style is NOT .routeOnly", v28, 2u);
          v29 = v28;
          v1 = v27;
          swift_slowDealloc(v29, -1, -1);
        }

        v30 = *(void (**)(char *, uint64_t))(v3 + 8);
        v30(v13, v2);
        goto LABEL_17;
      }
      v71 = Logger.sharePlayTogether.unsafeMutableAddressor();
      v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v16, v71, v2);
      v73 = Logger.logObject.getter(v72);
      v74 = static os_log_type_t.default.getter(v73);
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v75 = 0;
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded isEligibleForHostingSharePlayTogetherSession=true, control style is .routeOnly", v75, 2u);
        swift_slowDealloc(v75, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
    }
  }
  v76 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v76, v2);
  v78 = Logger.logObject.getter(v77);
  v79 = static os_log_type_t.default.getter(v78);
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v80 = 0;
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "[NowPlayingControlsViewController] showSharePlayTogetherTooltipIfNeeded NOT requesting tooltip", v80, 2u);
    swift_slowDealloc(v80, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1001308C0(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *Strong;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  id v24;
  char v25[24];
  _QWORD v26[5];
  char v27;

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v25, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = *(void **)&Strong[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl];
    v8 = Strong;
    v9 = v7;
    objc_msgSend(a2, "bounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    objc_msgSend(v9, "frame");
    v17 = v16;
    v19 = v18;
    v20 = objc_msgSend(v9, "superview");
    objc_msgSend(a2, "convertPoint:fromView:", v20, v17, v19);
    v22 = v21;

    if (qword_10119C060 != -1)
      swift_once(&qword_10119C060, sub_100465390);
    v23 = *(double *)&qword_1011B4ED8;

    v26[0] = a2;
    v26[1] = v11;
    *(double *)&v26[2] = v22 - v23;
    v26[3] = v13;
    v26[4] = v15;
    v27 = 0;
    v24 = a2;
    PresentationSource.init(viewController:position:)(v8, (uint64_t)v26, a3);

  }
  else
  {
    *(_QWORD *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 56) = xmmword_100EA93A0;
  }
}

id sub_100130A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _BOOL4 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  double v19;
  uint64_t v20;
  NSString v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  char *v26;
  id v27;
  char *v28;
  id result;
  _BOOL8 v30;
  _BOOL8 v31;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
  v6 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v6
    && (v7 = objc_msgSend(v6, "tracklist"),
        v8 = objc_msgSend(v7, "playingItem"),
        v7,
        v8))
  {
    v9 = (char *)objc_msgSend(*(id *)(v1 + v5), "attributionMetadataFor:", v8);
    v10 = v9;
    v11 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView;
    v12 = *(char **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView);
    v13 = v9 != 0;
    if (v9)
    {
      v14 = *(_QWORD *)&v9[OBJC_IVAR___MusicAttributionMetadata_title];
      v9 = (char *)swift_bridgeObjectRetain();
    }
    else
    {
      v14 = 0;
    }
    v15 = &v12[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_title];
    v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_title + 8];
    *(_QWORD *)v15 = v14;
    *((_QWORD *)v15 + 1) = v9;
    v17 = v12;
    swift_bridgeObjectRelease(v16);
    v18 = sub_10044D4B4();
    v20 = *((_QWORD *)v15 + 1);
    if (v20)
    {
      swift_bridgeObjectRetain();
      v21 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v19 = swift_bridgeObjectRelease(v20).n128_u64[0];
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(v18, "setText:", v21, v19);

    v22 = *(char **)(v1 + v11);
    if (v10)
    {
      v23 = *(void **)&v10[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog];
      v24 = v23;
    }
    else
    {
      v23 = 0;
    }
    v25 = *(void **)&v22[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artwork];
    *(_QWORD *)&v22[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artwork] = v23;
    v26 = v22;
    v27 = v23;

    v28 = sub_10044D3FC();
    __chkstk_darwin(v28);
    *(&v32 - 2) = (uint64_t)v26;
    static Artwork.with(_:)(sub_10013B4AC, (uint64_t)v4);
    Artwork.View.typedConfiguration.setter((uint64_t)v4);

  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView), "setHidden:", !v13);
  result = *(id *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint);
  if (!result)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  v30 = v13
     && *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode) - 3 < 0xFFFFFFFE;
  objc_msgSend(result, "setActive:", v30);
  result = *(id *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint);
  if (!result)
    goto LABEL_24;
  v31 = !v13
     && *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode) - 3 < 0xFFFFFFFE;
  return objc_msgSend(result, "setActive:", v31);
}

void sub_100130D30()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  NSString *v22;
  NSString *v23;
  char v24;
  NSString *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath];
  if (!v2 || (v3 = objc_msgSend(v2, "route")) == 0)
  {
LABEL_13:
    sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
    v20 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
    v21 = objc_msgSend(v1, "traitCollection");
    v22 = (NSString *)objc_msgSend(v21, "preferredContentSizeCategory");

    v23 = UIContentSizeCategoryAccessibilityLarge;
    v24 = static UIContentSizeCategory.< infix(_:_:)(v23, v22);
    if ((v24 & 1) != 0)
      v25 = v22;
    else
      v25 = v23;
    if ((v24 & 1) == 0)
      v23 = v22;

    v26 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v23);
    v27 = objc_msgSend(v20, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v26);

    if (v27)
    {
      v28 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
      if (v28)
      {
        objc_msgSend(v28, "setFont:", v27);
        objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl]+ OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton), "setFont:", v27);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_23;
  }
  v4 = v3;
  objc_opt_self(MPAVEndpointRoute);
  v5 = swift_dynamicCastObjCClass(v4);
  if (!v5)
  {

    goto LABEL_13;
  }
  v6 = (void *)v5;
  v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl]+ OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton), "setRoute:", v5);
  v8 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel;
  v9 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
  if (v9)
  {
    objc_msgSend(v9, "setRoute:", v6);
    v10 = objc_msgSend(v0, "traitCollection");
    v11 = sub_10013B424();
    v12 = sub_10013B468();
    UITraitCollection.subscript.getter(&v29, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v11, v12);

    if ((sub_1005D2C1C(v29) & 1) != 0)
    {
      v13 = *(_QWORD *)&v1[v7] + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style;
      v14 = *(_QWORD *)v13;
      v15 = *(unsigned __int8 *)(v13 + 8);
      if (v14)
        v16 = 0;
      else
        v16 = v15;
    }
    else
    {
      v16 = 0;
    }
    v17 = *(void **)&v1[v8];
    if (!v17)
      goto LABEL_24;
    v18 = v17;
    objc_msgSend(v18, "setHidden:", objc_msgSend(v6, "isRoutingToWirelessDevice") ^ 1 | v16);

    v19 = objc_retain(*(id *)(*(_QWORD *)&v1[v7]
                            + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton));
    objc_msgSend(v19, "setRouteLabelHidden:", objc_msgSend(v6, "isRoutingToWirelessDevice") & v16 ^ 1);

    goto LABEL_13;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_100131050()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  char *v19;
  int v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD aBlock[7];

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "window");

    if (v4)
    {
      v5 = OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo;
      if ((v1[OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo] & 1) == 0)
      {
        v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        v7 = objc_msgSend(v6, "connectedScenes");
        v8 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
        v9 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9);

        sub_10010E468(v10);
        v24 = v11;
        swift_bridgeObjectRelease(v10);

        if (v24)
        {

        }
        else
        {
          v12 = OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying;
          v13 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
          if (v13)
          {
            v14 = v13;
            v15 = MPCPlayerResponse.videoContext.getter();

            if (v15)
            {
              v1[v5] = 1;
              v16 = objc_msgSend(*(id *)&v1[v12], "videoOutput");
              v17 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput];
              *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput] = v16;
              v18 = swift_unknownObjectRelease(v17);
              v19 = *(char **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
              if (v19)
              {
                v20 = *(__int16 *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
                *(_WORD *)&v19[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = 0x8000;
                if (v20 != -32768)
                {
                  v21 = v19;
                  sub_100675910();
                  objc_msgSend(v21, "setNeedsLayout");

                }
              }
              v1[OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates] = 1;
              v22 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v15 + 216))(v18);
              aBlock[4] = UIScreen.Dimensions.size.getter;
              aBlock[5] = 0;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_1001DBD98;
              aBlock[3] = &unk_1010B1E30;
              v23 = _Block_copy(aBlock);
              objc_msgSend(v22, "enterFullScreenWithCompletion:", v23);
              _Block_release(v23);
              swift_release(v15);

            }
          }
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001312F8()
{
  char *v0;
  char **v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  char v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  char **v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  unint64_t v41;
  char v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  double v52;
  void *v53;
  id v54;
  uint64_t v55;
  NSString v56;
  uint64_t v57;
  char **v58;
  void *v59;
  id v60;
  NSString v61;
  void *v62;
  char *v63;
  void *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  unsigned int v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t@<X8>);
  void (*v93)(uint64_t@<X8>);
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  uint64_t v102;
  void *v103;
  id v104;
  void *v105;
  uint64_t v106;
  char *v107;
  void *v108;
  id v109;
  char *v110;
  void *v111;
  void *v112;
  id v113;
  char *v114;
  id v115;
  uint64_t v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  void (*v131)(uint64_t@<X8>);
  uint64_t v132;
  __int16 v133;
  uint64_t v134;
  uint64_t (*v135)();
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[3];

  v2 = v0;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  v10 = &qword_1011A1000;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v11, "tracklist");
    v13 = objc_msgSend(v12, "playingItem");

    if (!v13
      || (v1 = (char **)objc_msgSend(v13, "metadataObject"), v13, !v1))
    {
      sub_100131FF4(v2);

      goto LABEL_53;
    }
    v14 = objc_msgSend(v1, "innermostModelObject");

    v15 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
    if (!v15)
    {
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    objc_msgSend(v15, "setHidden:", 0);
    v16 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
    if (!v16)
    {
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      swift_bridgeObjectRelease(v1);
      __break(1u);
LABEL_112:
      swift_bridgeObjectRelease(v1);
      __break(1u);
      goto LABEL_113;
    }
    v17 = v16;
    v18 = objc_msgSend(v2, "traitCollection");
    v19 = sub_10013B23C();
    v20 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v19);

    if ((v20 & 1) != 0)
    {
      if (qword_10119C300 != -1)
        swift_once(&qword_10119C300, sub_1005D2ED0);
      v21 = (id)qword_10124D3E0;
    }
    else
    {
      v21 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    }
    v27 = v21;
    objc_msgSend(v17, "setTextColor:", v21);

    objc_opt_self(MPModelSong);
    v28 = swift_dynamicCastObjCClass(v14);
    if (!v28)
    {
      objc_opt_self(MPModelTVEpisode);
      v36 = swift_dynamicCastObjCClass(v14);
      if (!v36)
      {
        objc_opt_self(MPModelMovie);
        v36 = swift_dynamicCastObjCClass(v14);
        if (!v36)
          goto LABEL_116;
      }
      v66 = v36;
      v34 = v14;
      sub_10012F738(v66);
      v10 = &qword_1011A1000;
      goto LABEL_51;
    }
    v29 = (void *)v28;
    v30 = v14;
    v31 = objc_msgSend(v11, "tracklist");
    v32 = objc_msgSend(v31, "items");

    v33 = objc_msgSend(v32, "firstSection");
    if (v33)
    {
      v34 = objc_msgSend(v33, "metadataObject");

      if (v34)
      {
        v35 = objc_msgSend(v34, "anyObject");

        v10 = &qword_1011A1000;
        if (v35)
        {
          objc_opt_self(MPModelRadioStation);
          v34 = (id)swift_dynamicCastObjCClass(v35);
          if (!v34)

        }
        else
        {
          v34 = 0;
        }
        goto LABEL_48;
      }
    }
    else
    {
      v34 = 0;
    }
    v10 = &qword_1011A1000;
LABEL_48:
    sub_10012EC50(v29, v34);

LABEL_51:
    v67 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView];
    v68 = v14;
    v1 = v67;
    sub_1004E5D14((uint64_t)&v130);
    v65 = (char *)sub_1004E5AEC((uint64_t)&v130);
    sub_10004FF60((uint64_t)&v130, (uint64_t *)&unk_1011A3DD0);

    goto LABEL_52;
  }
  v22 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath];
  if (!v22)
  {
    sub_100131FF4(v0);
    goto LABEL_53;
  }
  v129 = v22;
  v23 = objc_msgSend(v129, "representedBundleDisplayName");
  if (v23)
  {
    v24 = v23;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v1 = v26;

  }
  else
  {
    v25 = 0;
    v1 = 0;
  }
  v37 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel;
  v38 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v38)
    goto LABEL_111;
  v39 = v38;
  v40 = objc_msgSend(v2, "traitCollection");
  v41 = sub_10013B23C();
  v42 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v41);

  if ((v42 & 1) != 0)
  {
    if (qword_10119C318 != -1)
      swift_once(&qword_10119C318, sub_1005D2F9C);
    v43 = (id)qword_10124D3F8;
  }
  else
  {
    v43 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
  }
  v44 = v43;
  objc_msgSend(v39, "setTextColor:", v43);

  v45 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  if (!v45)
    goto LABEL_112;
  objc_msgSend(v45, "setHidden:", 1);
  v46 = *(void **)&v2[v37];
  if (!v46)
  {
LABEL_113:
    swift_bridgeObjectRelease(v1);
    __break(1u);
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  v47 = v46;
  if (v1)
  {
    v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E2E500);
    static Locale.current.getter(v48);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v50 = v49;
  }
  else
  {
    v51 = objc_msgSend(v129, "route");
    if (!v51)
    {
      v56 = 0;
      goto LABEL_38;
    }
    v53 = v51;
    v54 = objc_msgSend(v51, "routeName");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v50 = v55;

  }
  v56 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v52 = swift_bridgeObjectRelease(v50).n128_u64[0];
LABEL_38:
  objc_msgSend(v47, "setText:", v56, v52);

  if (!v1)
  {
    v57 = String.LocalizationValue.init(stringLiteral:)(0x676E6979616C50, 0xE700000000000000);
    static Locale.current.getter(v57);
    String.init(localized:table:bundle:locale:comment:)(v8, v25, 0, 0, v5, 0, 0, 256);
    v1 = v58;
  }
  v10 = &qword_1011A1000;
  v59 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v59)
    goto LABEL_114;
  v60 = v59;
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "setTitle:forState:", v61, 0);

  v62 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v62)
  {
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    return;
  }
  objc_msgSend(v62, "setHidden:", 0);
  swift_bridgeObjectRelease(v1);
  v63 = *(char **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
  if (!v63 || (v64 = *(void **)&v63[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog]) == 0)
  {

    goto LABEL_53;
  }
  *(_QWORD *)&v63[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog] = 0;
  v65 = v63;

  sub_100675910();
  objc_msgSend(v65, "setNeedsLayout");

LABEL_52:
LABEL_53:
  v69 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v69)
  {
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v70 = objc_msgSend(v69, "text");
  v71 = v70;
  v1 = &selRef_setMetricsOverlay_;
  if (v70)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v73 = v72;

    v74 = String._bridgeToObjectiveC()();
    LODWORD(v71) = objc_msgSend(v74, "_isNaturallyRTL", swift_bridgeObjectRelease(v73).n128_f64[0]);

  }
  v75 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView;
  v76 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v76)
    goto LABEL_98;
  objc_msgSend(v76, "setAnimationDirection:", v71);
  v77 = *(void **)&v2[v75];
  if (!v77)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if ((_DWORD)v71)
    v78 = 4;
  else
    v78 = 3;
  objc_msgSend(v77, "setSemanticContentAttribute:", v78);
  v79 = OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton;
  v80 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v80)
    goto LABEL_100;
  v81 = objc_msgSend(v80, "titleForState:", 0);
  if (v81)
  {
    v82 = v81;
    v83 = objc_msgSend(v81, "_isNaturallyRTL");

  }
  else
  {
    v83 = 0;
  }
  v1 = (char **)OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView;
  v84 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v84)
    goto LABEL_101;
  objc_msgSend(v84, "setAnimationDirection:", v83);
  v85 = *(char **)((char *)v1 + (_QWORD)v2);
  if (!v85)
  {
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  if (v83)
    v86 = 4;
  else
    v86 = 3;
  objc_msgSend(v85, "setSemanticContentAttribute:", v86);
  v87 = *(char **)((char *)v1 + (_QWORD)v2);
  if (!v87)
    goto LABEL_103;
  v88 = objc_msgSend(v87, "contentView");
  if (!v88)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  v89 = v88;
  objc_msgSend(v88, "intrinsicContentSize");
  v91 = v90;
  v93 = v92;

  v130 = v91;
  v131 = v93;
  v94 = *(void **)&v2[v79];
  if (!v94)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  type metadata accessor for CGSize(0);
  v96 = v95;
  objc_msgSend(v94, "intrinsicContentSize");
  v142[0] = v97;
  v142[1] = v98;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v130, v142, v96) & 1) != 0)
  {
    v99 = *(char **)((char *)v1 + (_QWORD)v2);
    if (v99)
    {
      v100 = objc_msgSend(v99, "contentView");
      if (v100)
      {
        v101 = v100;
        objc_msgSend(v100, "invalidateIntrinsicContentSize");

        goto LABEL_77;
      }
      goto LABEL_107;
    }
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
LABEL_77:
  v102 = v10[456];
  v103 = *(void **)&v2[v102];
  if (!v103)
    goto LABEL_83;
  v104 = objc_msgSend(v103, "route");
  if (!v104)
    goto LABEL_83;
  v105 = v104;
  objc_opt_self(MPAVEndpointRoute);
  v106 = swift_dynamicCastObjCClass(v105);
  if (v106)
  {
    v107 = *(char **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider];
    if (v107)
    {
      v108 = *(void **)&v107[OBJC_IVAR____TtC5Music12VolumeSlider_route];
      *(_QWORD *)&v107[OBJC_IVAR____TtC5Music12VolumeSlider_route] = v106;
      v109 = v105;
      v110 = v107;
      sub_10079246C(v108);

      goto LABEL_82;
    }
    goto LABEL_110;
  }
LABEL_82:

LABEL_83:
  sub_100130D30();
  v111 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
  if (v111)
  {
    v112 = *(void **)&v2[v102];
    v113 = v112;
    v114 = v111;
    sub_100674EE8(v112);
    sub_100125510(v114);

  }
  v115 = sub_10011DAF0();
  objc_msgSend(v115, "setHidden:", (sub_10012C0D8() & 1) == 0);

  if ((sub_10012C0D8() & 1) != 0)
  {
    v116 = swift_allocObject(&unk_1010B19B8, 24, 7);
    swift_unknownObjectWeakInit(v116 + 16, v2);
    v117 = objc_msgSend(v2, "traitCollection", swift_retain(v116).n128_f64[0]);
    v118 = objc_msgSend(v117, "preferredContentSizeCategory");

    LOBYTE(v117) = UIContentSizeCategory.isAccessibilityCategory.getter(v118);
    swift_release(v116);
    if ((v117 & 1) != 0)
      v120 = 3;
    else
      v120 = 1;
    v121 = &v2[OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter];
    v122 = *(_QWORD *)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter];
    v123 = *((_QWORD *)v121 + 1);
    v124 = qword_10119C288;
    swift_unknownObjectRetain(v122, v119);
    if (v124 != -1)
      swift_once(&qword_10119C288, sub_100594184);
    v125 = qword_1011BB650;
    LOBYTE(v130) = 0;
    v131 = sub_10013B3E8;
    v132 = v116;
    v133 = 257;
    v134 = v120;
    v135 = sub_100134B20;
    v136 = 0u;
    v137 = 0u;
    v138 = 0;
    v139 = v122;
    v140 = v123;
    swift_unknownObjectWeakInit(&v141, 0);
    swift_unknownObjectRetain(v122, v126);
    swift_retain(v125);
    swift_retain(v116);
    sub_100048AAC((uint64_t)sub_100134B20, 0);
    sub_100048AAC(0, 0);
    sub_100048AAC(0, 0);
    sub_1005947EC((char *)&v130);
    swift_release(v125);
    sub_10013B3F0(&v130);
    swift_unknownObjectRelease(v122);
    swift_release(v116);
    sub_10004BA30((uint64_t)sub_100134B20, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
  }
  else
  {
    if (qword_10119C288 != -1)
      swift_once(&qword_10119C288, sub_100594184);
    v127 = qword_1011BB650;
    swift_retain(qword_1011BB650);
    sub_100595160(0, 0);
    swift_release(v127);
  }
}

void sub_100131FF4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  char v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  void *v24;
  char *v25;
  void *v26;
  char *v27;
  _BYTE v28[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel;
  v9 = *(void **)&a1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel];
  if (!v9)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v9;
  v11 = objc_msgSend(a1, "traitCollection");
  v12 = sub_10013B23C();
  v13 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v12);

  if ((v13 & 1) != 0)
  {
    if (qword_10119C300 != -1)
      swift_once(&qword_10119C300, sub_1005D2ED0);
    v14 = (id)qword_10124D3E0;
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  v15 = v14;
  objc_msgSend(v10, "setTextColor:", v14);

  v16 = *(void **)&a1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  if (!v16)
    goto LABEL_16;
  objc_msgSend(v16, "setHidden:", 0);
  v17 = *(void **)&a1[v8];
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v18 = v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x79616C5020746F4ELL, 0xEB00000000676E69);
  static Locale.current.getter(v19);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = *(void **)&a1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v23, "setTitle:forState:", 0, 0);
  v24 = *(void **)&a1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v24)
  {
LABEL_19:
    __break(1u);
    return;
  }
  objc_msgSend(v24, "setHidden:", 1);
  v25 = *(char **)&a1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
  if (v25)
  {
    v26 = *(void **)&v25[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog];
    if (v26)
    {
      *(_QWORD *)&v25[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog] = 0;
      v27 = v25;

      sub_100675910();
      objc_msgSend(v27, "setNeedsLayout");

    }
  }
}

void sub_1001322B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  char v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;

  v1 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v1)
  {
    v2 = objc_msgSend(v1, "tracklist");
    if (v2)
    {
      v37 = v2;
      v3 = objc_msgSend(v2, "playingItem");
      if (v3)
      {
        v4 = v3;
        v5 = sub_1005D2C1C(*(_BYTE *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType));
        v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, 10.0);
        if (objc_msgSend(v4, "isAutoPlay"))
        {
          if (objc_msgSend(v37, "actionAtQueueEnd") == (id)3)
          {
            v7 = v6;
            v8 = String._bridgeToObjectiveC()();
            v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v8, v7);

            if (v9)
            {
              v5 = 0;
              goto LABEL_15;
            }
          }
        }
        if (objc_msgSend(v37, "repeatType") == (id)1
          || objc_msgSend(v37, "shuffleType")
          || objc_msgSend(v37, "repeatType") == (id)2)
        {
          v11 = String._bridgeToObjectiveC()();
          v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v11);

          if (!v9)
          {
            v12 = 0;
            goto LABEL_21;
          }
LABEL_15:
          v12 = v9;
          if (objc_msgSend(v12, "isSymbolImage"))
          {
            v13 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
            v14 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView);
            if (!v14)
            {
LABEL_47:

              __break(1u);
              goto LABEL_48;
            }
            v15 = v14;
            v16 = objc_msgSend(v12, "imageWithSymbolConfiguration:", v6);
            objc_msgSend(v15, "setImage:", v16);

            v17 = *(void **)(v0 + v13);
            if (!v17)
            {
LABEL_48:

              __break(1u);
              goto LABEL_49;
            }
            objc_msgSend(v17, "setContentMode:", 4);

            goto LABEL_24;
          }

LABEL_21:
          v18 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
          v19 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView);
          if (!v19)
          {
LABEL_44:

            __break(1u);
            goto LABEL_45;
          }
          objc_msgSend(v19, "setImage:", v12);
          v20 = *(void **)(v0 + v18);
          if (!v20)
          {
LABEL_45:

            __break(1u);
            goto LABEL_46;
          }
          objc_msgSend(v20, "setContentMode:", 1);
LABEL_24:
          v21 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
          v22 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView);
          if (v22)
          {
            if ((v5 & 1) != 0)
            {
              v23 = v22;
              v24 = 1;
            }
            else
            {
              v25 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton);
              v26 = v22;
              if (!v25)
              {
LABEL_46:

                __break(1u);
                goto LABEL_47;
              }
              v24 = (uint64_t)objc_msgSend(v25, "isSelected");
            }
            objc_msgSend(v22, "setHidden:", v24);

            v27 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton);
            if (v27)
            {
              v28 = objc_msgSend(v27, "layer");
              v29 = *(void **)(v0 + v21);
              if (v29)
              {
                if ((objc_msgSend(v29, "isHidden") & 1) != 0
                  || (v30 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeMaskLayer)) == 0)
                {
                  v31 = 0;
                }
                else
                {
                  v31 = v30;
                }
                objc_msgSend(v28, "setMask:", v31);

                v10 = v12;
                goto LABEL_36;
              }
              goto LABEL_43;
            }
          }
          else
          {

            __break(1u);
          }

          __break(1u);
LABEL_43:

          __break(1u);
          goto LABEL_44;
        }
        v32 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
        v33 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView);
        if (!v33)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        objc_msgSend(v33, "setImage:", 0);
        v34 = *(void **)(v0 + v32);
        if (!v34)
        {
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        objc_msgSend(v34, "setHidden:", 1);
        v35 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton);
        if (!v35)
        {
LABEL_51:
          __break(1u);
          return;
        }
        v36 = objc_msgSend(v35, "layer");
        objc_msgSend(v36, "setMask:", 0);

        v10 = v37;
      }
      else
      {
        v10 = v37;
      }
LABEL_36:

    }
  }
}

void sub_100132764()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double MinY;
  double v13;
  void *v14;
  id v15;
  CGMutablePathRef Mutable;
  _QWORD v17[6];
  CGRect v18;
  CGRect v19;

  v1 = v0;
  if (qword_10119B9B0 != -1)
    swift_once(&qword_10119B9B0, sub_10012C59C);
  v2 = *(double *)&qword_1011A1A60;
  if (qword_10119B998 != -1)
    swift_once(&qword_10119B998, sub_10012C56C);
  v3 = *(double *)&qword_1011A1A48;
  if (qword_10119B9A0 != -1)
    swift_once(&qword_10119B9A0, sub_10012C57C);
  v4 = *(double *)&qword_1011A1A50;
  if (qword_10119B9A8 != -1)
    swift_once(&qword_10119B9A8, sub_10012C58C);
  v5 = *(double *)&qword_1011A1A58;
  v6 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  Mutable = CGPathCreateMutable();
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = objc_msgSend(v7, "layoutDirection");

  v9 = v2 - (v3 - v4) - v5;
  v10 = v5 - v4;
  v17[0] = 0x3FF0000000000000;
  v17[1] = 0;
  if (v8 == (id)1)
    v11 = v10;
  else
    v11 = v9;
  v17[2] = 0;
  v17[3] = 0x3FF0000000000000;
  v17[4] = 0;
  v17[5] = 0;
  CGMutablePathRef.addEllipse(in:transform:)(v17, v11, v10, v3, v3);
  v18.origin.x = v11;
  v18.origin.y = v10;
  v18.size.width = v3;
  v18.size.height = v3;
  MinY = CGRectGetMinY(v18);
  v19.origin.x = v11;
  v19.origin.y = v10;
  v19.size.width = v3;
  v19.size.height = v3;
  v13 = CGRectGetMinY(v19);
  CGMutablePathRef.addRect(_:transform:)(v17, 0.0, MinY, v2 + v4, v2 + fabs(v13));
  objc_msgSend(v6, "setPath:", Mutable);
  objc_msgSend(v6, "setFillRule:", kCAFillRuleEvenOdd);
  v14 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeMaskLayer];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeMaskLayer] = v6;
  v15 = v6;

  sub_1001322B4();
}

void sub_1001329AC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  unsigned int v26;
  unsigned int v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;

  v1 = v0;
  if ((sub_1005D2C1C(v0[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType]) & 1) != 0)
  {
    v2 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
    if (v2)
    {
      v3 = objc_msgSend(v2, "tracklist");
      if (v3)
      {
        v4 = v3;
        v5 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
        v6 = (char *)*(id *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton];
        v7 = objc_msgSend(v4, "shuffleType");
        v8 = *(id *)&v6[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_shuffleType];
        *(_QWORD *)&v6[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_shuffleType] = v7;
        if (v7 != v8)
          sub_1006B6C1C();

        v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
        v10 = (char *)*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton];
        v11 = objc_msgSend(v4, "repeatType");
        v12 = *(id *)&v10[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType];
        *(_QWORD *)&v10[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType] = v11;
        if (v11 != v12)
          sub_1008045F4();

        v13 = *(id *)&v1[v5];
        v14 = objc_msgSend(v4, "shuffleCommand");
        v16 = v14;
        if (v14)
          *(_QWORD *)&v15 = swift_unknownObjectRelease(v14).n128_u64[0];
        objc_msgSend(v13, "setHidden:", v16 == 0, v15);

        v17 = *(id *)&v1[v9];
        v18 = objc_msgSend(v4, "repeatCommand");
        v20 = v18;
        if (v18)
          *(_QWORD *)&v19 = swift_unknownObjectRelease(v18).n128_u64[0];
        objc_msgSend(v17, "setHidden:", v20 == 0, v19);

      }
    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton], "setHidden:", 1);
    objc_msgSend(*(id *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton], "setHidden:", 1);
  }
  v21 = objc_msgSend(v1, "traitCollection");
  v22 = sub_10013B23C();
  v23 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v22);

  v24 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton;
  v25 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
  if (!v25)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v26 = objc_msgSend(v25, "isSelected");
  v27 = v26;
  v28 = *(void **)&v1[v24];
  if ((v23 & 1) != 0)
  {
    if (v28)
    {
      if (v26)
      {
        v29 = (void *)objc_opt_self(UIColor);
        v30 = v28;
        v31 = objc_msgSend(v29, "blackColor");
      }
      else
      {
        v35 = qword_10119C318;
        v36 = v28;
        if (v35 != -1)
          swift_once(&qword_10119C318, sub_1005D2F9C);
        v31 = (id)qword_10124D3F8;
      }
      v37 = v31;
      objc_msgSend(v28, "setTintColor:", v31);

      v38 = *(void **)&v1[v24];
      if (v38)
      {
        if (v27)
        {
          v39 = qword_10119C318;
          v40 = v38;
          if (v39 != -1)
            swift_once(&qword_10119C318, sub_1005D2F9C);
          v41 = (id)qword_10124D3F8;
          goto LABEL_37;
        }
        v45 = (void *)objc_opt_self(UIColor);
        v46 = v38;
        v47 = objc_msgSend(v45, "blackColor");
        goto LABEL_36;
      }
      goto LABEL_41;
    }
    goto LABEL_39;
  }
  if (!v28)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v26)
  {
    v32 = (void *)objc_opt_self(UIColor);
    v33 = v28;
    v34 = objc_msgSend(v32, "systemBackgroundColor");
  }
  else
  {
    v42 = v28;
    v34 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
  }
  v43 = v34;
  objc_msgSend(v28, "setTintColor:", v34);

  v38 = *(void **)&v1[v24];
  if (v38)
  {
    if (v27)
    {
      v44 = v38;
      v41 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
LABEL_37:
      v50 = v41;
      objc_msgSend(v38, "setBackgroundColor:");

      return;
    }
    v48 = (void *)objc_opt_self(UIColor);
    v49 = v38;
    v47 = objc_msgSend(v48, "clearColor");
LABEL_36:
    v41 = v47;
    goto LABEL_37;
  }
LABEL_42:
  __break(1u);
}

void sub_100132DD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  Class v8;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView);
  if (v2)
  {
    objc_msgSend(v2, "insertArrangedSubview:atIndex:", *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl), 1);
    v3 = *(void **)(v0 + v1);
    if (v3)
    {
      objc_msgSend(v3, "setSpacing:", 20.0);
      v4 = (void *)objc_opt_self(NSLayoutConstraint);
      v5 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

      v7 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints);
      swift_bridgeObjectRetain();
      v8 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "activateConstraints:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100132F00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  Class v7;

  v1 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView);
  if (v1)
  {
    objc_msgSend(v1, "addSubview:", *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl));
    v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView);
    if (v2)
    {
      objc_msgSend(v2, "setSpacing:", 40.0);
      v3 = (void *)objc_opt_self(NSLayoutConstraint);
      v4 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

      v6 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints);
      swift_bridgeObjectRetain();
      v7 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "activateConstraints:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100133030()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  id v10;
  void *v11;
  char v12;
  unsigned int v13;
  void *v14;
  id v15;
  id v16;
  double v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  char **v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  unsigned int v45;
  const char *v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unsigned int v66;
  CGAffineTransform v67;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  if (v2)
    v3 = objc_msgSend(v2, "tracklist");
  else
    v3 = 0;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = sub_10013B23C();
  v6 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v5);

  v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton;
  v8 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
  if (!v8)
  {
    __break(1u);
    goto LABEL_61;
  }
  v9 = objc_msgSend(v8, "isSelected");
  if (!v3)
    goto LABEL_13;
  v10 = objc_msgSend(v3, "playingItem");
  if (v10 && (v11 = v10, v12 = MPCPlayerResponseItem.supportsLyrics.getter(), v11, (v12 & 1) != 0))
  {
    v13 = 1;
    v14 = *(void **)&v1[v7];
    if (v14)
      goto LABEL_14;
  }
  else
  {
    v15 = objc_msgSend(v3, "vocalsControlCommand");
    if (!v15)
      goto LABEL_13;
    v16 = v15;
    v13 = objc_msgSend(v15, "isActive");
    swift_unknownObjectRelease(v16);
    v14 = *(void **)&v1[v7];
    if (v14)
      goto LABEL_14;
  }
  do
  {
    __break(1u);
LABEL_13:
    v13 = 0;
    v14 = *(void **)&v1[v7];
  }
  while (!v14);
LABEL_14:
  v17 = 1.0;
  if (!v9)
    v17 = 0.0;
  CGAffineTransformMakeTranslation(&v67, 0.0, v17);
  objc_msgSend(v14, "setTransform:", &v67);
  v18 = v9 | v13;
  v19 = *(void **)&v1[v7];
  if (v18 != 1)
  {
    if (v19)
    {
      if ((v6 & 1) != 0)
      {
        v24 = qword_10119C308;
        v25 = v19;
        if (v24 != -1)
          swift_once(&qword_10119C308, sub_1005D2EE4);
        v26 = (id)qword_10124D3E8;
      }
      else
      {
        v30 = (void *)objc_opt_self(UIColor);
        v31 = v19;
        v26 = objc_msgSend(v30, "quaternaryLabelColor");
      }
      v32 = v26;
      objc_msgSend(v19, "setTintColor:", v26);

      v33 = *(void **)&v1[v7];
      if (v33)
      {
        v34 = (void *)objc_opt_self(UIColor);
        v35 = v33;
        v36 = &selRef_blackColor;
        if ((v6 & 1) == 0)
          v36 = &selRef_clearColor;
        v37 = objc_msgSend(v34, *v36);
        objc_msgSend(v35, "setBackgroundColor:", v37);

        v38 = *(void **)&v1[v7];
        if (v38)
        {
          objc_msgSend(v38, "setEnabled:", 0);
          if (qword_10119C358 != -1)
            swift_once(&qword_10119C358, sub_1005EC118);
          v39 = type metadata accessor for Logger(0);
          v40 = sub_100048B14(v39, (uint64_t)qword_10124D428);
          v41 = Logger.logObject.getter(v40);
          v42 = static os_log_type_t.default.getter(v41);
          if (!os_log_type_enabled(v41, v42))
            goto LABEL_59;
          v43 = (uint8_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v43 = 67240192;
          v44 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
          v45 = objc_msgSend(v44, "isRemoteServerLikelyReachable");

          LODWORD(v67.a) = v45;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, (char *)&v67.a + 4);
          v46 = "[NowPlayingControlsViewController] updateLyricsButton disabling lyrics button isRemoteServerLikelyReacha"
                "ble=%{BOOL,public}d";
          goto LABEL_58;
        }
        goto LABEL_64;
      }
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (!v19)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  objc_msgSend(*(id *)&v1[v7], "setEnabled:", 1);
  v20 = *(void **)&v1[v7];
  if ((v6 & 1) != 0)
  {
    if (v20)
    {
      if (v9)
      {
        v21 = (void *)objc_opt_self(UIColor);
        v22 = v20;
        v23 = objc_msgSend(v21, "blackColor");
      }
      else
      {
        v47 = qword_10119C318;
        v48 = v20;
        if (v47 != -1)
          swift_once(&qword_10119C318, sub_1005D2F9C);
        v23 = (id)qword_10124D3F8;
      }
      v49 = v23;
      objc_msgSend(v20, "setTintColor:", v23);

      v50 = *(void **)&v1[v7];
      if (v50)
      {
        if (v9)
        {
          v51 = qword_10119C318;
          v52 = v50;
          if (v51 != -1)
            swift_once(&qword_10119C318, sub_1005D2F9C);
          v53 = (id)qword_10124D3F8;
          goto LABEL_54;
        }
        v57 = (void *)objc_opt_self(UIColor);
        v58 = v50;
        v59 = objc_msgSend(v57, "blackColor");
        goto LABEL_53;
      }
      goto LABEL_67;
    }
    goto LABEL_65;
  }
  if (!v20)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v9)
  {
    v27 = (void *)objc_opt_self(UIColor);
    v28 = v20;
    v29 = objc_msgSend(v27, "systemBackgroundColor");
  }
  else
  {
    v54 = v20;
    v29 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
  }
  v55 = v29;
  objc_msgSend(v20, "setTintColor:", v29);

  v50 = *(void **)&v1[v7];
  if (v50)
  {
    if (v9)
    {
      v56 = v50;
      v53 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
LABEL_54:
      v62 = v53;
      objc_msgSend(v50, "setBackgroundColor:", v53);

      if (qword_10119C358 != -1)
        swift_once(&qword_10119C358, sub_1005EC118);
      v63 = type metadata accessor for Logger(0);
      v64 = sub_100048B14(v63, (uint64_t)qword_10124D428);
      v41 = Logger.logObject.getter(v64);
      v42 = static os_log_type_t.default.getter(v41);
      if (!os_log_type_enabled(v41, v42))
        goto LABEL_59;
      v43 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v43 = 67240192;
      v65 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
      v66 = objc_msgSend(v65, "isRemoteServerLikelyReachable");

      LODWORD(v67.a) = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, (char *)&v67.a + 4);
      v46 = "[NowPlayingControlsViewController] updateLyricsButton enabling lyrics button; isRemoteServerLikelyReachable=%{BOOL,public}d";
LABEL_58:
      _os_log_impl((void *)&_mh_execute_header, v41, v42, v46, v43, 8u);
      swift_slowDealloc(v43, -1, -1);
LABEL_59:

      return;
    }
    v60 = (void *)objc_opt_self(UIColor);
    v61 = v50;
    v59 = objc_msgSend(v60, "clearColor");
LABEL_53:
    v53 = v59;
    goto LABEL_54;
  }
LABEL_68:
  __break(1u);
}

void sub_100133704(unsigned __int8 a1)
{
  char *v1;
  int v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  uint64_t Strong;
  __n128 v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28[24];

  v3 = a1;
  v4 = sub_10011C4FC();
  if (v3 == 10)
  {
    if (v4 == 10)
      return;
LABEL_6:
    v5 = sub_10011C4FC();
    if ((v5 - 3) > 7u)
      return;
    if (a1 == 10)
    {
      sub_10011C9E8();
      sub_100133D14();
      return;
    }
    if (v5 == 10)
    {
      v6 = swift_allocObject(&unk_1010B19B8, 24, 7);
      v7 = v6 + 16;
      swift_unknownObjectWeakInit(v6 + 16, v1);
      swift_retain_n(v6, 2);
      sub_100134348();
      v8 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (v8)
      {
        objc_msgSend(v8, "alpha");
        if (v9 == 0.0)
        {
          swift_beginAccess(v7, v28, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v7);
          if (Strong)
          {
            v12 = (void *)Strong;
            sub_10011C9E8();

          }
          goto LABEL_20;
        }
        swift_release(v6);
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        if (qword_10119B9C0 != -1)
          swift_once(&qword_10119B9C0, sub_10012C5F4);
        v17 = (void *)qword_1011A1A70;
        v18 = swift_allocObject(&unk_1010B1DC8, 24, 7);
        *(_QWORD *)(v18 + 16) = v1;
        v19 = v1;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v17, 0, sub_10013C884, v18, 0, 0, 0.0);
        swift_release(v18);
        if (qword_10119B9D0 != -1)
          swift_once(&qword_10119B9D0, sub_10012C688);
        v20 = qword_1011A1AA8;
        v21 = swift_allocObject(&unk_1010B1DF0, 24, 7);
        *(_QWORD *)(v21 + 16) = v19;
        v22 = swift_allocObject(&unk_1010B1E18, 32, 7);
        *(_QWORD *)(v22 + 16) = sub_10013B3DC;
        *(_QWORD *)(v22 + 24) = v6;
        v23 = v19;
        swift_retain(v6);
        goto LABEL_33;
      }
      swift_release(v6);
      __break(1u);
      goto LABEL_37;
    }
    if (a1 == 5)
    {
      if (v5 != 6)
        goto LABEL_17;
    }
    else if (a1 != 6 || v5 != 5)
    {
LABEL_17:
      v6 = swift_allocObject(&unk_1010B19B8, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16, v1);
      swift_retain_n(v6, 2);
      sub_100134348();
      v13 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
      if (v13)
      {
        objc_msgSend(v13, "alpha");
        if (v14 == 0.0)
        {
          sub_100133C04(v6);
LABEL_20:
          v15 = v6;
          v16 = 3;
LABEL_34:
          swift_release_n(v15, v16, v11);
          return;
        }
        swift_release(v6);
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        if (qword_10119B9C0 != -1)
          swift_once(&qword_10119B9C0, sub_10012C5F4);
        v24 = (void *)qword_1011A1A70;
        v25 = swift_allocObject(&unk_1010B1D50, 24, 7);
        *(_QWORD *)(v25 + 16) = v1;
        v26 = v1;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v24, 0, sub_10013B3BC, v25, 0, 0, 0.0);
        swift_release(v25);
        if (qword_10119B9D0 != -1)
          swift_once(&qword_10119B9D0, sub_10012C688);
        v20 = qword_1011A1AA8;
        v21 = swift_allocObject(&unk_1010B1D78, 24, 7);
        *(_QWORD *)(v21 + 16) = v26;
        v22 = swift_allocObject(&unk_1010B1DA0, 32, 7);
        *(_QWORD *)(v22 + 16) = sub_10013B3B4;
        *(_QWORD *)(v22 + 24) = v6;
        v27 = v26;
        swift_retain(v6);
LABEL_33:
        static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v20, 0, sub_10013B3C4, v21, sub_10013B3D8, v22, 0.25, 0.0);
        swift_release(v22);
        v11 = swift_release(v21);
        v15 = v6;
        v16 = 2;
        goto LABEL_34;
      }
LABEL_37:
      swift_release(v6);
      __break(1u);
      return;
    }
    sub_10011C9E8();
    return;
  }
  if (v4 == 10 || !sub_100672270(a1, v4))
    goto LABEL_6;
}

void sub_100133BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10011C9E8();

  }
}

void sub_100133C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10011C9E8();

  }
  swift_beginAccess(v1, &v6, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = (void *)v4;
    sub_100133D14();

  }
}

void sub_100133C80(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  _OWORD v4[3];

  v1 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (v1)
  {
    v2 = qword_10119B9C8;
    v3 = v1;
    if (v2 != -1)
      swift_once(&qword_10119B9C8, sub_10012C644);
    v4[0] = *(_OWORD *)byte_1011A1A78;
    v4[1] = *(_OWORD *)&byte_1011A1A78[16];
    v4[2] = *(_OWORD *)&byte_1011A1A78[32];
    objc_msgSend(v3, "setTransform:", v4);

  }
  else
  {
    __break(1u);
  }
}

void sub_100133D14()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _BYTE *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  sub_100134348();
  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1010B1BC0, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = (_QWORD *)swift_allocObject(&unk_1010B1BE8, 32, 7);
  v3[2] = sub_10013B328;
  v3[3] = v2;
  *(_QWORD *)&v29 = sub_1001095DC;
  *((_QWORD *)&v29 + 1) = v3;
  *(_QWORD *)&v27 = _NSConcreteStackBlock;
  *((_QWORD *)&v27 + 1) = 1107296256;
  *(_QWORD *)&v28 = sub_10046D7B4;
  *((_QWORD *)&v28 + 1) = &unk_1010B1C00;
  v4 = _Block_copy(&v27);
  v5 = *((_QWORD *)&v29 + 1);
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v3, "", 123, 3410, 40, 1);
  swift_release(v3);
  if ((v4 & 1) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v6[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden] & 1) != 0)
  {
LABEL_16:
    swift_release(v2);
    return;
  }
  v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
  v8 = *(void **)&v6[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
  if (v8)
  {
    objc_msgSend(v8, "setAlpha:", 0.0);
    v9 = *(void **)&v6[v7];
    if (v9)
    {
      v10 = qword_10119B9C8;
      v3 = v9;
      if (v10 == -1)
      {
LABEL_6:
        v27 = *(_OWORD *)byte_1011A1A78;
        v28 = *(_OWORD *)&byte_1011A1A78[16];
        v29 = *(_OWORD *)&byte_1011A1A78[32];
        objc_msgSend(v3, "setTransform:", &v27);

        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        if (qword_10119B9B8 != -1)
          swift_once(&qword_10119B9B8, sub_10012C5AC);
        v11 = (void *)qword_1011A1A68;
        v12 = swift_allocObject(&unk_1010B1C38, 24, 7);
        *(_QWORD *)(v12 + 16) = v6;
        v13 = v6;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v11, 0, sub_10013B354, v12, 0, 0, 0.0);
        swift_release(v12);
        v14 = sub_10011C4FC();
        if (v14 != 10)
        {
          v15 = v14;
          if (qword_10119C5C8 != -1)
            swift_once(&qword_10119C5C8, sub_100670F14);
          if ((sub_10075C37C(v15, qword_10124D668) & 1) != 0)
          {
            if (qword_10119B9D8 != -1)
              swift_once(&qword_10119B9D8, sub_10012C6C8);
            v16 = qword_1011A1AB0;
            v17 = swift_allocObject(&unk_1010B1CB0, 24, 7);
            *(_QWORD *)(v17 + 16) = v13;
            v18 = swift_allocObject(&unk_1010B1CD8, 24, 7);
            *(_QWORD *)(v18 + 16) = v13;
            v19 = v13;
            static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v16, 0, sub_10013B36C, v17, sub_10013B388, v18, 1.0, 0.25);
            swift_release(v18);
            swift_release(v17);
            v20 = qword_1011A1AB0;
            v21 = swift_allocObject(&unk_1010B1D00, 24, 7);
            *(_QWORD *)(v21 + 16) = v19;
            v22 = v19;
            static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v20, 0, sub_10013B390, v21, 0, 0, 3.0, 0.0);
            swift_release(v21);
          }
        }
        v23 = swift_allocObject(&unk_1010B1C60, 24, 7);
        *(_QWORD *)(v23 + 16) = v13;
        *(_QWORD *)&v29 = sub_10013B35C;
        *((_QWORD *)&v29 + 1) = v23;
        *(_QWORD *)&v27 = _NSConcreteStackBlock;
        *((_QWORD *)&v27 + 1) = 1107296256;
        *(_QWORD *)&v28 = sub_1001DBD98;
        *((_QWORD *)&v28 + 1) = &unk_1010B1C78;
        v24 = _Block_copy(&v27);
        v25 = *((_QWORD *)&v29 + 1);
        v26 = v13;
        swift_release(v25);
        objc_msgSend(v1, "animateWithDuration:animations:", v24, 1.0);
        _Block_release(v24);
        goto LABEL_16;
      }
LABEL_18:
      swift_once(&qword_10119B9C8, sub_10012C644);
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100134184(uint64_t a1)
{
  id result;
  _QWORD v2[6];

  result = *(id *)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1001341D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  double result;

  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  if (qword_10119B9E0 != -1)
    swift_once(&qword_10119B9E0, sub_10012C708);
  v3 = qword_1011A1AB8;
  v4 = swift_allocObject(&unk_1010B1D28, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = a2;
  static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v3, 0, sub_10013B398, v4, 0, 0, 2.0, 0.0);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_10013428C(uint64_t a1, float a2)
{
  void *v2;
  double v4;
  id v5;

  v2 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (v2)
  {
    v5 = objc_msgSend(v2, "layer");
    *(float *)&v4 = a2;
    objc_msgSend(v5, "setShadowOpacity:", v4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001342F0(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (v1)
  {
    v2 = objc_msgSend(v1, "layer");
    objc_msgSend(v2, "setShadowRadius:", 10.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_100134348()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "removeAllAnimations");

  v4 = *(void **)(v0 + v1);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = objc_msgSend(v4, "layer");
  LODWORD(v6) = 0;
  objc_msgSend(v5, "setShadowOpacity:", v6);

  v7 = *(void **)(v0 + v1);
  if (v7)
  {
    v8 = objc_msgSend(v7, "layer");
    objc_msgSend(v8, "setShadowRadius:", 0.0);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100134414(id a1)
{
  _OWORD v3[3];

  if (qword_10119B9C8 != -1)
    swift_once(&qword_10119B9C8, sub_10012C644);
  v3[0] = *(_OWORD *)byte_1011A1A78;
  v3[1] = *(_OWORD *)&byte_1011A1A78[16];
  v3[2] = *(_OWORD *)&byte_1011A1A78[32];
  return objc_msgSend(a1, "setTransform:", v3);
}

void sub_10013448C(int a1, id a2, uint64_t a3, void (*a4)(void))
{
  id v7;
  char *v8;
  id v9;
  void *v10;

  v7 = objc_msgSend(a2, "layer");
  objc_msgSend(v7, "removeAllAnimations");

  v8 = sub_100323700();
  v9 = objc_msgSend(v8, "layer");

  objc_msgSend(v9, "removeAllAnimations");
  objc_msgSend(a2, "removeFromSuperview");
  v10 = *(void **)(a3 + OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView);
  *(_QWORD *)(a3 + OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView) = 0;

  if (a4)
    a4();
}

void sub_100134558()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  double v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying];
  if (v5)
  {
    v6 = objc_msgSend(v5, "tracklist");
    v7 = objc_msgSend(v6, "vocalsControlCommand");

    v8 = OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView;
    if (*(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView])
      goto LABEL_11;
    if (v7)
    {
      if ((objc_msgSend(v7, "isActive") & 1) != 0)
      {
        v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SingIndicatorView()), "init");
        v10 = objc_msgSend(v9, "layer");
        LODWORD(v11) = 0;
        objc_msgSend(v10, "setOpacity:", v11);

        objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(*(id *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView], "addSubview:", v9);
        v12 = *(void **)&v1[v8];
        *(_QWORD *)&v1[v8] = v9;
        v13 = (char *)v9;

        v14 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v15 = swift_allocObject(v14, 48, 7);
        *(_OWORD *)(v15 + 16) = xmmword_100EA7DB0;
        v16 = OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel;
        v17 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel], "centerYAnchor");
        v18 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
        v19 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
        if (v19)
        {
          v20 = v17;
          v21 = objc_msgSend(*(id *)(v19 + OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel), "centerYAnchor");
          v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

          *(_QWORD *)(v15 + 32) = v22;
          v48 = v13;
          v23 = objc_msgSend(*(id *)&v13[v16], "centerXAnchor");
          v24 = *(void **)&v1[v18];
          if (!v24)
          {
LABEL_15:
            __break(1u);
            return;
          }
          v25 = v23;
          v26 = (void *)objc_opt_self(NSLayoutConstraint);
          v27 = objc_msgSend(v24, "centerXAnchor");
          v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);

          *(_QWORD *)(v15 + 40) = v28;
          aBlock[0] = v15;
          specialized Array._endMutation()(v29);
          v30 = aBlock[0];
          sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

          v32 = objc_opt_self(UIView);
          v33 = swift_allocObject(&unk_1010B1B20, 24, 7);
          *(_QWORD *)(v33 + 16) = v1;
          v34 = swift_allocObject(&unk_1010B1B48, 32, 7);
          *(_QWORD *)(v34 + 16) = sub_10013C914;
          *(_QWORD *)(v34 + 24) = v33;
          aBlock[4] = sub_10010942C;
          v50 = v34;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10046D7B4;
          aBlock[3] = &unk_1010B1B60;
          v35 = _Block_copy(aBlock);
          v36 = v50;
          v37 = v1;
          swift_retain(v34);
          objc_msgSend((id)v32, "performWithoutAnimation:", v35, swift_release(v36).n128_f64[0]);
          _Block_release(v35);
          LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v34, "", 123, 3485, 40, 1);
          *(_QWORD *)&v38 = swift_release(v34).n128_u64[0];
          if ((v32 & 1) == 0)
          {
            v39 = v37[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden];
            v40 = v48;
            objc_msgSend(v48, "setHidden:", v39, v38);
            v41 = type metadata accessor for TaskPriority(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v4, 1, 1, v41);
            type metadata accessor for MainActor(0);
            v42 = v40;
            v44 = static MainActor.shared.getter(v43);
            v45 = (_QWORD *)swift_allocObject(&unk_1010B1B98, 40, 7);
            v45[2] = v44;
            v45[3] = &protocol witness table for MainActor;
            v45[4] = v42;
            v46 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011A2160, (uint64_t)v45);
            swift_release(v46);

            swift_unknownObjectRelease(v7);
            swift_release(v33);
            return;
          }
          __break(1u);
        }
        __break(1u);
        goto LABEL_15;
      }
LABEL_11:
      swift_unknownObjectRelease(v7);
    }
  }
  else if (*(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView])
  {
    v7 = 0;
    goto LABEL_11;
  }
}

void sub_100134A44(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *Strong;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _QWORD v17[5];
  char v18;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = sub_10011DAF0();
    v7 = sub_10011DAF0();
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v17[0] = v6;
    v17[1] = v9;
    v17[2] = v11;
    v17[3] = v13;
    v17[4] = v15;
    v18 = 0;
    PresentationSource.init(viewController:position:)(v5, (uint64_t)v17, a2);

  }
  else
  {
    *(_QWORD *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 56) = xmmword_100EA93A0;
  }
}

uint64_t sub_100134B20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  _QWORD v21[3];
  uint64_t v22;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)*MetricsReportingController.shared.unsafeMutableAddressor();
  v4 = sub_100007E8C((uint64_t *)&unk_1011AE170);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A2180);
  inited = swift_initStackObject(v6, &v22);
  *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
  v21[0] = 25705;
  v21[1] = 0xE200000000000000;
  v8 = v3;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = 0xD000000000000016;
  *(_QWORD *)(inited + 80) = 0x8000000100E2E520;
  strcpy((char *)v21, "impressionType");
  HIBYTE(v21[1]) = -18;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 144) = 0x6954656C62627562;
  *(_QWORD *)(inited + 152) = 0xE900000000000070;
  v21[0] = 1701667182;
  v21[1] = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 240) = &type metadata for String;
  *(_QWORD *)(inited + 216) = 0xD000000000000016;
  *(_QWORD *)(inited + 224) = 0x8000000100E2E520;
  v21[0] = 0x6973736572706D69;
  v21[1] = 0xEF7865646E496E6FLL;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 312) = &type metadata for Int;
  *(_QWORD *)(inited + 288) = -1;
  *(_QWORD *)(v5 + 32) = sub_1000423DC(inited);
  v9 = type metadata accessor for MetricsPageProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  sub_100540B34();
  v11 = v10;
  v13 = v12;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v14 = qword_10124C790;
  swift_retain(qword_10124C790);
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v21, 0, 0);
  v18 = *v17;
  v19 = swift_release(v14);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v8)
                                                                                              + 0xA8))(v5, v2, v11, v13, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v13);
  return sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011A2170);
}

void sub_100134E20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  char *v75;
  uint64_t v76;
  id v77;
  id v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  char *v83;
  id v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  char *v101;
  void *v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  void *v108;
  uint64_t v109;
  char *v110;
  void *v111;
  uint64_t v112;
  void *v113;
  id v114;
  char *v115;
  char *v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  char *v121;
  _QWORD *v122;
  void *v123;
  void (*v124)(void *);
  _QWORD *v125;
  void *v126;
  uint64_t v127;
  char *v128;
  void *v129;
  uint64_t v130;
  void *v131;
  id v132;
  _QWORD *v133;
  void *v134;
  void (*v135)(void *);
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  void *v139;
  void *v140;
  char *v141;
  id v142;
  uint64_t v143;
  void *v144;
  id v145;
  _QWORD *v146;
  void *v147;
  void (*v148)(void *);
  _QWORD *v149;
  void *v150;
  void *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void *v155;
  void *v156;
  id v157;
  char *v158;
  void *v159;
  void *v160;
  id v161;
  char *v162;
  char *v163;
  void *v164;
  void *v165;
  id v166;
  char *v167;
  void *v168;
  char *v169;
  id v170;
  void *v171;
  id v172;
  void *v173;
  char **v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  char **v178;
  void *v179;
  uint64_t v180;
  id v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  double v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  id v191;
  void *v192;
  id v193;
  uint64_t v194;
  void *v195;
  void *v196;
  char *v197;
  id v198;
  uint64_t v199;
  void *v200;
  id v201;
  void *v202;
  char *v203;
  char *v204;
  id v205;
  uint64_t v206;
  void *v207;
  id v208;
  _QWORD *v209;
  void *v210;
  void (*v211)(void *);
  _QWORD *v212;
  void *v213;
  uint64_t v214;
  char *v215;
  id v216;
  uint64_t v217;
  void *v218;
  id v219;
  _QWORD *v220;
  void *v221;
  void (*v222)(void *);
  _QWORD *v223;
  void *v224;
  uint64_t v225;
  char *v226;
  id v227;
  uint64_t v228;
  void *v229;
  id v230;
  _QWORD *v231;
  void *v232;
  void (*v233)(void *);
  _QWORD *v234;
  void *v235;
  char *v236;
  id v237;
  void *v238;
  id v239;
  uint64_t v240;
  void *v241;
  char *v242;
  id v243;
  void *v244;
  id v245;
  void *v246;
  char *v247;
  id v248;
  void *v249;
  id v250;
  void *v251;
  char *v252;
  id v253;
  void *v254;
  id v255;
  void *v256;
  id v257;
  id v258;
  void *v259;
  id v260;
  id v261;
  void *v262;
  id v263;
  uint64_t v264;
  void *v265;
  uint64_t v266;
  id v267;
  void *v268;
  id v269;
  id v270;
  void *v271;
  id v272;
  void *v273;
  id v274;
  id v275;
  char v276;
  uint64_t v277;
  void *v278;
  uint64_t v279;
  void (*v280)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v281;
  id v282;
  _QWORD *v283;
  __n128 v284;
  id v285;
  char *v286;
  uint64_t v287;
  void *v288;
  uint64_t v289;
  id v290;
  BOOL v291;
  uint64_t v292;
  char **v293;
  uint64_t *v294;
  uint64_t v295;
  id v296;
  void *v297;
  uint64_t v298;
  id v299;
  uint64_t *v300;
  uint64_t v301;
  id v302;
  char *v303;
  id v304;
  void *v305;
  id v306;
  void *v307;
  id v308;
  char *v309;
  id v310;
  void *v311;
  id v312;
  void *v313;
  id v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  id v322;
  char *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  _QWORD v327[3];
  uint64_t v328;
  _QWORD v329[11];

  v1 = sub_100007E8C(&qword_1011D0F70);
  __chkstk_darwin(v1);
  v3 = (char *)&v315 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  inited = swift_initStackObject(v4, &v328);
  *(_OWORD *)(inited + 16) = xmmword_100EAB900;
  v6 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView];
  if (!v6)
    goto LABEL_145;
  v7 = (_QWORD *)inited;
  *(_QWORD *)(inited + 32) = v6;
  v8 = *(char **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView];
  if (!v8)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  *(_QWORD *)(inited + 40) = v8;
  v9 = OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton;
  v10 = *(char **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton];
  if (!v10)
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  *(_QWORD *)(inited + 48) = v10;
  v11 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl];
  if (!v11)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  v324 = OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl;
  v318 = v3;
  v7[7] = v11;
  v12 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
  v13 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton];
  v7[8] = v13;
  v14 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
  v15 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton];
  v7[9] = v15;
  v321 = OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider;
  v16 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider];
  if (!v16)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  v7[10] = v16;
  v17 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton];
  if (!v17)
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  v18 = v0;
  v7[11] = v17;
  v320 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView;
  v19 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView];
  if (!v19)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  v7[12] = v19;
  v20 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton];
  if (!v20)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  v322 = v11;
  v323 = v10;
  v319 = OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton;
  v316 = v12;
  v317 = v9;
  v315 = v14;
  v7[13] = v20;
  v325 = v8;
  v326 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel;
  v21 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel];
  if (!v21)
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  v22 = v13;
  v23 = v15;
  v24 = v6;
  v25 = v325;
  v26 = v323;
  v27 = v322;
  v28 = v16;
  v29 = v17;
  v30 = v19;
  v31 = v20;
  v7[14] = objc_msgSend(v21, "titleLabel");
  v323 = (char *)OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  v32 = *(void **)(*(_QWORD *)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl]
                 + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_containerView);
  v7[15] = v32;
  v33 = *(void **)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView];
  v34 = v32;
  v35 = v33;
  v36 = sub_10044D0F4();

  v7[16] = v36;
  v37 = sub_10011DAF0();
  v7[17] = v37;
  v329[0] = v7;
  specialized Array._endMutation()(v37);
  v38 = *(void **)&v18[v326];
  if (!v38)
  {
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  v39 = v329[0];
  v40 = objc_msgSend(v38, "titleLabel");
  v41 = objc_msgSend(v40, "superview");

  if (v41)
  {
    v42 = objc_msgSend(v41, "layer", v315, v316);

    objc_msgSend(v42, "setAllowsGroupBlending:", 0);
  }
  v43 = *(void **)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
  if (!v43)
    goto LABEL_155;
  v327[0] = *(_QWORD *)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton];
  v44 = *(void **)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
  if (!v44)
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  v327[1] = *(_QWORD *)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton];
  v45 = *(void **)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
  if (!v45)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  v46 = v18;
  v47 = (uint64_t)v327;
  v327[2] = *(_QWORD *)&v18[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton];
  v48 = v43;
  v49 = v44;
  v50 = v45;
  v325 = v46;
  v51 = objc_msgSend(v46, "traitCollection");
  v322 = (id)sub_10013B23C();
  v52 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v322);

  if ((v52 & 1) != 0)
  {
    v329[0] = _swiftEmptyArrayStorage;
    v53 = (char *)objc_msgSend(v48, "imageView");
    if (v53)
    {
      v48 = v53;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
      v52 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v54 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v52 >= v54 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v52 + 1, 1);
      v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v48);
      specialized Array._endMutation()(v55);
    }
    v56 = (char *)objc_msgSend(v49, "imageView", v315);
    if (v56)
    {
      v49 = v56;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v48 = *(char **)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v57 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v48 >= v57 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v48 + 1, 1);
      v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v49);
      specialized Array._endMutation()(v58);
    }
    v59 = objc_msgSend((id)v50, "imageView");
    if (v59)
    {
      v60 = v59;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
      v49 = *(char **)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v61 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v49 >= v61 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v49 + 1, 1);
      v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v60);
      specialized Array._endMutation()(v62);
    }
    v50 = v329[0];
    swift_arrayDestroy(v327, 3, (char *)&type metadata for Swift.AnyObject + 8);
    if ((unint64_t)v50 >> 62)
    {
      if (v50 < 0)
        v97 = v50;
      else
        v97 = v50 & 0xFFFFFFFFFFFFFF8;
      v98 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      swift_bridgeObjectRetain();
      v64 = _bridgeCocoaArray<A>(_:)(v97, v98);
      swift_bridgeObjectRelease(v50);
    }
    else
    {
      v63 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v63);
      sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      v64 = v50;
    }
    swift_bridgeObjectRelease(v50);
    v329[0] = v39;
    sub_100804E24(v64);
    v65 = v329[0];
    if (v329[0] >> 62)
    {
      if (v329[0] < 0)
        v99 = v329[0];
      else
        v99 = v329[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v47 = _CocoaArrayWrapper.endIndex.getter(v99);
      if (v47)
        goto LABEL_33;
    }
    else
    {
      v47 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v47)
      {
LABEL_33:
        if (v47 >= 1)
        {
          v67 = 0;
          v68 = kCAFilterPlusL;
          do
          {
            if ((v65 & 0xC000000000000001) != 0)
              v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v65);
            else
              v69 = *(id *)(v65 + 8 * v67 + 32);
            v70 = v69;
            ++v67;
            v71 = objc_msgSend(v69, "layer");
            static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
            v73 = v72;
            v74 = String._bridgeToObjectiveC()();
            objc_msgSend(v71, "setCompositingFilter:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);

          }
          while (v47 != v67);
          goto LABEL_68;
        }
        __break(1u);
LABEL_143:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v52 + 1, 1);
        goto LABEL_41;
      }
    }
LABEL_68:
    *(_QWORD *)&v100 = swift_bridgeObjectRelease_n(v65, 2).n128_u64[0];
    v101 = v325;
    v102 = *(void **)&v325[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
    if (!v102)
    {
LABEL_162:
      __break(1u);
      goto LABEL_163;
    }
    v103 = objc_msgSend(v102, "layer", v100);
    objc_msgSend(v103, "setCompositingFilter:", kCAFilterPlusL);

    v104 = *(void **)&v101[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
    v105 = v324;
    if (!v104)
    {
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    v106 = qword_10119C318;
    v107 = v104;
    if (v106 != -1)
      swift_once(&qword_10119C318, sub_1005D2F9C);
    objc_msgSend(v107, "setTitleColor:forState:", qword_10124D3F8, 0);

    v108 = *(void **)&v101[v105];
    if (!v108)
      goto LABEL_164;
    v109 = qword_10119C300;
    v110 = v108;
    if (v109 != -1)
      swift_once(&qword_10119C300, sub_1005D2ED0);
    v111 = (void *)qword_10124D3E0;
    v112 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor;
    v113 = *(void **)&v110[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor];
    *(_QWORD *)&v110[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor] = qword_10124D3E0;
    v114 = v111;

    objc_msgSend(*(id *)&v110[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel], "setTextColor:", *(_QWORD *)&v110[v112]);
    v115 = *(char **)&v101[v105];
    if (!v115)
      goto LABEL_165;
    v116 = v101;
    v117 = (void *)qword_10124D3F8;
    v118 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor;
    v119 = *(void **)&v115[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor];
    *(_QWORD *)&v115[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor] = qword_10124D3F8;
    v120 = v117;
    v121 = v115;

    v122 = *(_QWORD **)&v121[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    v123 = *(void **)&v115[v118];
    v124 = *(void (**)(void *))((swift_isaMask & *v122) + 0x190);
    v125 = v122;
    v124(v123);

    v126 = *(void **)&v116[v105];
    if (!v126)
    {
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
    v127 = qword_10119C320;
    v128 = v126;
    if (v127 != -1)
      swift_once(&qword_10119C320, sub_1005D2FB0);
    v129 = (void *)qword_10124D400;
    v130 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor;
    v131 = *(void **)&v128[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor];
    *(_QWORD *)&v128[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor] = qword_10124D400;
    v132 = v129;

    v133 = *(_QWORD **)&v128[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    v134 = *(void **)&v128[v130];
    v135 = *(void (**)(void *))((swift_isaMask & *v133) + 0x1A8);
    v136 = v133;
    v135(v134);

    objc_msgSend(*(id *)&v128[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack], "setBackgroundColor:", *(_QWORD *)&v128[v130]);
    v138 = v324;
    v137 = v325;
    v139 = *(void **)&v325[v324];
    if (!v139)
      goto LABEL_167;
    v140 = (void *)objc_opt_self(UIColor);
    v141 = v139;
    v142 = objc_msgSend(v140, "whiteColor");
    v143 = OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor;
    v144 = *(void **)&v141[OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor];
    *(_QWORD *)&v141[OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor] = v142;
    v145 = v142;

    v146 = *(_QWORD **)&v141[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    v147 = *(void **)&v141[v143];
    v148 = *(void (**)(void *))((swift_isaMask & *v146) + 0x1C0);
    v149 = v146;
    v148(v147);

    sub_1002DBD30();
    v150 = *(void **)&v137[v138];
    if (!v150)
    {
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
      goto LABEL_170;
    }
    v151 = v137;
    v152 = qword_10119C328;
    v153 = v150;
    v154 = v321;
    if (v152 != -1)
      swift_once(&qword_10119C328, sub_1005D2FC4);
    v155 = (void *)qword_10124D408;
    v156 = *(void **)&v153[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor];
    *(_QWORD *)&v153[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor] = qword_10124D408;
    v157 = v155;

    sub_1002DBD30();
    v158 = *(char **)&v137[v154];
    if (!v158)
      goto LABEL_169;
    v159 = (void *)qword_10124D3F8;
    v160 = *(void **)&v158[OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor];
    *(_QWORD *)&v158[OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor] = qword_10124D3F8;
    v161 = v159;
    v162 = v158;

    sub_1007930BC();
    v163 = *(char **)&v137[v154];
    if (!v163)
    {
LABEL_170:
      __break(1u);
      goto LABEL_171;
    }
    v164 = (void *)qword_10124D400;
    v165 = *(void **)&v163[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor];
    *(_QWORD *)&v163[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor] = qword_10124D400;
    v166 = v164;
    v167 = v163;

    sub_1007930BC();
    v168 = *(void **)&v137[v154];
    if (!v168)
    {
LABEL_171:
      __break(1u);
      goto LABEL_172;
    }
    v169 = v168;
    v170 = objc_msgSend(v140, "whiteColor");
    v171 = *(void **)&v169[OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor];
    *(_QWORD *)&v169[OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor] = v170;
    v172 = v170;

    sub_1007930BC();
    v173 = *(void **)&v137[v154];
    v174 = &selRef_referralObject;
    if (!v173)
    {
LABEL_172:
      __break(1u);
      goto LABEL_173;
    }
    v175 = qword_10124D3F8;
    objc_msgSend(v173, "setTintColor:", qword_10124D3F8);
    v176 = v320;
    v177 = *(void **)&v137[v319];
    v178 = &selRef_setMetricsOverlay_;
    if (!v177)
    {
LABEL_173:
      __break(1u);
      goto LABEL_174;
    }
    objc_msgSend(v177, "setTintColor:", v175);
    v179 = *(void **)&v137[v176];
    if (!v179)
    {
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
      goto LABEL_176;
    }
    v180 = qword_10119C308;
    v181 = v179;
    if (v180 != -1)
      swift_once(&qword_10119C308, sub_1005D2EE4);
    objc_msgSend(v181, "setBackgroundColor:", qword_10124D3E8);

    v182 = *(void **)&v137[v176];
    if (!v182)
      goto LABEL_175;
    objc_msgSend(v182, "setTintColor:", qword_10124D3E0);
LABEL_121:
    v273 = *(void **)((char *)v151 + OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton);
    if (v273)
    {
      v274 = v273;
      v275 = objc_msgSend(v151, "traitCollection");
      v276 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v322);

      v277 = Reactions.StackView.model.getter();
      (*(void (**)(_QWORD))(*(_QWORD *)v277 + 328))(v276 & 1);
      swift_release(v277);

    }
    sub_10011AF3C();
    v278 = *(void **)((char *)v151 + v317);
    if (v278)
    {
      v279 = type metadata accessor for SymbolButton.Configuration(0);
      v280 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v279 - 8) + 56);
      v281 = (uint64_t)v318;
      v280(v318, 1, 1, v279);
      v282 = v278;
      SymbolButton.updateConfigurationIfNeeded(_:animation:)(v281, 0, 0, 0, 1);

      sub_10004FF60(v281, &qword_1011D0F70);
      v283 = sub_10011DA3C();
      v284 = sub_10011EFF4((uint64_t)v329);
      (*(void (**)(_QWORD *, __n128))((swift_isaMask & *v283) + 0xA0))(v329, v284);

      v285 = sub_10011DAF0();
      v280((char *)v281, 1, 1, v279);
      SymbolButton.updateConfigurationIfNeeded(_:animation:)(v281, 0, 0, 0, 1);

      sub_10004FF60(v281, &qword_1011D0F70);
      sub_1001312F8();
      sub_100133030();
      sub_1001329AC();
      v286 = v323;
      v287 = *(_QWORD *)&v323[(_QWORD)v151];
      v288 = *(void **)(v287 + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_routeButton);
      if ((*(_BYTE *)(v287 + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style + 8) & 1) != 0)
      {
        v289 = qword_10119C050;
        v290 = v288;
        v291 = v289 == -1;
        v292 = v326;
        v293 = &selRef_referralObject;
        if (!v291)
          swift_once(&qword_10119C050, sub_1004652E4);
        v294 = &qword_10124D070;
      }
      else
      {
        v295 = qword_10119C058;
        v296 = v288;
        v291 = v295 == -1;
        v292 = v326;
        v293 = &selRef_referralObject;
        if (!v291)
          swift_once(&qword_10119C058, sub_10046530C);
        v294 = &qword_10124D078;
      }
      objc_msgSend(v288, v293[308], *v294);

      v297 = *(void **)((char *)v151 + v292);
      if (v297)
      {
        if ((*(_BYTE *)(*(_QWORD *)&v286[(_QWORD)v151]
                       + OBJC_IVAR____TtC5Music39NowPlayingRouteSharePlayTogetherControl_style
                       + 8) & 1) != 0)
        {
          v298 = qword_10119C050;
          v299 = v297;
          if (v298 != -1)
            swift_once(&qword_10119C050, sub_1004652E4);
          v300 = &qword_10124D070;
        }
        else
        {
          v301 = qword_10119C058;
          v302 = v297;
          if (v301 != -1)
            swift_once(&qword_10119C058, sub_10046530C);
          v300 = &qword_10124D078;
        }
        objc_msgSend(v297, "setTextColor:", *v300);

        v303 = (char *)*(id *)((char *)v151 + v316);
        v304 = objc_msgSend(v151, v174[483]);
        if (v304)
        {
          v305 = v304;
          v306 = objc_msgSend(v304, v178[196]);

          v307 = *(void **)&v303[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor];
          *(_QWORD *)&v303[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor] = v306;
          v308 = v306;

          sub_1006B6C1C();
          v309 = (char *)*(id *)((char *)v151 + v315);
          v310 = objc_msgSend(v151, v174[483]);
          if (v310)
          {
            v311 = v310;
            v312 = objc_msgSend(v310, v178[196]);

            v313 = *(void **)&v309[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor];
            *(_QWORD *)&v309[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor] = v312;
            v314 = v312;

            sub_1008045F4();
            sub_10011C9E8();
            return;
          }
          goto LABEL_161;
        }
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  v329[0] = _swiftEmptyArrayStorage;
  v75 = (char *)objc_msgSend(v48, "imageView");
  if (!v75)
    goto LABEL_42;
  v48 = v75;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v52 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v52 >= v66 >> 1)
    goto LABEL_143;
LABEL_41:
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v48);
  specialized Array._endMutation()(v76);
LABEL_42:
  v77 = objc_msgSend(v49, "imageView", v315);
  if (v77)
  {
    v78 = v77;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
    v80 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v80 >= v79 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
    v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v78);
    specialized Array._endMutation()(v81);
  }
  v82 = objc_msgSend((id)v50, "imageView");
  v83 = v325;
  if (v82)
  {
    v84 = v82;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v82);
    v86 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v85 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v86 >= v85 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v86 + 1, 1);
    v87 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v86, v84);
    specialized Array._endMutation()(v87);
  }
  v88 = v329[0];
  swift_arrayDestroy(v47, 3, (char *)&type metadata for Swift.AnyObject + 8);
  if ((unint64_t)v88 >> 62)
  {
    if (v88 < 0)
      v183 = v88;
    else
      v183 = v88 & 0xFFFFFFFFFFFFFF8;
    v184 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    swift_bridgeObjectRetain();
    v90 = _bridgeCocoaArray<A>(_:)(v183, v184);
    swift_bridgeObjectRelease(v88);
  }
  else
  {
    v89 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v89);
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v90 = v88;
  }
  swift_bridgeObjectRelease(v88);
  v329[0] = v39;
  sub_100804E24(v90);
  v91 = v329[0];
  if (v329[0] >> 62)
  {
    if (v329[0] < 0)
      v185 = v329[0];
    else
      v185 = v329[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v92 = _CocoaArrayWrapper.endIndex.getter(v185);
    if (!v92)
      goto LABEL_101;
  }
  else
  {
    v92 = *(_QWORD *)((v329[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v92)
      goto LABEL_101;
  }
  if (v92 < 1)
  {
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  v93 = 0;
  do
  {
    if ((v91 & 0xC000000000000001) != 0)
      v94 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v91);
    else
      v94 = *(id *)(v91 + 8 * v93 + 32);
    v95 = v94;
    ++v93;
    v96 = objc_msgSend(v94, "layer");
    objc_msgSend(v96, "setCompositingFilter:", 0);

  }
  while (v92 != v93);
LABEL_101:
  *(_QWORD *)&v186 = swift_bridgeObjectRelease_n(v91, 2).n128_u64[0];
  v187 = *(void **)&v83[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton];
  if (!v187)
  {
LABEL_176:
    __break(1u);
    goto LABEL_177;
  }
  v188 = objc_msgSend(v187, "layer", v186);
  objc_msgSend(v188, "setCompositingFilter:", 0);

  v189 = *(void **)&v83[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton];
  if (!v189)
  {
LABEL_177:
    __break(1u);
    goto LABEL_178;
  }
  v190 = v189;
  v191 = objc_msgSend(v83, "view");
  if (!v191)
  {
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  v192 = v191;
  v193 = objc_msgSend(v191, "tintColor");

  objc_msgSend(v190, "setTitleColor:forStates:", v193, 0);
  v194 = v324;
  v195 = *(void **)&v83[v324];
  if (!v195)
  {
LABEL_179:
    __break(1u);
    goto LABEL_180;
  }
  v196 = (void *)objc_opt_self(UIColor);
  v197 = v195;
  v198 = objc_msgSend(v196, "systemGrayColor");
  v199 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor;
  v200 = *(void **)&v197[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor];
  *(_QWORD *)&v197[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor] = v198;
  v201 = v198;

  objc_msgSend(*(id *)&v197[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel], "setTextColor:", *(_QWORD *)&v197[v199]);
  v202 = *(void **)&v83[v194];
  if (!v202)
  {
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  v203 = v83;
  v204 = v202;
  v205 = objc_msgSend(v196, "systemGrayColor");
  v206 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor;
  v207 = *(void **)&v204[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor];
  *(_QWORD *)&v204[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor] = v205;
  v208 = v205;

  v209 = *(_QWORD **)&v204[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
  v210 = *(void **)&v204[v206];
  v211 = *(void (**)(void *))((swift_isaMask & *v209) + 0x190);
  v212 = v209;
  v211(v210);

  v213 = *(void **)&v203[v194];
  if (!v213)
  {
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  v214 = v194;
  v215 = v213;
  v216 = objc_msgSend(v196, "systemFillColor");
  v217 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor;
  v218 = *(void **)&v215[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor];
  *(_QWORD *)&v215[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor] = v216;
  v219 = v216;

  v220 = *(_QWORD **)&v215[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
  v221 = *(void **)&v215[v217];
  v222 = *(void (**)(void *))((swift_isaMask & *v220) + 0x1A8);
  v223 = v220;
  v222(v221);

  objc_msgSend(*(id *)&v215[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack], "setBackgroundColor:", *(_QWORD *)&v215[v217]);
  v224 = *(void **)&v203[v214];
  if (!v224)
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  v225 = v214;
  v151 = v203;
  v226 = v224;
  v227 = objc_msgSend(v196, "labelColor");
  v228 = OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor;
  v229 = *(void **)&v226[OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor];
  *(_QWORD *)&v226[OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor] = v227;
  v230 = v227;

  v231 = *(_QWORD **)&v226[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
  v232 = *(void **)&v226[v228];
  v233 = *(void (**)(void *))((swift_isaMask & *v231) + 0x1C0);
  v234 = v231;
  v233(v232);

  sub_1002DBD30();
  v235 = *(void **)&v203[v225];
  if (!v235)
  {
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  v236 = v235;
  v237 = objc_msgSend(v196, "systemGrayColor");
  v238 = *(void **)&v236[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor];
  *(_QWORD *)&v236[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor] = v237;
  v239 = v237;

  sub_1002DBD30();
  v240 = v321;
  v241 = *(void **)&v203[v321];
  v178 = &selRef_setMetricsOverlay_;
  if (!v241)
  {
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  v242 = v241;
  v243 = objc_msgSend(v196, "systemGrayColor");
  v244 = *(void **)&v242[OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor];
  *(_QWORD *)&v242[OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor] = v243;
  v245 = v243;

  sub_1007930BC();
  v246 = *(void **)&v203[v240];
  if (!v246)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  v247 = v246;
  v248 = objc_msgSend(v196, "systemFillColor");
  v249 = *(void **)&v247[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor];
  *(_QWORD *)&v247[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor] = v248;
  v250 = v248;

  sub_1007930BC();
  v251 = *(void **)&v203[v240];
  if (!v251)
  {
LABEL_186:
    __break(1u);
    goto LABEL_187;
  }
  v252 = v251;
  v253 = objc_msgSend(v196, "labelColor");
  v254 = *(void **)&v252[OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor];
  *(_QWORD *)&v252[OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor] = v253;
  v255 = v253;

  sub_1007930BC();
  v256 = *(void **)&v203[v240];
  if (!v256)
  {
LABEL_187:
    __break(1u);
    goto LABEL_188;
  }
  v257 = v256;
  v258 = objc_msgSend(v196, "systemGrayColor");
  objc_msgSend(v257, "setTintColor:", v258);

  v259 = *(void **)&v203[v319];
  v174 = &selRef_referralObject;
  if (!v259)
  {
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  v260 = v259;
  v261 = objc_msgSend(v203, "view");
  if (!v261)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  v262 = v261;
  v263 = objc_msgSend(v261, "tintColor");

  objc_msgSend(v260, "setTintColor:", v263);
  v264 = v320;
  v265 = *(void **)&v203[v320];
  if (!v265)
  {
LABEL_190:
    __break(1u);
LABEL_191:
    __break(1u);
    goto LABEL_192;
  }
  v266 = qword_10119C310;
  v267 = v265;
  if (v266 != -1)
    swift_once(&qword_10119C310, sub_1005D2EF8);
  objc_msgSend(v267, "setBackgroundColor:", qword_10124D3F0);

  v268 = *(void **)&v203[v264];
  if (!v268)
    goto LABEL_191;
  v269 = v268;
  v270 = objc_msgSend(v203, "view");
  if (v270)
  {
    v271 = v270;
    v272 = objc_msgSend(v270, "tintColor");

    objc_msgSend(v269, "setTintColor:", v272);
    goto LABEL_121;
  }
LABEL_192:
  __break(1u);
}

void sub_100136688(void *a1, unsigned __int8 a2)
{
  char *v2;
  char *v3;
  int v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  Class isa;
  uint64_t v67;
  unint64_t v68;
  _BYTE v69[24];
  uint64_t v70;
  uint64_t v71;

  v3 = v2;
  v5 = a2;
  if (a2 == 4)
    v5 = v2[OBJC_IVAR___MusicNowPlayingControlsViewController_mode];
  v71 = (uint64_t)_swiftEmptyArrayStorage;
  v6 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView;
  v7 = *(void **)&v2[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
  if (!v7)
  {
    __break(1u);
    goto LABEL_51;
  }
  v8 = objc_msgSend(v7, "superview");
  if (v8)
  {
    v9 = v8;
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v10 = a1;
    v11 = v9;
    LOBYTE(v9) = static NSObject.== infix(_:_:)(v11, v10);

    if ((v9 & 1) != 0)
    {
LABEL_18:
      v23 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView];
      if (!v23)
      {
LABEL_36:
        v64 = (void *)objc_opt_self(NSLayoutConstraint);
        v65 = v71;
        sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v64, "activateConstraints:", isa, swift_bridgeObjectRelease(v65).n128_f64[0]);

        return;
      }
      v24 = v23;
      v25 = objc_msgSend(v24, "superview");
      if (v25)
      {
        v26 = v25;
        sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
        v27 = a1;
        v28 = v26;
        LOBYTE(v26) = static NSObject.== infix(_:_:)(v28, v27);

        if ((v26 & 1) != 0)
        {
LABEL_35:

          goto LABEL_36;
        }
      }
      v29 = objc_msgSend(v24, "centerXAnchor");
      v30 = OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide;
      v31 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide];
      if (v31)
      {
        v32 = objc_msgSend(v31, "centerXAnchor");
        v33 = objc_msgSend(v29, "constraintEqualToAnchor:", v32);

        v34 = objc_msgSend(v24, "centerYAnchor");
        v35 = *(void **)&v3[v30];
        if (v35)
        {
          v36 = objc_msgSend(v35, "centerYAnchor");
          v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);

          v38 = objc_msgSend(v24, "widthAnchor");
          v39 = *(void **)&v3[v30];
          if (v39)
          {
            v40 = objc_msgSend(v39, "widthAnchor");
            v41 = objc_msgSend(v38, "constraintEqualToAnchor:", v40);

            v42 = objc_msgSend(v24, "heightAnchor");
            v43 = *(void **)&v3[v30];
            if (v43)
            {
              v44 = objc_msgSend(v43, "heightAnchor");
              v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);

              v46 = v71;
              if ((unint64_t)v71 >> 62)
              {
                if (v71 < 0)
                  v67 = v71;
                else
                  v67 = v71 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain();
                v48 = _CocoaArrayWrapper.endIndex.getter(v67);
                swift_bridgeObjectRelease(v46);
                v49 = v48 + 4;
                if (!__OFADD__(v48, 4))
                {
LABEL_27:
                  v50 = sub_10024D6B8(v49, 1);
                  specialized Array._endMutation()(v50);
                  v33 = v33;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
                  v48 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v47 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v48 < v47 >> 1)
                  {
LABEL_28:
                    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v33);
                    specialized Array._endMutation()(v51);
                    v52 = v37;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
                    v54 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v53 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v54 >= v53 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
                    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
                    specialized Array._endMutation()(v55);
                    v56 = v41;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
                    v58 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v57 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v58 >= v57 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
                    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
                    specialized Array._endMutation()(v59);
                    v60 = v45;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
                    v62 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v61 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v62 >= v61 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
                    v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
                    specialized Array._endMutation()(v63);

                    objc_msgSend(a1, "addSubview:", v24);
                    goto LABEL_35;
                  }
LABEL_43:
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
                  goto LABEL_28;
                }
              }
              else
              {
                v47 = v71 & 0xFFFFFFFFFFFFF8;
                v48 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
                v49 = v48 + 4;
                if (!__OFADD__(v48, 4))
                  goto LABEL_27;
              }
              __break(1u);
              goto LABEL_43;
            }
            goto LABEL_55;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
  }
  if ((v5 - 1) <= 1)
  {
    v12 = (uint64_t *)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints];
    swift_beginAccess(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints], v69, 0, 0);
    v13 = *v12;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  v14 = (uint64_t *)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints];
  swift_beginAccess(&v3[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints], v69, 0, 0);
  v13 = *v14;
  v70 = *v14;
  v15 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView];
  swift_bridgeObjectRetain();
  if ((objc_msgSend(v15, "isHidden") & 1) == 0)
  {
    v16 = v3;
    v17 = (id)sub_1001399EC((unint64_t *)&v70, (uint64_t)v16);

    v18 = v70;
    if ((unint64_t)v70 >> 62)
    {
      if (v70 < 0)
        v68 = v70;
      else
        v68 = v70 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v20 = _CocoaArrayWrapper.endIndex.getter(v68);
      swift_bridgeObjectRelease(v18);
      if (v20 >= (uint64_t)v17)
        goto LABEL_11;
    }
    else
    {
      v19 = v70 & 0xFFFFFFFFFFFFF8;
      v20 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v20 >= (uint64_t)v17)
      {
LABEL_11:
        sub_1001FEEB8((uint64_t)v17, v20);
        v13 = v70;
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
LABEL_12:
  sub_100804E18(v13);
  if (!*(_QWORD *)&v3[v6])
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  objc_msgSend(a1, "addSubview:");
  if ((objc_msgSend(*(id *)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView], "isHidden") & 1) != 0|| v3[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] - 1 < 2)
  {
    goto LABEL_18;
  }
  v21 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint];
  if (v21)
  {
    v17 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v20 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 < v19 >> 1)
    {
LABEL_17:
      v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
      specialized Array._endMutation()(v22);
      goto LABEL_18;
    }
LABEL_49:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    goto LABEL_17;
  }
LABEL_56:
  __break(1u);
}

void sub_100136D90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  Class isa;
  void *v14;
  id v15;
  uint64_t v16;

  v16 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  sub_100804E18(v1);
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint);
  if (!v2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v3 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
  v5 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v4 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v5 >= v4 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
  specialized Array._endMutation()(v6);
  v7 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint);
  if (!v7)
    goto LABEL_10;
  v8 = v7;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
  specialized Array._endMutation()(v11);
  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v14 = *(void **)(v0
                 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint);
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v15, "setActive:", 1, swift_bridgeObjectRelease(v16).n128_f64[0]);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100136F64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  Class isa;
  uint64_t v19;

  v19 = *(_QWORD *)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  sub_100804E18(v1);
  v2 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint);
  if (!v2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v3 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
  v5 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v4 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v5 >= v4 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
  specialized Array._endMutation()(v6);
  v7 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint);
  if (!v7)
    goto LABEL_12;
  v8 = v7;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
  specialized Array._endMutation()(v11);
  v12 = *(void **)(v0
                 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint);
  if (!v12)
    goto LABEL_13;
  v13 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
  specialized Array._endMutation()(v16);
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

}

void sub_100137160()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Class v24;
  uint64_t v25;
  Class v26;
  Class v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3)
  {
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints);
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v7 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
    swift_bridgeObjectRetain();
    v27 = Array._bridgeToObjectiveC()().super.isa;
    v8 = v7;
LABEL_16:
    objc_msgSend(v4, "activateConstraints:", v27, swift_bridgeObjectRelease(v8).n128_f64[0]);

    return;
  }
  v30 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints);
  v9 = *(void **)(v1
                + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint);
  if (!v9)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v10 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints);
  v14 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint);
  if (!v14)
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v15 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
  specialized Array._endMutation()(v18);
  v28 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints);
  v19 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);
    if (*(_BYTE *)(v1 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingHasTallMotionData) == 1)
    {
      sub_100804E18(v28);
      v4 = (void *)objc_opt_self(NSLayoutConstraint);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      v24 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "deactivateConstraints:", v24, swift_bridgeObjectRelease(v30).n128_f64[0]);

      v25 = v29;
    }
    else
    {
      sub_100804E18(v29);
      v4 = (void *)objc_opt_self(NSLayoutConstraint);
      sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
      v26 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "deactivateConstraints:", v26, swift_bridgeObjectRelease(v30).n128_f64[0]);

      v25 = v28;
    }
    v27 = Array._bridgeToObjectiveC()().super.isa;
    v8 = v25;
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
}

void *sub_10013750C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *result;
  unsigned int v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD v51[7];
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[11];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v1);
  v3 = (id *)((char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = objc_msgSend(result, "isSelected");
  v50 = v3;
  if (!v9 || (v10 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying)) == 0)
  {
    v13 = 0;
    goto LABEL_11;
  }
  v11 = objc_msgSend(v10, "tracklist");
  v12 = (uint64_t)objc_msgSend(v11, "playingItem");

  if (!v12)
  {
    v13 = 0;
    v31 = 0;
    v37 = 0;
    v36 = 0;
    v17 = 0;
    v32 = 0;
    v33 = 0;
    goto LABEL_12;
  }
  v13 = objc_msgSend((id)v12, "metadataObject");

  if (!v13)
  {
LABEL_11:
    v31 = 0;
    v37 = 0;
    v36 = 0;
    v17 = 0;
    v32 = 0;
    v33 = 0;
    v12 = 0;
LABEL_12:
    v34 = 0;
    v35 = 0;
    goto LABEL_13;
  }
  v47 = (id)v0;
  v14 = objc_msgSend(v13, "innermostModelObject");

  objc_opt_self(MPModelSong);
  v13 = (id)swift_dynamicCastObjCClass(v14);
  if (!v13)
  {

LABEL_23:
    v31 = 0;
    v37 = 0;
    v36 = 0;
    v17 = 0;
LABEL_24:
    v32 = 0;
    v33 = 0;
    v12 = 0;
    v34 = 0;
    v35 = 0;
    v0 = (uint64_t)v47;
    goto LABEL_13;
  }
  type metadata accessor for LyricsLoader();
  if ((static LyricsLoader.supportsLyrics(for:)(v13) & 1) == 0)
  {

    v13 = 0;
    goto LABEL_23;
  }
  v15 = MPModelObject.bestIdentifier(for:)(3, 2u);
  v17 = v16;
  if (!v16)
  {

    v13 = 0;
    v31 = 0;
    v37 = 0;
    v36 = 0;
    goto LABEL_24;
  }
  v18 = v15;
  v19 = v14;
  v46 = v19;
  v20 = objc_msgSend(v13, "description");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = (_QWORD *)swift_allocObject(&unk_1010B1AD0, 40, 7);
  v24[2] = v18;
  v24[3] = v17;
  v25 = v47;
  v24[4] = v47;
  v26 = UUID.init()(v25);
  v27 = UUID.uuidString.getter(v26);
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000E3EE4();
  v30 = v27;
  v0 = (uint64_t)v25;
  ActionMenu.init(_:image:style:id:debugDescription:builder:)(0, 0xE000000000000000, 0, 0, v30, v29, v21, v23, (uint64_t)v51, (uint64_t)sub_10013B0E4, (uint64_t)v24);
  v13 = (id)v51[0];
  v31 = (void *)v51[1];
  v49 = v51[2];
  v17 = v51[4];
  v48 = v51[3];
  v32 = v51[5];
  v33 = (void *)v51[6];
  v12 = v52;
  v34 = v53;
  v35 = v54;

  v36 = v48;
  v37 = v49;
LABEL_13:
  v55[0] = v13;
  v55[1] = v31;
  v55[2] = v37;
  v55[3] = v36;
  v55[4] = v17;
  v55[5] = v32;
  v55[6] = v33;
  v55[7] = v12;
  v55[8] = v34;
  v55[9] = v35;
  v38 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
  if (v38)
  {
    v48 = v36;
    v49 = v37;
    v46 = v31;
    v47 = v13;
    v39 = objc_msgSend(v38, "tracklist");
    v40 = v0;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_delegate);
    if (Strong)
    {
      v42 = Strong;
      v43 = v50;
      sub_1005D9D5C(v50);
      swift_unknownObjectRelease(v42);
    }
    else
    {
      v45 = type metadata accessor for MetricsEvent.Page(0);
      v43 = v50;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v50, 1, 1, v45);
    }
    v44 = sub_100137DA4(v40, (uint64_t)v55, (uint64_t)v43);

    sub_1000E4164((uint64_t)v47, (uint64_t)v46, v49, v48, v17, v32, v33, v12, v34, v35);
    sub_10004FF60((uint64_t)v43, (uint64_t *)&unk_1011A8780);
  }
  else
  {
    sub_1000E4164((uint64_t)v13, (uint64_t)v31, v37, v36, v17, v32, v33, v12, v34, v35);
    return 0;
  }
  return (void *)v44;
}

uint64_t sub_1001379E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[7];
  uint64_t v45;
  uint64_t v46;
  char v47[16];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[7];
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  char v55;

  v42 = a1;
  v43 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v40 - v8);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  memset(v53, 0, sizeof(v53));
  v54 = 0;
  v55 = -1;
  v13 = a3;
  PresentationSource.init(viewController:position:)(v13, (uint64_t)v53, (uint64_t)v51);
  Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate]);
  if (Strong)
  {
    v15 = Strong;
    sub_1005D9D5C(v9);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v16 = type metadata accessor for MetricsEvent.Page(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  sub_10013A444((uint64_t)v9, (uint64_t)v7);
  v17 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v41 = v18;
  v20 = v19;
  v21 = (void *)*v17;
  v22 = qword_10119B8B8;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v24 = qword_10124C790;
  swift_retain(qword_10124C790);
  v25 = GroupActivitiesManager.hasJoined.getter();
  v26 = GroupActivitiesManager.participantsCount.getter();
  v27 = (uint64_t *)(v24 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v24 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v46, 0, 0);
  v28 = *v27;

  swift_release(v24);
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v7, v41, v20, 0, 0, v25 & 1, v12, v26, v28);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A8780);
  v29 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
  v30 = swift_allocObject(&unk_1010B1AF8, 120, 7);
  v32 = v42;
  v31 = v43;
  *(_QWORD *)(v30 + 16) = v42;
  *(_QWORD *)(v30 + 24) = v31;
  *(_BYTE *)(v30 + 32) = 2;
  *(_QWORD *)(v30 + 40) = 0;
  sub_100064EF0((uint64_t)v51, v30 + 48);
  Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)(v32, v31, 1735290739, 0xE400000000000000, 20, (uint64_t)variable initialization expression of _NSRange.NSRangeIterator.current, 0, (uint64_t)&unk_1011A2138, (uint64_t)v47, v30, (uint64_t)v12);
  static Actions.ReportConcern.action(context:)(v47, (uint64_t)v51);
  v33 = v48;
  swift_bridgeObjectRetain_n(v31, 2);
  swift_release(v33);
  swift_release(v49);
  swift_release(v50);
  v44[4] = v51[4];
  v44[5] = v51[5];
  v44[6] = v51[6];
  v45 = v52;
  v44[0] = v51[0];
  v44[1] = v51[1];
  v44[2] = v51[2];
  v44[3] = v51[3];
  v34 = sub_1000E3EE4();
  v35 = static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v44, (uint64_t)&type metadata for ActionType, (uint64_t)&type metadata for Actions.ReportConcern.Context, (uint64_t)&type metadata for () + 8, v34, (uint64_t)&protocol witness table for Actions.ReportConcern.Context);
  sub_10013B1C8(v51);
  v36 = sub_100007E8C((uint64_t *)&unk_1011A2140);
  v37 = swift_allocObject(v36, 40, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v37 + 32) = v35;
  v38 = static ActionMenu.ElementBuilder.buildBlock(_:)(v37, (uint64_t)&type metadata for ActionType, v34);
  swift_bridgeObjectRelease(v37);
  return v38;
}

unint64_t sub_100137DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  __int128 v6[5];
  _OWORD v7[10];

  sub_100139108(a1, a2, a3, v6);
  sub_10013A3FC((uint64_t)v6, (uint64_t)v7);
  if (!*((_QWORD *)&v7[0] + 1))
    return 0;
  v7[7] = v7[2];
  v7[8] = v7[3];
  v7[9] = v7[4];
  v7[5] = v7[0];
  v7[6] = v7[1];
  v3 = swift_bridgeObjectRetain();
  sub_100804E30(v3);
  sub_100007E8C((uint64_t *)&unk_1011A20B0);
  v4 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)&off_1010AA5A0);
  swift_bridgeObjectRelease(&off_1010AA5A0);
  sub_1000E411C((uint64_t)v6);
  return v4;
}

void sub_100137ED4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput);
  *(_QWORD *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput) = a1;
  swift_unknownObjectRetain(a1, a2);
  swift_unknownObjectRelease(v5);
  *(_BYTE *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo) = 1;
  v6 = swift_allocObject(&unk_1010B1A80, 24, 7);
  *(_QWORD *)(v6 + 16) = a1;
  v10[4] = sub_10013B0A4;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1005CE710;
  v10[3] = &unk_1010B1A98;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_unknownObjectRetain(a1, v9);
  objc_msgSend(a2, "animateAlongsideTransition:completion:", 0, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
}

void sub_100138034(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  int v9;
  __int16 v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  int v14;
  _BOOL4 v15;
  char *v16;

  if ((objc_msgSend(a1, "isCancelled") & 1) == 0)
  {
    *(_BYTE *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo) = 0;
    v5 = *(_QWORD *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput);
    *(_QWORD *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput) = 0;
    objc_msgSend(a3, "setShowsPlaybackControls:", 0, swift_unknownObjectRelease(v5).n128_f64[0]);
    *(_BYTE *)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates) = 0;
    v6 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
    if (v6)
    {
      v7 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying);
      v16 = *(char **)(a2 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
      v8 = v6;
      if (v7)
        LODWORD(v7) = objc_msgSend(v7, "state") == (id)2;
      v9 = sub_10012BFA4();
      if ((v9 & 1) != 0)
        v10 = 256;
      else
        v10 = 0;
      v11 = v10 | (unsigned __int16)v7 | 0x4000;
      v12 = v16;
      v13 = *(_WORD *)&v16[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode];
      *(_WORD *)&v16[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = v11;
      if ((v13 & 0xC000) != 0x4000
        || (v14 = (v13 & 1) == 0, v15 = (v13 & 0x100) == 0, (_DWORD)v7 == v14)
        || ((v9 ^ v15) & 1) == 0)
      {
        sub_100675910();
        objc_msgSend(v16, "setNeedsLayout");
        v12 = v16;
      }

    }
  }
}

void *sub_10013827C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  v2 = v1;
  return v1;
}

id sub_1001383C0()
{
  return sub_10004D23C(0, type metadata accessor for SizedToLabelButton);
}

id sub_1001383D0(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  char v10;
  objc_super v12;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0)
    return 0;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassThroughStackView();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
  }
  return v7;
}

id sub_100138520(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, "initWithFrame:", a2, a3, a4, a5);
}

id sub_1001385D8()
{
  return sub_10004D23C(0, type metadata accessor for PassThroughStackView);
}

id sub_100138664(char a1)
{
  void *v1;
  objc_class *v3;
  unsigned int v4;
  id result;
  double v6;
  unsigned __int8 v7;
  double v8;
  objc_super v9;
  objc_super v10;

  v3 = (objc_class *)type metadata accessor for AudioTraitButton();
  v10.receiver = v1;
  v10.super_class = v3;
  v4 = objc_msgSendSuper2(&v10, "isHighlighted");
  v9.receiver = v1;
  v9.super_class = v3;
  objc_msgSendSuper2(&v9, "setHighlighted:", a1 & 1);
  result = objc_msgSend(v1, "isHighlighted");
  if (v4 != (_DWORD)result)
  {
    result = objc_msgSend(v1, "alpha");
    if (v6 != 0.0)
    {
      result = objc_msgSend(v1, "isHidden");
      if ((result & 1) == 0)
      {
        v7 = objc_msgSend(v1, "isHighlighted");
        v8 = 0.5;
        if ((v7 & 1) == 0)
        {
          v8 = 1.0;
          if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Music16AudioTraitButton_isShowingDisclosure))
            v8 = 0.5;
        }
        return objc_msgSend(v1, "setAlpha:", v8);
      }
    }
  }
  return result;
}

void sub_100138750(double a1, double a2)
{
  uint64_t v2;
  double *v3;

  v3 = (double *)(v2 + OBJC_IVAR____TtC5Music16AudioTraitButton_hitRectMinimumSize);
  *v3 = a1;
  v3[1] = a2;
}

double sub_100138764()
{
  char *v0;
  double x;
  double y;
  double width;
  double height;
  double v5;
  double v6;
  double v7;
  objc_super v9;
  CGRect v10;
  CGRect v11;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for AudioTraitButton();
  objc_msgSendSuper2(&v9, "hitRect");
  x = v10.origin.x;
  y = v10.origin.y;
  width = v10.size.width;
  height = v10.size.height;
  v5 = *(double *)&v0[OBJC_IVAR____TtC5Music16AudioTraitButton_hitRectMinimumSize];
  v6 = CGRectGetWidth(v10);
  if (v6 > v5)
    v5 = v6;
  v11.origin.x = x;
  v11.origin.y = y;
  v11.size.width = width;
  v11.size.height = height;
  CGRectGetHeight(v11);
  v7 = CGRect.center.getter(x, y, width, height) - v5 * 0.5;
  CGRect.center.getter(x, y, width, height);
  return v7;
}

id sub_100138A80(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for AudioTraitButton);
}

uint64_t sub_100138A94@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  id v32;
  void *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;

  v3 = sub_100007E8C(&qword_10119FD98);
  __chkstk_darwin(v3);
  v61 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Station(0);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  __chkstk_darwin(v5);
  v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A2100);
  __chkstk_darwin(v7);
  v62 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v64 - 8);
  v13 = __chkstk_darwin(v64);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63 = (char *)&v56 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for GenericMusicItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend(v1, "playingItem");
  if (!v24)
  {
    v29 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(a1, v29, 1, v20);
  }
  v25 = v24;
  v65 = a1;
  v26 = objc_msgSend(v24, "metadataObject");

  if (v26)
  {
    v27 = objc_msgSend(v26, "innermostModelObject");

    v28 = v27;
    GenericMusicItem.init(_:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {

      sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A20D0);
      goto LABEL_5;
    }
    v57 = v28;
    v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v31 = v23;
    v30(v23, v19, v20);
    v32 = objc_msgSend(v1, "playingItemIndexPath");
    if (v32)
    {
      v33 = v32;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v32);

      v34 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v35 = v64;
      v34(v11, v15, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v35) != 1)
      {
        v34(v63, v11, v35);
        v36 = objc_msgSend(v1, "items");
        v37 = objc_msgSend(v36, "sectionAtIndex:", IndexPath.section.getter(v36));

        v38 = objc_msgSend(v37, "metadataObject");
        if (v38)
        {
          v39 = objc_msgSend(v38, "innermostModelObject");

          objc_opt_self(MPModelRadioStation);
          v40 = (void *)swift_dynamicCastObjCClass(v39);
          if (v40)
          {
            v41 = v40;
            if (objc_msgSend(v40, "type") == (id)4)
            {
              v42 = type metadata accessor for MusicLibrary(0);
              v43 = static MusicLibrary.shared.getter(v42);
              v44 = MusicLibrary.state(for:)(v31);
              v45 = swift_release(v43);
              v46 = (uint64_t)v62;
              dispatch thunk of MusicLibrary.GenericItemState.addStatus.getter(v45);
              swift_release(v44);
              v47 = type metadata accessor for MusicLibrary.AddStatus(0);
              v48 = *(_QWORD *)(v47 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
              {
                (*(void (**)(char *, uint64_t))(v12 + 8))(v63, v64);

                sub_10004FF60(v46, (uint64_t *)&unk_1011A2100);
              }
              else if ((*(unsigned int (**)(uint64_t, uint64_t))(v48 + 88))(v46, v47) == enum case for MusicLibrary.AddStatus.unaddable(_:))
              {
                (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
                v51 = v60;
                v52 = (uint64_t)v61;
                dispatch thunk of LegacyModelObjectConvertible.init(_:)(v41, v60, &protocol witness table for Station);

                (*(void (**)(char *, uint64_t))(v12 + 8))(v63, v64);
                v53 = v59;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v52, 1, v51) != 1)
                {
                  (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v20);
                  v54 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
                  v55 = v58;
                  v54(v58, v52, v51);
                  a1 = v65;
                  v54(v65, (uint64_t)v55, v51);
                  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(a1, enum case for GenericMusicItem.station(_:), v20);
                  goto LABEL_20;
                }
                sub_10004FF60(v52, &qword_10119FD98);
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v12 + 8))(v63, v64);

                (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v12 + 8))(v63, v35);

            }
LABEL_19:
            v49 = v65;
            v30(v65, v31, v20);
            a1 = v49;
LABEL_20:
            v29 = 0;
            return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(a1, v29, 1, v20);
          }

        }
        (*(void (**)(char *, uint64_t))(v12 + 8))(v63, v35);
        goto LABEL_19;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v64);
    }

    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D50);
    goto LABEL_19;
  }
LABEL_5:
  v29 = 1;
  a1 = v65;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(a1, v29, 1, v20);
}

uint64_t sub_100139108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  unint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t result;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  _BYTE v61[48];
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char v65[24];
  _QWORD v66[5];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;

  *(_QWORD *)&v56 = a2;
  *(_QWORD *)&v57 = a1;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v8);
  v58 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v53 - v14;
  *(_QWORD *)&v55 = type metadata accessor for Actions.MetricsReportingContext(0);
  v16 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v60 = (_QWORD *)((char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100138A94(v20);
  v21 = type metadata accessor for GenericMusicItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A20D0);
    v67 = 0u;
    v68 = 0u;
    *(_QWORD *)&v69 = 0;
LABEL_11:
    result = sub_10004FF60((uint64_t)&v67, (uint64_t *)&unk_1011B69E0);
    v52 = 0uLL;
    v50 = 0uLL;
    v51 = 0uLL;
    v48 = 0uLL;
    v49 = 0uLL;
    goto LABEL_12;
  }
  GenericMusicItem.innerMusicItem.getter((uint64_t)&v67);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  if (!*((_QWORD *)&v68 + 1))
    goto LABEL_11;
  sub_100064C48(&v67, (uint64_t)v66);
  sub_10013A444(a3, (uint64_t)v15);
  sub_10013A444((uint64_t)v15, (uint64_t)v13);
  v23 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  *(_QWORD *)&v54 = v24;
  *(_QWORD *)&v53 = v25;
  v26 = (void *)*v23;
  v27 = qword_10119B8B8;
  v28 = v26;
  if (v27 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v29 = qword_10124C790;
  swift_retain(qword_10124C790);
  v30 = GroupActivitiesManager.hasJoined.getter();
  v31 = GroupActivitiesManager.participantsCount.getter();
  v32 = (uint64_t *)(v29 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v29 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v65, 0, 0);
  v33 = *v32;

  swift_release(v29);
  v34 = v30 & 1;
  v35 = v60;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v13, v54, v53, 0, 0, v34, v60, v31, v33);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A8780);
  v36 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v36, &v64);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  sub_100064C78((uint64_t)v66, inited + 32);
  v38 = type metadata accessor for PlaylistContext(0);
  v39 = (unint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v58, 1, 1, v38);
  v40 = objc_msgSend((id)v57, "traitCollection");
  v41 = sub_10013ADBC();
  UITraitCollection.subscript.getter(&v67, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v41);

  v42 = v67;
  v43 = v59;
  sub_10005B704((uint64_t)v35, v59, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v16 + 56))(v43, 0, 1, v55);
  v62 = 0;
  memset(v61, 0, sizeof(v61));
  v63 = xmmword_100EA93A0;
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v44 = qword_10119B8C8;
  v45 = (id)qword_10124C798;
  if (v44 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v46 = qword_10124C7A0;
  swift_retain(qword_10124C7A0);
  sub_100495120(inited, 0, v39, v42, v45, v46, v43, v56, &v67, (uint64_t)v61, 0);
  v56 = v68;
  v57 = v67;
  v54 = v70;
  v55 = v69;
  v53 = v71;
  swift_bridgeObjectRelease(inited);
  swift_release(v42);

  swift_release(v46);
  sub_10004FF60((uint64_t)v61, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60(v43, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v39, (uint64_t *)&unk_1011A20C0);
  sub_10005B748((uint64_t)v60, type metadata accessor for Actions.MetricsReportingContext);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v66);
  v49 = v53;
  v48 = v54;
  v51 = v55;
  v50 = v56;
  v52 = v57;
LABEL_12:
  *a4 = v52;
  a4[1] = v50;
  a4[2] = v51;
  a4[3] = v48;
  a4[4] = v49;
  return result;
}

uint64_t type metadata accessor for NowPlayingControlsViewController()
{
  return objc_opt_self(MusicNowPlayingControlsViewController);
}

uint64_t type metadata accessor for SizedToLabelButton()
{
  return objc_opt_self(_TtC5MusicP33_B29993BA797B47F8C660EB2DB95D08BA18SizedToLabelButton);
}

uint64_t type metadata accessor for PassThroughStackView()
{
  return objc_opt_self(_TtC5MusicP33_B29993BA797B47F8C660EB2DB95D08BA20PassThroughStackView);
}

uint64_t type metadata accessor for AudioTraitButton()
{
  return objc_opt_self(_TtC5Music16AudioTraitButton);
}

__n128 initializeWithCopy for NowPlayingControlsViewController.UIMetrics(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingControlsViewController.UIMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 104))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NowPlayingControlsViewController.UIMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingControlsViewController.UIMetrics()
{
  return &type metadata for NowPlayingControlsViewController.UIMetrics;
}

uint64_t storeEnumTagSinglePayload for NowPlayingControlsMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001397E0 + 4 * byte_100EAB91F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100139814 + 4 * byte_100EAB91A[v4]))();
}

uint64_t sub_100139814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013981C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100139824);
  return result;
}

uint64_t sub_100139830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100139838);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10013983C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100139844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingControlsMode()
{
  return &type metadata for NowPlayingControlsMode;
}

unint64_t sub_100139864()
{
  unint64_t result;

  result = qword_1011A2098;
  if (!qword_1011A2098)
  {
    result = swift_getWitnessTable(")r ", &type metadata for NowPlayingControlsMode);
    atomic_store(result, (unint64_t *)&qword_1011A2098);
  }
  return result;
}

void sub_1001398A8()
{
  __n128 v0;
  _QWORD *v1;
  _BYTE v2[80];

  v1 = sub_10011DA3C();
  v0 = sub_10011EFF4((uint64_t)v2);
  (*(void (**)(_BYTE *, __n128))((swift_isaMask & *v1) + 0xA0))(v2, v0);

}

BOOL sub_100139908(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24)
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40)
    || *(double *)(a1 + 48) != *(double *)(a2 + 48))
  {
    return 0;
  }
  v2 = *(_BYTE *)(a2 + 64);
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 64))
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 56) != *(double *)(a2 + 56))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if (*(double *)(a1 + 72) == *(double *)(a2 + 72)
    && *(double *)(a1 + 80) == *(double *)(a2 + 80)
    && *(double *)(a1 + 88) == *(double *)(a2 + 88))
  {
    return *(double *)(a1 + 96) == *(double *)(a2 + 96);
  }
  return 0;
}

