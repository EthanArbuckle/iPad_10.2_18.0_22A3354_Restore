__int128 *assignWithCopy for PresentationKind(__int128 *a1, __int128 *a2, __n128 a3)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;

  if (a1 != a2)
  {
    v5 = *((unsigned __int8 *)a1 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a1 + 3;
    if (v5 == 2)
    {
      if (*((_QWORD *)a1 + 3) >= 0xFFFFFFFFuLL)
        sub_10000970C(a1);
    }
    else if (v5 == 1)
    {
      a3 = swift_release(*(_QWORD *)a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v6 = *((unsigned __int8 *)a2 + 56);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v8 = *((_QWORD *)a2 + 3);
      if (v8 < 0xFFFFFFFF)
      {
        v11 = *a2;
        v12 = a2[1];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *a1 = v11;
        a1[1] = v12;
      }
      else
      {
        *((_QWORD *)a1 + 3) = v8;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(__int128 *, __int128 *, __n128))(v8 - 8))(a1, a2, a3);
      }
      *((_BYTE *)a1 + 56) = 2;
    }
    else if (v6 == 1)
    {
      v7 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + 56) = 1;
      swift_retain(v7);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      v9 = (void *)*((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 6) = v9;
      *((_BYTE *)a1 + 56) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = v9;
    }
  }
  return a1;
}

__n128 initializeWithTake for PresentationKind(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for PresentationKind(_QWORD *a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != (_QWORD *)a2)
  {
    v4 = *((unsigned __int8 *)a1 + 56);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {
      if (a1[3] >= 0xFFFFFFFFuLL)
        sub_10000970C(a1);
    }
    else if (v4 == 1)
    {
      swift_release(*a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      a1[4] = *(_QWORD *)(a2 + 32);
      v6 = 2;
    }
    else if (v5 == 1)
    {
      *a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
      a1[6] = *(_QWORD *)(a2 + 48);
    }
    *((_BYTE *)a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PresentationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_10018B9BC(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_10018B9D8(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationKind()
{
  return &type metadata for PresentationKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t *assignWithTake for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PresentationKind.NowPlayingDestination()
{
  return &type metadata for PresentationKind.NowPlayingDestination;
}

uint64_t type metadata accessor for PlaybackController()
{
  return objc_opt_self(_TtC9MusicCore18PlaybackController);
}

uint64_t _s22AgeVerificationWrapperCMa()
{
  return objc_opt_self(_TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper);
}

uint64_t initializeWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.NowPlayingPresentationDescriptor()
{
  return &type metadata for PlaybackController.NowPlayingPresentationDescriptor;
}

uint64_t getEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError.AlertKind()
{
  return &type metadata for PlaybackController.CommandError.AlertKind;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10018A5E0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for PlaybackController.CommandError(uint64_t a1)
{
  sub_10018A5AC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10018A5E0(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10018A5AC(v5, v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10018A5AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.CommandError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.CommandError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10018BEC0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10018BED8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError()
{
  return &type metadata for PlaybackController.CommandError;
}

uint64_t sub_10018BF00()
{
  uint64_t v0;

  return sub_100189758(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10018BF08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_10018BF34(void *a1)
{
  uint64_t v1;

  return sub_1001896BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10018BF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10018BF50(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10018BF58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018BF8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, id))(v0 + 16))(*(_QWORD *)(v0 + 32), objc_msgSend(*(id *)(v0 + 40), "isExplicitContentAllowed"));
}

void sub_10018BFD0(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001886EC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10018BFDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10018C010()
{
  uint64_t v0;

  sub_1001876C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(_QWORD, _QWORD))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10018C024()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018C058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000057B4((uint64_t *)&unk_1004BDAF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10018C0BC(uint64_t a1, uint64_t a2)
{
  sub_1000057B4((uint64_t *)&unk_1004BDAF0);
  return sub_1000EBAB0(a1, a2);
}

uint64_t sub_10018C114()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018C138()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10018C16C(void *a1, char a2)
{
  uint64_t v2;

  sub_100189078(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10018C178()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018C1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1004BF6EC);
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10002F6EC;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v4;
  return swift_task_switch(sub_100188358, 0, 0);
}

uint64_t sub_10018C20C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018C230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1004BF6FC);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10002F6EC;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1001885AC, 0, 0);
}

uint64_t sub_10018C290()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018C2A0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10018C2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)swift_task_alloc(dword_1004BF724);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002F6EC;
  return sub_1001872A8(v2, v3);
}

uint64_t sub_10018C338(uint64_t a1)
{
  return sub_10018C5E8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186B54);
}

uint64_t sub_10018C344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018C354(uint64_t a1)
{
  uint64_t v1;

  return sub_10010709C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_10018C35C(void *a1)
{
  uint64_t v1;

  sub_100186D68(a1, *(void **)(v1 + 16));
}

uint64_t sub_10018C364()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018C374()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018C3A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1004BF74C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002F6EC;
  return sub_100189B78(v2, v3, v5, v4);
}

uint64_t sub_10018C40C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10018C448(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1004BF764);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10002F6EC;
  *(_QWORD *)(v5 + 144) = v4;
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 120) = a1;
  return swift_task_switch(sub_10018A1E0, 0, 0);
}

uint64_t sub_10018C4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10018C534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BF774);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  v6[15] = a1;
  v6[16] = v5;
  return swift_task_switch(sub_100189F28, 0, 0);
}

uint64_t sub_10018C5B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10018C5DC(uint64_t a1)
{
  return sub_10018C5E8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186CAC);
}

uint64_t sub_10018C5E8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10018C5FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018C60C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018C640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1004BF7F4);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10002F6EC;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch(sub_100189B40, 0, 0);
}

uint64_t sub_10018C6B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018C6D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10018C6E4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  if (v0[9])
    swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10018C728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1004BF804);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002F6EC;
  v4[2] = a1;
  v4[3] = v1 + 32;
  return swift_task_switch(sub_10018744C, 0, 0);
}

uint64_t sub_10018C78C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

_QWORD *sub_10018C7C8()
{
  uint64_t v0;

  return sub_100185368(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10018C7D4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10018C808(unint64_t a1)
{
  uint64_t *v1;

  sub_100184E68(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10018C814()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018C840(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004BF834);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_10018493C(a1, v4, v5, v6);
}

uint64_t sub_10018C8AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_10018C8D0()
{
  uint64_t v0;

  return sub_100184A88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10018C8D8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ComponentRenderEventSignposts(a2, a1);
  return a2;
}

uint64_t sub_10018C914(uint64_t a1)
{
  sub_10018C94C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

void sub_10018C94C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    sub_10018C960(a1, a2, a3, a4, a5, a6, a7);
}

void sub_10018C960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:

      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 4:
      sub_10018C9EC((uint64_t)a1, a2, a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_10018C9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_10018CA20(void **a1)
{
  uint64_t v1;

  sub_100177FF0(a1, v1);
}

unint64_t sub_10018CA28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BF4F0;
  if (!qword_1004BF4F0)
  {
    v1 = sub_100009788(&qword_1004BFD70);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1004BF4F0);
  }
  return result;
}

uint64_t sub_10018CA74()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018CAA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004BF864);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10002F6EC;
  return sub_100178114(a1, v4, v5, v7, v6);
}

unint64_t sub_10018CB20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BF8E0;
  if (!qword_1004BF8E0)
  {
    v1 = sub_10000598C(255, &qword_1004BF8D8, UISceneSession_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, &qword_1004BF8E0);
  }
  return result;
}

uint64_t sub_10018CB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BF910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018CBD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF92C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[5] = v2;
  return swift_task_switch(sub_100184650, 0, 0);
}

uint64_t sub_10018CC40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF93C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[5] = v2;
  return swift_task_switch(sub_1001847AC, 0, 0);
}

uint64_t sub_10018CCB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF94C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[5] = v2;
  return swift_task_switch(sub_100184738, 0, 0);
}

uint64_t sub_10018CD20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF95C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[5] = v2;
  return swift_task_switch(sub_1001846C4, 0, 0);
}

uint64_t sub_10018CD90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF974);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[4] = v2;
  return swift_task_switch(sub_100181E90, 0, 0);
}

uint64_t sub_10018CE00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF984);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[4] = v2;
  return swift_task_switch(sub_100181F00, 0, 0);
}

uint64_t sub_10018CE70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF994);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[4] = v2;
  return swift_task_switch(sub_100181F70, 0, 0);
}

uint64_t sub_10018CEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10018CF08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF9AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[2] = v2;
  return swift_task_switch(sub_100182FD8, 0, 0);
}

uint64_t sub_10018CF78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF9BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[2] = v2;
  return swift_task_switch(sub_100182F6C, 0, 0);
}

uint64_t sub_10018CFE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018CFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF9D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[2] = v2;
  return swift_task_switch(sub_1001826A8, 0, 0);
}

uint64_t sub_10018D058()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018D068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004BF9E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002E8E0;
  v3[2] = v2;
  return swift_task_switch(sub_100182700, 0, 0);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.PlayabilityOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10018D114 + 4 * byte_1003D038A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10018D148 + 4 * byte_1003D0385[v4]))();
}

uint64_t sub_10018D148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10018D150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10018D158);
  return result;
}

uint64_t sub_10018D164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10018D16CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10018D170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10018D178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.PlayabilityOption()
{
  return &type metadata for PlaybackController.PlayabilityOption;
}

void MusicPlaybackIntentDescriptor.playActivityFeatureName.setter(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, "setPlayActivityFeatureName:", v4);

}

void MusicPlaybackIntentDescriptor.playActivityRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  void *v4;
  Class isa;

  v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  if (a2 >> 60 == 15)
  {
    isa = 0;
    objc_msgSend(v4, "setPlayActivityRecommendationData:", 0);
  }
  else
  {
    sub_100026084(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_10000FC14(a1, a2);
    objc_msgSend(v4, "setPlayActivityRecommendationData:", isa);
  }
  sub_10000FC14(a1, a2);

}

uint64_t PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, objc_class *a10)
{
  int *v17;
  uint64_t v18;
  UIViewController_optional v22;

  v17 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v18 = a9 + v17[7];
  *(_QWORD *)(v18 + 32) = 0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(a9 + v17[8]) = 0;
  *(_BYTE *)(a9 + v17[9]) = 0;
  sub_1000A2258(a1, a9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if ((a6 & 1) == 0)
    sub_10018D694(a5, 0, (SEL *)&selRef_setShuffleMode_);
  if ((a8 & 1) == 0)
    sub_10018D694(a7, 0, (SEL *)&selRef_setRepeatMode_);
  sub_100084840(a2, v18);
  *(_QWORD *)(a9 + v17[5]) = a3;
  *(_QWORD *)(a9 + v17[6]) = a4;
  v22.value.super.super.isa = a10;
  PlaybackIntentDescriptor.configureForPlayActivity(using:)(v22);

  sub_10000FE2C(a2, &qword_1004BF910);
  return sub_100034960(a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor(uint64_t a1)
{
  return sub_1000A1E5C(a1, qword_1004BFAB8, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor.IntentType(uint64_t a1)
{
  return sub_1000A1E5C(a1, qword_1004BFB70, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A2258(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
    return *(_QWORD *)v8;
  v10 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v11 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

id sub_10018D530()
{
  return sub_10018D554((SEL *)&selRef_shuffleMode);
}

void sub_10018D53C(uint64_t a1, char a2)
{
  sub_10018D694(a1, a2, (SEL *)&selRef_setShuffleMode_);
}

id sub_10018D548()
{
  return sub_10018D554((SEL *)&selRef_repeatMode);
}

id sub_10018D554(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v3 = v1;
  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A2258(v3, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v12);
    v14 = objc_msgSend(v13, *a1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v15 = *v10;
    v14 = objc_msgSend(*v10, *a1);

  }
  return v14;
}

void sub_10018D688(uint64_t a1, char a2)
{
  sub_10018D694(a1, a2, (SEL *)&selRef_setRepeatMode_);
}

void sub_10018D694(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;

  v5 = v3;
  v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (id *)((char *)&v21 - v15);
  if ((a2 & 1) != 0)
    v17 = -1;
  else
    v17 = a1;
  sub_1000A2258(v5, (uint64_t)&v21 - v15, v13);
  if (swift_getEnumCaseMultiPayload(v16, v12) == 1)
  {
    v18 = (*(uint64_t (**)(char *, id *, uint64_t))(v9 + 32))(v11, v16, v8);
    v19 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v18);
    objc_msgSend(v19, *a3, v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v20 = *v16;
    objc_msgSend(*v16, *a3, v17);

  }
}

Swift::Void __swiftcall PlaybackIntentDescriptor.configureForPlayActivity(using:)(UIViewController_optional using)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  objc_class *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v21;
  NSString v22;
  Class v23;
  objc_class *v24;
  uint64_t v25;

  isa = using.value.super.super.isa;
  v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (isa)
  {
    v10 = isa;
    v11 = -[objc_class combinedPlayActivityFeatureName](v10, "combinedPlayActivityFeatureName");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v24 = v10;
    v14 = UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
    v16 = v15;
    sub_1000A2258(v1, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
    {
      v17 = (*(uint64_t (**)(char *, void **, uint64_t))(v4 + 32))(v6, v9, v3);
      v18 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v18 = *v9;
    }
    v20 = v24;
    v19 = v25;
    swift_bridgeObjectRetain();
    sub_10002676C(v14, v16);
    sub_10000FC14(v14, v16);
    swift_bridgeObjectRelease();
    v21 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v21 = v19 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_10002676C(v14, v16);
      sub_10000FC14(v14, v16);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v18, "setPlayActivityFeatureName:", v22);

    swift_bridgeObjectRetain();
    sub_10002676C(v14, v16);
    swift_bridgeObjectRelease();
    if (v16 >> 60 == 15)
    {
      v23 = 0;
    }
    else
    {
      v23 = Data._bridgeToObjectiveC()().super.isa;
      sub_10000FC14(v14, v16);
    }
    objc_msgSend(v18, "setPlayActivityRecommendationData:", v23);
    swift_bridgeObjectRelease();

    sub_10000FC14(v14, v16);
  }
}

uint64_t PlaybackIntentDescriptor.intentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000A2258(v1, a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intentOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 20));
}

uint64_t PlaybackIntentDescriptor.intentOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.intentOptions.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.replaceIntent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 24));
}

uint64_t PlaybackIntentDescriptor.replaceIntent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.replaceIntent.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.representedObject.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_10018CB88(v3, a1);
}

uint64_t PlaybackIntentDescriptor.representedObject.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_10018E830(a1, v3);
}

CFRange (__swiftcall *PlaybackIntentDescriptor.representedObject.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.autoSing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 32));
}

uint64_t PlaybackIntentDescriptor.autoSing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.autoSing.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 36));
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.isSiriIntent.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t MusicPlaybackIntentDescriptor.playActivityFeatureName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  v1 = objc_msgSend(v0, "playActivityFeatureName");

  if (!v1)
    return 0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

void (*MusicPlaybackIntentDescriptor.playActivityFeatureName.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityFeatureName");

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_10018DDC8;
}

void sub_10018DDC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v3);
    v7 = v4;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v4 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, "setPlayActivityFeatureName:", v5);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v6 = (void *)((uint64_t (*)(void))MusicPlaybackIntentDescriptor.playbackIntent.getter)();
    v7 = v6;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v6 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v6, "setPlayActivityFeatureName:", v5);
  }

}

uint64_t MusicPlaybackIntentDescriptor.playActivityRecommendationData.getter(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v2 = objc_msgSend(v1, "playActivityRecommendationData");

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void (*MusicPlaybackIntentDescriptor.playActivityRecommendationData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityRecommendationData");

  if (v4)
  {
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_10018DF88;
}

void sub_10018DF88(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  Class v7;
  id v8;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    v4 = sub_10002676C(*a1, v3);
    v5 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v4);
    if (v3 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      sub_100026084(v2, v3);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10000FC14(v2, v3);
    }
    objc_msgSend(v5, "setPlayActivityRecommendationData:", isa);
    sub_10000FC14(v2, v3);

    sub_10000FC14(v2, v3);
  }
  else
  {
    v8 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
    if (v3 >> 60 == 15)
    {
      v7 = 0;
    }
    else
    {
      sub_100026084(v2, v3);
      v7 = Data._bridgeToObjectiveC()().super.isa;
      sub_10000FC14(v2, v3);
    }
    objc_msgSend(v8, "setPlayActivityRecommendationData:", v7);
    sub_10000FC14(v2, v3);

  }
}

unint64_t PlaybackIntentDescriptor.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  int *v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  unint64_t v41;
  unint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = 0xD000000000000019;
  v42 = 0x80000001003AD940;
  strcpy((char *)&v40, "intent=");
  v40._object = (void *)0xE700000000000000;
  sub_1000A2258(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v11 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v11 = *v8;
  }
  v12 = objc_msgSend(v11, "description");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);

  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "shuffleMode=");
  BYTE5(v40._object) = 0;
  HIWORD(v40._object) = -5120;
  v38._countAndFlagsBits = (uint64_t)sub_10018D554((SEL *)&selRef_shuffleMode);
  LOBYTE(v38._object) = 0;
  v18 = sub_1000057B4(&qword_1004BFA50);
  v19._countAndFlagsBits = String.init<A>(describing:)(&v38, v18);
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "repeatMode=");
  HIDWORD(v40._object) = -352321536;
  v38._countAndFlagsBits = (uint64_t)sub_10018D554((SEL *)&selRef_repeatMode);
  LOBYTE(v38._object) = 0;
  v21 = sub_1000057B4(&qword_1004BFA58);
  v22._countAndFlagsBits = String.init<A>(describing:)(&v38, v21);
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "options=");
  BYTE1(v40._object) = 0;
  WORD1(v40._object) = 0;
  HIDWORD(v40._object) = -402653184;
  v24 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[5]);
  type metadata accessor for MPCPlaybackIntentOptions(0);
  v26._countAndFlagsBits = String.init<A>(describing:)(&v38, v25);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x206563616C706572;
  v40._object = (void *)0xEF3D746E65746E69;
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[6]);
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v29._countAndFlagsBits = String.init<A>(describing:)(&v38, v28);
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 8236;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v31._object = (void *)0x80000001003AD960;
  v31._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v31);
  sub_10018CB88(v1 + v24[7], (uint64_t)&v38);
  if (v39)
  {
    sub_100033620((__int128 *)&v38._countAndFlagsBits, (uint64_t)&v40);
    sub_1000444A8((uint64_t)&v40, (uint64_t)&v38);
    v32 = sub_1000057B4(&qword_1004BF920);
    v38._countAndFlagsBits = String.init<A>(describing:)(&v38, v32);
    v38._object = v33;
    v34._countAndFlagsBits = 8236;
    v34._object = (void *)0xE200000000000000;
    String.append(_:)(v34);
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    sub_10000970C(&v40);
  }
  else
  {
    sub_10000FE2C((uint64_t)&v38, &qword_1004BF910);
    v35._countAndFlagsBits = 0x2C20656E6F6ELL;
    v35._object = (void *)0xE600000000000000;
    String.append(_:)(v35);
  }
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return v41;
}

uint64_t _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void **v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  void *v29;
  char *v31;
  uint64_t v32;

  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v32 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - v7;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (void **)((char *)&v31 - v13);
  v15 = sub_1000057B4(&qword_1004BFBA8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)&v18[*(int *)(v16 + 48)];
  sub_1000A2258(a1, (uint64_t)v18, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_1000A2258(a2, (uint64_t)v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v18, v9) == 1)
  {
    sub_1000A2258((uint64_t)v18, (uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v20 = v32;
      v21 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v21(v8, v12, v4);
      v22 = v31;
      v21(v31, (char *)v19, v4);
      v23 = sub_1000D0550();
      v24 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v23);
      v25 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v24);
      v26 = static NSObject.== infix(_:_:)(v24, v25);

      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v22, v4);
      v27(v8, v4);
LABEL_9:
      sub_100034960((uint64_t)v18, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      return v26 & 1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v4);
  }
  else
  {
    sub_1000A2258((uint64_t)v18, (uint64_t)v14, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v28 = *v14;
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      v29 = *v19;
      sub_1000D0550();
      v26 = static NSObject.== infix(_:_:)(v28, v29);

      goto LABEL_9;
    }

  }
  sub_10000FE2C((uint64_t)v18, &qword_1004BFBA8);
  v26 = 0;
  return v26 & 1;
}

uint64_t sub_10018E830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BF910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s9MusicCore24PlaybackIntentDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v22;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v22 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v22 - v14;
  v16 = _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(a1, a2);
  sub_1000A2258(a1, (uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_1000A2258(a2, (uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
  if ((v16 & 1) == 0)
  {
    sub_100034960((uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
    sub_100034960((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    sub_1000A2258(a1, (uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
    sub_1000A2258(a2, (uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_5;
  }
  v17 = *(int *)(v4 + 20);
  v18 = *(_QWORD *)&v15[v17];
  v19 = *(_QWORD *)&v13[v17];
  sub_100034960((uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
  sub_100034960((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_1000A2258(a1, (uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
  sub_1000A2258(a2, (uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
  if (v18 != v19)
  {
LABEL_5:
    v20 = 0;
    goto LABEL_6;
  }
  v20 = *(_QWORD *)&v10[*(int *)(v4 + 24)] == *(_QWORD *)&v7[*(int *)(v4 + 24)];
LABEL_6:
  sub_100034960((uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
  sub_100034960((uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
  return v20;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *(_QWORD *)a1 = *a2;
      v14 = v13;
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    *(_QWORD *)&a1[v15] = *(char **)((char *)a2 + v15);
    v16 = a3[7];
    v17 = &a1[v16];
    v18 = (char *)a2 + v16;
    v19 = *(uint64_t *)((char *)a2 + v16 + 24);
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
    v22 = a3[9];
    a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
    a1[v22] = *((_BYTE *)a2 + v22);
  }
  return a1;
}

_QWORD *destroy for PlaybackIntentDescriptor(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {

  }
  result = (id *)((char *)a1 + *(int *)(a2 + 28));
  if (result[3])
    return (_QWORD *)sub_10000970C(result);
  return result;
}

void **initializeWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    v12 = v11;
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v13 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + v13) = *(void **)((char *)a2 + v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_100034960((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t *)((char *)a2 + v13 + 24);
  if (!*(void **)((char *)a1 + v13 + 24))
  {
    if (v16)
    {
      *((_QWORD *)v14 + 3) = v16;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      (**(void (***)(char *, char *))(v16 - 8))(v14, v15);
      goto LABEL_13;
    }
LABEL_12:
    v17 = *(_OWORD *)v15;
    v18 = *((_OWORD *)v15 + 1);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *(_OWORD *)v14 = v17;
    *((_OWORD *)v14 + 1) = v18;
    goto LABEL_13;
  }
  if (!v16)
  {
    sub_10000970C(v14);
    goto LABEL_12;
  }
  sub_100040AF0(v14, v15);
LABEL_13:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

char *initializeWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = a3[8];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  a1[v10] = a2[v10];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *assignWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_100034960((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  if (*(_QWORD *)&a1[v9 + 24])
    sub_10000970C(&a1[v9]);
  v11 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)v10 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v10 + 1) = v11;
  *((_QWORD *)v10 + 4) = *(_QWORD *)&a2[v9 + 32];
  v12 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018F048);
}

uint64_t sub_10018F048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018F0E0);
}

uint64_t sub_10018F0E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = a2;
  return result;
}

uint64_t sub_10018F15C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = "(";
    v4[4] = &unk_1003D06D8;
    v4[5] = &unk_1003D06D8;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor.IntentType(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void destroy for PlaybackIntentDescriptor.IntentType(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **initializeWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_100034960((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *initializeWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100034960((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10018F55C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MusicPlaybackIntentDescriptor(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *Player.state<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v3;
  v8 = MPCPlaybackEngine.state<A>(for:)();
  type metadata accessor for MusicItemState(0, a2, a3, v9);
  swift_retain(v3);
  v11 = sub_1001A1EC8(a1, v8, v3, v10);
  swift_release(v8);
  swift_release(v4);
  return v11;
}

uint64_t type metadata accessor for MusicItemState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MusicItemState);
}

uint64_t sub_10018F66C(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_1000C5690((uint64_t)a1);
      if ((v9 & 1) != 0)
      {
        v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v8);
        swift_unknownObjectRetain(v7);
        return v7;
      }
    }
    return 0;
  }
  if (a2 < 0)
    v3 = a2;
  else
    v3 = a2 & 0xFFFFFFFFFFFFFF8;
  v4 = a1;
  v5 = __CocoaDictionary.lookup(_:)(v4, v3);

  if (!v5)
    return 0;
  v11 = v5;
  swift_unknownObjectRetain(v5);
  v6 = sub_1000057B4(&qword_1004C0588);
  swift_dynamicCast(&v12, &v11, (char *)&type metadata for Swift.AnyObject + 8, v6, 7);
  v7 = v12;
  swift_unknownObjectRelease(v5);
  return v7;
}

uint64_t sub_10018F734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_10018F740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_100004D8C((unint64_t *)&qword_1004BE650, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_1000057B4(&qword_1004BCCD8);
  v3 = sub_10004FFFC((unint64_t *)&qword_1004BE660, &qword_1004BCCD8, (uint64_t)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t sub_10018F7F4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004F4AC0);
  sub_100039D34(v0, (uint64_t)qword_1004F4AC0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x726579616C50, 0xE600000000000000);
}

uint64_t Player.configuration.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine);
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_100172FAC(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

id Player.audioAnalyzer.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine), "audioAnalyzer");
}

_QWORD *Player.sampleReceiver.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v3 = type metadata accessor for SampleReceiver();
    v2 = (_QWORD *)swift_allocObject(v3, 40, 7);
    v2[3] = 0;
    v2[4] = 0;
    v2[2] = 0;
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

double Player.sampleReceiver.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

double (*Player.sampleReceiver.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Player.sampleReceiver.getter();
  return sub_10018F9CC;
}

double sub_10018F9CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t Player.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  Player.init()();
  return v1;
}

_QWORD *Player.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  NSString v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  NSString v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  id aBlock;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  uint64_t v142;

  v1 = v0;
  v125 = *v0;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v2);
  v136 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4((uint64_t *)&unk_1004C2770);
  __chkstk_darwin(v4);
  v135 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004BFBD0);
  v127 = *(_QWORD *)(v6 - 8);
  v128 = v6;
  __chkstk_darwin(v6);
  v126 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1000057B4(&qword_1004BFBD8);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v129 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4((uint64_t *)&unk_1004BFBE0);
  v133 = *(_QWORD *)(v9 - 8);
  v134 = v9;
  __chkstk_darwin(v9);
  v131 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1000057B4(&qword_1004BF240);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1000057B4(&qword_1004BFBF0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1000057B4((uint64_t *)&unk_1004BFBF8);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1000057B4((uint64_t *)&unk_1004BF850);
  v114 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000057B4(&qword_1004BFC08);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  v0[3] = 0;
  v124 = (id)objc_opt_self(MPAVRoutingController);
  v21 = objc_msgSend(v124, "systemRoute");
  v22 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_1004B8CF8 != -1)
    swift_once(&qword_1004B8CF8, sub_10017052C);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "systemMusicPathWithRoute:playerID:", v21, v23);

  if (objc_msgSend(v21, "isDeviceRoute"))
    v25 = v24;
  else
    v25 = objc_msgSend(v22, "pathWithRoute:bundleID:playerID:", v21, 0, 0);

  v26 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__path;
  aBlock = v24;
  v27 = sub_10000598C(0, &qword_1004BC808, MPCPlayerPath_ptr);
  Published.init(initialValue:)(&aBlock, v27);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = 0;
  v28 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  aBlock = 0;
  v29 = sub_1000057B4(&qword_1004BFC30);
  Published.init(initialValue:)(&aBlock, v29);
  v30 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
  v31 = v123;
  v30(v28, v16, v123);
  v32 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  aBlock = 0;
  v33 = sub_1000057B4(&qword_1004BFC40);
  v34 = v115;
  Published.init(initialValue:)(&aBlock, v33);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v32, v34, v117);
  v35 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  aBlock = 0;
  v36 = sub_1000057B4(&qword_1004BFC50);
  v37 = v118;
  Published.init(initialValue:)(&aBlock, v36);
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v35, v37, v120);
  v38 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
  v40 = v122;
  v39(v38, v12, v122);
  v41 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39(v41, v12, v40);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = 0;
  v42 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  if (qword_1004B8D28 != -1)
    swift_once(&qword_1004B8D28, sub_10019D404);
  v43 = (void *)qword_1004BFBB0;
  *v42 = qword_1004BFBB0;
  v42[1] = v43;
  v42[2] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_routingController) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engineState) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady) = _swiftEmptyArrayStorage;
  v44 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
  aBlock = 0;
  v45 = v43;
  Published.init(initialValue:)(&aBlock, v29);
  v30(v44, v16, v31);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = 0;
  v46 = OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers;
  *(_QWORD *)((char *)v1 + v46) = sub_1000B95AC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = 0;
  v47 = OBJC_IVAR____TtC9MusicCore6Player_lock;
  v48 = type metadata accessor for UnfairLock();
  swift_allocObject(v48, 24, 7);
  *(_QWORD *)((char *)v1 + v47) = UnfairLock.init()();
  v49 = qword_1004F4A70;
  v50 = (void *)unk_1004F4A78;
  v51 = objc_allocWithZone((Class)MPCPlaybackEngine);
  v52 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = String._bridgeToObjectiveC()();
  v54 = objc_msgSend(v51, "initWithPlayerID:", v53);

  v55 = v54;
  sub_100173090(v49, (uint64_t)v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine) = v55;
  objc_msgSend(v55, "becomeActive");
  v56 = v55;

  v57 = sub_100172FAC(v56);
  v58 = objc_msgSend(v56, "fallbackPlaybackIntent");

  LOBYTE(v56) = sub_1000E7308(4u, (uint64_t)v57);
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
  {
    v59 = *(void **)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine);
    v141 = sub_100190884;
    v142 = 0;
    aBlock = _NSConcreteStackBlock;
    v138 = 1107296256;
    v139 = sub_1000EBB14;
    v140 = &unk_1004798F8;
    v60 = _Block_copy(&aBlock);
    v61 = v59;
    objc_msgSend(v61, "restoreStateWithCompletion:", v60);
    _Block_release(v60);

  }
  v62 = v124;
  v63 = objc_msgSend(v124, "systemRoute");
  v64 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v63, 0);
  v65 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
  objc_msgSend(v65, "setActiveDataSource:", v64);

  v66 = swift_allocObject(&unk_100479840, 32, 7);
  v67 = v125;
  *(_QWORD *)(v66 + 16) = v1;
  *(_QWORD *)(v66 + 24) = v67;
  v68 = swift_allocObject(&unk_100479868, 32, 7);
  *(_QWORD *)(v68 + 16) = sub_1001A1F44;
  *(_QWORD *)(v68 + 24) = v66;
  v141 = sub_1001A1F4C;
  v142 = v68;
  aBlock = _NSConcreteStackBlock;
  v138 = 1107296256;
  v139 = sub_1000148C8;
  v140 = &unk_100479880;
  v69 = _Block_copy(&aBlock);
  v70 = v142;
  swift_retain(v1);
  swift_retain(v66);
  swift_release(v70);
  objc_msgSend(v62, "getActiveRouteWithTimeout:completion:", v69, 1.0);
  swift_release(v66);
  _Block_release(v69);
  v71 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  v72 = swift_allocObject(&unk_1004798B8, 24, 7);
  swift_weakInit(v72 + 16, v1);
  v73 = type metadata accessor for NotificationObserver();
  swift_allocObject(v73, 64, 7);
  v74 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v71, 0, 1, 1, (uint64_t)sub_1001A1F6C, v72);
  v75 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = v74;
  swift_release(v75);
  v76 = (void *)MRAVEndpointGroupSessionInfoDidChangeNotification;
  v77 = swift_allocObject(&unk_1004798B8, 24, 7);
  swift_weakInit(v77 + 16, v1);
  swift_allocObject(v73, 64, 7);
  v78 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v76, 0, 1, 1, (uint64_t)sub_1001A1F84, v77);
  v79 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = v78;
  swift_release(v79);
  v80 = (void *)MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification;
  v81 = swift_allocObject(&unk_1004798B8, 24, 7);
  swift_weakInit(v81 + 16, v1);
  swift_allocObject(v73, 64, 7);
  v82 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v80, 0, 1, 1, (uint64_t)sub_1001A1FAC, v81);
  v83 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = v82;
  swift_release(v83);
  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &aBlock, 33, 0);
  v84 = sub_1000057B4((uint64_t *)&unk_1004BCDC0);
  v85 = v126;
  Published.projectedValue.getter(v84);
  swift_endAccess(&aBlock);
  v86 = sub_10004FFFC((unint64_t *)&unk_1004BFCD8, &qword_1004BFBD0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v87 = v128;
  v88 = v129;
  Publisher.map<A>(_:)(sub_100190DF8, 0, v128, &type metadata for ApplicationCapabilities.RatingWarning, v86);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v85, v87);
  v89 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
  aBlock = (id)static OS_dispatch_queue.main.getter(v89, v90, v91, v92, v93, v94, v95, v96);
  v97 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v98 = (uint64_t)v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v135, 1, 1, v97);
  v99 = sub_10004FFFC(&qword_1004BFCE8, &qword_1004BFBD8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  sub_1001A1FD4();
  v101 = v131;
  v100 = v132;
  Publisher.receive<A>(on:options:)(&aBlock, v98, v132, v89, v99);
  sub_10000FE2C(v98, (uint64_t *)&unk_1004C2770);

  (*(void (**)(char *, uint64_t))(v130 + 8))(v88, v100);
  v102 = sub_10004FFFC(&qword_1004BFCF8, (uint64_t *)&unk_1004BFBE0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v103 = v134;
  v104 = Publisher<>.sink(receiveValue:)(sub_100190E34, 0, v134, v102);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v101, v103);
  v105 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = v104;
  swift_release(v105);
  v106 = (uint64_t)v136;
  static TaskPriority.userInitiated.getter(v107);
  v108 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v106, 0, 1, v108);
  type metadata accessor for MainActor(0);
  v109 = swift_retain(v1);
  v110 = static MainActor.shared.getter(v109);
  v111 = (_QWORD *)swift_allocObject(&unk_1004798E0, 40, 7);
  v111[2] = v110;
  v111[3] = &protocol witness table for MainActor;
  v111[4] = v1;
  v112 = sub_10004DE78(v106, (uint64_t)&unk_1004BFD08, (uint64_t)v111);
  swift_release(v112);
  sub_10000FE2C(v106, (uint64_t *)&unk_1004BFBC0);
  return v1;
}

uint64_t property wrapper backing initializer of Player.path(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10000598C(0, &qword_1004BC808, MPCPlayerPath_ptr);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t property wrapper backing initializer of Player.playerResponse(uint64_t a1)
{
  return sub_100190844(a1, &qword_1004BFC30);
}

uint64_t property wrapper backing initializer of Player.nowPlayingPath(uint64_t a1)
{
  return sub_100190844(a1, &qword_1004BFC40);
}

uint64_t property wrapper backing initializer of Player.sharePlayTogetherSession(uint64_t a1)
{
  return sub_100190844(a1, &qword_1004BFC50);
}

uint64_t sub_100190844(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1;
  v2 = sub_1000057B4(a2);
  return Published.init(initialValue:)(&v4, v2);
}

void sub_100190884(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if ((a1 & 1) == 0)
  {
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v3 = type metadata accessor for Logger(0);
    sub_100039D34(v3, (uint64_t)qword_1004F4AC0);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v12 = a2;
      v13 = v7;
      *(_DWORD *)v6 = 136446210;
      swift_errorRetain(a2);
      v8 = sub_1000057B4(&qword_1004C0630);
      v9 = (char *)String.init<A>(describing:)(&v12, v8);
      *(_QWORD *)(v6 + 4) = sub_1000393D0(v9, v10, &v13);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Restoration Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_100190A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100190AA0, v7, v8);
}

uint64_t sub_100190AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.sharePlayTogether);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Got MRAVEndpointGroupSessionInfoDidChange notification", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 16);

  if (v6)
    sub_10019C7D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100190B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  _BYTE v18[24];

  v7 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = Strong;
  v15 = sub_1000E6084((uint64_t)v9, a4, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100190C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100190D04, v7, v8);
}

uint64_t sub_100190D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.sharePlayTogether);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Got MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification notification", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 16);

  if (v6)
    sub_10019C7D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100190DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_100190E34(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = *a1;
  v2 = (void *)objc_opt_self(MPRestrictionsMonitor);
  v3 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v3, "setMaximumMovieRatingForAgeGate:", v1);

  v4 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v4, "setMaximumTVShowRatingForAgeGate:", v1);

}

uint64_t sub_100190EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __n128 v5;
  _QWORD *v6;

  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BFD14);
  v4[5] = v6;
  *v6 = v4;
  v6[1] = sub_100190F30;
  return Player.startEngineIfNeeded()();
}

uint64_t sub_100190F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100190FA0, v2, v3);
}

uint64_t sub_100190FA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  sub_10019C7D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.startEngineIfNeeded()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[13] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[14] = v2;
  v1[15] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[16] = v4;
  v1[17] = v5;
  return swift_task_switch(sub_100191048, v4, v5);
}

uint64_t sub_100191048()
{
  uint64_t v0;
  _BYTE *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  v2 = swift_beginAccess(v1, v0 + 80, 1, 0);
  if (*v1 == 2)
  {
    v8 = swift_release(*(_QWORD *)(v0 + 120));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
  else
  {
    if (!*v1)
    {
      *v1 = 1;
      v2.n128_f64[0] = sub_100199610(0);
    }
    v3 = static MainActor.shared.getter(v2);
    *(_QWORD *)(v0 + 144) = v3;
    if (v3)
    {
      ObjectType = swift_getObjectType();
      v5 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v7 = v6;
    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    return swift_task_switch(sub_100191114, v5, v7);
  }
}

uint64_t sub_100191114()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = v0 + 2;
  v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_100191214;
  v3 = swift_continuation_init(v0 + 2, 0);
  v4 = swift_allocObject(&unk_100479930, 24, 7);
  *(_QWORD *)(v4 + 16) = v3;
  v5 = OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady;
  v6 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *(_QWORD *)(v2 + v5) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_10005E2F8(0, v6[2] + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_10005E2F8((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = sub_1001A20AC;
  v10[5] = v4;
  return swift_continuation_await(v1);
}

uint64_t sub_100191214()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_100191260, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_100191260()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t Player.engineDelegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t Player.engineDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 24, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v3);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v1 + 24));
  return swift_unknownObjectRelease(a1);
}

id (*Player.engineDelegate.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 24, a1, 33, 0);
  return sub_100191380;
}

id sub_100191380(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(*(_QWORD *)(a1 + 24) + 24));
  return result;
}

void sub_1001913D0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v5 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

double sub_10019144C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v5 = swift_getKeyPath(&unk_1003D0748);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v8, v3, KeyPath, v5);
  return sub_1001914C4();
}

double sub_1001914C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  void *v15;

  v1 = v0;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100199C70();
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v7 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(&v15, v1, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  sub_10019D118(v15);

  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  type metadata accessor for MainActor(0);
  v9 = swift_retain(v1);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_100479FC0, 40, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  v12 = sub_1000E6084((uint64_t)v4, (uint64_t)&unk_1004C0628, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100191604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100191670, v7, v8);
}

uint64_t sub_100191670()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10019C7D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.path.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v2 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t Player.$path.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1004BFC08);
}

uint64_t Player.nowPlayingObserver.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  }
  else
  {
    v4 = v0;
    v5 = type metadata accessor for Player.NowPlayingObserver(0);
    v3 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    swift_retain(v4);
    Player.NowPlayingObserver.init(player:)(v6);
    v7 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t Player.NowPlayingObserver.__allocating_init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  Player.NowPlayingObserver.init(player:)(a1);
  return v3;
}

uint64_t Player.nowPlaying.getter()
{
  return sub_100191CC4((uint64_t)&unk_1003D0768, (uint64_t)&unk_1003D0790);
}

uint64_t Player.$nowPlaying.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004BF850);
}

void sub_10019180C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D07B0);
  v5 = swift_getKeyPath(&unk_1003D07D8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100191888(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D07B0);
  v5 = swift_getKeyPath(&unk_1003D07D8);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Player.nowPlayingPath.getter()
{
  return sub_100191CC4((uint64_t)&unk_1003D07B0, (uint64_t)&unk_1003D07D8);
}

uint64_t Player.$nowPlayingPath.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1004BFBF8);
}

uint64_t sub_100191924(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE *v26;

  v2 = v1;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_8;
  KeyPath = swift_getKeyPath(&unk_1003D07F8);
  v8 = swift_getKeyPath(&unk_1003D0820);
  v9 = a1;
  static Published.subscript.getter(&v26, v2, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  v10 = v26;
  if (v26)
  {
    type metadata accessor for SharePlayTogetherSession(0);
    v11 = v9;
    v12 = static NSObject.== infix(_:_:)(v11, v10);

    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  else
  {

  }
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = v9;
  v15 = swift_retain(v2);
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(&unk_100479E80, 48, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v2;
  v17[5] = v14;
  v18 = sub_1000E6084((uint64_t)v6, (uint64_t)&unk_1004C0578, (uint64_t)v17);
  swift_release(v18);
LABEL_7:

LABEL_8:
  v19 = swift_getKeyPath(&unk_1003D07F8);
  v20 = swift_getKeyPath(&unk_1003D0820);
  static Published.subscript.getter(&v26, v2, v19, v20);
  swift_release(v20);
  swift_release(v19);
  if (v26)
  {
    v21 = v26[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost];

  }
  else
  {
    v21 = 0;
  }
  v22 = swift_getKeyPath(&unk_1003D0840);
  v23 = swift_getKeyPath(&unk_1003D0868);
  LOBYTE(v26) = v21;
  swift_retain(v2);
  return static Published.subscript.setter(&v26, v2, v22, v23);
}

uint64_t sub_100191B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100191BC4, v8, v9);
}

uint64_t sub_100191BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  KeyPath = swift_getKeyPath(&unk_1003D07F8);
  v3 = swift_getKeyPath(&unk_1003D0820);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = *(void **)(v0 + 16);
  if (!v4)
    goto LABEL_5;
  if ((SharePlayTogetherSession.isEquivalent(to:)(*(_QWORD *)(v0 + 16)) & 1) == 0)
  {

LABEL_5:
    SharePlayTogetherSession.cleanup(notifyObservers:)(1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.sharePlayTogetherSession.getter()
{
  return sub_100191CC4((uint64_t)&unk_1003D07F8, (uint64_t)&unk_1003D0820);
}

uint64_t sub_100191CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

void sub_100191D2C(void *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  KeyPath = swift_getKeyPath(&unk_1003D07F8);
  v4 = swift_getKeyPath(&unk_1003D0820);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_1003D07F8);
  v7 = swift_getKeyPath(&unk_1003D0820);
  v9 = a1;
  v8 = a1;
  swift_retain(v1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_100191924(v5);

}

uint64_t Player.$sharePlayTogetherSession.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1004BFBF0);
}

void sub_100191E14(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_100191E78(a1, (uint64_t)&unk_1003D0840, (uint64_t)&unk_1003D0868, a2);
}

uint64_t sub_100191E28(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100191F04(a1, a2, a3, a4, (uint64_t)&unk_1003D0840, (uint64_t)&unk_1003D0868);
}

uint64_t Player.isHostingSharePlayTogetherSession.getter()
{
  return sub_100191F84((uint64_t)&unk_1003D0840, (uint64_t)&unk_1003D0868);
}

uint64_t Player.$isHostingSharePlayTogetherSession.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_1004BF240);
}

void sub_100191E64(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_100191E78(a1, (uint64_t)&unk_1003D0888, (uint64_t)&unk_1003D08B0, a2);
}

void sub_100191E78(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  *a4 = v9;
}

uint64_t sub_100191EF0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100191F04(a1, a2, a3, a4, (uint64_t)&unk_1003D0888, (uint64_t)&unk_1003D08B0);
}

uint64_t sub_100191F04(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t Player.isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_100191F84((uint64_t)&unk_1003D0888, (uint64_t)&unk_1003D08B0);
}

uint64_t sub_100191F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_100191FEC(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(*a1 + *a4, v8, 33, 0);
  v6 = sub_1000057B4(a5);
  Published.projectedValue.getter(v6);
  return swift_endAccess(v8);
}

uint64_t sub_100192058(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v11 = sub_1000057B4(a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v17 = &v23[-v16 - 8];
  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v18(&v23[-v16 - 8], a1, v11);
  v19 = *a2;
  v18(v15, v17, v11);
  swift_beginAccess(v19 + *a6, v23, 33, 0);
  v20 = sub_1000057B4(a7);
  Published.projectedValue.setter(v15, v20);
  swift_endAccess(v23);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t Player.$isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_1004BF240);
}

id Player.supportsDelegation.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v13;

  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v2 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  v5 = objc_msgSend(v13, "route", v3);

  if (!v5)
    return 0;
  objc_opt_self(MPAVEndpointRoute);
  v6 = (void *)swift_dynamicCastObjCClass(v5);
  if (!v6)
    goto LABEL_12;
  result = objc_msgSend(v6, "endpointObject");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v8 = result;
  v9 = objc_msgSend(result, "externalDevice");

  if (!v9 || (v10 = objc_msgSend(v9, "deviceInfo"), v9, !v10))
  {
LABEL_12:

    return 0;
  }
  v11 = objc_msgSend(v10, "deviceClass");

  return (id)(v11 == (id)7 || v11 == (id)4);
}

uint64_t Player.isInAnySharePlaySession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;

  KeyPath = swift_getKeyPath(&unk_1003D0768);
  v2 = swift_getKeyPath(&unk_1003D0790);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  if (!v13
    || (v5 = objc_msgSend(v13, "isSharedListeningSession", v3), v4, (v5 & 1) == 0))
  {
    v6 = swift_getKeyPath(&unk_1003D07F8);
    v7 = swift_getKeyPath(&unk_1003D0820);
    static Published.subscript.getter(&v13, v0, v6, v7);
    swift_release(v7);
    *(_QWORD *)&v8 = swift_release(v6).n128_u64[0];
    v9 = v13;
    if (!v13)
      return 0;
    result = *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
    if (!result)
    {
      __break(1u);
      return result;
    }
    if (objc_msgSend((id)result, "isPlaceholder", v8))
    {

      return 0;
    }
    if (*((_BYTE *)v9 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      v11 = swift_getKeyPath(&unk_1003D08D0);
      v12 = swift_getKeyPath(&unk_1003D08F8);
      static Published.subscript.getter(&v13, v9, v11, v12);
      swift_release(v12);
      swift_release(v11);

      return (uint64_t)v13 > 0;
    }

  }
  return 1;
}

void Player.sharePlayTogether(with:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  __n128 v14;
  _QWORD v15[5];
  _QWORD *v16;

  v4 = v3;
  v7 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = a1;
  v8 = a1;

  v9 = swift_allocObject(&unk_1004798B8, 24, 7);
  swift_weakInit(v9 + 16, v4);
  v10 = (_QWORD *)swift_allocObject(&unk_100479958, 48, 7);
  v10[2] = v9;
  v10[3] = v8;
  v10[4] = a2;
  v10[5] = a3;
  v15[4] = sub_1001A213C;
  v16 = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100192658;
  v15[3] = &unk_100479970;
  v11 = _Block_copy(v15);
  v12 = v16;
  v13 = v8;
  sub_10000DCE8(a2, a3);
  v14 = swift_release(v12);
  MRGroupSessionJoinSessionWithToken(v13, v11, v14);
  _Block_release(v11);
}

double sub_100192560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  _BYTE v19[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken;
    v14 = *(void **)(Strong + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
    if (v14)
    {
      sub_10000598C(0, &qword_1004C0618, MRGroupSessionToken_ptr);
      v15 = a5;
      v16 = v14;
      v17 = static NSObject.== infix(_:_:)(v15, v16);

      if ((v17 & 1) != 0)
      {
        v18 = *(void **)(v12 + v13);
        *(_QWORD *)(v12 + v13) = 0;

        if (a6)
          a6(a3);
      }
    }
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_100192658(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);

}

void Player.requestSharePlayTogether(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27[5];
  _QWORD *v28;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v7 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(v27, v3, KeyPath, v7);
  swift_release(v7);
  *(_QWORD *)&v8 = swift_release(KeyPath).n128_u64[0];
  v9 = v27[0];
  v10 = objc_msgSend(v27[0], "route", v8);

  if (v10)
  {
    objc_opt_self(MPAVEndpointRoute);
    v11 = (void *)swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = objc_msgSend(v11, "endpointObject");
      if (!v12)
      {
        __break(1u);
        return;
      }
      v13 = v12;
      v14 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      v23 = swift_allocObject(&unk_1004798B8, 24, 7);
      swift_weakInit(v23 + 16, v3);
      v24 = (_QWORD *)swift_allocObject(&unk_1004799A8, 40, 7);
      v24[2] = v23;
      v24[3] = a1;
      v24[4] = a2;
      v27[4] = sub_1001A217C;
      v28 = v24;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = (id)1107296256;
      v27[2] = sub_100192AD4;
      v27[3] = &unk_1004799C0;
      v25 = _Block_copy(v27);
      v26 = v28;
      sub_10000DCE8(a1, a2);
      objc_msgSend(v13, "requestGroupSessionWithQueue:completion:", v22, v25, swift_release(v26).n128_f64[0]);
      _Block_release(v25);

    }
  }
}

double sub_1001928AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v24[24];

  v12 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v12);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v24, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v17 = Strong;
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
    type metadata accessor for MainActor(0);
    swift_retain(v17);
    sub_10000DCE8(a5, a6);
    swift_bridgeObjectRetain();
    swift_errorRetain(a3);
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_100479F98, 80, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v17;
    v21[5] = a5;
    v21[6] = a6;
    v21[7] = a1;
    v21[8] = a2;
    v21[9] = a3;
    v22 = sub_1000E6084((uint64_t)v14, (uint64_t)&unk_1004C0610, (uint64_t)v21);
    swift_release(v17);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_100192A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[6] = a8;
  v8[7] = v14;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100192A88, v11, v12);
}

uint64_t sub_100192A88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_10019C7D0();
  if (v1)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 24))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100192AD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

uint64_t Player.getNowPlaying()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[17] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[18] = v2;
  v1[19] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v4;
  v1[21] = v5;
  return swift_task_switch(sub_100192BC4, v4, v5);
}

uint64_t sub_100192BC4()
{
  uint64_t v0;
  char *v1;
  void *v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_10019B328();
  v2 = *(void **)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  *(_QWORD *)(v0 + 176) = v2;
  v3 = v2;

  v5 = static MainActor.shared.getter(v4);
  *(_QWORD *)(v0 + 184) = v5;
  if (v5)
  {
    ObjectType = swift_getObjectType();
    v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  return swift_task_switch(sub_100192C50, v7, v9);
}

uint64_t sub_100192C50()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;

  v1 = v0 + 2;
  v2 = (void *)v0[22];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_100192D40;
  v3 = swift_continuation_init(v0 + 2, 1);
  v4 = swift_allocObject(&unk_1004799F8, 24, 7);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_1001A2198;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_100021234;
  v5[3] = &unk_100479A10;
  v6 = _Block_copy(v5);
  v7 = objc_msgSend(v2, "performWithCompletion:", v6, swift_release(v5[5]).n128_f64[0]);
  _Block_release(v6);
  swift_unknownObjectRelease(v7);
  return swift_continuation_await(v1);
}

uint64_t sub_100192D40(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_100192F94;
  }
  else
  {
    v7 = v2[23];
    v2[25] = v2[16];
    swift_release(v7);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_100192DBC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100192DBC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 152));
  if (v1)
  {
    v2 = *(id *)(v0 + 200);
    v3 = objc_msgSend(v2, "playerPath");
    v4 = objc_msgSend(v3, "isSystemMusicPath");

    if (v4
      || (v5 = objc_msgSend(v2, "playerPath"),
          v6 = objc_msgSend(v5, "representedBundleID"),
          v5,
          !v6))
    {
      v7 = *(_QWORD *)(v0 + 200);
    }
    else
    {

      v7 = 0;
    }
    v8 = *(_QWORD *)(v0 + 136);
    KeyPath = swift_getKeyPath(&unk_1003D0768);
    v10 = swift_getKeyPath(&unk_1003D0790);
    *(_QWORD *)(v0 + 80) = v7;
    swift_retain(v8);
    static Published.subscript.setter(v0 + 80, v8, KeyPath, v10);
    v11 = objc_msgSend(v2, "playerPath");
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 136);
    v13 = swift_getKeyPath(&unk_1003D0768);
    v14 = swift_getKeyPath(&unk_1003D0790);
    *(_QWORD *)(v0 + 80) = 0;
    swift_retain(v12);
    static Published.subscript.setter(v0 + 80, v12, v13, v14);
    v11 = 0;
  }
  v15 = *(void **)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = swift_getKeyPath(&unk_1003D07B0);
  v18 = swift_getKeyPath(&unk_1003D07D8);
  *(_QWORD *)(v0 + 80) = v11;
  swift_retain(v16);
  static Published.subscript.setter(v0 + 80, v16, v17, v18);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_100192F94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

void sub_100192FD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  void *v10;

  if (a2)
  {
    v5 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a2;
    swift_errorRetain(a2);
    swift_continuation_throwingResumeWithError(a3, v6);
  }
  else
  {
    v10 = a1;
    v8 = *(_QWORD *)(*(_QWORD *)(a3 + 64) + 40);
    v9 = a1;
    sub_10000FD10((uint64_t)&v10, v8, &qword_1004BFC30);
    swift_continuation_throwingResume(a3);
  }
}

void sub_100193084()
{
  uint64_t v0;
  char *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  void *v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  char *v19;
  id v20;
  _BYTE *v21;
  char *v22;
  id v23;
  char **v24;
  uint64_t v25;
  _BYTE v26[24];

  v1 = sub_10019B328();
  v2 = *(id *)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v26, 0, 0);
  v4 = (void *)v3[1];
  v5 = (id)*v3;
  v6 = v4;
  v7 = swift_bridgeObjectRetain();
  v8 = (id)sub_1001A21A0(v7);
  v10 = v9;

  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v2, "playingItemProperties");
  if (v11
    && (v12 = v11, v13 = objc_msgSend(v11, "containsPropertySet:", *v3), v12, v13)
    && (v14 = objc_msgSend(v2, "queueSectionProperties")) != 0)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "containsPropertySet:", v3[1]);

    v17 = v16 ^ 1;
  }
  else
  {
    v17 = 1;
  }
  if (objc_msgSend(v2, "tracklistRange") != v8 || (v17 & 1) != 0 || v18 != v10)
  {
    objc_msgSend(v2, "setPlayingItemProperties:", *v3);
    objc_msgSend(v2, "setQueueItemProperties:", *v3);
    objc_msgSend(v2, "setQueueSectionProperties:", v3[1]);
    objc_msgSend(v2, "setTracklistRange:", v8, v10);
    v19 = sub_100199C70();
    v20 = *(id *)&v19[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

    objc_msgSend(v20, "setPlayingItemProperties:", *v3);
    v21 = (_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, &v25, 0, 0);
    if (*v21 == 2)
    {
      v22 = sub_10019B328();
      v23 = *(id *)&v22[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];

      v24 = &selRef_setNeedsReloadForSignificantRequestChange;
      if (!v17)
        v24 = &selRef_setNeedsReload;
      objc_msgSend(v23, *v24);

    }
  }

}

uint64_t Player.NowPlayingConfiguration.tracklistRange.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A21A0(a3);
}

id Player.nowPlayingConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  _BYTE v7[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v7, 0, 0);
  v2 = *(id *)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(id *)v1;
  v5 = v3;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Player.nowPlayingConfiguration.setter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _BYTE v13[24];

  v7 = v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v13, 1, 0);
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
  v10 = a1;
  v11 = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  sub_100193084();

  return swift_bridgeObjectRelease();
}

void (*Player.nowPlayingConfiguration.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, a1, 33, 0);
  return sub_100193448;
}

void sub_100193448(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_100193084();
}

void UIView.Shadow.color.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

void Player.NowPlayingConfiguration.queueSectionProperties.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.insert(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_1001934F0(a1.reverseCount, a1.forwardCount);
}

unint64_t sub_1001934F0(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v6 = *v2;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_6;
  result = sub_1000C56C0(a1, a2);
  if ((v8 & 1) == 0)
  {
    v6 = *v3;
LABEL_6:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v13 = *v3;
    *v3 = 0x8000000000000000;
    v12 = 1;
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * result);
  v10 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v13 = *v3;
    *v3 = 0x8000000000000000;
    v12 = v10;
LABEL_7:
    sub_1000BA478(v12, a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v13;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Player.NowPlayingConfiguration.BadCountedSet.insert(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  Dictionary.subscript.getter(&v15, v6, *v2, v4, &type metadata for Int, v10);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v11 = 1;
LABEL_4:
    v15 = v11;
    v16 = 0;
    v14 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10);
    return Dictionary.subscript.setter(&v15, v8, v14);
  }
  v12 = v15;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v11 = v12 + 1;
  if (!__OFADD__(v12, 1))
    goto LABEL_4;
  __break(1u);
  return result;
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.remove(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_1001936F0(a1.reverseCount, a1.forwardCount);
}

Swift::UInt sub_1001936F0(Swift::UInt result, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  Swift::UInt v5;
  Swift::UInt v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = a2;
    v6 = result;
    result = sub_1000C56C0(result, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * result);
      v9 = v8 - 1;
      if (__OFSUB__(v8, 1))
      {
        __break(1u);
      }
      else
      {
        if (v9 > 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
          v15 = *v3;
          *v3 = 0x8000000000000000;
          sub_1000BA478(v9, v6, v5, isUniquelyReferenced_nonNull_native);
          *v3 = v15;
          return swift_bridgeObjectRelease();
        }
        result = sub_1000C56C0(v6, v5);
        if ((v11 & 1) == 0)
          return result;
        v5 = result;
        v12 = swift_isUniquelyReferenced_nonNull_native(*v3);
        v13 = *v3;
        v14 = *v3;
        *v3 = 0x8000000000000000;
        if ((v12 & 1) != 0)
        {
LABEL_8:
          sub_1001A113C(v5, v13);
          *v3 = v13;
          return swift_bridgeObjectRelease();
        }
      }
      sub_1001D5B50();
      v13 = v14;
      goto LABEL_8;
    }
  }
  return result;
}

_QWORD *Player.NowPlayingConfiguration.BadCountedSet.remove(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  result = Dictionary.subscript.getter(&v14, v6, *v2, v4, &type metadata for Int, v10);
  if (v15 != 1)
  {
    v12 = v14 - 1;
    if (__OFSUB__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      if (v12 < 1)
      {
        v14 = 0;
        v15 = 1;
      }
      else
      {
        v14 = v12;
        v15 = 0;
      }
      v13 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10);
      return (_QWORD *)Dictionary.subscript.setter(&v14, v8, v13);
    }
  }
  return result;
}

__n128 Player.NowPlayingConfiguration.BadCountedSet.makeIterator()@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  _OWORD v9[2];
  uint64_t v10;

  v6 = swift_bridgeObjectRetain();
  _NativeDictionary.makeIterator()(v9, v6, a1, &type metadata for Int, a2);
  v7 = v10;
  result = (__n128)v9[1];
  *(_OWORD *)a3 = v9[0];
  *(__n128 *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 32) = v7;
  return result;
}

double sub_100193960@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  Player.NowPlayingConfiguration.BadCountedSet.makeIterator()(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)v5);
  swift_bridgeObjectRelease();
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1001939B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF(v2, a1, a2);
  swift_bridgeObjectRelease(*v2);
  return v3;
}

uint64_t sub_1001939F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

BOOL Player.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = sub_1000096A0(a1, v2);
  return sub_1001A15E4((uint64_t)v4, v1, v2, v3);
}

uint64_t Player.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = sub_100197B00(a1, a2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
    if (v5)
      v6 = v5;
    else
      v6 = 0;
    if (v5)
      v7 = a1;
    else
      v7 = 0;
    if (v7)
      v8 = (*(uint64_t (**)(void *))(v6 + 16))(v4);
    else
      v8 = 0;

  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_100193AC4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v4 + 360) = v3;
  *(double *)(v4 + 352) = a3;
  *(_QWORD *)(v4 + 336) = a1;
  *(_QWORD *)(v4 + 344) = a2;
  v5 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v4 + 368) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004BFD70);
  *(_QWORD *)(v4 + 376) = v6;
  *(_QWORD *)(v4 + 384) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004C05E8);
  *(_QWORD *)(v4 + 392) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 400) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 408) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 416) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 424) = swift_task_alloc(v10);
  v11 = *(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8);
  *(_QWORD *)(v4 + 432) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v4 + 440) = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 448) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 456) = swift_task_alloc(v13);
  v14 = type metadata accessor for UUID(0);
  *(_QWORD *)(v4 + 464) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 472) = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 480) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 488) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 496) = swift_task_alloc(v16);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 504) = v17;
  *(_QWORD *)(v4 + 512) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 520) = v19;
  *(_QWORD *)(v4 + 528) = v20;
  return swift_task_switch(sub_100193C48, v19, v20);
}

uint64_t sub_100193C48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD **)(v0 + 336);
  v3 = v2[3];
  v4 = v2[4];
  v5 = sub_1000096A0(v2, v3);
  if (sub_1001A15E4((uint64_t)v5, v1, v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 336);
    v7 = sub_1000057B4((uint64_t *)&unk_1004C0590);
    v8 = swift_allocObject(v7, 72, 7);
    *(_QWORD *)(v0 + 576) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_1003C64D0;
    sub_1000444A8(v6, v8 + 32);
    v9 = (_QWORD *)swift_task_alloc(dword_1004BFE04);
    *(_QWORD *)(v0 + 584) = v9;
    *v9 = v0;
    v9[1] = sub_1001947D4;
    return sub_1001953EC(v8, *(_QWORD *)(v0 + 344));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 464);
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
    *(_QWORD *)(v0 + 536) = v14;
    v14(v11, v13, v12);
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100039D34(v15, (uint64_t)qword_1004F4AC0);
    *(_QWORD *)(v0 + 544) = v16;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "╭ ⏱️ Await for command", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v75 = v0 + 80;
    v20 = *(_QWORD *)(v0 + 336);

    v21 = sub_1000444A8(v20, v0 + 160);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v77 = v25;
      *(_DWORD *)v24 = 136446210;
      sub_1000444A8(v0 + 160, v0 + 240);
      v26 = sub_1000057B4(&qword_1004BF5C0);
      v27 = (char *)String.init<A>(describing:)(v0 + 240, v26);
      v29 = v28;
      *(_QWORD *)(v24 + 4) = sub_1000393D0(v27, v28, &v77);
      swift_bridgeObjectRelease(v29);
      sub_10000970C((_QWORD *)(v0 + 160));
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "| %{public}s", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      sub_10000970C((_QWORD *)(v0 + 160));
    }

    v30 = sub_1001A35D0(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 456));
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    v33 = os_log_type_enabled(v31, v32);
    v34 = *(_QWORD *)(v0 + 456);
    if (v33)
    {
      v35 = swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v77 = v36;
      *(_DWORD *)v35 = 136446210;
      v37 = (char *)Player.CommandOptions.description.getter(v36);
      v39 = v38;
      *(_QWORD *)(v35 + 4) = sub_1000393D0(v37, v38, &v77);
      swift_bridgeObjectRelease(v39);
      sub_1001A3614(v34);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "╰ options=%{public}s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_1001A3614(*(_QWORD *)(v0 + 456));
    }

    sub_1000444A8(*(_QWORD *)(v0 + 336), v75);
    v40 = sub_1000057B4(&qword_1004BF5C0);
    v41 = sub_1000057B4(&qword_1004C0680);
    v42 = swift_dynamicCast(v0 + 120, v75, v40, v41, 6);
    v43 = *(_QWORD *)(v0 + 360);
    if (v42)
    {
      v44 = v0 + 304;
      sub_10000970C((_QWORD *)(v0 + 120));
      v45 = OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
    }
    else
    {
      v44 = v0 + 280;
      v45 = OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
    }
    swift_beginAccess(v43 + v45, v44, 33, 0);
    v46 = sub_1000057B4((uint64_t *)&unk_1004BF850);
    Published.projectedValue.getter(v46);
    swift_endAccess(v44);
    v47 = *(_QWORD *)(v0 + 448);
    v72 = v47;
    v48 = *(_QWORD *)(v0 + 424);
    v74 = *(_QWORD *)(v0 + 432);
    v49 = *(_QWORD *)(v0 + 416);
    v73 = *(_QWORD *)(v0 + 408);
    v50 = *(_QWORD *)(v0 + 392);
    v51 = *(_QWORD *)(v0 + 400);
    v70 = v50;
    v71 = v49;
    v52 = *(_QWORD *)(v0 + 376);
    v53 = *(_QWORD *)(v0 + 384);
    v54 = *(_QWORD *)(v0 + 360);
    v55 = *(_QWORD *)(v0 + 368);
    v76 = *(_QWORD *)(v0 + 440);
    v68 = *(_QWORD *)(v0 + 336);
    v69 = *(_QWORD *)(v0 + 344);
    v56 = sub_10004FFFC((unint64_t *)&qword_1004BF4F0, &qword_1004BFD70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    AsyncPublisher.init(_:)(v53, v52, v56);
    v57 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v55, 1, 1, v57);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v49, v48, v50);
    sub_1000444A8(v68, v0 + 200);
    sub_1001A35D0(v69, v47);
    v58 = v54;
    v59 = swift_retain(v54);
    v60 = static MainActor.shared.getter(v59);
    v61 = *(unsigned __int8 *)(v51 + 80);
    v62 = (v61 + 32) & ~v61;
    v63 = (v73 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v63 + 47) & 0xFFFFFFFFFFFFFFF8;
    v65 = *(unsigned __int8 *)(v74 + 80);
    v66 = (v65 + v64 + 8) & ~v65;
    v67 = swift_allocObject(&unk_10047A100, v66 + v76, v61 | v65 | 7);
    *(_QWORD *)(v67 + 16) = v60;
    *(_QWORD *)(v67 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v67 + v62, v71, v70);
    sub_100033620((__int128 *)(v0 + 200), v67 + v63);
    *(_QWORD *)(v67 + v64) = v58;
    sub_100084888(v72, v67 + v66, type metadata accessor for Player.CommandOptions);
    *(_QWORD *)(v0 + 552) = sub_1001CC8E8(v55, (uint64_t)&unk_1004C0690, v67);
    return swift_task_switch(sub_100194264, 0, 0);
  }
}

uint64_t sub_100194264()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;

  v1 = *((_QWORD *)v0 + 69);
  v2 = v0[44];
  *((_QWORD *)v0 + 7) = v0 + 41;
  *((_QWORD *)v0 + 2) = v0;
  *((_QWORD *)v0 + 3) = sub_1001942CC;
  v3 = swift_continuation_init(v0 + 2, 1);
  sub_10019EF3C(v3, v1, v2);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1001942CC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 560) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_1001945A4;
  }
  else
  {
    v2[71] = v2[41];
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_100194348;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100194348()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v3 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = swift_release(*(_QWORD *)(v0 + 512));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 552);
  v11 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 464);
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 400);
  v37 = *(_QWORD *)(v0 + 392);
  if (v9)
  {
    v35 = *(_QWORD *)(v0 + 424);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v38 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v18);
    v34 = v12;
    v21 = v20;
    *(_QWORD *)(v16 + 4) = sub_1000393D0(v19, v20, &v38);
    swift_bridgeObjectRelease(v21);
    v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "⏱️✅ Awaiting for command succeeded (%{public}s)", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release(v10);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    v22(v34, v13);
  }
  else
  {
    swift_release(v10);

    v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v23(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v15, v37);
    v23(v12, v13);
  }
  v24 = *(_QWORD *)(v0 + 568);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 480);
  v28 = *(_QWORD *)(v0 + 448);
  v27 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 416);
  v29 = *(_QWORD *)(v0 + 424);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t sub_1001945A4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 552));
  v6 = swift_release(v2);
  v7 = v1(v4, v3, v5, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 464);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v36 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    v19 = v18;
    *(_QWORD *)(v14 + 4) = sub_1000393D0(v17, v18, &v36);
    swift_bridgeObjectRelease(v19);
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "⌛️❌ Timed out waiting for command (%{public}s)", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 464));
  }

  v21 = *(_QWORD *)(v0 + 496);
  v22 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 424);
  v24 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 400);
  swift_willThrow(v26);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v20(v21, v22);
  v27 = *(_QWORD *)(v0 + 488);
  v28 = *(_QWORD *)(v0 + 480);
  v30 = *(_QWORD *)(v0 + 448);
  v29 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 416);
  v31 = *(_QWORD *)(v0 + 424);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001947D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 584);
  v3[74] = a1;
  v3[75] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_1001949A0;
  }
  else
  {
    swift_bridgeObjectRelease(v3[72]);
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_100194854;
  }
  return swift_task_switch(v7, v6, v5);
}

void sub_100194854()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 512));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 592);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 592);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 592);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 592));
    v3 = *(_QWORD *)(v0 + 592);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 592);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    v7 = *(_QWORD *)(v0 + 488);
    v8 = *(_QWORD *)(v0 + 480);
    v10 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 416);
    v11 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 384);
    v14 = *(_QWORD *)(v0 + 368);
    swift_task_dealloc(*(_QWORD *)(v0 + 496));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_1001949A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 576);
  swift_release(*(_QWORD *)(v0 + 512));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100194A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[19] = a1;
  v8 = sub_1000057B4(&qword_1004C05F0);
  v7[24] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[25] = v9;
  v7[26] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[27] = v10;
  v7[28] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[29] = v12;
  v7[30] = v13;
  return swift_task_switch(sub_100194B00, v12, v13);
}

uint64_t sub_100194B00()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_1000057B4(&qword_1004C05E8);
  AsyncPublisher.makeAsyncIterator()(v1);
  v0[31] = static MainActor.shared.getter(v2);
  v3 = sub_10004FFFC(&qword_1004C05F8, &qword_1004C05F0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[32] = v4;
  *v4 = v0;
  v4[1] = sub_100194BB0;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v0[24], v3);
}

uint64_t sub_100194BB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 248);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_100194F18;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_100194C74;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_100194C74()
{
  _QWORD *v0;

  swift_release(v0[31]);
  v0[34] = v0[17];
  return swift_task_switch(sub_100194CB4, v0[29], v0[30]);
}

uint64_t sub_100194CB4(__n128 a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;

  v2 = *(void **)(v1 + 272);
  if (v2 == (void *)1)
  {
    v15 = *(_QWORD *)(v1 + 224);
    v16 = *(_QWORD **)(v1 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 192));
    swift_release(v15);
    *v16 = 0;
    swift_task_dealloc(*(_QWORD *)(v1 + 208));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    if (v2)
    {
      sub_1000444A8(*(_QWORD *)(v1 + 168), v1 + 56);
      v3 = v2;
      v4 = sub_1000057B4(&qword_1004BF5C0);
      v5 = sub_1000057B4(&qword_1004C06C8);
      if (swift_dynamicCast(v1 + 96, v1 + 56, v4, v5, 6))
      {
        sub_100033620((__int128 *)(v1 + 96), v1 + 16);
        v6 = *(_QWORD *)(v1 + 40);
        v7 = *(_QWORD *)(v1 + 48);
        sub_1000096A0((_QWORD *)(v1 + 16), v6);
        v8 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v7 + 24))(v3, v6, v7);
        v9 = *(void **)(v1 + 272);
        if (v8)
        {
          v10 = *(_QWORD *)(v1 + 168);

          sub_10000970C((_QWORD *)(v1 + 16));
          sub_10001BB5C(v9);
          v11 = sub_1000057B4((uint64_t *)&unk_1004C0590);
          v12 = swift_allocObject(v11, 72, 7);
          *(_QWORD *)(v1 + 280) = v12;
          *(_OWORD *)(v12 + 16) = xmmword_1003C64D0;
          sub_1000444A8(v10, v12 + 32);
          v13 = (_QWORD *)swift_task_alloc(dword_1004BFE04);
          *(_QWORD *)(v1 + 288) = v13;
          *v13 = v1;
          v13[1] = sub_100194F78;
          return sub_1001953EC(v12, *(_QWORD *)(v1 + 184));
        }
        sub_10000970C((_QWORD *)(v1 + 16));
        sub_10001BB5C(v9);
        v18 = v9;
      }
      else
      {
        v17 = *(void **)(v1 + 272);
        *(_OWORD *)(v1 + 96) = 0u;
        *(_OWORD *)(v1 + 112) = 0u;
        *(_QWORD *)(v1 + 128) = 0;
        sub_10000FE2C(v1 + 96, &qword_1004C06D0);
        sub_10001BB5C(v17);
        v18 = v17;
      }
      sub_10001BB5C(v18);
    }
    *(_QWORD *)(v1 + 248) = static MainActor.shared.getter(a1);
    v19 = sub_10004FFFC(&qword_1004C05F8, &qword_1004C05F0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v20 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 256) = v20;
    *v20 = v1;
    v20[1] = sub_100194BB0;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 136, *(_QWORD *)(v1 + 192), v19);
  }
}

uint64_t sub_100194F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 264);
  v1 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  v2 = swift_dynamicCast(v1, v0 + 144, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100194F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease();
  if (v1)
    v5 = sub_100195100;
  else
    v5 = sub_100194FF0;
  return swift_task_switch(v5, v3[29], v3[30]);
}

void sub_100194FF0()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 224));
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    sub_10001BB5C(*(id *)(v0 + 272));
    swift_bridgeObjectRelease();
    v2 = 0;
    goto LABEL_12;
  }
  if (*(uint64_t *)(v0 + 296) < 0)
    v3 = *(_QWORD *)(v0 + 296);
  else
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v3);
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 296));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 296) + 32);
LABEL_6:
    sub_10001BB5C(*(id *)(v0 + 272));
    swift_bridgeObjectRelease();
LABEL_12:
    v6 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 192);
    **(_QWORD **)(v0 + 152) = v2;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_100195100()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 224));
  sub_10001BB5C(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100195168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v6;
  v3[7] = v7;
  return swift_task_switch(sub_1001951D8, v6, v7);
}

uint64_t sub_1001951D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = sub_1000057B4((uint64_t *)&unk_1004C0590);
  v3 = swift_allocObject(v2, 72, 7);
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  sub_1000444A8(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_1004BFE04);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_100195260;
  return sub_1001953EC(v3, v0[3]);
}

uint64_t sub_100195260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v3[10] = a1;
  v3[11] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_1001953AC;
  }
  else
  {
    swift_bridgeObjectRelease(v3[8]);
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_1001952D4;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_1001952D4()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 40));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 80);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 80);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 80);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 80));
    v3 = *(_QWORD *)(v0 + 80);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 80);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_1001953AC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1001953EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = type metadata accessor for Player.CommandOptions(0);
  v3[28] = v4;
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v3[30] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[31] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[32] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v8);
  v3[34] = swift_task_alloc(v8);
  v3[35] = swift_task_alloc(v8);
  v3[36] = swift_task_alloc(v8);
  v3[37] = swift_task_alloc(v8);
  v3[38] = swift_task_alloc(v8);
  v3[39] = swift_task_alloc(v8);
  v3[40] = swift_task_alloc(v8);
  v3[41] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[42] = v9;
  v3[43] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[44] = v11;
  v3[45] = v12;
  return swift_task_switch(sub_100195514, v11, v12);
}

uint64_t sub_100195514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  _BYTE *v53;
  __n128 v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _DWORD *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 200) + 16))
  {
    v1 = *(_QWORD *)(v0 + 328);
    v2 = *(_QWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 208);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
    *(_QWORD *)(v0 + 368) = v4;
    v4(v1, v3, v2);
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v6 = *(_QWORD *)(v0 + 320);
    v5 = *(_QWORD *)(v0 + 328);
    v7 = *(_QWORD *)(v0 + 240);
    v8 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 376) = sub_100039D34(v8, (uint64_t)qword_1004F4AC0);
    v78 = v4;
    v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v4)(v6, v5, v7);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 320);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 248);
    if (v12)
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v80 = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = (char *)UUID.uuidString.getter(v17);
      v20 = v19;
      *(_QWORD *)(v16 + 4) = sub_1000393D0(v18, v19, &v80);
      swift_bridgeObjectRelease(v20);
      v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v13, v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "╭ Will perform commands %{public}s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {
      v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v13, v14);

    }
    *(_QWORD *)(v0 + 384) = v21;
    v32 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    v35 = os_log_type_enabled(v33, v34);
    v36 = *(_QWORD *)(v0 + 200);
    v79 = v21;
    if (v35)
    {
      v37 = swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v80 = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain();
      v39 = sub_1000057B4(&qword_1004BF5C0);
      v40 = (char *)Array.description.getter(v36, v39);
      v42 = v41;
      swift_bridgeObjectRelease(v36);
      *(_QWORD *)(v37 + 4) = sub_1000393D0(v40, v42, &v80);
      swift_bridgeObjectRelease_n(v36, 2);
      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "| %{public}s", (uint8_t *)v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v36, 2);
    }
    v43 = sub_1001A35D0(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232));
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    v46 = os_log_type_enabled(v44, v45);
    v47 = *(_QWORD *)(v0 + 232);
    if (v46)
    {
      v48 = swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v80 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = (char *)Player.CommandOptions.description.getter(v49);
      v52 = v51;
      *(_QWORD *)(v48 + 4) = sub_1000393D0(v50, v51, &v80);
      swift_bridgeObjectRelease(v52);
      sub_1001A3614(v47);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "╰ options=%{public}s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      sub_1001A3614(*(_QWORD *)(v0 + 232));
    }

    v53 = (_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    v54 = swift_beginAccess(v53, v0 + 128, 0, 0);
    if (*v53 != 2)
    {
      v55 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v78)(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v54);
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.default.getter(v56);
      v58 = os_log_type_enabled(v56, v57);
      v59 = *(_QWORD *)(v0 + 312);
      v60 = *(_QWORD *)(v0 + 240);
      if (v58)
      {
        v61 = swift_slowAlloc(12, -1);
        v62 = swift_slowAlloc(32, -1);
        v80 = v62;
        *(_DWORD *)v61 = 136446210;
        v63 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v64 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v60, v63);
        v66 = v65;
        *(_QWORD *)(v61 + 4) = sub_1000393D0(v64, v65, &v80);
        swift_bridgeObjectRelease(v66);
        v79(v59, v60);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "╭ Commands (%{public}s)", (uint8_t *)v61, 0xCu);
        swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v61, -1, -1);
      }
      else
      {
        v79(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 240));
      }

      v67 = swift_retain_n(*(_QWORD *)(v0 + 216), 2);
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.default.getter(v68);
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (_DWORD *)swift_slowAlloc(12, -1);
        v80 = swift_slowAlloc(32, -1);
        *v70 = 136446210;
        __asm { BR              X10 }
      }
      v71 = *(_QWORD *)(v0 + 216);

      v73 = swift_release_n(v71, 2, v72);
      v74 = Logger.logObject.getter(v73);
      v75 = static os_log_type_t.default.getter(v74);
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v76 = 0;
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "╰ Awaiting on engine to be ready", v76, 2u);
        swift_slowDealloc(v76, -1, -1);
      }

    }
    v77 = (_QWORD *)swift_task_alloc(dword_1004BFD14);
    *(_QWORD *)(v0 + 392) = v77;
    *v77 = v0;
    v77[1] = sub_100195D38;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 344));
    v22 = *(_QWORD *)(v0 + 320);
    v24 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 288);
    v25 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 272);
    v27 = *(_QWORD *)(v0 + 280);
    v29 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 328));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100195D38()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  return swift_task_switch(sub_100195D84, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_100195D84()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, __n128);
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  NSString v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107[2];

  v1 = *(void **)(*(_QWORD *)(v0 + 208) + *(int *)(*(_QWORD *)(v0 + 224) + 32));
  *(_QWORD *)(v0 + 400) = v1;
  if (v1)
  {
    v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
    v3 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 240);
    v6 = objc_allocWithZone((Class)MPCPlayerRequest);
    v7 = v1;
    v8 = objc_msgSend(v6, "init");
    *(_QWORD *)(v0 + 408) = v8;
    v9 = v2(v4, v3, v5);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 240);
    if (v12)
    {
      v105 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v107[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v18 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v14, v17);
      v19 = v8;
      v20 = v7;
      v22 = v21;
      *(_QWORD *)(v15 + 4) = sub_1000393D0(v18, v21, v107);
      v23 = v22;
      v7 = v20;
      v8 = v19;
      swift_bridgeObjectRelease(v23);
      v105(v13, v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "╭ Commands (%{public}s)", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 240));
    }

    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "╰ 🔊 Resolving specified route", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    v47 = (void *)objc_opt_self(MPCPlayerPath);
    v48 = qword_1004B8CF8;
    v49 = v7;
    if (v48 != -1)
      swift_once(&qword_1004B8CF8, sub_10017052C);
    v50 = *(_QWORD *)(v0 + 216);
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v47, "systemMusicPathWithRoute:playerID:", v49, v51);

    objc_msgSend(v8, "setPlayerPath:", v52);
    objc_msgSend(v8, "setPlayingItemProperties:", *(_QWORD *)(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration), swift_beginAccess(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v0 + 152, 0, 0).n128_f64[0]);
    v54 = static MainActor.shared.getter(v53);
    *(_QWORD *)(v0 + 416) = v54;
    if (v54)
    {
      ObjectType = swift_getObjectType();
      v56 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v58 = v57;
    }
    else
    {
      v56 = 0;
      v58 = 0;
    }
    return swift_task_switch(sub_100196688, v56, v58);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    KeyPath = swift_getKeyPath(&unk_1003D0D28);
    v26 = swift_getKeyPath(&unk_1003D0D50);
    static Published.subscript.getter((_QWORD *)(v0 + 192), v24, KeyPath, v26);
    swift_release(KeyPath);
    v27 = swift_release(v26);
    v28 = *(void **)(v0 + 192);
    *(_QWORD *)(v0 + 440) = v28;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
    if (v28)
    {
      v29(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v27);
      v30 = v28;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter(v31);
      v33 = os_log_type_enabled(v31, v32);
      v34 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v35 = *(_QWORD *)(v0 + 288);
      v36 = *(_QWORD *)(v0 + 240);
      if (v33)
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v107[0] = v38;
        *(_DWORD *)v37 = 136446210;
        v39 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v40 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
        v42 = v41;
        *(_QWORD *)(v37 + 4) = sub_1000393D0(v40, v41, v107);
        swift_bridgeObjectRelease(v42);
        v34(v35, v36);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "╭ Performing Commands (%{public}s)", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
      }

      v77 = v30;
      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.default.getter(v78);
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc(12, -1);
        v81 = swift_slowAlloc(32, -1);
        v107[0] = v81;
        *(_DWORD *)v80 = 136446210;
        v82 = objc_msgSend(v77, "playerPath");
        v83 = objc_msgSend(v82, "description");
        v84 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v86 = v85;

        *(_QWORD *)(v80 + 4) = sub_1000393D0(v84, v86, v107);
        swift_bridgeObjectRelease(v86);
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "╰ playerPath=%{public}s", (uint8_t *)v80, 0xCu);
        swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v81, -1, -1);
        swift_slowDealloc(v80, -1, -1);

      }
      else
      {

      }
      v87 = (_QWORD *)swift_task_alloc(dword_1004C0794);
      *(_QWORD *)(v0 + 448) = v87;
      *v87 = v0;
      v87[1] = sub_100196EDC;
      return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    }
    else
    {
      v60 = *(_QWORD *)(v0 + 328);
      v61 = *(_QWORD *)(v0 + 272);
      v62 = *(_QWORD *)(v0 + 240);
      v63 = swift_release(*(_QWORD *)(v0 + 344));
      v64 = v29(v61, v60, v62, v63);
      v65 = Logger.logObject.getter(v64);
      v66 = static os_log_type_t.error.getter();
      v67 = os_log_type_enabled(v65, v66);
      v68 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v69 = *(_QWORD *)(v0 + 272);
      v70 = *(_QWORD *)(v0 + 240);
      if (v67)
      {
        v71 = swift_slowAlloc(12, -1);
        v72 = swift_slowAlloc(32, -1);
        v107[0] = v72;
        *(_DWORD *)v71 = 136446210;
        v73 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v74 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v70, v73);
        v76 = v75;
        *(_QWORD *)(v71 + 4) = sub_1000393D0(v74, v75, v107);
        swift_bridgeObjectRelease(v76);
        v68(v69, v70);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "╭ Commands (%{public}s)", (uint8_t *)v71, 0xCu);
        swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v72, -1, -1);
        swift_slowDealloc(v71, -1, -1);
      }
      else
      {
        v68(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
      }

      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "╰ ❌ Unavailable Commands (nil Response)", v91, 2u);
        swift_slowDealloc(v91, -1, -1);
      }
      v92 = *(_QWORD *)(v0 + 200);

      v93 = sub_1001A3650();
      swift_allocError(&_s12CommandErrorON, v93, 0, 0);
      *(_QWORD *)v94 = v92;
      *(_BYTE *)(v94 + 40) = 1;
      swift_bridgeObjectRetain();
      swift_willThrow(v95);
      v97 = *(_QWORD *)(v0 + 320);
      v96 = *(_QWORD *)(v0 + 328);
      v99 = *(_QWORD *)(v0 + 304);
      v98 = *(_QWORD *)(v0 + 312);
      v101 = *(_QWORD *)(v0 + 288);
      v100 = *(_QWORD *)(v0 + 296);
      v103 = *(_QWORD *)(v0 + 272);
      v102 = *(_QWORD *)(v0 + 280);
      v104 = *(_QWORD *)(v0 + 264);
      v106 = *(_QWORD *)(v0 + 232);
      (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v96, *(_QWORD *)(v0 + 240));
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v106);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_100196688()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v1 = v0;
  v2 = (void *)v0[51];
  v3 = v1 + 2;
  v4 = (void (*)(uint64_t, uint64_t, uint64_t))v1[46];
  v5 = v1[41];
  v6 = v1[37];
  v8 = v1[31];
  v7 = v1[32];
  v9 = v1[30];
  v1[7] = v1 + 23;
  v1[2] = v1;
  v1[3] = sub_1001967E8;
  v10 = swift_continuation_init(v1 + 2, 1);
  v4(v6, v5, v9);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_10047A0B0, v13 + 8, v11 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v14 + v12, v6, v9);
  *(_QWORD *)(v14 + v13) = v10;
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[4] = sub_1001A3700;
  v1[5] = v14;
  v1[1] = 1107296256;
  v1[2] = sub_100021234;
  v1[3] = &unk_10047A0C8;
  v15 = _Block_copy(v1);
  v16 = objc_msgSend(v2, "performWithCompletion:", v15, swift_release(v1[5]).n128_f64[0]);
  _Block_release(v15);
  swift_unknownObjectRelease(v16);
  return swift_continuation_await(v3);
}

uint64_t sub_1001967E8(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2[53] = v3;
  v4 = v2[52];
  if (v3)
  {
    swift_willThrow(a1);
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_100196DFC;
  }
  else
  {
    v2[54] = v2[23];
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_100196870;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_100196870()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66[2];

  v1 = *(void **)(v0 + 400);

  v2 = *(void **)(v0 + 432);
  *(_QWORD *)(v0 + 440) = v2;
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  if (v2)
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v3)(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
    v4 = v2;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v9 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 240);
    if (v7)
    {
      v64 = v4;
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v66[0] = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v14 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
      v16 = v15;
      *(_QWORD *)(v11 + 4) = sub_1000393D0(v14, v15, v66);
      swift_bridgeObjectRelease(v16);
      v8(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "╭ Performing Commands (%{public}s)", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      v17 = v11;
      v4 = v64;
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      v8(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
    }

    v35 = v4;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v66[0] = v39;
      *(_DWORD *)v38 = 136446210;
      v40 = objc_msgSend(v35, "playerPath");
      v41 = objc_msgSend(v40, "description");
      v42 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      *(_QWORD *)(v38 + 4) = sub_1000393D0(v42, v44, v66);
      swift_bridgeObjectRelease(v44);

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "╰ playerPath=%{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

    }
    v45 = (_QWORD *)swift_task_alloc(dword_1004C0794);
    *(_QWORD *)(v0 + 448) = v45;
    *v45 = v0;
    v45[1] = sub_100196EDC;
    return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = swift_release(*(_QWORD *)(v0 + 344));
    v22 = v3(v19, v18, v20, v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v27 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 240);
    if (v25)
    {
      v29 = swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v66[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v28, v31);
      v34 = v33;
      *(_QWORD *)(v29 + 4) = sub_1000393D0(v32, v33, v66);
      swift_bridgeObjectRelease(v34);
      v26(v27, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "╭ Commands (%{public}s)", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      v26(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
    }

    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "╰ ❌ Unavailable Commands (nil Response)", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }
    v51 = *(_QWORD *)(v0 + 200);

    v52 = sub_1001A3650();
    swift_allocError(&_s12CommandErrorON, v52, 0, 0);
    *(_QWORD *)v53 = v51;
    *(_BYTE *)(v53 + 40) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow(v54);
    v56 = *(_QWORD *)(v0 + 320);
    v55 = *(_QWORD *)(v0 + 328);
    v58 = *(_QWORD *)(v0 + 304);
    v57 = *(_QWORD *)(v0 + 312);
    v60 = *(_QWORD *)(v0 + 288);
    v59 = *(_QWORD *)(v0 + 296);
    v62 = *(_QWORD *)(v0 + 272);
    v61 = *(_QWORD *)(v0 + 280);
    v63 = *(_QWORD *)(v0 + 264);
    v65 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v55, *(_QWORD *)(v0 + 240));
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100196DFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 344);

  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v3, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100196EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 448);
  v3[57] = a1;
  v3[58] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100197298;
  else
    v5 = sub_100196F44;
  return swift_task_switch(v5, v3[44], v3[45]);
}

uint64_t sub_100196F44()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v43 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_1000393D0(v16, v17, &v43);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "╭ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
  }

  v19 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 456), 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(void **)(v0 + 440);
  if (v22)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v43 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = sub_10000598C(0, (unint64_t *)&unk_1004C0670, MPCPlayerCommandStatus_ptr);
    v28 = swift_bridgeObjectRetain();
    v29 = (char *)Array.description.getter(v28, v27);
    v31 = v30;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v25 + 4) = sub_1000393D0(v29, v31, &v43);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease_n(v23, 2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "╰ ✅ Successfully performed with statuses=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 456), 2);
  }

  (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
  v42 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 320);
  v34 = *(_QWORD *)(v0 + 304);
  v33 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v35 = *(_QWORD *)(v0 + 296);
  v38 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
}

uint64_t sub_100197298()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44[2];

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v44[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_1000393D0(v16, v17, v44);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "╭ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  }

  v19 = *(_QWORD *)(v0 + 464);
  swift_errorRetain(v19);
  v20 = swift_errorRetain(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 464);
  if (v23)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v44[0] = v26;
    *(_DWORD *)v25 = 136446210;
    *(_QWORD *)(v0 + 176) = v24;
    swift_errorRetain(v24);
    v27 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v28 = (char *)String.init<A>(describing:)(v0 + 176, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_1000393D0(v28, v29, v44);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(v24);
    swift_errorRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "╰ ❌ Failed to perform command with error=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 464));
    swift_errorRelease(v24);
  }

  v31 = *(void **)(v0 + 440);
  swift_willThrow(v32);

  v34 = *(_QWORD *)(v0 + 320);
  v33 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 312);
  v38 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 264);
  v43 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v33, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001975E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  double result;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  if (a1)
  {
    v15 = qword_1004B8D20;
    v16 = a1;
    if (v15 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v17 = type metadata accessor for Logger(0);
    sub_100039D34(v17, (uint64_t)qword_1004F4AC0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v56 = a4;
      v22 = v21;
      v23 = swift_slowAlloc(32, -1);
      v57 = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v24);
      v27 = v26;
      *(_QWORD *)(v22 + 4) = sub_1000393D0(v25, v26, &v57);
      swift_bridgeObjectRelease(v27);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "╭ Commands (%{public}s)", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      v28 = v22;
      a4 = v56;
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }

    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "╰ 🔊✅ Successfully resolved specified route", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    v57 = (uint64_t)a1;
    sub_10000FD10((uint64_t)&v57, *(_QWORD *)(*(_QWORD *)(a4 + 64) + 40), &qword_1004BFC30);
    swift_continuation_throwingResume(a4);
  }
  else
  {
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v29 = type metadata accessor for Logger(0);
    sub_100039D34(v29, (uint64_t)qword_1004F4AC0);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a3, v8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc(12, -1);
      v56 = a4;
      v34 = v33;
      v35 = swift_slowAlloc(32, -1);
      v57 = v35;
      *(_DWORD *)v34 = 136446210;
      v36 = sub_100004D8C(&qword_1004C0668, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v37 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v36);
      v39 = v38;
      *(_QWORD *)(v34 + 4) = sub_1000393D0(v37, v38, &v57);
      swift_bridgeObjectRelease(v39);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "╭ Commands (%{public}s)", (uint8_t *)v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      v40 = v34;
      a4 = v56;
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }

    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "╰ 🔊❌ Failed to resolve specified route", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

    if (a2)
    {
      v50 = a2;
    }
    else
    {
      v51 = sub_1001A3650();
      v50 = swift_allocError(&_s12CommandErrorON, v51, 0, 0);
      *(_OWORD *)v52 = 0u;
      *(_OWORD *)(v52 + 16) = 0u;
      *(_QWORD *)(v52 + 32) = 0;
      *(_BYTE *)(v52 + 40) = 2;
    }
    v53 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v54 = swift_allocError(v53, &protocol self-conformance witness table for Error, 0, 0);
    *v55 = v50;
    swift_errorRetain(a2);
    return swift_continuation_throwingResumeWithError(a4, v54);
  }
  return result;
}

uint64_t sub_100197B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  void *v6;
  uint64_t v7;
  _QWORD v9[5];
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v3 = sub_1000057B4(&qword_1004C06D8);
  v4 = sub_1000057B4(&qword_1004C0680);
  if (swift_dynamicCast(v9, v10, v3, v4, 6))
  {
    sub_10000970C(v9);
    KeyPath = swift_getKeyPath(&unk_1003D0768);
    v6 = &unk_1003D0790;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_1003D0D28);
    v6 = &unk_1003D0D50;
  }
  v7 = swift_getKeyPath(v6);
  static Published.subscript.getter(v9, v2, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  return v9[0];
}

uint64_t Player.prepareForBufferedAirPlay()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1[54] = v0;
  v1[55] = *v0;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v1[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[57] = v3;
  v1[58] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[59] = v5;
  v1[60] = v6;
  return swift_task_switch(sub_100197C6C, v5, v6);
}

uint64_t sub_100197C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __n128 v17;
  id v19;
  _UNKNOWN **v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 432);
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v3 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter((_QWORD *)(v0 + 424), v1, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v4 = swift_release(v3).n128_u64[0];
  v5 = *(void **)(v0 + 424);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 488) = v6;

  if (!v6)
  {
    v11 = *(_QWORD *)(v0 + 432);
    swift_release(*(_QWORD *)(v0 + 464));
    v12 = swift_getKeyPath(&unk_1003D0720);
    v13 = swift_getKeyPath(&unk_1003D0748);
    static Published.subscript.getter((_QWORD *)(v0 + 408), v11, v12, v13);
    swift_release(v12);
    swift_release(v13);
    v14 = *(_QWORD *)(v0 + 408);
    v15 = sub_1001A22D4();
    swift_allocError(&type metadata for Player.BufferedAirPlayError, v15, 0, 0);
    *v16 = v14;
    swift_willThrow(v17);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {
    v10 = *(_QWORD *)(v0 + 464);
    goto LABEL_7;
  }
  v8 = (void *)v7;
  v9 = v6;
  if ((objc_msgSend(v8, "isDeviceRoute") & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 464);

LABEL_7:
    swift_release(v10);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(id))(v0 + 8))(v6);
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
  v20 = CAStateController_ptr;
  v21 = objc_allocWithZone((Class)MPAVRoutingController);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "initWithDataSource:name:", v19, v22);
  *(_QWORD *)(v0 + 496) = v23;

  if (qword_1004B8D20 != -1)
    swift_once(&qword_1004B8D20, sub_10018F7F4);
  v24 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 504) = sub_100039D34(v24, (uint64_t)qword_1004F4AC0);
  v25 = v9;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v41 = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = v25;
    v31 = objc_msgSend(v30, "description");
    v32 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    *(_QWORD *)(v28 + 4) = sub_1000393D0(v32, v34, &v41);
    swift_bridgeObjectRelease(v34);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "🚏 Switching to buffered AirPlay onto route=%{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v35 = v29;
    v20 = CAStateController_ptr;
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v36 = *(_QWORD *)(v0 + 432);
  v37 = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  *(_QWORD *)(v0 + 512) = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  v38 = *(void **)(v36 + v37);
  *(_QWORD *)(v36 + v37) = v23;
  v39 = v23;

  v40 = (void *)objc_opt_self(v20[53]);
  *(_QWORD *)(v0 + 520) = v40;
  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_1001980E0;
  *(_QWORD *)(v0 + 352) = swift_continuation_init(v0 + 144, 1);
  *(_QWORD *)(v0 + 320) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 328) = 0x40000000;
  *(_QWORD *)(v0 + 336) = sub_1000C3E88;
  *(_QWORD *)(v0 + 344) = &unk_100479A38;
  objc_msgSend(v40, "setActiveRoute:completion:", 0, v0 + 320);
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_1001980E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 528) = v2;
  if (v2)
    v3 = sub_100198B34;
  else
    v3 = sub_10019813C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_10019813C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v2 = v0[61];
  v1 = (void *)v0[62];
  v0[2] = v0;
  v0[3] = sub_1001981DC;
  v0[49] = swift_continuation_init(v0 + 2, 1);
  v0[45] = _NSConcreteStackBlock;
  v0[46] = 0x40000000;
  v0[47] = sub_1000C3E88;
  v0[48] = &unk_100479A50;
  objc_msgSend(v1, "selectRoute:operation:completion:", v2, 0, v0 + 45);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1001981DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 536) = v2;
  if (v2)
    v3 = sub_100198D94;
  else
    v3 = sub_100198238;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_100198238(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 544) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_1001982A0, v4, v6);
}

uint64_t sub_1001982A0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = (void *)v0[65];
  v0[15] = v0 + 50;
  v0[10] = v0;
  v0[11] = sub_100198384;
  v2 = swift_continuation_init(v0 + 10, 1);
  v3 = swift_allocObject(&unk_100479A78, 24, 7);
  *(_QWORD *)(v3 + 16) = v2;
  v0[38] = sub_1001A2328;
  v0[39] = v3;
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 1107296256;
  v0[36] = sub_1000148C8;
  v0[37] = &unk_100479A90;
  v4 = _Block_copy(v0 + 34);
  swift_release(v0[39]);
  objc_msgSend(v1, "getActiveRouteWithTimeout:completion:", v4, 2.0);
  _Block_release(v4);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_100198384(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_100198628;
  }
  else
  {
    v7 = v2[68];
    v2[70] = v2[50];
    swift_release(v7);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_100198400;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100198400()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v1 = Logger.logObject.getter(*(id *)(v0 + 560));
  v2 = static os_log_type_t.default.getter(v1);
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 560);
  if (v3)
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v20 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v4;
    v8 = objc_msgSend(v7, "description");
    v9 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v5 + 4) = sub_1000393D0(v9, v11, &v20);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "🚏 Awaiting updated player response for route=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(id *)(v0 + 560);
  swift_retain(v13);
  sub_10019C188(v14);

  swift_release(v13);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  v16 = swift_retain(v13);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_100479AC8, 40, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v13;
  *(_QWORD *)(v0 + 568) = sub_1000E6084(v12, (uint64_t)&unk_1004BFD48, (uint64_t)v18);
  return swift_task_switch(sub_1001986BC, 0, 0);
}

uint64_t sub_100198628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 464));
  swift_release(v1);
  v4 = *(void **)(v3 + v2);
  v5 = *(void **)(v0 + 496);
  if (v4 && v5 == v4)
  {
    v6 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v6 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001986BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[71];
  v0[26] = v0;
  v0[27] = sub_100198710;
  v2 = swift_continuation_init(v0 + 26, 1);
  sub_10019ED64(v2, v1, 5.0);
  return swift_continuation_await(v0 + 26);
}

uint64_t sub_100198710(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 576) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_100198950;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_10019877C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10019877C()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(void **)(v0 + 560);
  swift_release(*(_QWORD *)(v0 + 464));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(void **)(v0 + 560);
  if (v4)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v21 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v21);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_1000393D0(v11, v13, &v21);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "🚏✅ Successfully switched to buffered AirPlay onto route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  swift_release(v5);

  v14 = *(_QWORD *)(v0 + 512);
  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(void **)(v15 + v14);
  v17 = *(void **)(v0 + 496);
  if (v16)
  {
    v18 = *(void **)(v0 + 488);
    if (v17 == v16)
    {
      *(_QWORD *)(v15 + v14) = 0;

    }
  }
  else
  {
    v18 = *(void **)(v0 + 488);
  }

  v19 = *(_QWORD *)(v0 + 560);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_100198950()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v22;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 568));
  swift_release(v2);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(void **)(v0 + 560);
  if (v5)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v22);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_1000393D0(v11, v13, &v22);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🚏❌ Timed out waiting for a valid ReplaceCommand on route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 560);
  v15 = *(_QWORD *)(v0 + 512);
  v16 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v17);

  v18 = *(void **)(v16 + v15);
  v19 = *(void **)(v0 + 496);
  if (v18 && v19 == v18)
  {
    v20 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v20 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100198B34()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  v1 = swift_release(*(_QWORD *)(v0 + 464));
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(void **)(v0 + 488);
  swift_willThrow(v1);
  v4 = v3;
  swift_errorRetain(v2);
  v5 = v4;
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_1000393D0(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v2;
    swift_errorRetain(v2);
    v17 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_1000393D0(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🚏❌ Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100198D94()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  v1 = swift_release(*(_QWORD *)(v0 + 464));
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(void **)(v0 + 488);
  swift_willThrow(v1);
  v4 = v3;
  swift_errorRetain(v2);
  v5 = v4;
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_1000393D0(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v2;
    swift_errorRetain(v2);
    v17 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_1000393D0(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🚏❌ Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100198FF4(void *a1, uint64_t a2)
{
  id v3;
  double result;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  if (a1)
  {
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    v3 = a1;
    swift_continuation_throwingResume(a2);
  }
  else
  {
    v5 = sub_1001A22D4();
    v6 = swift_allocError(&type metadata for Player.BufferedAirPlayError, v5, 0, 0);
    *v7 = 1;
    v8 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v9 = swift_allocError(v8, &protocol self-conformance witness table for Error, 0, 0);
    *v10 = v6;
    return swift_continuation_throwingResumeWithError(a2, v9);
  }
  return result;
}

uint64_t sub_10019908C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v4[7] = a4;
  v5 = sub_1000057B4(&qword_1004BFD70);
  v4[8] = v5;
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004C05E8);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004C05F0);
  v4[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[14] = v9;
  v4[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[16] = v10;
  v4[17] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[18] = v12;
  v4[19] = v13;
  return swift_task_switch(sub_10019917C, v12, v13);
}

uint64_t sub_10019917C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  swift_beginAccess(v0[7] + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v0 + 2, 33, 0);
  v6 = sub_1000057B4((uint64_t *)&unk_1004BF850);
  Published.projectedValue.getter(v6);
  swift_endAccess(v0 + 2);
  v7 = sub_10004FFFC((unint64_t *)&qword_1004BF4F0, &qword_1004BFD70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  AsyncPublisher.init(_:)(v4, v5, v7);
  AsyncPublisher.makeAsyncIterator()(v3);
  v8.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[20] = static MainActor.shared.getter(v8);
  v9 = sub_10004FFFC(&qword_1004C05F8, &qword_1004C05F0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[21] = v10;
  *v10 = v0;
  v10[1] = sub_1001992C8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 5, v0[13], v9);
}

uint64_t sub_1001992C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001995B0;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_10019938C;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_10019938C()
{
  _QWORD *v0;

  swift_release(v0[20]);
  v0[23] = v0[5];
  return swift_task_switch(sub_1001993CC, v0[18], v0[19]);
}

uint64_t sub_1001993CC(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t result;
  uint64_t (*v4)(void);
  id v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = *(void **)(v1 + 184);
  if (v2 == (void *)1)
  {
    v15 = *(_QWORD *)(v1 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 112) + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 104));
    swift_release(v15);
    goto LABEL_9;
  }
  if (!v2)
    goto LABEL_11;
  result = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
  if (result)
  {
    v4 = *(uint64_t (**)(void))(result + 16);
    v5 = v2;
    v6 = v4();
    sub_10001BB5C(v2);
    if ((v6 & 1) != 0
      && (v7 = objc_msgSend(v5, "playerPath"),
          v8 = objc_msgSend(v7, "route"),
          v7,
          v8))
    {
      v9 = *(void **)(v1 + 184);
      v10 = objc_msgSend(v8, "isDeviceRoute");
      sub_10001BB5C(v9);

      if (v10)
      {
        v12 = *(_QWORD *)(v1 + 112);
        v11 = *(_QWORD *)(v1 + 120);
        v13 = *(_QWORD *)(v1 + 104);
        v14 = swift_release(*(_QWORD *)(v1 + 136));
        (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v11, v13, v14);
LABEL_9:
        v16 = *(_QWORD *)(v1 + 96);
        v17 = *(_QWORD *)(v1 + 72);
        swift_task_dealloc(*(_QWORD *)(v1 + 120));
        swift_task_dealloc(v16);
        swift_task_dealloc(v17);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
    }
    else
    {
      sub_10001BB5C(*(id *)(v1 + 184));
    }
LABEL_11:
    *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
    v18 = sub_10004FFFC(&qword_1004C05F8, &qword_1004C05F0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 168) = v19;
    *v19 = v1;
    v19[1] = sub_1001992C8;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 40, *(_QWORD *)(v1 + 104), v18);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001995B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 176);
  v1 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  v2 = swift_dynamicCast(v1, v0 + 48, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

double sub_100199610(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  __n128 v14;
  _DWORD *v15;
  _BYTE v16[24];

  v2 = v1;
  v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  *(_QWORD *)&result = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v16, 0, 0).n128_u64[0];
  if (*v4 != a1)
  {
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100039D34(v6, (uint64_t)qword_1004F4AC0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "╭ Updated Engine State", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = swift_retain_n(v2, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v15 = (_DWORD *)swift_slowAlloc(12, -1);
      swift_slowAlloc(32, -1);
      *v15 = 136446210;
      __asm { BR              X10 }
    }
    swift_release_n(v2, 2, v14);

    __asm { BR              X10 }
  }
  return result;
}

uint64_t Player.engineState.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v3, 0, 0);
  return *v1;
}

uint64_t Player.EngineState.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100199B08 + 4 * byte_1003D070C[a1]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_100199B08()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_100199B2C()
{
  return 0x6461655220859CE2;
}

uint64_t sub_100199B48()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_100199B6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100199B9C + 4 * byte_1003D0710[*v0]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_100199B9C()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_100199BC0()
{
  return 0x6461655220859CE2;
}

uint64_t sub_100199BDC()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_100199C00()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D0D28);
  v2 = swift_getKeyPath(&unk_1003D0D50);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

char *sub_100199C70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v13;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_1003D0720);
    v6 = swift_getKeyPath(&unk_1003D0748);
    static Published.subscript.getter(&v13, v4, KeyPath, v6);
    swift_release(v6);
    swift_release(KeyPath);
    v7 = v13;
    v8 = swift_allocObject(&unk_1004798B8, 24, 7);
    swift_weakInit(v8 + 16, v4);
    objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    swift_retain(v4);
    v9 = sub_10019CE7C(0x6B63616279616C50, (void *)0xEF646E616D6D6F43, v7, (uint64_t)sub_1001A3160, v8, (uint64_t)sub_1001A3168, v4);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

double sub_100199DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)(sub_1001A31BC);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_100199E78(uint64_t a1, id a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  _BYTE v14[24];

  v5 = objc_msgSend(a2, "playerPath");
  if (v5)
  {
    v6 = v5;
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v14, 33, 0);
    v7 = sub_1001A0724((unint64_t)v6);
    swift_endAccess(v14);

    if (v7)
    {
      if (qword_1004B8D20 != -1)
        swift_once(&qword_1004B8D20, sub_10018F7F4);
      v8 = type metadata accessor for Logger(0);
      v9 = sub_100039D34(v8, (uint64_t)qword_1004F4AC0);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "| Cancelling ongoing timer for switching back to system route", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      swift_getObjectType();
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease(v7);
    }
    v13 = a3;
    sub_1001A2E44(a3);

  }
  else
  {
    __break(1u);
  }
}

void sub_10019A000(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v3 = objc_msgSend(a1, "playerPath");
  if (v3)
  {
    v4 = v3;
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v5 = type metadata accessor for Logger(0);
    sub_100039D34(v5, (uint64_t)qword_1004F4AC0);
    swift_errorRetain(a2);
    v6 = swift_errorRetain(a2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v29 = v10;
      *(_DWORD *)v9 = 136446210;
      v28 = a2;
      swift_errorRetain(a2);
      v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      v12 = (char *)String.init<A>(describing:)(&v28, v11);
      v14 = v13;
      *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v13, &v29);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "╭ Player Response failed to load with error=%{public}s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v15 = (void *)_convertErrorToNSError(_:)(a2);
    v16 = sub_10019A370();

    if ((v16 & 1) != 0)
    {
      __chkstk_darwin(v17);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_1001A3170);

    }
    else
    {
      v18 = v4;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v29 = v22;
        *(_DWORD *)v21 = 136446210;
        v23 = v18;
        v24 = objc_msgSend(v23, "description");
        v25 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        *(_QWORD *)(v21 + 4) = sub_1000393D0(v25, v27, &v29);
        swift_bridgeObjectRelease(v27);

        _os_log_impl((void *)&_mh_execute_header, v19, v20, "╰ playerPath=%{public}s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10019A370()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;

  v1 = v0;
  v2 = objc_msgSend(v0, "domain");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = objc_msgSend(v1, "code");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPAVRouteConnectionErrorDomain);
  if (v7 == v3 && v8 == v5)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    if (v6 == (id)2)
      return 1;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) != 0 && v6 == (id)2)
      return 1;
  }
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v13 = objc_msgSend(v1, "userInfo");
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
  v17 = v16;
  if (*(_QWORD *)(v14 + 16) && (v18 = sub_1000277A0(v15, v16), (v19 & 1) != 0))
  {
    sub_10000990C(*(_QWORD *)(v14 + 56) + 32 * v18, (uint64_t)&v43);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    if (*((_QWORD *)&v44 + 1))
    {
      v20 = sub_1000057B4(&qword_1004BE0B8);
      if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v20, 6) & 1) != 0)
        sub_1000AAB50((uint64_t)v42);
      goto LABEL_16;
    }
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
  }
  sub_10000FE2C((uint64_t)&v43, &qword_1004BE030);
LABEL_16:
  v21 = objc_msgSend(v1, "userInfo");
  v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v25 = v24;
  if (*(_QWORD *)(v22 + 16) && (v26 = sub_1000277A0(v23, v24), (v27 & 1) != 0))
  {
    sub_10000990C(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  if (*((_QWORD *)&v44 + 1))
  {
    v28 = sub_10000598C(0, (unint64_t *)&qword_1004BE0B0, NSError_ptr);
    if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v29 = v42;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

    }
  }
  else
  {
    sub_10000FE2C((uint64_t)&v43, &qword_1004BE030);
  }
  v33 = v45;
  if (v45 >> 62)
    goto LABEL_44;
  v34 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v45, 2);
  if (v34)
  {
    while (1)
    {
      v35 = (v33 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33)
          : *(id *)(v33 + 32);
      v36 = v35;
      if ((sub_10019A370() & 1) != 0)
        break;

      if (v34 != 1)
      {
        v37 = 5;
        while (1)
        {
          v38 = (v33 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v33)
              : *(id *)(v33 + 8 * v37);
          v36 = v38;
          v39 = v37 - 3;
          if (__OFADD__(v37 - 4, 1))
            break;
          if ((sub_10019A370() & 1) != 0)
            goto LABEL_31;

          ++v37;
          if (v39 == v34)
            goto LABEL_40;
        }
        __break(1u);
LABEL_44:
        v41 = v33 < 0 ? v33 : v33 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v33, 2);
        v34 = _CocoaArrayWrapper.endIndex.getter(v41);
        if (v34)
          continue;
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n(v33, 2);

    v12 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n(v33, 2);
    v12 = 0;
  }
  swift_bridgeObjectRelease(v33);
  return v12;
}

uint64_t sub_10019A794(void *a1, char *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _DWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint8_t *v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t result;
  NSObject *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t ObjectType;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t);
  uint64_t v79;
  char *v80;
  void (*v81)(_QWORD *, uint64_t);
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  char *v106;
  uint64_t aBlock[5];
  uint64_t v108;
  char v109[24];
  char v110[32];

  v97 = type metadata accessor for DispatchTimeInterval(0);
  v4 = *(uint64_t **)(v97 - 8);
  v5 = __chkstk_darwin(v97);
  v105 = (uint64_t *)((char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v104 = (uint64_t *)((char *)&v88 - v7);
  v103 = type metadata accessor for DispatchTime(0);
  v101 = *(_QWORD *)(v103 - 8);
  v8 = __chkstk_darwin(v103);
  v100 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v102 = (char *)&v88 - v10;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v99 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8D20 != -1)
    swift_once(&qword_1004B8D20, sub_10018F7F4);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100039D34(v16, (uint64_t)qword_1004F4AC0);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v91 = v4;
    v22 = (_DWORD *)v21;
    v88 = v21;
    v89 = swift_slowAlloc(32, -1);
    aBlock[0] = v89;
    *v22 = 136446210;
    v23 = v18;
    v90 = v17;
    v106 = a2;
    v24 = v23;
    v25 = v12;
    v26 = objc_msgSend(v23, "description");
    v27 = v18;
    v28 = v11;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v31 = v30;

    v12 = v25;
    v32 = (char *)v29;
    v11 = v28;
    v18 = v27;
    v33 = sub_1000393D0(v32, v31, aBlock);
    v34 = (uint8_t *)v88;
    *(_QWORD *)(v88 + 4) = v33;
    swift_bridgeObjectRelease(v31);

    a2 = v106;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "| Invalid playerPath=%{public}s", v34, 0xCu);
    v35 = v89;
    swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v36 = v34;
    v4 = v91;
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {

  }
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "╰ Stalling engine while attempting to reload", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

  v41 = &a2[OBJC_IVAR____TtC9MusicCore6Player_engineState];
  v42 = swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_engineState], v110, 1, 0);
  v43 = *v41;
  *v41 = 3;
  sub_100199610(v43, v42);
  v44 = (uint64_t *)&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers], v109, 0, 0);
  v45 = *v44;
  v46 = v18;
  swift_bridgeObjectRetain();
  v47 = sub_10018F66C(v46, v45);
  swift_bridgeObjectRelease(v45);

  result = swift_unknownObjectRelease(v47);
  if (!v47)
  {
    v91 = v44;
    v106 = a2;
    v49 = Logger.logObject.getter(result);
    v50 = static os_log_type_t.default.getter(v49);
    if (os_log_type_enabled(v49, (os_log_type_t)v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v50, "╰ Switching back to system route in 5seconds.", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    sub_10000598C(0, &qword_1004C0580, OS_dispatch_source_ptr);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v52 = sub_100004D8C(&qword_1004BE638, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v53 = sub_1000057B4(&qword_1004BE640);
    v54 = sub_10004FFFC(&qword_1004BE648, &qword_1004BE640, (uint64_t)&protocol conformance descriptor for [A]);
    v55 = v92;
    v56 = v53;
    v57 = v94;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v56, v54, v94, v52);
    v58 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
    v66 = (void *)static OS_dispatch_queue.main.getter(v58, v59, v60, v61, v62, v63, v64, v65, v88, v89, v90, v91, v92, v93, v94);
    v67 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v55, v66);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v55, v57);
    v90 = v67;
    ObjectType = swift_getObjectType();
    v69 = swift_allocObject(&unk_1004798B8, 24, 7);
    swift_weakInit(v69 + 16, v106);
    v70 = swift_allocObject(&unk_100479EA8, 32, 7);
    *(_QWORD *)(v70 + 16) = v69;
    *(_QWORD *)(v70 + 24) = v46;
    aBlock[4] = (uint64_t)sub_1001A31B4;
    v108 = v70;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100011FD0;
    aBlock[3] = (uint64_t)&unk_100479EC0;
    v71 = _Block_copy(aBlock);
    v106 = (char *)v46;
    swift_retain(v69);
    v72 = v95;
    static DispatchQoS.unspecified.getter(v73);
    v74 = v99;
    v94 = ObjectType;
    sub_10018F740();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v72, v74, v71, ObjectType);
    _Block_release(v71);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v74, v11);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v72, v98);
    swift_release(v108);
    swift_release(v69);
    v75 = v100;
    static DispatchTime.now()(v76);
    v77 = v104;
    *v104 = 5;
    v78 = (void (*)(_QWORD *, _QWORD, uint64_t))v4[13];
    v79 = v97;
    v78(v77, enum case for DispatchTimeInterval.seconds(_:), v97);
    v80 = v102;
    + infix(_:_:)(v75, v77);
    v81 = (void (*)(_QWORD *, uint64_t))v4[1];
    v81(v77, v79);
    v82 = *(void (**)(char *, uint64_t))(v101 + 8);
    v83 = v103;
    v82(v75, v103);
    v78(v77, enum case for DispatchTimeInterval.never(_:), v79);
    v84 = v105;
    *v105 = 0;
    v78(v84, enum case for DispatchTimeInterval.nanoseconds(_:), v79);
    v85 = v90;
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v80, v77, v84, v94);
    v81(v84, v79);
    v81(v77, v79);
    v82(v80, v83);
    OS_dispatch_source.resume()();
    swift_beginAccess(v91, aBlock, 33, 0);
    v86 = v106;
    v87 = swift_unknownObjectRetain(v85);
    sub_1001A09B4(v87, v86);
    swift_endAccess(aBlock);

    return swift_unknownObjectRelease(v85);
  }
  return result;
}

void sub_10019B01C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  id v26;
  void *v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v28, 33, 0);
    v6 = a2;
    v7 = sub_1001A0724((unint64_t)v6);
    swift_endAccess(v28);

    swift_release(v5);
    swift_unknownObjectRelease(v7);
  }
  swift_beginAccess(v3, v28, 0, 0);
  v8 = swift_weakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    KeyPath = swift_getKeyPath(&unk_1003D0720);
    v11 = swift_getKeyPath(&unk_1003D0748);
    static Published.subscript.getter(&v27, v9, KeyPath, v11);
    swift_release(v11);
    swift_release(KeyPath);
    swift_release(v9);
    v12 = v27;
    sub_10000598C(0, &qword_1004BC808, MPCPlayerPath_ptr);
    v13 = a2;
    LOBYTE(v9) = static NSObject.== infix(_:_:)(v13, v12);

    if ((v9 & 1) != 0)
    {
      if (qword_1004B8D20 != -1)
        swift_once(&qword_1004B8D20, sub_10018F7F4);
      v14 = type metadata accessor for Logger(0);
      sub_100039D34(v14, (uint64_t)qword_1004F4AC0);
      v15 = v13;
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        v27 = (void *)v19;
        *(_DWORD *)v18 = 136446210;
        v20 = v15;
        v21 = objc_msgSend(v20, "description");
        v22 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        *(_QWORD *)(v18 + 4) = sub_1000393D0(v22, v24, (uint64_t *)&v27);
        swift_bridgeObjectRelease(v24);

        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Engine stalled for too long trying to resolve playerPath=%{public}s. Switching back to system route.", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);
      }
      else
      {

      }
      v25 = (void *)objc_opt_self(MPAVRoutingController);
      v26 = objc_msgSend(v25, "systemRoute");
      objc_msgSend(v25, "setActiveRoute:completion:", v26, 0);

    }
  }
}

char *sub_10019B328()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  id v22;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_1003D0720);
    v6 = swift_getKeyPath(&unk_1003D0748);
    static Published.subscript.getter(&v22, v4, KeyPath, v6);
    swift_release(v6);
    *(_QWORD *)&v7 = swift_release(KeyPath).n128_u64[0];
    v8 = v22;
    v9 = objc_msgSend(v22, "route", v7);

    if (!v9)
      v9 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
    v10 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_1004B8CF8 != -1)
      swift_once(&qword_1004B8CF8, sub_10017052C);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "systemMusicPathWithRoute:playerID:", v9, v11);

    if (objc_msgSend(v9, "isDeviceRoute"))
      v13 = v12;
    else
      v13 = objc_msgSend(v10, "pathWithRoute:bundleID:playerID:", v9, 0, 0);
    v14 = v13;

    v15 = swift_allocObject(&unk_1004798B8, 24, 7);
    swift_weakInit(v15 + 16, v4);
    v16 = swift_allocObject(&unk_1004798B8, 24, 7);
    swift_weakInit(v16 + 16, v4);
    v17 = objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    v18 = sub_10019CE7C(0x6979616C50776F4ELL, (void *)0xEA0000000000676ELL, v14, (uint64_t)sub_1001A3328, v15, (uint64_t)sub_1001A3330, v16);
    v19 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v18;
    v3 = v18;

    v2 = 0;
  }
  v20 = v2;
  return v3;
}

double sub_10019B578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1001A3338);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10019B64C(id a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  id v36;
  id v37;
  int v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  id v47;
  unsigned __int8 v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v61;
  uint64_t v62;
  id v63;

  if (a1)
    v6 = objc_msgSend(a1, "tracklist");
  else
    v6 = 0;
  KeyPath = swift_getKeyPath(&unk_1003D0768);
  v8 = swift_getKeyPath(&unk_1003D0790);
  static Published.subscript.getter(&v63, a2, KeyPath, v8);
  swift_release(v8);
  *(_QWORD *)&v9 = swift_release(KeyPath).n128_u64[0];
  v10 = v63;
  if (!v63)
  {
    if (!v6)
      goto LABEL_18;
LABEL_11:
    v11 = v6;
    goto LABEL_13;
  }
  v11 = objc_msgSend(v63, "tracklist", v9);

  if (v6)
  {
    if (v11)
    {
      sub_10000598C(0, &qword_1004C0600, MPCPlayerResponseTracklist_ptr);
      v12 = v6;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if ((v13 & 1) == 0)
      {
        if (!a1)
          goto LABEL_19;
        goto LABEL_14;
      }
LABEL_18:
      if (a1)
        goto LABEL_34;
      goto LABEL_19;
    }
    goto LABEL_11;
  }
  if (!v11)
    goto LABEL_18;
LABEL_13:

  if (!a1)
  {
LABEL_19:
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100039D34(v28, (uint64_t)qword_1004F4AC0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "╭ Nil Now Playing Response", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    goto LABEL_30;
  }
LABEL_14:
  v62 = a2;
  v14 = qword_1004B8D20;
  v15 = a1;
  if (v14 != -1)
    swift_once(&qword_1004B8D20, sub_10018F7F4);
  v16 = type metadata accessor for Logger(0);
  sub_100039D34(v16, (uint64_t)qword_1004F4AC0);
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v21 = (void *)swift_slowAlloc(32, -1);
    v63 = v21;
    *(_DWORD *)v20 = 136446210;
    v61 = a3;
    v22 = objc_msgSend(v17, "tracklist");
    v23 = objc_msgSend(v22, "uniqueIdentifier");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = (char *)v24;
    a3 = v61;
    *(_QWORD *)(v20 + 4) = sub_1000393D0(v27, v26, (uint64_t *)&v63);
    swift_bridgeObjectRelease(v26);

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "╭ Received Now Playing response with tracklistID=%{public}s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {

  }
  v30 = v17;
  v33 = Logger.logObject.getter(v30);
  v34 = static os_log_type_t.default.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc(8, -1);
    *(_DWORD *)v35 = 67240192;
    v36 = -[NSObject playerPath](v30, "playerPath");
    v37 = objc_msgSend(v36, "representedBundleID");

    if (v37)
    {

      v38 = 1;
    }
    else
    {
      v38 = 0;
    }
    *(_DWORD *)(v35 + 4) = v38;

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "| is Music App=%{BOOL,public}d", (uint8_t *)v35, 8u);
    swift_slowDealloc(v35, -1, -1);

    a2 = v62;
  }
  else
  {

    v30 = v33;
    a2 = v62;
  }
LABEL_30:

  if (qword_1004B8D20 != -1)
    swift_once(&qword_1004B8D20, sub_10018F7F4);
  v39 = type metadata accessor for Logger(0);
  sub_100039D34(v39, (uint64_t)qword_1004F4AC0);
  v40 = a3;
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc(12, -1);
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v43 = 138543362;
    v45 = objc_msgSend(v40, "playerPath");
    *(_QWORD *)(v43 + 4) = v45;
    *v44 = v45;

    _os_log_impl((void *)&_mh_execute_header, v41, v42, "╰ playerPath=%{public}@", (uint8_t *)v43, 0xCu);
    v46 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v44, 1, v46);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v43, -1, -1);

    if (a1)
      goto LABEL_34;
LABEL_40:
    v56 = swift_getKeyPath(&unk_1003D0768);
    v57 = swift_getKeyPath(&unk_1003D0790);
    v63 = 0;
    swift_retain(a2);
    static Published.subscript.setter(&v63, a2, v56, v57);
    v55 = 0;
    goto LABEL_41;
  }

  if (!a1)
    goto LABEL_40;
LABEL_34:
  v47 = objc_msgSend(a1, "playerPath");
  v48 = objc_msgSend(v47, "isSystemMusicPath");

  if ((v48 & 1) != 0
    || (v49 = objc_msgSend(a1, "playerPath"),
        v50 = objc_msgSend(v49, "representedBundleID"),
        v49,
        !v50))
  {
    v52 = a1;
    v51 = a1;
  }
  else
  {

    v51 = 0;
  }
  v53 = swift_getKeyPath(&unk_1003D0768);
  v54 = swift_getKeyPath(&unk_1003D0790);
  v63 = v51;
  swift_retain(a2);
  static Published.subscript.setter(&v63, a2, v53, v54);
  v55 = objc_msgSend(a1, "playerPath");
LABEL_41:
  v58 = swift_getKeyPath(&unk_1003D07B0);
  v59 = swift_getKeyPath(&unk_1003D07D8);
  v63 = v55;
  swift_retain(a2);
  return static Published.subscript.setter(&v63, a2, v58, v59);
}

void sub_10019BD74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    if (qword_1004B8D20 != -1)
      swift_once(&qword_1004B8D20, sub_10018F7F4);
    v8 = type metadata accessor for Logger(0);
    sub_100039D34(v8, (uint64_t)qword_1004F4AC0);
    swift_errorRetain(a2);
    v9 = swift_errorRetain(a2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v25 = a2;
      v26 = v13;
      *(_DWORD *)v12 = 136446210;
      swift_errorRetain(a2);
      v14 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      v15 = (char *)String.init<A>(describing:)(&v25, v14);
      v17 = v16;
      *(_QWORD *)(v12 + 4) = sub_1000393D0(v15, v16, &v26);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "╭ Now Playing failed to load with error=%{public}s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v18 = a1;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v22 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v21 = 138543362;
      v23 = objc_msgSend(v18, "playerPath");
      *(_QWORD *)(v21 + 4) = v23;
      *v22 = v23;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "╰ playerPath=%{public}@", (uint8_t *)v21, 0xCu);
      v24 = sub_1000057B4(&qword_1004C0DB0);
      swift_arrayDestroy(v22, 1, v24);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_release(v7);
    }
    else
    {

      swift_release(v7);
    }
  }
}

void sub_10019C038(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v3 = *v1;
  v4 = swift_allocObject(&unk_10047A038, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  if (a1)
  {
    swift_retain(v1);
    v9 = a1;
    sub_10019C188();
    swift_release(v4);

  }
  else
  {
    v5 = (void *)objc_opt_self(MPAVRoutingController);
    v6 = swift_allocObject(&unk_10047A060, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_1001A4228;
    *(_QWORD *)(v6 + 24) = v4;
    aBlock[4] = sub_1001A422C;
    v11 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000148C8;
    aBlock[3] = &unk_10047A078;
    v7 = _Block_copy(aBlock);
    v8 = v11;
    swift_retain(v1);
    swift_retain(v4);
    swift_release(v8);
    objc_msgSend(v5, "getActiveRouteWithTimeout:completion:", v7, 1.0);
    swift_release(v4);
    _Block_release(v7);
  }
}

void sub_10019C188(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1004B8D20 != -1)
    swift_once(&qword_1004B8D20, sub_10018F7F4);
  v2 = type metadata accessor for Logger(0);
  sub_100039D34(v2, (uint64_t)qword_1004F4AC0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v14 = v13;
    *(_DWORD *)v6 = 136446210;
    v7 = v3;
    v8 = objc_msgSend(v7, "description");
    v9 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v6 + 4) = sub_1000393D0(v9, v11, &v14);
    swift_bridgeObjectRelease(v11);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Updating playerPaths with route=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  __chkstk_darwin(v12);
  UnfairLock.locked<A>(_:)(sub_1001A3590);
}

void sub_10019C394(uint64_t a1, void *a2)
{
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;

  v4 = sub_10019B328();
  v5 = *(id *)&v4[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path];

  v6 = objc_msgSend(v5, "route");
  if (!v6)
    goto LABEL_5;
  sub_10000598C(0, &qword_1004C0658, MPAVRoute_ptr);
  v7 = a2;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
    goto LABEL_5;
  v10 = objc_msgSend(v8, "connection");
  if (!v10 || (v11 = v10, v12 = objc_msgSend(v10, "isInvalidated"), v11, (v12 & 1) == 0))
  {

  }
  else
  {
LABEL_5:
    v13 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_1004B8CF8 != -1)
      swift_once(&qword_1004B8CF8, sub_10017052C);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "systemMusicPathWithRoute:playerID:", a2, v14);

    if (objc_msgSend(a2, "isDeviceRoute"))
      v16 = v15;
    else
      v16 = objc_msgSend(v13, "pathWithRoute:bundleID:playerID:", a2, 0, 0);
    v17 = v16;
    KeyPath = swift_getKeyPath(&unk_1003D0720);
    v19 = swift_getKeyPath(&unk_1003D0748);
    v33 = v15;
    v20 = v15;
    swift_retain(a1);
    static Published.subscript.setter(&v33, a1, KeyPath, v19);
    sub_1001914C4();
    v21 = sub_10019B328();
    v22 = v17;
    sub_10019D118(v22);

    v23 = (void *)_MPAVRouteConnectionDidInvalidateNotification;
    v24 = swift_allocObject(&unk_1004798B8, 24, 7);
    swift_weakInit(v24 + 16, a1);
    v25 = type metadata accessor for NotificationObserver();
    swift_allocObject(v25, 64, 7);
    v26 = v20;
    v27 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v23, (uint64_t)v20, 1, 1, (uint64_t)sub_1001A1F6C, v24);
    v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = v27;
    v29 = objc_msgSend(v22, "route", swift_release(v28).n128_f64[0]);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v29, 0);
      v32 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
      objc_msgSend(v32, "setActiveDataSource:", v31);

    }
    else
    {

    }
  }
}

double sub_10019C704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10019C038(0);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_10019C75C(void *a1, void (*a2)(id))
{
  id v4;
  id v5;

  if (a1)
    v5 = a1;
  else
    v5 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v4 = a1;
  a2(v5);

}

void sub_10019C7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1003D0720);
  v3 = swift_getKeyPath(&unk_1003D0748);
  static Published.subscript.getter(&v39, v1, KeyPath, v3);
  swift_release(v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = v39;
  v6 = objc_msgSend(v39, "route", v4);

  if (v6)
  {
    objc_opt_self(MPAVEndpointRoute);
    v7 = (void *)swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
LABEL_15:

      return;
    }
    v8 = v7;
    v9 = objc_msgSend(v7, "endpointObject");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "isEligibleForHostingGroupSessionExcludingAcknowledgements");

      v12 = swift_getKeyPath(&unk_1003D0888);
      v13 = swift_getKeyPath(&unk_1003D08B0);
      LOBYTE(v39) = v11;
      swift_retain(v1);
      static Published.subscript.setter(&v39, v1, v12, v13);
      v14 = objc_msgSend(v8, "endpointObject");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "groupSessionInfo");

        if (!v16)
        {
          v24 = swift_getKeyPath(&unk_1003D07F8);
          v25 = swift_getKeyPath(&unk_1003D0820);
          static Published.subscript.getter(&v39, v1, v24, v25);
          swift_release(v25);
          swift_release(v24);
          v26 = v39;
          v27 = swift_getKeyPath(&unk_1003D07F8);
          v28 = swift_getKeyPath(&unk_1003D0820);
          v39 = 0;
          swift_retain(v1);
          static Published.subscript.setter(&v39, v1, v27, v28);
          sub_100191924(v26);
LABEL_14:

          v6 = v26;
          goto LABEL_15;
        }
        if (qword_1004B8DB0 != -1)
          swift_once(&qword_1004B8DB0, sub_1001D2B20);
        v17 = type metadata accessor for Logger(0);
        sub_100039D34(v17, (uint64_t)static Logger.sharePlayTogether);
        v18 = v6;
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc(12, -1);
          v22 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v21 = 138543362;
          *(_QWORD *)(v21 + 4) = v8;
          *v22 = v8;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Getting session from %{public}@", (uint8_t *)v21, 0xCu);
          v23 = sub_1000057B4(&qword_1004C0DB0);
          swift_arrayDestroy(v22, 1, v23);
          swift_slowDealloc(v22, -1, -1);
          swift_slowDealloc(v21, -1, -1);
        }
        else
        {

        }
        v29 = objc_msgSend(v8, "endpointObject");
        if (v29)
        {
          v30 = v29;
          v31 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSession(0));
          v6 = v16;
          sub_1001CE1BC(v6, v30);
          v33 = v32;
          v34 = swift_getKeyPath(&unk_1003D07F8);
          v35 = swift_getKeyPath(&unk_1003D0820);
          static Published.subscript.getter(&v39, v1, v34, v35);
          swift_release(v35);
          swift_release(v34);
          v26 = v39;
          v36 = swift_getKeyPath(&unk_1003D07F8);
          v37 = swift_getKeyPath(&unk_1003D0820);
          v39 = v33;
          swift_retain(v1);
          v38 = v33;
          static Published.subscript.setter(&v39, v1, v36, v37);
          sub_100191924(v26);

          goto LABEL_14;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t Player.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player__path;
  v2 = sub_1000057B4(&qword_1004BFC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver));
  v3 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BF850);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  v7 = sub_1000057B4((uint64_t *)&unk_1004BFBF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  v9 = sub_1000057B4(&qword_1004BFBF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  v11 = sub_1000057B4(&qword_1004BF240);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v0 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, v11);

  v13 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration + 8);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v5(v0 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v4);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_lock));
  return v0;
}

uint64_t Player.__deallocating_deinit()
{
  return sub_10019ED00((void (*)(void))Player.deinit);
}

uint64_t sub_10019CE40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Player(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

char *sub_10019CE7C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  Swift::String v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  objc_super v37;

  v13 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v14 = objc_allocWithZone((Class)MPCPlayerRequest);
  v15 = v7;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_automaticallyReloads] = 0;
  v16 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path] = a3;
  v17 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  v18 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onError];
  *(_QWORD *)v18 = a6;
  *((_QWORD *)v18 + 1) = a7;
  v19 = a3;
  swift_retain(a5);
  swift_retain(a7);

  v37.receiver = v15;
  v37.super_class = (Class)type metadata accessor for Player.DataSource();
  v20 = (char *)objc_msgSendSuper2(&v37, "init");
  v21 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  v22 = *(void **)&v20[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];
  v23 = v20;
  objc_msgSend(v22, "setDelegate:", v23);
  v24 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v25 = qword_1004B8D28;
  v26 = *(id *)&v23[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  if (v25 != -1)
    swift_once(&qword_1004B8D28, sub_10019D404);
  objc_msgSend(v26, "setPlayingItemProperties:", qword_1004BFBB0);

  v27 = *(void **)&v23[v24];
  objc_msgSend(v27, "setTracklistRange:", 0, 0);
  objc_msgSend(v27, "setPlayerPath:", v19);
  v28._countAndFlagsBits = a1;
  v28._object = a2;
  String.append(_:)(v28);
  v29 = v27;
  swift_bridgeObjectRelease(a2);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000001003ADF20);
  objc_msgSend(v29, "setLabel:", v30);

  v31 = *(void **)&v23[v24];
  v32 = *(id *)&v20[v21];
  v33 = v31;
  objc_msgSend(v32, "setRequest:", v33);
  swift_release(a7);
  swift_release(a5);

  return v23;
}

void sub_10019D118(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path;
  v5 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path) = a1;
  sub_10000598C(0, &qword_1004BC808, MPCPlayerPath_ptr);
  v9 = v3;
  LOBYTE(v3) = static NSObject.== infix(_:_:)(v9, v5);

  if ((v3 & 1) == 0)
  {
    v6 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller);
    v7 = objc_msgSend(v6, "request");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setPlayerPath:", *(_QWORD *)(v2 + v4));

    }
    objc_msgSend(v6, "setNeedsReloadForSignificantRequestChange");
  }

}

id sub_10019D360()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Player.DataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10019D404()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  Class isa;
  Class v14;
  id v15;
  unint64_t v16;
  id v17;
  Class v18;
  Class v19;
  id v20;
  uint64_t v21;
  _BYTE v22[136];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v0, v22);
  *(_OWORD *)(inited + 16) = xmmword_1003C6320;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylistEntry);
  *(_QWORD *)(inited + 112) = v6;
  v7 = swift_initStackObject(v0, &v21);
  *(_OWORD *)(v7 + 16) = xmmword_1003C6280;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryTVEpisode);
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryMovie);
  *(_QWORD *)(v7 + 88) = v10;
  *(_QWORD *)(v7 + 96) = objc_msgSend(v3, "emptyPropertySet");
  v11 = sub_1000B8E38(v7);
  v12 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v12, "initWithProperties:relationships:", isa, v14);

  *(_QWORD *)(inited + 120) = v15;
  v16 = sub_1000B8E38(inited);
  v17 = objc_allocWithZone((Class)MPPropertySet);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v20 = objc_msgSend(v17, "initWithProperties:relationships:", v18, v19);

  qword_1004BFBB0 = (uint64_t)v20;
}

double Player.with(_:)(void (*a1)(id *))
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double result;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;

  v3 = v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, &v18, 1, 0);
  v4 = *(void **)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v19 = *(id *)v3;
  v20 = v4;
  v21 = v5;
  v6 = v19;
  v7 = v4;
  swift_bridgeObjectRetain();
  a1(&v19);
  v8 = v19;
  v9 = v20;
  v10 = v21;
  v11 = *(id *)v3;
  v12 = *(void **)(v3 + 8);
  *(_QWORD *)v3 = v19;
  *(_QWORD *)(v3 + 8) = v9;
  *(_QWORD *)(v3 + 16) = v10;
  v13 = v8;
  v14 = v9;
  swift_bridgeObjectRetain_n(v10, 2);
  v15 = v13;
  v16 = v14;
  swift_bridgeObjectRelease();

  sub_100193084();
  swift_bridgeObjectRelease_n(v10, 2);

  *(_QWORD *)&result = swift_retain(v1).n128_u64[0];
  return result;
}

double sub_10019D7D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double result;
  char v11[24];

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1[2];
  v8 = (char *)v1 + *(_QWORD *)(v7 + 120);
  swift_beginAccess(v8, v11, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  swift_retain(v6);
  dispatch thunk of MusicPlayer.ItemState.item.setter(v5);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t MusicItemState.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t MusicItemState.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _BYTE v11[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  v5 = swift_beginAccess(v4, v11, 33, 0);
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 24))(v4, a1, v6, v5);
  v8 = swift_endAccess(v11);
  v9 = sub_10019D7D4(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, double))(v7 + 8))(a1, v6, v9);
}

double (*MusicItemState.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return sub_10019D9C0;
}

double sub_10019D9C0(uint64_t a1, char a2)
{
  uint64_t v3;
  double result;

  v3 = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_10019D7D4(v3);
  return result;
}

uint64_t property wrapper backing initializer of MusicItemState.playabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019DA08(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus);
}

uint64_t property wrapper backing initializer of MusicItemState.previewCapabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019DA08(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
}

uint64_t sub_10019DA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = a4(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, v5);
  Published.init(initialValue:)(v8, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t MusicItemState.previewCapabilityStatus.setter(uint64_t a1)
{
  return sub_10019E4A8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t)&unk_1003D0918, (uint64_t)&unk_1003D0950);
}

double sub_10019DAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10019DBBC();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_10019DB14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v10[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    MusicItemState.previewCapabilityStatus.setter((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10019DBBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  unsigned int v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(char *, char *, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  __n128 v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t, __n128);
  uint64_t v114;
  char *v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  char v119[24];
  char v120[24];
  uint64_t v121;
  uint64_t v122;

  v1 = *v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v93 - v7;
  v101 = type metadata accessor for MusicMovie(0);
  v97 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for TVEpisode(0);
  v99 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for Track(0);
  v103 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = (void (*)(char *, char *, uint64_t, __n128))type metadata accessor for Song(0);
  v107 = *((_QWORD *)v113 - 1);
  v12 = __chkstk_darwin(v113);
  v112 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = *(_QWORD *)(v1 + 80);
  v14 = __chkstk_darwin(v12);
  v110 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v98 = (uint64_t)&v93 - v17;
  v18 = __chkstk_darwin(v16);
  v102 = (uint64_t)&v93 - v19;
  v20 = __chkstk_darwin(v18);
  v106 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v20);
  v111 = (char *)&v93 - v22;
  v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v115 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v93 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v93 - v30;
  v32 = v0;
  v33 = v0[2];
  v34 = swift_retain(v33);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v34);
  v35 = swift_release(v33);
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v24 + 16);
  v36(v29, v31, v23, v35);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v29, v23);
  if (v37 != enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    v96 = v3;
    if (v37 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    {
      v64 = (uint64_t)v115;
      ((void (*)(char *, char *, uint64_t))v36)(v115, v31, v23);
      MusicItemState.playabilityStatus.setter(v64);
      v65 = *(void (**)(char *, uint64_t))(v24 + 8);
      v65(v31, v23);
      return ((uint64_t (*)(char *, uint64_t))v65)(v29, v23);
    }
    v94 = v37;
    v48 = (void (*)(char *, char *, uint64_t))v36;
    v95 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
    v49 = v32;
    v50 = v32[3];
    KeyPath = swift_getKeyPath(&unk_1003D07F8);
    v52 = swift_getKeyPath(&unk_1003D0820);
    swift_retain(v50);
    static Published.subscript.getter(&v116, v53, KeyPath, v52);
    swift_release(v50);
    swift_release(KeyPath);
    swift_release(v52);
    v54 = v116;

    if (!v54)
      goto LABEL_9;
    v55 = v32[3];
    v56 = swift_getKeyPath(&unk_1003D0840);
    v57 = swift_getKeyPath(&unk_1003D0868);
    swift_retain(v55);
    static Published.subscript.getter(&v116, v58, v56, v57);
    swift_release(v55);
    swift_release(v56);
    swift_release(v57);
    if ((v116 & 1) != 0)
      goto LABEL_9;
    v59 = v32[3];
    swift_retain(v59);
    v60 = Player.supportsDelegation.getter();
    swift_release(v59);
    if ((v60 & 1) != 0)
      goto LABEL_9;
    v66 = *v32;
    v67 = (char *)v32 + *(_QWORD *)(*v32 + 120);
    v68 = swift_beginAccess(v67, v119, 0, 0);
    v69 = v111;
    (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v66 + 80) - 8) + 16))(v111, v67, v68);
    v71 = v112;
    v70 = v113;
    v72 = v69;
    v73 = v114;
    if (swift_dynamicCast(v112, v72, v114, v113, 6))
    {
      v74 = v107;
    }
    else
    {
      v75 = v106;
      MusicItemState.item.getter(v106);
      v71 = v108;
      v76 = v75;
      v70 = (_QWORD *)v109;
      if (swift_dynamicCast(v108, v76, v73, v109, 6))
      {
        v77 = &v122;
      }
      else
      {
        v78 = v102;
        MusicItemState.item.getter(v102);
        v71 = v104;
        v79 = v78;
        v70 = (_QWORD *)v105;
        if (!swift_dynamicCast(v104, v79, v73, v105, 6))
        {
          v92 = v98;
          MusicItemState.item.getter(v98);
          if (!swift_dynamicCast(v100, v92, v73, v101, 6))
          {
LABEL_9:
            v61 = v115;
            v48(v115, v31, v23);
            v62 = (uint64_t)v61;
LABEL_10:
            MusicItemState.playabilityStatus.setter(v62);
            return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v23);
          }
          (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v101);
          v80 = v2;
          v81 = v96;
          v73 = v114;
LABEL_23:
          v82 = v110;
          v83 = *v49;
          v84 = (char *)v49 + *(_QWORD *)(*v49 + 120);
          v85 = swift_beginAccess(v84, v120, 0, 0);
          (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v83 + 80) - 8) + 16))(v82, v84, v85);
          v86 = sub_1000057B4(&qword_1004BA720);
          if (swift_dynamicCast(&v116, v82, v73, v86, 6))
          {
            v87 = *((_QWORD *)&v117 + 1);
            v88 = v118;
            sub_1000096A0(&v116, *((uint64_t *)&v117 + 1));
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v88);
            v90 = v89;
            sub_10000970C(&v116);
            v91 = v115;
            if (v90)
            {
              swift_bridgeObjectRelease(v90);
              (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v91, v94, v23);
LABEL_28:
              v62 = (uint64_t)v91;
              goto LABEL_10;
            }
          }
          else
          {
            v118 = 0;
            v116 = 0u;
            v117 = 0u;
            sub_10000FE2C((uint64_t)&v116, (uint64_t *)&unk_1004C0560);
            v91 = v115;
          }
          (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v91, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v80);
          (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v91, v95, v23);
          goto LABEL_28;
        }
        v77 = &v121;
      }
      v74 = *(v77 - 32);
    }
    (*(void (**)(char *, _QWORD *))(v74 + 8))(v71, v70);
    v80 = v2;
    v81 = v96;
    goto LABEL_23;
  }
  v113 = v36;
  v114 = v24;
  (*(void (**)(char *, uint64_t))(v24 + 96))(v29, v23);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v29, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
  v38 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v6);
  v39 = *(void (**)(char *, uint64_t))(v3 + 8);
  v39(v6, v2);
  if ((v38 & 1) == 0)
    goto LABEL_11;
  v40 = v32[3];
  v41 = swift_getKeyPath(&unk_1003D07F8);
  v42 = swift_getKeyPath(&unk_1003D0820);
  swift_retain(v40);
  static Published.subscript.getter(&v116, v43, v41, v42);
  swift_release(v40);
  swift_release(v41);
  swift_release(v42);
  v44 = v116;

  if (v44)
  {
    v45 = v114;
    v46 = (uint64_t)v115;
    (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v115, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v23);
    MusicItemState.playabilityStatus.setter(v46);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v31, v23);
  }
  else
  {
LABEL_11:
    v63 = (uint64_t)v115;
    ((void (*)(char *, char *, uint64_t))v113)(v115, v31, v23);
    MusicItemState.playabilityStatus.setter(v63);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v31, v23);
  }
}

double MusicItemState.playabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_10019E810((uint64_t)&unk_1003D0970, (uint64_t)&unk_1003D09A8, a1);
}

double sub_10019E458@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_10019E478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019E8CC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t MusicItemState.playabilityStatus.setter(uint64_t a1)
{
  return sub_10019E4A8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&unk_1003D0970, (uint64_t)&unk_1003D09A8);
}

uint64_t sub_10019E4A8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v8 = *v4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v18 - v11;
  v14 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 88);
  v18[2] = v14;
  v18[3] = v13;
  KeyPath = swift_getKeyPath(a3);
  v18[0] = v14;
  v18[1] = v13;
  v16 = swift_getKeyPath(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain(v4);
  static Published.subscript.setter(v12, v4, KeyPath, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

void (*MusicItemState.playabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D0970);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D09A8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t MusicItemState.$playabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128), v3, 33, 0);
  v1 = sub_1000057B4((uint64_t *)&unk_1004BFD50);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t MusicItemState.$playabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_1000057B4(&qword_1004BB5F0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), v10, 33, 0);
  v7 = sub_1000057B4((uint64_t *)&unk_1004BFD50);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*MusicItemState.$playabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000057B4(&qword_1004BB5F0);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$playabilityStatus.getter();
  return sub_10019E7F0;
}

void sub_10019E7F0(uint64_t a1, char a2)
{
  sub_10019EBB0(a1, a2, (void (*)(void *))MusicItemState.$playabilityStatus.setter);
}

double MusicItemState.previewCapabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_10019E810((uint64_t)&unk_1003D0918, (uint64_t)&unk_1003D0950, a1);
}

double sub_10019E810@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double result;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_10019E898@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_10019E8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019E8CC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_10019E8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

void (*MusicItemState.previewCapabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D0918);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D0950);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t MusicItemState.$previewCapabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136), v3, 33, 0);
  v1 = sub_1000057B4((uint64_t *)&unk_1004BFD60);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t MusicItemState.$previewCapabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_1000057B4(&qword_1004BB5E8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), v10, 33, 0);
  v7 = sub_1000057B4((uint64_t *)&unk_1004BFD60);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*MusicItemState.$previewCapabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000057B4(&qword_1004BB5E8);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$previewCapabilityStatus.getter();
  return sub_10019EBA4;
}

void sub_10019EBA4(uint64_t a1, char a2)
{
  sub_10019EBB0(a1, a2, (void (*)(void *))MusicItemState.$previewCapabilityStatus.setter);
}

void sub_10019EBB0(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v7 = v4[1];
    v8 = v4[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 32));
  }
  free(v6);
  free(v5);
  free(v4);
}

char *MusicItemState.deinit()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 120)]);
  v2 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v3 = sub_1000057B4((uint64_t *)&unk_1004BFD50);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 136)];
  v5 = sub_1000057B4((uint64_t *)&unk_1004BFD60);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t MusicItemState.__deallocating_deinit()
{
  return sub_10019ED00((void (*)(void))MusicItemState.deinit);
}

uint64_t sub_10019ED00(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

uint64_t sub_10019ED24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for MusicItemState(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a3 = result;
  return result;
}

void sub_10019ED64(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __n128 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[4];

  v6 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_100479EF8, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_10000FE2C((uint64_t)v8, (uint64_t *)&unk_1004BFBC0);
    v14 = 7168;
LABEL_6:
    v22 = 0;
    goto LABEL_7;
  }
  v15 = TaskPriority.rawValue.getter(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  v14 = v15 | 0x1C00;
  v16 = *v12;
  if (!*v12)
    goto LABEL_6;
  v17 = *(_QWORD *)(v11 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v16);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
  v21 = v20;
  swift_unknownObjectRelease(v16);
  if (!(v21 | v19))
    goto LABEL_6;
  v24[0] = 0;
  v24[1] = 0;
  v22 = v24;
  v24[2] = v19;
  v24[3] = v21;
LABEL_7:
  v23 = swift_task_create(v14, v22, (char *)&type metadata for () + 8, &unk_1004C05D0, v11);
  swift_release(v23);
}

void sub_10019EF3C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[4];

  v6 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_10047A128, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_10000FE2C((uint64_t)v8, (uint64_t *)&unk_1004BFBC0);
    v14 = 0;
    v15 = 0;
    v16 = 7168;
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v16 = v17 | 0x1C00;
    v18 = *v12;
    if (*v12)
    {
      v19 = *(_QWORD *)(v11 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v18);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v19);
      v15 = v21;
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v22 = sub_1000057B4(&qword_1004C06A8);
  if (v15 | v14)
  {
    v25[0] = 0;
    v25[1] = 0;
    v23 = v25;
    v25[2] = v14;
    v25[3] = v15;
  }
  else
  {
    v23 = 0;
  }
  v24 = swift_task_create(v16, v23, v22, &unk_1004C06A0, v11);
  swift_release(v24);
}

uint64_t sub_10019F10C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 136) = a6;
  *(double *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 120) = a5;
  v7 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v6 + 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 152) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 160) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 168) = swift_task_alloc(v9);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  *(_QWORD *)(v6 + 176) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 184) = v11;
  *(_QWORD *)(v6 + 192) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v6 + 200) = v12;
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10019F1D0, 0, 0);
}

uint64_t sub_10019F1D0()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *((_QWORD *)v0 + 25);
  v2 = *((_QWORD *)v0 + 26);
  v3 = *((_QWORD *)v0 + 24);
  v20 = *((_QWORD *)v0 + 23);
  v21 = *((_QWORD *)v0 + 22);
  v4 = *((_QWORD *)v0 + 20);
  v22 = *((_QWORD *)v0 + 21);
  v23 = *((_QWORD *)v0 + 19);
  v24 = *((_QWORD *)v0 + 18);
  v5 = v0[16];
  v6 = *((_QWORD *)v0 + 15);
  v7 = swift_allocObject(&unk_100479F20, 17, 7);
  *((_QWORD *)v0 + 27) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_100479F48, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_1001A3300;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_100011FD0;
  *((_QWORD *)v0 + 5) = &unk_100479F60;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_100004D8C((unint64_t *)&qword_1004BE650, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v7);
  v11 = sub_1000057B4(&qword_1004BCCD8);
  v12 = sub_10004FFFC((unint64_t *)&qword_1004BE660, &qword_1004BCCD8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 28) = v14;
  swift_release(*((_QWORD *)v0 + 7));
  sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v21);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v3, v21);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v17(v4, v24);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v22, v14);

  v17(v22, v24);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 29) = v18;
  *v18 = v0;
  v18[1] = (double *)sub_10019F464;
  return Task.value.getter();
}

uint64_t sub_10019F464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10019F690;
  else
    v3 = sub_10019F4C8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10019F4C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[27];
  swift_beginAccess(v1 + 16, v0 + 11, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = sub_1000057B4(&qword_1004C05D8);
    v4 = sub_10004FFFC(&qword_1004C05E0, &qword_1004C05D8, (uint64_t)&unk_1003D0D88);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v6);
    v7 = v0[27];
    v9 = swift_beginAccess(v7 + 16, v0 + 8, 0, 0);
    if ((*(_BYTE *)(v7 + 16) & 1) == 0)
    {
      v10 = v0[15];
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v5;
      swift_errorRetain(v5);
      v9.n128_f64[0] = swift_continuation_throwingResumeWithError(v10, v12);
    }
    v15 = v0[27];
    v14 = v0[28];
    v16 = v0[26];
    v17 = v0[24];
    v19 = v0[20];
    v18 = v0[21];
    swift_willThrow(v9);
    swift_release(v14);
    swift_release(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v21 = v0[27];
    v22 = v0[28];
    v23 = v0[26];
    v24 = v0[24];
    v26 = v0[20];
    v25 = v0[21];
    v27 = v0[15];
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    swift_continuation_throwingResume(v27);
    swift_release(v22);
    swift_release(v21);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_10019F690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 120);
    dispatch thunk of DispatchWorkItem.cancel()(v3);
    v6 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v4.n128_f64[0] = swift_continuation_throwingResumeWithError(v5, v7);
  }
  v10 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  swift_willThrow(v4);
  swift_release(v9);
  swift_release(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10019F790(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _BYTE v15[24];

  swift_beginAccess(a1 + 16, v15, 1, 0);
  *(_BYTE *)(a1 + 16) = 1;
  v8 = sub_1000057B4(a3);
  v9 = sub_10004FFFC(a4, a3, (uint64_t)&unk_1003D0D88);
  v10 = swift_allocError(v8, v9, 0, 0);
  v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
  *v13 = v10;
  return swift_continuation_throwingResumeWithError(a2, v12);
}

uint64_t Player.NowPlayingObserver.init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  int v21;
  unsigned int v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[3];
  _QWORD v61[3];

  v2 = v1;
  v4 = sub_1000057B4((uint64_t *)&unk_1004C2770);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000057B4(&qword_1004BFD70);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1000057B4(&qword_1004BFD78);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4(&qword_1004BFD80);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  __chkstk_darwin(v11);
  v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = &_swiftEmptySetSingleton;
  v56 = v1 + 32;
  _s9MusicCore6PlayerC18NowPlayingObserverC22__observationRegistrar33_031AD420BBF8BBF113A2662767DAC2BBLL11Observation0oH0Vvpfi_0();
  KeyPath = swift_getKeyPath(&unk_1003D0768);
  v14 = swift_getKeyPath(&unk_1003D0790);
  v59 = a1;
  static Published.subscript.getter(v61, a1, KeyPath, v14);
  swift_release(v14);
  swift_release(KeyPath);
  v15 = (void *)v61[0];
  v16 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v61[0];
  v17 = v15;

  v18 = swift_getKeyPath(&unk_1003D09C8);
  v61[0] = v1;
  v19 = sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v61, v18, v19);
  swift_release(v18);
  *(_QWORD *)&v20 = swift_beginAccess(v1 + 16, v61, 0, 0).n128_u64[0];
  v21 = *(unsigned __int8 *)(v1 + 16);
  v52 = v17;
  if (v15)
  {
    v22 = objc_msgSend(v17, "isSharedListeningSession", v20);
    v23 = v22;
    v24 = v50;
    if (v21 == v22)
      goto LABEL_7;
    goto LABEL_6;
  }
  v24 = v50;
  if ((v21 & 1) != 0)
  {
    v23 = 0;
LABEL_6:
    v25 = swift_getKeyPath(&unk_1003D09C8);
    __chkstk_darwin(v25);
    *(&v49 - 2) = v1;
    *((_BYTE *)&v49 - 8) = v23;
    v60[0] = (id)v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v60, v25, sub_1001A248C);
    swift_release(v25);
  }
LABEL_7:
  v26 = v59;
  swift_beginAccess(v59 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v60, 33, 0);
  v27 = sub_1000057B4((uint64_t *)&unk_1004BF850);
  Published.projectedValue.getter(v27);
  swift_endAccess(v60);
  v28 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
  v60[0] = (id)static OS_dispatch_queue.main.getter(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
  v37 = sub_10004FFFC((unint64_t *)&qword_1004BF4F0, &qword_1004BFD70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  sub_1001A1FD4();
  v38 = v54;
  Publisher.receive<A>(on:options:)(v60, v6, v54, v28, v37);
  sub_10000FE2C((uint64_t)v6, (uint64_t *)&unk_1004C2770);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v38);
  v39 = sub_10004FFFC(&qword_1004BFDA0, &qword_1004BFD78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v40 = v55;
  Publisher.dropFirst(_:)(1, v55, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v40);
  v41 = swift_allocObject(&unk_100479AF0, 24, 7);
  swift_weakInit(v41 + 16, v2);
  v42 = sub_10004FFFC(&qword_1004BFDA8, &qword_1004BFD80, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v43 = v58;
  v44 = Publisher<>.sink(receiveValue:)(sub_1001A2484, v41, v58, v42);
  v45 = swift_release(v41);
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v24, v43, v45);
  v46 = v56;
  v47 = swift_beginAccess(v56, v60, 33, 0);
  AnyCancellable.store(in:)(v46, v47);
  swift_endAccess(v60);
  swift_release(v26);
  swift_release(v44);

  return v2;
}

double Player.NowPlayingObserver.isSharedListeningSession.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  double result;
  uint64_t v3;

  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v3 = v0;
  sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v3, KeyPath, sub_1001A248C);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_10019FDF0(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(void **)(Strong + 24);
    *(_QWORD *)(Strong + 24) = v2;
    v8 = v2;

    sub_1001A01A8();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t Player.NowPlayingObserver.isSharedListeningSession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v4[0] = v0;
  v2 = sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 16, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_10019FF04(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v6[0] = v3;
  v5 = sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 16, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_10019FFA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double result;
  uint64_t v5;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v5 = v2;
  sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v5, KeyPath, sub_1001A248C);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void (*Player.NowPlayingObserver.isSharedListeningSession.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v4[4] = OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  *v4 = v2;
  v6 = sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4[5] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_1003D09C8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  swift_beginAccess(v2 + 16, v4, 33, 0);
  return sub_1001A0140;
}

void sub_1001A0140(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;

  v1 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v2 = v1[5];
  *v1 = v1[3];
  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v1, KeyPath, v2);
  swift_release(KeyPath);
  free(v1);
}

void sub_1001A01A8()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  double v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v1 = *(void **)(v0 + 24);
  KeyPath = swift_getKeyPath(&unk_1003D09C8);
  v9[0] = v0;
  v3 = sub_100004D8C((unint64_t *)&unk_1004BFD90, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v5 = swift_beginAccess(v0 + 16, v9, 0, 0).n128_u64[0];
  v6 = *(unsigned __int8 *)(v0 + 16);
  if (v1)
  {
    if (v6 == objc_msgSend(v4, "isSharedListeningSession", v5))
    {

      return;
    }
  }
  else if ((v6 & 1) == 0)
  {
    return;
  }
  v7 = swift_getKeyPath(&unk_1003D09C8);
  __chkstk_darwin(v7);
  v8 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, v7, sub_1001A248C);
  swift_release(v7);

}

uint64_t Player.NowPlayingObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t Player.NowPlayingObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_1001A03B8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D08D0);
  v5 = swift_getKeyPath(&unk_1003D08F8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1001A0434(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D08D0);
  v5 = swift_getKeyPath(&unk_1003D08F8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_1001A04A0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D0D28);
  v5 = swift_getKeyPath(&unk_1003D0D50);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001A051C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_1000277A0(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001D54F0();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_1001A0C94(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1001A05E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1000C562C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001D56A4();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_100084888(v12 + *(_QWORD *)(v14 + 72) * v6, a2, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    sub_1001A0E68(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1001A0724(unint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1000C5690(a1);
    v12 = v11;
    swift_bridgeObjectRelease(v4);
    if ((v12 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v4 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1001D5CE0();
        v4 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = __CocoaDictionary.lookup(_:)(v6, v5);

  if (!v7)
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  swift_unknownObjectRelease(v7);
  v8 = __CocoaDictionary.count.getter(v5);
  v4 = sub_1001A0A54(v5, v8);
  swift_retain(v4);
  a1 = sub_1000C5690((uint64_t)v6);
  v10 = v9;
  swift_release(v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * a1);
  sub_100010FDC(a1, v4);
  v15 = *v2;
  *v2 = v4;
  swift_bridgeObjectRelease(v15);
  return v14;
}

uint64_t sub_1001A0870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1000C562C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001D5E88();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1000057B4(&qword_1004BF1E0);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_1001A130C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_1000057B4(&qword_1004BF1E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1001A09B4(uint64_t a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  Swift::Int v11;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = __CocoaDictionary.count.getter(v7);
  if (!__OFADD__(result, 1))
  {
    v6 = sub_1001A0A54(v7, result + 1);
    *v3 = v6;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_1000BA5B0(a1, a2, isUniquelyReferenced_nonNull_native);
    v10 = *v3;
    *v3 = v11;
    return swift_bridgeObjectRelease(v10);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1001A0A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_1000057B4(&qword_1004BC850);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_10000598C(0, &qword_1004BC808, MPCPlayerPath_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = sub_1000057B4(&qword_1004C0588);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_1001D4258(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

unint64_t sub_1001A0C94(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26);
        swift_bridgeObjectRetain();
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001A0E68(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v43 = (result + 1) & v11;
      v12 = *(_QWORD *)(v44 + 72);
      v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v42(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100004D8C(&qword_1004C05C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v43)
        {
          if (v21 >= v43 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            result = v27 + v29 * a1;
            v31 = v29 * v10;
            v32 = v27 + v29 * v10;
            v33 = v32 + v29;
            if (v30 < v31 || result >= v33)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v32, 1, v28);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v30 != v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v43 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  *v35 = v37 & v36;
  v38 = *(_QWORD *)(a2 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v40;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001A113C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt *v9;
  Swift::UInt v10;
  Swift::UInt v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (Swift::UInt *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v25);
        Hasher._combine(_:)(v10);
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001A130C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v43 = (result + 1) & v11;
      v12 = *(_QWORD *)(v44 + 72);
      v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v42(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100004D8C(&qword_1004C05C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v43)
        {
          if (v21 >= v43 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = sub_1000057B4(&qword_1004BF1E0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            result = v27 + v29 * a1;
            v31 = v29 * v10;
            v32 = v27 + v29 * v10;
            v33 = v32 + v29;
            if (v30 < v31 || result >= v33)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v32, 1, v28);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v30 != v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v43 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  *v35 = v37 & v36;
  v38 = *(_QWORD *)(a2 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v40;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

BOOL sub_1001A15E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t DynamicType;
  uint64_t v10;
  void *v11;
  BOOL v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v15 = a3;
  v16 = a4;
  v6 = sub_1000407CC(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v6, a1, a3);
  v7 = v15;
  v8 = sub_1000096A0(v14, v15);
  DynamicType = swift_getDynamicType(v8, v7, 1);
  v10 = sub_100197B00(DynamicType, v16);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = MPCPlayerResponse.canPerform(_:)((uint64_t)v14);

  }
  else
  {
    v12 = 0;
  }
  sub_10000970C(v14);
  return v12;
}

uint64_t sub_1001A1688(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = (_QWORD *)swift_task_alloc(dword_1004C06B4);
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_1001A16F0;
  return sub_1001A3A1C(a5, a6, a2);
}

uint64_t sub_1001A16F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

_QWORD *sub_1001A1750(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  char *v117;
  uint64_t v118;
  id v119[4];

  v104 = a1;
  v105 = a3;
  v118 = a2;
  v4 = *v3;
  v5 = sub_1000057B4(&qword_1004BB5E8);
  v111 = *(_QWORD *)(v5 - 8);
  v112 = v5;
  __chkstk_darwin(v5);
  v110 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4((uint64_t *)&unk_1004C06E0);
  v114 = *(_QWORD *)(v7 - 8);
  v115 = v7;
  __chkstk_darwin(v7);
  v113 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4((uint64_t *)&unk_1004C2770);
  __chkstk_darwin(v9);
  v117 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4(&qword_1004BB5F0);
  v12 = *(_QWORD *)(v11 - 8);
  v106 = v11;
  v107 = v12;
  __chkstk_darwin(v11);
  v102 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000057B4(&qword_1004BB5F8);
  v15 = *(_QWORD *)(v14 - 8);
  v108 = v14;
  v109 = v15;
  __chkstk_darwin(v14);
  v103 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1000057B4((uint64_t *)&unk_1004BFD60);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000057B4((uint64_t *)&unk_1004BFD50);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[4] = _swiftEmptyArrayStorage;
  v28 = v3 + 4;
  v29 = (char *)v3 + *(_QWORD *)(v4 + 128);
  (*(void (**)(char *, _QWORD))(v30 + 104))(v27, enum case for MusicPlayer.PlayabilityStatus.playable(_:));
  v116 = *(_OWORD *)(v4 + 80);
  property wrapper backing initializer of MusicItemState.playabilityStatus((uint64_t)v27, v31, v32);
  v33 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v34 = v3;
  v33(v29, v24, v21);
  v35 = (char *)v3 + *(_QWORD *)(*v3 + 136);
  v36 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v37 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v20, v36, v37);
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v99);
  property wrapper backing initializer of MusicItemState.previewCapabilityStatus((uint64_t)v20, v38, v39);
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v35, v18, v101);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))((char *)v3 + *(_QWORD *)(*v3 + 120), v104);
  v40 = v105;
  v41 = v118;
  v3[2] = v118;
  v3[3] = v40;
  swift_retain(v40);
  swift_retain(v41);
  v42 = sub_10019DBBC();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v42);
  v43 = MusicItemState.previewCapabilityStatus.setter((uint64_t)v20);
  v44 = v102;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v43);
  v45 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
  v119[0] = (id)static OS_dispatch_queue.main.getter(v45, v46, v47, v48, v49, v50, v51, v52, v98, v99, v100, v101, v102, v103, v104);
  v53 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v55 = v117;
  v54(v117, 1, 1, v53);
  v56 = sub_10004FFFC((unint64_t *)&unk_1004C06F0, &qword_1004BB5F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v57 = sub_1001A1FD4();
  v58 = v103;
  v59 = v55;
  v60 = (uint64_t)v55;
  v61 = v106;
  v105 = v57;
  Publisher.receive<A>(on:options:)(v119, v59, v106, v45, v56);
  sub_10000FE2C(v60, (uint64_t *)&unk_1004C2770);

  (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v61);
  v62 = swift_allocObject(&unk_10047A1A0, 24, 7);
  swift_weakInit(v62 + 16, v34);
  v63 = swift_allocObject(&unk_10047A1C8, 40, 7);
  *(_OWORD *)(v63 + 16) = v116;
  *(_QWORD *)(v63 + 32) = v62;
  v64 = sub_10004FFFC(&qword_1004BB600, &qword_1004BB5F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v65 = v108;
  v66 = Publisher<>.sink(receiveValue:)(sub_1001A4170, v63, v108, v64);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v58, v65, v67);
  swift_beginAccess(v28, v119, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
  v70 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v69 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v70 >= v69 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
  v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v66);
  specialized Array._endMutation()(v71);
  v72 = swift_endAccess(v119);
  v73 = v110;
  v74 = v118;
  v75 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v72);
  v119[0] = (id)static OS_dispatch_queue.main.getter(v75, v76, v77, v78, v79, v80, v81, v82, v98, v99, v100, v101, v102, v103, v104);
  v83 = (uint64_t)v117;
  v54(v117, 1, 1, v53);
  v84 = sub_10004FFFC(qword_1004C0700, &qword_1004BB5E8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v85 = v112;
  v86 = v113;
  Publisher.receive<A>(on:options:)(v119, v83, v112, v45, v84);
  sub_10000FE2C(v83, (uint64_t *)&unk_1004C2770);

  (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v85);
  v87 = swift_allocObject(&unk_10047A1A0, 24, 7);
  swift_weakInit(v87 + 16, v34);
  v88 = swift_allocObject(&unk_10047A1F0, 32, 7);
  *(_QWORD *)(v88 + 16) = v87;
  *(_QWORD *)(v88 + 24) = v74;
  v89 = sub_10004FFFC(&qword_1004BB608, (uint64_t *)&unk_1004C06E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v74);
  v90 = v115;
  v91 = Publisher<>.sink(receiveValue:)(sub_1001A41A8, v88, v115, v89);
  v92 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v86, v90, v92);
  swift_beginAccess(v28, v119, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
  v95 = *(_QWORD *)((v34[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v94 = *(_QWORD *)((v34[4] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v95 >= v94 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
  v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v91);
  specialized Array._endMutation()(v96);
  swift_endAccess(v119);
  return v34;
}

_QWORD *sub_1001A1EC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;

  v8 = type metadata accessor for MusicItemState(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return sub_1001A1750(a1, a2, a3);
}

uint64_t sub_1001A1F20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001A1F44(void *a1)
{
  sub_10019C188(a1);
}

void sub_1001A1F4C(void *a1)
{
  uint64_t v1;

  sub_10019C75C(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1001A1F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A1F64(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_1001A1F6C(uint64_t a1)
{
  uint64_t v1;

  return sub_10019C704(a1, v1);
}

double sub_1001A1F84(uint64_t a1)
{
  uint64_t v1;

  return sub_100190B94(a1, v1, (uint64_t)&unk_10047A010, (uint64_t)&unk_1004C0650);
}

double sub_1001A1FAC(uint64_t a1)
{
  uint64_t v1;

  return sub_100190B94(a1, v1, (uint64_t)&unk_100479FE8, (uint64_t)&unk_1004C0640);
}

unint64_t sub_1001A1FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BFCF0;
  if (!qword_1004BFCF0)
  {
    v1 = sub_10000598C(255, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1004BFCF0);
  }
  return result;
}

uint64_t sub_1001A2030(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004BFD04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_100190EC8(a1, v4, v5, v6);
}

uint64_t sub_1001A209C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A20AC()
{
  uint64_t v0;

  return swift_continuation_throwingResume(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for Player.NowPlayingObserver(uint64_t a1)
{
  return sub_1000A1E5C(a1, qword_1004C04B8, (uint64_t)&nominal type descriptor for Player.NowPlayingObserver);
}

uint64_t sub_1001A2100()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1001A213C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100192560(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(void (**)(uint64_t))(v3 + 32));
}

uint64_t sub_1001A2148()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001A217C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1001928AC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1001A2188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A2198(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100192FD8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001A21A0(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64x2_t i;
  unint64_t v8;
  unint64_t v9;
  int64x2_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  for (i = 0uLL; ; i = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, i), (int8x16_t)v10, (int8x16_t)i))
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v1 << 6);
      goto LABEL_5;
    }
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v1;
    if (!v12)
    {
      v1 = v11 + 1;
      if (v11 + 1 >= v6)
        return i.i64[0];
      v12 = *(_QWORD *)(v2 + 8 * v1);
      if (!v12)
      {
        v1 = v11 + 2;
        if (v11 + 2 >= v6)
          return i.i64[0];
        v12 = *(_QWORD *)(v2 + 8 * v1);
        if (!v12)
        {
          v1 = v11 + 3;
          if (v11 + 3 >= v6)
            return i.i64[0];
          v12 = *(_QWORD *)(v2 + 8 * v1);
          if (!v12)
          {
            v1 = v11 + 4;
            if (v11 + 4 >= v6)
              return i.i64[0];
            v12 = *(_QWORD *)(v2 + 8 * v1);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v1 << 6);
LABEL_5:
    v10 = *(int64x2_t *)(*(_QWORD *)(result + 48) + 16 * v9);
  }
  v13 = v11 + 5;
  if (v13 >= v6)
    return i.i64[0];
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v1 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v1 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v1 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v1);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1001A22D4()
{
  unint64_t result;

  result = qword_1004BFD30;
  if (!qword_1004BFD30)
  {
    result = swift_getWitnessTable(&unk_1003D0CE8, &type metadata for Player.BufferedAirPlayError);
    atomic_store(result, (unint64_t *)&qword_1004BFD30);
  }
  return result;
}

uint64_t sub_1001A2318()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1001A2328(void *a1)
{
  uint64_t v1;

  return sub_100198FF4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001A2334(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004BFD44);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_10019908C(a1, v4, v5, v6);
}

double sub_1001A23A0@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_1001A23C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019E8CC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_1001A23E4()
{
  return 16;
}

__n128 sub_1001A23F0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_1001A23FC@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_1001A241C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019E8CC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t sub_1001A2440()
{
  return 16;
}

__n128 sub_1001A244C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001A2460()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001A2484(void **a1)
{
  uint64_t v1;

  return sub_10019FDF0(a1, v1);
}

uint64_t sub_1001A248C()
{
  return sub_1001A3218();
}

uint64_t sub_1001A24A0(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys.Iterator, a1);
}

unint64_t sub_1001A24B4()
{
  unint64_t result;

  result = qword_1004BFDB0;
  if (!qword_1004BFDB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.EngineState, &type metadata for Player.EngineState);
    atomic_store(result, (unint64_t *)&qword_1004BFDB0);
  }
  return result;
}

uint64_t sub_1001A24F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1004BFC08);
}

uint64_t sub_1001A251C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, (uint64_t *)&unk_1004C05B0, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1004BFC08);
}

uint64_t sub_1001A2548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Player.nowPlayingObserver.getter();
  *a1 = result;
  return result;
}

double sub_1001A2570(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = v2;
  swift_retain(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_1001A25B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004BF850);
}

uint64_t sub_1001A25D4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004BFD70, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004BF850);
}

uint64_t sub_1001A2600(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1004BFBF8);
}

uint64_t sub_1001A2624(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004C05A8, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1004BFBF8);
}

uint64_t sub_1001A2658(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1004BFBF0);
}

uint64_t sub_1001A267C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004C05A0, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1004BFBF0);
}

uint64_t sub_1001A26A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_1004BF240);
}

uint64_t sub_1001A26CC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004BF248, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_1004BF240);
}

uint64_t sub_1001A26F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_1004BF240);
}

uint64_t sub_1001A271C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004BF248, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_1004BF240);
}

uint64_t sub_1001A2748@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

double sub_1001A2798(unsigned __int8 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  return sub_100199610(v4);
}

uint64_t sub_1001A27F4()
{
  return type metadata accessor for Player(0);
}

uint64_t type metadata accessor for Player(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004BFDE0, (uint64_t)&nominal type descriptor for Player);
}

void sub_1001A2810(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[7];
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  const char *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  const char *v25;
  const char *v26;
  const char *v27;
  const char *v28;
  char *v29;
  const char *v30;
  char *v31;

  v13[0] = "\b";
  v13[1] = "\b";
  sub_1001A2980(319);
  if (v3 <= 0x3F)
  {
    v13[2] = *(_QWORD *)(v2 - 8) + 64;
    v13[3] = "\b";
    sub_1001A29E4(319, &qword_1004BFE10, &qword_1004BFC30);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v13[4] = v6;
      sub_1001A29E4(319, &qword_1004BFE18, &qword_1004BFC40);
      if (v8 <= 0x3F)
      {
        v13[5] = *(_QWORD *)(v7 - 8) + 64;
        sub_1001A29E4(319, qword_1004BFE20, &qword_1004BFC50);
        if (v10 <= 0x3F)
        {
          v13[6] = *(_QWORD *)(v9 - 8) + 64;
          sub_1001736FC();
          if (v12 <= 0x3F)
          {
            v14 = *(_QWORD *)(v11 - 8) + 64;
            v15 = v14;
            v16 = "\b";
            v17 = &unk_1003D0BB8;
            v18 = "\b";
            v19 = (char *)&value witness table for Builtin.UnknownObject + 64;
            v20 = &unk_1003D0BD0;
            v21 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v22 = v6;
            v23 = "\b";
            v24 = "\b";
            v25 = "\b";
            v26 = "\b";
            v27 = "\b";
            v28 = "\b";
            v29 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v30 = "\b";
            v31 = (char *)&value witness table for Builtin.NativeObject + 64;
            swift_updateClassMetadata2(a1, 256, 25, v13, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1001A2980(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004BFE08)
  {
    v2 = sub_10000598C(255, &qword_1004BC808, MPCPlayerPath_ptr);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004BFE08);
  }
}

void sub_1001A29E4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100009788(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t destroy for Player.NowPlayingConfiguration(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore6PlayerC23NowPlayingConfigurationVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.NowPlayingConfiguration()
{
  return &type metadata for Player.NowPlayingConfiguration;
}

uint64_t type metadata accessor for Player.NowPlayingConfiguration.BadCountedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Player.NowPlayingConfiguration.BadCountedSet);
}

uint64_t storeEnumTagSinglePayload for Player.EngineState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001A2BCC + 4 * byte_1003D0719[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001A2C00 + 4 * byte_1003D0714[v4]))();
}

uint64_t sub_1001A2C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A2C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A2C10);
  return result;
}

uint64_t sub_1001A2C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A2C24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001A2C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A2C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.EngineState()
{
  return &type metadata for Player.EngineState;
}

uint64_t type metadata accessor for Player.DataSource()
{
  return objc_opt_self(_TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource);
}

void sub_1001A2C6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001A2D50(319, &qword_1004C0480, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001A2D50(319, &qword_1004C0488, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        swift_initClassMetadata2(a1, 0, 6, v8, a1 + 96);
      }
    }
  }
}

void sub_1001A2D50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1001A2D9C()
{
  return type metadata accessor for Player.NowPlayingObserver(0);
}

uint64_t sub_1001A2DA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1003D0CB8;
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.BufferedAirPlayError()
{
  return &type metadata for Player.BufferedAirPlayError;
}

void sub_1001A2E44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  _QWORD v15[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_1003D0D28);
  v5 = swift_getKeyPath(&unk_1003D0D50);
  v15[0] = a1;
  v6 = a1;
  swift_retain(v2);
  static Published.subscript.setter(v15, v2, KeyPath, v5);
  v7 = swift_getKeyPath(&unk_1003D0D28);
  v8 = swift_getKeyPath(&unk_1003D0D50);
  static Published.subscript.getter(v15, v2, v7, v8);
  swift_release(v8);
  swift_release(v7);
  v9 = (void *)v15[0];
  if (v15[0])
  {
    v10 = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
    if (v10)
    {
      v11 = (*(uint64_t (**)(void *))(v10 + 16))(v9);

      if ((v11 & 1) != 0)
      {
        v12 = (_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
        v13 = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v15, 1, 0);
        v14 = *v12;
        *v12 = 2;
        sub_100199610(v14, v13);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001A2F84(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;

  (*(void (**)(uint64_t))(a3 + 16))(a3);
  v5 = objc_msgSend(a1, "request");
  if (v5)
  {
    v6 = v5;
    objc_opt_self(MPCPlayerRequest);
    v7 = swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
      swift_unknownObjectRelease(v6);
      return;
    }
    v8 = v7;
    v9 = *(void (**)(uint64_t))(a2
                                        + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged);
    v10 = objc_msgSend(a1, "response");
    if (v10)
    {
      v11 = v10;
      objc_opt_self(MPCPlayerResponse);
      v12 = swift_dynamicCastObjCClass(v11);
      if (v12)
      {
        v13 = (void *)v12;
LABEL_10:
        v14 = v13;
        v9(v8);
        swift_unknownObjectRelease(v6);

        return;
      }
      swift_unknownObjectRelease(v11);
    }
    v13 = 0;
    goto LABEL_10;
  }
}

uint64_t sub_1001A30B4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001A30E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004C0574);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10002F6EC;
  return sub_100191B58(a1, v4, v5, v7, v6);
}

double sub_1001A3160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100199DA4(a1, a2, v2);
}

void sub_1001A3168(void *a1, uint64_t a2)
{
  sub_10019A000(a1, a2);
}

uint64_t sub_1001A3170()
{
  uint64_t v0;

  return sub_10019A794(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1001A3188()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001A31B4()
{
  uint64_t v0;

  sub_10019B01C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001A31BC()
{
  uint64_t v0;

  sub_100199E78(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1001A31DC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1001A2E44(v1);

}

uint64_t sub_1001A3218()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_1001A326C(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004C05CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10002F6EC;
  return sub_10019F10C(v7, a1, v4, v5, v6, v8);
}

uint64_t sub_1001A32F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_1001A3300()
{
  uint64_t v0;

  return sub_10019F790(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1004C05D8, &qword_1004C05E0);
}

double sub_1001A3328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10019B578(a1, a2, v2);
}

void sub_1001A3330(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10019BD74(a1, a2, v2);
}

uint64_t sub_1001A3338()
{
  uint64_t v0;

  return sub_10019B64C(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1001A3354()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_errorRelease(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001A33A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1004C060C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10002E8E0;
  return sub_100192A0C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001A3444(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C0624);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_100191604(a1, v4, v5, v6);
}

uint64_t sub_1001A34B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C063C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_100190C98(a1, v4, v5, v6);
}

uint64_t sub_1001A3524(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C064C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_100190A34(a1, v4, v5, v6);
}

void sub_1001A3590()
{
  uint64_t v0;

  sub_10019C394(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001A35AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A35D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3614(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001A3650()
{
  unint64_t result;

  result = qword_1004C0660;
  if (!qword_1004C0660)
  {
    result = swift_getWitnessTable(&unk_1003D1908, &_s12CommandErrorON);
    atomic_store(result, (unint64_t *)&qword_1004C0660);
  }
  return result;
}

uint64_t sub_1001A3694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_1001A3700(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1001975E4(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A3760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_1000057B4(&qword_1004C05E8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for Player.CommandOptions(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + v6 + 8) & ~v9;
  v11 = v10 + *(_QWORD *)(v8 + 64);
  v12 = v3 | v9 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10000970C((_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6));
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v10, v13);
  swift_bridgeObjectRelease();

  return swift_deallocObject(v0, v11, v12);
}

uint64_t sub_1001A3870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C05E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8) + 80);
  v9 = v8 + v7 + 8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = v1 + v6;
  v14 = *(_QWORD *)(v1 + v7);
  v15 = v1 + (v9 & ~v8);
  v16 = (_QWORD *)swift_task_alloc(dword_1004C068C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10002E8E0;
  return sub_100194A5C(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1001A3958()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001A3984(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004C069C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004C0698
                                                                                      + dword_1004C0698))(a1, v7, v4, v5, v6, v8);
}

uint64_t sub_1001A3A1C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 152) = a2;
  *(double *)(v3 + 144) = a3;
  *(_QWORD *)(v3 + 136) = a1;
  v4 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v3 + 160) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 168) = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v6);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v6);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  *(_QWORD *)(v3 + 192) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 200) = v8;
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v3 + 216) = v9;
  *(_QWORD *)(v3 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001A3AE0, 0, 0);
}

uint64_t sub_1001A3AE0()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *((_QWORD *)v0 + 27);
  v2 = *((_QWORD *)v0 + 28);
  v3 = *((_QWORD *)v0 + 26);
  v22 = *((_QWORD *)v0 + 25);
  v23 = *((_QWORD *)v0 + 24);
  v4 = *((_QWORD *)v0 + 22);
  v24 = *((_QWORD *)v0 + 23);
  v25 = *((_QWORD *)v0 + 21);
  v26 = *((_QWORD *)v0 + 20);
  v5 = v0[18];
  v6 = *((_QWORD *)v0 + 17);
  v7 = swift_allocObject(&unk_100479F20, 17, 7);
  *((_QWORD *)v0 + 29) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_10047A150, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_1001A4124;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_100011FD0;
  *((_QWORD *)v0 + 5) = &unk_10047A168;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_100004D8C((unint64_t *)&qword_1004BE650, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v7);
  v11 = sub_1000057B4(&qword_1004BCCD8);
  v12 = sub_10004FFFC((unint64_t *)&qword_1004BE660, &qword_1004BCCD8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 30) = v14;
  swift_release(*((_QWORD *)v0 + 7));
  sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v23);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v3, v23);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v17(v4, v26);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v24, v14);

  v17(v24, v26);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 31) = v18;
  v19 = sub_1000057B4(&qword_1004C06A8);
  v20 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  *((_QWORD *)v0 + 32) = v20;
  *v18 = v0;
  v18[1] = (double *)sub_1001A3D94;
  return Task.value.getter(v0 + 15, *((_QWORD *)v0 + 19), v19, v20, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001A3D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001A4028;
  else
    v3 = sub_1001A3DF8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001A3DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 232);
  swift_beginAccess(v1 + 16, v0 + 88, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = sub_1000057B4(&qword_1004C06B8);
    v4 = sub_10004FFFC(&qword_1004C06C0, &qword_1004C06B8, (uint64_t)&unk_1003D0D88);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v6);

    v7 = *(_QWORD *)(v0 + 232);
    v9 = swift_beginAccess(v7 + 16, v0 + 64, 0, 0);
    if ((*(_BYTE *)(v7 + 16) & 1) == 0)
    {
      v10 = *(_QWORD *)(v0 + 256);
      v11 = *(_QWORD *)(v0 + 136);
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v12 = swift_allocError(v10, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v5;
      swift_errorRetain(v5);
      v9.n128_f64[0] = swift_continuation_throwingResumeWithError(v11, v12);
    }
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    swift_willThrow(v9);
    swift_release(v14);
    swift_release(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 208);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    v26 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 128) = v26;
    v27 = *(_QWORD *)(*(_QWORD *)(v25 + 64) + 40);
    v28 = v26;
    sub_10000FD10(v0 + 128, v27, &qword_1004C06A8);
    swift_continuation_throwingResume(v25);
    swift_release(v21);

    swift_release(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void *))(v0 + 8))(v26);
  }
}

uint64_t sub_1001A4028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v3);
    v7 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v4.n128_f64[0] = swift_continuation_throwingResumeWithError(v6, v7);
  }
  v10 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v4);
  swift_release(v9);
  swift_release(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001A4124()
{
  uint64_t v0;

  return sub_10019F790(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1004C06B8, &qword_1004C06C0);
}

uint64_t sub_1001A414C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001A4170(uint64_t a1)
{
  uint64_t v1;

  return sub_10019DAC0(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1001A417C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1001A41A8(uint64_t a1)
{
  uint64_t v1;

  return sub_10019DB14(a1, *(_QWORD *)(v1 + 16));
}

uint64_t _s7TimeoutVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&_s7TimeoutVMn);
}

uint64_t Player.InsertCommand.init(location:playbackIntent:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

int *Player.CommandOptions.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  _QWORD *v3;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  result = (int *)type metadata accessor for Player.CommandOptions(0);
  v3 = (_QWORD *)(a1 + result[5]);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(a1 + result[6]) = 0;
  *(_BYTE *)(a1 + result[7]) = 0;
  *(_QWORD *)(a1 + result[8]) = 0;
  return result;
}

uint64_t static Player.CommandOptions.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)(a2 + v4[6]) = 0;
  *(_BYTE *)(a2 + v4[7]) = 0;
  *(_QWORD *)(a2 + v4[8]) = 0;
  return a1(a2);
}

BOOL MPCPlayerResponse.canPerform(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BOOL8 v7;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_1000444A8(a1, (uint64_t)v11);
  v2 = sub_1000057B4(&qword_1004BF5C0);
  v3 = sub_1000057B4(&qword_1004C06C8);
  if (swift_dynamicCast(v9, v11, v2, v3, 6))
  {
    sub_100033620(v9, (uint64_t)v12);
    v4 = v13;
    v5 = v14;
    sub_1000096A0(v12, v13);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v1, v4, v5);
    v7 = v6 != 0;
    if (v6)

    sub_10000970C(v12);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_1001A7920((uint64_t)v9);
    return 0;
  }
  return v7;
}

uint64_t MPCPlayerResponse.canPerform(anyOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
    return (*(uint64_t (**)(uint64_t))(v4 + 16))(v1) & 1;
  else
    return 0;
}

uint64_t MPCPlayerResponse.perform(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  return swift_task_switch(sub_1001A443C, 0, 0);
}

{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch(sub_1001A7288, 0, 0);
}

_QWORD *sub_1001A443C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  _QWORD *result;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v1 = (_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(id *)(v0 + 216);
  v4 = (uint64_t)sub_1001A7A7C(v2, (uint64_t)v3);

  v5 = *(_QWORD **)(v0 + 200);
  if (!((unint64_t)v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 == v5[2])
    {
      swift_bridgeObjectRetain();
      v7 = v6;
      goto LABEL_4;
    }
LABEL_28:
    v32 = v1;
    v33 = (void *)v1[27];
    swift_bridgeObjectRelease(v4);
    v34 = sub_1001A3650();
    swift_allocError(&_s12CommandErrorON, v34, 0, 0);
    v36 = v35;
    v37 = v33;
    v38 = swift_bridgeObjectRetain();
    v39 = sub_1001A7BE8(v38, (uint64_t)v37);

    swift_bridgeObjectRelease(v5);
    *(_QWORD *)v36 = v39;
    *(_BYTE *)(v36 + 40) = 1;
    swift_willThrow(v40);
    return (_QWORD *)((uint64_t (*)(void))v32[1])();
  }
LABEL_22:
  if (v4 < 0)
    v30 = v4;
  else
    v30 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v4);
  if (v31 != v5[2])
  {
    v5 = (_QWORD *)v1[25];
    goto LABEL_28;
  }
  v5 = (_QWORD *)v31;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v30);
  v6 = (unint64_t)v5;
LABEL_4:
  v41 = v1 + 18;
  if (v7)
  {
    v8 = 0;
    v45 = kMRMediaRemoteOptionCommandID;
    v46 = v4 & 0xC000000000000001;
    v42 = (void *)kMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
    v43 = v7;
    v44 = v4;
    while (1)
    {
      if (v46)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
      else
        v9 = *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_22;
      }
      v12 = v1;
      UUID.uuidString.getter(v9);
      v14 = v13;
      v15 = v6;
      if (v6 < 2)
      {
        v19 = 0;
        v20 = (void *)0xE000000000000000;
      }
      else
      {
        *v41 = v8;
        v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v16._object;
        String.append(_:)(v16);
        swift_bridgeObjectRelease(object);
        v18._countAndFlagsBits = 93;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        v19 = 23341;
        v20 = (void *)0xE200000000000000;
      }
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = v19;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v14);
      v5 = String._bridgeToObjectiveC()();
      result = (_QWORD *)swift_bridgeObjectRelease(v14);
      if (!v45)
        break;
      v1 = v12;
      v23 = v12[26];
      objc_msgSend(v10, "setCommandOptionValue:forKey:", v5);

      v4 = v44;
      v6 = v15;
      if (*(_QWORD *)(v23 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20) + 8))
      {
        result = String._bridgeToObjectiveC()();
        if (!v42)
          goto LABEL_30;
        v5 = result;
        v24 = v42;
        objc_msgSend(v10, "setCommandOptionValue:forKey:", v5, v24);

      }
      ++v8;
      if (v11 == v43)
        goto LABEL_18;
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease(v4);
    v25 = v1[26];
    v26 = objc_allocWithZone((Class)MPCPlayerChangeRequest);
    sub_10000598C(0, &qword_1004C0798, MPCPlayerCommandRequest_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v28 = objc_msgSend(v26, "initWithCommandRequests:", isa);
    v1[28] = v28;

    v29 = type metadata accessor for Player.CommandOptions(0);
    objc_msgSend(v28, "setOptions:", *(_QWORD *)(v25 + *(int *)(v29 + 24)));
    if (*(_BYTE *)(v25 + *(int *)(v29 + 28)) == 1)
    {
      return (_QWORD *)swift_task_switch(sub_1001A48D8, 0, 0);
    }
    else
    {
      v1[2] = v1;
      v1[3] = sub_1001A4A98;
      v1[22] = swift_continuation_init(v1 + 2, 1);
      v1[18] = _NSConcreteStackBlock;
      v1[19] = 0x40000000;
      v1[20] = sub_1000C3E88;
      v1[21] = &unk_10047A310;
      objc_msgSend(v28, "performWithCompletion:", v41);
      return (_QWORD *)swift_continuation_await(v1 + 2);
    }
  }
  return result;
}

uint64_t sub_1001A48D8()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;

  v1 = v0 + 10;
  v2 = (void *)v0[28];
  v0[15] = v0 + 24;
  v0[10] = v0;
  v0[11] = sub_1001A49B4;
  v3 = swift_continuation_init(v0 + 10, 1);
  v4 = swift_allocObject(&unk_10047A338, 24, 7);
  v0[18] = _NSConcreteStackBlock;
  v5 = v0 + 18;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_1001A7DAC;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1001A7640;
  v5[3] = &unk_10047A350;
  v6 = _Block_copy(v5);
  objc_msgSend(v2, "performWithExtendedStatusCompletion:", v6, swift_release(v5[5]).n128_f64[0]);
  _Block_release(v6);
  return swift_continuation_await(v1);
}

uint64_t sub_1001A49B4(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 232) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = sub_1001A4A64;
  }
  else
  {
    *(_QWORD *)(v2 + 240) = *(_QWORD *)(v2 + 192);
    v4 = sub_1001A4A28;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001A4A28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001A4A64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A4A98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 248) = v1;
  if (v1)
    v2 = sub_1001A4B34;
  else
    v2 = sub_1001A4AF8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001A4AF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_1001A4B34(__n128 a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 224);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t Player.CommandOptions.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Player.CommandOptions.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t Player.CommandOptions.userInterfaceArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Player.CommandOptions.userInterfaceArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.userInterfaceArea.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

uint64_t Player.CommandOptions.execution.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 24));
}

uint64_t Player.CommandOptions.execution.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.execution.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

uint64_t Player.CommandOptions.extendedStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 28));
}

uint64_t Player.CommandOptions.extendedStatus.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.extendedStatus.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

void *Player.CommandOptions.route.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 32));
  v2 = v1;
  return v1;
}

void Player.CommandOptions.route.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Player.CommandOptions(0) + 32);

  *(_QWORD *)(v1 + v3) = a1;
}

CFRange (__swiftcall *Player.CommandOptions.route.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

unint64_t Player.CommandOptions.description.getter(uint64_t a1)
{
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;

  v30 = 0xD000000000000016;
  v31 = 0x80000001003ADF60;
  v29._countAndFlagsBits = 0x3D44495555;
  v29._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = UUID.uuidString.getter(a1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x3D44495555;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE500000000000000);
  v5 = (int *)type metadata accessor for Player.CommandOptions(0);
  v6 = (uint64_t *)(v1 + v5[5]);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    String.append(_:)(*(Swift::String *)(&v7 - 1));
    v9._countAndFlagsBits = (uint64_t)strcpy((char *)&v29, ", area=");
    v9._object = (void *)0xE700000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  strcpy((char *)&v29, ", execution=");
  BYTE5(v29._object) = 0;
  HIWORD(v29._object) = -5120;
  v28 = *(_QWORD *)(v1 + v5[6]);
  type metadata accessor for MPCPlayerChangeRequestOptions(0);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v28, v10);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v13);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v29._object);
  v29._countAndFlagsBits = 0xD000000000000016;
  v29._object = (void *)0x80000001003ADF80;
  if (*(_BYTE *)(v1 + v5[7]))
    v14 = 7562585;
  else
    v14 = 28494;
  if (*(_BYTE *)(v1 + v5[7]))
    v15 = 0xE300000000000000;
  else
    v15 = 0xE200000000000000;
  v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v15);
  v17 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v17);
  v18 = *(void **)(v1 + v5[8]);
  if (v18)
  {
    strcpy((char *)&v29, ", route=");
    BYTE1(v29._object) = 0;
    WORD1(v29._object) = 0;
    HIDWORD(v29._object) = -402653184;
    v19 = v18;
    v20 = objc_msgSend(v19, "description");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v23);
    v25 = v29._object;
    String.append(_:)(v29);

    swift_bridgeObjectRelease(v25);
  }
  v26._countAndFlagsBits = 62;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  return v30;
}

void Player.PlaybackCommand.request(from:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

id sub_1001A50C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;

  return objc_msgSend(v12, "stop");
}

_UNKNOWN **static Player.PlaybackCommand.allCases.getter()
{
  return &off_1004685E0;
}

void sub_1001A5138(_QWORD *a1@<X8>)
{
  *a1 = &off_100468608;
}

void sub_1001A5148(uint64_t a1)
{
  char *v1;

  Player.PlaybackCommand.request(from:)(a1, *v1);
}

BOOL static Player.ChangeCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_changeItemCommand);
}

void Player.ChangeCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "changeItemCommand");

  __asm { BR              X10 }
}

id sub_1001A51C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "previousItem");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.ChangeCommand.allCases.getter()
{
  return &off_100468630;
}

void sub_1001A527C(_QWORD *a1@<X8>)
{
  *a1 = &off_100468630;
}

BOOL sub_1001A528C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_changeItemCommand);
}

void sub_1001A5298(void *a1)
{
  char *v1;

  Player.ChangeCommand.request(from:)(a1, *v1);
}

BOOL static Player.ShuffleCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_shuffleCommand);
}

id Player.ShuffleCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "shuffleCommand");

  if (!a2)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "advance");
      goto LABEL_9;
    }
    return 0;
  }
  if (a2 != 1)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "setShuffleType:", 1);
      goto LABEL_9;
    }
    return 0;
  }
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "setShuffleType:", 0);
LABEL_9:
  v6 = v5;
  swift_unknownObjectRelease(v4);
  return v6;
}

_UNKNOWN **static Player.ShuffleCommand.allCases.getter()
{
  return &off_100468658;
}

void sub_1001A5388(_QWORD *a1@<X8>)
{
  *a1 = &off_100468680;
}

BOOL sub_1001A5398(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_shuffleCommand);
}

id sub_1001A53A4(void *a1)
{
  char *v1;

  return Player.ShuffleCommand.request(from:)(a1, *v1);
}

BOOL static Player.FavoriteCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A69F8(a1, (SEL *)&selRef_likeCommand);
}

id Player.FavoriteCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "likeCommand");

  if (!v5)
    return 0;
  if (a2)
    v6 = a2 == 1;
  else
    v6 = objc_msgSend(v5, "value") ^ 1;
  v7 = objc_msgSend(v5, "changeValue:", v6);
  swift_unknownObjectRelease(v5);
  return v7;
}

BOOL sub_1001A5494(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A6B70(a1, a2, a3, (SEL *)&selRef_likeCommand);
}

id sub_1001A54A0(void *a1)
{
  char *v1;

  return Player.FavoriteCommand.request(from:)(a1, *v1);
}

BOOL static Player.RepeatCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_repeatCommand);
}

void Player.RepeatCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "repeatCommand");

  __asm { BR              X10 }
}

id sub_1001A5518(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "advance");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.RepeatCommand.allCases.getter()
{
  return &off_1004686A8;
}

void sub_1001A55C4(_QWORD *a1@<X8>)
{
  *a1 = &off_1004686D0;
}

BOOL sub_1001A55D4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_repeatCommand);
}

void sub_1001A55E0(void *a1)
{
  char *v1;

  Player.RepeatCommand.request(from:)(a1, *v1);
}

BOOL static Player.QueueEndCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_actionAtQueueEndCommand);
}

void Player.QueueEndCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "actionAtQueueEndCommand");

  __asm { BR              X10 }
}

id sub_1001A5658(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  v15 = 0;
  if (v14)
  {
    v15 = objc_msgSend(v14, "setQueueEndAction:", 0);
    swift_unknownObjectRelease(v14);
  }
  return v15;
}

_UNKNOWN **static Player.QueueEndCommand.allCases.getter()
{
  return &off_1004686F8;
}

void sub_1001A56E4(_QWORD *a1@<X8>)
{
  *a1 = &off_100468720;
}

BOOL sub_1001A56F4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_actionAtQueueEndCommand);
}

void sub_1001A5700(void *a1)
{
  char *v1;

  Player.QueueEndCommand.request(from:)(a1, *v1);
}

void *Player.InsertCommand.location.getter(uint64_t a1, void *a2)
{
  sub_1000728C0(a2);
  return a2;
}

void Player.InsertCommand.Location.hash(into:)(uint64_t a1, void *a2)
{
  Swift::UInt v4;
  id v5;

  switch((unint64_t)a2)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = a2;
      NSObject.hash(into:)(a1);
      sub_100072634(a2);
      break;
  }
}

Swift::Int Player.InsertCommand.Location.hashValue.getter(void *a1)
{
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  switch((unint64_t)a1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = a1;
      NSObject.hash(into:)(v5);
      sub_100072634(a1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_1001A586C()
{
  void **v0;

  return Player.InsertCommand.Location.hashValue.getter(*v0);
}

void sub_1001A5874(uint64_t a1)
{
  void **v1;
  void *v3;
  Swift::UInt v4;
  id v5;

  v3 = *v1;
  switch((unint64_t)*v1)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = v3;
      NSObject.hash(into:)(a1);
      sub_100072634(v3);
      break;
  }
}

Swift::Int sub_1001A5910()
{
  void **v0;
  void *v1;
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  switch((unint64_t)v1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = v1;
      NSObject.hash(into:)(v5);
      sub_100072634(v1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1001A59BC(void **a1, void **a2)
{
  return _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, *a2);
}

BOOL static Player.InsertCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_insertCommand);
}

id Player.InsertCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "insertCommand");

  switch(a3)
  {
    case 0:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAfterPlayingItemWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 1:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfTracklistWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 2:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfUpNextWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 3:
      if (!v6)
        return 0;
      v9 = objc_msgSend(v6, "insertAfterLastSection");
      if (v9)
      {
        v10 = v9;
        v8 = objc_msgSend(v9, "insertWithPlaybackIntent:", a2);
        swift_unknownObjectRelease(v10);
LABEL_11:
        swift_unknownObjectRelease(v6);
      }
      else
      {
        swift_unknownObjectRelease(v6);
        return 0;
      }
      return v8;
    default:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertPlaybackIntent:afterItem:", a2, a3);
LABEL_10:
      v8 = v7;
      goto LABEL_11;
  }
}

unint64_t Player.InsertCommand.description.getter(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void *v14;
  unint64_t v15;
  unint64_t v16;

  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v15 = 0xD000000000000015;
  v16 = 0x80000001003ADFA0;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x697461636F6C202CLL;
  v10._object = (void *)0xEB000000003D6E6FLL;
  String.append(_:)(v10);
  v14 = a2;
  sub_1000728C0(a2);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v14, &type metadata for Player.InsertCommand.Location);
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 10537;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  return v15;
}

uint64_t static Player.InsertCommand.__derived_struct_equals(_:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  char v8;

  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a3) & 1) == 0)
    return 0;
  switch((unint64_t)a2)
  {
    case 0uLL:
      if (a4)
        return 0;
      break;
    case 1uLL:
      if (a4 != (void *)1)
        return 0;
      break;
    case 2uLL:
      if (a4 != (void *)2)
        return 0;
      break;
    case 3uLL:
      if (a4 != (void *)3)
        return 0;
      break;
    default:
      if ((unint64_t)a4 < 4)
        return 0;
      sub_1000728C0(a2);
      sub_1000728C0(a4);
      v8 = static NSObject.== infix(_:_:)(a2, a4);
      sub_100072634(a4);
      sub_100072634(a2);
      if ((v8 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

uint64_t sub_1001A5D6C(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = (void *)a1[1];
  v5 = *a2;
  v4 = (void *)a2[1];
  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v5) & 1) == 0)
    return 0;
  switch((unint64_t)v2)
  {
    case 0uLL:
      if (v4)
        return 0;
      break;
    case 1uLL:
      if (v4 != (void *)1)
        return 0;
      break;
    case 2uLL:
      if (v4 != (void *)2)
        return 0;
      break;
    case 3uLL:
      if (v4 != (void *)3)
        return 0;
      break;
    default:
      if ((unint64_t)v4 < 4)
        return 0;
      sub_1000728C0(v2);
      sub_1000728C0(v4);
      v6 = static NSObject.== infix(_:_:)(v2, v4);
      sub_100072634(v4);
      sub_100072634(v2);
      if ((v6 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

unint64_t sub_1001A5E5C()
{
  void **v0;

  return Player.InsertCommand.description.getter(*v0, v0[1]);
}

BOOL sub_1001A5E64(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_insertCommand);
}

id sub_1001A5E70(void *a1)
{
  uint64_t *v1;

  return Player.InsertCommand.request(from:)(a1, *v1, v1[1]);
}

BOOL static Player.ReplaceCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_resetCommand);
}

id Player.ClearCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  char **v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "resetCommand");

  if (!v4)
    return 0;
  v5 = &selRef_clear;
  if ((a2 & 1) != 0)
    v5 = &selRef_clearUpNextItems;
  v6 = objc_msgSend(v4, *v5);
  swift_unknownObjectRelease(v4);
  return v6;
}

BOOL sub_1001A5F24(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_resetCommand);
}

id sub_1001A5F30(void *a1)
{
  char *v1;

  return Player.ClearCommand.request(from:)(a1, *v1);
}

id Player.ReplaceCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "resetCommand");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "replaceWithPlaybackIntent:replaceIntent:", a2, a3);
  swift_unknownObjectRelease(v6);
  return v7;
}

unint64_t Player.ReplaceCommand.description.getter(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v16 = 0xD000000000000016;
  v17 = 0x80000001003ADFC0;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x80000001003ADFE0;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v10);
  v15 = a2;
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v12._countAndFlagsBits = String.init<A>(describing:)(&v15, v11);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 10537;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  return v16;
}

id sub_1001A60F0(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v2 = *v1;
  v3 = v1[1];
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "resetCommand");

  if (!v5)
    return 0;
  v6 = objc_msgSend(v5, "replaceWithPlaybackIntent:replaceIntent:", v2, v3);
  swift_unknownObjectRelease(v5);
  return v6;
}

void *Player.MoveCommand.location.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

uint64_t static Player.MoveCommand.Location.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_1001A7788(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_1001A61C4(uint64_t a1, uint64_t a2)
{
  return sub_1001A7788(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

BOOL static Player.MoveCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_reorderCommand);
}

id Player.MoveCommand.request(from:)(void *a1, uint64_t a2, void *a3, char a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v7 = a3;
  v8 = objc_msgSend(a1, "tracklist");
  v9 = objc_msgSend(v8, "reorderCommand");

  if ((a4 & 1) != 0)
  {
    if (v9)
    {
      v10 = objc_msgSend(v9, "moveItem:afterItem:", a2, v7);
      goto LABEL_6;
    }
LABEL_7:

    return 0;
  }
  if (!v9)
    goto LABEL_7;
  v10 = objc_msgSend(v9, "moveItem:beforeItem:", a2, v7);
LABEL_6:
  v11 = v10;
  swift_unknownObjectRelease(v9);

  return v11;
}

BOOL sub_1001A62CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_reorderCommand);
}

id sub_1001A62D8(void *a1)
{
  uint64_t v1;

  return Player.MoveCommand.request(from:)(a1, *(_QWORD *)v1, *(void **)(v1 + 8), *(_BYTE *)(v1 + 16));
}

BOOL static Player.LeaveSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "leaveSession");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id Player.LeaveSessionCommand.request(from:)(void *a1)
{
  return objc_msgSend(a1, "leaveSession");
}

uint64_t Player.BuildSharedSessionCommand.init(intentHandler:)()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v5[4] = CFRange.init(_:);
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10001D2BC;
  v5[3] = &unk_10047A378;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

BOOL static Player.BuildSharedSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  return v2 != 0;
}

id Player.BuildSharedSessionCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v11[4] = a3;
  v12 = a4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000148C8;
  v11[3] = &unk_10047A3A0;
  v7 = _Block_copy(v11);
  v8 = v12;
  swift_retain(a4);
  v9 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", a2, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  return v9;
}

id sub_1001A653C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v10[5];
  uint64_t v11;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v10[4] = v3;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000148C8;
  v10[3] = &unk_10047B190;
  v6 = _Block_copy(v10);
  v7 = v11;
  swift_retain(v5);
  v8 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  return v8;
}

BOOL static Player.SeekCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A69F8(a1, (SEL *)&selRef_seekCommand);
}

id Player.SeekCommand.request(from:)(void *a1, uint64_t a2, char a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "seekCommand");

  if (!v7)
    return 0;
  if (a3)
  {
    if (a3 == 1)
      v8 = objc_msgSend(v7, "changePositionToElapsedInterval:", *(double *)&a2);
    else
      v8 = objc_msgSend(v7, "endSeek");
  }
  else
  {
    v8 = objc_msgSend(v7, "beginSeekWithDirection:", a2);
  }
  v9 = v8;
  swift_unknownObjectRelease(v7);
  return v9;
}

BOOL sub_1001A66F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A6B70(a1, a2, a3, (SEL *)&selRef_seekCommand);
}

id sub_1001A6704(void *a1)
{
  uint64_t v1;

  return Player.SeekCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void Player.JumpCommand.resolvedTimeInterval(for:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (a1)
  {
    v5 = objc_msgSend(a1, "tracklist");
    v6 = objc_msgSend(v5, "playingItem");

    v7 = objc_msgSend(v6, "seekCommand");
    v8 = a3;
    if (!a3)
      goto LABEL_6;
  }
  else
  {
    v7 = 0;
    v8 = a3;
    if (!a3)
    {
LABEL_6:
      swift_unknownObjectRelease(v7);
      return;
    }
  }
  if (v8 == 1)
    goto LABEL_6;
  if (a2)
  {
    if (v7)
    {
      v9 = objc_msgSend(v7, "preferredForwardJumpIntervals");
      v10 = sub_10000598C(0, &qword_1004BCBD8, NSNumber_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      if ((unint64_t)v11 >> 62)
      {
        if (v11 < 0)
          v16 = v11;
        else
          v16 = v11 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v17 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        if (!v17)
          goto LABEL_33;
        goto LABEL_12;
      }
      if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_12:
        if ((v11 & 0xC000000000000001) != 0)
          goto LABEL_34;
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_20:
          v14 = *(id *)(v11 + 32);
LABEL_21:
          v15 = v14;
          swift_bridgeObjectRelease();
          v20 = 0;
          v21 = 1;
          static Double._conditionallyBridgeFromObjectiveC(_:result:)(v15, &v20);

          swift_unknownObjectRelease(v7);
          return;
        }
        __break(1u);
        goto LABEL_29;
      }
LABEL_33:
      swift_unknownObjectRelease(v7);
      swift_bridgeObjectRelease();
    }
  }
  else if (v7)
  {
    v12 = objc_msgSend(v7, "preferredBackwardJumpIntervals");
    v13 = sub_10000598C(0, &qword_1004BCBD8, NSNumber_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if ((unint64_t)v11 >> 62)
    {
LABEL_29:
      if (v11 < 0)
        v18 = v11;
      else
        v18 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease();
      if (!v19)
        goto LABEL_33;
      goto LABEL_18;
    }
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_18:
      if ((v11 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        goto LABEL_20;
      }
LABEL_34:
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      goto LABEL_21;
    }
    goto LABEL_33;
  }
}

BOOL sub_1001A69F8(void *a1, SEL *a2)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  v5 = objc_msgSend(v4, *a2);
  if (v5)
    swift_unknownObjectRelease(v5);
  return v5 != 0;
}

id Player.JumpCommand.request(from:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v6;
  id v7;
  id v8;
  char **v9;
  id v10;

  v6 = objc_msgSend(a1, "tracklist");
  v7 = objc_msgSend(v6, "playingItem");

  v8 = objc_msgSend(v7, "seekCommand");
  Player.JumpCommand.resolvedTimeInterval(for:)(a1, a2, a3);
  if (a3 != 1)
  {
    if (v8)
    {
      v9 = &selRef_jumpByInterval_;
      goto LABEL_6;
    }
    return 0;
  }
  if (!v8)
    return 0;
  v9 = &selRef_changePositionToElapsedInterval_;
LABEL_6:
  v10 = objc_msgSend(v8, *v9);
  swift_unknownObjectRelease(v8);
  return v10;
}

BOOL sub_1001A6B70(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  v7 = objc_msgSend(v6, *a4);
  if (v7)
    swift_unknownObjectRelease(v7);
  return v7 != 0;
}

id sub_1001A6BF8(void *a1)
{
  uint64_t v1;

  return Player.JumpCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

BOOL static Player.VocalsCommand.isAvailable(in:)(void *a1)
{
  return sub_1001A6C10(a1, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_1001A6C10(void *a1, SEL *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, *a2);

  if (v4)
    swift_unknownObjectRelease(v4);
  return v4 != 0;
}

id Player.VocalsCommand.request(from:)(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "vocalsControlCommand");

  if (!v4)
    return 0;
  if ((a2 & 0x10000000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 0);
  }
  else if ((a2 & 0x100000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 1);
  }
  else
  {
    LODWORD(v5) = a2;
    v6 = objc_msgSend(v4, "setVocalsLevel:", v5);
  }
  v7 = v6;
  swift_unknownObjectRelease(v4);
  return v7;
}

uint64_t static Player.VocalsCommand.localizedDisablementMessage(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  if (a1 == 5)
  {
    v12 = 0xD000000000000052;
    v13 = "Vocal controls will be available once Low Power Mode is turned off on your device.";
    goto LABEL_5;
  }
  if (a1 == 4)
  {
    v12 = 0xD00000000000003DLL;
    v13 = "Vocal controls will be available once your device cools down.";
LABEL_5:
    v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    goto LABEL_7;
  }
  v14 = 0x80000001003AE060;
  v12 = 0xD000000000000029;
LABEL_7:
  String.LocalizationValue.init(stringLiteral:)(v12, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v15 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v16 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

uint64_t Player.VocalsCommand.description.getter(uint64_t a1)
{
  float v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v9;
  _QWORD v10[2];

  strcpy((char *)v10, "VocalCommand(");
  HIWORD(v10[1]) = -4864;
  if ((a1 & 0x10000000000) != 0)
  {
    v5 = 6710895;
    v6 = 0xE300000000000000;
LABEL_6:
    String.append(_:)(*(Swift::String *)&v5);
    goto LABEL_7;
  }
  if ((a1 & 0x100000000) != 0)
  {
    v5 = 28271;
    v6 = 0xE200000000000000;
    goto LABEL_6;
  }
  v1 = *(float *)&a1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 2649711;
  v2._object = (void *)0xE300000000000000;
  String.append(_:)(v2);
  Float.write<A>(to:)(&v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v1);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
LABEL_7:
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v10[0];
}

uint64_t static Player.VocalsCommand.Prepare.isAvailable(in:)(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, "tracklist");
  v3 = objc_msgSend(v2, "prepareVocalsControlCommand");
  swift_unknownObjectRelease(v3);

  if (!v3)
    return 0;
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "vocalsControlCommand");

  if (v5)
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return 1;
}

id Player.VocalsCommand.Prepare.request(from:)(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "prepareVocalsControlCommand");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "prepare");
  swift_unknownObjectRelease(v2);
  return v3;
}

uint64_t static Player.VocalsCommand.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0x10000000000) != 0)
    return (a2 >> 40) & 1;
  if ((a2 & 0x10000000000) != 0)
    return 0;
  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) == 0)
      return 0;
  }
  else if ((a2 & 0x100000000) != 0 || *(float *)&a1 != *(float *)&a2)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1001A7150(unsigned int *a1, float *a2)
{
  char v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((_BYTE *)a1 + 5);
  result = *((unsigned __int8 *)a2 + 5);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      v5 = *(unsigned int *)a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
      v6 = *((unsigned __int8 *)a1 + 4);
      v7 = *a1;
      if (((v7 | (v6 << 32)) & 0x100000000) != 0)
      {
        if ((v5 & 0x100000000) != 0)
          return 1;
      }
      else if ((v5 & 0x100000000) == 0 && *(float *)&v7 == *a2)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001A71B0()
{
  unsigned int *v0;

  return Player.VocalsCommand.description.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v0 + 5) << 40));
}

BOOL sub_1001A71D8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A71E4(a1, a2, a3, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_1001A71E4(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, *a4);

  if (v6)
    swift_unknownObjectRelease(v6);
  return v6 != 0;
}

id sub_1001A7244(void *a1)
{
  unsigned int *v1;

  return Player.VocalsCommand.request(from:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40));
}

uint64_t sub_1001A7288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = sub_1000057B4((uint64_t *)&unk_1004C0590);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_QWORD *)(v0 + 112) = inited;
  *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
  sub_1000444A8(v1, inited + 32);
  v4 = swift_task_alloc(dword_1004C0794);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_1001A7328;
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v4 + 200) = inited;
  return swift_task_switch(sub_1001A443C, 0, 0);
}

uint64_t sub_1001A7328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v3[16] = a1;
  v3[17] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001A7490;
  }
  else
  {
    v6 = v3[14];
    v7 = v6 + 32;
    swift_setDeallocating(v6);
    v8 = *(_QWORD *)(v6 + 16);
    v9 = sub_1000057B4(&qword_1004BF5C0);
    swift_arrayDestroy(v7, v8, v9);
    v5 = sub_1001A73C4;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_1001A73C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    v3 = 0;
    goto LABEL_12;
  }
  if (v1 < 0)
    v4 = *(_QWORD *)(v0 + 128);
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 128));
    v2 = *(_QWORD *)(v0 + 128);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(id *)(v2 + 32);
LABEL_6:
    swift_bridgeObjectRelease(v2);
LABEL_12:
    (*(void (**)(id))(v0 + 8))(v3);
    return;
  }
  __break(1u);
}

uint64_t sub_1001A7490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = v1 + 32;
  swift_setDeallocating(v1);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_1000057B4(&qword_1004BF5C0);
  swift_arrayDestroy(v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001A74EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    swift_bridgeObjectRetain();
    swift_continuation_throwingResume(a2);
    return;
  }
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v14))
    goto LABEL_12;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease(a1);
    v7 = objc_msgSend(v6, "error");

    if (v7)
    {
      v8 = sub_10018A4F4();
      v9 = swift_allocError(&type metadata for Player.PlaybackError, v8, 0, 0);
      *v10 = v7;
      v10[1] = a1;
      v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v9;
      swift_bridgeObjectRetain();
      swift_continuation_throwingResumeWithError(a2, v12);
      return;
    }
    goto LABEL_13;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1001A7640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10000598C(0, (unint64_t *)&unk_1004C0670, MPCPlayerCommandStatus_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void *MPCPlayerCommandRequest.request(from:)()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id Artwork.Placeholder.background.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

id MPCPlayerResponse.isPlayingItemFavorited.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  {
    v3 = objc_msgSend(v2, "likeCommand");

    if (v3)
    {
      v2 = objc_msgSend(v3, "value");
      swift_unknownObjectRelease(v3);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1001A7788(void *a1, char a2, void *a3, char a4)
{
  char v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
    v7 = a1;
    v8 = a3;
    v6 = static NSObject.== infix(_:_:)(v7, v8);

    return v6 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v6 = 0;
  return v6 & 1;
}

uint64_t _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(void *a1, void *a2)
{
  char v4;
  uint64_t result;

  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2)
        goto LABEL_11;
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1)
        goto LABEL_7;
      goto LABEL_11;
    case 2uLL:
      if (a2 != (void *)2)
        goto LABEL_11;
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3)
        goto LABEL_11;
LABEL_7:
      result = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_11:
        result = 0;
      }
      else
      {
        sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
        sub_1000728C0(a1);
        sub_1000728C0(a2);
        v4 = static NSObject.== infix(_:_:)(a1, a2);
        sub_100072634(a2);
        sub_100072634(a1);
        result = v4 & 1;
      }
      break;
  }
  return result;
}

uint64_t type metadata accessor for Player.CommandOptions(uint64_t a1)
{
  uint64_t result;

  result = qword_1004C0890;
  if (!qword_1004C0890)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Player.CommandOptions);
  return result;
}

uint64_t sub_1001A7920(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004C06D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s9MusicCore6PlayerC14CommandOptionsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(*v6, v7, *v8, v9, 0), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    if (*(_QWORD *)(a1 + v4[6]) != *(_QWORD *)(a2 + v4[6])
      || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
    {
      return 0;
    }
    v13 = v4[8];
    v14 = *(void **)(a1 + v13);
    v15 = *(void **)(a2 + v13);
    if (v14)
    {
      if (v15)
      {
        sub_10000598C(0, &qword_1004C0658, MPAVRoute_ptr);
        v16 = v15;
        v17 = v14;
        v18 = static NSObject.== infix(_:_:)(v17, v16);

        if ((v18 & 1) != 0)
          return 1;
      }
    }
    else if (!v15)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

_QWORD *sub_1001A7A7C(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;

  result = _swiftEmptyArrayStorage;
  v20 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000444A8(v6, (uint64_t)v16);
      v7 = sub_1000057B4(&qword_1004BF5C0);
      v8 = sub_1000057B4(&qword_1004C06C8);
      if (swift_dynamicCast(&v17, v16, v7, v8, 6))
      {
        v9 = *((_QWORD *)&v18 + 1);
        v10 = v19;
        sub_1000096A0(&v17, *((uint64_t *)&v18 + 1));
        v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(a2, v9, v10);
        v12 = sub_10000970C(&v17);
        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v13 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v15);
        }
      }
      else
      {
        v19 = 0;
        v17 = 0u;
        v18 = 0u;
        sub_1001A7920((uint64_t)&v17);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return (_QWORD *)v20;
  }
  return result;
}

_QWORD *sub_1001A7BE8(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19[2];
  _QWORD *v20;

  result = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1000444A8(v6, (uint64_t)v19);
      sub_1000444A8((uint64_t)v19, (uint64_t)v15);
      v11 = sub_1000057B4(&qword_1004BF5C0);
      v12 = sub_1000057B4(&qword_1004C06C8);
      if (!swift_dynamicCast(&v16, v15, v11, v12, 6))
        break;
      v8 = *((_QWORD *)&v17 + 1);
      v9 = v18;
      sub_1000096A0(&v16, *((uint64_t *)&v17 + 1));
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(a2, v8, v9);
      sub_10000970C(&v16);
      if (!v10)
        goto LABEL_8;

      sub_10000970C(v19);
LABEL_5:
      v6 += 40;
      if (!--v4)
        return v20;
    }
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_1001A7920((uint64_t)&v16);
LABEL_8:
    sub_100033620(v19, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      sub_10009732C(0, v7[2] + 1, 1);
    v7 = v20;
    v14 = v20[2];
    v13 = v20[3];
    if (v14 >= v13 >> 1)
    {
      sub_10009732C((_QWORD *)(v13 > 1), v14 + 1, 1);
      v7 = v20;
    }
    v7[2] = v14 + 1;
    sub_100033620(&v16, (uint64_t)&v7[5 * v14 + 4]);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1001A7D9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A7DAC(uint64_t a1)
{
  uint64_t v1;

  sub_1001A74EC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001A7DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A7DC4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001A7DD0()
{
  unint64_t result;

  result = qword_1004C07A8;
  if (!qword_1004C07A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.PlaybackCommand, &type metadata for Player.PlaybackCommand);
    atomic_store(result, (unint64_t *)&qword_1004C07A8);
  }
  return result;
}

uint64_t sub_1001A7E14()
{
  return sub_1001A8030(&qword_1004C07B0, &qword_1004C07B8);
}

unint64_t sub_1001A7E3C()
{
  unint64_t result;

  result = qword_1004C07C0;
  if (!qword_1004C07C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ChangeCommand, &type metadata for Player.ChangeCommand);
    atomic_store(result, (unint64_t *)&qword_1004C07C0);
  }
  return result;
}

uint64_t sub_1001A7E80()
{
  return sub_1001A8030(&qword_1004C07C8, &qword_1004C07D0);
}

unint64_t sub_1001A7EA8()
{
  unint64_t result;

  result = qword_1004C07D8;
  if (!qword_1004C07D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ShuffleCommand, &type metadata for Player.ShuffleCommand);
    atomic_store(result, (unint64_t *)&qword_1004C07D8);
  }
  return result;
}

uint64_t sub_1001A7EEC()
{
  return sub_1001A8030(&qword_1004C07E0, &qword_1004C07E8);
}

unint64_t sub_1001A7F14()
{
  unint64_t result;

  result = qword_1004C07F0;
  if (!qword_1004C07F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.FavoriteCommand, &type metadata for Player.FavoriteCommand);
    atomic_store(result, (unint64_t *)&qword_1004C07F0);
  }
  return result;
}

unint64_t sub_1001A7F5C()
{
  unint64_t result;

  result = qword_1004C07F8;
  if (!qword_1004C07F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.RepeatCommand, &type metadata for Player.RepeatCommand);
    atomic_store(result, (unint64_t *)&qword_1004C07F8);
  }
  return result;
}

uint64_t sub_1001A7FA0()
{
  return sub_1001A8030(&qword_1004C0800, &qword_1004C0808);
}

unint64_t sub_1001A7FC8()
{
  unint64_t result;

  result = qword_1004C0810;
  if (!qword_1004C0810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.QueueEndCommand, &type metadata for Player.QueueEndCommand);
    atomic_store(result, (unint64_t *)&qword_1004C0810);
  }
  return result;
}

uint64_t sub_1001A800C()
{
  return sub_1001A8030(&qword_1004C0818, &qword_1004C0820);
}

uint64_t sub_1001A8030(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100009788(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A8074()
{
  unint64_t result;

  result = qword_1004C0828;
  if (!qword_1004C0828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.InsertCommand.Location, &type metadata for Player.InsertCommand.Location);
    atomic_store(result, (unint64_t *)&qword_1004C0828);
  }
  return result;
}

unint64_t sub_1001A80BC()
{
  unint64_t result;

  result = qword_1004C0830;
  if (!qword_1004C0830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ClearCommand, &type metadata for Player.ClearCommand);
    atomic_store(result, (unint64_t *)&qword_1004C0830);
  }
  return result;
}

uint64_t _s13PlaybackErrorVwxx(_QWORD *a1)
{
  swift_errorRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

_QWORD *_s13PlaybackErrorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s13PlaybackErrorVwca(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = *a1;
  *a1 = v4;
  swift_errorRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *_s13PlaybackErrorVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_errorRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for Player.PlaybackError()
{
  return &type metadata for Player.PlaybackError;
}

_QWORD *_s14CommandOptionsVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v14;
    swift_bridgeObjectRetain();
    v15 = v14;
  }
  return a1;
}

void _s14CommandOptionsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));

}

uint64_t _s14CommandOptionsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain();
  v14 = v13;
  return a1;
}

uint64_t _s14CommandOptionsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t _s14CommandOptionsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s14CommandOptionsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[8];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t _s14CommandOptionsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A8574);
}

uint64_t sub_1001A8574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s14CommandOptionsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A860C);
}

uint64_t sub_1001A860C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1001A8688(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1003D17A8;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_1003D17C0;
    v4[4] = &unk_1003D17D8;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.PlaybackCommand()
{
  return &type metadata for Player.PlaybackCommand;
}

uint64_t _s13ChangeCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001A877C + 4 * byte_1003D0DF1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001A87B0 + 4 * byte_1003D0DEC[v4]))();
}

uint64_t sub_1001A87B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A87B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A87C0);
  return result;
}

uint64_t sub_1001A87CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A87D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001A87D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A87E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ChangeCommand()
{
  return &type metadata for Player.ChangeCommand;
}

ValueMetadata *type metadata accessor for Player.ShuffleCommand()
{
  return &type metadata for Player.ShuffleCommand;
}

uint64_t _s14ShuffleCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001A8860 + 4 * byte_1003D0DFB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001A8894 + 4 * byte_1003D0DF6[v4]))();
}

uint64_t sub_1001A8894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A889C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A88A4);
  return result;
}

uint64_t sub_1001A88B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A88B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001A88BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A88C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.FavoriteCommand()
{
  return &type metadata for Player.FavoriteCommand;
}

ValueMetadata *type metadata accessor for Player.RepeatCommand()
{
  return &type metadata for Player.RepeatCommand;
}

uint64_t _s15PlaybackCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001A893C + 4 * byte_1003D0E05[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001A8970 + 4 * byte_1003D0E00[v4]))();
}

uint64_t sub_1001A8970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A8978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A8980);
  return result;
}

uint64_t sub_1001A898C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A8994);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001A8998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A89A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.QueueEndCommand()
{
  return &type metadata for Player.QueueEndCommand;
}

_QWORD *_s13InsertCommandVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = v3;
  if ((unint64_t)v4 >= 4)
    v6 = v4;
  a1[1] = v4;
  return a1;
}

void _s13InsertCommandVwxx(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if ((unint64_t)v2 >= 4)

}

uint64_t _s13InsertCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  if ((unint64_t)v7 >= 4)
  {
    if ((unint64_t)v8 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v8;
      v10 = v8;

      return a1;
    }

    v8 = *(void **)(a2 + 8);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 4)
  {
LABEL_6:
    *(_QWORD *)(a1 + 8) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;
  return a1;
}

uint64_t _s13InsertCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 8);
  v6 = a2[1];
  if ((unint64_t)v5 >= 4)
  {
    if (v6 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v6;

      return a1;
    }

  }
  *(_QWORD *)(a1 + 8) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Player.InsertCommand()
{
  return &type metadata for Player.InsertCommand;
}

uint64_t _s13InsertCommandV8LocationOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t _s13InsertCommandV8LocationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.InsertCommand.Location()
{
  return &type metadata for Player.InsertCommand.Location;
}

uint64_t _s12ClearCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001A8C40 + 4 * byte_1003D0E0F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001A8C74 + 4 * byte_1003D0E0A[v4]))();
}

uint64_t sub_1001A8C74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A8C7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A8C84);
  return result;
}

uint64_t sub_1001A8C90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A8C98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001A8C9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A8CA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ClearCommand()
{
  return &type metadata for Player.ClearCommand;
}

_QWORD *_s14ReplaceCommandVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t _s14ReplaceCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t _s14ReplaceCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for Player.ReplaceCommand()
{
  return &type metadata for Player.ReplaceCommand;
}

uint64_t _s11MoveCommandVwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

void _s11MoveCommandVwxx(id *a1)
{

}

uint64_t _s11MoveCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v10 = v7;

  return a1;
}

uint64_t _s11MoveCommandVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;

  return a1;
}

uint64_t _s11MoveCommandVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11MoveCommandVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.MoveCommand()
{
  return &type metadata for Player.MoveCommand;
}

ValueMetadata *type metadata accessor for Player.MoveCommand.Location()
{
  return &type metadata for Player.MoveCommand.Location;
}

ValueMetadata *type metadata accessor for Player.LeaveSessionCommand()
{
  return &type metadata for Player.LeaveSessionCommand;
}

uint64_t _s25BuildSharedSessionCommandVwCP(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain(v3);
  return a1;
}

double _s25BuildSharedSessionCommandVwxx(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

uint64_t _s25BuildSharedSessionCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v9);
  return a1;
}

uint64_t _s25BuildSharedSessionCommandVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.BuildSharedSessionCommand()
{
  return &type metadata for Player.BuildSharedSessionCommand;
}

ValueMetadata *type metadata accessor for Player.SeekCommand()
{
  return &type metadata for Player.SeekCommand;
}

ValueMetadata *type metadata accessor for Player.JumpCommand()
{
  return &type metadata for Player.JumpCommand;
}

uint64_t _s13VocalsCommandOwCP(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s13VocalsCommandOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13VocalsCommandOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_1001A90DC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1001A90F8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand()
{
  return &type metadata for Player.VocalsCommand;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand.Prepare()
{
  return &type metadata for Player.VocalsCommand.Prepare;
}

uint64_t _s12CommandErrorOwxx(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
    return swift_bridgeObjectRelease();
  if (!v1)
    return sub_10000970C((_QWORD *)result);
  return result;
}

uint64_t _s12CommandErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t _s12CommandErrorOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_10000970C((_QWORD *)a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s12CommandErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_10000970C((_QWORD *)a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

ValueMetadata *_s12CommandErrorOMa()
{
  return &_s12CommandErrorON;
}

uint64_t SampleReceiver.waveforms()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = sub_1000057B4(&qword_1004C08F8);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v3 = 1;
  (*(void (**)(_QWORD *, _QWORD))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:));
  v5 = sub_1000057B4(&qword_1004C0900);
  return AsyncStream.init(_:bufferingPolicy:_:)(v5, v3, sub_1001A95BC, v0, v5);
}

double sub_1001A9474(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v2 = sub_1000057B4(&qword_1004BF1E0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001A9A78();
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 40) & ~v10;
  v12 = (char *)swift_allocObject(&unk_10047B288, v11 + v4, v10 | 7);
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v12[v11], (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v13 = sub_1000E6084((uint64_t)v7, (uint64_t)&unk_1004C0D90, (uint64_t)v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_1001A95BC(uint64_t a1)
{
  return sub_1001A9474(a1);
}

uint64_t sub_1001A95C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v7 = sub_1000057B4(&qword_1004BF1D8);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v5[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[10] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v11);
  v5[12] = swift_task_alloc(v11);
  return swift_task_switch(sub_1001A9660, a4, 0);
}

uint64_t sub_1001A9660()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[8];
  v4 = v0[9];
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[5];
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[13] = v8;
  v8(v2, v1, v3);
  v9 = sub_1000057B4(&qword_1004BF1E0);
  v0[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v5, v6, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  swift_beginAccess(v7 + 128, v0 + 2, 33, 0);
  sub_10016D998(v5, v2);
  swift_endAccess(v0 + 2);
  sub_1001A9E50();
  return swift_task_switch(sub_1001A9758, 0, 0);
}

uint64_t sub_1001A9758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v2, v3, v6);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_10047B2B0, v9 + v4, v8 | 7);
  *(_QWORD *)(v10 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v9, v2, v6);
  v11 = swift_retain(v7);
  AsyncStream.Continuation.onTermination.setter(sub_1001AB804, v10, v1, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001A9848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_10047B2D8, v13 + v7, v12 | 7);
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain(a2);
  v15 = sub_1000E6084((uint64_t)v10, (uint64_t)&unk_1004C0DA8, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1001A998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v7 = sub_1000057B4(&qword_1004BF1D8);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001A99EC, a4, 0);
}

uint64_t sub_1001A99EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(*(_QWORD *)(v0 + 40) + 128, v0 + 16, 33, 0);
  sub_1001A0870(v1, v2);
  sub_1001AB954(v2);
  swift_endAccess(v0 + 16);
  sub_1001A9E50();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1001A9A78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v3 = sub_1001AA598();
    v4 = sub_1001AA520();
    v5 = *(_QWORD *)(v4 + 104);
    swift_release(v4);
    v6 = type metadata accessor for SampleReceiver.ContinuationStorage();
    v2 = (_QWORD *)swift_allocObject(v6, 144, 15);
    swift_defaultActor_initialize(v2);
    v2[16] = &_swiftEmptyDictionarySingleton;
    v2[17] = 0;
    v2[14] = v3;
    v2[15] = v5;
    v7 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain(v2);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_1001A9B0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_1000057B4((uint64_t *)&unk_1004C0D60);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000057B4(&qword_1004BF1E0);
  v2[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[12] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v7);
  v2[14] = swift_task_alloc(v7);
  return swift_task_switch(sub_1001A9BAC, v1, 0);
}

uint64_t sub_1001A9BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(v2 + 128, v0 + 16, 0, 0);
  v28 = v2;
  v3 = *(_QWORD *)(v2 + 128);
  v25 = v3 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v3 + 64);
  v26 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v14, *(_QWORD *)(v3 + 56) + *(_QWORD *)(v1 + 72) * i, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v15, v14, v16);
    v17 = *(void **)(v28 + 136);
    if (!v17)
      goto LABEL_26;
    v18 = v17;
    if (!objc_msgSend(v18, "isEnabled"))
    {

LABEL_26:
      (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
LABEL_27:
      swift_release(v3);
      v23 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 80);
      swift_task_dealloc(*(_QWORD *)(v0 + 112));
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v19 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    AsyncStream.Continuation.yield(_:)(v0 + 40, v20);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v22);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v19, v20);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v26)
        goto LABEL_27;
      v12 = *(_QWORD *)(v25 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v26)
          goto LABEL_27;
        v12 = *(_QWORD *)(v25 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v26)
            goto LABEL_27;
          v12 = *(_QWORD *)(v25 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    goto LABEL_27;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1001A9E50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *v14;
  id v15;
  NSObject *v16;
  id v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v20[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v20, 0, 0);
  v2 = *(_QWORD *)(v0[16] + 16);
  if (qword_1004B8D30 != -1)
    swift_once(&qword_1004B8D30, sub_1001AB2CC);
  v3 = type metadata accessor for Logger(0);
  sub_100039D34(v3, (uint64_t)qword_1004C08E0);
  swift_retain(v0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    *(_QWORD *)(v7 + 4) = *(_QWORD *)(v1[16] + 16);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SampleReceiver continuation count %ld", (uint8_t *)v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);

    v8 = (void *)v1[17];
    if (v2)
    {
LABEL_5:
      if (v8)
      {
        v9 = v8;
        v10 = v8;
      }
      else
      {
        v15 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v1[15]);
        v10 = objc_msgSend(objc_allocWithZone((Class)MPCProcessAudioTap), "initWithRefreshRate:delegate:", v15, v1[14]);

        v9 = 0;
        v8 = (void *)v1[17];
      }
      v1[17] = v10;
      v16 = v10;
      v17 = v9;
      sub_1001AA15C(v8);

      -[NSObject setEnabled:](v16, "setEnabled:", 1);
      v14 = Logger.logObject.getter(-[NSObject start](v16, "start"));
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v18, "SampleReceiver audio tap active", v19, 2u);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        v14 = v16;
      }
      goto LABEL_15;
    }
  }
  else
  {

    swift_release(v1);
    v8 = (void *)v1[17];
    if (v2)
      goto LABEL_5;
  }
  v11 = Logger.logObject.getter(objc_msgSend(v8, "stop"));
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SampleReceiver audio tap inactive", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = v1[17];
  v1[17] = 0;
  sub_1001AA15C(v14);
LABEL_15:

}

void sub_1001AA15C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *oslog;

  v3 = *(void **)(v1 + 136);
  if (v3)
  {
    if (!a1)
      goto LABEL_5;
    v4 = v1;
    sub_1001AB994();
    v5 = a1;
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) == 0)
    {
      v3 = *(void **)(v4 + 136);
      if (v3)
      {
LABEL_5:
        v8 = qword_1004B8D30;
        v9 = v3;
        if (v8 != -1)
          swift_once(&qword_1004B8D30, sub_1001AB2CC);
        v10 = type metadata accessor for Logger(0);
        sub_100039D34(v10, (uint64_t)qword_1004C08E0);
        v11 = v9;
        oslog = Logger.logObject.getter(v11);
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v12))
        {
          v13 = swift_slowAlloc(12, -1);
          v14 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v13 = 138412290;
          *(_QWORD *)(v13 + 4) = v11;
          *v14 = v3;
          _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Audio tap created: %@", (uint8_t *)v13, 0xCu);
          v15 = sub_1000057B4(&qword_1004C0DB0);
          swift_arrayDestroy(v14, 1, v15);
          swift_slowDealloc(v14, -1, -1);
          v16 = v13;
LABEL_15:
          swift_slowDealloc(v16, -1, -1);
LABEL_18:

          return;
        }
        goto LABEL_17;
      }
LABEL_11:
      v17 = qword_1004B8D30;
      v18 = v5;
      if (v17 != -1)
        swift_once(&qword_1004B8D30, sub_1001AB2CC);
      v19 = type metadata accessor for Logger(0);
      sub_100039D34(v19, (uint64_t)qword_1004C08E0);
      v11 = v18;
      oslog = Logger.logObject.getter(v11);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v20))
      {
        v21 = swift_slowAlloc(12, -1);
        v22 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v21 = 138412290;
        *(_QWORD *)(v21 + 4) = v11;
        *v22 = a1;
        _os_log_impl((void *)&_mh_execute_header, oslog, v20, "Audio tap destroyed: %@", (uint8_t *)v21, 0xCu);
        v23 = sub_1000057B4(&qword_1004C0DB0);
        swift_arrayDestroy(v22, 1, v23);
        swift_slowDealloc(v22, -1, -1);
        v16 = v21;
        goto LABEL_15;
      }
LABEL_17:

      oslog = v11;
      goto LABEL_18;
    }
  }
  else if (a1)
  {
    v5 = a1;
    goto LABEL_11;
  }
}

uint64_t sub_1001AA414()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1001AA448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1001AA460, 0, 0);
}

uint64_t sub_1001AA460()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[4] = (uint64_t)sub_1001A9A78();
  v1 = (uint64_t **)swift_task_alloc(dword_1004C0A3C);
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1001AA4BC;
  return sub_1001A9B0C(v0[3]);
}

uint64_t sub_1001AA4BC()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v4 + 8))(v2);
}

void *SampleReceiver.sampleRate.unsafeMutableAddressor()
{
  return &static SampleReceiver.sampleRate;
}

uint64_t static SampleReceiver.sampleRate.getter()
{
  return 48000;
}

uint64_t sub_1001AA520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for SampleReceiver.SampleTransformer();
    v2 = swift_allocObject(v4, 112, 7);
    sub_1001AA9A4(48000, 15);
    v5 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v2;
    swift_retain(v2);
    swift_release(v5);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

id sub_1001AA598()
{
  uint64_t v0;
  void *v1;
  id v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = (objc_class *)type metadata accessor for SampleReceiver.TapDelegate();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = swift_weakInit(&v4[OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver], 0);
    swift_weakAssign(v5, v0);
    v10.receiver = v4;
    v10.super_class = v3;
    v6 = objc_msgSendSuper2(&v10, "init");
    v7 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v6;
    v2 = v6;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

double sub_1001AA630(_QWORD *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v5 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver);
  if (Strong)
  {
    v10 = Strong;
    if (a2)
    {
      v11 = (_QWORD *)sub_1001AA520();
      swift_beginAccess(v11 + 3, v29, 33, 0);
      v12 = (char *)v11[3];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      v11[3] = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_1001D6640((uint64_t)v12);
        v11[3] = v12;
      }
      swift_beginAccess(v11 + 4, v28, 33, 0);
      v14 = (char *)v11[4];
      v15 = swift_isUniquelyReferenced_nonNull_native(v14);
      v11[4] = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_1001D6640((uint64_t)v14);
        v11[4] = v14;
      }
      swift_beginAccess(v11 + 5, v27, 33, 0);
      v16 = (char *)v11[5];
      v17 = swift_isUniquelyReferenced_nonNull_native(v16);
      v11[5] = v16;
      if ((v17 & 1) == 0)
      {
        v16 = sub_1001D6640((uint64_t)v16);
        v11[5] = v16;
      }
      swift_beginAccess(v11 + 6, v26, 33, 0);
      v18 = (char *)v11[6];
      v19 = swift_isUniquelyReferenced_nonNull_native(v18);
      v11[6] = v18;
      if ((v19 & 1) == 0)
      {
        v18 = sub_1001D6640((uint64_t)v18);
        v11[6] = v18;
      }
      sub_1001AAD48((float *)v12 + 8, (float *)v14 + 8, (float *)v16 + 8, (float *)v18 + 8, a2, (uint64_t)v11, a1, &v25);
      v20 = v25;
      v11[6] = v18;
      swift_endAccess(v26);
      v11[5] = v16;
      swift_endAccess(v27);
      v11[4] = v14;
      swift_endAccess(v28);
      v11[3] = v12;
      swift_endAccess(v29);
      swift_release(v11);
      v21 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
      v22 = (_QWORD *)swift_allocObject(&unk_10047B260, 48, 7);
      v22[2] = 0;
      v22[3] = 0;
      v22[4] = v10;
      v22[5] = v20;
      swift_retain(v10);
      v23 = sub_1000E6084((uint64_t)v7, (uint64_t)&unk_1004C0D58, (uint64_t)v22);
      swift_release(v23);
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
    }
  }
  return result;
}

id sub_1001AA964()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SampleReceiver.TapDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001AA9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  float v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for vDSP.Radix(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for vDSP.WindowSequence(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  v14 = log2f(ceilf((float)a1 / (float)a2));
  if ((~LODWORD(v14) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v14 <= -1.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v14 >= 1.8447e19)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v15 = (unint64_t)v14;
  if ((unint64_t)v14 >= 0x40)
    v16 = 0;
  else
    v16 = 1 << (unint64_t)v14;
  if (v16 >= 0)
    v17 = v16;
  else
    v17 = v16 + 1;
  if (v16 < -1)
    goto LABEL_20;
  v36 = v7;
  v37 = v6;
  v18 = v17 >> 1;
  if ((unint64_t)v16 >= 2)
  {
    v20 = static Array._allocateBufferUninitialized(minimumCapacity:)(v17 >> 1, &type metadata for Float);
    v35 = v9;
    v21 = v20;
    *(_QWORD *)(v20 + 16) = v18;
    bzero((void *)(v20 + 32), 4 * v18);
    *(_QWORD *)(v3 + 16) = v21;
    v22 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v22 + 16) = v18;
    bzero((void *)(v22 + 32), 4 * v18);
    *(_QWORD *)(v3 + 24) = v22;
    v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v23 + 16) = v18;
    bzero((void *)(v23 + 32), 4 * v18);
    *(_QWORD *)(v3 + 32) = v23;
    v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v24 + 16) = v18;
    bzero((void *)(v24 + 32), 4 * v18);
    *(_QWORD *)(v3 + 40) = v24;
    v25 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v25 + 16) = v18;
    bzero((void *)(v25 + 32), 4 * v18);
    *(_QWORD *)(v3 + 48) = v25;
    v9 = v35;
    v19 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    v19[2] = v18;
    bzero(v19 + 4, 4 * v18);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 16) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 40) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 48) = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v3 + 56) = v19;
  *(float *)(v3 + 64) = 2.0 / (float)v18;
  v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for vDSP.WindowSequence.hanningDenormalized(_:), v10);
  if ((unint64_t)v16 < 2)
    goto LABEL_21;
  __chkstk_darwin(v26);
  *(&v35 - 4) = v13;
  *((_BYTE *)&v35 - 24) = 0;
  v34 = v18;
  v27 = sub_1001AB3E0(v18, (uint64_t (*)(_QWORD *, uint64_t *))sub_1001AB5B0);
  v28 = sub_1001CC5E4(v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)(v3 + 72) = v18;
  *(_QWORD *)(v3 + 80) = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v9, enum case for vDSP.Radix.radix2(_:), v37);
  type metadata accessor for DSPSplitComplex(0);
  v30 = v29;
  v31 = sub_1000057B4(&qword_1004C0D70);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = vDSP.FFT.init(log2n:radix:ofType:)(v15, v9, v30);
  if (v32)
  {
    *(_QWORD *)(v3 + 88) = v32;
    return v3;
  }
LABEL_22:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001003AE3E0, "MusicCore/SampleReceiver.swift", 30, 2, 177, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001AAD48@<X0>(float *a1@<X0>, float *a2@<X1>, float *a3@<X2>, float *a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, char **a8@<X8>)
{
  float v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const DSPComplex *v15;
  vDSP_Length v16;
  __n128 v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  float __B;
  DSPSplitComplex v24;
  DSPSplitComplex __Z;
  _BYTE v26[24];

  v9 = (char *)a6;
  v11 = *(_QWORD *)(a6 + 72);
  __Z.realp = a1;
  __Z.imagp = a2;
  if (v11 >= a5)
    v12 = a5;
  else
    v12 = v11;
  v24.realp = a3;
  v24.imagp = a4;
  sub_1001AAF0C(a7, v12, a6);
  swift_beginAccess(v9 + 16, v26, 0, 0);
  v13 = *((_QWORD *)v9 + 2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 >> 61)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = (const DSPComplex *)sub_100112300((const void *)(v13 + 32), v14 >> 1);
  v16 = (vDSP_Length)v15[2];
  swift_bridgeObjectRetain();
  vDSP_ctoz(v15 + 4, 2, &__Z, 1, v16);
  swift_bridgeObjectRelease();
  v17 = swift_release(v15);
  dispatch thunk of vDSP.FFT.forward(input:output:)(__Z.realp, __Z.imagp, &v24, v17);
  swift_retain(v9);
  v18 = sub_1001AB4D8(v11, (uint64_t)v9, &v24);
  swift_release(v9);
  *a8 = (char *)v18;
  v19 = swift_bridgeObjectRetain();
  sub_1001AB0C4(v19, a8);
  swift_bridgeObjectRelease();
  v8 = *((float *)v9 + 16);
  v9 = *a8;
  v11 = *((_QWORD *)*a8 + 2);
  v20 = swift_bridgeObjectRetain();
  v21 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
LABEL_8:
    v21 = sub_1001D6640((uint64_t)v9);
  __B = v8;
  vDSP_vsmul((const float *)v9 + 8, 1, &__B, (float *)v21 + 8, 1, v11);
  *a8 = v21;
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1001AAF0C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  _BYTE v12[24];

  v3 = *(_QWORD *)(a3 + 72);
  if (v3 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3)
  {
    v6 = result;
    result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(*(_QWORD *)(a3 + 72), &type metadata for Float);
    v7 = result;
    result[2] = v3;
    v8 = result + 4;
    if (a2)
    {
      if (v3 < a2)
        a2 = v3;
      result = memcpy(result + 4, v6, 4 * a2);
    }
  }
  else
  {
    a2 = 0;
    v7 = _swiftEmptyArrayStorage;
    v8 = &_swiftEmptyArrayStorage[4];
  }
  v9 = v3 - a2;
  if (__OFSUB__(v3, a2))
    goto LABEL_14;
  if (v9 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  if (v9)
    bzero((char *)v8 + 4 * a2, 4 * v9);
  v7[2] = v3;
  v10 = *(_QWORD *)(a3 + 80);
  v11 = (char **)(a3 + 16);
  swift_beginAccess(v11, v12, 33, 0);
  swift_bridgeObjectRetain();
  sub_1001AB028((uint64_t)v7, v10, v11);
  swift_endAccess(v12);
  swift_bridgeObjectRelease();
  return (_QWORD *)swift_bridgeObjectRelease();
}

void sub_1001AB028(uint64_t a1, uint64_t a2, char **a3)
{
  char **v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  vDSP_Length v7;

  v6 = *a3;
  v7 = *((_QWORD *)*a3 + 2);
  if (*(_QWORD *)(a1 + 16) != v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2;
  if (*(_QWORD *)(a2 + 16) != v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = a3;
  v5 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a3) & 1) == 0)
LABEL_7:
    v6 = sub_1001D6640((uint64_t)v6);
  vDSP_vmul((const float *)(v5 + 32), 1, (const float *)(v4 + 32), 1, (float *)v6 + 8, 1, v7);
  *v3 = v6;
}

void sub_1001AB0C4(uint64_t a1, char **a2)
{
  char **v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int v6;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  if (v4 != *((_QWORD *)*a2 + 2))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >> 31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = a2;
  v3 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
LABEL_7:
    v5 = sub_1001D6640((uint64_t)v5);
  vvsqrtf((float *)v5 + 8, (const float *)(v3 + 32), &v6);
  *v2 = v5;
}

_QWORD *sub_1001AB178()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  return v0;
}

uint64_t sub_1001AB1CC()
{
  uint64_t v0;

  sub_1001AB178();
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t SampleReceiver.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t SampleReceiver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SampleReceiver()
{
  return objc_opt_self(_TtC9MusicCore14SampleReceiver);
}

uint64_t type metadata accessor for SampleReceiver.ContinuationStorage()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiverP33_F0C6F7CB2C0209FEAE1767B4D841EDD119ContinuationStorage);
}

uint64_t type metadata accessor for SampleReceiver.TapDelegate()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver11TapDelegate);
}

uint64_t type metadata accessor for SampleReceiver.SampleTransformer()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver17SampleTransformer);
}

uint64_t sub_1001AB2CC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004C08E0);
  sub_100039D34(v0, (uint64_t)qword_1004C08E0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x6552656C706D6153, 0xEE00726576696563);
}

uint64_t sub_1001AB34C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001AB380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1004C0D54);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10002E8E0;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1001AA460, 0, 0);
}

uint64_t sub_1001AB3E0(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(result, &type metadata for Float);
    v5[2] = v4;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v6 = v5 + 4;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 4;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == (_QWORD *)v7[0])
      {
        v5[2] = v8;
        swift_bridgeObjectRelease(v5);
        return (uint64_t)v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == (_QWORD *)v7[0])
    {
      v5[2] = v8;
      return (uint64_t)v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

float *sub_1001AB4D8(int64_t a1, uint64_t a2, DSPSplitComplex *a3)
{
  float *v6;
  int64_t v7;
  DSPSplitComplex v9;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a1)
  {
    v6 = (float *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for Float);
    *((_QWORD *)v6 + 2) = a1;
  }
  else
  {
    v6 = (float *)_swiftEmptyArrayStorage;
  }
  v7 = *(_QWORD *)(a2 + 72);
  v9 = *a3;
  vDSP_zvmags(&v9, 1, v6 + 8, 1, a1);
  if (v7 > a1)
LABEL_8:
    __break(1u);
  *((_QWORD *)v6 + 2) = v7;
  return v6;
}

uint64_t sub_1001AB5B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = sub_1000057B4(&qword_1004C0D78);
  v9 = sub_1001AB62C();
  result = static vDSP.formWindow<A>(usingSequence:result:isHalfWindow:)(v5, a1, v6, v8, v9);
  *a2 = v7;
  return result;
}

unint64_t sub_1001AB62C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C0D80;
  if (!qword_1004C0D80)
  {
    v1 = sub_100009788(&qword_1004C0D78);
    result = swift_getWitnessTable(&protocol conformance descriptor for UnsafeMutableBufferPointer<A>, v1);
    atomic_store(result, &qword_1004C0D80);
  }
  return result;
}

uint64_t sub_1001AB678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1000057B4(&qword_1004BF1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001AB6F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BF1E0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1004C0D8C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10002F6EC;
  return sub_1001A95C4(a1, v5, v6, v7, v8);
}

uint64_t sub_1001AB790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1001AB804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1001A9848(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001AB844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001AB8C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1004C0DA4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10002F6EC;
  return sub_1001A998C(a1, v5, v6, v7, v8);
}

uint64_t sub_1001AB954(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004BF1D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001AB994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C0DB8;
  if (!qword_1004C0DB8)
  {
    v1 = objc_opt_self(MPCProcessAudioTap);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004C0DB8);
  }
  return result;
}

id SequentialVocalCommandsFilter.playbackController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t SequentialVocalCommandsFilter.__allocating_init(playbackController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 135, 15);
  swift_defaultActor_initialize();
  *(_WORD *)(v3 + 124) = 0;
  *(_DWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 126) = 1;
  *(_WORD *)(v3 + 132) = 0;
  *(_DWORD *)(v3 + 128) = 0;
  *(_BYTE *)(v3 + 134) = 1;
  *(_QWORD *)(v3 + 112) = a1;
  return v3;
}

uint64_t SequentialVocalCommandsFilter.init(playbackController:)(uint64_t a1)
{
  uint64_t v1;

  swift_defaultActor_initialize(v1);
  *(_WORD *)(v1 + 124) = 0;
  *(_DWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 126) = 1;
  *(_WORD *)(v1 + 132) = 0;
  *(_DWORD *)(v1 + 128) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  *(_QWORD *)(v1 + 112) = a1;
  return v1;
}

unint64_t SequentialVocalCommandsFilter.queuedCommand.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 126) << 48);
}

double SequentialVocalCommandsFilter.append(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  double result;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  NSObject *oslog;
  uint64_t v42;
  uint64_t v43[3];

  v2 = v1;
  if (qword_1004B8D38 != -1)
    swift_once(&qword_1004B8D38, sub_1001AC85C);
  v4 = a1 & 0x10000000000;
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100039D34(v5, (uint64_t)qword_1004C0DC0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v43[0] = v10;
    *(_DWORD *)v9 = 136446210;
    LOBYTE(v42) = v4 != 0;
    v11 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v11, v12, v43);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "↪️ Queuing %{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((*(_BYTE *)(v1 + 134) & 1) == 0)
  {
    v14 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
    if (v4)
    {
      if ((v14 & 0x10000000000) != 0)
        goto LABEL_8;
    }
    else if ((v14 & 0x10000000000) == 0)
    {
      if ((a1 & 0x100000000) != 0)
      {
        if ((v14 & 0x100000000) != 0)
          goto LABEL_8;
      }
      else if ((v14 & 0x100000000) == 0 && *(float *)&a1 == *(float *)(v1 + 128))
      {
LABEL_8:
        oslog = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v15))
        {
          v16 = swift_slowAlloc(12, -1);
          v17 = swift_slowAlloc(32, -1);
          v43[0] = v17;
          *(_DWORD *)v16 = 136446210;
          LOBYTE(v42) = v4 != 0;
          v18 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
          *(_QWORD *)(v16 + 4) = sub_1000393D0(v18, v19, v43);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, oslog, v15, "↪️❌ Ignored %{public}s; already executing.",
            (uint8_t *)v16,
            0xCu);
          swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v17, -1, -1);
          swift_slowDealloc(v16, -1, -1);
        }

        return result;
      }
    }
  }
  swift_beginAccess(v1 + 120, v43, 1, 0);
  if ((*(_BYTE *)(v1 + 126) & 1) != 0)
    goto LABEL_33;
  v22 = *(unsigned int *)(v1 + 120) | ((unint64_t)*(unsigned __int16 *)(v1 + 124) << 32);
  if ((v22 & 0x10000000000) == 0)
  {
    if (!v4)
    {
      if ((v22 & 0x100000000) == 0)
      {
        if ((a1 & 0x100000000) != 0 || *(float *)(v1 + 120) != *(float *)&a1)
          goto LABEL_30;
        goto LABEL_26;
      }
      if ((a1 & 0x100000000) != 0)
        goto LABEL_26;
    }
LABEL_30:
    v29 = Logger.logObject.getter(v21);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v42 = v32;
      *(_DWORD *)v31 = 136446210;
      v33 = (char *)Player.VocalsCommand.description.getter(v22 & 0xFFFFFFFFFFLL | (((v22 >> 40) & 1) << 40));
      *(_QWORD *)(v31 + 4) = sub_1000393D0(v33, v34, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "↪️🫳 Dropping queued command %{public}s", (uint8_t *)v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

LABEL_33:
    v35 = Logger.logObject.getter(v21);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v42 = v38;
      *(_DWORD *)v37 = 136446210;
      v39 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
      *(_QWORD *)(v37 + 4) = sub_1000393D0(v39, v40, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "↪️✅ Queued %{public}s", (uint8_t *)v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    *(_DWORD *)(v2 + 120) = a1;
    *(_WORD *)(v2 + 124) = (a1 & 0x1FFFFFFFFFFuLL) >> 32;
    *(_BYTE *)(v2 + 126) = 0;
    return sub_1001AC390();
  }
  if (!v4)
    goto LABEL_30;
LABEL_26:
  v23 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v42 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
    *(_QWORD *)(v25 + 4) = sub_1000393D0(v27, v28, &v42);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "↪️❌ Ignored %{public}s; Already enqueued.",
      (uint8_t *)v25,
      0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  return result;
}

uint64_t sub_1001AC0A0(unint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  float *v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27[4];

  v3 = v2;
  if ((*(_BYTE *)(v2 + 134) & 1) == 0)
  {
    v14 = *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32);
    v15 = (float *)(v2 + 120);
    v16 = swift_beginAccess(v3 + 120, v27, 1, 0);
    if ((*(_BYTE *)(v3 + 126) & 1) == 0)
    {
      v17 = *(unsigned int *)v15 | ((unint64_t)*(unsigned __int16 *)(v3 + 124) << 32);
      if ((v14 & 0x10000000000) == 0)
      {
        if ((v17 & 0x10000000000) != 0)
          goto LABEL_17;
        if ((v14 & 0x100000000) != 0)
        {
          if ((v17 & 0x100000000) == 0)
            goto LABEL_17;
        }
        else
        {
          if ((v17 & 0x100000000) != 0)
            goto LABEL_17;
          v16.n128_u32[0] = v14;
          if (*(float *)&v14 != *v15)
            goto LABEL_17;
        }
        goto LABEL_10;
      }
      if ((v17 & 0x10000000000) != 0)
      {
LABEL_10:
        *(_WORD *)(v3 + 124) = 0;
        *(_DWORD *)(v3 + 120) = 0;
        *(_BYTE *)(v3 + 126) = 1;
        sub_1001AC390(v16);
      }
    }
LABEL_17:
    if (qword_1004B8D38 != -1)
      swift_once(&qword_1004B8D38, sub_1001AC85C);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100039D34(v18, (uint64_t)qword_1004C0DC0);
    v7 = Logger.logObject.getter(v19);
    v20 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v20))
      goto LABEL_22;
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v26 = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = (char *)Player.VocalsCommand.description.getter(v14 & 0xFFFFFFFFFFLL | (((v14 >> 40) & 1) << 40));
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v23, v24, &v26);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v20, "▶️ Executing %{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v13 = v21;
    goto LABEL_21;
  }
  if ((a1 & 0x1000000000000) == 0)
  {
    if (qword_1004B8D38 != -1)
      swift_once(&qword_1004B8D38, sub_1001AC85C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100039D34(v5, (uint64_t)qword_1004C0DC0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_22;
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v27[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | (((a1 >> 40) & 1) << 40));
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v11, v12, v27);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "✅ Finished executing %{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    v13 = v9;
LABEL_21:
    swift_slowDealloc(v13, -1, -1);
LABEL_22:

  }
  return sub_1001AC390(a2);
}

double sub_1001AC390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unsigned __int8 v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v1 = v0;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 134) == 1)
  {
    *(_QWORD *)&result = swift_beginAccess(v0 + 120, v26, 0, 0).n128_u64[0];
    if ((*(_BYTE *)(v0 + 126) & 1) == 0)
    {
      v6 = *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32);
      v7 = *(_WORD *)(v0 + 124);
      if (qword_1004B8D38 != -1)
        swift_once(&qword_1004B8D38, sub_1001AC85C);
      v8 = type metadata accessor for Logger(0);
      v9 = sub_100039D34(v8, (uint64_t)qword_1004C0DC0);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      v12 = (v6 >> 40) & 1;
      if (os_log_type_enabled(v10, v11))
      {
        v13 = swift_slowAlloc(12, -1);
        v14 = swift_slowAlloc(32, -1);
        v25 = v14;
        *(_DWORD *)v13 = 136446210;
        v15 = (char *)Player.VocalsCommand.description.getter(v6 & 0xFFFFFFFFFFLL | (v12 << 40));
        *(_QWORD *)(v13 + 4) = sub_1000393D0(v15, v16, &v25);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "↪️ Dequeuing %{public}s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v14, -1, -1);
        swift_slowDealloc(v13, -1, -1);
      }

      v17 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
      v18 = *(_BYTE *)(v1 + 134);
      *(_DWORD *)(v1 + 128) = v6;
      *(_WORD *)(v1 + 132) = WORD2(v6);
      *(_BYTE *)(v1 + 134) = 0;
      LOBYTE(v25) = v18;
      sub_1001AC0A0(v17 | ((unint64_t)v18 << 48), v19);
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
      v21 = sub_1001AC9A8();
      v22 = swift_allocObject(&unk_10047B328, 46, 7);
      *(_QWORD *)(v22 + 16) = v1;
      *(_QWORD *)(v22 + 24) = v21;
      *(_QWORD *)(v22 + 32) = v1;
      *(_BYTE *)(v22 + 44) = v7;
      *(_DWORD *)(v22 + 40) = v6;
      *(_BYTE *)(v22 + 45) = v12;
      swift_retain_n(v1, 2);
      v23 = sub_1000E6084((uint64_t)v5, (uint64_t)&unk_1004C0EE0, v22);
      *(_QWORD *)&result = swift_release(v23).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1001AC618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch(sub_1001AC630, a4, 0);
}

uint64_t sub_1001AC630()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.VocalsCommand;
  *(_DWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 20) = BYTE4(v1);
  *(_BYTE *)(v0 + 21) = BYTE5(v1) & 1;
  v2 = (_QWORD *)swift_task_alloc(dword_1004BF57C);
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_1001AC6BC;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_1001AC6BC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 72));
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 56);
    swift_errorRelease(v1);
    v6 = sub_1001AC7AC;
    v7 = v5;
  }
  else
  {
    v8 = (_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v4 + 56);

    sub_10000970C(v8);
    v6 = sub_1001AC74C;
    v7 = v9;
  }
  return swift_task_switch(v6, v7, 0);
}

uint64_t sub_1001AC74C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32);
  v4 = *(_BYTE *)(v2 + 134);
  *(_DWORD *)(v2 + 128) = 0;
  *(_WORD *)(v2 + 132) = 0;
  *(_BYTE *)(v2 + 134) = 1;
  sub_1001AC0A0(v3 | ((unint64_t)v4 << 48), a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001AC7AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 v4;

  sub_10000970C((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
  v3 = *(_BYTE *)(v1 + 134);
  *(_DWORD *)(v1 + 128) = 0;
  *(_WORD *)(v1 + 132) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  sub_1001AC0A0(v2 | ((unint64_t)v3 << 48), v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SequentialVocalCommandsFilter.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t SequentialVocalCommandsFilter.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1001AC85C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004C0DC0);
  sub_100039D34(v0, (uint64_t)qword_1004C0DC0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0xD000000000000015, 0x80000001003AE490);
}

uint64_t sub_1001AC8D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  _BYTE v7[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 120, v7, 0, 0);
  v5 = *(_DWORD *)(v3 + 120);
  v6 = *(_BYTE *)(v3 + 126);
  *(_WORD *)(a2 + 4) = *(_WORD *)(v3 + 124);
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 6) = v6;
  return result;
}

double sub_1001AC92C(int *a1, uint64_t *a2)
{
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = *((_WORD *)a1 + 2);
  v4 = *((_BYTE *)a1 + 6);
  v5 = *a2;
  swift_beginAccess(*a2 + 120, v7, 1, 0);
  *(_WORD *)(v5 + 124) = v3;
  *(_DWORD *)(v5 + 120) = v2;
  *(_BYTE *)(v5 + 126) = v4;
  return sub_1001AC390();
}

uint64_t type metadata accessor for SequentialVocalCommandsFilter()
{
  return objc_opt_self(_TtC9MusicCore29SequentialVocalCommandsFilter);
}

unint64_t sub_1001AC9A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C0ED8;
  if (!qword_1004C0ED8)
  {
    v1 = type metadata accessor for SequentialVocalCommandsFilter();
    result = swift_getWitnessTable(&protocol conformance descriptor for SequentialVocalCommandsFilter, v1);
    atomic_store(result, (unint64_t *)&qword_1004C0ED8);
  }
  return result;
}

uint64_t sub_1001AC9EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 46, 7);
}

uint64_t sub_1001ACA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 45) << 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1004C0ED4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002E8E0;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_1001AC630, v2, 0);
}

uint64_t *PlaylistCovers.ArtworkDataSource.shared.unsafeMutableAddressor()
{
  if (qword_1004B8D40 != -1)
    swift_once(&qword_1004B8D40, sub_1001AD2AC);
  return &static PlaylistCovers.ArtworkDataSource.shared;
}

__n128 PlaylistCovers.Recipe.init(_:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __n128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = sub_1001AE5E4(a1, a2);
  v7 = v6;
  v8 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = JSONDecoder.init()();
  v10 = sub_1001AFE2C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v5, v7, &type metadata for PlaylistCovers.Recipe, v10);
  swift_release(v9);
  sub_10000FC28(v5, v7);
  if (!v3)
  {
    result = v16;
    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = v13;
    *(_OWORD *)(a3 + 16) = v14;
    *(_OWORD *)(a3 + 32) = v15;
    *(__n128 *)(a3 + 48) = v16;
    *(_OWORD *)(a3 + 64) = v17;
    *(_OWORD *)(a3 + 80) = v18;
    *(_QWORD *)(a3 + 96) = v19;
  }
  return result;
}

void PlaylistCovers.Recipe.asCoverRepresentation()(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  id v27;
  id v28;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)v1 == 3157553 && v3 == 0xE300000000000000;
  if (!v4
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v1, v3, 3157553, 0xE300000000000000, 0) & 1) == 0)
  {
    goto LABEL_12;
  }
  v5 = *(char **)(v1 + 40);
  v6 = *(char **)(v1 + 48);
  v7 = *(char **)(v1 + 56);
  v8 = *(char **)(v1 + 64);
  v9 = *(char **)(v1 + 72);
  v10 = *(char **)(v1 + 80);
  v11 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(*(char **)(v1 + 24), *(char **)(v1 + 32));
  if (!v11)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v12 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v5, v6);
  if (!v12)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    goto LABEL_16;
  }
  v13 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v7, v8);
  if (!v13)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    goto LABEL_17;
  }
  v14 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v9, v10);
  if (!v14)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_18;
  }
  v15 = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*(_QWORD *)(v1 + 16));
  if (v15 == 8)
  {

LABEL_12:
    v16 = 0;
    v17 = 0;
    v11 = 0;
LABEL_14:
    v12 = 0;
LABEL_16:
    v13 = 0;
LABEL_17:
    v14 = 0;
LABEL_18:
    v18 = 0;
    goto LABEL_19;
  }
  v19 = v15;
  v20 = qword_1004B8D48;
  v21 = v11;
  v22 = v12;
  v27 = v13;
  v28 = v14;
  if (v20 != -1)
    swift_once(&qword_1004B8D48, sub_1001B1DB0);
  sub_1001AFE70();
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)((uint64_t)v21, (uint64_t)v22, (uint64_t)v27, (uint64_t)v28, (uint64_t)v23, v19);
  v26 = v19;
  v17 = v24;
  v18 = v25;

  v16 = v26;
LABEL_19:
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v18;
}

id PlaylistCovers.ArtworkToken.__allocating_init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  __int128 v9;
  char *v10;
  objc_super v12;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v8 + 6) = *(_QWORD *)(a1 + 48);
  v10 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v12.receiver = v7;
  v12.super_class = v3;
  return objc_msgSendSuper2(&v12, "init");
}

id PlaylistCovers.ArtworkToken.init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  __int128 v5;
  char *v6;
  objc_super v8;

  v4 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v5;
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v4 + 6) = *(_QWORD *)(a1 + 48);
  v6 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v6 = a2;
  *((_QWORD *)v6 + 1) = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkToken();
  return objc_msgSendSuper2(&v8, "init");
}

id PlaylistCovers.ArtworkToken.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id result;
  objc_super v23;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v3 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8);
  v4 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v5 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24);
  v6 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v7 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40);
  v8 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  v11 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  *v13 = v2;
  *((_QWORD *)v13 + 1) = v3;
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v5;
  *((_QWORD *)v13 + 4) = v6;
  *((_QWORD *)v13 + 5) = v7;
  *((_QWORD *)v13 + 6) = v8;
  v14 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v14 = v10;
  *((_QWORD *)v14 + 1) = v9;
  v23.receiver = v12;
  v23.super_class = v11;
  v15 = v3;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  swift_bridgeObjectRetain();
  result = objc_msgSendSuper2(&v23, "init");
  a1[3] = v11;
  *a1 = result;
  return result;
}

Swift::String_optional __swiftcall PlaylistCovers.ArtworkToken.stringRepresentation()()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional result;
  _OWORD v12[3];
  uint64_t v13;

  v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v12[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v12[1] = v1;
  v12[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  sub_1001AFECC((uint64_t)v12);
  v2 = PlaylistCovers.Cover.Representation.stringRepresentation.getter();
  v4 = v3;
  sub_1001AFF20((uint64_t)v12);
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v6 = *(void **)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 0xD000000000000011;
  v8._object = (void *)0x80000001003AE4B0;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v2;
  v10 = v4;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

void PlaylistCovers.ArtworkToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ArtworkToken", 22, "init()", 6, 0);
  __break(1u);
}

id PlaylistCovers.ArtworkToken.__deallocating_deinit()
{
  return sub_1001ADCD4(type metadata accessor for PlaylistCovers.ArtworkToken);
}

id PlaylistCovers.ArtworkDataSource.cache.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache);
}

id sub_1001AD2AC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PlaylistCovers.ArtworkDataSource()), "init");
  static PlaylistCovers.ArtworkDataSource.shared = (uint64_t)result;
  return result;
}

id static PlaylistCovers.ArtworkDataSource.shared.getter()
{
  if (qword_1004B8D40 != -1)
    swift_once(&qword_1004B8D40, sub_1001AD2AC);
  return (id)static PlaylistCovers.ArtworkDataSource.shared;
}

id PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  void *v12;
  _BYTE v13[32];

  v3 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v3);
  swift_unknownObjectRelease(v3);
  v4 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v12;
  objc_msgSend(a1, "fittingSize");
  v8 = sub_1001AFF74(v6, v7);
  if (!v8)
  {

    return 0;
  }
  v9 = v8;
  v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "objectForKey:", v8);

  return v10;
}

uint64_t PlaylistCovers.ArtworkDataSource.loadRepresentation(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_1001AD46C, 0, 0);
}

uint64_t sub_1001AD46C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __n128 v19;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *ObjCClassFromMetadata;
  id v29;
  id v30;
  id v31;
  char **v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;

  v1 = objc_msgSend(*(id *)(v0 + 64), "token");
  _bridgeAnyObjectToAny(_:)(v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (!swift_dynamicCast(v0 + 48, v0 + 16, (char *)&type metadata for Any + 8, v2, 6))
  {
    v11 = *(void **)(v0 + 64);
    _StringGuts.grow(_:)(58);
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0xE000000000000000;
    v12._countAndFlagsBits = 0x206E656B6F54;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = objc_msgSend(v11, "token");
    _bridgeAnyObjectToAny(_:)(v13);
    swift_unknownObjectRelease(v13);
    _print_unlocked<A, B>(_:_:)(v0 + 16, v0 + 48, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    sub_10000970C((_QWORD *)(v0 + 16));
    v14._object = (void *)0x80000001003AE4F0;
    v14._countAndFlagsBits = 0xD000000000000032;
    String.append(_:)(v14);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = sub_1001B007C();
    swift_allocError(&type metadata for Error, v17, 0, 0);
    *v18 = v15;
    v18[1] = v16;
    swift_willThrow(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(void **)(v0 + 64);
  v4 = *(char **)(v0 + 48);
  objc_msgSend(v3, "fittingSize");
  v6 = v5;
  v8 = v7;
  v9 = PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(v3);
  if (v9)
  {
    v10 = v9;
  }
  else
  {
    v21 = *(void **)(v0 + 64);
    v22 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8];
    v23 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16];
    v25 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24];
    v24 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32];
    v27 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40];
    v26 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48];
    sub_1001AFE70();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v29 = v22;
    v30 = v23;
    v44 = v25;
    v45 = v24;
    v31 = v27;
    v32 = v26;
    v33 = objc_msgSend(ObjCClassFromMetadata, "preferredFormat");
    objc_msgSend(v21, "destinationScale");
    objc_msgSend(v33, "setScale:");
    objc_msgSend(v21, "fittingSize");
    v35 = v34;
    v37 = v36;
    v38 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    v39 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8];
    swift_bridgeObjectRetain();
    _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(v29, v32, v38, v39, v33, v35, v37);
    v41 = v40;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend((id)objc_opt_self(MPArtworkRepresentation), "representationForVisualIdentity:withSize:image:", v4, v41, v6, v8);
    v42 = sub_1001AFF74(v6, v8);
    if (v42)
    {
      v43 = v42;
      objc_msgSend(*(id *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "setObject:forKey:", v10, v42);

      return (*(uint64_t (**)(id))(v0 + 8))(v10);
    }

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_1001AD954(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_1004C0F1C;
  v7 = a1;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1001AD9E4;
  v9[8] = v7;
  v9[9] = v8;
  return swift_task_switch(sub_1001AD46C, 0, 0);
}

uint64_t sub_1001AD9E4(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 40);
  v7 = *(void **)(*v2 + 16);
  v6 = *(void **)(*v2 + 24);
  v8 = *v2;
  swift_task_dealloc(v5);

  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 + 32);
  if (v3)
  {
    v10 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t PlaylistCovers.ArtworkDataSource.visualIdenticalityIdentifier(for:)(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[32];

  v1 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
    return v4;
  else
    return 0;
}

id PlaylistCovers.ArtworkDataSource.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache;
  v2 = objc_allocWithZone((Class)NSCache);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkDataSource();
  return objc_msgSendSuper2(&v5, "init");
}

id PlaylistCovers.ArtworkDataSource.__deallocating_deinit()
{
  return sub_1001ADCD4(type metadata accessor for PlaylistCovers.ArtworkDataSource);
}

id sub_1001ADCD4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

_QWORD *PlaylistCovers.Recipe.colorInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001B00E0((_QWORD *)(v1 + 24), a1);
}

_QWORD *PlaylistCovers.Recipe.colorInfo.setter(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B0114(a1, (_QWORD *)(v1 + 24));
}

uint64_t PlaylistCovers.Recipe.textColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaylistCovers.Recipe.textColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 96));
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

CFRange (__swiftcall *PlaylistCovers.Recipe.textColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SharedListening.Reaction.senderID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedListening.Reaction.senderID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

unint64_t sub_1001ADDFC()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x31726F6C6F63;
}

uint64_t sub_1001ADE18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001B018C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001ADE3C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1001ADE48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001B0148();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001ADE70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001B0148();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.HexColors.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C0F28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001B0148();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v25, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v24, v5);
    v16 = v3[4];
    v17 = v3[5];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v23, v5);
    v18 = v3[6];
    v19 = v3[7];
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, &v22, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double PlaylistCovers.Recipe.HexColors.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1001B0324(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1001AE03C(_QWORD *a1)
{
  return PlaylistCovers.Recipe.HexColors.encode(to:)(a1);
}

uint64_t sub_1001AE050(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t *)v7, v8) & 1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PlaylistCovers.Recipe.rawJSONRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::String result;
  _OWORD v20[6];
  uint64_t v21;

  v3 = v0;
  v4 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONEncoder.init()();
  v9 = *(_OWORD *)(v3 + 80);
  v20[4] = *(_OWORD *)(v3 + 64);
  v20[5] = v9;
  v21 = *(_QWORD *)(v3 + 96);
  v10 = *(_OWORD *)(v3 + 16);
  v20[0] = *(_OWORD *)v3;
  v20[1] = v10;
  v11 = *(_OWORD *)(v3 + 48);
  v20[2] = *(_OWORD *)(v3 + 32);
  v20[3] = v11;
  v12 = sub_1001B05FC();
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(v20, &type metadata for PlaylistCovers.Recipe, v12);
  if (v1)
  {
    swift_release(v8);
  }
  else
  {
    v15 = v13;
    v16 = v14;
    static String.Encoding.utf8.getter();
    v17 = String.init(data:encoding:)(v15, v16, v6);
    if (!v18)
    {
      __break(1u);
      goto LABEL_7;
    }
    v6 = (char *)v17;
    v2 = v18;
    sub_10000FC28(v15, v16);
    swift_release(v8);
  }
  v17 = (uint64_t)v6;
  v18 = v2;
LABEL_7:
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

uint64_t sub_1001AE1C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001AE1F8 + 4 * byte_1003D1AF0[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1001AE1F8()
{
  return 0x6973736572707865;
}

uint64_t sub_1001AE218()
{
  return 0x666E49726F6C6F63;
}

uint64_t sub_1001AE234()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1001AE254@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001B06C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001AE278(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001B0640();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001AE2A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001B0640();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _OWORD v23[4];

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C0F40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001B0640();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v23[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v23, v5);
  if (!v2)
  {
    v14 = v3[2];
    LOBYTE(v23[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v23, v5);
    v15 = *(_OWORD *)(v3 + 5);
    v23[0] = *(_OWORD *)(v3 + 3);
    v23[1] = v15;
    v16 = *(_OWORD *)(v3 + 9);
    v23[2] = *(_OWORD *)(v3 + 7);
    v23[3] = v16;
    v22 = 2;
    v17 = sub_1001B0684();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v17);
    v18 = v3[11];
    v19 = v3[12];
    LOBYTE(v23[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, v23, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 PlaylistCovers.Recipe.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_1001B08A8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1001AE4B0(_QWORD *a1)
{
  return PlaylistCovers.Recipe.encode(to:)(a1);
}

uint64_t sub_1001AE4C4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)v11, v13) & 1;
}

void PlaylistCovers.Recipe.HexColors.init(from:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v21 = v11;
  v22 = v10;
  v20 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v13 = v12;
  v14 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v16 = v15;
  v17 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v19 = v18;

  *a5 = v22;
  a5[1] = v21;
  a5[2] = v20;
  a5[3] = v13;
  a5[4] = v14;
  a5[5] = v16;
  a5[6] = v17;
  a5[7] = v19;
}

uint64_t sub_1001AE5E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  __int128 v17[2];
  uint64_t v18;
  __int128 v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v19 = a1;
  *((_QWORD *)&v19 + 1) = a2;
  swift_bridgeObjectRetain();
  v2 = sub_1000057B4(&qword_1004C10F8);
  if (!swift_dynamicCast(v17, &v19, &type metadata for String.UTF8View, v2, 6))
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_10000FE2C((uint64_t)v17, &qword_1004C1100);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v20[0] = a1;
      v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v7 = (char *)v20 + (HIBYTE(a2) & 0xF);
      v8 = v20;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v5 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v6 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v5 = _StringObject.sharedUTF8.getter(a1, a2);
      }
      if (v5)
        v7 = (_BYTE *)(v5 + v6);
      else
        v7 = 0;
      v8 = (_BYTE *)v5;
    }
    v9 = sub_1001AF80C(v8, v7);
    v11 = v10;
    if (v10 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v17[0] = v9;
      *((_QWORD *)&v17[0] + 1) = v11;
      return *(_QWORD *)&v17[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v12 = String.UTF8View._foreignCount()();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v12 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v12 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v17[0] = sub_1001AF870(v12);
    *((_QWORD *)&v17[0] + 1) = v13;
    __chkstk_darwin(*(_QWORD *)&v17[0]);
    sub_1001AEED0();
    __asm { BR              X12 }
  }
  sub_100033620(v17, (uint64_t)v20);
  v3 = v21;
  v4 = v22;
  sub_1000096A0(v20, v21);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(&v19, sub_1001AF1C0, 0, &type metadata for Data._Representation, v3, v4);
  swift_bridgeObjectRelease();
  v17[0] = v19;
  sub_10000970C(v20);
  return *(_QWORD *)&v17[0];
}

uint64_t PlaylistCovers.Recipe.init(from:)@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *a1 + 1;
  v4 = (void *)*((_QWORD *)a1 + 3);
  v5 = (void *)*((_QWORD *)a1 + 4);
  v6 = (void *)*((_QWORD *)a1 + 5);
  v7 = *((id *)a1 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v27 = v12;
  v28 = v11;
  v13 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v25 = v14;
  v26 = v13;
  v15 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v17 = v16;
  v18 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v20 = v19;

  v21 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v23 = v22;
  result = sub_1001AFF20((uint64_t)a1);
  *a2 = 3157553;
  a2[1] = 0xE300000000000000;
  a2[2] = v29;
  a2[3] = v28;
  a2[4] = v27;
  a2[5] = v26;
  a2[6] = v25;
  a2[7] = v15;
  a2[8] = v17;
  a2[9] = v18;
  a2[10] = v20;
  a2[11] = v21;
  a2[12] = v23;
  return result;
}

uint64_t sub_1001AEC00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_10002F6EC;
  return v6();
}

uint64_t sub_1001AEC54(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_10002F6EC;
  return v7();
}

uint64_t sub_1001AECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000FE2C(a1, (uint64_t *)&unk_1004BFBC0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10047B698, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1004C10D8, v17);
}

uint64_t sub_1001AEDF4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100033DF0;
  return v6(a1);
}

uint64_t sub_1001AEE58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

void sub_1001AEED0()
{
  __asm { BR              X11 }
}

_QWORD *sub_1001AEF30@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_1001AF1C0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1001AF654(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1001AF714((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1001AF78C((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_1001AF234(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_1001AF298(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)__DataStorage._bytes.getter();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)__DataStorage._offset.getter();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = __DataStorage._length.getter();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1001AF344@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result)
  {
    v5 = result;
    v8 = *a3;
    v7 = a3[1];
    swift_bridgeObjectRetain();
    result = _StringGuts.copyUTF8(into:)(v5, a2, v8, v7);
    if ((v9 & 1) == 0)
    {
      v10 = result;
      result = swift_bridgeObjectRelease(v7);
      *a4 = 0;
      a4[1] = 0xE000000000000000;
      a4[2] = 15;
      a4[3] = v10;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = a2[4], v19 = a2[5], v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
  }
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (a1[2] == a2[2])
    {
      v10 = a1[3];
      v11 = a1[4];
      v12 = a1[5];
      v13 = a1[6];
      v14 = a1[7];
      v15 = a1[8];
      v16 = a2[3];
      v17 = a2[4];
      v18 = a2[5];
      v19 = a2[6];
      v20 = a2[7];
      v21 = a2[8];
      v32 = a2[9];
      v33 = a1[9];
      v30 = a2[10];
      v31 = a1[10];
      if (v10 == v16 && v11 == v17
        || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v16, v17, 0), result = 0, (v22 & 1) != 0))
      {
        if (v12 == v18 && v13 == v19
          || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v18, v19, 0), result = 0, (v23 & 1) != 0))
        {
          if (v14 == v20 && v15 == v21
            || (v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v20, v21, 0), result = 0, (v24 & 1) != 0))
          {
            if (v33 == v32 && v31 == v30
              || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v31, v32, v30, 0),
                  result = 0,
                  (v25 & 1) != 0))
            {
              v26 = a1[11];
              v27 = a1[12];
              v28 = a2[11];
              v29 = a2[12];
              if (v26 == v28 && v27 == v29)
                return 1;
              else
                return _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v28, v29, 0);
            }
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001AF654(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1001AF714(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_1001AF78C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_1001AF80C(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_1001AF654(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_1001AF714((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1001AF78C((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1001AF870(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      v2 = type metadata accessor for __DataStorage(0);
      swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
      __DataStorage.init(length:)(v1);
      if (v1 >= 0x7FFFFFFF)
      {
        v3 = type metadata accessor for Data.RangeReference(0);
        result = swift_allocObject(v3, 32, 7);
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

id _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[7];
  _OWORD v28[3];
  uint64_t v29;
  _OWORD v30[6];
  uint64_t v31;

  swift_bridgeObjectRetain();
  v8 = sub_1001AE5E4(a1, a2);
  v10 = v9;
  v11 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = JSONDecoder.init()();
  v13 = sub_1001AFE2C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v8, v10, &type metadata for PlaylistCovers.Recipe, v13);
  swift_release(v12);
  sub_10000FC28(v8, v10);
  swift_bridgeObjectRelease();
  v30[4] = v24;
  v30[5] = v25;
  v31 = v26;
  v30[0] = v20;
  v30[1] = v21;
  v30[2] = v22;
  v30[3] = v23;
  PlaylistCovers.Recipe.asCoverRepresentation()(v27);
  sub_1001B172C(v30);
  sub_1001B17A0((uint64_t)v27, (uint64_t)v28);
  if (*((_QWORD *)&v28[0] + 1))
  {
    v20 = v28[0];
    v21 = v28[1];
    v22 = v28[2];
    *(_QWORD *)&v23 = v29;
    v14 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
    v15 = (char *)objc_allocWithZone(v14);
    v16 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
    *(_OWORD *)v16 = v20;
    *((_OWORD *)v16 + 1) = v21;
    *((_OWORD *)v16 + 2) = v22;
    *((_QWORD *)v16 + 6) = v23;
    v17 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    *(_QWORD *)v17 = a3;
    *((_QWORD *)v17 + 1) = a4;
    v19.receiver = v15;
    v19.super_class = v14;
    return objc_msgSendSuper2(&v19, "init");
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1001AFE2C()
{
  unint64_t result;

  result = qword_1004C0EF0;
  if (!qword_1004C0EF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_1004C0EF0);
  }
  return result;
}

unint64_t sub_1001AFE70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C0EF8;
  if (!qword_1004C0EF8)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004C0EF8);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkToken()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers12ArtworkToken);
}

uint64_t sub_1001AFECC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7 = *(id *)(a1 + 8);
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return a1;
}

uint64_t sub_1001AFF20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);

  return a1;
}

id sub_1001AFF74(double a1, double a2)
{
  Swift::String_optional v4;
  id object;
  Swift::String v6;
  Swift::String v7;
  id v8;
  NSString v9;

  v4 = PlaylistCovers.ArtworkToken.stringRepresentation()();
  object = v4.value._object;
  if (v4.value._object)
  {
    v6._countAndFlagsBits = CGSize.description.getter(a1, a2);
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 0x203A657A6973202CLL;
    v7._object = (void *)0xE800000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = objc_allocWithZone((Class)NSString);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    object = objc_msgSend(v8, "initWithString:", v9, v4.value._countAndFlagsBits, v4.value._object);

  }
  return object;
}

unint64_t sub_1001B007C()
{
  unint64_t result;

  result = qword_1004C0F20;
  if (!qword_1004C0F20)
  {
    result = swift_getWitnessTable(&unk_1003D1E60, &type metadata for Error);
    atomic_store(result, (unint64_t *)&qword_1004C0F20);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkDataSource()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers17ArtworkDataSource);
}

_QWORD *sub_1001B00E0(_QWORD *a1, _QWORD *a2)
{
  _s6RecipeV9HexColorsVwcp(a2, a1);
  return a2;
}

_QWORD *sub_1001B0114(_QWORD *a1, _QWORD *a2)
{
  _s6RecipeV9HexColorsVwta(a2, a1);
  return a2;
}

unint64_t sub_1001B0148()
{
  unint64_t result;

  result = qword_1004C0F30;
  if (!qword_1004C0F30)
  {
    result = swift_getWitnessTable(&unk_1003D1E10, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C0F30);
  }
  return result;
}

uint64_t sub_1001B018C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x31726F6C6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x31726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x32726F6C6F63 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x32726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x33726F6C6F63 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x33726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x34726F6C6F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x34726F6C6F63, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001B0324@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_1000057B4(&qword_1004C10F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001B0148();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  if (v2)
    return sub_10000970C(a1);
  v35 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
  v14 = v13;
  v30 = v12;
  v34 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
  v31 = v16;
  v29 = v15;
  v33 = 2;
  swift_bridgeObjectRetain();
  v27 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
  v28 = v17;
  v32 = 3;
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  v23 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000970C(a1);
  swift_bridgeObjectRelease();
  v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v14;
  a2[2] = v29;
  a2[3] = v23;
  a2[4] = v27;
  a2[5] = v24;
  a2[6] = v22;
  a2[7] = v20;
  return result;
}

unint64_t sub_1001B05FC()
{
  unint64_t result;

  result = qword_1004C0F38;
  if (!qword_1004C0F38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_1004C0F38);
  }
  return result;
}

unint64_t sub_1001B0640()
{
  unint64_t result;

  result = qword_1004C0F48;
  if (!qword_1004C0F48)
  {
    result = swift_getWitnessTable(&unk_1003D1DC0, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C0F48);
  }
  return result;
}

unint64_t sub_1001B0684()
{
  unint64_t result;

  result = qword_1004C0F50;
  if (!qword_1004C0F50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_1004C0F50);
  }
  return result;
}

uint64_t sub_1001B06C8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6973736572707865 && a2 == 0xEC00000064496E6FLL)
  {
    v7 = 0xEC00000064496E6FLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6973736572707865, 0xEC00000064496E6FLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x666E49726F6C6F63 && a2 == 0xE90000000000006FLL)
  {
    v8 = 0xE90000000000006FLL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x666E49726F6C6F63, 0xE90000000000006FLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease(0xE900000000000072);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6F4374786574, 0xE900000000000072, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001B08A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[8];
  char v43;

  v5 = sub_1000057B4(&qword_1004C10E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001B0640();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  if (v2)
    return sub_10000970C(a1);
  LOBYTE(v42[0]) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v14 = v13;
  LOBYTE(v42[0]) = 1;
  swift_bridgeObjectRetain();
  v41 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v43 = 2;
  v15 = sub_1001B1670();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v42, &type metadata for PlaylistCovers.Recipe.HexColors, &v43, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v15);
  v16 = v42[3];
  v35 = v42[2];
  v36 = v42[0];
  v17 = v42[5];
  v33 = v42[6];
  v34 = v42[4];
  v39 = v42[1];
  v40 = v42[7];
  LOBYTE(v42[0]) = 3;
  swift_bridgeObjectRetain();
  v38 = v16;
  swift_bridgeObjectRetain();
  v37 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10000970C(a1);
  swift_bridgeObjectRelease();
  v22 = v40;
  swift_bridgeObjectRelease();
  v23 = v37;
  swift_bridgeObjectRelease();
  v24 = v38;
  swift_bridgeObjectRelease();
  v25 = v39;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  v27 = v36;
  a2[2] = v41;
  a2[3] = v27;
  v28 = v35;
  a2[4] = v25;
  a2[5] = v28;
  v29 = v34;
  a2[6] = v24;
  a2[7] = v29;
  v30 = v33;
  a2[8] = v23;
  a2[9] = v30;
  v31 = v32;
  a2[10] = v22;
  a2[11] = v31;
  a2[12] = v20;
  return result;
}

uint64_t _s6RecipeVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_bridgeObjectRelease(a1[12]);
}

uint64_t _s6RecipeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6RecipeVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v5 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[5] = a2[5];
  v6 = a1[6];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[7] = a2[7];
  v7 = a1[8];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[9] = a2[9];
  v8 = a1[10];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[11] = a2[11];
  v9 = a2[12];
  v10 = a1[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

__n128 _s6RecipeVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s6RecipeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t _s6RecipeVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6RecipeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe()
{
  return &type metadata for PlaylistCovers.Recipe;
}

uint64_t _s6RecipeV9HexColorsVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *_s6RecipeV9HexColorsVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6RecipeV9HexColorsVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a2[7];
  v8 = a1[7];
  a1[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *_s6RecipeV9HexColorsVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t _s6RecipeV9HexColorsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6RecipeV9HexColorsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe.HexColors()
{
  return &type metadata for PlaylistCovers.Recipe.HexColors;
}

ValueMetadata *_s6RecipeV10CodingKeysOMa()
{
  return &_s6RecipeV10CodingKeysON;
}

uint64_t _s6RecipeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001B11CC + 4 * byte_1003D1AF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001B1200 + 4 * byte_1003D1AF4[v4]))();
}

uint64_t sub_1001B1200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B1208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001B1210);
  return result;
}

uint64_t sub_1001B121C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001B1224);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001B1228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B1230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6RecipeV9HexColorsV10CodingKeysOMa()
{
  return &_s6RecipeV9HexColorsV10CodingKeysON;
}

ValueMetadata *type metadata accessor for Error()
{
  return &type metadata for Error;
}

unint64_t sub_1001B1260()
{
  unint64_t result;

  result = qword_1004C1068;
  if (!qword_1004C1068)
  {
    result = swift_getWitnessTable(&unk_1003D1CE0, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1068);
  }
  return result;
}

unint64_t sub_1001B12A8()
{
  unint64_t result;

  result = qword_1004C1070;
  if (!qword_1004C1070)
  {
    result = swift_getWitnessTable(&unk_1003D1D98, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1070);
  }
  return result;
}

unint64_t sub_1001B12F0()
{
  unint64_t result;

  result = qword_1004C1078;
  if (!qword_1004C1078)
  {
    result = swift_getWitnessTable(&unk_1003D1D08, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1078);
  }
  return result;
}

unint64_t sub_1001B1338()
{
  unint64_t result;

  result = qword_1004C1080;
  if (!qword_1004C1080)
  {
    result = swift_getWitnessTable(&unk_1003D1D30, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1080);
  }
  return result;
}

unint64_t sub_1001B1380()
{
  unint64_t result;

  result = qword_1004C1088;
  if (!qword_1004C1088)
  {
    result = swift_getWitnessTable(&unk_1003D1C50, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1088);
  }
  return result;
}

unint64_t sub_1001B13C8()
{
  unint64_t result;

  result = qword_1004C1090;
  if (!qword_1004C1090)
  {
    result = swift_getWitnessTable(&unk_1003D1C78, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004C1090);
  }
  return result;
}

uint64_t sub_1001B140C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B1440()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1004C10A4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002E8E0;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1004C10A0 + dword_1004C10A0))(v2, v3, v4);
}

uint64_t sub_1001B14B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1004C10B4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1004C10B0 + dword_1004C10B0))(v2, v3, v4);
}

uint64_t sub_1001B152C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B1558(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C10C4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1004C10C0 + dword_1004C10C0))(a1, v4, v5, v6);
}

uint64_t sub_1001B15DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1004C10D4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1004C10D0 + dword_1004C10D0))(a1, v4);
}

unint64_t sub_1001B1670()
{
  unint64_t result;

  result = qword_1004C10E8;
  if (!qword_1004C10E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_1004C10E8);
  }
  return result;
}

_QWORD *sub_1001B16B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_1001AF234((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001B1710, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1001B1710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1001AF344(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

_QWORD *sub_1001B172C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001B17A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004C1108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PlaylistCovers.Cover.Representation.stringRepresentation.getter()
{
  void **v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;

  _StringGuts.grow(_:)(68);
  v1._countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x80000001003AE650;
  String.append(_:)(v1);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001003AE680;
  v3._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v3);
  v4._countAndFlagsBits = PlaylistCovers.RecipeColors.description.getter(v0[2], v0[3], v0[4], v0[5]);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x6F4374786574202CLL;
  v5._object = (void *)0xED0000203A726F6CLL;
  String.append(_:)(v5);
  v6 = v0[6];
  v7 = objc_msgSend(v6, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);

  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

__int128 *PlaylistCovers.Specs.coverSize.unsafeMutableAddressor()
{
  if (qword_1004B8D48 != -1)
    swift_once(&qword_1004B8D48, sub_1001B1DB0);
  return &static PlaylistCovers.Specs.coverSize;
}

uint64_t PlaylistCovers.Cover.Representation.init(expression:backgroundImage:recipeColors:textColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t PlaylistCovers.Cover.representation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001B3034(v1 + 8, a1);
}

uint64_t PlaylistCovers.Cover.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

id PlaylistCovers.Cover.Representation.backgroundImage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *PlaylistCovers.Cover.Representation.recipeColors.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = (void *)v0[2];
  v2 = (void *)v0[3];
  v4 = (void *)v0[4];
  v3 = (void *)v0[5];
  v5 = v1;
  v6 = v2;
  v7 = v4;
  v8 = v3;
  return v1;
}

void PlaylistCovers.Cover.Representation.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = v1;
  Hasher._combine(_:)(*v1 + 1);
  v4 = (void *)*((_QWORD *)v1 + 3);
  v5 = (void *)*((_QWORD *)v2 + 4);
  v6 = (void *)*((_QWORD *)v2 + 5);
  v7 = *((id *)v2 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  NSObject.hash(into:)(a1);
  v11 = v8;
  NSObject.hash(into:)(a1);

  v12 = v9;
  NSObject.hash(into:)(a1);

  v13 = v10;
  NSObject.hash(into:)(a1);

  v14 = *((id *)v2 + 6);
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.Cover.Representation.hashValue.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v1 = v0;
  Hasher.init(_seed:)(v14);
  Hasher._combine(_:)(*v0 + 1);
  v2 = (void *)*((_QWORD *)v0 + 3);
  v3 = (void *)*((_QWORD *)v1 + 4);
  v4 = (void *)*((_QWORD *)v1 + 5);
  v5 = *((id *)v1 + 2);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  NSObject.hash(into:)(v14);
  v9 = v6;
  NSObject.hash(into:)(v14);

  v10 = v7;
  NSObject.hash(into:)(v14);

  v11 = v8;
  NSObject.hash(into:)(v14);

  v12 = *((id *)v1 + 6);
  NSObject.hash(into:)(v14);

  return Hasher._finalize()();
}

uint64_t sub_1001B1C30(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

Swift::Int sub_1001B1C90()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

__n128 PlaylistCovers.Cover.init(image:representation:)@<Q0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;

  v11 = *(__n128 *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 8);
  v5 = *((_QWORD *)a2 + 5);
  v6 = *((_QWORD *)a2 + 6);
  v7 = *a2;
  PlaylistCovers.Expression.accessibilityLabel.getter(*a2);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v7;
  result = v11;
  *(_OWORD *)(a3 + 16) = v12;
  *(__n128 *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 48) = v5;
  *(_QWORD *)(a3 + 56) = v6;
  *(_QWORD *)(a3 + 64) = v9;
  *(_QWORD *)(a3 + 72) = v10;
  return result;
}

double PlaylistCovers.Cover.init(image:accessibilityLabel:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_QWORD *)a4 = a1;
  result = 0.0;
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = a2;
  *(_QWORD *)(a4 + 72) = a3;
  return result;
}

uint64_t sub_1001B1D58(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(v8, v9) & 1;
}

int64x2_t sub_1001B1DB0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4066800000000000uLL);
  static PlaylistCovers.Specs.coverSize = (__int128)result;
  return result;
}

double static PlaylistCovers.Specs.coverSize.getter()
{
  if (qword_1004B8D48 != -1)
    swift_once(&qword_1004B8D48, sub_1001B1DB0);
  return *(double *)&static PlaylistCovers.Specs.coverSize;
}

int64x2_t sub_1001B1E0C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4070E00000000000uLL);
  xmmword_1004F4B00 = (__int128)result;
  return result;
}

void sub_1001B1E24()
{
  qword_1004F4B10 = 0x4040800000000000;
}

void sub_1001B1E38()
{
  qword_1004F4B18 = 0x403B000000000000;
}

void sub_1001B1E48()
{
  qword_1004F4B20 = 0x403C000000000000;
}

void sub_1001B1E58()
{
  qword_1004F4B28 = 0x4034000000000000;
}

id sub_1001B1E68()
{
  id v0;
  id v1;
  id v2;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  sub_10000598C(0, &qword_1004C1118, UIColor_ptr);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 128, 128, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 230, 230, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(250, 35, 59, 1.0);
  qword_1004F4B30 = (uint64_t)v0;
  *(_QWORD *)algn_1004F4B38 = v1;
  qword_1004F4B40 = (uint64_t)v2;
  unk_1004F4B48 = result;
  return result;
}

id sub_1001B1F1C()
{
  id v0;
  id v1;
  id v2;
  id result;

  sub_10000598C(0, &qword_1004C1118, UIColor_ptr);
  v0 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(238, 238, 238, 1.0);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(187, 187, 187, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(70, 70, 70, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(17, 17, 17, 1.0);
  qword_1004F4B50 = (uint64_t)v0;
  *(_QWORD *)algn_1004F4B58 = v1;
  qword_1004F4B60 = (uint64_t)v2;
  unk_1004F4B68 = result;
  return result;
}

void sub_1001B1FC4(int a1, id a2, double a3, double a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  __CFString *v24;
  id v25;
  Class isa;
  id v27;
  id v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString *v35;
  id v36;
  NSString *v37;
  id v38;
  NSString *v39;
  NSString *v40;
  id v41;
  unint64_t v42;
  objc_class *v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  void *v51;
  __CFString *v52;
  id v53;
  uint64_t v55;
  _BYTE v56[192];
  _BYTE v57[120];

  objc_msgSend(a2, "drawInRect:", 0.0, 0.0, a3, a4);
  if (qword_1004B8D50 != -1)
    swift_once(&qword_1004B8D50, sub_1001B1E0C);
  v13 = *(double *)&xmmword_1004F4B00 / a3;
  v14 = String.count.getter(a6, a7);
  if (v14 <= 30)
  {
    if (qword_1004B8D58 != -1)
      swift_once(&qword_1004B8D58, sub_1001B1E24);
    v15 = &qword_1004F4B10;
  }
  else
  {
    if (qword_1004B8D60 != -1)
      swift_once(&qword_1004B8D60, sub_1001B1E38);
    v15 = &qword_1004F4B18;
  }
  v16 = *v15;
  v17 = (void *)objc_opt_self(UIFont);
  v18 = objc_msgSend(v17, "systemFontOfSize:weight:", CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale")), UIFontWeightSemibold);
  v19 = objc_msgSend(v18, "fontDescriptor");

  v20 = (void *)kCTFontIgnoreLegibilityWeightAttribute;
  v21 = sub_1000057B4(&qword_1004C1120);
  inited = swift_initStackObject(v21, v57);
  *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(inited + 32) = v20;
  *(_BYTE *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Bool;
  *(_QWORD *)(inited + 72) = kCTFontOpticalSizeAttribute;
  *(_QWORD *)(inited + 104) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 80) = v16;
  v23 = v20;
  v24 = (id)kCTFontOpticalSizeAttribute;
  v53 = v23;
  v52 = v24;
  v25 = v19;
  sub_1000B9854(inited);
  type metadata accessor for AttributeName(0);
  sub_1001B38B4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, "fontDescriptorByAddingAttributes:", isa);

  v51 = v27;
  v28 = objc_msgSend(v17, "fontWithDescriptor:size:", v27, 0.0);
  v55 = a6;
  if (v14 >= 31 && qword_1004B8D68 != -1)
    swift_once(&qword_1004B8D68, sub_1001B1E48);
  v29 = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v30 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v30, "setMinimumLineHeight:", v29);
  objc_msgSend(v30, "setMaximumLineHeight:", v29);
  v31 = sub_1000057B4(&qword_1004C1128);
  v32 = swift_initStackObject(v31, v56);
  *(_OWORD *)(v32 + 16) = xmmword_1003C6320;
  *(_QWORD *)(v32 + 32) = NSFontAttributeName;
  v33 = sub_10000598C(0, &qword_1004C1130, UIFont_ptr);
  *(_QWORD *)(v32 + 40) = v28;
  *(_QWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 72) = NSForegroundColorAttributeName;
  v34 = sub_10000598C(0, &qword_1004C1118, UIColor_ptr);
  *(_QWORD *)(v32 + 80) = a8;
  *(_QWORD *)(v32 + 104) = v34;
  *(_QWORD *)(v32 + 112) = NSKernAttributeName;
  *(double *)(v32 + 120) = -0.25 / v13;
  *(_QWORD *)(v32 + 144) = &type metadata for CGFloat;
  *(_QWORD *)(v32 + 152) = NSParagraphStyleAttributeName;
  *(_QWORD *)(v32 + 184) = sub_10000598C(0, &qword_1004C1138, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(v32 + 160) = v30;
  v35 = NSFontAttributeName;
  v36 = v28;
  v37 = NSForegroundColorAttributeName;
  v38 = a8;
  v39 = NSKernAttributeName;
  v40 = NSParagraphStyleAttributeName;
  v41 = v30;
  v42 = sub_1000B9998(v32);
  v43 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  v44 = swift_bridgeObjectRetain();
  LOBYTE(v30) = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter(v44);
  v45 = objc_allocWithZone(v43);
  v46 = (void *)LanguageAwareString.init(_:attributes:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v55, a7, v42, 0, v30 & 1);
  v47 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

  if (qword_1004B8D70 != -1)
    swift_once(&qword_1004B8D70, sub_1001B1E58);
  v48 = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v49 = UIEdgeInsets.init(edges:inset:)(15, v48);
  objc_msgSend(v47, "drawWithRect:options:context:", 1, 0, sub_10000FE68(0.0, 0.0, a3, a4, v49, v50));

}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  if (*a1 == *a2)
  {
    v4 = (void *)*((_QWORD *)a1 + 3);
    v5 = (void *)*((_QWORD *)a1 + 4);
    v6 = (void *)*((_QWORD *)a1 + 5);
    v7 = *((id *)a1 + 2);
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v40 = v12;
    v41 = v11;
    v36 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v43 = v13;
    v35 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v38 = v14;
    v33 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v37 = v15;

    v16 = (void *)*((_QWORD *)a2 + 3);
    v17 = (void *)*((_QWORD *)a2 + 4);
    v18 = (void *)*((_QWORD *)a2 + 5);
    v19 = *((id *)a2 + 2);
    v20 = v16;
    v21 = v17;
    v22 = v18;
    v23 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v25 = v24;
    v26 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v28 = v27;
    v34 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v39 = v29;
    v32 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v44 = v30;

    if ((v41 == v23 && v40 == v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v41, v40, v23, v25, 0) & 1) != 0)
      && (v36 == v26 && v43 == v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v43, v26, v28, 0) & 1) != 0)
      && (v35 == v34 && v38 == v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v38, v34, v39, 0) & 1) != 0))
    {
      if (v33 == v32 && v37 == v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v37, 2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_16:
        sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
        return static NSObject.== infix(_:_:)(*((_QWORD *)a1 + 6), *((_QWORD *)a2 + 6)) & 1;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v37, v32, v44, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unsigned __int8 v50[8];
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unsigned __int8 v57[8];
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;

  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v4 = a1[1];
  v5 = (void *)a1[2];
  v7 = (void *)a1[3];
  v6 = (void *)a1[4];
  v9 = (void *)a1[5];
  v8 = (void *)a1[6];
  v10 = (void *)a1[7];
  v11 = a2[1];
  v12 = (void *)a2[2];
  v14 = (void *)a2[3];
  v13 = (void *)a2[4];
  v16 = (void *)a2[5];
  v15 = (void *)a2[6];
  v17 = (void *)a2[7];
  if (v5)
  {
    if (v12)
    {
      v50[0] = a1[1];
      v51 = v5;
      v52 = v7;
      v53 = v6;
      v54 = v9;
      v55 = v8;
      v56 = v10;
      v18 = v11;
      v57[0] = v11;
      v58 = v12;
      v59 = v14;
      v60 = v13;
      v61 = v16;
      v62 = v15;
      v63 = v17;
      v19 = v4;
      v42 = v4;
      v44 = v10;
      v40 = v7;
      v41 = v9;
      v20 = v7;
      v21 = v6;
      v46 = v6;
      v48 = v8;
      v22 = v13;
      v23 = v9;
      v24 = v16;
      v25 = v15;
      v26 = v17;
      sub_1001B3734(v19, v5, v20, v21, v23, v8, v10);
      sub_1001B3734(v18, v12, v14, v22, v24, v25, v26);
      v39 = _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(v50, v57);
      sub_1001B3790(v18, v12, v14, v22, v24, v25, v26);
      sub_1001B3790(v42, v5, v40, v46, v41, v48, v44);
      if ((v39 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
LABEL_7:
    v28 = a1[1];
    v43 = v28;
    v45 = (void *)a1[7];
    v29 = (void *)a1[4];
    v47 = v29;
    v49 = (void *)a1[6];
    v30 = (void *)a2[4];
    v31 = (void *)a2[5];
    v32 = v15;
    v33 = v11;
    v34 = v17;
    sub_1001B3734(v28, v5, v7, v29, v9, v8, v10);
    sub_1001B3734(v33, v12, v14, v30, v31, v32, v34);
    sub_1001B3790(v43, v5, v7, v47, v9, v49, v45);
    sub_1001B3790(v33, v12, v14, v30, v31, v32, v34);
    return 0;
  }
  if (v12)
    goto LABEL_7;
LABEL_8:
  v35 = a1[8];
  v36 = a1[9];
  v37 = a2[8];
  v38 = a2[9];
  if (v35 == v37 && v36 == v38)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v37, v38, 0);
}

void _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(void *a1, char **a2, uint64_t a3, uint64_t a4, id a5, CGFloat a6, CGFloat a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  unsigned int v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char **v37;
  id v38;
  __n128 v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  __n128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void **aBlock;
  uint64_t v52;
  void (*v53)(uint64_t, void *);
  void *v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  CGSize v57;
  CGSize v58;

  v50 = a1;
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  isEscapingClosureAtFileLocation = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (void **)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v22 = (void (*)(uint64_t, void *))((char *)&v48 - v21);
  if (a4)
  {
    v49 = v16;
    swift_bridgeObjectRetain();
    v23 = String.trim()();
    swift_bridgeObjectRelease();
    v24 = ((unint64_t)v23._object >> 56) & 0xF;
    v25 = a3;
    if (((uint64_t)v23._object & 0x2000000000000000) == 0)
      v24 = v23._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v24)
      goto LABEL_8;
    swift_bridgeObjectRelease();
    v16 = v49;
  }
  String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xEE00656C74695420);
  (*(void (**)(void **, void (*)(uint64_t, void *), uint64_t))(isEscapingClosureAtFileLocation + 16))(v20, v22, v16);
  if (qword_1004B8A10 != -1)
    goto LABEL_21;
  while (1)
  {
    v26 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v25 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v26, v15, 0, 0, 256);
    a4 = v27;
    (*(void (**)(_QWORD, uint64_t))(isEscapingClosureAtFileLocation + 8))(v22, v16);
LABEL_8:
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v28, "_containsEmoji");

    v30 = a6;
    v31 = a7;
    if (v29)
    {
      if (qword_1004B8D50 != -1)
        swift_once(&qword_1004B8D50, sub_1001B1E0C);
      if (*(double *)&xmmword_1004F4B00 < a6)
        v30 = a6;
      else
        v30 = *(double *)&xmmword_1004F4B00;
      v31 = v30;
    }
    v15 = (char *)objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, v30, v31);
    v16 = swift_allocObject(&unk_10047B8F0, 72, 7);
    *(double *)(v16 + 16) = v30;
    *(double *)(v16 + 24) = v31;
    v32 = v50;
    *(_QWORD *)(v16 + 32) = v50;
    *(_QWORD *)(v16 + 40) = a5;
    *(_QWORD *)(v16 + 48) = v25;
    *(_QWORD *)(v16 + 56) = a4;
    *(_QWORD *)(v16 + 64) = a2;
    v33 = swift_allocObject(&unk_10047B918, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1001B3828;
    *(_QWORD *)(v33 + 24) = v16;
    v55 = sub_10018C354;
    v56 = v33;
    v20 = _NSConcreteStackBlock;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v22 = sub_10001D2BC;
    v53 = sub_10001D2BC;
    v54 = &unk_10047B930;
    v34 = _Block_copy(&aBlock);
    v35 = v56;
    v36 = v32;
    a5 = a5;
    v37 = a2;
    swift_retain(v33);
    a2 = &selRef_startWithCompletionHandler_;
    v38 = objc_msgSend(v15, "imageWithActions:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 122, 121, 53, 1, v39);
    swift_release(v33);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_21:
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  }
  v57.width = v30;
  v57.height = v31;
  v58.width = a6;
  v58.height = a7;
  if (CGSizeEqualToSize(v57, v58))
  {
    swift_release(v16);

  }
  else
  {
    v40 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
    v41 = swift_allocObject(&unk_10047B968, 40, 7);
    *(_QWORD *)(v41 + 16) = v38;
    *(CGFloat *)(v41 + 24) = a6;
    *(CGFloat *)(v41 + 32) = a7;
    v42 = swift_allocObject(&unk_10047B990, 32, 7);
    *(_QWORD *)(v42 + 16) = sub_1001B3888;
    *(_QWORD *)(v42 + 24) = v41;
    v55 = sub_1001B3904;
    v56 = v42;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_10001D2BC;
    v54 = &unk_10047B9A8;
    v43 = _Block_copy(&aBlock);
    v44 = v56;
    v45 = v38;
    swift_retain(v42);
    objc_msgSend(v40, "imageWithActions:", v43, swift_release(v44).n128_f64[0]);

    _Block_release(v43);
    v47 = swift_isEscapingClosureAtFileLocation(v42, "", 122, 156, 37, 1, v46);
    swift_release(v41);
    swift_release(v16);
    swift_release(v42);
    if ((v47 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1001B3034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004C1108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001B3080()
{
  unint64_t result;

  result = qword_1004C1110;
  if (!qword_1004C1110)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Cover.Representation, &type metadata for PlaylistCovers.Cover.Representation);
    atomic_store(result, (unint64_t *)&qword_1004C1110);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers()
{
  return &type metadata for PlaylistCovers;
}

uint64_t destroy for PlaylistCovers.Cover(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  if (v2)
  {

  }
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  uint64_t v20;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = *(void **)(a2 + 16);
  v7 = v4;
  if (v6)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = *(void **)(a2 + 24);
    v9 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v8;
    v10 = *(void **)(a2 + 40);
    v11 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v12 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    v13 = v6;
    v14 = v8;
    v15 = v9;
    v16 = v10;
    v17 = v11;
    v18 = v12;
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)v5 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(v5 + 16) = v19;
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v5 + 48) = *(_QWORD *)(a2 + 56);
  }
  v20 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    if (v10)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v11 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v11;
      v12 = v11;

      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      v15 = v13;

      v16 = *(void **)(a2 + 32);
      v17 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v16;
      v18 = v16;

      v19 = *(void **)(a2 + 40);
      v20 = *(void **)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v19;
      v21 = v19;

      v22 = *(void **)(a2 + 48);
      v23 = *(void **)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v22;
      v24 = v22;

      v25 = *(void **)(a2 + 56);
      v26 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v25;
      v27 = v25;

    }
    else
    {
      sub_1001B3384((id *)(a1 + 8));
      v41 = *(_OWORD *)(a2 + 24);
      v40 = *(_OWORD *)(a2 + 40);
      v42 = *v8;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v41;
      *(_OWORD *)(a1 + 40) = v40;
      *v7 = v42;
    }
  }
  else if (v10)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v28 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v28;
    v29 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v29;
    v30 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v30;
    v31 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v31;
    v32 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v32;
    v33 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v33;
    v34 = v28;
    v35 = v29;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
  }
  else
  {
    v43 = *v8;
    v44 = *(_OWORD *)(a2 + 24);
    v45 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v44;
    *(_OWORD *)(a1 + 40) = v45;
    *v7 = v43;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_1001B3384(id *a1)
{
  destroy for PlaylistCovers.Cover.Representation(a1);
  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  uint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_1001B3384((id *)(a1 + 8));
LABEL_5:
    v12 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v12;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_6:
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover()
{
  return &type metadata for PlaylistCovers.Cover;
}

void destroy for PlaylistCovers.Cover.Representation(id *a1)
{

}

uint64_t initializeWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 40);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 48);
  v20 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  v21 = v19;

  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover.Representation()
{
  return &type metadata for PlaylistCovers.Cover.Representation;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Specs()
{
  return &type metadata for PlaylistCovers.Specs;
}

id sub_1001B3734(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;

  if (a2)
  {
    v11 = a2;
    v12 = a3;
    v13 = a4;
    v14 = a5;
    v15 = a6;
    return a7;
  }
  return result;
}

void sub_1001B3790(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  if (a2)
  {

  }
}

uint64_t sub_1001B37EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1001B3828(int a1)
{
  uint64_t v1;

  sub_1001B1FC4(a1, *(id *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1001B383C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B384C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001B385C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001B3864()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1001B3888()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "drawInRect:", 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1001B38A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001B38B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B9C18;
  if (!qword_1004B9C18)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_1003C917C, v1);
    atomic_store(result, (unint64_t *)&qword_1004B9C18);
  }
  return result;
}

void PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  __asm { BR              X10 }
}

uint64_t sub_1001B3934(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  sub_1001B3C8C(a1, a2, a3, a4, a5, a6, a7);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  return v8;
}

uint64_t UIViewPropertyAnimator.UpdateReason.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

void PlaylistCovers.Expression.accessibilityLabel.getter(char a1)
{
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  __chkstk_darwin();
  __asm { BR              X10 }
}

uint64_t sub_1001B3AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x4720656C706D6953, 0xEF746E6569646172);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v5 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

id PlaylistCovers.Expression.textColor.getter(char a1)
{
  return objc_msgSend((id)objc_opt_self(UIColor), *off_10047C088[a1]);
}

void sub_1001B3C8C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BAF8, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_10047BB20, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B9740;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10001122C;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10001D2BC;
  v23[3] = &unk_10047BB38;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 96, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001B3E34(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  _QWORD v24[5];
  uint64_t v25;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BB70, 72, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  *(_QWORD *)(v14 + 64) = v13;
  v15 = swift_allocObject(&unk_10047BB98, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B97B8;
  *(_QWORD *)(v15 + 24) = v14;
  v24[4] = sub_10005B69C;
  v25 = v15;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_10001D2BC;
  v24[3] = &unk_10047BBB0;
  v16 = _Block_copy(v24);
  v17 = v25;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = v13;
  swift_retain(v15);
  objc_msgSend(v22, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 179, 36, 1, v23);
  swift_release(v14);
  swift_release(v15);
  if ((v22 & 1) != 0)
    __break(1u);
}

void sub_1001B3FE8(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BC60, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_10047BC88, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B9814;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10005B69C;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10001D2BC;
  v23[3] = &unk_10047BCA0;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 287, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001B4190(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BCD8, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_10047BD00, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B9838;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10005B69C;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10001D2BC;
  v23[3] = &unk_10047BD18;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 341, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001B4338(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BD50, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_10047BD78, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B985C;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10005B69C;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10001D2BC;
  v23[3] = &unk_10047BD90;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 398, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001B44E0(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BDC8, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_10047BDF0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B9880;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10005B69C;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10001D2BC;
  v23[3] = &unk_10047BE08;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 432, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001B4688(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGImage *v28;
  CGImage *v29;
  CGImageRef v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __n128 v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void **aBlock;
  uint64_t v54;
  void (*v55)(uint64_t, void *);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;
  id v59;
  CGRect v60;

  v52 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6 * 1.1, a7 * 1.1);
  v15 = swift_allocObject(&unk_10047BF30, 64, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  *(double *)(v15 + 48) = a6 * 1.1;
  *(double *)(v15 + 56) = a7 * 1.1;
  v16 = swift_allocObject(&unk_10047BF58, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1001B9988;
  *(_QWORD *)(v16 + 24) = v15;
  v57 = sub_10005B69C;
  v58 = v16;
  aBlock = _NSConcreteStackBlock;
  v54 = 1107296256;
  v55 = sub_10001D2BC;
  v56 = &unk_10047BF70;
  v17 = _Block_copy(&aBlock);
  v18 = v58;
  v50 = a1;
  v19 = a2;
  v49 = a3;
  v20 = a4;
  swift_retain(v16);
  v51 = v14;
  v21 = objc_msgSend(v14, "imageWithActions:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v16, "", 127, 546, 77, 1, v22);
  *(_QWORD *)&v23 = swift_release(v16).n128_u64[0];
  if ((a1 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v21, "scale", v23);
  v25 = v24;
  objc_msgSend(v21, "scale");
  v27 = v26;
  v28 = (CGImage *)objc_msgSend(v21, "CGImage");
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v29 = v28;
  v60.size.height = v27 * a7;
  v60.origin.y = v27 * a7 * 0.05;
  v60.size.width = v25 * a6;
  v60.origin.x = v25 * a6 * 0.05;
  v30 = CGImageCreateWithImageInRect(v28, v60);

  if (v30)
  {
    v31 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v30);

    v59 = v31;
    v32 = swift_allocObject(&unk_10047BFA8, 32, 7);
    *(double *)(v32 + 16) = a6;
    *(double *)(v32 + 24) = a7;
    v33 = swift_allocObject(&unk_10047BFD0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1001B99C8;
    *(_QWORD *)(v33 + 24) = v32;
    v57 = sub_10005B69C;
    v58 = v33;
    aBlock = _NSConcreteStackBlock;
    v54 = 1107296256;
    v55 = sub_10001D2BC;
    v56 = &unk_10047BFE8;
    v34 = _Block_copy(&aBlock);
    v35 = v58;
    swift_retain(v33);
    v36 = objc_msgSend(v52, "imageWithActions:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v33, "", 127, 584, 35, 1, v37);
    swift_release(v33);
    if ((v34 & 1) == 0)
    {
      v38 = swift_allocObject(&unk_10047C020, 96, 7);
      *(_QWORD *)(v38 + 16) = v50;
      *(_QWORD *)(v38 + 24) = v19;
      *(_QWORD *)(v38 + 32) = v49;
      *(_QWORD *)(v38 + 40) = v20;
      *(_QWORD *)(v38 + 48) = 0;
      *(_QWORD *)(v38 + 56) = 0;
      *(double *)(v38 + 64) = a6;
      *(double *)(v38 + 72) = a7;
      *(_QWORD *)(v38 + 80) = v36;
      *(_QWORD *)(v38 + 88) = &v59;
      v39 = swift_allocObject(&unk_10047C048, 32, 7);
      *(_QWORD *)(v39 + 16) = sub_1001B9A24;
      *(_QWORD *)(v39 + 24) = v38;
      v57 = sub_10005B69C;
      v58 = v39;
      aBlock = _NSConcreteStackBlock;
      v54 = 1107296256;
      v55 = sub_10001D2BC;
      v56 = &unk_10047C060;
      v40 = _Block_copy(&aBlock);
      v41 = v58;
      v42 = v50;
      v43 = v19;
      v44 = v49;
      v45 = v20;
      v46 = v36;
      swift_retain(v39);
      objc_msgSend(v52, "imageWithActions:", v40, swift_release(v41).n128_f64[0]);

      _Block_release(v40);
      LOBYTE(v40) = swift_isEscapingClosureAtFileLocation(v39, "", 127, 601, 36, 1, v47);
      swift_release(v39);
      if ((v40 & 1) == 0)
      {
        v48 = v59;
        swift_release(v38);
        swift_release(v32);
        swift_release(v15);

        return;
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

_UNKNOWN **static PlaylistCovers.Expression.allCases.getter()
{
  return &off_100468748;
}

Swift::Int sub_1001B4B58()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_1001B4B9C()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_1001B4BC8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_1001B4C08@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001B4C30(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_1001B4C40(_QWORD *a1@<X8>)
{
  *a1 = &off_100468748;
}

uint64_t static PlaylistCovers.coverRepresentations(size:expressions:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a6;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 64) = a4;
  *(_QWORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 48) = a2;
  *(double *)(v8 + 24) = a7;
  *(double *)(v8 + 32) = a8;
  return swift_task_switch(sub_1001B4C74, 0, 0);
}

uint64_t sub_1001B4C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_1000057B4(&qword_1004C1148);
  v6 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v3;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 72) = v1;
  v9 = sub_1000057B4(&qword_1004C1160);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 96) = v10;
  *v10 = v0;
  v10[1] = sub_1001B4D58;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v5, v9, 0, 0, &unk_1004C1158, v6, v5);
}

uint64_t sub_1001B4D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001B4DB4, 0, 0);
}

uint64_t sub_1001B4DB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001B4DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(v10 + 136) = a7;
  *(_QWORD *)(v10 + 144) = a8;
  *(_QWORD *)(v10 + 120) = a5;
  *(_QWORD *)(v10 + 128) = a6;
  *(_QWORD *)(v10 + 112) = a4;
  *(double *)(v10 + 96) = a9;
  *(double *)(v10 + 104) = a10;
  *(_QWORD *)(v10 + 80) = a2;
  *(_QWORD *)(v10 + 88) = a3;
  *(_QWORD *)(v10 + 72) = a1;
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4((uint64_t *)&unk_1004BFBC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v10 + 152) = swift_task_alloc(v11);
  *(_QWORD *)(v10 + 160) = swift_task_alloc(v11);
  return swift_task_switch(sub_1001B4E3C, 0, 0);
}

uint64_t sub_1001B4E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  int v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  _QWORD *v50;
  uint64_t v52;
  void (*v53)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (char *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v52 = *(_QWORD *)(v4 - 8);
    v53 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v54 = v4;
    swift_bridgeObjectRetain();
    do
    {
      v56 = v2;
      v7 = *(void **)(v0 + 136);
      v6 = *(void **)(v0 + 144);
      v8 = *(void **)(v0 + 120);
      v9 = *(void **)(v0 + 128);
      v10 = *(void **)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 96);
      v11 = *(_QWORD *)(v0 + 104);
      v13 = *(uint64_t **)(v0 + 80);
      v14 = v3 + 1;
      v15 = *v3;
      v55 = v14;
      v53(*(_QWORD *)(v0 + 160), 1, 1, v54);
      v16 = swift_allocObject(&unk_10047BAA8, 96, 7);
      *(_QWORD *)(v16 + 16) = 0;
      *(_QWORD *)(v16 + 24) = 0;
      *(_BYTE *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = v11;
      *(_QWORD *)(v16 + 56) = v10;
      *(_QWORD *)(v16 + 64) = v8;
      *(_QWORD *)(v16 + 72) = v9;
      *(_QWORD *)(v16 + 80) = v7;
      *(_QWORD *)(v16 + 88) = v6;
      v18 = *v13;
      v19 = v10;
      v20 = v8;
      v21 = v9;
      v22 = v7;
      v23 = v6;
      if ((swift_taskGroup_addPending(v18, 0) & 1) != 0)
      {
        v17 = (uint64_t *)(v16 + 16);
        v24 = *(_QWORD *)(v0 + 152);
        sub_10004FAE8(*(_QWORD *)(v0 + 160), v24);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v24, 1, v54);
        v27 = *(_QWORD *)(v0 + 152);
        if (v25 == 1)
        {
          sub_100051DD0(*(_QWORD *)(v0 + 152));
          v28 = 0;
        }
        else
        {
          v29 = TaskPriority.rawValue.getter(v26);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v27, v54);
          v28 = v29;
        }
        v3 = v55;
        v5 = v56;
        v30 = *v17;
        if (*v17)
        {
          v31 = *(_QWORD *)(v16 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v30);
          v33 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v31);
          v35 = v34;
          swift_unknownObjectRelease(v30);
        }
        else
        {
          v33 = 0;
          v35 = 0;
        }
        v36 = **(_QWORD **)(v0 + 80);
        v37 = swift_allocObject(&unk_10047BAD0, 32, 7);
        *(_QWORD *)(v37 + 16) = &unk_1004C1188;
        *(_QWORD *)(v37 + 24) = v16;
        v38 = sub_1000057B4(&qword_1004C1148);
        v39 = v35 | v33;
        if (v35 | v33)
        {
          v39 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v33;
          *(_QWORD *)(v0 + 40) = v35;
        }
        *(_QWORD *)(v0 + 48) = 1;
        *(_QWORD *)(v0 + 56) = v39;
        *(_QWORD *)(v0 + 64) = v36;
        v40 = swift_task_create(v28 | 0x1100, v0 + 48, v38, &unk_1004C11A0, v37);
        swift_release(v40);
      }
      else
      {
        swift_release(v16);
        v3 = v55;
        v5 = v56;
      }
      sub_100051DD0(*(_QWORD *)(v0 + 160));
      v2 = v5 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v42 = *(void **)(v0 + 128);
  v41 = *(void **)(v0 + 136);
  v43 = *(void **)(v0 + 120);
  v44 = **(_QWORD **)(v0 + 80);
  v45 = unk_1004C1194;
  v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004C1190
                                                                                     + dword_1004C1190);
  v46 = *(id *)(v0 + 112);
  v47 = v43;
  v48 = v42;
  v49 = v41;
  v50 = (_QWORD *)swift_task_alloc(v45);
  *(_QWORD *)(v0 + 168) = v50;
  *v50 = v0;
  v50[1] = sub_1001B512C;
  return v57((uint64_t)&_swiftEmptyDictionarySingleton, v44, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_1001B512C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 168);
  v6 = *(void **)(*v2 + 128);
  v5 = *(void **)(*v2 + 136);
  v8 = *(void **)(*v2 + 112);
  v7 = *(void **)(*v2 + 120);
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc(v4);

  return swift_task_switch(sub_1001B51B0, 0, 0);
}

uint64_t sub_1001B51B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(char ***)(v0 + 72);
  swift_bridgeObjectRetain();
  v5 = sub_1001B898C((uint64_t)&off_100468748, v1);
  swift_bridgeObjectRelease_n(v1, 2);
  *v4 = v5;
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B5230(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v10 + 64) = a10;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 48) = a8;
  *(_QWORD *)(v10 + 56) = a9;
  *(_QWORD *)(v10 + 40) = a7;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 80) = a6;
  *(_QWORD *)(v10 + 16) = a1;
  return swift_task_switch(sub_1001B5264, 0, 0);
}

uint64_t sub_1001B5264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_BYTE *)(v0 + 80);
  *(_BYTE *)v6 = v7;
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(v5, v3, v4, v1, v2, v7);
  *(_QWORD *)(v6 + 8) = v8;
  *(_QWORD *)(v6 + 16) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CGColorSpaceRef sub_1001B52B0()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateDeviceRGB();
  qword_1004F4B70 = (uint64_t)result;
  return result;
}

void sub_1001B52CC(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  CGColorSpace *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const __CFArray *isa;
  CGGradient *v20;
  CGContext *v21;
  CGColorSpace *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  CGColorSpace *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  const __CFArray *v37;
  CGGradient *v38;
  CGContext *v39;
  CGColorSpace *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  const __CFArray *v47;
  CGGradient *v48;
  CGContext *v49;
  CGColorSpace *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  const __CFArray *v55;
  CGGradient *v56;
  CGContext *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;
  CGPoint v70;
  CGPoint v71;
  CGPoint v72;
  CGPoint v73;
  CGPoint v74;
  CGPoint v75;
  CGPoint v76;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a2, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v15 = (CGColorSpace *)qword_1004F4B70;
  v16 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v17 + 32) = objc_msgSend(a2, "CGColor");
  v18 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v17 + 40) = v18;
  v66 = v17;
  specialized Array._endMutation()(v18);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v65 = xmmword_1003C6DA0;
  v20 = CGGradientCreateWithColors(v15, isa, (const CGFloat *)&v65);

  if (v20)
  {
    v21 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = 0.0;
    v67.y = 0.0;
    v72.x = a4;
    v72.y = a5;
    CGContextDrawLinearGradient(v21, v20, v67, v72, 0);

  }
  v22 = (CGColorSpace *)qword_1004F4B70;
  v23 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v23 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v23 + 40) = objc_msgSend(a7, "CGColor");
  v24 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v23 + 48) = v25;
  v66 = v23;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v63 = xmmword_1003C6DB0;
  v64 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v22, v27, (const CGFloat *)&v63);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v68.x = a4;
    v68.y = a5;
    v73.x = a4;
    v73.y = a5;
    CGContextDrawRadialGradient(v29, v28, v68, 0.0, v73, a4, 0);

  }
  v30 = (CGColorSpace *)qword_1004F4B70;
  v31 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v31 + 32) = objc_msgSend(a3, "CGColor");
  v32 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v33 = objc_msgSend(v32, "CGColor");

  *(_QWORD *)(v31 + 40) = v33;
  v34 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v35 = objc_msgSend(v34, "CGColor");

  *(_QWORD *)(v31 + 48) = v35;
  v66 = v31;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v61 = xmmword_1003C6DC0;
  v62 = 0x3FF0000000000000;
  v38 = CGGradientCreateWithColors(v30, v37, (const CGFloat *)&v61);

  if (v38)
  {
    v39 = (CGContext *)objc_msgSend(a1, "CGContext");
    v69.x = 0.0;
    v74.x = 0.0;
    v69.y = a5;
    v74.y = a5;
    CGContextDrawRadialGradient(v39, v38, v69, 0.0, v74, a4, 0);

  }
  v40 = (CGColorSpace *)qword_1004F4B70;
  v41 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v41 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v41 + 32) = objc_msgSend(a3, "CGColor");
  v42 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v43 = objc_msgSend(v42, "CGColor");

  *(_QWORD *)(v41 + 40) = v43;
  v44 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v45 = objc_msgSend(v44, "CGColor");

  *(_QWORD *)(v41 + 48) = v45;
  v66 = v41;
  specialized Array._endMutation()(v46);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v59 = xmmword_1003C6DC0;
  v60 = 0x3FF0000000000000;
  v48 = CGGradientCreateWithColors(v40, v47, (const CGFloat *)&v59);

  if (v48)
  {
    v49 = (CGContext *)objc_msgSend(a1, "CGContext");
    v70.y = 0.0;
    v75.y = 0.0;
    v70.x = a4;
    v75.x = a4;
    CGContextDrawRadialGradient(v49, v48, v70, 0.0, v75, a4, 0);

  }
  v50 = (CGColorSpace *)qword_1004F4B70;
  v51 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v51 + 32) = objc_msgSend(a2, "CGColor");
  v52 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v53 = objc_msgSend(v52, "CGColor");

  *(_QWORD *)(v51 + 40) = v53;
  v66 = v51;
  specialized Array._endMutation()(v54);
  v55 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v58 = xmmword_1003C6DA0;
  v56 = CGGradientCreateWithColors(v50, v55, (const CGFloat *)&v58);

  if (v56)
  {
    v57 = (CGContext *)objc_msgSend(a1, "CGContext");
    v71.x = 0.0;
    v71.y = 0.0;
    v76.x = 0.0;
    v76.y = 0.0;
    CGContextDrawRadialGradient(v57, v56, v71, 0.0, v76, a4, 0);

  }
}

void sub_1001B59C8(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, CGFloat a7, CGFloat a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  CGColorSpace *v19;
  CGFloat v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  const __CFArray *isa;
  CGGradient *v28;
  CGContext *v29;
  CGContext *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat MidY;
  CGFloat ty;
  CGFloat tx;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat MidX;
  CGFloat v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double v47;
  const CGPath *Mutable;
  CGContext *v49;
  id v50;
  void (*v51)(_QWORD);
  uint64_t v52;
  char *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  CGColorSpace *v74;
  id v75;
  id v76;
  const __CFArray *v77;
  CGGradient *v78;
  CGContext *v79;
  CGContext *v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  double v97;
  void *v98;
  void *v99;
  CGContext *v100;
  const CGPath *v101;
  CGContext *v102;
  id v103;
  uint64_t v104;
  char *v105;
  CGColorSpace *v106;
  CGFloat v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  const __CFArray *v112;
  CGGradient *v113;
  CGContext *v114;
  __int128 v115;
  __int128 v116;
  id v117;
  CGFloat v118[3];
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, _QWORD, uint64_t);
  unsigned int v121;
  __int128 v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  uint64_t v127;
  id v128;
  __int128 v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  CGFloat v133[6];
  __int128 v134;
  CGAffineTransform v135;
  _OWORD v136[9];
  CGAffineTransform v137;
  _OWORD v138[2];
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGPoint v141;
  CGPoint v142;
  CGPoint v143;
  CGPoint v144;
  CGPoint v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;

  v126 = a6;
  v124 = a3;
  v132 = type metadata accessor for CGPathFillRule(0);
  v14 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a2;
  v16 = objc_msgSend(a2, "CGColor");
  v125 = a4;
  v17 = objc_msgSend(a4, "CGColor");
  v128 = a5;
  v18 = objc_msgSend(a5, "CGColor");
  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v19 = (CGColorSpace *)qword_1004F4B70;
  v130 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v20 = COERCE_DOUBLE(swift_allocObject(v130, 64, 7));
  *(_OWORD *)(*(_QWORD *)&v20 + 16) = xmmword_1003C64E0;
  *(_QWORD *)(*(_QWORD *)&v20 + 32) = v18;
  *(_QWORD *)(*(_QWORD *)&v20 + 40) = v18;
  *(_QWORD *)(*(_QWORD *)&v20 + 48) = v16;
  *(_QWORD *)(*(_QWORD *)&v20 + 56) = v16;
  t1.a = v20;
  specialized Array._endMutation()(*(_QWORD *)&v20);
  type metadata accessor for CGColor(0);
  v22 = v21;
  v23 = v18;
  v24 = v16;
  v25 = v23;
  v26 = v24;
  v127 = v22;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v138[0] = xmmword_1003C6DD0;
  v138[1] = xmmword_1003C6DE0;
  v28 = CGGradientCreateWithColors(v19, isa, (const CGFloat *)v138);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v141.x = 0.0;
    v141.y = 0.0;
    v144.x = a7;
    v144.y = a8;
    CGContextDrawLinearGradient(v29, v28, v141, v144, 0);

  }
  v30 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v30);

  v31 = a7 * -0.235;
  v32 = a7 * 1.47;
  v146.origin.x = a7 * -0.235;
  v146.origin.y = a8 * 0.15;
  v146.size.width = a7 * 1.47;
  v146.size.height = a8 * 0.7;
  v33 = -CGRectGetMidX(v146);
  v147.origin.x = a7 * -0.235;
  v147.origin.y = a8 * 0.15;
  v147.size.width = a7 * 1.47;
  v147.size.height = a8 * 0.7;
  MidY = CGRectGetMidY(v147);
  CGAffineTransformMakeTranslation(&t1, v33, -MidY);
  *(_OWORD *)v133 = *(_OWORD *)&t1.a;
  v129 = *(_OWORD *)&t1.c;
  tx = t1.tx;
  ty = t1.ty;
  v118[0] = -0.523598776;
  CGAffineTransformMakeRotation(&t1, -0.523598776);
  v37 = *(_OWORD *)&t1.a;
  v38 = *(_OWORD *)&t1.c;
  v39 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = *(_OWORD *)v133;
  *(_OWORD *)&t1.c = v129;
  t1.tx = tx;
  t1.ty = ty;
  *(_OWORD *)&t2.a = v37;
  *(_OWORD *)&t2.c = v38;
  *(_OWORD *)&t2.tx = v39;
  CGAffineTransformConcat(&v137, &t1, &t2);
  v129 = *(_OWORD *)&v137.a;
  v122 = *(_OWORD *)&v137.c;
  v40 = v137.tx;
  v133[0] = a7;
  v41 = v137.ty;
  v148.origin.x = v31;
  v148.origin.y = a8 * 0.15;
  v148.size.width = v32;
  v148.size.height = a8 * 0.7;
  MidX = CGRectGetMidX(v148);
  v149.origin.x = v31;
  v149.origin.y = a8 * 0.15;
  v149.size.width = v32;
  v149.size.height = a8 * 0.7;
  v43 = CGRectGetMidY(v149);
  CGAffineTransformMakeTranslation(&t1, MidX, v43);
  v44 = *(_OWORD *)&t1.a;
  v45 = *(_OWORD *)&t1.c;
  v46 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v129;
  *(_OWORD *)&t1.c = v122;
  t1.tx = v40;
  t1.ty = v41;
  v47 = v133[0];
  *(_OWORD *)&t2.a = v44;
  *(_OWORD *)&t2.c = v45;
  *(_OWORD *)&t2.tx = v46;
  CGAffineTransformConcat(&v137, &t1, &t2);
  t1 = v137;
  Mutable = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(&t1, v31, a8 * 0.15, v32, a8 * 0.7);
  v49 = (CGContext *)objc_msgSend(a1, "CGContext");
  *(_QWORD *)&v122 = Mutable;
  CGContextAddPath(v49, Mutable);

  v50 = objc_msgSend(a1, "CGContext");
  v51 = *(void (**)(_QWORD))(v14 + 104);
  v53 = v131;
  v52 = v132;
  v121 = enum case for CGPathFillRule.winding(_:);
  v120 = (void (*)(char *, _QWORD, uint64_t))v51;
  v51(v131);
  CGContextRef.clip(using:)(v53);

  v119 = *(void (**)(char *, uint64_t))(v14 + 8);
  v119(v53, v52);
  v54 = COERCE_DOUBLE(swift_allocObject(v130, 176, 7));
  *(_OWORD *)(*(_QWORD *)&v54 + 16) = xmmword_1003C6DF0;
  *(_QWORD *)(*(_QWORD *)&v54 + 32) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 40) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 48) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 56) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 64) = v26;
  *(_QWORD *)(*(_QWORD *)&v54 + 72) = v26;
  *(_QWORD *)(*(_QWORD *)&v54 + 80) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 88) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 96) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 104) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 112) = v25;
  v55 = v25;
  v56 = v17;
  v57 = v55;
  v58 = v56;
  v59 = v57;
  v60 = v26;
  v61 = v58;
  v62 = v59;
  *(_QWORD *)&v129 = v60;
  v63 = v61;
  v64 = v128;
  v65 = objc_msgSend(v128, "colorWithAlphaComponent:", 0.8);
  v66 = objc_msgSend(v65, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 120) = v66;
  v67 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.5);
  v68 = objc_msgSend(v67, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 128) = v68;
  v69 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.5);
  v70 = objc_msgSend(v69, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 136) = v70;
  v71 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.8);
  v72 = objc_msgSend(v71, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 144) = v72;
  *(_QWORD *)(*(_QWORD *)&v54 + 152) = v62;
  *(_QWORD *)(*(_QWORD *)&v54 + 160) = v63;
  *(_QWORD *)(*(_QWORD *)&v54 + 168) = v63;
  t2.a = v54;
  specialized Array._endMutation()(v73);
  v74 = (CGColorSpace *)qword_1004F4B70;
  v75 = v63;
  v76 = v62;
  v117 = v75;
  v77 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v136[0] = xmmword_1003C6E00;
  v136[1] = xmmword_1003C6E10;
  v136[2] = xmmword_1003C6E20;
  v136[3] = xmmword_1003C6E30;
  v136[4] = xmmword_1003C6E40;
  v136[5] = xmmword_1003C6E50;
  v136[6] = xmmword_1003C6E60;
  v136[7] = xmmword_1003C6E70;
  v136[8] = xmmword_1003C6E80;
  v78 = CGGradientCreateWithColors(v74, v77, (const CGFloat *)v136);

  if (v78)
  {
    v79 = (CGContext *)objc_msgSend(a1, "CGContext");
    v142.x = v47 * 0.5;
    v142.y = a8 * 0.5;
    CGContextDrawConicGradient(v79, v78, v142, 0.0);

  }
  v80 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v80);

  v81 = v47 * 0.26375;
  v82 = v47 * 0.4725;
  v150.origin.x = v47 * 0.26375;
  v150.origin.y = a8 * 0.388888889;
  v150.size.width = v47 * 0.4725;
  v150.size.height = a8 * 0.2225;
  v83 = -CGRectGetMidX(v150);
  v151.origin.x = v47 * 0.26375;
  v151.origin.y = a8 * 0.388888889;
  v151.size.width = v47 * 0.4725;
  v151.size.height = a8 * 0.2225;
  v84 = CGRectGetMidY(v151);
  CGAffineTransformMakeTranslation(&t2, v83, -v84);
  v115 = *(_OWORD *)&t2.c;
  v116 = *(_OWORD *)&t2.a;
  v85 = t2.tx;
  v86 = t2.ty;
  CGAffineTransformMakeRotation(&t2, v118[0]);
  v87 = *(_OWORD *)&t2.a;
  v88 = *(_OWORD *)&t2.c;
  v89 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = v116;
  *(_OWORD *)&t2.c = v115;
  t2.tx = v85;
  t2.ty = v86;
  *(_OWORD *)&v137.a = v87;
  *(_OWORD *)&v137.c = v88;
  *(_OWORD *)&v137.tx = v89;
  CGAffineTransformConcat(&v135, &t2, &v137);
  *(_OWORD *)v118 = *(_OWORD *)&v135.a;
  v116 = *(_OWORD *)&v135.c;
  v90 = v135.tx;
  v91 = v135.ty;
  v152.origin.x = v81;
  v152.origin.y = a8 * 0.388888889;
  v152.size.width = v82;
  v152.size.height = a8 * 0.2225;
  v92 = CGRectGetMidX(v152);
  v153.origin.x = v81;
  v153.origin.y = a8 * 0.388888889;
  v153.size.width = v82;
  v153.size.height = a8 * 0.2225;
  v93 = CGRectGetMidY(v153);
  CGAffineTransformMakeTranslation(&t2, v92, v93);
  v94 = *(_OWORD *)&t2.a;
  v95 = *(_OWORD *)&t2.c;
  v96 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = *(_OWORD *)v118;
  *(_OWORD *)&t2.c = v116;
  t2.tx = v90;
  t2.ty = v91;
  v97 = v133[0];
  *(_OWORD *)&v137.a = v94;
  *(_OWORD *)&v137.c = v95;
  *(_OWORD *)&v137.tx = v96;
  CGAffineTransformConcat(&v135, &t2, &v137);
  t2 = v135;
  sub_1001B648C(v126, v123, v124, v125, v64, &t2, v81, a8 * 0.388888889, v82, a8 * 0.2225);
  v99 = v98;
  objc_msgSend(v98, "drawInRect:", 0.0, 0.0, v97, a8);

  v100 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetFillColorWithColor(v100, (CGColorRef)v129);

  v101 = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(&t2, v81, a8 * 0.388888889, v82, a8 * 0.2225);
  v102 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextAddPath(v102, v101);

  v103 = objc_msgSend(a1, "CGContext");
  v105 = v131;
  v104 = v132;
  v120(v131, v121, v132);
  CGContextRef.fillPath(using:)(v105);

  v119(v105, v104);
  v106 = (CGColorSpace *)qword_1004F4B70;
  v107 = COERCE_DOUBLE(swift_allocObject(v130, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v107 + 16) = xmmword_1003C6250;
  *(_QWORD *)(*(_QWORD *)&v107 + 32) = v76;
  v108 = v76;
  v109 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.0);
  v110 = objc_msgSend(v109, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v107 + 40) = v110;
  v137.a = v107;
  specialized Array._endMutation()(v111);
  v112 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v134 = xmmword_1003C6DA0;
  v113 = CGGradientCreateWithColors(v106, v112, (const CGFloat *)&v134);

  if (v113)
  {
    v114 = (CGContext *)objc_msgSend(a1, "CGContext");
    v143.y = 0.0;
    v145.y = 0.0;
    v143.x = v97 * 0.5;
    v145.x = v97 * 0.5;
    CGContextDrawRadialGradient(v114, v113, v143, 0.0, v145, v143.x, 0);

    v101 = v114;
  }
  else
  {
    v113 = (CGGradient *)v122;
  }

}

void sub_1001B648C(void *a1, void *a2, void *a3, void *a4, void *a5, _OWORD *a6, double a7, double a8, double a9, double a10)
{
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __n128 v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;

  v20 = swift_allocObject(&unk_10047BBE8, 128, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  *(_QWORD *)(v20 + 32) = a4;
  *(_QWORD *)(v20 + 40) = a5;
  *(double *)(v20 + 48) = a7;
  *(double *)(v20 + 56) = a8;
  *(double *)(v20 + 64) = a9;
  *(double *)(v20 + 72) = a10;
  v21 = a6[1];
  *(_OWORD *)(v20 + 80) = *a6;
  *(_OWORD *)(v20 + 96) = v21;
  *(_OWORD *)(v20 + 112) = a6[2];
  v22 = swift_allocObject(&unk_10047BC10, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1001B97E4;
  *(_QWORD *)(v22 + 24) = v20;
  v38[4] = sub_10005B69C;
  v39 = v22;
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 1107296256;
  v38[2] = sub_10001D2BC;
  v38[3] = &unk_10047BC28;
  v23 = _Block_copy(v38);
  v24 = v39;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  swift_retain(v22);
  v29 = objc_msgSend(a1, "imageWithActions:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation(v22, "", 127, 237, 59, 1, v30);
  *(_QWORD *)&v31 = swift_release(v22).n128_u64[0];
  if ((a5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v32 = objc_msgSend(v29, "CGImage", v31);
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithCGImage:", v32);
      v35 = objc_msgSend(v34, "imageByClampingToExtent");
      v36 = objc_msgSend(v35, "imageByApplyingGaussianBlurWithSigma:", 20.0);
      objc_msgSend(v34, "extent");
      v37 = objc_msgSend(v36, "imageByCroppingToRect:");
      objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCIImage:", v37);
      swift_release(v20);

    }
    else
    {
      swift_release(v20);
    }
  }
}

uint64_t sub_1001B6718(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGContext *v21;
  id v22;
  CGColor *v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  uint64_t v28;

  v17 = type metadata accessor for CGPathFillRule(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (CGContext *)objc_msgSend(a1, "CGContext");
  v22 = objc_msgSend(a9, "colorWithAlphaComponent:", 0.55);
  v23 = (CGColor *)objc_msgSend(v22, "CGColor");

  CGContextSetFillColorWithColor(v21, v23);
  Mutable = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(a10, a2, a3, a4, a5);
  v25 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextAddPath(v25, Mutable);

  v26 = objc_msgSend(a1, "CGContext");
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for CGPathFillRule.winding(_:), v17);
  CGContextRef.fillPath(using:)(v20);

  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

void sub_1001B68C4(void *a1, void *a2, void *a3, void *a4, double a5, CGFloat a6)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGContext *v19;
  double v20;
  CGColorSpace *v21;
  uint64_t v22;
  id v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGContext *v27;
  CGColorSpace *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  const __CFArray *v33;
  CGGradient *v34;
  CGContext *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[3];
  _OWORD v41[3];
  uint64_t v42;
  CGPoint v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;

  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v12 = (CGColorSpace *)qword_1004F4B70;
  v13 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v14 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1003C6E90;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v14 + 64) = objc_msgSend(a3, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 72) = v15;
  v42 = v14;
  specialized Array._endMutation()(v15);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41[0] = xmmword_1003C6EA0;
  v41[1] = xmmword_1003C6EB0;
  v41[2] = xmmword_1003C6EC0;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v43.x = 0.0;
    v43.y = 0.0;
    v46.x = 0.0;
    v46.y = a6;
    CGContextDrawLinearGradient(v18, v17, v43, v46, 0);

  }
  v19 = (CGContext *)objc_msgSend(a1, "CGContext", 0x3FE999999999999ALL, 0x3FF0000000000000, 0x3FD3D70A3D70A3D7, 0x3FE051EB851EB852, 0, 0x3FC47AE147AE147BLL);
  CGContextSaveGState(v19);

  v20 = a5 * 0.5;
  objc_msgSend(a1, "clipToRect:", v20, 0.0, v20, a6);
  v21 = (CGColorSpace *)qword_1004F4B70;
  v22 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1003C6E90;
  *(_QWORD *)(v22 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v22 + 64) = objc_msgSend(a3, "CGColor");
  v23 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 72) = v23;
  v42 = v22;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v40[0] = v38;
  v40[1] = v37;
  v40[2] = v36;
  v25 = CGGradientCreateWithColors(v21, v24, (const CGFloat *)v40);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v47.y = 0.0;
    v44.x = v20;
    v44.y = a6;
    v47.x = v20;
    CGContextDrawLinearGradient(v26, v25, v44, v47, 0);

  }
  v27 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v27);

  v28 = (CGColorSpace *)qword_1004F4B70;
  v29 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v29 + 32) = objc_msgSend(a2, "CGColor");
  v30 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v31 = objc_msgSend(v30, "CGColor");

  *(_QWORD *)(v29 + 40) = v31;
  v42 = v29;
  specialized Array._endMutation()(v32);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_1003C6DA0;
  v34 = CGGradientCreateWithColors(v28, v33, (const CGFloat *)&v39);

  if (v34)
  {
    v35 = (CGContext *)objc_msgSend(a1, "CGContext");
    v48.y = a6 * 0.5;
    v45.x = 0.0;
    v45.y = 0.0;
    v48.x = 0.0;
    CGContextDrawLinearGradient(v35, v34, v45, v48, 0);

  }
}

void sub_1001B6D98(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  NSArray v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  double v35;
  CGGradientRef v36;
  CGGradient *v37;
  double v38;
  objc_class *isa;
  CGContext *v40;
  CGContext *v41;
  CGContext *v42;
  uint64_t v43;
  CGColorSpace *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  const __CFArray *v49;
  CGGradient *v50;
  CGContext *v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  CGPoint v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a7, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  v15 = 0.0;
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  v52 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v16 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a3, "CGColor");
  v53 = a7;
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 48) = v18;
  v65 = v16;
  specialized Array._endMutation()(v19);
  type metadata accessor for CGColor(0);
  v20.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v21 = 9.0;
  v22 = &v55;
  v23 = sub_1000057B4(&qword_1004C11B8);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v24 + 32) = xmmword_1003C6ED0;
  *(_QWORD *)(v24 + 48) = 0x3FF0000000000000;
  v56 = v24;
  v25 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v25 + 32) = xmmword_1003C6ED0;
  *(_QWORD *)(v25 + 48) = 0x3FF0000000000000;
  v57 = v25;
  v26 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v26 + 32) = xmmword_1003C6EE0;
  *(_QWORD *)(v26 + 48) = 0x3FF0000000000000;
  v58 = v26;
  v27 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v27 + 32) = xmmword_1003C6ED0;
  *(_QWORD *)(v27 + 48) = 0x3FF0000000000000;
  v59 = v27;
  v28 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v28 + 32) = xmmword_1003C6EF0;
  *(_QWORD *)(v28 + 48) = 0x3FF0000000000000;
  v60 = v28;
  v29 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v29 + 32) = xmmword_1003C6EF0;
  *(_QWORD *)(v29 + 48) = 0x3FF0000000000000;
  v61 = v29;
  v30 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v30 + 32) = xmmword_1003C6F00;
  *(_QWORD *)(v30 + 48) = 0x3FF0000000000000;
  v62 = v30;
  v31 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v31 + 32) = xmmword_1003C6EF0;
  *(_QWORD *)(v31 + 48) = 0x3FF0000000000000;
  v63 = v31;
  v32 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1003C6280;
  *(_OWORD *)(v32 + 32) = xmmword_1003C6EF0;
  *(_QWORD *)(v32 + 48) = 0x3FF0000000000000;
  v64 = v32;
  if (qword_1004B8D88 != -1)
    goto LABEL_15;
  while (1)
  {
    v33 = 0;
    v34 = v22 + 32;
    v21 = a4 / v21;
LABEL_3:
    v22 = (char *)(v33 + 1);
    if (__OFADD__(v33, 1))
      goto LABEL_14;
    if (v33 <= 8)
      break;
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  }
  while (1)
  {
    v35 = *((double *)&off_100468770 + v33 + 4);
    v36 = CGGradientCreateWithColors((CGColorSpaceRef)qword_1004F4B70, v20.super.isa, (const CGFloat *)(*(_QWORD *)&v34[8 * v33] + 32));
    if (v36)
    {
      v37 = v36;
      v38 = v35 * a5;
      isa = v20.super.isa;
      v40 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextSaveGState(v40);
      swift_bridgeObjectRetain();

      objc_msgSend(a1, "clipToRect:", v15, a5 - v38, v21, v38);
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v66.x = v15;
      v66.y = a5;
      v68.x = v15;
      v68.y = a5 - v38;
      CGContextDrawLinearGradient(v41, v37, v66, v68, 0);

      v42 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextRestoreGState(v42);
      swift_bridgeObjectRelease();

      v20.super.isa = isa;
    }
    if (v33 == 8)
      break;
    v15 = v21 + v15;
    v33 = (unint64_t)v22;
    if (v22 != (char *)8)
      goto LABEL_3;
    v22 = 0;
  }
  v43 = sub_1000057B4(&qword_1004C11C0);
  swift_arrayDestroy(v34, 9, v43);
  v44 = (CGColorSpace *)qword_1004F4B70;
  v45 = swift_allocObject(v52, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v45 + 32) = objc_msgSend(v53, "CGColor");
  v46 = objc_msgSend(v53, "colorWithAlphaComponent:", 0.0);
  v47 = objc_msgSend(v46, "CGColor");

  *(_QWORD *)(v45 + 40) = v47;
  v65 = v45;
  specialized Array._endMutation()(v48);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v54 = xmmword_1003C6DA0;
  v50 = CGGradientCreateWithColors(v44, v49, (const CGFloat *)&v54);

  if (v50)
  {
    v51 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = a4 * 0.145;
    v67.y = a5 * 0.23;
    v69.x = a4 * 0.145;
    v69.y = a5 * 0.23;
    CGContextDrawRadialGradient(v51, v50, v67, 0.0, v69, a4 * 0.3715, 0);

    v20.super.isa = v51;
  }

}

void sub_1001B7390(void *a1, void *a2, double a3, double a4, uint64_t a5, void *a6, void *a7)
{
  CGColorSpace *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const __CFArray *isa;
  CGGradient *v18;
  CGContext *v19;
  CGColorSpace *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;
  CGPoint v34;
  CGPoint v35;
  CGPoint v36;

  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v13 = (CGColorSpace *)qword_1004F4B70;
  v14 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v15 = swift_allocObject(v14, 80, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1003C6E90;
  *(_QWORD *)(v15 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 40) = objc_msgSend(a6, "CGColor");
  *(_QWORD *)(v15 + 48) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 56) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 64) = objc_msgSend(a6, "CGColor");
  v16 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 72) = v16;
  v33 = v15;
  specialized Array._endMutation()(v16);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_1003C6F10;
  v32[1] = xmmword_1003C6F20;
  v32[2] = xmmword_1003C6F30;
  v18 = CGGradientCreateWithColors(v13, isa, (const CGFloat *)v32);

  if (v18)
  {
    v19 = (CGContext *)objc_msgSend(a1, "CGContext");
    v34.x = a3 * 0.5;
    v34.y = a4 * 0.5;
    CGContextDrawConicGradient(v19, v18, v34, -0.77562432);

  }
  v20 = (CGColorSpace *)qword_1004F4B70;
  v21 = swift_allocObject(v14, 56, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v21 + 32) = objc_msgSend(a2, "CGColor");
  v22 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.7);
  v23 = objc_msgSend(v22, "CGColor");

  *(_QWORD *)(v21 + 40) = v23;
  v24 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v21 + 48) = v25;
  v33 = v21;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v30 = xmmword_1003C6F40;
  v31 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v20, v27, (const CGFloat *)&v30);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v36.y = a4 * 0.5;
    v35.x = 0.0;
    v35.y = 0.0;
    v36.x = 0.0;
    CGContextDrawLinearGradient(v29, v28, v35, v36, 0);

  }
}

void sub_1001B76F8(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGColorSpace *DeviceRGB;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGColorSpace *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  const __CFArray *v34;
  CGGradient *v35;
  CGContext *v36;
  _OWORD v38[2];
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;
  CGPoint v49;

  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v12 = (CGColorSpace *)qword_1004F4B70;
  v13 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v14 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 48) = v15;
  v43 = v14;
  specialized Array._endMutation()(v15);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41 = xmmword_1003C6F50;
  v42 = 0x3FF0000000000000;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)&v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v44.x = 0.0;
    v44.y = 0.0;
    v47.x = 0.0;
    v47.y = a5;
    CGContextDrawLinearGradient(v18, v17, v44, v47, 0);

  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v20 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1003C6CF0;
  *(_QWORD *)(v20 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v20 + 40) = objc_msgSend(a7, "CGColor");
  v21 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v22 = objc_msgSend(v21, "CGColor");

  *(_QWORD *)(v20 + 48) = v22;
  v43 = v20;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_1003C6F60;
  v40 = 0x3FF0000000000000;
  v25 = CGGradientCreateWithColors(DeviceRGB, v24, (const CGFloat *)&v39);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v45.x = a4 * 0.5;
    v45.y = a5 * 0.907407407;
    v48.y = a5 * 0.5;
    v48.x = a4 * 0.5;
    CGContextDrawRadialGradient(v26, v25, v45, a4 * 0.0185185185, v48, a4 * 0.472222222, 3u);

  }
  v27 = CGColorSpaceCreateDeviceRGB();
  v28 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1003C64E0;
  *(_QWORD *)(v28 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v28 + 40) = objc_msgSend(a2, "CGColor");
  v29 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v30 = objc_msgSend(v29, "CGColor");

  *(_QWORD *)(v28 + 48) = v30;
  v31 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v32 = objc_msgSend(v31, "CGColor");

  *(_QWORD *)(v28 + 56) = v32;
  v43 = v28;
  specialized Array._endMutation()(v33);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v38[0] = xmmword_1003C6EE0;
  v38[1] = xmmword_1003C6EC0;
  v35 = CGGradientCreateWithColors(v27, v34, (const CGFloat *)v38);

  if (v35)
  {
    v36 = (CGContext *)objc_msgSend(a1, "CGContext");
    v46.x = a4 * 0.5;
    v46.y = a5 * 0.907407407;
    v49.y = a5 * 0.5;
    v49.x = a4 * 0.5;
    CGContextDrawRadialGradient(v36, v35, v46, a4 * 0.0185185185, v49, a4 * 0.472222222, 3u);

  }
}

void sub_1001B7B88(double a1, double a2, double a3, double a4)
{
  id v8;
  NSString v9;
  id v10;

  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v8 = (id)qword_1004F4630;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v9, v8);

  if (v10)
  {
    objc_msgSend(v10, "drawInRect:", a1, a2, a3, a4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001B7C84(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, uint64_t a10, void *a11, void *a12)
{
  CGColorSpace *DeviceRGB;
  uint64_t v24;
  uint64_t v25;
  id v26;
  const __CFArray *isa;
  CGGradient *v28;
  CGContext *v29;
  CGContext *v30;
  CGContext *v31;
  CGContext *v32;
  CGContext *v33;
  CGImage *v34;
  CGImage *v35;
  CGColorSpace *v36;
  uint64_t v37;
  id v38;
  const __CFArray *v39;
  CGGradient *v40;
  CGContext *v41;
  CGContext *v42;
  CGColorSpace *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  const __CFArray *v48;
  CGGradient *v49;
  CGContext *v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[2];
  uint64_t v54;
  CGPoint v55;
  CGPoint v56;
  CGPoint v57;
  CGPoint v58;
  CGPoint v59;
  CGPoint v60;
  CGRect v61;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v24 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1003C64E0;
  *(_QWORD *)(v25 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 48) = objc_msgSend(a3, "CGColor");
  v26 = objc_msgSend(a11, "CGColor");
  *(_QWORD *)(v25 + 56) = v26;
  v54 = v25;
  specialized Array._endMutation()(v26);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v53[0] = xmmword_1003C6F70;
  v53[1] = xmmword_1003C6F80;
  v28 = CGGradientCreateWithColors(DeviceRGB, isa, (const CGFloat *)v53);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v55.x = a4 * 0.324074074;
    v58.x = a4 * 0.724074074;
    v55.y = 0.0;
    v58.y = a5;
    CGContextDrawLinearGradient(v29, v28, v55, v58, 3u);

  }
  v30 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v30);

  v31 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextTranslateCTM(v31, 0.0, a9);

  v32 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextScaleCTM(v32, 1.0, -1.0);

  v33 = (CGContext *)objc_msgSend(a1, "CGContext");
  v34 = (CGImage *)objc_msgSend(a12, "CGImage");
  if (v34)
  {
    v35 = v34;
    v61.origin.x = a6;
    v61.origin.y = a7;
    v61.size.width = a8;
    v61.size.height = a9;
    CGContextClipToMask(v33, v61, v34);

    v36 = CGColorSpaceCreateDeviceRGB();
    v37 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1003C64E0;
    *(_QWORD *)(v37 + 32) = objc_msgSend(a11, "CGColor");
    *(_QWORD *)(v37 + 40) = objc_msgSend(a3, "CGColor");
    *(_QWORD *)(v37 + 48) = objc_msgSend(a2, "CGColor");
    v38 = objc_msgSend(a2, "CGColor");
    *(_QWORD *)(v37 + 56) = v38;
    v54 = v37;
    specialized Array._endMutation()(v38);
    v39 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52[0] = xmmword_1003C6F90;
    v52[1] = xmmword_1003C6FA0;
    v40 = CGGradientCreateWithColors(v36, v39, (const CGFloat *)v52);

    if (v40)
    {
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v56.y = 0.0;
      v59.x = 0.0;
      v56.x = a4;
      v59.y = a5;
      CGContextDrawLinearGradient(v41, v40, v56, v59, 0);

    }
    v42 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v42);

    v43 = CGColorSpaceCreateDeviceRGB();
    v44 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v44 + 16) = xmmword_1003C6250;
    *(_QWORD *)(v44 + 32) = objc_msgSend(a2, "CGColor");
    v45 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
    v46 = objc_msgSend(v45, "CGColor");

    *(_QWORD *)(v44 + 40) = v46;
    v54 = v44;
    specialized Array._endMutation()(v47);
    v48 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v51 = xmmword_1003C6DA0;
    v49 = CGGradientCreateWithColors(v43, v48, (const CGFloat *)&v51);

    if (v49)
    {
      v50 = (CGContext *)objc_msgSend(a1, "CGContext");
      v60.y = a5 * 0.5;
      v57.x = 0.0;
      v57.y = 0.0;
      v60.x = 0.0;
      CGContextDrawLinearGradient(v50, v49, v57, v60, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001B818C(void *a1, void *a2, CGFloat a3, CGFloat a4, uint64_t a5, void *a6, void *a7)
{
  CGContext *v13;
  CGColorSpace *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  const __CFArray *isa;
  CGGradient *v21;
  CGContext *v22;
  CGColorSpace *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  const __CFArray *v28;
  CGGradient *v29;
  CGContext *v30;
  __int128 v31;
  _OWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  CGPoint v35;
  CGPoint v36;
  CGPoint v37;
  CGPoint v38;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetBlendMode(v13, kCGBlendModeNormal);

  objc_msgSend(a2, "setFill");
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a3, a4);
  if (qword_1004B8D88 != -1)
    swift_once(&qword_1004B8D88, sub_1001B52B0);
  v14 = (CGColorSpace *)qword_1004F4B70;
  v15 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1003C6D60;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 48) = objc_msgSend(a6, "CGColor");
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.9);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 56) = v18;
  v19 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v16 + 64) = v19;
  v34 = v16;
  specialized Array._endMutation()(v19);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_1003C6FB0;
  v32[1] = xmmword_1003C6FC0;
  v33 = 0x3FF0000000000000;
  v21 = CGGradientCreateWithColors(v14, isa, (const CGFloat *)v32);

  if (v21)
  {
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    v37.x = 0.0;
    v37.y = 0.0;
    v35.x = a3;
    v35.y = a4;
    CGContextDrawLinearGradient(v22, v21, v35, v37, 3u);

  }
  v23 = (CGColorSpace *)qword_1004F4B70;
  v24 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v24 + 32) = objc_msgSend(a7, "CGColor");
  v25 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v26 = objc_msgSend(v25, "CGColor");

  *(_QWORD *)(v24 + 40) = v26;
  v34 = v24;
  specialized Array._endMutation()(v27);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v31 = xmmword_1003C6DA0;
  v29 = CGGradientCreateWithColors(v23, v28, (const CGFloat *)&v31);

  if (v29)
  {
    v30 = (CGContext *)objc_msgSend(a1, "CGContext");
    v38.y = a4 * 0.5;
    v36.x = 0.0;
    v36.y = 0.0;
    v38.x = 0.0;
    CGContextDrawLinearGradient(v30, v29, v36, v38, 3u);

  }
}

uint64_t sub_1001B84F8(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  double v16;
  double v17;
  _BOOL4 v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  BOOL v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD v32[6];

  v6 = type metadata accessor for CGPathFillRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 / 3.0;
  if (a2 / 3.0 == 0.0)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  v12 = a2 >= 0.0;
  if (v11 > 0.0)
    v12 = a2 <= 0.0;
  if (!v12)
  {
    v13 = 0;
    v14 = a3 / 3.0;
    v15 = a3 >= 0.0;
    if (a3 / 3.0 > 0.0)
      v15 = a3 <= 0.0;
    v29 = v15;
    v16 = a2 / 6.3;
    v31 = enum case for CGPathFillRule.winding(_:);
    v17 = 0.0;
    v28 = a2;
    while (1)
    {
      v19 = __OFADD__(v13, 1);
      v20 = v13 + 1;
      if (v19)
        break;
      if (v14 == 0.0)
        goto LABEL_23;
      v30 = v20;
      if (!v29)
      {
        v21 = 0;
        v22 = 0.0;
        while (!__OFADD__(v21, 1))
        {
          v23 = (double)(v21 + 1) * v14 + 0.0;
          Mutable = CGPathCreateMutable();
          v32[1] = 0;
          v32[2] = 0;
          v32[0] = 0x3FF0000000000000;
          v32[3] = 0x3FF0000000000000;
          v32[4] = 0;
          v32[5] = 0;
          CGMutablePathRef.addRoundedRect(in:cornerWidth:cornerHeight:transform:)(v32, v17, v22, v11, v14, v16, a3 / 6.3);
          v25 = (CGContext *)objc_msgSend(a1, "CGContext");
          CGContextAddPath(v25, Mutable);

          v26 = objc_msgSend(a1, "CGContext");
          (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, v31, v6);
          CGContextRef.fillPath(using:)(v10);

          result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
          v27 = v23 <= a3;
          if (v14 > 0.0)
            v27 = v23 >= a3;
          ++v21;
          v22 = v23;
          if (v27)
            goto LABEL_9;
        }
        __break(1u);
        break;
      }
LABEL_9:
      v13 = v30;
      v17 = (double)v30 * v11 + 0.0;
      v18 = v17 <= v28;
      if (v11 > 0.0)
        v18 = v17 >= v28;
      if (v18)
        return result;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return result;
}

void sub_1001B8770(void *a1, int a2, int a3, int a4, id a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, void *a10, id *a11)
{
  CGContext *v18;
  CGContext *v19;
  CGImage *v20;
  CGImage *v21;
  CGContext *v22;
  CGRect v23;

  objc_msgSend(a5, "setFill");
  objc_msgSend(a1, "fillRect:blendMode:", 0, a6, a7, a8, a9);
  v18 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v18);

  v19 = (CGContext *)objc_msgSend(a1, "CGContext");
  v20 = (CGImage *)objc_msgSend(a10, "CGImage");
  if (v20)
  {
    v21 = v20;
    v23.origin.x = a6;
    v23.origin.y = a7;
    v23.size.width = a8;
    v23.size.height = a9;
    CGContextClipToMask(v19, v23, v20);

    objc_msgSend(*a11, "drawInRect:blendMode:alpha:", 0, a6, a7, a8, a9, 1.0);
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v22);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001B88CC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_1001B8934;
  return v5(v2 + 16);
}

uint64_t sub_1001B8934()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v3 = *(_OWORD *)(v1 + 24);
  *(_BYTE *)v2 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(v2 + 8) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

char *sub_1001B898C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_1000C57B8(*(_BYTE *)(a1 + v5 + 32));
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 56 * v8;
        v11 = *(_BYTE *)v10;
        v23 = *(_OWORD *)(v10 + 24);
        v21 = *(_OWORD *)(v10 + 8);
        v22 = *(_OWORD *)(v10 + 40);
        v12 = (id)v21;
        v13 = *((id *)&v21 + 1);
        v14 = (id)v23;
        v15 = *((id *)&v23 + 1);
        v16 = (id)v22;
        v17 = *((id *)&v22 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_10005EACC(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v19 = *((_QWORD *)v6 + 2);
        v18 = *((_QWORD *)v6 + 3);
        if (v19 >= v18 >> 1)
          v6 = sub_10005EACC((char *)(v18 > 1), v19 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v19 + 1;
        v7 = &v6[56 * v19];
        v7[32] = v11;
        *(_OWORD *)(v7 + 40) = v21;
        *(_OWORD *)(v7 + 56) = v23;
        *(_OWORD *)(v7 + 72) = v22;
      }
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
    return 8;
  else
    return a1 - 1;
}

void sub_1001B8B30(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  char isEscapingClosureAtFileLocation;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_10047BE40, 48, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(double *)(v14 + 32) = a6;
  *(double *)(v14 + 40) = a7;
  v15 = swift_allocObject(&unk_10047BE68, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1001B98AC;
  *(_QWORD *)(v15 + 24) = v14;
  v36 = sub_10005B69C;
  v37 = v15;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_10001D2BC;
  v35 = &unk_10047BE80;
  v16 = _Block_copy(&aBlock);
  v17 = v37;
  swift_retain(v15);
  v18 = objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 485, 35, 1, v19);
  swift_release(v15);
  if ((v16 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v20 = swift_allocObject(&unk_10047BEB8, 104, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  *(double *)(v20 + 48) = a6;
  *(double *)(v20 + 56) = a7;
  *(_QWORD *)(v20 + 64) = 0;
  *(_QWORD *)(v20 + 72) = 0;
  *(double *)(v20 + 80) = a6;
  *(double *)(v20 + 88) = a7;
  *(_QWORD *)(v20 + 96) = v18;
  v21 = swift_allocObject(&unk_10047BEE0, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1001B990C;
  *(_QWORD *)(v21 + 24) = v20;
  v36 = sub_10005B69C;
  v37 = v21;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_10001D2BC;
  v35 = &unk_10047BEF8;
  v31 = v14;
  v22 = _Block_copy(&aBlock);
  v23 = v37;
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = v18;
  swift_retain(v21);
  objc_msgSend(v13, "imageWithActions:", v22, swift_release(v23).n128_f64[0]);

  _Block_release(v22);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 127, 489, 36, 1, v29);
  swift_release(v20);
  swift_release(v31);
  swift_release(v21);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
}

uint64_t sub_1001B8DF4(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = *((_QWORD *)v2 + 2);
  v7 = v2[3];
  v8 = v2[4];
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 6);
  v11 = *((_QWORD *)v2 + 7);
  v12 = *((_QWORD *)v2 + 8);
  v13 = *((_QWORD *)v2 + 9);
  v14 = (_QWORD *)swift_task_alloc(dword_1004C1154);
  *(_QWORD *)(v3 + 16) = v14;
  *v14 = v3;
  v14[1] = sub_10002F6EC;
  return sub_1001B4DBC(a1, a2, v6, v9, v10, v11, v12, v13, v7, v8);
}

unint64_t sub_1001B8EA4()
{
  unint64_t result;

  result = qword_1004C1168;
  if (!qword_1004C1168)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Expression, &type metadata for PlaylistCovers.Expression);
    atomic_store(result, (unint64_t *)&qword_1004C1168);
  }
  return result;
}

uint64_t sub_1001B8EE8()
{
  return sub_10004FFFC(&qword_1004C1170, &qword_1004C1178, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s10ExpressionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ExpressionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1001B8FF0 + 4 * byte_1003D1F75[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1001B9024 + 4 * byte_1003D1F70[v4]))();
}

uint64_t sub_1001B9024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B902C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001B9034);
  return result;
}

uint64_t sub_1001B9040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001B9048);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1001B904C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B9054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Expression()
{
  return &type metadata for PlaylistCovers.Expression;
}

uint64_t sub_1001B9070()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001B90BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = swift_task_alloc(dword_1004C1184);
  v9 = *(_OWORD *)(v1 + 56);
  v10 = *(_OWORD *)(v1 + 72);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_10002E8E0;
  *(_QWORD *)(v8 + 72) = v7;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 80) = v4;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch(sub_1001B5264, 0, 0);
}

uint64_t sub_1001B9154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = sub_1000057B4(&qword_1004C11A8);
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v6[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B91C0, 0, 0);
}

uint64_t sub_1001B91C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = sub_1000057B4(&qword_1004C1148);
  TaskGroup.makeAsyncIterator()(v1, v2);
  v3 = sub_10004FFFC(&qword_1004C11B0, &qword_1004C11A8, (uint64_t)&protocol conformance descriptor for TaskGroup<A>.Iterator);
  v0[15] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_1001B9270;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[12], v3);
}

uint64_t sub_1001B9270()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 128));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1001B9644;
  }
  else
  {
    v2[17] = v2[6];
    v6 = sub_1001B9300;
  }
  return swift_task_switch(v6, 0, 0);
}

void sub_1001B9300()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 24);
  if (!v1)
  {
    v26 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(v26, *(_QWORD *)(v0 + 96));
    sub_1001B970C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
    swift_task_dealloc(v26);
    (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
    return;
  }
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);
  v6 = *(void **)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 32);
  v8 = *(_BYTE *)(v0 + 16);
  v9 = v1;
  v10 = v7;
  v11 = v9;
  v12 = v10;
  v13 = v6;
  v14 = v5;
  v15 = v4;
  v16 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  *(_QWORD *)(v0 + 40) = v2;
  v19 = sub_1000C57B8(v8);
  v20 = *(_QWORD *)(v2 + 16);
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
  }
  else
  {
    v23 = v18;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 136) + 24) >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1001D616C();
    }
    else
    {
      sub_1001D4928(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1000C57B8(v8);
      if ((v23 & 1) != (v25 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Expression);
        return;
      }
      v19 = v24;
    }
    v27 = *(_QWORD **)(v0 + 40);
    *(_QWORD *)(v0 + 144) = v27;
    v29 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 72);
    if ((v23 & 1) != 0)
    {
      v32 = v27[7] + 56 * v19;
      v33 = *(void **)(v32 + 16);
      v34 = v12;
      v35 = v11;
      v36 = *(void **)(v32 + 24);
      v37 = *(void **)(v32 + 32);
      v43 = *(void **)(v32 + 40);
      v44 = *(void **)(v32 + 48);
      v45 = *(_QWORD *)(v0 + 80);
      v46 = *(_QWORD *)(v0 + 88);

      v12 = v34;
      v11 = v35;

      *(_BYTE *)v32 = v8;
      *(_QWORD *)(v32 + 8) = v35;
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v30;
      *(_QWORD *)(v32 + 32) = v45;
      *(_QWORD *)(v32 + 40) = v46;
      *(_QWORD *)(v32 + 48) = v34;
LABEL_14:
      swift_bridgeObjectRelease();

      v42 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 152) = v42;
      *v42 = v0;
      v42[1] = sub_1001B95B4;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
      return;
    }
    v27[(v19 >> 6) + 8] |= 1 << v19;
    *(_BYTE *)(v27[6] + v19) = v8;
    v38 = v27[7] + 56 * v19;
    *(_BYTE *)v38 = v8;
    *(_QWORD *)(v38 + 8) = v11;
    *(_QWORD *)(v38 + 16) = v31;
    *(_QWORD *)(v38 + 24) = v30;
    *(_QWORD *)(v38 + 32) = v29;
    *(_QWORD *)(v38 + 40) = v28;
    *(_QWORD *)(v38 + 48) = v12;
    v39 = v27[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (!v40)
    {
      v27[2] = v41;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_1001B95B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 152));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1001B9644;
  }
  else
  {
    v2[17] = v2[18];
    v6 = sub_1001B9300;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001B9644()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9678()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B969C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1004C119C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1004C1198 + dword_1004C1198))(a1, v4);
}

void sub_1001B970C(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {

  }
}

uint64_t sub_1001B9738()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B9740(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B52CC);
}

uint64_t sub_1001B974C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B975C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001B976C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001B9774()
{
  id *v0;

  return swift_deallocObject(v0, 72, 7);
}

void sub_1001B97B8(void *a1)
{
  uint64_t v1;

  sub_1001B59C8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 64), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56));
}

uint64_t sub_1001B97CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B97DC()
{
  return sub_1001B9940(128);
}

uint64_t sub_1001B97E4(void *a1)
{
  uint64_t v1;

  return sub_1001B6718(a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), v1 + 80);
}

uint64_t sub_1001B97FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B980C()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B9814(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B68C4);
}

uint64_t sub_1001B9820()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9830()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B9838(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B6D98);
}

uint64_t sub_1001B9844()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9854()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B985C(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B7390);
}

uint64_t sub_1001B9868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9878()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B9880(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B76F8);
}

uint64_t sub_1001B988C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B989C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_1001B98AC()
{
  double *v0;

  sub_1001B7B88(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1001B98B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B98C8()
{
  id *v0;

  return swift_deallocObject(v0, 104, 7);
}

void sub_1001B990C(void *a1)
{
  uint64_t v1;

  sub_1001B7C84(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(CGFloat *)(v1 + 80), *(CGFloat *)(v1 + 88), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 96));
}

uint64_t sub_1001B9928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9938()
{
  return sub_1001B9940(64);
}

uint64_t sub_1001B9940(uint64_t a1)
{
  id *v1;

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001B9988(uint64_t a1)
{
  return sub_1001B9994(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001B818C);
}

uint64_t sub_1001B9994(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_1001B99A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B99B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B99C8(void *a1)
{
  uint64_t v1;

  return sub_1001B84F8(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1001B99D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B99E0()
{
  id *v0;

  return swift_deallocObject(v0, 96, 7);
}

void sub_1001B9A24(void *a1)
{
  uint64_t v1;

  sub_1001B8770(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(id *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(void **)(v1 + 80), *(id **)(v1 + 88));
}

uint64_t sub_1001B9A3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t Logger.playlistCovers.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1004B8D90 != -1)
    swift_once(&qword_1004B8D90, sub_1001BBC90);
  v0 = type metadata accessor for Logger(0);
  return sub_100039D34(v0, (uint64_t)static Logger.playlistCovers);
}

uint64_t PlaylistCovers.RecipeColors.description.getter(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(60);
  v8._object = (void *)0x80000001003AE720;
  v8._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x32726F6C6F63202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x33726F6C6F63202CLL;
  v22._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x34726F6C6F63202CLL;
  v29._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

void UIView.Border.color.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t static PlaylistCovers.RecipeColors.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a5) & 1) != 0
    && (static NSObject.== infix(_:_:)(a2, a6) & 1) != 0
    && (static NSObject.== infix(_:_:)(a3, a7) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(a4, a8) & 1;
  }
  else
  {
    return 0;
  }
}

void PlaylistCovers.RecipeColors.hash(into:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;

  v9 = a2;
  NSObject.hash(into:)(a1);

  v10 = a3;
  NSObject.hash(into:)(a1);

  v11 = a4;
  NSObject.hash(into:)(a1);

  v12 = a5;
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.RecipeColors.hashValue.getter(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13);
  v8 = a1;
  NSObject.hash(into:)(v13);

  v9 = a2;
  NSObject.hash(into:)(v13);

  v10 = a3;
  NSObject.hash(into:)(v13);

  v11 = a4;
  NSObject.hash(into:)(v13);

  return Hasher._finalize()();
}

uint64_t sub_1001B9F34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v7) & 1) != 0
    && (static NSObject.== infix(_:_:)(v2, v6) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v9) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(v4, v8) & 1;
  }
  else
  {
    return 0;
  }
}

Swift::Int sub_1001B9FE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

void sub_1001BA07C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(id *)v1;
  NSObject.hash(into:)(a1);

  v7 = v3;
  NSObject.hash(into:)(a1);

  v8 = v4;
  NSObject.hash(into:)(a1);

  v9 = v5;
  NSObject.hash(into:)(a1);

}

Swift::Int sub_1001BA110()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.recipeColorsForSource(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3[23] = a1;
  v4 = type metadata accessor for IndexPath(0, a2, a3);
  v3[24] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[25] = v5;
  v3[26] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3[27] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[28] = v7;
  v3[29] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v3[30] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[31] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v10);
  v3[33] = swift_task_alloc(v10);
  v11 = type metadata accessor for Track(0);
  v3[34] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[35] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v13);
  v3[37] = swift_task_alloc(v13);
  v3[38] = swift_task_alloc(v13);
  v3[39] = swift_task_alloc(v13);
  v14 = sub_1000057B4(&qword_1004B9E30);
  v3[40] = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[41] = swift_task_alloc(v15);
  v3[42] = swift_task_alloc(v15);
  v16 = sub_1000057B4(&qword_1004B9E40);
  v3[43] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[44] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[45] = swift_task_alloc(v18);
  v3[46] = swift_task_alloc(v18);
  v19 = type metadata accessor for PlaylistCovers.Source(0);
  v3[47] = v19;
  v3[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001BA350, 0, 0);
}

uint64_t sub_1001BA350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **p_cache;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  int v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  BOOL v95;
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t (*v111)();
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  void (*v118)(uint64_t, _QWORD);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  sub_1001BD840(*(_QWORD *)(v0 + 184), v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v4 = **(_QWORD **)(v0 + 384);
      *(_QWORD *)(v0 + 448) = v4;
      v5 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v0 + 456) = v5;
      if (v5)
      {
        v6 = 0;
        v7 = *(_QWORD *)(v0 + 248);
        *(_DWORD *)(v0 + 580) = *(_DWORD *)(v7 + 80);
        *(_DWORD *)(v0 + 584) = enum case for Playlist.Entry.InternalItem.song(_:);
        *(_DWORD *)(v0 + 588) = enum case for Playlist.Entry.InternalItem.uploadedAudio(_:);
        *(_QWORD *)(v0 + 464) = *(_QWORD *)(v7 + 72);
        *(_QWORD *)(v0 + 472) = *(_QWORD *)(v7 + 16);
        p_cache = &OBJC_METACLASS____TtC16MusicMessagesApp25ArtworkComponentVideoView.cache;
        while (1)
        {
          *(_QWORD *)(v0 + 480) = v6;
          v10 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v6, *(_QWORD *)(v0 + 240));
          v11 = Playlist.Entry.catalogID.getter(v10);
          *(_QWORD *)(v0 + 488) = v12;
          if (v12)
            break;
          if (p_cache[434] != (void *)-1)
            swift_once(&qword_1004B8D90, sub_1001BBC90);
          v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
          v15 = *(_QWORD *)(v0 + 256);
          v14 = *(_QWORD *)(v0 + 264);
          v16 = *(_QWORD *)(v0 + 240);
          v17 = type metadata accessor for Logger(0);
          sub_100039D34(v17, (uint64_t)static Logger.playlistCovers);
          v18 = v13(v15, v14, v16);
          v19 = Logger.logObject.getter(v18);
          v20 = static os_log_type_t.default.getter();
          v21 = os_log_type_enabled(v19, v20);
          v22 = *(_QWORD *)(v0 + 248);
          v23 = *(_QWORD *)(v0 + 256);
          v24 = *(_QWORD *)(v0 + 240);
          if (v21)
          {
            v25 = swift_slowAlloc(12, -1);
            v26 = p_cache;
            v27 = swift_slowAlloc(32, -1);
            v133 = v27;
            *(_DWORD *)v25 = 136446210;
            v28 = (char *)Playlist.Entry.description.getter();
            *(_QWORD *)(v25 + 4) = sub_1000393D0(v28, v29, &v133);
            swift_bridgeObjectRelease();
            v9 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
            v9(v23, v24);
            _os_log_impl((void *)&_mh_execute_header, v19, v20, "No catalogID for Entry=%{public}s", (uint8_t *)v25, 0xCu);
            swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
            v30 = v27;
            p_cache = v26;
            swift_slowDealloc(v30, -1, -1);
            swift_slowDealloc(v25, -1, -1);
          }
          else
          {
            v9 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
            v9(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
          }

          v9(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
          v6 = *(_QWORD *)(v0 + 480) + 1;
          if (v6 == *(_QWORD *)(v0 + 456))
            goto LABEL_42;
        }
        v86 = v11;
        v87 = v12;
        v88 = *(_DWORD *)(v0 + 588);
        v89 = *(_DWORD *)(v0 + 584);
        v91 = *(_QWORD *)(v0 + 224);
        v90 = *(_QWORD *)(v0 + 232);
        v92 = *(_QWORD *)(v0 + 216);
        Playlist.Entry.internalItem.getter(v11);
        v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 88))(v90, v92);
        v95 = v93 != v89 && v93 != v88;
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
        v96 = swift_task_alloc(dword_1004C11DC);
        *(_QWORD *)(v0 + 496) = v96;
        *(_QWORD *)v96 = v0;
        *(_QWORD *)(v96 + 8) = sub_1001BB2B4;
        *(_BYTE *)(v96 + 368) = v95;
        *(_QWORD *)(v96 + 336) = v86;
        *(_QWORD *)(v96 + 344) = v87;
        goto LABEL_47;
      }
LABEL_42:
      swift_bridgeObjectRelease();
    }
    else
    {
      v44 = **(void ***)(v0 + 384);
      *(_QWORD *)(v0 + 512) = v44;
      result = (uint64_t)objc_msgSend(v44, "totalItemCount");
      *(_QWORD *)(v0 + 520) = result;
      if (result < 0)
      {
        __break(1u);
        return result;
      }
      v46 = result;
      if (result)
      {
        v47 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 528) = v47;
          if (v47 == v46)
            break;
          v48 = *(void **)(v0 + 512);
          v50 = *(_QWORD *)(v0 + 200);
          v49 = *(_QWORD *)(v0 + 208);
          v51 = *(_QWORD *)(v0 + 192);
          IndexPath.init(item:section:)(v47, 0);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
          v53 = objc_msgSend(v48, "itemAtIndexPath:", isa);
          *(_QWORD *)(v0 + 536) = v53;

          if ((objc_msgSend(v53, "respondsToSelector:", "innermostModelObject") & 1) != 0)
          {
            v54 = objc_msgSend(v53, "innermostModelObject");
            *(_QWORD *)(v0 + 544) = v54;
            objc_opt_self(MPModelSong);
            v55 = swift_dynamicCastObjCClass(v54);
            if (v55)
            {
              v109 = v55;
              v110 = (_QWORD *)swift_task_alloc(dword_1004C11D4);
              *(_QWORD *)(v0 + 552) = v110;
              *v110 = v0;
              v110[1] = sub_1001BB738;
              v110[2] = v109;
              v111 = sub_1001C0540;
              return swift_task_switch(v111, 0, 0);
            }

          }
          swift_unknownObjectRelease(v53);
          v46 = *(_QWORD *)(v0 + 520);
          v47 = *(_QWORD *)(v0 + 528) + 1;
          if (v47 == v46)
          {

            goto LABEL_43;
          }
        }
        __break(1u);
        goto LABEL_50;
      }

    }
LABEL_43:
    if (qword_1004B8D78 == -1)
    {
LABEL_44:
      v97 = *(void **)algn_1004F4B38;
      v99 = (void *)qword_1004F4B40;
      v98 = (void *)unk_1004F4B48;
      v100 = *(_QWORD *)(v0 + 384);
      v101 = *(_QWORD *)(v0 + 360);
      v102 = *(_QWORD *)(v0 + 368);
      v104 = *(_QWORD *)(v0 + 328);
      v103 = *(_QWORD *)(v0 + 336);
      v105 = *(_QWORD *)(v0 + 312);
      v117 = *(_QWORD *)(v0 + 304);
      v119 = *(_QWORD *)(v0 + 296);
      v121 = *(_QWORD *)(v0 + 288);
      v123 = *(_QWORD *)(v0 + 264);
      v125 = *(_QWORD *)(v0 + 256);
      v127 = *(_QWORD *)(v0 + 232);
      v130 = *(_QWORD *)(v0 + 208);
      v132 = (id)qword_1004F4B30;
      v106 = v97;
      v107 = v99;
      v108 = v98;
      swift_task_dealloc(v100);
      swift_task_dealloc(v102);
      swift_task_dealloc(v101);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v105);
      swift_task_dealloc(v117);
      swift_task_dealloc(v119);
      swift_task_dealloc(v121);
      swift_task_dealloc(v123);
      swift_task_dealloc(v125);
      swift_task_dealloc(v127);
      swift_task_dealloc(v130);
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v132, v106, v107, v108);
    }
LABEL_50:
    swift_once(&qword_1004B8D78, sub_1001B1E68);
    goto LABEL_44;
  }
  v31 = *(_QWORD *)(v0 + 368);
  v33 = *(_QWORD *)(v0 + 344);
  v32 = *(_QWORD *)(v0 + 352);
  v35 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 336);
  v36 = *(_QWORD *)(v0 + 320);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 32))(v31, *(_QWORD *)(v0 + 384), v33);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  *(_QWORD *)(v0 + 392) = v37;
  v37(v35, v31, v33);
  v38 = sub_1001C0874();
  *(_QWORD *)(v0 + 400) = v38;
  dispatch thunk of Collection.startIndex.getter(v33);
  *(_QWORD *)(v35 + *(int *)(v36 + 36)) = *(_QWORD *)(v0 + 168);
  sub_1001C08C0(v35, v34);
  v39 = *(int *)(v36 + 36);
  *(_DWORD *)(v0 + 568) = v39;
  v40 = *(_QWORD *)(v34 + v39);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), v33, v38);
  if (v40 == *(_QWORD *)(v0 + 176))
  {
LABEL_13:
    v41 = *(_QWORD *)(v0 + 368);
    v42 = *(_QWORD *)(v0 + 344);
    v43 = *(_QWORD *)(v0 + 352);
    sub_10000FE2C(*(_QWORD *)(v0 + 336), &qword_1004B9E30);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    goto LABEL_43;
  }
  v115 = v0 + 136;
  *(_DWORD *)(v0 + 572) = enum case for Track.song(_:);
  *(_DWORD *)(v0 + 576) = enum case for Track.musicVideo(_:);
  while (1)
  {
    v116 = *(_DWORD *)(v0 + 576);
    v122 = *(_DWORD *)(v0 + 572);
    v120 = *(_QWORD *)(v0 + 400);
    v57 = *(_QWORD *)(v0 + 360);
    v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v126 = *(_QWORD *)(v0 + 352);
    v58 = *(_QWORD *)(v0 + 336);
    v59 = *(_QWORD *)(v0 + 344);
    v60 = *(_QWORD *)(v0 + 312);
    v128 = *(_QWORD *)(v0 + 304);
    v131 = *(_QWORD *)(v0 + 296);
    v61 = v58 + *(int *)(v0 + 568);
    v63 = *(_QWORD *)(v0 + 272);
    v62 = *(_QWORD *)(v0 + 280);
    v118 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v115, v61, v59, v120);
    v64 = *(void (**)(uint64_t))(v62 + 16);
    v64(v60);
    v118(v115, 0);
    v124(v57, v58, v59);
    dispatch thunk of Collection.formIndex(after:)(v61, v59, v120);
    v65 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
    *(_QWORD *)(v0 + 408) = v65;
    v65(v57, v59);
    v66 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v128, v60, v63);
    v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
    ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v131, v66, v63);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v131, v63);
    v68 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
    *(_QWORD *)(v0 + 416) = v68;
    v69 = v68(v131, v63);
    if (v67 == v122 || v67 == v116)
      break;
LABEL_25:
    v68(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v56 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v56 == *(_QWORD *)(v0 + 176))
      goto LABEL_13;
  }
  v70 = Track.catalogID.getter(v69);
  *(_QWORD *)(v0 + 424) = v71;
  if (!v71)
  {
    if (qword_1004B8D90 != -1)
      swift_once(&qword_1004B8D90, sub_1001BBC90);
    v72 = *(_QWORD *)(v0 + 304);
    v73 = *(_QWORD *)(v0 + 288);
    v74 = *(_QWORD *)(v0 + 272);
    v75 = type metadata accessor for Logger(0);
    sub_100039D34(v75, (uint64_t)static Logger.playlistCovers);
    v76 = v129(v73, v72, v74);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    v79 = os_log_type_enabled(v77, v78);
    v80 = *(_QWORD *)(v0 + 288);
    v81 = *(_QWORD *)(v0 + 272);
    if (v79)
    {
      v82 = swift_slowAlloc(12, -1);
      v83 = swift_slowAlloc(32, -1);
      v133 = v83;
      *(_DWORD *)v82 = 136446210;
      v84 = (char *)Track.description.getter();
      *(_QWORD *)(v82 + 4) = sub_1000393D0(v84, v85, &v133);
      swift_bridgeObjectRelease();
      v68(v80, v81);
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "No catalogID for Track=%{public}s", (uint8_t *)v82, 0xCu);
      swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);
    }
    else
    {
      v68(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_25;
  }
  v112 = v70;
  v113 = v71;
  v114 = swift_task_alloc(dword_1004C11DC);
  *(_QWORD *)(v0 + 432) = v114;
  *(_QWORD *)v114 = v0;
  *(_QWORD *)(v114 + 8) = sub_1001BAD18;
  *(_BYTE *)(v114 + 368) = v67 != v122;
  *(_QWORD *)(v114 + 336) = v112;
  *(_QWORD *)(v114 + 344) = v113;
LABEL_47:
  v111 = sub_1001BF888;
  return swift_task_switch(v111, 0, 0);
}

uint64_t sub_1001BAD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = a4;
  v6 = v5[54];
  v5[55] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1001BAD88, 0, 0);
}

uint64_t sub_1001BAD88()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  int v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  id v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;

  v1 = *(_QWORD *)(v0 + 440);
  (*(void (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
  if (v1)
  {
    v70 = *(id *)(v0 + 440);
    v65 = *(id *)(v0 + 40);
    v67 = *(id *)(v0 + 32);
    v63 = *(id *)(v0 + 48);
    v2 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    v3 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 344);
    sub_10000FE2C(*(_QWORD *)(v0 + 336), &qword_1004B9E30);
    v2(v3, v4);
LABEL_7:
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v15 = *(_QWORD *)(v0 + 328);
    v14 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 312);
    v19 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 264);
    v57 = *(_QWORD *)(v0 + 256);
    v59 = *(_QWORD *)(v0 + 232);
    v61 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    swift_task_dealloc(v16);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v70, v67, v65, v63);
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
  if (v5 == *(_QWORD *)(v0 + 176))
  {
LABEL_4:
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 352);
    sub_10000FE2C(*(_QWORD *)(v0 + 336), &qword_1004B9E30);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (qword_1004B8D78 != -1)
      swift_once(&qword_1004B8D78, sub_1001B1E68);
    v9 = *(void **)algn_1004F4B38;
    v10 = (void *)qword_1004F4B40;
    v11 = (void *)unk_1004F4B48;
    v70 = (id)qword_1004F4B30;
    v67 = v9;
    v65 = v10;
    v63 = v11;
    goto LABEL_7;
  }
  v55 = v0 + 136;
  while (1)
  {
    v56 = *(_DWORD *)(v0 + 576);
    v62 = *(_DWORD *)(v0 + 572);
    v60 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v0 + 360);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v66 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 312);
    v68 = *(_QWORD *)(v0 + 304);
    v71 = *(_QWORD *)(v0 + 296);
    v27 = v24 + *(int *)(v0 + 568);
    v29 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 280);
    v58 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v55, v27, v25, v60);
    v30 = *(void (**)(uint64_t))(v28 + 16);
    v30(v26);
    v58(v55, 0);
    v64(v23, v24, v25);
    dispatch thunk of Collection.formIndex(after:)(v27, v25, v60);
    v31 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    *(_QWORD *)(v0 + 408) = v31;
    v31(v23, v25);
    v32 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v68, v26, v29);
    v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v30;
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v71, v32, v29);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v71, v29);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
    *(_QWORD *)(v0 + 416) = v34;
    v35 = v34(v71, v29);
    if (v33 == v62 || v33 == v56)
      break;
LABEL_11:
    v34(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v22 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v22 == *(_QWORD *)(v0 + 176))
      goto LABEL_4;
  }
  v36 = Track.catalogID.getter(v35);
  *(_QWORD *)(v0 + 424) = v37;
  if (!v37)
  {
    if (qword_1004B8D90 != -1)
      swift_once(&qword_1004B8D90, sub_1001BBC90);
    v38 = *(_QWORD *)(v0 + 304);
    v39 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 272);
    v41 = type metadata accessor for Logger(0);
    sub_100039D34(v41, (uint64_t)static Logger.playlistCovers);
    v42 = v69(v39, v38, v40);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    v45 = os_log_type_enabled(v43, v44);
    v46 = *(_QWORD *)(v0 + 288);
    v47 = *(_QWORD *)(v0 + 272);
    if (v45)
    {
      v48 = swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v72 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = (char *)Track.description.getter();
      *(_QWORD *)(v48 + 4) = sub_1000393D0(v50, v51, &v72);
      swift_bridgeObjectRelease();
      v34(v46, v47);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "No catalogID for Track=%{public}s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_11;
  }
  v52 = v36;
  v53 = v37;
  v54 = swift_task_alloc(dword_1004C11DC);
  *(_QWORD *)(v0 + 432) = v54;
  *(_QWORD *)v54 = v0;
  *(_QWORD *)(v54 + 8) = sub_1001BAD18;
  *(_BYTE *)(v54 + 368) = v33 != v62;
  *(_QWORD *)(v54 + 336) = v52;
  *(_QWORD *)(v54 + 344) = v53;
  return swift_task_switch(sub_1001BF888, 0, 0);
}

uint64_t sub_1001BB2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[7] = v4;
  v5[8] = a1;
  v5[9] = a2;
  v5[10] = a3;
  v5[11] = a4;
  v6 = v5[62];
  v5[63] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1001BB324, 0, 0);
}

uint64_t sub_1001BB324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **p_cache;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 504);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  if (v1)
  {
    v55 = *(id *)(v0 + 72);
    v56 = *(id *)(v0 + 504);
    v53 = *(id *)(v0 + 88);
    v54 = *(id *)(v0 + 80);
    swift_bridgeObjectRelease();
LABEL_7:
    v7 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 368);
    v9 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 336);
    v10 = *(_QWORD *)(v0 + 304);
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 264);
    v50 = *(_QWORD *)(v0 + 256);
    v51 = *(_QWORD *)(v0 + 232);
    v52 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v56, v55, v54, v53);
  }
  v2 = *(_QWORD *)(v0 + 480) + 1;
  if (v2 == *(_QWORD *)(v0 + 456))
  {
LABEL_4:
    swift_bridgeObjectRelease();
    if (qword_1004B8D78 != -1)
      swift_once(&qword_1004B8D78, sub_1001B1E68);
    v3 = *(void **)algn_1004F4B38;
    v4 = (void *)qword_1004F4B40;
    v5 = (void *)unk_1004F4B48;
    v56 = (id)qword_1004F4B30;
    v55 = v3;
    v54 = v4;
    v53 = v5;
    goto LABEL_7;
  }
  p_cache = &OBJC_METACLASS____TtC16MusicMessagesApp25ArtworkComponentVideoView.cache;
  while (1)
  {
    *(_QWORD *)(v0 + 480) = v2;
    v18 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v2, *(_QWORD *)(v0 + 240));
    v19 = Playlist.Entry.catalogID.getter(v18);
    *(_QWORD *)(v0 + 488) = v20;
    if (v20)
      break;
    if (p_cache[434] != (void *)-1)
      swift_once(&qword_1004B8D90, sub_1001BBC90);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    v23 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = type metadata accessor for Logger(0);
    sub_100039D34(v25, (uint64_t)static Logger.playlistCovers);
    v26 = v21(v23, v22, v24);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 256);
    v32 = *(_QWORD *)(v0 + 240);
    if (v29)
    {
      v33 = swift_slowAlloc(12, -1);
      v34 = p_cache;
      v35 = swift_slowAlloc(32, -1);
      v57 = v35;
      *(_DWORD *)v33 = 136446210;
      v36 = (char *)Playlist.Entry.description.getter();
      *(_QWORD *)(v33 + 4) = sub_1000393D0(v36, v37, &v57);
      swift_bridgeObjectRelease();
      v17 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v17(v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "No catalogID for Entry=%{public}s", (uint8_t *)v33, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      v38 = v35;
      p_cache = v34;
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      v17 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v17(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    }

    v17(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
    v2 = *(_QWORD *)(v0 + 480) + 1;
    if (v2 == *(_QWORD *)(v0 + 456))
      goto LABEL_4;
  }
  v39 = v19;
  v40 = v20;
  v41 = *(_DWORD *)(v0 + 588);
  v42 = *(_DWORD *)(v0 + 584);
  v44 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 232);
  v45 = *(_QWORD *)(v0 + 216);
  Playlist.Entry.internalItem.getter(v19);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v43, v45);
  v48 = v46 != v42 && v46 != v41;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  v49 = swift_task_alloc(dword_1004C11DC);
  *(_QWORD *)(v0 + 496) = v49;
  *(_QWORD *)v49 = v0;
  *(_QWORD *)(v49 + 8) = sub_1001BB2B4;
  *(_BYTE *)(v49 + 368) = v48;
  *(_QWORD *)(v49 + 336) = v39;
  *(_QWORD *)(v49 + 344) = v40;
  return swift_task_switch(sub_1001BF888, 0, 0);
}

uint64_t sub_1001BB738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[12] = v4;
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = a3;
  v5[16] = a4;
  v6 = v5[69];
  v5[70] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_1001BB7A0, 0, 0);
}

uint64_t sub_1001BB7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 536);

  swift_unknownObjectRelease(v2);
  if (v1)
  {
    v32 = *(id *)(v0 + 112);
    v33 = *(id *)(v0 + 560);
    v30 = *(id *)(v0 + 128);
    v31 = *(id *)(v0 + 120);

LABEL_7:
    v8 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 368);
    v10 = *(_QWORD *)(v0 + 328);
    v9 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v33, v32, v31, v30);
  }
  v3 = *(_QWORD *)(v0 + 528) + 1;
  if (v3 == *(_QWORD *)(v0 + 520))
  {
LABEL_4:

    if (qword_1004B8D78 != -1)
      swift_once(&qword_1004B8D78, sub_1001B1E68);
    v4 = *(void **)algn_1004F4B38;
    v5 = (void *)qword_1004F4B40;
    v6 = (void *)unk_1004F4B48;
    v33 = (id)qword_1004F4B30;
    v32 = v4;
    v31 = v5;
    v30 = v6;
    goto LABEL_7;
  }
  while (1)
  {
    *(_QWORD *)(v0 + 528) = v3;
    v17 = *(void **)(v0 + 512);
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    IndexPath.init(item:section:)(v3, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    v22 = objc_msgSend(v17, "itemAtIndexPath:", isa);
    *(_QWORD *)(v0 + 536) = v22;

    if ((objc_msgSend(v22, "respondsToSelector:", "innermostModelObject") & 1) != 0)
      break;
LABEL_9:
    swift_unknownObjectRelease(v22);
    v3 = *(_QWORD *)(v0 + 528) + 1;
    if (v3 == *(_QWORD *)(v0 + 520))
      goto LABEL_4;
  }
  v23 = objc_msgSend(v22, "innermostModelObject");
  *(_QWORD *)(v0 + 544) = v23;
  objc_opt_self(MPModelSong);
  v24 = swift_dynamicCastObjCClass(v23);
  if (!v24)
  {

    goto LABEL_9;
  }
  v25 = v24;
  v26 = (_QWORD *)swift_task_alloc(dword_1004C11D4);
  *(_QWORD *)(v0 + 552) = v26;
  *v26 = v0;
  v26[1] = sub_1001BB738;
  v26[2] = v25;
  return swift_task_switch(sub_1001C0540, 0, 0);
}

uint64_t sub_1001BBA64(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(71);
  v8._object = (void *)0x80000001003AE740;
  v8._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x72616D697270202CLL;
  v15._object = (void *)0xEB00000000203A79;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x646E6F636573202CLL;
  v22._object = (void *)0xED0000203A797261;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x616974726574202CLL;
  v29._object = (void *)0xEC000000203A7972;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

uint64_t sub_1001BBC90()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, static Logger.playlistCovers);
  sub_100039D34(v0, (uint64_t)static Logger.playlistCovers);
  sub_10000598C(0, (unint64_t *)&qword_1004BC960, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x7473696C79616C50, 0xEE00737265766F43);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.playlistCovers.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1004B8D90 != -1)
    swift_once(&qword_1004B8D90, sub_1001BBC90);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100039D34(v2, (uint64_t)static Logger.playlistCovers);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001BBDA4(char **a1, uint64_t (*a2)(_QWORD *))
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_1001D65DC((uint64_t)v4);
  v5 = *((_QWORD *)v4 + 2);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_1001BBE10(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  Swift::Int v29;
  double *v30;
  double v31;
  Swift::Int v32;
  double *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  Swift::Int v109;
  uint64_t v110;
  double *v111;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v87 = *a1;
      v88 = *a1 + 32;
      v89 = -1;
      for (i = 1; i != v3; ++i)
      {
        v91 = *(double *)(v87 + 32 * i + 16);
        v92 = v89;
        v93 = v88;
        do
        {
          if (*(double *)(v93 - 16) >= v91)
            break;
          if (!v87)
            goto LABEL_142;
          v94 = *(_QWORD *)(v93 + 24);
          v95 = *(_OWORD *)v93;
          v96 = *(_OWORD *)(v93 - 16);
          *(_OWORD *)v93 = *(_OWORD *)(v93 - 32);
          *(_OWORD *)(v93 + 16) = v96;
          *(double *)(v93 - 16) = v91;
          *(_QWORD *)(v93 - 8) = v94;
          *(_OWORD *)(v93 - 32) = v95;
          v93 -= 32;
        }
        while (!__CFADD__(v92++, 1));
        v88 += 32;
        --v89;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v6 = result;
    v105 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      v8 = sub_1000057B4(&qword_1004C12A0);
      result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
      *(_QWORD *)(result + 16) = v7;
      v107 = (_QWORD *)result;
      v111 = (double *)(result + 32);
LABEL_13:
      v10 = 0;
      v11 = *a1;
      v106 = *a1 + 80;
      v12 = (char *)_swiftEmptyArrayStorage;
      v108 = v6;
      v109 = v3;
      v110 = v11;
      while (1)
      {
        v14 = v10++;
        if (v10 < v3)
        {
          v15 = *(double *)(v11 + 32 * v10 + 16);
          v16 = *(double *)(v11 + 32 * v14 + 16);
          v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            v17 = (double *)(v106 + 32 * v14);
            v18 = v15;
            while (1)
            {
              v19 = v18;
              v18 = *v17;
              if (v16 < v15 == v19 >= *v17)
                break;
              ++v10;
              v17 += 4;
              if (v3 == v10)
              {
                v10 = v3;
                break;
              }
            }
          }
          if (v16 < v15)
          {
            if (v10 < v14)
              goto LABEL_139;
            if (v14 < v10)
            {
              v20 = 32 * v10;
              v21 = 32 * v14;
              v22 = v10;
              v23 = v14;
              do
              {
                if (v23 != --v22)
                {
                  if (!v11)
                    goto LABEL_145;
                  v24 = (_OWORD *)(v11 + v21);
                  v25 = v11 + v20;
                  v26 = *(_OWORD *)(v11 + v21);
                  v27 = *(_OWORD *)(v11 + v21 + 16);
                  v28 = *(_OWORD *)(v11 + v20 - 16);
                  *v24 = *(_OWORD *)(v11 + v20 - 32);
                  v24[1] = v28;
                  *(_OWORD *)(v25 - 32) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v23;
                v20 -= 32;
                v21 += 32;
              }
              while (v23 < v22);
            }
          }
        }
        if (v10 < v3)
        {
          if (__OFSUB__(v10, v14))
            goto LABEL_136;
          if (v10 - v14 < v6)
          {
            v29 = v14 + v6;
            if (__OFADD__(v14, v6))
              goto LABEL_140;
            if (v29 >= v3)
              v29 = v3;
            if (v29 < v14)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v10 != v29)
            {
              v30 = (double *)(v11 + 32 * v10);
              do
              {
                v31 = *(double *)(v11 + 32 * v10 + 16);
                v32 = v14;
                v33 = v30;
                do
                {
                  if (*(v33 - 2) >= v31)
                    break;
                  if (!v11)
                    goto LABEL_143;
                  v34 = *((_QWORD *)v33 + 3);
                  v35 = *(_OWORD *)v33;
                  v36 = *((_OWORD *)v33 - 1);
                  *(_OWORD *)v33 = *((_OWORD *)v33 - 2);
                  *((_OWORD *)v33 + 1) = v36;
                  *(v33 - 2) = v31;
                  *((_QWORD *)v33 - 1) = v34;
                  *((_OWORD *)v33 - 2) = v35;
                  v33 -= 4;
                  ++v32;
                }
                while (v10 != v32);
                ++v10;
                v30 += 4;
              }
              while (v10 != v29);
              v10 = v29;
            }
          }
        }
        if (v10 < v14)
          goto LABEL_131;
        result = swift_isUniquelyReferenced_nonNull_native(v12);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1001D77EC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
          v12 = (char *)result;
        }
        v38 = *((_QWORD *)v12 + 2);
        v37 = *((_QWORD *)v12 + 3);
        v13 = v38 + 1;
        v11 = v110;
        if (v38 >= v37 >> 1)
        {
          result = (uint64_t)sub_1001D77EC((char *)(v37 > 1), v38 + 1, 1, v12);
          v11 = v110;
          v12 = (char *)result;
        }
        *((_QWORD *)v12 + 2) = v13;
        v39 = v12 + 32;
        v40 = &v12[16 * v38 + 32];
        *(_QWORD *)v40 = v14;
        *((_QWORD *)v40 + 1) = v10;
        if (v38)
        {
          while (1)
          {
            v41 = v13 - 1;
            if (v13 >= 4)
            {
              v46 = &v39[2 * v13];
              v47 = *(v46 - 8);
              v48 = *(v46 - 7);
              v52 = __OFSUB__(v48, v47);
              v49 = v48 - v47;
              if (v52)
                goto LABEL_120;
              v51 = *(v46 - 6);
              v50 = *(v46 - 5);
              v52 = __OFSUB__(v50, v51);
              v44 = v50 - v51;
              v45 = v52;
              if (v52)
                goto LABEL_121;
              v53 = v13 - 2;
              v54 = &v39[2 * v13 - 4];
              v56 = *v54;
              v55 = v54[1];
              v52 = __OFSUB__(v55, v56);
              v57 = v55 - v56;
              if (v52)
                goto LABEL_122;
              v52 = __OFADD__(v44, v57);
              v58 = v44 + v57;
              if (v52)
                goto LABEL_124;
              if (v58 >= v49)
              {
                v76 = &v39[2 * v41];
                v78 = *v76;
                v77 = v76[1];
                v52 = __OFSUB__(v77, v78);
                v79 = v77 - v78;
                if (v52)
                  goto LABEL_130;
                v69 = v44 < v79;
                goto LABEL_83;
              }
            }
            else
            {
              if (v13 != 3)
              {
                v70 = *((_QWORD *)v12 + 4);
                v71 = *((_QWORD *)v12 + 5);
                v52 = __OFSUB__(v71, v70);
                v63 = v71 - v70;
                v64 = v52;
                goto LABEL_77;
              }
              v43 = *((_QWORD *)v12 + 4);
              v42 = *((_QWORD *)v12 + 5);
              v52 = __OFSUB__(v42, v43);
              v44 = v42 - v43;
              v45 = v52;
            }
            if ((v45 & 1) != 0)
              goto LABEL_123;
            v53 = v13 - 2;
            v59 = &v39[2 * v13 - 4];
            v61 = *v59;
            v60 = v59[1];
            v62 = __OFSUB__(v60, v61);
            v63 = v60 - v61;
            v64 = v62;
            if (v62)
              goto LABEL_125;
            v65 = &v39[2 * v41];
            v67 = *v65;
            v66 = v65[1];
            v52 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            if (v52)
              goto LABEL_127;
            if (__OFADD__(v63, v68))
              goto LABEL_129;
            if (v63 + v68 >= v44)
            {
              v69 = v44 < v68;
LABEL_83:
              if (v69)
                v41 = v53;
              goto LABEL_85;
            }
LABEL_77:
            if ((v64 & 1) != 0)
              goto LABEL_126;
            v72 = &v39[2 * v41];
            v74 = *v72;
            v73 = v72[1];
            v52 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v52)
              goto LABEL_128;
            if (v75 < v63)
              goto LABEL_15;
LABEL_85:
            v80 = v41 - 1;
            if (v41 - 1 >= v13)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v11)
              goto LABEL_144;
            v81 = v12;
            v82 = &v39[2 * v80];
            v83 = *v82;
            v84 = &v39[2 * v41];
            v85 = v84[1];
            result = sub_1001BCB9C((double *)(v11 + 32 * *v82), (double *)(v11 + 32 * *v84), v11 + 32 * v85, v111);
            if (v1)
              goto LABEL_93;
            if (v85 < v83)
              goto LABEL_117;
            if (v41 > *((_QWORD *)v81 + 2))
              goto LABEL_118;
            *v82 = v83;
            v39[2 * v80 + 1] = v85;
            v86 = *((_QWORD *)v81 + 2);
            if (v41 >= v86)
              goto LABEL_119;
            v12 = v81;
            v13 = v86 - 1;
            result = (uint64_t)memmove(&v39[2 * v41], v84 + 2, 16 * (v86 - 1 - v41));
            *((_QWORD *)v81 + 2) = v86 - 1;
            v11 = v110;
            if (v86 <= 2)
              goto LABEL_15;
          }
        }
        v13 = 1;
LABEL_15:
        v6 = v108;
        v3 = v109;
        if (v10 >= v109)
        {
          v9 = v107;
          goto LABEL_103;
        }
      }
    }
    v9 = _swiftEmptyArrayStorage;
    v111 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v107 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v13 = _swiftEmptyArrayStorage[2];
    v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    result = (uint64_t)v12;
    v107 = v9;
    if (v13 >= 2)
    {
      v98 = *v105;
      do
      {
        v99 = v13 - 2;
        if (v13 < 2)
          goto LABEL_132;
        if (!v98)
          goto LABEL_146;
        v100 = result;
        v101 = *(_QWORD *)(result + 32 + 16 * v99);
        v102 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
        result = sub_1001BCB9C((double *)(v98 + 32 * v101), (double *)(v98 + 32 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v98 + 32 * v102, v111);
        if (v1)
          break;
        if (v102 < v101)
          goto LABEL_133;
        result = swift_isUniquelyReferenced_nonNull_native(v100);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1001D78E4(v100);
          v100 = result;
        }
        if (v99 >= *(_QWORD *)(v100 + 16))
          goto LABEL_134;
        v103 = (_QWORD *)(v100 + 32 + 16 * v99);
        *v103 = v101;
        v103[1] = v102;
        v104 = *(_QWORD *)(v100 + 16);
        if (v13 > v104)
          goto LABEL_135;
        memmove((void *)(v100 + 32 + 16 * (v13 - 1)), (const void *)(v100 + 32 + 16 * v13), 16 * (v104 - v13));
        result = v100;
        *(_QWORD *)(v100 + 16) = v104 - 1;
        v13 = v104 - 1;
      }
      while (v104 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    v107[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001BC4A8(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  int v20;
  double *v21;
  double v22;
  double v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  Swift::Int v39;
  uint64_t v40;
  double v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  Swift::Int v106;
  uint64_t v107;
  double *v108;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if (v3)
      return sub_1001BCB0C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_136;
  v6 = result;
  v102 = a1;
  if (v3 > 1)
  {
    v7 = v5 >> 1;
    v8 = sub_1000057B4(&qword_1004C12A0);
    result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(result + 16) = v7;
    v104 = (_QWORD *)result;
    v108 = (double *)(result + 32);
LABEL_13:
    v10 = 0;
    v11 = *a1;
    v103 = *a1 + 80;
    v12 = (char *)_swiftEmptyArrayStorage;
    v105 = v6;
    v106 = v3;
    v107 = v11;
    while (1)
    {
      v14 = v10++;
      if (v10 < v3)
      {
        v15 = v11 + 32 * v10;
        v16 = *(double *)(v15 + 8);
        v17 = *(double *)(v15 + 16);
        v18 = v11 + 32 * v14;
        v19 = *(double *)(v18 + 8);
        v20 = *(double *)(v18 + 16) < v17;
        if (v16 != v19)
          v20 = v16 < v19;
        v10 = v14 + 2;
        if (v14 + 2 < v3)
        {
          v21 = (double *)(v103 + 32 * v14);
          while (1)
          {
            v22 = v16;
            v23 = v17;
            v16 = *(v21 - 1);
            v17 = *v21;
            v24 = v23 < *v21;
            if (v16 != v22)
              v24 = v16 < v22;
            if (v20 != v24)
              break;
            ++v10;
            v21 += 4;
            if (v3 == v10)
            {
              v10 = v3;
              break;
            }
          }
        }
        if (v20)
        {
          if (v10 < v14)
            goto LABEL_138;
          if (v14 < v10)
          {
            v25 = 32 * v10;
            v26 = 32 * v14;
            v27 = v10;
            v28 = v14;
            do
            {
              if (v28 != --v27)
              {
                if (!v11)
                  goto LABEL_143;
                v29 = (_OWORD *)(v11 + v26);
                v30 = v11 + v25;
                v31 = *(_OWORD *)(v11 + v26);
                v32 = *(_OWORD *)(v11 + v26 + 16);
                v33 = *(_OWORD *)(v11 + v25 - 16);
                *v29 = *(_OWORD *)(v11 + v25 - 32);
                v29[1] = v33;
                *(_OWORD *)(v30 - 32) = v31;
                *(_OWORD *)(v30 - 16) = v32;
              }
              ++v28;
              v25 -= 32;
              v26 += 32;
            }
            while (v28 < v27);
          }
        }
      }
      if (v10 < v3)
      {
        if (__OFSUB__(v10, v14))
          goto LABEL_135;
        if (v10 - v14 < v6)
        {
          v34 = v14 + v6;
          if (__OFADD__(v14, v6))
            goto LABEL_139;
          if (v34 >= v3)
            v34 = v3;
          if (v34 < v14)
          {
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            return result;
          }
          if (v10 != v34)
          {
            v35 = v11 + 32 * v10;
            do
            {
              v36 = v11 + 32 * v10;
              v37 = *(double *)(v36 + 8);
              v38 = *(double *)(v36 + 16);
              v39 = v14;
              v40 = v35;
              do
              {
                v41 = *(double *)(v40 - 24);
                v42 = *(double *)(v40 - 16) < v38;
                if (v37 != v41)
                  v42 = v37 < v41;
                if (!v42)
                  break;
                if (!v11)
                  goto LABEL_141;
                v43 = *(_QWORD *)v40;
                v44 = *(_QWORD *)(v40 + 24);
                v45 = *(_OWORD *)(v40 - 16);
                *(_OWORD *)v40 = *(_OWORD *)(v40 - 32);
                *(_OWORD *)(v40 + 16) = v45;
                *(double *)(v40 - 24) = v37;
                *(double *)(v40 - 16) = v38;
                *(_QWORD *)(v40 - 8) = v44;
                *(_QWORD *)(v40 - 32) = v43;
                v40 -= 32;
                ++v39;
              }
              while (v10 != v39);
              ++v10;
              v35 += 32;
            }
            while (v10 != v34);
            v10 = v34;
          }
        }
      }
      if (v10 < v14)
        goto LABEL_130;
      result = swift_isUniquelyReferenced_nonNull_native(v12);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001D77EC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v12 = (char *)result;
      }
      v47 = *((_QWORD *)v12 + 2);
      v46 = *((_QWORD *)v12 + 3);
      v13 = v47 + 1;
      v11 = v107;
      if (v47 >= v46 >> 1)
      {
        result = (uint64_t)sub_1001D77EC((char *)(v46 > 1), v47 + 1, 1, v12);
        v11 = v107;
        v12 = (char *)result;
      }
      *((_QWORD *)v12 + 2) = v13;
      v48 = v12 + 32;
      v49 = &v12[16 * v47 + 32];
      *(_QWORD *)v49 = v14;
      *((_QWORD *)v49 + 1) = v10;
      if (v47)
      {
        while (1)
        {
          v50 = v13 - 1;
          if (v13 >= 4)
          {
            v55 = &v48[2 * v13];
            v56 = *(v55 - 8);
            v57 = *(v55 - 7);
            v61 = __OFSUB__(v57, v56);
            v58 = v57 - v56;
            if (v61)
              goto LABEL_119;
            v60 = *(v55 - 6);
            v59 = *(v55 - 5);
            v61 = __OFSUB__(v59, v60);
            v53 = v59 - v60;
            v54 = v61;
            if (v61)
              goto LABEL_120;
            v62 = v13 - 2;
            v63 = &v48[2 * v13 - 4];
            v65 = *v63;
            v64 = v63[1];
            v61 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v61)
              goto LABEL_121;
            v61 = __OFADD__(v53, v66);
            v67 = v53 + v66;
            if (v61)
              goto LABEL_123;
            if (v67 >= v58)
            {
              v85 = &v48[2 * v50];
              v87 = *v85;
              v86 = v85[1];
              v61 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              if (v61)
                goto LABEL_129;
              v78 = v53 < v88;
              goto LABEL_89;
            }
          }
          else
          {
            if (v13 != 3)
            {
              v79 = *((_QWORD *)v12 + 4);
              v80 = *((_QWORD *)v12 + 5);
              v61 = __OFSUB__(v80, v79);
              v72 = v80 - v79;
              v73 = v61;
              goto LABEL_83;
            }
            v52 = *((_QWORD *)v12 + 4);
            v51 = *((_QWORD *)v12 + 5);
            v61 = __OFSUB__(v51, v52);
            v53 = v51 - v52;
            v54 = v61;
          }
          if ((v54 & 1) != 0)
            goto LABEL_122;
          v62 = v13 - 2;
          v68 = &v48[2 * v13 - 4];
          v70 = *v68;
          v69 = v68[1];
          v71 = __OFSUB__(v69, v70);
          v72 = v69 - v70;
          v73 = v71;
          if (v71)
            goto LABEL_124;
          v74 = &v48[2 * v50];
          v76 = *v74;
          v75 = v74[1];
          v61 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v61)
            goto LABEL_126;
          if (__OFADD__(v72, v77))
            goto LABEL_128;
          if (v72 + v77 >= v53)
          {
            v78 = v53 < v77;
LABEL_89:
            if (v78)
              v50 = v62;
            goto LABEL_91;
          }
LABEL_83:
          if ((v73 & 1) != 0)
            goto LABEL_125;
          v81 = &v48[2 * v50];
          v83 = *v81;
          v82 = v81[1];
          v61 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v61)
            goto LABEL_127;
          if (v84 < v72)
            goto LABEL_15;
LABEL_91:
          v89 = v50 - 1;
          if (v50 - 1 >= v13)
          {
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          if (!v11)
            goto LABEL_142;
          v90 = &v48[2 * v89];
          v91 = *v90;
          v92 = &v48[2 * v50];
          v93 = v92[1];
          result = sub_1001BCDC0((double *)(v11 + 32 * *v90), (double *)(v11 + 32 * *v92), v11 + 32 * v93, v108);
          if (v1)
            goto LABEL_99;
          if (v93 < v91)
            goto LABEL_116;
          if (v50 > *((_QWORD *)v12 + 2))
            goto LABEL_117;
          *v90 = v91;
          v48[2 * v89 + 1] = v93;
          v94 = *((_QWORD *)v12 + 2);
          if (v50 >= v94)
            goto LABEL_118;
          v13 = v94 - 1;
          result = (uint64_t)memmove(&v48[2 * v50], v92 + 2, 16 * (v94 - 1 - v50));
          *((_QWORD *)v12 + 2) = v94 - 1;
          v11 = v107;
          if (v94 <= 2)
            goto LABEL_15;
        }
      }
      v13 = 1;
LABEL_15:
      v6 = v105;
      v3 = v106;
      if (v10 >= v106)
      {
        v9 = v104;
        goto LABEL_102;
      }
    }
  }
  v9 = _swiftEmptyArrayStorage;
  v108 = (double *)&_swiftEmptyArrayStorage[4];
  if (v3 == 1)
  {
    v104 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  v13 = _swiftEmptyArrayStorage[2];
  v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
  result = (uint64_t)v12;
  v104 = v9;
  if (v13 >= 2)
  {
    v95 = *v102;
    do
    {
      v96 = v13 - 2;
      if (v13 < 2)
        goto LABEL_131;
      if (!v95)
        goto LABEL_144;
      v97 = result;
      v98 = *(_QWORD *)(result + 32 + 16 * v96);
      v99 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
      result = sub_1001BCDC0((double *)(v95 + 32 * v98), (double *)(v95 + 32 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v95 + 32 * v99, v108);
      if (v1)
        break;
      if (v99 < v98)
        goto LABEL_132;
      result = swift_isUniquelyReferenced_nonNull_native(v97);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001D78E4(v97);
        v97 = result;
      }
      if (v96 >= *(_QWORD *)(v97 + 16))
        goto LABEL_133;
      v100 = (_QWORD *)(v97 + 32 + 16 * v96);
      *v100 = v98;
      v100[1] = v99;
      v101 = *(_QWORD *)(v97 + 16);
      if (v13 > v101)
        goto LABEL_134;
      memmove((void *)(v97 + 32 + 16 * (v13 - 1)), (const void *)(v97 + 32 + 16 * v13), 16 * (v101 - v13));
      result = v97;
      *(_QWORD *)(v97 + 16) = v101 - 1;
      v13 = v101 - 1;
    }
    while (v101 > 2);
  }
LABEL_99:
  swift_bridgeObjectRelease();
  v104[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BCB0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
LABEL_5:
    v6 = v4 + 32 * a3;
    v7 = *(double *)(v6 + 8);
    v8 = *(double *)(v6 + 16);
    v9 = result;
    v10 = v5;
    while (1)
    {
      v11 = *(double *)(v10 - 24);
      v12 = *(double *)(v10 - 16) < v8;
      if (v7 != v11)
        v12 = v7 < v11;
      if (!v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v13 = *(_QWORD *)v10;
      v14 = *(_QWORD *)(v10 + 24);
      v15 = *(_OWORD *)(v10 - 16);
      *(_OWORD *)v10 = *(_OWORD *)(v10 - 32);
      *(_OWORD *)(v10 + 16) = v15;
      *(double *)(v10 - 24) = v7;
      *(double *)(v10 - 16) = v8;
      *(_QWORD *)(v10 - 8) = v14;
      *(_QWORD *)(v10 - 32) = v13;
      v10 -= 32;
      if (a3 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BCB9C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  __int128 v18;
  double *v19;
  double *v20;
  double *v21;
  BOOL v22;
  __int128 v23;
  int64_t v24;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_43;
    v19 = (double *)(a3 - 32);
    while (1)
    {
      v20 = v19 + 4;
      if (*(v6 - 2) >= *(v14 - 2))
      {
        v21 = v14 - 4;
        if (v20 != v14)
        {
          v14 -= 4;
          goto LABEL_40;
        }
        v22 = v19 >= v14;
        v14 -= 4;
        if (v22)
          goto LABEL_40;
      }
      else
      {
        v21 = v6 - 4;
        if (v20 != v6)
        {
          v6 -= 4;
LABEL_40:
          v23 = *((_OWORD *)v21 + 1);
          *(_OWORD *)v19 = *(_OWORD *)v21;
          *((_OWORD *)v19 + 1) = v23;
          goto LABEL_41;
        }
        v22 = v19 >= v6;
        v6 -= 4;
        if (v22)
          goto LABEL_40;
      }
LABEL_41:
      if (v6 > v7)
      {
        v19 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      if (v4[2] >= v6[2])
      {
        v17 = v4 + 4;
        v16 = v4;
        v15 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v17)
            goto LABEL_20;
        }
        else
        {
          v4 += 4;
        }
      }
      else
      {
        v15 = v6 + 4;
        v16 = v6;
        if (v7 == v6 && v7 < v15)
          goto LABEL_20;
      }
      v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v16;
      *((_OWORD *)v7 + 1) = v18;
LABEL_20:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v15;
        if ((unint64_t)v15 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_43:
  v24 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v24 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v24 >> 5));
  return 1;
}

uint64_t sub_1001BCDC0(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  _BOOL4 v17;
  double *v18;
  double *v19;
  double *v20;
  __int128 v21;
  double *v22;
  double *v23;
  double v24;
  double v25;
  _BOOL4 v26;
  double *v27;
  BOOL v28;
  __int128 v29;
  int64_t v30;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_47;
    v22 = (double *)(a3 - 32);
    while (1)
    {
      v23 = v22 + 4;
      v24 = *(v14 - 3);
      v25 = *(v6 - 3);
      v26 = *(v6 - 2) < *(v14 - 2);
      if (v24 != v25)
        v26 = v24 < v25;
      if (v26)
      {
        v27 = v6 - 4;
        if (v23 != v6)
        {
          v6 -= 4;
LABEL_44:
          v29 = *((_OWORD *)v27 + 1);
          *(_OWORD *)v22 = *(_OWORD *)v27;
          *((_OWORD *)v22 + 1) = v29;
          goto LABEL_45;
        }
        v28 = v22 >= v6;
        v6 -= 4;
        if (v28)
          goto LABEL_44;
      }
      else
      {
        v27 = v14 - 4;
        if (v23 != v14)
        {
          v14 -= 4;
          goto LABEL_44;
        }
        v28 = v22 >= v14;
        v14 -= 4;
        if (v28)
          goto LABEL_44;
      }
LABEL_45:
      if (v6 > v7)
      {
        v22 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      v15 = v6[1];
      v16 = v4[1];
      v17 = v4[2] < v6[2];
      if (v15 != v16)
        v17 = v15 < v16;
      if (v17)
      {
        v18 = v6 + 4;
        v19 = v6;
        if (v7 == v6 && v7 < v18)
          goto LABEL_22;
      }
      else
      {
        v20 = v4 + 4;
        v19 = v4;
        v18 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v20)
            goto LABEL_22;
        }
        else
        {
          v4 += 4;
        }
      }
      v21 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v19;
      *((_OWORD *)v7 + 1) = v21;
LABEL_22:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v18;
        if ((unint64_t)v18 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_47:
  v30 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v30 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v30 >> 5));
  return 1;
}

uint64_t _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = UIColor.rgba.getter();
  v2 = v1;
  v4 = v3;
  v5 = sub_1000057B4(&qword_1004BBCE0);
  v6 = swift_allocObject(v5, 152, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1003C6280;
  v7 = lround(v0 * 255.0);
  *(_QWORD *)(v6 + 56) = &type metadata for Int;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = lround(v2 * 255.0);
  *(_QWORD *)(v6 + 96) = &type metadata for Int;
  *(_QWORD *)(v6 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 72) = v8;
  v9 = lround(v4 * 255.0);
  *(_QWORD *)(v6 + 136) = &type metadata for Int;
  *(_QWORD *)(v6 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 112) = v9;
  return String.init(format:_:)(0x323025586C323025, 0xEF586C323025586CLL, v6);
}

uint64_t _s9MusicCore14PlaylistCoversO6SourceO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  void *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_1000057B4(&qword_1004B9E40);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaylistCovers.Source(0);
  v8 = __chkstk_darwin(v7);
  v10 = (void **)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v8);
  v13 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v11);
  v15 = (char *)&v32 - v14;
  v16 = sub_1000057B4(&qword_1004C12A8);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)&v19[*(int *)(v17 + 48)];
  sub_1001BD840(a1, (uint64_t)v19);
  sub_1001BD840(v33, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1001BD840((uint64_t)v19, (uint64_t)v13);
      v22 = *v13;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 1)
      {
        v23 = sub_1000D2D58(v22, *v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        sub_1001C0C30((uint64_t)v19);
        return v23 & 1;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001BD840((uint64_t)v19, (uint64_t)v10);
      v24 = *v10;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 2)
      {
        v25 = (void *)*v20;
        sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
        v23 = static NSObject.== infix(_:_:)(v24, v25);

        goto LABEL_13;
      }

    }
  }
  else
  {
    sub_1001BD840((uint64_t)v19, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload(v20, v7))
    {
      v26 = v20;
      v27 = v3;
      (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v26, v3);
      v28 = type metadata accessor for Track(0);
      v29 = sub_100004D8C((unint64_t *)&unk_1004C12B0, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
      v23 = static MusicItemCollection<>.== infix(_:_:)(v15, v6, v28, &protocol witness table for Track, v29);
      v30 = *(void (**)(char *, uint64_t))(v4 + 8);
      v30(v6, v27);
      v30(v15, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_10000FE2C((uint64_t)v19, &qword_1004C12A8);
  v23 = 0;
  return v23 & 1;
}

char *sub_1001BD3D8(char *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  char *v5;
  float64x2_t *v6;
  unint64_t v7;
  float64x2_t *v8;
  float64x2_t v9;
  float64x2_t v10;
  uint64_t v11;
  float64x2_t *v12;
  unint64_t v13;
  unint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t *v17;
  float64x2_t v18;
  float64x2_t v19;

  v2 = *((_QWORD *)result + 2);
  if (v2)
  {
    v4 = 0;
    v5 = result + 32;
    v6 = (float64x2_t *)(a2 + 32);
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      while (1)
      {
        if (v4 == v7)
        {
          __break(1u);
          return result;
        }
        v8 = (float64x2_t *)&v5[32 * v4];
        v9 = *v8;
        v10 = v8[1];
        ++v4;
        v11 = *(_QWORD *)(a2 + 16);
        if (!v11)
          break;
        v12 = v6;
        while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, *v12), (int32x4_t)vceqq_f64(v10, v12[1]))), 0xFuLL))) & 1) == 0)
        {
          v12 += 2;
          if (!--v11)
            goto LABEL_14;
        }
        if (v4 == v2)
          return (char *)_swiftEmptyArrayStorage;
      }
LABEL_14:
      v18 = v10;
      v19 = v9;
      result = (char *)swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_10009739C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      v16 = v18;
      v15 = v19;
      if (v14 >= v13 >> 1)
      {
        result = sub_10009739C((char *)(v13 > 1), v14 + 1, 1);
        v16 = v18;
        v15 = v19;
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      v17 = (float64x2_t *)&_swiftEmptyArrayStorage[4 * v14];
      v17[2] = v15;
      v17[3] = v16;
    }
    while (v4 != v2);
  }
  return (char *)_swiftEmptyArrayStorage;
}

id _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for NSScanner.NumberRepresentation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone((Class)NSScanner);
  swift_bridgeObjectRetain();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, "initWithString:", v9);

  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for NSScanner.NumberRepresentation.hexadecimal(_:), v4);
  v11 = NSScanner.scanUInt64(representation:)(v7);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v13 & 1) == 0)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      v14 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", (double)BYTE2(v11) / 255.0, (double)BYTE1(v11) / 255.0, (double)v11 / 255.0, 1.0);

      return v14;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1004B8D90 != -1)
LABEL_11:
    swift_once(&qword_1004B8D90, sub_1001BBC90);
  v15 = type metadata accessor for Logger(0);
  sub_100039D34(v15, (uint64_t)static Logger.playlistCovers);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23 = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_1000393D0(a1, a2, &v23);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to decode hexadecimal string representation=%{public}s as UInt64.", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }

  return 0;
}

uint64_t type metadata accessor for PlaylistCovers.Source(uint64_t a1)
{
  uint64_t result;

  result = qword_1004C1258;
  if (!qword_1004C1258)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistCovers.Source);
  return result;
}

uint64_t sub_1001BD840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistCovers.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1001BD884(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v19;
  id v20;

  v2 = sub_1000057B4(&qword_1004BDB80);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0FE0(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000FE2C(a1, &qword_1004BDB80);
    sub_10000FE2C((uint64_t)v4, &qword_1004BDB80);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = Artwork.backgroundColor.getter(v9);
  if (!v10)
  {
LABEL_11:
    sub_10000FE2C(a1, &qword_1004BDB80);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v11 = (void *)v10;
  v12 = Artwork.primaryTextColor.getter();
  if (!v12)
  {

    goto LABEL_11;
  }
  v13 = (void *)v12;
  v14 = (void *)Artwork.secondaryTextColor.getter();
  if (!v14)
  {

    sub_10000FE2C(a1, &qword_1004BDB80);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v15 = (void *)Artwork.tertiaryTextColor.getter();
  if (!v15)
  {

    goto LABEL_11;
  }
  v20 = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v11);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v13);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v14);
  v19 = v14;
  v17 = objc_allocWithZone((Class)UIColor);
  objc_msgSend(v17, "initWithCGColor:", v20);

  sub_10000FE2C(a1, &qword_1004BDB80);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_1001BDB00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_BYTE *)(v3 + 416) = a3;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  v4 = sub_1000057B4(&qword_1004B9EE8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000057B4(&qword_1004BB380);
  *(_QWORD *)(v3 + 104) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  *(_QWORD *)(v3 + 128) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4(&qword_1004BB760);
  *(_QWORD *)(v3 + 152) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 160) = v10;
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4(&qword_1004BB768);
  *(_QWORD *)(v3 + 176) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 184) = v12;
  *(_QWORD *)(v3 + 192) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v3 + 200) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v3 + 208) = v14;
  *(_QWORD *)(v3 + 216) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PreviewAsset(0);
  *(_QWORD *)(v3 + 224) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v3 + 232) = v16;
  *(_QWORD *)(v3 + 240) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004BDB80) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 248) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 256) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 264) = swift_task_alloc(v17);
  v18 = sub_1000057B4(&qword_1004B9EE0);
  *(_QWORD *)(v3 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000057B4(&qword_1004BB3A0);
  *(_QWORD *)(v3 + 280) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v3 + 288) = v20;
  *(_QWORD *)(v3 + 296) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v3 + 304) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v3 + 312) = v22;
  *(_QWORD *)(v3 + 320) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004BB708);
  *(_QWORD *)(v3 + 328) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v3 + 336) = v24;
  *(_QWORD *)(v3 + 344) = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000057B4(&qword_1004BB710);
  *(_QWORD *)(v3 + 352) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v3 + 360) = v26;
  *(_QWORD *)(v3 + 368) = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001BDD6C, 0, 0);
}

uint64_t sub_1001BDD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  if (qword_1004B8D90 != -1)
    swift_once(&qword_1004B8D90, sub_1001BBC90);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 376) = sub_100039D34(v2, (uint64_t)static Logger.playlistCovers);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(char **)(v0 + 88);
  if (v6)
  {
    v8 = *(char **)(v0 + 80);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v8, v7, &v26);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Performing Media API request for song with catalogID=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 88), 2);
  }

  v12 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  if (*(_BYTE *)(v0 + 416) == 1)
  {
    v13 = *(_QWORD *)(v0 + 304);
    KeyPath = swift_getKeyPath(&unk_1003D2180);
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = v11;
    swift_bridgeObjectRetain();
    v15 = String.init<A>(_:)(v0 + 48, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 64) = MusicItemID.init(rawValue:)(v15);
    *(_QWORD *)(v0 + 72) = v16;
    v17 = sub_100004D8C(&qword_1004BB718, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 64, v13, &protocol witness table for MusicVideo, v17);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 384) = v18;
    *v18 = v0;
    v18[1] = sub_1001BE090;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 128);
    v21 = swift_getKeyPath(&unk_1003D2158);
    *(_QWORD *)(v0 + 16) = v12;
    *(_QWORD *)(v0 + 24) = v11;
    swift_bridgeObjectRetain();
    v22 = String.init<A>(_:)(v0 + 16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 32) = MusicItemID.init(rawValue:)(v22);
    *(_QWORD *)(v0 + 40) = v23;
    v24 = sub_100004D8C(&qword_1004BB770, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v21, v0 + 32, v20, &protocol witness table for Song, v24);
    v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 400) = v25;
    *v25 = v0;
    v25[1] = sub_1001BE780;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  }
}

uint64_t sub_1001BE090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001BEB28;
  else
    v3 = sub_1001BE0F4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001BE0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(_QWORD, unint64_t, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 328));
  sub_100075814(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_10000FE2C(*(_QWORD *)(v0 + 272), &qword_1004B9EE0);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v14 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v16 = *(_QWORD *)(v0 + 336);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v103 = *(_QWORD *)(v0 + 360);
      v19 = *(char **)(v0 + 80);
      v99 = *(_QWORD *)(v0 + 352);
      v20 = swift_slowAlloc(12, -1);
      v96 = v12;
      v21 = swift_slowAlloc(32, -1);
      v107 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_1000393D0(v19, v18, &v107);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to fetch music video from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v96, v99);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v0 + 264);
  v23 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304));
  MusicVideo.artwork.getter(v23);
  v24 = sub_1001BD884(v22);
  if (!v24)
  {
    v34 = MusicVideo.previewAssets.getter();
    if (v34)
    {
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        v36 = *(_QWORD *)(v0 + 232);
        v37 = *(_QWORD *)(v0 + 208);
        v38 = v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        v39 = *(_QWORD *)(v36 + 72);
        v100 = v39;
        v104 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v36 + 16);
        v97 = v36;
        do
        {
          v42 = *(_QWORD *)(v0 + 248);
          v41 = *(_QWORD *)(v0 + 256);
          v43 = *(_QWORD *)(v0 + 200);
          v44 = v104(*(_QWORD *)(v0 + 240), v38, *(_QWORD *)(v0 + 224));
          PreviewAsset.artwork.getter(v44);
          sub_1001C0FE0(v41, v42);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v42, 1, v43) == 1)
          {
            v40 = *(_QWORD *)(v0 + 248);
            sub_10000FE2C(*(_QWORD *)(v0 + 256), &qword_1004BDB80);
            sub_10000FE2C(v40, &qword_1004BDB80);
          }
          else
          {
            v45 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v37 + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 200));
            v46 = Artwork.backgroundColor.getter(v45);
            if (v46)
            {
              v47 = (void *)v46;
              v48 = Artwork.primaryTextColor.getter();
              if (v48)
              {
                v49 = (void *)v48;
                v50 = Artwork.secondaryTextColor.getter();
                if (v50)
                {
                  v51 = (void *)v50;
                  v52 = Artwork.tertiaryTextColor.getter();
                  if (v52)
                  {
                    v77 = (void *)v52;
                    v106 = *(_QWORD *)(v0 + 368);
                    v94 = *(_QWORD *)(v0 + 360);
                    v102 = *(_QWORD *)(v0 + 352);
                    v78 = *(_QWORD *)(v0 + 336);
                    v87 = *(_QWORD *)(v0 + 328);
                    v88 = *(_QWORD *)(v0 + 344);
                    v79 = *(_QWORD *)(v0 + 312);
                    v85 = *(_QWORD *)(v0 + 304);
                    v86 = *(_QWORD *)(v0 + 320);
                    v83 = *(_QWORD *)(v0 + 224);
                    v84 = *(_QWORD *)(v0 + 240);
                    v82 = *(_QWORD *)(v0 + 216);
                    v80 = *(_QWORD *)(v0 + 256);
                    v81 = *(_QWORD *)(v0 + 200);
                    v92 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v47);
                    v91 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v49);
                    v90 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v51);
                    v89 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v77);

                    sub_10000FE2C(v80, &qword_1004BDB80);
                    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v82, v81);
                    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v84, v83);
                    swift_bridgeObjectRelease();
                    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v86, v85);
                    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v88, v87);
                    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v106, v102);
                    goto LABEL_26;
                  }
                  v53 = *(_QWORD *)(v0 + 256);
                  v54 = *(_QWORD *)(v0 + 216);
                  v55 = *(_QWORD *)(v0 + 200);

                  sub_10000FE2C(v53, &qword_1004BDB80);
                  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v54, v55);
                  v36 = v97;
                  goto LABEL_22;
                }
                v58 = *(_QWORD *)(v0 + 256);
                v59 = *(_QWORD *)(v0 + 216);
                v60 = *(_QWORD *)(v0 + 200);

              }
              else
              {
                v58 = *(_QWORD *)(v0 + 256);
                v59 = *(_QWORD *)(v0 + 216);
                v60 = *(_QWORD *)(v0 + 200);
              }

              sub_10000FE2C(v58, &qword_1004BDB80);
              (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v59, v60);
LABEL_22:
              v39 = v100;
              goto LABEL_11;
            }
            v56 = *(_QWORD *)(v0 + 216);
            v57 = *(_QWORD *)(v0 + 200);
            sub_10000FE2C(*(_QWORD *)(v0 + 256), &qword_1004BDB80);
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v56, v57);
          }
LABEL_11:
          (*(void (**)(_QWORD, _QWORD))(v36 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
          v38 += v39;
          --v35;
        }
        while (v35);
      }
      swift_bridgeObjectRelease();
    }
    v62 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 368);
    v64 = *(_QWORD *)(v0 + 344);
    v63 = *(_QWORD *)(v0 + 352);
    v65 = *(_QWORD *)(v0 + 328);
    v66 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
LABEL_25:
    v91 = 0;
    v92 = 0;
    v89 = 0;
    v90 = 0;
    goto LABEL_26;
  }
  v29 = *(_QWORD *)(v0 + 360);
  v28 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 344);
  v30 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v91 = v25;
  v92 = v24;
  v89 = v27;
  v90 = v26;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_26:
  v67 = *(_QWORD *)(v0 + 344);
  v68 = *(_QWORD *)(v0 + 320);
  v69 = *(_QWORD *)(v0 + 296);
  v71 = *(_QWORD *)(v0 + 264);
  v70 = *(_QWORD *)(v0 + 272);
  v73 = *(_QWORD *)(v0 + 248);
  v72 = *(_QWORD *)(v0 + 256);
  v74 = *(_QWORD *)(v0 + 240);
  v75 = *(_QWORD *)(v0 + 216);
  v93 = *(_QWORD *)(v0 + 192);
  v95 = *(_QWORD *)(v0 + 168);
  v98 = *(_QWORD *)(v0 + 144);
  v101 = *(_QWORD *)(v0 + 120);
  v105 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v101);
  swift_task_dealloc(v105);
  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v92, v91, v90, v89);
}

uint64_t sub_1001BE780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001BEE0C;
  else
    v3 = sub_1001BE7E4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001BE7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_10007584C(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_10000FE2C(*(_QWORD *)(v0 + 96), &qword_1004B9EE8);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v57 = *(_QWORD *)(v0 + 184);
      v19 = *(char **)(v0 + 80);
      v55 = *(_QWORD *)(v0 + 176);
      v20 = swift_slowAlloc(12, -1);
      v53 = v12;
      v21 = swift_slowAlloc(32, -1);
      v59 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_1000393D0(v19, v18, &v59);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to fetch song from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v53, v55);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    v56 = 0;
    v58 = 0;
    v52 = 0;
    v54 = 0;
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 176);
    v50 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 128);
    v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v27 + 32))(v28, *(_QWORD *)(v0 + 96), v29);
    Song.artwork.getter(v30);
    v31 = sub_1001BD884(v22);
    v56 = v32;
    v58 = v31;
    v52 = v34;
    v54 = v33;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v50, v48);
  }
  v35 = *(_QWORD *)(v0 + 344);
  v36 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 272);
  v40 = *(_QWORD *)(v0 + 248);
  v41 = *(_QWORD *)(v0 + 256);
  v42 = *(_QWORD *)(v0 + 240);
  v43 = *(_QWORD *)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 192);
  v46 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 120);
  v51 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v0 + 8))(v58, v56, v54, v52);
}

uint64_t sub_1001BEB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 392);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 352);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 368);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 352);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_1000393D0(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch colors for music video from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

uint64_t sub_1001BEE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 408);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 192);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 176);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_1000393D0(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch colors for song from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

void sub_1001BF0F0(char *a1)
{
  char *v1;
  uint64_t v2;
  double *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  double *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  char *v26;

  v26 = a1;
  swift_bridgeObjectRetain();
  sub_1001BBDA4(&v26, sub_1001BC4A8);
  v1 = v26;
  v2 = *((_QWORD *)v26 + 2);
  if (v2)
  {
    swift_retain(v26);
    v3 = (double *)(v1 + 48);
    v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (*v3 < 0.5)
      {
        v25 = *(_OWORD *)v3;
        v24 = *((_OWORD *)v3 - 1);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
        v26 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10009739C(0, *((_QWORD *)v4 + 2) + 1, 1);
          v4 = v26;
        }
        v6 = *((_QWORD *)v4 + 2);
        v5 = *((_QWORD *)v4 + 3);
        v7 = v25;
        if (v6 >= v5 >> 1)
        {
          sub_10009739C((char *)(v5 > 1), v6 + 1, 1);
          v7 = v25;
          v4 = v26;
        }
        *((_QWORD *)v4 + 2) = v6 + 1;
        v8 = &v4[32 * v6];
        *((_OWORD *)v8 + 2) = v24;
        *((_OWORD *)v8 + 3) = v7;
      }
      v3 += 4;
      --v2;
    }
    while (v2);
    swift_release(v1);
  }
  else
  {
    v4 = (char *)_swiftEmptyArrayStorage;
  }
  v26 = v4;
  swift_retain(v4);
  sub_1001BBDA4(&v26, sub_1001BBE10);
  swift_release(v4);
  v10 = v26;
  swift_retain(v26);
  v11 = sub_1001BD3D8(v1, (uint64_t)v10);
  swift_release(v1);
  swift_release(v10);
  v26 = v11;
  sub_1000AAD18((uint64_t)v10);
  v12 = v26;
  v13 = *((_QWORD *)v26 + 2);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    v18 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0)
      goto LABEL_16;
LABEL_23:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(1, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(2, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(3, v18);
    goto LABEL_21;
  }
  v26 = (char *)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v13);
  v14 = (double *)(v12 + 56);
  do
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", *(v14 - 3), *(v14 - 2), *(v14 - 1), *v14);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v16 = *((_QWORD *)v26 + 2);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
    v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
    specialized ContiguousArray._endMutation()(v17);
    v14 += 4;
    --v13;
  }
  while (v13);
  v18 = (unint64_t)v26;
  swift_bridgeObjectRelease();
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_23;
LABEL_16:
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v19 == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v19 < 3)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 != 3)
  {
    v20 = *(void **)(v18 + 40);
    v21 = *(void **)(v18 + 48);
    v22 = *(void **)(v18 + 56);
    *(id *)(v18 + 32);
    v20;
    v21;
    v23 = v22;
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_27:
  __break(1u);
  swift_release(v18);
  __break(1u);
  swift_release(v26);
  __break(1u);
}

uint64_t sub_1001BF420(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, double a18)
{
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v33;

  v21 = a6 + 0.3;
  if (a6 + 0.3 > 1.0)
    v21 = 1.0;
  v33 = v21;
  if (a7 + 0.2 <= 1.0)
    v22 = a7 + 0.2;
  else
    v22 = 1.0;
  if (a2 + 0.5 <= 1.0)
    v23 = a2 + 0.5;
  else
    v23 = 1.0;
  if (a3 + 0.2 <= 1.0)
    v24 = a3 + 0.2;
  else
    v24 = 1.0;
  v25 = -0.5;
  if (a8 < 0.5)
    v25 = 0.5;
  v26 = v25 + a8;
  if (a18 + 0.8 <= 1.0)
    v27 = a18 + 0.8;
  else
    v27 = 1.0;
  v28 = sub_1000057B4(&qword_1004BAC80);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1003C6320;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v33;
  *(double *)(v29 + 80) = v22;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a1;
  *(double *)(v29 + 104) = v23;
  *(double *)(v29 + 112) = v24;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(double *)(v29 + 128) = v26;
  *(_QWORD *)(v29 + 136) = a17;
  *(double *)(v29 + 144) = v27;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_1001BF0F0((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1001BF594(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, uint64_t a18, uint64_t a19, double a20,uint64_t a21)
{
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a6 + 0.1 <= 1.0)
    v25 = a6 + 0.1;
  else
    v25 = 1.0;
  if (a17 + 0.4 <= 1.0)
    v26 = a17 + 0.4;
  else
    v26 = 1.0;
  if (a20 + -0.2 < 0.0)
    v27 = 0.0;
  else
    v27 = a20 + -0.2;
  v28 = sub_1000057B4(&qword_1004BAC80);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1003C6320;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v25;
  *(double *)(v29 + 80) = a7;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a8;
  *(double *)(v29 + 104) = v26;
  *(_QWORD *)(v29 + 112) = a18;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v29 + 128) = a19;
  *(double *)(v29 + 136) = v27;
  *(_QWORD *)(v29 + 144) = a21;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_1001BF0F0((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1001BF6F4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, double a18, uint64_t a19, double a20,double a21)
{
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a6 + 0.2;
  if (v23 <= 1.0)
    v24 = v23;
  else
    v24 = 1.0;
  v25 = a7 + 0.1;
  if (v25 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  if (a17 + 0.1 <= 1.0)
    v27 = a17 + 0.1;
  else
    v27 = 1.0;
  if (a18 + 0.2 <= 1.0)
    v28 = a18 + 0.2;
  else
    v28 = 1.0;
  if (a20 + 0.2 <= 1.0)
    v29 = a20 + 0.2;
  else
    v29 = 1.0;
  if (a21 + 0.6 <= 1.0)
    v30 = a21 + 0.6;
  else
    v30 = 1.0;
  v31 = sub_1000057B4(&qword_1004BAC80);
  v32 = swift_allocObject(v31, 160, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1003C6320;
  *(double *)(v32 + 32) = a1;
  *(double *)(v32 + 40) = a2;
  *(double *)(v32 + 48) = a3;
  *(double *)(v32 + 56) = a4;
  *(double *)(v32 + 64) = a5;
  *(double *)(v32 + 72) = v24;
  *(double *)(v32 + 80) = v26;
  *(_QWORD *)(v32 + 88) = 0x3FF0000000000000;
  *(double *)(v32 + 96) = a8;
  *(double *)(v32 + 104) = v27;
  *(double *)(v32 + 112) = v28;
  *(_QWORD *)(v32 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v32 + 128) = a19;
  *(double *)(v32 + 136) = v29;
  *(double *)(v32 + 144) = v30;
  *(_QWORD *)(v32 + 152) = 0x3FF0000000000000;
  sub_1001BF0F0((char *)v32);
  v34 = v33;
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1001BF86C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 368) = a3;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = a2;
  return swift_task_switch(sub_1001BF888, 0, 0);
}

uint64_t sub_1001BF888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  int v4;
  void *v5;
  _QWORD *v6;

  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003D2110);
  v3 = swift_getKeyPath(&unk_1003D2138);
  static Published.subscript.getter((_QWORD *)(v0 + 176), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(unsigned __int8 *)(v0 + 177);
  v5 = *(void **)(v0 + 256);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v4 != 1)
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  v6 = (_QWORD *)swift_task_alloc(dword_1004C129C);
  *(_QWORD *)(v0 + 352) = v6;
  *v6 = v0;
  v6[1] = sub_1001BF9EC;
  return sub_1001BDB00(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_BYTE *)(v0 + 368));
}

uint64_t sub_1001BF9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[37] = v4;
  v5[38] = a1;
  v5[39] = a2;
  v5[40] = a3;
  v5[41] = a4;
  v6 = v5[44];
  v5[45] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_1001BFA54, 0, 0);
}

uint64_t sub_1001BFA54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t inited;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  const char *v102;
  NSObject *v103;
  os_log_type_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  char *v121;
  char *v122;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  uint64_t v128;
  double v129;
  double v130;
  uint64_t v131;
  double v132;
  double v133;
  uint64_t v134;
  void *v135;
  double v136;
  double log;
  NSObject *loga;
  void *v139;
  uint64_t v140[2];

  v1 = *(void **)(v0 + 360);
  if (!v1)
  {
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v35, v36, v37, v38);
  }
  v2 = v0 + 16;
  v3 = *(void **)(v0 + 312);
  v4 = *(void **)(v0 + 320);
  v5 = *(void **)(v0 + 328);
  v6 = qword_1004B8D90;
  v7 = v1;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v13;
  v16 = v12;
  v17 = v11;
  if (v6 != -1)
    swift_once(&qword_1004B8D90, sub_1001BBC90);
  v18 = *(_QWORD *)(v0 + 344);
  v19 = type metadata accessor for Logger(0);
  sub_100039D34(v19, (uint64_t)static Logger.playlistCovers);
  swift_bridgeObjectRetain_n(v18, 2);
  v20 = v14;
  v21 = v15;
  v22 = v16;
  v23 = v17;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  v26 = os_log_type_enabled(v24, v25);
  v27 = *(char **)(v0 + 344);
  v139 = v21;
  v135 = v22;
  if (v26)
  {
    v28 = *(char **)(v0 + 336);
    v29 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v140[0] = v30;
    *(_DWORD *)v29 = 136446466;
    v31 = (char *)sub_1001BBA64(v23, v22, v139, v20);
    *(_QWORD *)(v29 + 4) = sub_1000393D0(v31, v32, v140);
    swift_bridgeObjectRelease();

    *(_WORD *)(v29 + 12) = 2082;
    swift_bridgeObjectRetain();
    v33 = v28;
    v21 = v139;
    *(_QWORD *)(v29 + 14) = sub_1000393D0(v33, v27, v140);
    swift_bridgeObjectRelease_n(v27, 3);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Retrieved artwork colors=%{public}s from Media API for song with identifiers=%{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v34 = v29;
    v2 = v0 + 16;
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v27, 2);
  }
  v39 = UIColor.hsba.getter();
  v41 = v40;
  v43 = v42;
  v136 = v42;
  v45 = v44;

  log = UIColor.hsba.getter();
  v132 = v47;
  v133 = v46;
  v134 = v48;

  v49 = UIColor.hsba.getter();
  v129 = v51;
  v130 = v50;
  v131 = v52;

  v53 = UIColor.hsba.getter();
  v55 = v54;
  v57 = v56;
  v128 = v58;

  v59 = sub_1000057B4(&qword_1004BAC80);
  inited = swift_initStackObject(v59, v2);
  *(_OWORD *)(inited + 16) = xmmword_1003C6320;
  *(double *)(inited + 32) = v39;
  *(double *)(inited + 40) = v41;
  *(double *)(inited + 48) = v43;
  *(double *)(inited + 56) = v45;
  *(double *)(inited + 64) = log;
  *(double *)(inited + 72) = v133;
  *(double *)(inited + 80) = v132;
  *(_QWORD *)(inited + 88) = v134;
  *(double *)(inited + 96) = v49;
  *(double *)(inited + 104) = v130;
  *(double *)(inited + 112) = v129;
  *(_QWORD *)(inited + 120) = v131;
  *(_QWORD *)(inited + 128) = v53;
  *(double *)(inited + 136) = v55;
  *(double *)(inited + 144) = v57;
  *(_QWORD *)(inited + 152) = v128;
  if ((v41 <= 0.05 || v136 <= 0.2) && (v133 <= 0.05 || v132 <= 0.2))
  {
    v61 = swift_bridgeObjectRelease();
    if ((v130 <= 0.05 || v129 <= 0.2) && (v55 <= 0.05 || v57 <= 0.2))
    {
      v103 = Logger.logObject.getter(v61);
      v104 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = v23;
        v106 = swift_slowAlloc(12, -1);
        v107 = swift_slowAlloc(32, -1);
        v140[0] = v107;
        *(_DWORD *)v106 = 136446210;
        if (qword_1004B8D80 != -1)
          swift_once(&qword_1004B8D80, sub_1001B1F1C);
        v108 = (char *)PlaylistCovers.RecipeColors.description.getter((void *)qword_1004F4B50, *(void **)algn_1004F4B58, (void *)qword_1004F4B60, qword_1004F4B68);
        *(_QWORD *)(v106 + 4) = sub_1000393D0(v108, v109, v140);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v103, v104, "Using black and white colors=%{public}s", (uint8_t *)v106, 0xCu);
        swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v107, -1, -1);
        swift_slowDealloc(v106, -1, -1);

        v23 = v105;
      }
      else
      {

      }
      if (qword_1004B8D80 != -1)
        swift_once(&qword_1004B8D80, sub_1001B1F1C);
      v124 = *(void **)algn_1004F4B58;
      v125 = (void *)qword_1004F4B60;
      v126 = qword_1004F4B68;
      v35 = (id)qword_1004F4B50;
      v36 = v124;
      v37 = v125;
      v38 = v126;

      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v35, v36, v37, v38);
    }
  }
  else
  {
    v61 = swift_bridgeObjectRelease();
  }
  v127 = v23;
  if (v132 < 0.3 && v129 < 0.3)
  {
    v69 = (void *)sub_1001BF420(v39, v41, v136, v45, log, v133, v132, v49, v61, v62, v63, v64, v65, v66, v67, v68, *(uint64_t *)&v130, v129);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = v69;
    v77 = v71;
    v78 = v73;
    v79 = v75;
    v35 = v76;
    v36 = v77;
    v37 = v78;
    v38 = v79;
    v80 = Logger.logObject.getter(v38);
    v81 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc(12, -1);
      v83 = swift_slowAlloc(32, -1);
      v140[0] = v83;
      *(_DWORD *)v82 = 136446210;
      v84 = (char *)PlaylistCovers.RecipeColors.description.getter(v35, v36, v37, v38);
      *(_QWORD *)(v82 + 4) = sub_1000393D0(v84, v85, v140);
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v80, v81, "Using recipe 1 colors=%{public}s", (uint8_t *)v82, 0xCu);
      swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);

LABEL_33:
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v35, v36, v37, v38);
    }
LABEL_32:

    goto LABEL_33;
  }
  if (v132 <= 0.3 || v129 <= 0.3)
  {
    v110 = (void *)sub_1001BF6F4(v39, v41, v136, v45, log, v133, v132, v49, v61, v62, v63, v64, v65, v66, v67, v68, v130, v129, v53,
                     v55,
                     v57);
    v112 = v111;
    v114 = v113;
    v116 = v115;
    v117 = v110;
    v118 = v112;
    v119 = v114;
    v120 = v116;
    v35 = v117;
    v36 = v118;
    v37 = v119;
    v38 = v120;
    v80 = Logger.logObject.getter(v38);
    v97 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v80, v97))
      goto LABEL_32;
    loga = v80;
    v98 = swift_slowAlloc(12, -1);
    v99 = swift_slowAlloc(32, -1);
    v140[0] = v99;
    *(_DWORD *)v98 = 136446210;
    v121 = (char *)PlaylistCovers.RecipeColors.description.getter(v35, v36, v37, v38);
    *(_QWORD *)(v98 + 4) = sub_1000393D0(v121, v122, v140);
    swift_bridgeObjectRelease();

    v102 = "Using recipe 3 colors=%{public}s";
  }
  else
  {
    v86 = (void *)sub_1001BF594(v39, v41, v136, v45, log, v133, v132, v49, v61, v62, v63, v64, v65, v66, v67, v68, v130, *(uint64_t *)&v129, v53,
                    v55,
                    *(uint64_t *)&v57);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    v93 = v86;
    v94 = v88;
    v95 = v90;
    v96 = v92;
    v35 = v93;
    v36 = v94;
    v37 = v95;
    v38 = v96;
    v80 = Logger.logObject.getter(v38);
    v97 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v80, v97))
      goto LABEL_32;
    loga = v80;
    v98 = swift_slowAlloc(12, -1);
    v99 = swift_slowAlloc(32, -1);
    v140[0] = v99;
    *(_DWORD *)v98 = 136446210;
    v100 = (char *)PlaylistCovers.RecipeColors.description.getter(v35, v36, v37, v38);
    *(_QWORD *)(v98 + 4) = sub_1000393D0(v100, v101, v140);
    swift_bridgeObjectRelease();

    v102 = "Using recipe 2 colors=%{public}s";
  }
  _os_log_impl((void *)&_mh_execute_header, loga, v97, v102, (uint8_t *)v98, 0xCu);
  swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v99, -1, -1);
  swift_slowDealloc(v98, -1, -1);

  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v35, v36, v37, v38);
}

uint64_t sub_1001C0528(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001C0540, 0, 0);
}

uint64_t sub_1001C0540()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelGenericObject);
  v2 = (void *)swift_dynamicCastObjCClass(v1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "anyObject");
    goto LABEL_5;
  }
  v4 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelStoreBrowseContentItem);
  v5 = (void *)swift_dynamicCastObjCClass(v4);
  if (v5)
  {
    v3 = objc_msgSend(v5, "innerObject");
LABEL_5:
    v6 = v3;
    if (v6)
      goto LABEL_7;
  }
  v6 = *(id *)(v0 + 16);
LABEL_7:
  ObjectType = swift_getObjectType();
  v8 = objc_msgSend(v6, "identifiers");
  v9 = sub_1000BAB38(ObjectType, 2, 0, v8);
  v11 = v10;

  *(_QWORD *)(v0 + 24) = v11;
  if (v11)
  {
    if ((objc_msgSend(*(id *)(v0 + 16), "hasLoadedValueForKey:", MPModelPropertySongHasVideo) & 1) != 0)
      v12 = objc_msgSend(*(id *)(v0 + 16), "hasVideo");
    else
      v12 = 0;
    v22 = swift_task_alloc(dword_1004C11DC);
    *(_QWORD *)(v0 + 32) = v22;
    *(_QWORD *)v22 = v0;
    *(_QWORD *)(v22 + 8) = sub_1001C07F4;
    *(_BYTE *)(v22 + 368) = v12;
    *(_QWORD *)(v22 + 336) = v9;
    *(_QWORD *)(v22 + 344) = v11;
    return swift_task_switch(sub_1001BF888, 0, 0);
  }
  else
  {
    if (qword_1004B8D90 != -1)
      swift_once(&qword_1004B8D90, sub_1001BBC90);
    v13 = *(void **)(v0 + 16);
    v14 = type metadata accessor for Logger(0);
    sub_100039D34(v14, (uint64_t)static Logger.playlistCovers);
    v15 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(void **)(v0 + 16);
    if (v17)
    {
      v19 = swift_slowAlloc(12, -1);
      v20 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 138543362;
      *(_QWORD *)(v19 + 4) = v18;
      *v20 = v18;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No catalogID for MPModelSong=%{public}@", (uint8_t *)v19, 0xCu);
      v21 = sub_1000057B4(&qword_1004C0DB0);
      swift_arrayDestroy(v20, 1, v21);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  }
}

uint64_t sub_1001C07F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v11;

  v9 = *(_QWORD *)(*v4 + 24);
  v11 = *v4;
  swift_task_dealloc(*(_QWORD *)(*v4 + 32));
  swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4);
}

unint64_t sub_1001C0874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B9E48;
  if (!qword_1004B9E48)
  {
    v1 = sub_100009788(&qword_1004B9E40);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1004B9E48);
  }
  return result;
}

uint64_t sub_1001C08C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B9E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001C090C()
{
  unint64_t result;

  result = qword_1004C11E0;
  if (!qword_1004C11E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.RecipeColors, &type metadata for PlaylistCovers.RecipeColors);
    atomic_store(result, (unint64_t *)&qword_1004C11E0);
  }
  return result;
}

char *_s6SourceOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v14 = sub_1000057B4(&qword_1004B9E40);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void _s6SourceOwxx(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:

      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 0:
      v4 = sub_1000057B4(&qword_1004B9E40);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
  }
}

void **_s6SourceOwcp(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v12 = sub_1000057B4(&qword_1004B9E40);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **_s6SourceOwca(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1001C0C30((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v12 = sub_1000057B4(&qword_1004B9E40);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_1001C0C30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistCovers.Source(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *_s6SourceOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1000057B4(&qword_1004B9E40);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *_s6SourceOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1001C0C30((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1000057B4(&qword_1004B9E40);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1001C0D94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1001C0E14(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
  }
}

void sub_1001C0E14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004C1268)
  {
    v2 = type metadata accessor for Track(255);
    v3 = type metadata accessor for MusicItemCollection(a1, v2, &protocol witness table for Track);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004C1268);
  }
}

void _s14descr100484C39V11PlaceholderVwxx(id *a1)
{

}

_QWORD *_s12RecipeColorsVwcp(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t _s12RecipeColorsVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t _s12RecipeColorsVwta(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.RecipeColors()
{
  return &type metadata for PlaylistCovers.RecipeColors;
}

uint64_t sub_1001C0FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BDB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(void *a1, int a2, id a3, void **a4, void (*a5)(void), uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *Strong;
  _QWORD *v27;
  void *v28;
  void **v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  void (*v43)(void);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void (*v63)(void);
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  _QWORD *v73;
  objc_class *v74;
  char *v75;
  uint64_t v76;
  id v77;
  const void *v78;
  id v79;
  uint64_t v80;
  void (*v81)(void *);
  double v82;
  int v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  id v94;
  void *v95;
  void *v96;
  char v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  id v103;
  _QWORD *v104;
  id v105;
  _QWORD *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  id v110;
  id v111;
  char *v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  id v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  id v127;
  _QWORD *v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 v145;
  double v146;
  uint64_t v147;
  uint64_t v148;
  double v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  int v161;
  _QWORD *v162;
  id v163;
  __objc2_prot *v164;
  objc_super v165;
  void **aBlock;
  uint64_t v167;
  void *v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172[5];
  uint64_t v173;

  v7 = v6;
  LODWORD(v163) = a2;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (void **)((char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1000851CC();
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v153, v154, v155, v156, v157, v158, v159);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
  {
    if (qword_1004B8D98 != -1)
      swift_once(&qword_1004B8D98, sub_1001C2AD8);
    v55 = type metadata accessor for Logger(0);
    sub_100039D34(v55, (uint64_t)qword_1004C12C0);
    v56 = a1;
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc(12, -1);
      v60 = swift_slowAlloc(32, -1);
      v172[0] = v60;
      *(_DWORD *)v59 = 136446210;
      v61 = v56;
      v62 = objc_msgSend(v61, "description");
      v63 = a5;
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v66 = v65;

      v67 = (char *)v64;
      a5 = v63;
      *(_QWORD *)(v59 + 4) = sub_1000393D0(v67, v66, v172);

      swift_bridgeObjectRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Attempted to present viewController=%{public}s but there is no viewController to present onto.", (uint8_t *)v59, 0xCu);
      swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      swift_slowDealloc(v59, -1, -1);

      if (!v63)
        return;
    }
    else
    {

      if (!a5)
        return;
    }
    a5();
    return;
  }
  v162 = v7;
  v160 = a3;
  v161 = (int)a4;
  a3 = Strong;
  v27 = objc_msgSend(a3, "presentedViewController");
  v7 = a3;
  if (v27)
  {
    v28 = a3;
    do
    {
      v7 = v27;

      v27 = objc_msgSend(v7, "presentedViewController");
      v28 = v7;
    }
    while (v27);
  }
  v29 = (void **)objc_msgSend(v7, "transitionCoordinator");
  if (v29)
  {
    a4 = v29;
    if (qword_1004B8D98 == -1)
    {
LABEL_8:
      v30 = type metadata accessor for Logger(0);
      sub_100039D34(v30, (uint64_t)qword_1004C12C0);
      v31 = a1;
      swift_unknownObjectRetain_n(a4, 2, v32);
      v33 = v31;
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v37 = swift_slowAlloc(22, -1);
        v159 = a3;
        v38 = v37;
        v157 = swift_slowAlloc(64, -1);
        v172[0] = v157;
        *(_DWORD *)v38 = 136446466;
        v39 = v33;
        v40 = objc_msgSend(v39, "description");
        LODWORD(v156) = v36;
        v41 = a6;
        v42 = v40;
        v43 = a5;
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v158 = (uint64_t)v33;
        v46 = v45;

        a6 = v41;
        v47 = (char *)v44;
        a5 = v43;
        *(_QWORD *)(v38 + 4) = sub_1000393D0(v47, v46, v172);

        swift_bridgeObjectRelease(v46);
        *(_WORD *)(v38 + 12) = 2082;
        aBlock = a4;
        swift_unknownObjectRetain(a4);
        v48 = sub_1000057B4(&qword_1004C13A0);
        v49 = (char *)String.init<A>(describing:)(&aBlock, v48);
        v51 = v50;
        *(_QWORD *)(v38 + 14) = sub_1000393D0(v49, v50, v172);
        swift_unknownObjectRelease_n(a4, 2);
        v52 = v51;
        v33 = (id)v158;
        swift_bridgeObjectRelease(v52);
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v156, "Attempted to present %{public}s, but needs to wait for the ongoing transition %{public}s to complete first", (uint8_t *)v38, 0x16u);
        v53 = v157;
        swift_arrayDestroy(v157, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        v54 = v38;
        a3 = v159;
        swift_slowDealloc(v54, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a4, 2);
      }
      v97 = (char)v163;
      sub_100071718((uint64_t)v162, (uint64_t)v172);
      v98 = swift_allocObject(&unk_10047C2A0, 144, 7);
      *(_QWORD *)(v98 + 16) = a4;
      *(_QWORD *)(v98 + 24) = v33;
      sub_100034A2C((uint64_t)v172, v98 + 32);
      *(_BYTE *)(v98 + 104) = v97 & 1;
      *(_QWORD *)(v98 + 112) = v160;
      *(_BYTE *)(v98 + 120) = v161 & 1;
      *(_QWORD *)(v98 + 128) = a5;
      *(_QWORD *)(v98 + 136) = a6;
      v170 = sub_1001C2D74;
      v171 = v98;
      aBlock = _NSConcreteStackBlock;
      v167 = 1107296256;
      v168 = sub_10000AA40;
      v169 = &unk_10047C2B8;
      v99 = _Block_copy(&aBlock);
      v100 = v171;
      v101 = v33;
      swift_unknownObjectRetain(a4);
      sub_10000DCE8((uint64_t)a5, a6);
      objc_msgSend(a4, "animateAlongsideTransition:completion:", 0, v99, swift_release(v100).n128_f64[0]);
      _Block_release(v99);

      swift_unknownObjectRelease(a4);
      return;
    }
LABEL_59:
    swift_once(&qword_1004B8D98, sub_1001C2AD8);
    goto LABEL_8;
  }
  if ((objc_msgSend(v7, "canPresentViewControllers") & 1) != 0)
  {
    if ((v163 & 1) != 0)
    {
      v68 = objc_msgSend(v7, "view");
      if (!v68)
      {
        __break(1u);
        return;
      }
      v69 = v68;
      v70 = objc_msgSend(v68, "window");

      if (v70)
      {
        v71 = objc_msgSend(v70, "traitCollection");

        v72 = objc_msgSend(v71, "horizontalSizeClass");
        if (v72 == (id)2 && *((unsigned __int8 *)v162 + 48) != 255)
          objc_msgSend(a1, "setModalPresentationStyle:", 7);
      }
    }
    v158 = a6;
    v73 = v7;
    objc_msgSend(a1, "setPlayActivityFeatureNameSourceViewController:", v73);
    v74 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    v75 = (char *)objc_allocWithZone(v74);
    v76 = swift_unknownObjectWeakInit(&v75[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController], 0);
    swift_unknownObjectWeakAssign(v76, v73);
    v165.receiver = v75;
    v165.super_class = v74;
    v77 = objc_msgSendSuper2(&v165, "init");
    if (qword_1004B8C40 != -1)
      swift_once(&qword_1004B8C40, sub_1001102F8);
    v78 = (const void *)qword_1004BE020;
    v79 = v77;
    objc_setAssociatedObject(a1, v78, v79, (void *)1);

    v80 = (uint64_t)v162;
    v81 = (void (*)(void *))v162[7];
    if (v81)
      v81(a1);
    v163 = objc_msgSend(a1, "popoverPresentationController");
    if (!v163)
      goto LABEL_53;
    v159 = a3;
    v83 = *(unsigned __int8 *)(v80 + 48);
    if (v83 != 255)
    {
      v84 = *(void **)(v80 + 8);
      v85 = *(_QWORD *)(v80 + 16);
      v87 = *(_QWORD *)(v80 + 24);
      v86 = *(_QWORD *)(v80 + 32);
      v88 = *(_QWORD *)(v80 + 40);
      v164 = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate;
      v89 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v164);
      v162 = (_QWORD *)v88;
      if (v89)
      {
        v90 = v89;
        v157 = (uint64_t)a5;
        v91 = a1;
        v92 = v88;
        v93 = v91;
        v153 = v84;
        v154 = v85;
        v155 = v87;
        v156 = v86;
        sub_1001C2CF0(v84, v85, v87, v86, v92, v83);
        v94 = objc_msgSend(v93, "presentationController");
        if (v94)
        {
          v95 = v94;
          objc_msgSend(v94, "setDelegate:", v90);

        }
        a5 = (void (*)(void))v157;
        v86 = v156;
        v87 = v155;
        v85 = v154;
        v96 = v153;
      }
      else
      {
        sub_1001C2CB8(v84, v85, v87, v86, v88, v83);
        v96 = v84;
      }
      objc_msgSend(v163, "setPermittedArrowDirections:", v160);
      v129 = objc_msgSend(a1, "popoverPresentationController");
      if (v129)
      {
        v130 = v129;
        if (v83)
        {
          v131 = v86;
          v132 = v86;
          v133 = (uint64_t)v162;
          if (v83 == 1)
          {
            sub_1001C2CB8(v96, v85, v87, v131, (uint64_t)v162, 1u);
            objc_msgSend(v130, "setBarButtonItem:", v96);

            sub_1001C2CDC(v96, v85, v87, v132, v133, 1u);
            sub_1001C2CDC(v96, v85, v87, v132, v133, 1u);
            v134 = v96;
            v135 = v85;
            v136 = v87;
            v137 = v132;
            v138 = v133;
            v139 = 1;
          }
          else
          {
            sub_1001C2CB8(v96, v85, v87, v131, (uint64_t)v162, 2u);
            swift_unknownObjectRetain(v96);
            objc_msgSend(v130, "setSourceItem:", v96);

            sub_1001C2CDC(v96, v85, v87, v132, v133, 2u);
            sub_1001C2CDC(v96, v85, v87, v132, v133, 2u);
            v134 = v96;
            v135 = v85;
            v136 = v87;
            v137 = v132;
            v138 = v133;
            v139 = 2;
          }
          sub_1000335FC(v134, v135, v136, v137, v138, v139);
          goto LABEL_52;
        }
        v146 = *(double *)&v86;
        v147 = v86;
        v148 = (uint64_t)v162;
        v149 = *(double *)&v162;
        objc_msgSend(v129, "setSourceView:", v96);
        objc_msgSend(v130, "setSourceRect:", *(double *)&v85, *(double *)&v87, v146, v149);

        sub_1001C2CDC(v96, v85, v87, v147, v148, 0);
        v140 = v96;
        v141 = v85;
        v142 = v87;
        v143 = v147;
        v144 = v148;
        v145 = 0;
      }
      else
      {
        v140 = v96;
        v141 = v85;
        v142 = v87;
        v143 = v86;
        v144 = (uint64_t)v162;
        v145 = v83;
      }
      sub_1001C2CDC(v140, v141, v142, v143, v144, v145);
    }
LABEL_52:

    a3 = v159;
LABEL_53:
    if (a5)
    {
      v150 = v158;
      v172[4] = (uint64_t)a5;
      v173 = v158;
      v172[0] = (uint64_t)_NSConcreteStackBlock;
      v172[1] = 1107296256;
      v172[2] = (uint64_t)sub_100011FD0;
      v172[3] = (uint64_t)&unk_10047C268;
      v151 = _Block_copy(v172);
      v152 = v173;
      swift_retain(v150);
      *(_QWORD *)&v82 = swift_release(v152).n128_u64[0];
    }
    else
    {
      v151 = 0;
    }
    objc_msgSend(v73, "presentViewController:animated:completion:", a1, v161 & 1, v151, v82);
    _Block_release(v151);

    return;
  }
  v159 = a3;
  if (qword_1004B8D98 != -1)
    swift_once(&qword_1004B8D98, sub_1001C2AD8);
  v102 = type metadata accessor for Logger(0);
  sub_100039D34(v102, (uint64_t)qword_1004C12C0);
  v103 = a1;
  v104 = v7;
  v105 = v103;
  v106 = v104;
  v107 = Logger.logObject.getter(v106);
  v108 = static os_log_type_t.default.getter(v107);
  if (os_log_type_enabled(v107, v108))
  {
    v109 = swift_slowAlloc(22, -1);
    v158 = swift_slowAlloc(64, -1);
    v172[0] = v158;
    *(_DWORD *)v109 = 136446466;
    v110 = v105;
    v111 = objc_msgSend(v110, "description");
    v112 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
    v157 = (uint64_t)a5;
    v114 = v113;

    *(_QWORD *)(v109 + 4) = sub_1000393D0(v112, v114, v172);
    swift_bridgeObjectRelease(v114);
    *(_WORD *)(v109 + 12) = 2082;
    v115 = v106;
    v116 = objc_msgSend(v115, "description");
    v117 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
    v119 = v118;

    *(_QWORD *)(v109 + 14) = sub_1000393D0(v117, v119, v172);
    v120 = v119;
    a5 = (void (*)(void))v157;
    swift_bridgeObjectRelease(v120);
    _os_log_impl((void *)&_mh_execute_header, v107, v108, "Attempted to present %{public}s, but need to dismiss %{public}s first", (uint8_t *)v109, 0x16u);
    v121 = v158;
    swift_arrayDestroy(v158, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v121, -1, -1);
    swift_slowDealloc(v109, -1, -1);

  }
  else
  {

  }
  v122 = v160;
  sub_100071718((uint64_t)v162, (uint64_t)v172);
  v123 = swift_allocObject(&unk_10047C228, 144, 7);
  *(_QWORD *)(v123 + 16) = v106;
  *(_QWORD *)(v123 + 24) = v105;
  sub_100034A2C((uint64_t)v172, v123 + 32);
  *(_BYTE *)(v123 + 104) = v163 & 1;
  *(_QWORD *)(v123 + 112) = v122;
  v124 = v161 & 1;
  *(_BYTE *)(v123 + 120) = v124;
  *(_QWORD *)(v123 + 128) = a5;
  *(_QWORD *)(v123 + 136) = a6;
  v170 = sub_1001C2C84;
  v171 = v123;
  aBlock = _NSConcreteStackBlock;
  v167 = 1107296256;
  v168 = sub_100011FD0;
  v169 = &unk_10047C240;
  v125 = _Block_copy(&aBlock);
  v126 = v171;
  v127 = v105;
  sub_10000DCE8((uint64_t)a5, a6);
  v128 = v106;
  objc_msgSend(v128, "dismissViewControllerAnimated:completion:", v124, v125, swift_release(v126).n128_f64[0]);
  _Block_release(v125);

}

Swift::Void __swiftcall PresentationSource.Position.configure(_:)(UIViewController a1)
{
  __int128 *v1;
  void *v3;
  id v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  double v9;
  __int128 v10;
  double v11;
  double v12;
  id v13;
  _OWORD v14[3];
  __int128 v15;
  double v16;
  double v17;
  double v18;
  char v19;

  sub_1001C2DAC(v1, v14);
  v3 = *(void **)&v14[0];
  v4 = -[objc_class popoverPresentationController](a1.super.super.isa, "popoverPresentationController");
  if (v4)
  {
    v5 = v4;
    sub_1001C2DAC(v1, &v15);
    if (v19)
    {
      v7 = v15;
      if (v19 == 1)
      {
        v8 = v3;
        objc_msgSend(v5, "setBarButtonItem:", v7);
      }
      else
      {
        swift_unknownObjectRetain_n(v3, 2, v6);
        objc_msgSend(v5, "setSourceItem:", v7);
      }

      sub_1001C2E54((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000335FC);
    }
    else
    {
      v10 = v15;
      v9 = v16;
      v11 = v17;
      v12 = v18;
      v13 = v3;
      objc_msgSend(v5, "setSourceView:", (_QWORD)v10);
      objc_msgSend(v5, "setSourceRect:", *((double *)&v10 + 1), v9, v11, v12);

    }
    sub_1001C2E54((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000335FC);
  }
}

uint64_t PresentationSource.viewController.getter()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

void PresentationSource.viewController.setter(void *a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1, a1);

}

void (*PresentationSource.viewController.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1);
  return sub_1001C20AC;
}

void sub_1001C20AC(_QWORD *a1)
{
  id v1;

  v1 = (id)*a1;
  swift_unknownObjectWeakAssign(a1[1], *a1);

}

void PresentationSource.windowScene.getter()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "view");

    if (v3)
    {
      v4 = objc_msgSend(v3, "window");

      objc_msgSend(v4, "windowScene");
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t PresentationSource.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001C2DC4(v1 + 8, a1);
}

uint64_t PresentationSource.position.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C2E0C(a1, v1 + 8);
}

uint64_t PresentationSource.configurationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_10000DCE8(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t PresentationSource.configurationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10000DCF8(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

id static PresentationSource.topmost(in:)@<X0>(uint64_t a1@<X8>)
{
  id result;
  id v3;
  id v4;
  void *v5;
  void *v6;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;

  result = UIWindowScene.rootViewController.getter();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(v3, "presentedViewController");
    if (v4)
    {
      v5 = v3;
      while (1)
      {
        v6 = v4;
        if (!objc_msgSend(v4, "canPresentViewControllers"))
          break;

        v4 = objc_msgSend(v6, "presentedViewController");
        v5 = v6;
        if (!v4)
        {
          v5 = v6;
          goto LABEL_10;
        }
      }

      v3 = v6;
    }
    else
    {
      v5 = v3;
    }
LABEL_10:

    swift_unknownObjectWeakInit(v7, 0);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    v12 = 0;
    v13 = 0;
    swift_unknownObjectWeakAssign(v7, v5);

    sub_1001C2CDC((id)v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10, v11);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    return (id)sub_100034A2C((uint64_t)v7, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 56) = xmmword_1003C6C90;
  }
  return result;
}

void *PresentationSource.PresentingViewControllerOptions.allowsPresentation.unsafeMutableAddressor()
{
  return &static PresentationSource.PresentingViewControllerOptions.allowsPresentation;
}

void *static PresentationSource.topmostPresentedViewController(in:options:)(uint64_t a1, char a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = UIWindowScene.rootViewController.getter();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v4, "presentedViewController");
  if (v5)
  {
    v6 = v4;
    do
    {
      v7 = v5;
      if ((a2 & 1) != 0 && !objc_msgSend(v5, "canPresentViewControllers"))
      {

        v4 = v7;
        goto LABEL_11;
      }

      v5 = objc_msgSend(v7, "presentedViewController");
      v6 = v7;
    }
    while (v5);
    v6 = v7;
  }
  else
  {
    v6 = v4;
  }
LABEL_11:

  return v6;
}

uint64_t PresentationSource.init(viewController:position:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = swift_unknownObjectWeakInit(a3, 0);
  *(_QWORD *)(v5 + 40) = 0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  v6 = v5 + 8;
  *(_BYTE *)(v5 + 48) = -1;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  swift_unknownObjectWeakAssign(v5, a1);

  return sub_1001C2E0C(a2, v6);
}

id static PresentationSource.topmostPresentedViewController(from:options:)(void *a1, char a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  v4 = objc_msgSend(v3, "presentedViewController");
  if (v4)
  {
    while (1)
    {
      v5 = v4;
      if ((a2 & 1) != 0 && (objc_msgSend(v4, "canPresentViewControllers") & 1) == 0)
        break;

      v4 = objc_msgSend(v5, "presentedViewController");
      v3 = v5;
      if (!v4)
        return v5;
    }

  }
  return v3;
}

double PresentationSource.init(windowScene:position:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  double result;
  _BYTE v9[8];
  _OWORD v10[2];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v6 = UIWindowScene.rootViewController.getter();
  if (v6)
  {
    v7 = v6;
    swift_unknownObjectWeakInit(v9, 0);
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    v12 = -1;
    v13 = 0;
    v14 = 0;
    swift_unknownObjectWeakAssign(v9, v7);

    sub_1001C2E0C(a2, (uint64_t)v10);
    sub_100034A2C((uint64_t)v9, a3);

  }
  else
  {
    sub_1001C2E54(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001C2CDC);

    *(_QWORD *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a3 + 56) = xmmword_1003C6C90;
  }
  return result;
}

uint64_t sub_1001C25C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v15 = a9;
  if (qword_1004B8D98 != -1)
    swift_once(&qword_1004B8D98, sub_1001C2AD8);
  v16 = type metadata accessor for Logger(0);
  sub_100039D34(v16, (uint64_t)qword_1004C12C0);
  swift_unknownObjectRetain_n(a2, 2, v17);
  v18 = a3;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    type = v20;
    v21 = swift_slowAlloc(22, -1);
    v38 = a8;
    v39 = a2;
    v36 = swift_slowAlloc(64, -1);
    v40 = v36;
    *(_DWORD *)v21 = 136446466;
    swift_unknownObjectRetain(a2);
    v22 = sub_1000057B4(&qword_1004C13A0);
    v23 = (char *)String.init<A>(describing:)(&v39, v22);
    v25 = v24;
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v23, v24, &v40);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = v18;
    v27 = objc_msgSend(v26, "description");
    v28 = a6;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = a7;
    v32 = v31;

    v33 = (char *)v29;
    a6 = v28;
    v15 = a9;
    *(_QWORD *)(v21 + 14) = sub_1000393D0(v33, v32, &v40);

    v34 = v32;
    a7 = v30;
    swift_bridgeObjectRelease(v34);
    _os_log_impl((void *)&_mh_execute_header, v19, type, "TransitionCoordinator %{public}s completed ongoing animations. Now attemptying to re-present %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    a8 = v38;
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a2, 2);
  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v18, a5 & 1, a6, a7 & 1, a8, v15);
}

uint64_t sub_1001C2854(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;

  if (qword_1004B8D98 != -1)
    swift_once(&qword_1004B8D98, sub_1001C2AD8);
  v13 = type metadata accessor for Logger(0);
  sub_100039D34(v13, (uint64_t)qword_1004C12C0);
  v14 = a1;
  v15 = a2;
  v16 = v14;
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v39 = v21;
    *(_DWORD *)v20 = 136446466;
    v22 = v16;
    v35 = a5;
    v23 = a8;
    v24 = objc_msgSend(v22, "description");
    v36 = a7;
    v25 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    *(_QWORD *)(v20 + 4) = sub_1000393D0(v25, v27, &v39);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v20 + 12) = 2082;
    v28 = v17;
    v29 = objc_msgSend(v28, "description");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    a8 = v23;
    a5 = v35;
    v33 = (char *)v30;
    a7 = v36;
    *(_QWORD *)(v20 + 14) = sub_1000393D0(v33, v32, &v39);

    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Dismissed %{public}s, now attempting to re-present %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v17, a4 & 1, a5, a6 & 1, a7, a8);
}

uint64_t sub_1001C2AD8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004C12C0);
  sub_100039D34(v0, (uint64_t)qword_1004C12C0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0xD000000000000012, 0x80000001003D2340);
}

double UIWindowScene.presentationSource.getter@<D0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = UIWindowScene.rootViewController.getter();
  if (v2)
  {
    v3 = v2;
    swift_unknownObjectWeakInit(v5, 0);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    v10 = 0;
    v11 = 0;
    swift_unknownObjectWeakAssign(v5, v3);

    sub_1001C2CDC((id)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v8, v9);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    sub_100034A2C((uint64_t)v5, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a1 + 56) = xmmword_1003C6C90;
  }
  return result;
}

uint64_t sub_1001C2C14()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_1000335FC(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001C2C84()
{
  uint64_t v0;

  return sub_1001C2854(*(void **)(v0 + 16), *(void **)(v0 + 24), v0 + 32, *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_1001C2CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C2CB0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_1001C2CB8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
    return (id)swift_unknownObjectRetain(result);
  if (a6 <= 1u)
    return result;
  return result;
}

void sub_1001C2CDC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    sub_1000335FC(a1, a2, a3, a4, a5, a6);
}

id sub_1001C2CF0(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    return sub_1001C2CB8(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_1001C2D04()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_1000335FC(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001C2D74(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C25C4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + 32, *(_BYTE *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_BYTE *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

_OWORD *sub_1001C2DAC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1001C2DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004C13A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C2E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004C13A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C2E54(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

unint64_t sub_1001C2E90()
{
  unint64_t result;

  result = qword_1004C13B0;
  if (!qword_1004C13B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1004C13B0);
  }
  return result;
}

unint64_t sub_1001C2ED8()
{
  unint64_t result;

  result = qword_1004C13B8;
  if (!qword_1004C13B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1004C13B8);
  }
  return result;
}

unint64_t sub_1001C2F20()
{
  unint64_t result;

  result = qword_1004C13C0;
  if (!qword_1004C13C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1004C13C0);
  }
  return result;
}

unint64_t sub_1001C2F68()
{
  unint64_t result;

  result = qword_1004C13C8;
  if (!qword_1004C13C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1004C13C8);
  }
  return result;
}

double destroy for PresentationSource(uint64_t a1)
{
  double result;
  int v3;

  swift_unknownObjectWeakDestroy(a1);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 != 255)
    sub_1000335FC(*(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  if (*(_QWORD *)(a1 + 56))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  swift_unknownObjectWeakCopyInit(a1, a2);
  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 == 255)
  {
    v10 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v10;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    v5 = *(void **)(a2 + 8);
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    sub_1001C2CB8(v5, v6, v7, v8, v9, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = v4;
  }
  v11 = *(_QWORD *)(a2 + 56);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2);
  v5 = (__int128 *)(v4 + 8);
  v6 = (__int128 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
  {
    if (v7 == 255)
    {
      v26 = *v6;
      v27 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v4 + 33) = *(_OWORD *)(a2 + 33);
      *v5 = v26;
      *(_OWORD *)(v4 + 24) = v27;
    }
    else
    {
      v19 = *(void **)(a2 + 8);
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a2 + 24);
      v22 = *(_QWORD *)(a2 + 32);
      v23 = *(_QWORD *)(a2 + 40);
      sub_1001C2CB8(v19, v20, v21, v22, v23, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 8) = v19;
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v22;
      *(_QWORD *)(a1 + 40) = v23;
      *(_BYTE *)(a1 + 48) = v7;
    }
  }
  else if (v7 == 255)
  {
    sub_1001C3240(v4 + 8);
    v24 = *(_OWORD *)(a2 + 33);
    v25 = *(_OWORD *)(a2 + 24);
    *v5 = *v6;
    v5[1] = v25;
    *(__int128 *)((char *)v5 + 25) = v24;
  }
  else
  {
    v8 = *(void **)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    sub_1001C2CB8(v8, v9, v10, v11, v12, *(_BYTE *)(a2 + 48));
    v13 = *(void **)(a1 + 8);
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    v18 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v7;
    sub_1000335FC(v13, v14, v15, v16, v17, v18);
  }
  v28 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v28)
    {
      v31 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v28;
      *(_QWORD *)(a1 + 64) = v31;
      swift_retain(v31);
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v28)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_14;
  }
  v29 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v28;
  *(_QWORD *)(a1 + 64) = v29;
  swift_retain(v29);
  swift_release(v30);
  return a1;
}

uint64_t sub_1001C3240(uint64_t a1)
{
  sub_1000335FC(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

__n128 initializeWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  __int128 v6;
  __n128 result;
  uint64_t v8;

  v3 = swift_unknownObjectWeakTakeInit(a1, a2);
  v4 = (__n128 *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = v6;
  result = *(__n128 *)(a2 + 33);
  *(__n128 *)(v3 + 33) = result;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(v3 + 56) = v5;
    *(_QWORD *)(v3 + 64) = v8;
  }
  else
  {
    result = *v4;
    *(__n128 *)(v3 + 56) = *v4;
  }
  return result;
}

uint64_t assignWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = swift_unknownObjectWeakTakeAssign();
  v5 = (_OWORD *)(v4 + 8);
  v6 = *(unsigned __int8 *)(v4 + 48);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 48);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a2 + 40);
      v9 = *(void **)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = v8;
      *(_BYTE *)(a1 + 48) = v7;
      sub_1000335FC(v9, v10, v11, v12, v13, v6);
      goto LABEL_6;
    }
    sub_1001C3240(v4 + 8);
  }
  v14 = *(_OWORD *)(a2 + 24);
  *v5 = *(_OWORD *)(a2 + 8);
  v5[1] = v14;
  *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 33);
LABEL_6:
  v15 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v15)
    {
      v18 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v18;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

void destroy for PresentationSource.Position(uint64_t a1)
{
  sub_1000335FC(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1001C2CB8(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1001C2CB8(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1000335FC(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1000335FC(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource.Position(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001C367C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1001C3684(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource.Position()
{
  return &type metadata for PresentationSource.Position;
}

ValueMetadata *type metadata accessor for PresentationSource.PresentingViewControllerOptions()
{
  return &type metadata for PresentationSource.PresentingViewControllerOptions;
}

void PresentedViewState.present(_:animated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v17[24];

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v17[-v8 - 8];
  v10 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v17[-v8 - 8], a1, v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v5);
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v12 = swift_beginAccess(v11, v17, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v7 + 40))(v11, v9, v6, v12);
  v13 = swift_endAccess(v17);
  if ((a2 & 1) != 0)
  {
    v15 = static Animation.default.getter(v13, v14);
    withAnimation<A>(_:_:)(v15, sub_1001C3E60, v2, (char *)&type metadata for () + 8);
    swift_release(v15);
  }
  else
  {
    PresentedViewState.isPresented.setter(1);
  }
}

uint64_t View.viewPresenting<A, B>(_:modifier:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v24 = a7;
  v12 = *a1;
  v13 = type metadata accessor for ModifiedContent(0, a3, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - v15;
  View.modifier<A>(_:)(a2, a3, a4, a5);
  v19 = type metadata accessor for PresentedViewState(0, *(_QWORD *)(v12 + 80), v17, v18);
  v25 = a5;
  v26 = a6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for PresentedViewState<A>, v19);
  View.environmentObject<A>(_:)(v24, v23, v13, v19, WitnessTable, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t PresentedViewState.isPresented.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D23B0);
  v2 = swift_getKeyPath(&unk_1003D23E8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t PresentedViewState.isPresented.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_1003D23B0);
  v4 = swift_getKeyPath(&unk_1003D23E8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*PresentedViewState.isPresented.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D23B0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D23E8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10016C640;
}

uint64_t PresentedViewState.$isPresented.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + qword_1004C13D0, v3, 33, 0);
  v1 = sub_1000057B4(&qword_1004BF240);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t PresentedViewState.$isPresented.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_1000057B4(&qword_1004BF248);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + qword_1004C13D0, v10, 33, 0);
  v7 = sub_1000057B4(&qword_1004BF240);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*PresentedViewState.$isPresented.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000057B4(&qword_1004BF248);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  PresentedViewState.$isPresented.getter();
  return sub_1001C3C5C;
}

void sub_1001C3C5C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    PresentedViewState.$isPresented.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PresentedViewState.$isPresented.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t PresentedViewState.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t PresentedViewState.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  PresentedViewState.init()();
  return v1;
}

uint64_t *PresentedViewState.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v1 = *v0;
  v2 = sub_1000057B4(&qword_1004BF240);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + qword_1004C13D0;
  v7 = *(_QWORD *)(v1 + 80);
  v10 = 0;
  Published.init(initialValue:)(&v10, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), 1, 1, v7);
  return v0;
}

uint64_t sub_1001C3E60()
{
  return PresentedViewState.isPresented.setter(1);
}

uint64_t *PresentedViewState.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (uint64_t)v0 + qword_1004C13D0;
  v3 = sub_1000057B4(&qword_1004BF240);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t PresentedViewState.__deallocating_deinit()
{
  uint64_t v0;

  PresentedViewState.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for PresentedViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PresentedViewState);
}

uint64_t sub_1001C3F40()
{
  return 8;
}

_QWORD *sub_1001C3F4C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1001C3F58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1001736FC();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 0, 2, v6, a1 + 88);
    }
  }
}

uint64_t sub_1001C3FE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1[1];
  v2 = type metadata accessor for ModifiedContent(255, *a1, a1[2]);
  v5 = type metadata accessor for PresentedViewState(255, v1, v3, v4);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v6);
  v8 = type metadata accessor for ModifiedContent(255, v2, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v7);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
}

unint64_t static LibraryModelRequest.label.getter(uint64_t a1, uint64_t a2)
{
  uint64_t MetatypeMetadata;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v5._countAndFlagsBits = _typeName(_:qualified:)(MetatypeMetadata, 0);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8 = swift_getMetatypeMetadata(a2);
  v9._countAndFlagsBits = _typeName(_:qualified:)(v8, 0);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0xD000000000000014;
}

uint64_t LibraryModelRequest.section.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1001C41C8(v1, *(void **)(v0 + 16));
  return v1;
}

uint64_t sub_1001C41C8(uint64_t result, void *a2)
{
  void *v3;
  id v4;
  id v5;

  if (a2)
  {
    v3 = (void *)result;
    swift_bridgeObjectRetain();
    v4 = v3;
    v5 = a2;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t LibraryModelRequest.section.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1001C425C(*(_QWORD *)(v4 + 8), *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  *(_QWORD *)(v4 + 8) = a1;
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  return result;
}

uint64_t sub_1001C425C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  void *v6;

  if (a2)
  {
    v6 = (void *)result;

    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void *LibraryModelRequest.item.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = v1;
  v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.item.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 56));
  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 64));
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 64) = a4;
  return result;
}

uint64_t LibraryModelRequest.scopedContainers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryModelRequest.scopedContainers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 72));
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t LibraryModelRequest.filter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.filter.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 104));
  *(_QWORD *)(v4 + 80) = a1;
  *(_BYTE *)(v4 + 88) = a2 & 1;
  *(_QWORD *)(v4 + 96) = a3;
  *(_QWORD *)(v4 + 104) = a4;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.filter.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t LibraryModelRequest.itemRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t LibraryModelRequest.itemRange.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 112) = result;
  *(_QWORD *)(v3 + 120) = a2;
  *(_BYTE *)(v3 + 128) = a3 & 1;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.itemRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t LibraryModelRequest.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 144));
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.label.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 LibraryModelRequest.init(library:section:item:scopedContainers:filter:itemRange:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, char a12, __n128 a13, uint64_t a14, uint64_t a15, char a16)
{
  __n128 result;

  result = a13;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  *(_BYTE *)(a9 + 88) = a12 & 1;
  *(__n128 *)(a9 + 96) = a13;
  *(_QWORD *)(a9 + 112) = a14;
  *(_QWORD *)(a9 + 120) = a15;
  *(_BYTE *)(a9 + 128) = a16 & 1;
  *(_QWORD *)(a9 + 136) = 0;
  *(_QWORD *)(a9 + 144) = 0;
  return result;
}

uint64_t LibraryModelRequest.mediaPlayerRequest()(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _QWORD *, uint64_t);
  Class isa;
  __int128 v16;
  Class v17;
  Class v18;
  __int128 v19;
  __int128 *v20;
  NSString v21;
  uint64_t result;
  NSString v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[16];
  _BYTE v38[24];
  __int128 v39;
  __int128 v40;
  _BYTE v41[16];
  _BYTE v42[8];
  __int128 v43;
  __int128 v44;
  _BYTE v45[8];
  _QWORD v46[4];
  _OWORD v47[2];
  objc_class *v48;
  objc_class *v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[8];
  objc_class *v57;

  v2 = v1;
  sub_1000057B4((uint64_t *)&unk_1004BDDA0);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v6 = *((_OWORD *)v1 + 7);
  v33 = *((_OWORD *)v1 + 6);
  v34 = v6;
  v35 = *((_OWORD *)v1 + 8);
  v36 = v1[18];
  v7 = *((_OWORD *)v1 + 3);
  v29 = *((_OWORD *)v1 + 2);
  v30 = v7;
  v8 = *((_OWORD *)v1 + 5);
  v31 = *((_OWORD *)v1 + 4);
  v32 = v8;
  v26 = *(_OWORD *)v1;
  v28 = *((_OWORD *)v1 + 1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a1);
  sub_1001C5940(v5, a1, WitnessTable);
  objc_msgSend(v5, "setMediaLibrary:", *v1, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  v12 = type metadata accessor for LibraryContentConfiguration(255, v4, v10, v11);
  v13 = type metadata accessor for Optional(0, v12);
  v14 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v46, v1 + 1, v13);
  v14(v47, v46, v13);
  if (*((_QWORD *)&v47[0] + 1))
  {
    v27 = v47[0];
    v28 = v47[1];
    sub_10000FD10((uint64_t)&v28 + 8, (uint64_t)v56, &qword_1004C1458);
    sub_10000FD10((uint64_t)v56, (uint64_t)&v57, &qword_1004C1458);
    isa = v57;
    if (v57)
    {
      sub_10000598C(0, &qword_1004BD018, MPIdentifierSet_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
    }
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v5, "setAllowedSectionIdentifiers:", isa, v27, (_QWORD)v28);

  v16 = *(_OWORD *)((char *)v2 + 56);
  v43 = *(_OWORD *)((char *)v2 + 40);
  v44 = v16;
  sub_10000FD10((uint64_t)&v44 + 8, (uint64_t)v45, &qword_1004C1458);
  sub_10000FD10((uint64_t)v45, (uint64_t)&v48, &qword_1004C1458);
  v17 = v48;
  if (v48)
  {
    sub_10000598C(0, &qword_1004BD018, MPIdentifierSet_ptr);
    v17 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setAllowedItemIdentifiers:", v17);

  sub_10000FD10((uint64_t)v2 + 72, (uint64_t)v42, &qword_1004C1460);
  sub_10000FD10((uint64_t)v42, (uint64_t)&v49, &qword_1004C1460);
  v18 = v49;
  if (v49)
  {
    sub_10000598C(0, &qword_1004BD020, MPModelObject_ptr);
    v18 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setScopedContainers:", v18);

  v19 = v2[6];
  v39 = v2[5];
  v40 = v19;
  v20 = &v39;
  if (BYTE8(v39) == 1)
    v20 = (__int128 *)MPMediaLibraryFilteringOptions.none.unsafeMutableAddressor();
  objc_msgSend(v5, "setFilteringOptions:", *(_QWORD *)v20);
  sub_10000FD10((uint64_t)&v40, (uint64_t)v41, &qword_1004BAE98);
  sub_10000FD10((uint64_t)v41, (uint64_t)v50, &qword_1004BAE98);
  if (v50[1])
    v21 = String._bridgeToObjectiveC()();
  else
    v21 = 0;
  objc_msgSend(v5, "setFilterText:", v21);

  sub_10000FD10((uint64_t)(v2 + 7), (uint64_t)v38, &qword_1004C1468);
  result = sub_10000FD10((uint64_t)v38, (uint64_t)&v51, &qword_1004C1468);
  if ((v53 & 1) == 0)
  {
    if (__OFSUB__(v52, v51))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v5, "setContentRange:", v51, v52 - v51);
  }
  sub_10000FD10((uint64_t)v2 + 136, (uint64_t)v37, &qword_1004BAE98);
  sub_10000FD10((uint64_t)v37, (uint64_t)&v54, &qword_1004BAE98);
  v23 = v55;
  if (v55)
  {
    v24 = v5;
    v23 = String._bridgeToObjectiveC()();
  }
  else
  {
    v25 = v5;
  }
  objc_msgSend(v5, "setLabel:", v23);

  return (uint64_t)v5;
}

uint64_t type metadata accessor for LibraryContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryContentConfiguration);
}

uint64_t UIView.Border.thickness.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t LibraryModelRequest.Filter.text.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if ((a2 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
LABEL_6:
    if (a4)
    {
      if (a8)
      {
        if (a3 == a7 && a4 == a8)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((a6 & 1) == 0 && a1 == a5)
    goto LABEL_6;
  return result;
}

uint64_t sub_1001C49FC(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

BOOL static LibraryModelRequest.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    if (!v9)
      goto LABEL_8;
LABEL_7:
    sub_1001C41C8(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
    sub_1001C41C8((uint64_t)v8, v9);
    sub_1001C425C((uint64_t)v4, v5, v6, v7);
    sub_1001C425C((uint64_t)v8, v9, v11, v10);
    return 0;
  }
  if (!v9)
    goto LABEL_7;
  sub_1001C41C8(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  sub_1001C41C8((uint64_t)v4, v5);
  sub_1001C41C8((uint64_t)v8, v9);
  v20 = static LibraryContentConfiguration.__derived_struct_equals(_:_:)(v4, (uint64_t)v5, v6, v7, v8, (uint64_t)v9, v11, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001C425C((uint64_t)v4, v5, v6, v7);
  if ((v20 & 1) == 0)
    return 0;
LABEL_8:
  if ((static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)) & 1) == 0)return 0;
  v12 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (!v12)
      return 0;
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1000D2D44(v13, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v12)
  {
    return 0;
  }
  if ((static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 80), *(_BYTE *)(a2 + 88), *(_QWORD *)(a2 + 96), *(_QWORD *)(a2 + 104)) & 1) == 0)return 0;
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 128) & 1) == 0)
      return 0;
LABEL_21:
    v16 = *(_QWORD *)(a1 + 144);
    v17 = *(_QWORD *)(a2 + 144);
    if (v16)
    {
      if (!v17)
        return 0;
      v18 = *(_QWORD *)(a1 + 136);
      v19 = *(_QWORD *)(a2 + 136);
      return v18 == v19 && v16 == v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0) & 1) != 0;
    }
    return !v17;
  }
  if ((*(_BYTE *)(a2 + 128) & 1) != 0)
    return 0;
  result = 0;
  if (*(_QWORD *)(a1 + 112) == *(_QWORD *)(a2 + 112) && *(_QWORD *)(a1 + 120) == *(_QWORD *)(a2 + 120))
    goto LABEL_21;
  return result;
}

uint64_t static LibraryContentConfiguration.__derived_struct_equals(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  if (a1)
  {
    if (!a5)
      return 0;
    sub_10000598C(0, &qword_1004C1470, MPModelKind_ptr);
    v16 = a5;
    v17 = a1;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (a5)
  {
    return 0;
  }
  sub_10000598C(0, (unint64_t *)&qword_1004BDD90, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a2, a6) & 1) != 0)
  {
    if (a3)
    {
      if (!a7)
        return 0;
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v20 = sub_1000D2A94(v19, a7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return 0;
    }
    else if (a7)
    {
      return 0;
    }
    if (a4)
    {
      if (a8)
      {
        swift_bridgeObjectRetain();
        v21 = swift_bridgeObjectRetain();
        v22 = sub_1000D2AA8(v21, a8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1001C4E38@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v2;
  a1[1] = (uint64_t)v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1001C41C8(v2, v3);
}

uint64_t sub_1001C4E4C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = (void *)v1[5];
  v3 = (void *)v1[6];
  v5 = v1[7];
  v4 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C4E8C(uint64_t a1)
{
  return LibraryModelRequest.mediaPlayerRequest()(a1);
}

unint64_t sub_1001C4EE4(uint64_t a1)
{
  return static LibraryModelRequest.label.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

BOOL sub_1001C4EF0(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.__derived_struct_equals(_:_:)(a1, a2);
}

void *LibraryContentConfiguration.kind.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

uint64_t Gradient.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C4F28(uint64_t a1, uint64_t a2)
{
  return static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t LibraryContentConfiguration<>.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return 0;
}

uint64_t sub_1001C500C(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a1);
}

uint64_t sub_1001C501C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001C5048(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001C5074(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001C50A0(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 16);
  if (v2)
  {
    v3 = *(void **)(a1 + 8);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  }

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 144));
}

uint64_t sub_1001C511C(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  __int128 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a1 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = v4;
  if (v6)
  {
    v8 = *(void **)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v6;
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v9;
    v10 = v8;
    v11 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v12;
  }
  v13 = *(void **)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v15;
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 136);
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  v20 = v13;
  v21 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C5218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  __int128 v31;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v11 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v11)
    {
      v18 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v18;
      v19 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v20 = v18;
      v21 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    v23 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v23;
    goto LABEL_8;
  }
  if (!v11)
  {
    v22 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v9, v10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1 + 8, v22);
    goto LABEL_7;
  }
  v12 = *(void **)(a1 + 8);
  v13 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v13;
  v14 = v13;

  v15 = *(void **)(a2 + 16);
  v16 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v15;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v24 = *(void **)(a1 + 40);
  v25 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v25;
  v26 = v25;

  v27 = *(void **)(a2 + 48);
  v28 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v27;
  v29 = v27;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v31;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_1001C5410(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_1001C5444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v9 = *(void **)(a1 + 16);
  if (!v9)
    goto LABEL_5;
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    v12 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v7, v8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1 + 8, v12);
LABEL_5:
    v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    goto LABEL_6;
  }
  v11 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v15 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001C55A0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1001C55E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest);
}

uint64_t sub_1001C5658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C5694(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1001C56E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1001C5724(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1001C5780(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest.Filter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest.Filter);
}

uint64_t sub_1001C57E0(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *sub_1001C5818(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C5868(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_1001C58EC(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

void sub_1001C5940(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  void *v23;
  uint64_t AssociatedConformanceWitness;
  id v25;
  void (*v26)(uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSArray v35;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t (**v39)(_QWORD, _QWORD);
  void *v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  char *v43;
  uint64_t v44;
  NSArray v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t AssociatedTypeWitness;
  id v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;

  v53 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v48 = (char *)&v46 - v8;
  v9 = swift_getAssociatedTypeWitness(255, a3);
  v10 = type metadata accessor for Optional(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  v20 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  v55 = v3;
  v46 = v20;
  v20(a2, a3);
  v21 = *(_QWORD *)(v9 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v22 = v54(v19, 1, v9);
  v49 = v10;
  v47 = v11;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    v23 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v9, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v9);
  }
  v25 = v53;
  objc_msgSend(v53, "setSectionKind:", v23);

  v26 = v46;
  v46(a2, a3);
  v27 = v54(v17, 1, v9);
  v28 = v47;
  if (v27 == 1)
  {
    v29 = 0;
    v30 = v47;
    v31 = v49;
  }
  else
  {
    v32 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v9, v32);
    v30 = v21;
    v31 = v9;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  objc_msgSend(v25, "setSectionProperties:", v29);

  v26(a2, a3);
  if (v54(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v49);
  }
  else
  {
    v33 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 56))(v9, v33);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v9);
    if (v34)
    {
      sub_10000598C(0, (unint64_t *)&qword_1004BD010, NSSortDescriptor_ptr);
      v35.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  v35.super.isa = 0;
LABEL_12:
  objc_msgSend(v25, "setSectionSortDescriptors:", v35.super.isa);

  v36 = *(void (**)(uint64_t, uint64_t))(a3 + 64);
  v37 = v48;
  v36(a2, a3);
  v38 = AssociatedTypeWitness;
  v39 = (uint64_t (**)(_QWORD, _QWORD))swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.ItemConfiguration: ModelRequestContentConfiguration);
  v40 = (void *)v39[3](v38, v39);
  v41 = *(void (**)(char *, uint64_t))(v50 + 8);
  v41(v37, v38);
  objc_msgSend(v25, "setItemKind:", v40);

  v36(a2, a3);
  v42 = (void *)v39[4](v38, v39);
  v41(v37, v38);
  objc_msgSend(v25, "setItemProperties:", v42);

  v43 = v51;
  v36(a2, a3);
  v44 = v39[7](v38, v39);
  v41(v43, v38);
  if (v44)
  {
    sub_10000598C(0, (unint64_t *)&qword_1004BD010, NSSortDescriptor_ptr);
    v45.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v45.super.isa = 0;
  }
  objc_msgSend(v25, "setItemSortDescriptors:", v45.super.isa);

}

double sub_1001C5E58@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  double result;

  v8 = swift_allocObject(&unk_10047C7D8, 48, 7);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a3 + 16);
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_retain(a2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a3);
  ModelRequest.perform(_:_:)((uint64_t)sub_1001C64EC, v8, a3, WitnessTable, a4);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void ModelRequest.perform(_:_:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  id v17;
  _QWORD v18[5];
  _QWORD *v19;

  v10 = (_QWORD *)swift_allocObject(&unk_10047C788, 48, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 72);
  swift_retain(a2);
  v12 = swift_retain(v10);
  v13 = (void *)v11(a3, a4, v12);
  v18[4] = sub_1001C64C8;
  v19 = v10;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100021234;
  v18[3] = &unk_10047C7A0;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = v13;
  v17 = objc_msgSend(v16, "newOperationWithResponseHandler:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

  if (qword_1004B8DA0 != -1)
    swift_once(&qword_1004B8DA0, sub_1001C610C);
  -[objc_class addOperation:](ModelRequestQueue.super.isa, "addOperation:", v17);
  a5[3] = sub_10000598C(0, &qword_1004C16C8, NSOperation_ptr);
  a5[4] = &protocol witness table for NSOperation;
  swift_release(v10);

  *a5 = v17;
}

id static MPPropertySet.sectionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return v4;
}

id sub_1001C610C()
{
  id v0;
  NSString v1;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setName:", v1);

  objc_msgSend(v0, "setMaxConcurrentOperationCount:", 4);
  result = objc_msgSend(v0, "setQualityOfService:", 33);
  ModelRequestQueue.super.isa = (Class)v0;
  return result;
}

NSOperationQueue *ModelRequestQueue.unsafeMutableAddressor()
{
  if (qword_1004B8DA0 != -1)
    swift_once(&qword_1004B8DA0, sub_1001C610C);
  return &ModelRequestQueue;
}

void sub_1001C61E8(void *a1, uint64_t a2, void (*a3)(void *, uint64_t, uint64_t, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __C::_NSRange v15;
  CFRange v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;

  v7 = a2;
  if (!a1)
  {
    if (!a2)
    {
      v28 = sub_1001C652C();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v28, 0, 0);
      v26 = 0;
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      *(_BYTE *)(v29 + 16) = 2;
LABEL_8:
      v27 = 1;
      goto LABEL_9;
    }
LABEL_7:
    v30 = sub_1001C652C();
    v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v30, 0, 0);
    *(_QWORD *)v31 = v7;
    *(_QWORD *)(v31 + 8) = 0;
    *(_BYTE *)(v31 + 16) = 0;
    swift_errorRetain(v7);
    v7 = 0;
    v26 = 0;
    goto LABEL_8;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a6 + 8));
  v10 = swift_dynamicCastUnknownClass(a1, AssociatedTypeWitness);
  if (!v10)
  {
    if (!v7)
    {
      v39 = a1;
      v32 = sub_1000057B4(&qword_1004C16D0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v32);
      v34 = sub_100050D44((uint64_t)&v39, v32, WitnessTable);
      v36 = v35;
      v37 = sub_1001C652C();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v37, 0, 0);
      v26 = 0;
      *(_QWORD *)v38 = v34;
      *(_QWORD *)(v38 + 8) = v36;
      v27 = 1;
      *(_BYTE *)(v38 + 16) = 1;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  v11 = (void *)v10;
  v12 = sub_1000057B4(&qword_1004BD090);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1003C64D0;
  v14 = (void *)MPModelResponseDidInvalidateNotification;
  v15.location = MPModelResponseDidInvalidateNotification;
  v15.length = (Swift::Int)v11;
  v16 = CFRange.init(_:)(v15);
  *(_QWORD *)(v13 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v13 + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(v13 + 32) = v16;
  v17 = type metadata accessor for BindingRequestResponseInvalidation();
  v7 = swift_allocObject(v17, 41, 7);
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v7 + 40) = 0;
  v18 = swift_allocObject(&unk_10047C800, 24, 7);
  swift_weakInit(v18 + 16, v7);
  v19 = swift_allocObject(&unk_10047C828, 32, 7);
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = a1;
  v22 = v14;
  v23 = swift_bridgeObjectRetain();
  v24 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v23, 0, (uint64_t)sub_10015D02C, v19);
  v25 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v24;
  swift_release(v25);
  v26 = sub_1001C65C0();
  v27 = 0;
LABEL_9:
  a3(v11, v27, v7, v26);
  swift_unknownObjectRelease(v7);
  sub_10000FCC0(v11, v27);
}

uint64_t sub_1001C64A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001C64C8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C61E8(a1, a2, *(void (**)(void *, uint64_t, uint64_t, unint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001C64D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C64E4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001C64EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32);
  v7 = a1;
  v8 = a2 & 1;
  return v5(&v7, a3, a4);
}

unint64_t sub_1001C652C()
{
  unint64_t result;

  result = qword_1004C16D8;
  if (!qword_1004C16D8)
  {
    result = swift_getWitnessTable(&unk_1003D26C4, &type metadata for ModelRequestFailure);
    atomic_store(result, (unint64_t *)&qword_1004C16D8);
  }
  return result;
}

uint64_t sub_1001C6570()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C6594()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001C65C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BED90;
  if (!qword_1004BED90)
  {
    v1 = type metadata accessor for BindingRequestResponseInvalidation();
    result = swift_getWitnessTable(&protocol conformance descriptor for BindingRequestResponseInvalidation, v1);
    atomic_store(result, (unint64_t *)&qword_1004BED90);
  }
  return result;
}

uint64_t sub_1001C660C(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRetain();
  if (!a3)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for ModelRequestFailure(uint64_t a1)
{
  return sub_1001C663C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1001C663C(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  if (!a3)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s9MusicCore19ModelRequestFailureOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001C660C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001C660C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1001C663C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1001C663C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelRequestFailure(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelRequestFailure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001C67C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1001C67E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelRequestFailure()
{
  return &type metadata for ModelRequestFailure;
}

uint64_t static Request.label.getter(uint64_t a1)
{
  uint64_t MetatypeMetadata;

  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  return _typeName(_:qualified:)(MetatypeMetadata, 0);
}

double Request.performThenCompleteOnMain(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void (*v11)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v12;
  double result;

  v10 = (_QWORD *)swift_allocObject(&unk_10047C918, 48, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  v11 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(a5 + 32);
  v12 = swift_retain(a3);
  v11(a1, sub_1001C6BA0, v10, a4, a5, v12);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1001C68BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  char *v58;

  v49 = a4;
  v50 = a5;
  v51 = a2;
  v52 = a3;
  v53 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a7);
  v16 = sub_100009788((uint64_t *)&unk_1004BD690);
  v17 = type metadata accessor for Result(0, AssociatedTypeWitness, v16, &protocol self-conformance witness table for Error);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v21 = (char *)&v47 - v20;
  v22 = sub_1000851CC();
  v48 = static OS_dispatch_queue.main.getter(v22, v23, v24, v25, v26, v27, v28, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  v30 = *(unsigned __int8 *)(v18 + 80);
  v31 = (v30 + 48) & ~v30;
  v32 = (v19 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject(&unk_10047C980, v32 + 16, v30 | 7);
  *((_QWORD *)v33 + 2) = a6;
  *((_QWORD *)v33 + 3) = a7;
  v34 = v50;
  *((_QWORD *)v33 + 4) = v49;
  *((_QWORD *)v33 + 5) = v34;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v33[v31], v21, v17);
  v35 = &v33[v32];
  v37 = v51;
  v36 = v52;
  *(_QWORD *)v35 = v51;
  *((_QWORD *)v35 + 1) = v36;
  aBlock[4] = sub_1001C6D98;
  v58 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011FD0;
  aBlock[3] = &unk_10047C998;
  v38 = _Block_copy(aBlock);
  v39 = v58;
  swift_unknownObjectRetain(v37);
  swift_retain(v34);
  swift_release(v39);
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = _swiftEmptyArrayStorage;
  v41 = sub_1000DDAA4();
  v42 = sub_1000057B4(&qword_1004BCCD8);
  v43 = sub_1000CFDB8();
  v44 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v53, v41);
  v45 = (void *)v48;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v14, v55);
}

uint64_t sub_1001C6B7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001C6BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1001C68BC(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

id sub_1001C6BAC()
{
  id *v0;

  return objc_msgSend(*v0, "cancel");
}

uint64_t sub_1001C6BBC(uint64_t a1)
{
  return dispatch thunk of DispatchWorkItem.cancel()(a1);
}

uint64_t Array<A>.cancel()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t WitnessTable;
  _QWORD v6[6];

  v6[5] = a1;
  v6[2] = a2;
  v6[3] = a3;
  v3 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  return Sequence.forEach(_:)(sub_1001C6C48, v6, v3, WitnessTable);
}

uint64_t sub_1001C6C48()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001C6C7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.cancel()(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void sub_1001C6C90()
{
  Task.cancel()();
}

uint64_t sub_1001C6CA4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24));
  v2 = sub_100009788((uint64_t *)&unk_1004BD690);
  v3 = type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  swift_release(*(_QWORD *)(v0 + 40));
  if (swift_getEnumCaseMultiPayload(v0 + v6, v3) == 1)
    swift_errorRelease(*(_QWORD *)(v0 + v6));
  else
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v6, AssociatedTypeWitness);
  v8 = (v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v9, v5 | 7);
}

uint64_t sub_1001C6D98()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24));
  v2 = sub_100009788((uint64_t *)&unk_1004BD690);
  v3 = *(_QWORD *)(type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error)- 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, _QWORD, _QWORD))(v0 + 32))(v0 + v4, *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8));
}

uint64_t sub_1001C6E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001C6E3C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001C6E44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(v3, a1) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1[2] - 8) + 32))(a3, v3);
  v7 = a1[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, v3, v7);
  return swift_willThrowTypedImpl(a2, v7, a1[4]);
}

uint64_t *RequestResponse.Controller.__allocating_init(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = v1;
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v7 = sub_1001CA5E8(a1, v4, v5, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v7;
}

uint64_t *RequestResponse.Controller.init(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;

  v6 = *v4;
  v7 = sub_1001CA5E8(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 8))(a1);
  return v7;
}

uint64_t sub_1001C6F80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_getObjectType();
  swift_unknownObjectRetain(v1);
  RequestResponseInvalidatable.invalidate()();
  return swift_unknownObjectRelease(v1);
}

uint64_t property wrapper backing initializer of RequestResponse.Controller.revision(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v3;

  v1 = *a1;
  v3 = a1;
  return sub_10016C34C((uint64_t)&v3, v1);
}

double sub_1001C6FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_1003D27C0);
  v4 = swift_getKeyPath(&unk_1003D27F8);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_1003D27C0);
  v7 = swift_getKeyPath(&unk_1003D27F8);
  v9 = a1;
  swift_retain(v1);
  swift_retain(a1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_1001C75E0(v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_1001C7108(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  _BYTE v22[24];

  v2 = v1;
  v3 = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(a1);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v22[-v10 - 8];
  v12 = (uint64_t)v2 + *(_QWORD *)(v4 + 96);
  v13 = swift_beginAccess(v12, v22, 0, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v14(v11, v12, v5, v13);
  v15 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 8);
  LOBYTE(v3) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v3, v5, v15);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  if ((v3 & 1) == 0)
  {
    v17 = RequestResponse.Controller.revision.getter();
    sub_1001C6F80();
    v18 = swift_release(v17);
    v19 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 168));
    if (v19)
    {
      v14(v11, v19 + *(_QWORD *)(*(_QWORD *)v19 + 96), v5, v18);
      ((void (*)(char *, uint64_t, uint64_t))v14)(v9, v12, v5);
      swift_retain(v19);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v9, v5, v15);
      v16(v9, v5);
      v16(v11, v5);
      if ((v20 & 1) == 0)
        sub_1001C6F80();
      swift_release(v19);
    }
    sub_1001C7338();
  }
}

uint64_t RequestResponse.Controller.revision.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D27C0);
  v2 = swift_getKeyPath(&unk_1003D27F8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1001C7338()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v2, 0, 0);
  if (*v1 == 1)
    RequestResponse.Controller.setNeedsReload(_:)(0, 0);
}

uint64_t RequestResponse.Controller.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t RequestResponse.Controller.request.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1001CA850(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*RequestResponse.Controller.request.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 96);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_1001C74E4;
}

void sub_1001C74E4(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_1001CA850((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_1001CA850((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_1001C7590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_1001C75B8(_QWORD *a1)
{
  uint64_t v1;

  swift_retain(*a1);
  return sub_1001C6FFC(v1);
}

double sub_1001C75E0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *, uint64_t, __n128);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t WitnessTable;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  void (*v70)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v71;
  _QWORD v72[4];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  char v77[24];

  v2 = v1;
  v4 = *v1;
  v5 = RequestResponse.Controller.revision.getter();
  v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  if (v6 != *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 112)))
  {
    v8 = *(_QWORD *)(*v2 + 176);
    v9 = *(_QWORD *)((char *)v2 + v8);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v8));
      v11 = RequestResponse.Controller.revision.getter();
      swift_release(v9);
      v12 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 112));
      swift_release(v11);
      if (v12 >= v10)
      {
        v13 = *(_QWORD *)((char *)v2 + v8);
        *(_QWORD *)((char *)v2 + v8) = 0;
        swift_release(v13);
      }
    }
    v14 = *(_QWORD *)(*v2 + 168);
    v15 = *(_QWORD *)((char *)v2 + v14);
    if (v15)
    {
      v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v14));
      v17 = RequestResponse.Controller.revision.getter();
      swift_release(v15);
      v18 = *(_QWORD *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 112));
      swift_release(v17);
      if (v18 >= v16)
      {
        v19 = *(_QWORD *)((char *)v2 + v14);
        *(_QWORD *)((char *)v2 + v14) = 0;
        swift_release(v19);
      }
    }
    v20 = RequestResponse.Controller.revision.getter();
    v21 = (char *)v2 + *(_QWORD *)(*v2 + 120);
    swift_beginAccess(v21, v77, 0, 0);
    v22 = *(void (**)(_QWORD *, uint64_t, __n128))v21;
    if (*(_QWORD *)v21)
    {
      v23 = *((_QWORD *)v21 + 1);
      v24 = swift_retain(v23);
      v22(v2, v20, v24);
      sub_10000DCF8((uint64_t)v22, v23);
    }
    v25 = *(_QWORD *)(*(_QWORD *)v20 + 112);
    v26 = *(_QWORD *)(v20 + v25);
    v27 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 160));
    swift_beginAccess(v27, v76, 32, 0);
    v28 = *v27;
    v74 = v26;
    v30 = *(_QWORD *)(v4 + 80);
    v29 = *(_QWORD *)(v4 + 88);
    v32 = type metadata accessor for RequestResponse.Revision(255, v30, v29, v31);
    swift_getFunctionTypeMetadata2(67108866, v4, v32, (char *)&type metadata for () + 8);
    v33 = type metadata accessor for Array(0);
    Dictionary.subscript.getter(&v75, &v74, v28, &type metadata for Int, v33, &protocol witness table for Int);
    v34 = v75;
    if (v75)
    {
      v35 = swift_endAccess(v76);
      v76[0] = v34;
      __chkstk_darwin(v35);
      v72[2] = v2;
      v72[3] = v20;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v33);
      Sequence.forEach(_:)(sub_1001CAED8, v72, v33, WitnessTable);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess(v76);
    }
    v74 = *(_QWORD *)(v20 + v25);
    v75 = 0;
    swift_beginAccess(v27, v76, 33, 0);
    v37 = type metadata accessor for Dictionary(0, &type metadata for Int, v33, &protocol witness table for Int);
    Dictionary.subscript.setter(&v75, &v74, v37);
    swift_endAccess(v76);
    v38 = RequestResponse.Controller.revision.getter();
    v39 = (_QWORD *)(v38 + *(_QWORD *)(*(_QWORD *)v38 + 120));
    v40 = *v39;
    v41 = v39[1];
    swift_unknownObjectRetain(*v39);
    swift_release(v38);
    ObjectType = swift_getObjectType();
    LOBYTE(v38) = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 40))(ObjectType, v41);
    swift_unknownObjectRelease(v40);
    if ((v38 & 1) != 0)
    {
      if (qword_1004B8DA8 != -1)
        swift_once(&qword_1004B8DA8, sub_1001CA3AC);
      v43 = type metadata accessor for Logger(0);
      v44 = sub_100039D34(v43, (uint64_t)qword_1004C16E0);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v73 = v25;
        v49 = v48;
        v76[0] = v48;
        *(_DWORD *)v47 = 136446210;
        v50 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29);
        *(_QWORD *)(v47 + 4) = sub_1000393D0(v50, v51, v76);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "╭ %{public}s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
        v52 = v49;
        v25 = v73;
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v47, -1, -1);
      }

      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "╞ 🔄 Invalid", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
      }

      swift_retain(v20);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(12, -1);
        *(_DWORD *)v60 = 134349056;
        *(_QWORD *)(v60 + 4) = *(_QWORD *)(v20 + v25);
        swift_release(v20);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "╰ RevisionID=%{public}ld", (uint8_t *)v60, 0xCu);
        swift_slowDealloc(v60, -1, -1);

      }
      else
      {

        swift_release(v20);
      }
      sub_1001C7338();
    }
    else
    {
      v61 = RequestResponse.Controller.revision.getter();
      v62 = *(_QWORD *)(v61 + *(_QWORD *)(*(_QWORD *)v61 + 112));
      swift_release(v61);
      v63 = RequestResponse.Controller.revision.getter();
      v64 = (_QWORD *)(v63 + *(_QWORD *)(*(_QWORD *)v63 + 120));
      v65 = *v64;
      v66 = v64[1];
      swift_unknownObjectRetain(*v64);
      swift_release(v63);
      v67 = swift_getObjectType();
      v68 = swift_allocObject(&unk_10047CD38, 24, 7);
      swift_weakInit(v68 + 16, v2);
      v69 = (_QWORD *)swift_allocObject(&unk_10047CDB0, 48, 7);
      v69[2] = v30;
      v69[3] = v29;
      v69[4] = v68;
      v69[5] = v62;
      v70 = *(void (**)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(v66 + 24);
      v71 = swift_retain(v68);
      v70(sub_1001CAF3C, v69, v67, v66, v71);
      swift_unknownObjectRelease(v65);
      swift_release(v68);
    }
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double sub_1001C7C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  char v50[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v50, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v14 = Strong;
    v15 = RequestResponse.Controller.revision.getter();
    v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
    swift_release(v15);
    if (v16 == a4)
    {
      v48 = a2;
      if (qword_1004B8DA8 != -1)
        swift_once(&qword_1004B8DA8, sub_1001CA3AC);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100039D34(v17, (uint64_t)qword_1004C16E0);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v47 = a1;
        v21 = swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v49[0] = v22;
        *(_DWORD *)v21 = 136446210;
        v23 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
        *(_QWORD *)(v21 + 4) = sub_1000393D0(v23, v24, v49);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "╭ %{public}s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        v25 = v21;
        a1 = v47;
        swift_slowDealloc(v25, -1, -1);
      }

      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "╞ 🔄 Invalidated", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc(12, -1);
        *(_DWORD *)v33 = 134349056;
        *(_QWORD *)(v33 + 4) = a4;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "╞ RevisionID=%{public}ld", (uint8_t *)v33, 0xCu);
        swift_slowDealloc(v33, -1, -1);
      }

      v35 = swift_unknownObjectRetain_n(a1, 2, v34);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v49[0] = v39;
        *(_DWORD *)v38 = 136446210;
        ObjectType = swift_getObjectType();
        v41 = (char *)dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, *(_QWORD *)(v48 + 8));
        *(_QWORD *)(v38 + 4) = sub_1000393D0(v41, v42, v49);
        swift_unknownObjectRelease_n(a1, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "╰ Invalidator=%{public}s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a1, 2);
      }
      v43 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 128);
      swift_beginAccess(v43, v49, 0, 0);
      v44 = *(void (**)(uint64_t, uint64_t))v43;
      if (*(_QWORD *)v43)
      {
        v45 = *(_QWORD *)(v43 + 8);
        swift_retain(v45);
        v46 = RequestResponse.Controller.revision.getter();
        v44(v14, v46);
        sub_10000DCF8((uint64_t)v44, v45);
        swift_release(v46);
      }
      sub_1001C7338();
    }
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t RequestResponse.Controller.$revision.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 104), v6, 33, 0);
  v3 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v4 = type metadata accessor for Published(0, v3);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t RequestResponse.Controller.willReloadRequest.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10000DCE8(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.willReloadRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10000DCF8(v6, v7);
}

uint64_t (*RequestResponse.Controller.willReloadRequest.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t RequestResponse.Controller.didApplyRevision.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10000DCE8(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.didApplyRevision.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10000DCF8(v6, v7);
}

uint64_t (*RequestResponse.Controller.didApplyRevision.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10000DCE8(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10000DCF8(v6, v7);
}

uint64_t (*RequestResponse.Controller.revisionDidInvalidate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_1001C83D8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  _BYTE v13[24];

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v13, 0, 0);
  if (*v4 != v3)
  {
    v5 = RequestResponse.Controller.revision.getter();
    v6 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120));
    v7 = *v6;
    v8 = v6[1];
    swift_unknownObjectRetain(*v6);
    swift_release(v5);
    ObjectType = swift_getObjectType();
    LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
    swift_unknownObjectRelease(v7);
    if ((v5 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)v2 + 168);
      v11 = *(_QWORD *)(v2 + v10);
      if (!v11
        || (swift_retain(*(_QWORD *)(v2 + v10)),
            v12 = RequestResponse.Revision.isValid.getter(),
            swift_release(v11),
            !v12))
      {
        sub_1001C7338();
      }
    }
  }
}

BOOL RequestResponse.Revision.isValid.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v3 = *v1;
  v2 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain(v3);
  LOBYTE(v2) = v5(ObjectType, v2);
  swift_unknownObjectRelease(v3);
  return (v2 & 1) == 0;
}

uint64_t RequestResponse.Controller.isAutomaticReloadingEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

void RequestResponse.Controller.isAutomaticReloadingEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_1001C83D8(v4);
}

void (*RequestResponse.Controller.isAutomaticReloadingEnabled.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_1001C862C;
}

void sub_1001C862C(uint64_t a1, uint64_t a2)
{
  sub_1001C87F4(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isAutomaticReloadingEnabled.setter);
}

double sub_1001C8638(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  *(_QWORD *)&result = swift_beginAccess(v3, v9, 0, 0).n128_u64[0];
  if ((*v3 & 1) == 0 && (a1 & 1) != 0)
  {
    v5 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
    if (v5)
    {
      v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
      swift_retain(v5);
      v7 = RequestResponse.Controller.revision.getter();
      v8 = *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 112));
      swift_release(v7);
      if (v8 >= v6)
        *(_QWORD *)&result = swift_release(v5).n128_u64[0];
      else
        return sub_1001C6FFC(v5);
    }
  }
  return result;
}

uint64_t RequestResponse.Controller.isPaused.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

double RequestResponse.Controller.isPaused.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v6[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return sub_1001C8638(v4);
}

void (*RequestResponse.Controller.isPaused.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_1001C87E8;
}

void sub_1001C87E8(uint64_t a1, uint64_t a2)
{
  sub_1001C87F4(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isPaused.setter);
}

void sub_1001C87F4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  free(v3);
}

uint64_t RequestResponse.Controller.setNeedsReload(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t aBlock[5];
  uint64_t v75;

  v3 = v2;
  v6 = *(_QWORD **)v3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v6[10];
  v15 = *(_QWORD *)(v14 - 8);
  result = __chkstk_darwin(v11);
  v18 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v6;
  if (a1)
  {
    v20 = (_QWORD *)swift_allocObject(&unk_10047CA00, 48, 7);
    v20[2] = v14;
    v21 = v6[11];
    v20[3] = v21;
    v20[4] = a1;
    v20[5] = a2;
    v73[0] = sub_1001CA97C;
    v73[1] = v20;
    swift_beginAccess(v3 + v6[19], aBlock, 33, 0);
    v23 = type metadata accessor for RequestResponse.Revision(255, v14, v21, v22);
    swift_getFunctionTypeMetadata2(67108866, v6, v23, (char *)&type metadata for () + 8);
    v24 = type metadata accessor for Array(0);
    swift_retain(a2);
    Array.append(_:)(v73, v24);
    result = swift_endAccess(aBlock);
    v19 = *(_QWORD **)v3;
  }
  v25 = v19[23];
  if ((*(_BYTE *)(v3 + v25) & 1) == 0)
  {
    *(_BYTE *)(v3 + v25) = 1;
    v26 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168));
    if (v26)
    {
      v27 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
      v28 = swift_beginAccess(v27, v73, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v27, v14, v28);
      v29 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 96);
      v30 = v6[11];
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v30 + 40);
      v32 = swift_retain(v26);
      LOBYTE(v29) = v31(v29, v14, v30, v32);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      if ((v29 & 1) != 0)
      {
        if (qword_1004B8DA8 != -1)
          swift_once(&qword_1004B8DA8, sub_1001CA3AC);
        v33 = type metadata accessor for Logger(0);
        v34 = sub_100039D34(v33, (uint64_t)qword_1004C16E0);
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc(12, -1);
          v67[1] = v34;
          v38 = v37;
          v67[0] = swift_slowAlloc(32, -1);
          aBlock[0] = v67[0];
          *(_DWORD *)v38 = 136446210;
          v39 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v14, v30);
          *(_QWORD *)(v38 + 4) = sub_1000393D0(v39, v40, aBlock);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "╭ %{public}s", (uint8_t *)v38, 0xCu);
          v41 = v67[0];
          swift_arrayDestroy(v67[0], 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v38, -1, -1);
        }

        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v45 = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "╞ 🛑 Cancelled", v45, 2u);
          swift_slowDealloc(v45, -1, -1);
        }

        swift_retain(v26);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc(12, -1);
          *(_DWORD *)v49 = 134349056;
          *(_QWORD *)(v49 + 4) = *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 112));
          swift_release(v26);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "╰ RevisionID=%{public}ld", (uint8_t *)v49, 0xCu);
          swift_slowDealloc(v49, -1, -1);

        }
        else
        {

          swift_release(v26);
        }
        v50 = *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 112));
        swift_beginAccess(v3 + *(_QWORD *)(*(_QWORD *)v3 + 192), aBlock, 33, 0);
        sub_100152D98(&v72, v50);
        swift_endAccess(aBlock);
        sub_1001C6F80();
      }
      swift_release(v26);
    }
    v51 = sub_1000851CC();
    v59 = (void *)static OS_dispatch_queue.main.getter(v51, v52, v53, v54, v55, v56, v57, v58);
    aBlock[4] = (uint64_t)sub_1001CA93C;
    v75 = v3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100011FD0;
    aBlock[3] = (uint64_t)&unk_10047C9C8;
    v60 = _Block_copy(aBlock);
    v61 = v75;
    swift_retain(v3);
    swift_release(v61);
    static DispatchQoS.unspecified.getter(v62);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v63 = sub_100004D8C((unint64_t *)&qword_1004BE650, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v64 = sub_1000057B4(&qword_1004BCCD8);
    v65 = sub_1000CFDB8();
    v66 = v71;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v64, v65, v71, v63);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v60);
    _Block_release(v60);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v66);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v13, v69);
  }
  return result;
}

uint64_t sub_1001C8E10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t FunctionTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t, __n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  void (*v64)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t WitnessTable;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _QWORD v85[5];
  uint64_t v86[5];
  char v87[24];
  char v88[24];
  char v89[24];

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(uint64_t **)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v74 - v10;
  result = __chkstk_darwin(v9);
  v82 = (uint64_t)&v74 - v13;
  v14 = *(_QWORD *)(v3 + 184);
  if (*((_BYTE *)v1 + v14) != 1)
    return result;
  *((_BYTE *)v1 + v14) = 0;
  v15 = *v1;
  v79 = *(_QWORD *)(*v1 + 168);
  v16 = *(uint64_t *)((char *)v1 + v79);
  if (v16 || (v16 = *(uint64_t *)((char *)v1 + *(_QWORD *)(v15 + 176))) != 0)
  {
    v17 = *(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 112));
    v18 = v17 + 1;
    if (!__OFADD__(v17, 1))
      goto LABEL_5;
  }
  else
  {
    v72 = RequestResponse.Controller.revision.getter();
    v73 = *(_QWORD *)(v72 + *(_QWORD *)(*(_QWORD *)v72 + 112));
    swift_release(v72);
    v18 = v73 + 1;
    if (!__OFADD__(v73, 1))
    {
LABEL_5:
      v75 = v8;
      v19 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
      v20 = swift_beginAccess(v19, v89, 0, 0);
      v77 = v5;
      v76 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v5[2];
      v76(v82, v19, v4, v20);
      v21 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
      swift_beginAccess(v21, v88, 1, 0);
      v85[0] = *v21;
      v81 = v18;
      *(_QWORD *)&v83 = v18;
      swift_beginAccess((char *)v2 + *(_QWORD *)(*v2 + 160), v86, 33, 0);
      v80 = *(_QWORD *)(v3 + 88);
      v23 = type metadata accessor for RequestResponse.Revision(255, v4, v80, v22);
      FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v3, v23, (char *)&type metadata for () + 8);
      v25 = type metadata accessor for Array(255);
      v26 = type metadata accessor for Dictionary(0, &type metadata for Int, v25, &protocol witness table for Int);
      swift_bridgeObjectRetain();
      Dictionary.subscript.setter(v85, &v83, v26);
      swift_endAccess(v86);
      *v21 = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
      swift_bridgeObjectRelease();
      v27 = (uint64_t)v2 + *(_QWORD *)(*v2 + 112);
      swift_beginAccess(v27, v87, 0, 0);
      v28 = *(void (**)(uint64_t *, uint64_t, __n128))v27;
      if (*(_QWORD *)v27)
      {
        v29 = *(_QWORD *)(v27 + 8);
        v30 = swift_retain(v29);
        v28(v2, v82, v30);
        sub_10000DCF8((uint64_t)v28, v29);
      }
      v31 = swift_checkMetadataState(0, v23);
      swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      v5 = sub_1001CA42C(v81, v82);
      v32 = *(uint64_t *)((char *)v2 + v79);
      *(uint64_t *)((char *)v2 + v79) = (uint64_t)v5;
      swift_retain(v5);
      swift_release(v32);
      if (qword_1004B8DA8 == -1)
        goto LABEL_8;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_once(&qword_1004B8DA8, sub_1001CA3AC);
LABEL_8:
  v33 = type metadata accessor for Logger(0);
  v34 = sub_100039D34(v33, (uint64_t)qword_1004C16E0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter();
  v37 = os_log_type_enabled(v35, v36);
  v78 = v5;
  if (v37)
  {
    v38 = swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v86[0] = v39;
    *(_DWORD *)v38 = 136446210;
    v40 = (char *)(*(uint64_t (**)(uint64_t))(v80 + 24))(v4);
    *(_QWORD *)(v38 + 4) = sub_1000393D0(v40, v41, v86);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "╭ %{public}s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }

  v42 = (uint64_t (*)(char *, uint64_t, uint64_t))v76;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "╞ 🕺Performing", v46, 2u);
    swift_slowDealloc(v46, -1, -1);
  }

  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc(12, -1);
    *(_DWORD *)v50 = 134349056;
    *(_QWORD *)(v50 + 4) = v81;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "╞ RevisionID=%{public}ld", (uint8_t *)v50, 0xCu);
    swift_slowDealloc(v50, -1, -1);
  }

  v51 = v42(v11, v82, v4);
  v52 = Logger.logObject.getter(v51);
  v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc(12, -1);
    v55 = swift_slowAlloc(32, -1);
    v86[0] = v55;
    *(_DWORD *)v54 = 136446210;
    v56 = v75;
    v42(v75, (uint64_t)v11, v4);
    v57 = (char *)String.init<A>(describing:)(v56, v4);
    *(_QWORD *)(v54 + 4) = sub_1000393D0(v57, v58, v86);
    swift_bridgeObjectRelease();
    v77 = (uint64_t *)v77[1];
    ((void (*)(char *, uint64_t))v77)(v11, v4);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "╰ Request=%{public}s", (uint8_t *)v54, 0xCu);
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v54, -1, -1);
  }
  else
  {
    v77 = (uint64_t *)v77[1];
    ((void (*)(char *, uint64_t))v77)(v11, v4);
  }

  v59 = RequestResponse.Controller.revision.getter();
  v60 = swift_allocObject(&unk_10047CD38, 24, 7);
  swift_weakInit(v60 + 16, v2);
  v61 = (_QWORD *)swift_allocObject(&unk_10047CD60, 40, 7);
  v62 = v78;
  v61[2] = v78;
  v61[3] = v60;
  v61[4] = v81;
  v63 = v80;
  v64 = *(void (**)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(v80 + 32);
  swift_retain(v62);
  v65 = swift_retain(v60);
  v64(v86, v59, sub_1001CAE0C, v61, v4, v63, v65);
  swift_release(v59);
  swift_release(v60);
  swift_release(v61);
  sub_1001CAE18((uint64_t)v86, (uint64_t)&v83);
  if (v84)
  {
    sub_100033620(&v83, (uint64_t)v85);
    v67 = *(uint64_t **)((char *)v2 + v79);
    if (v67 && *(uint64_t *)((char *)v67 + *(_QWORD *)(*v67 + 112)) == v81)
    {
      v68 = type metadata accessor for RequestResponse.Controller.TaskInvalidator(0, v4, v80, v66);
      sub_1000444A8((uint64_t)v85, (uint64_t)&v83);
      v69 = swift_allocObject(v68, 80, 7);
      *(_BYTE *)(v69 + 56) = 0;
      *(_QWORD *)(v69 + 64) = 0;
      *(_QWORD *)(v69 + 72) = 0;
      sub_100033620(&v83, v69 + 16);
      WitnessTable = swift_getWitnessTable(&unk_1003D29B8, v68);
      swift_retain(v67);
      sub_1001C9A44(v69, WitnessTable);
      swift_release(v78);
      v71 = v67;
    }
    else
    {
      v71 = v78;
    }
    swift_release(v71);
    sub_10000970C(v85);
    sub_1001CAE60((uint64_t)v86);
    return ((uint64_t (*)(uint64_t, uint64_t))v77)(v82, v4);
  }
  else
  {
    swift_release(v62);
    sub_1001CAE60((uint64_t)v86);
    ((void (*)(uint64_t, uint64_t))v77)(v82, v4);
    return sub_1001CAE60((uint64_t)&v83);
  }
}

uint64_t sub_1001C9694(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 80, 7);
  *(_BYTE *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  sub_100033620(a1, v3 + 16);
  return v3;
}

uint64_t sub_1001C96DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 56) == 1 && (result & 1) == 0)
  {
    v2 = *(_QWORD *)(v1 + 40);
    v3 = *(_QWORD *)(v1 + 48);
    sub_1000096A0((_QWORD *)(v1 + 16), v2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  }
  return result;
}

uint64_t sub_1001C9730(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v1 + 56) = a1;
  return sub_1001C96DC(v2);
}

uint64_t sub_1001C9740()
{
  _QWORD *v0;

  sub_10000970C(v0 + 2);
  sub_10000DCF8(v0[8], v0[9]);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1001C976C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 64, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 64);
  sub_10000DCE8(v1, *(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t sub_1001C97B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 64, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return sub_10000DCF8(v5, v6);
}

uint64_t (*sub_1001C9808(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t Lyrics.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t (*sub_1001C9850(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 56);
  return sub_1001C986C;
}

uint64_t sub_1001C986C(uint64_t a1)
{
  return sub_1001C9730(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1001C9890(uint64_t a1)
{
  return sub_1001CAC98(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

double sub_1001C989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double result;
  _BYTE v21[24];

  v12 = *a4;
  v13 = (uint64_t)a4 + *(_QWORD *)(*a4 + 104);
  swift_beginAccess(v13, v21, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v12 + 88));
  v15 = sub_100009788((uint64_t *)&unk_1004BD690);
  v16 = type metadata accessor for Result(0, AssociatedTypeWitness, v15, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v13, a1, v16);
  swift_endAccess(v21);
  if (a2)
  {
    v17 = a2;
  }
  else
  {
    v18 = type metadata accessor for GenericRequestResponseInvalidation();
    v17 = swift_allocObject(v18, 49, 7);
    *(_QWORD *)(v17 + 32) = 0;
    *(_QWORD *)(v17 + 40) = 0;
    *(_BYTE *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 16) = 0x636972656E6547;
    *(_QWORD *)(v17 + 24) = 0xE700000000000000;
    a3 = sub_100004D8C(qword_1004C1880, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  }
  swift_unknownObjectRetain(a2);
  sub_1001C9A44(v17, a3);
  sub_1000851CC();
  v19 = (_QWORD *)swift_allocObject(&unk_10047CD88, 40, 7);
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a4;
  swift_retain(a5);
  swift_retain(a4);
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_1001CAECC, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1001C9A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  v5 = *v4;
  v6 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  swift_unknownObjectRetain(a1);
  sub_1001CA248(v5, v6);
  swift_unknownObjectRelease(v5);
  return swift_unknownObjectRelease(a1);
}

double sub_1001C9A98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  const char *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  _BYTE v43[24];

  v5 = *a3;
  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v43, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    if (qword_1004B8DA8 != -1)
      swift_once(&qword_1004B8DA8, sub_1001CA3AC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100039D34(v10, (uint64_t)qword_1004C16E0);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v42[0] = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = (char *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v5 + 88) + 24))(*(_QWORD *)(v5 + 80));
      *(_QWORD *)(v14 + 4) = sub_1000393D0(v16, v17, v42);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "╭ %{public}s", (uint8_t *)v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "╞ ✅ Finished Loading", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(12, -1);
      *(_DWORD *)v25 = 134349056;
      *(_QWORD *)(v25 + 4) = a2;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "╞ RevisionID=%{public}ld", (uint8_t *)v25, 0xCu);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = *(uint64_t *)((char *)a3 + *(_QWORD *)(*a3 + 112));
    swift_beginAccess(v9 + *(_QWORD *)(*(_QWORD *)v9 + 192), v42, 33, 0);
    sub_10010EE5C(v26);
    v28 = v27;
    v29 = swift_endAccess(v42);
    if ((v28 & 1) == 0)
    {
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        v33 = "╰ ⏭ Skipping revision; Cancelled";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v30, v31, v33, v32, 2u);
        swift_slowDealloc(v32, -1, -1);
        swift_release(v9);

        return result;
      }
      goto LABEL_25;
    }
    v34 = (_BYTE *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 144));
    swift_beginAccess(v34, v42, 0, 0);
    if (*v34 == 1)
    {
      v35 = *(_QWORD *)(*(_QWORD *)v9 + 176);
      v36 = *(_QWORD *)(v9 + v35);
      if (v36)
      {
        if (*(_QWORD *)(v36 + *(_QWORD *)(*(_QWORD *)v36 + 112)) >= a2)
          goto LABEL_26;
        goto LABEL_22;
      }
      if (a2 > 0)
      {
        v36 = 0;
LABEL_22:
        *(_QWORD *)(v9 + v35) = a3;
        swift_release(v36);
        swift_retain(a3);
        v30 = Logger.logObject.getter(v41);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          v33 = "╰ 💤 Set as Pending; RRC is Paused";
          goto LABEL_24;
        }
LABEL_25:

      }
    }
    else
    {
      v37 = RequestResponse.Controller.revision.getter();
      v38 = *(_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 112));
      swift_release(v37);
      if (v38 < v26)
      {
        swift_retain(a3);
        sub_1001C6FFC(v39);
        v30 = Logger.logObject.getter(v40);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          v33 = "╰ 👌 Applied";
          goto LABEL_24;
        }
        goto LABEL_25;
      }
    }
LABEL_26:
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t *RequestResponse.Controller.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), v2);
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v5 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(v1 + 88), v4);
  v6 = type metadata accessor for Published(0, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  sub_10000DCF8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112) + 8));
  sub_10000DCF8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120) + 8));
  sub_10000DCF8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 168)));
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 176)));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RequestResponse.Controller.__deallocating_deinit()
{
  return sub_10019ED00((void (*)(void))RequestResponse.Controller.deinit);
}

uint64_t RequestResponse.Revision.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t RequestResponse.Revision.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 104);
  swift_beginAccess(v4, v9, 0, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v3 + 88));
  v6 = sub_100009788((uint64_t *)&unk_1004BD690);
  v7 = type metadata accessor for Result(0, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t RequestResponse.Revision.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v1 + 88));
  v5 = sub_100009788((uint64_t *)&unk_1004BD690);
  v6 = (_QWORD *)type metadata accessor for Result(0, AssociatedTypeWitness, v5, &protocol self-conformance witness table for Error);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - v8;
  v10 = (uint64_t)v1 + *(_QWORD *)(v3 + 104);
  v11 = swift_beginAccess(v10, v15, 0, 0);
  (*(void (**)(char *, uint64_t, _QWORD *, __n128))(v7 + 16))(v9, v10, v6, v11);
  sub_1001C6E44(v6, (uint64_t)&v14, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 0, 1, AssociatedTypeWitness);
}

BOOL RequestResponse.Revision.isInitial.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)) == 0;
}

uint64_t RequestResponse.Revision.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_1001CA248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2);
  if ((result & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
    swift_getObjectType();
    swift_unknownObjectRetain(v6);
    RequestResponseInvalidatable.invalidate()();
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t *RequestResponse.Revision.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), *(_QWORD *)(*v0 + 80));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v1 + 88));
  v4 = sub_100009788((uint64_t *)&unk_1004BD690);
  v5 = type metadata accessor for Result(0, AssociatedTypeWitness, v4, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_unknownObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  return v0;
}

uint64_t RequestResponse.Revision.__deallocating_deinit()
{
  return sub_10019ED00((void (*)(void))RequestResponse.Revision.deinit);
}

void sub_1001CA394(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 112));
}

uint64_t sub_1001CA3AC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004C16E0);
  sub_100039D34(v0, (uint64_t)qword_1004C16E0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x5274736575716552, 0xEF65736E6F707365);
}

uint64_t *sub_1001CA42C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;

  v5 = *v2;
  v7 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(*v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6);
  v9 = sub_100009788((uint64_t *)&unk_1004BD690);
  v10 = type metadata accessor for Result(0, AssociatedTypeWitness, v9, &protocol self-conformance witness table for Error);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v22 - v12);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 112)) = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 96), a2, v7);
  v15 = type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(0, v7, v6, v14);
  WitnessTable = swift_getWitnessTable(&unk_1003D2A78, v15);
  *v13 = swift_allocError(v15, WitnessTable, 0, 0);
  swift_storeEnumTagMultiPayload(v13, v10, 1);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v11 + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 104), v13, v10);
  v17 = type metadata accessor for GenericRequestResponseInvalidation();
  v18 = swift_allocObject(v17, 49, 7);
  *(_QWORD *)(v18 + 32) = 0;
  *(_QWORD *)(v18 + 40) = 0;
  *(_BYTE *)(v18 + 48) = 0;
  *(_QWORD *)(v18 + 16) = 0x636972656E6547;
  *(_QWORD *)(v18 + 24) = 0xE700000000000000;
  v19 = sub_100004D8C(qword_1004C1880, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  v20 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  *v20 = v18;
  v20[1] = v19;
  return v2;
}

uint64_t *sub_1001CA5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t FunctionTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE v23[24];
  uint64_t *v24;

  v5 = v4;
  v7 = *v5;
  v8 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 112));
  *v8 = 0;
  v8[1] = 0;
  v9 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 120));
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 128));
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 136)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 144)) = 0;
  v11 = *(_QWORD *)(*v5 + 152);
  v12 = *(_QWORD *)(v7 + 80);
  v13 = type metadata accessor for RequestResponse.Revision(255, v12, *(_QWORD *)(v7 + 88), a4);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v7, v13, (char *)&type metadata for () + 8);
  *(uint64_t *)((char *)v5 + v11) = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
  v15 = *(_QWORD *)(*v5 + 160);
  v16 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v16, 0, 0);
  v18 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(uint64_t *)((char *)v5 + v15) = Dictionary.init(dictionaryLiteral:)(v18, &type metadata for Int, v16, &protocol witness table for Int);
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 168)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 176)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 184)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 192)) = (uint64_t)&_swiftEmptySetSingleton;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))((uint64_t)v5 + *(_QWORD *)(*v5 + 96), a1, v12);
  v19 = swift_checkMetadataState(0, v13);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_1001CA42C(0, a1);
  sub_1001C6F80();
  swift_beginAccess((char *)v5 + *(_QWORD *)(*v5 + 104), v23, 33, 0);
  v21 = *v20;
  v24 = v20;
  sub_10016C34C((uint64_t)&v24, v21);
  swift_endAccess(v23);
  return v5;
}

uint64_t sub_1001CA7E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_1001CA810(_QWORD *a1)
{
  uint64_t v1;

  swift_retain(*a1);
  return sub_1001C6FFC(v1);
}

uint64_t sub_1001CA838()
{
  return 16;
}

__n128 sub_1001CA844(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001CA850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 96);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_1001C7108((uint64_t)v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for RequestResponse.Revision(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision);
}

uint64_t sub_1001CA940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001CA950(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001CA958()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001CA97C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 32))(*a1, *a2);
}

void *sub_1001CA9A4()
{
  return &protocol witness table for Int;
}

uint64_t sub_1001CA9B0()
{
  return 16;
}

__n128 sub_1001CA9BC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001CA9C8()
{
  return RequestResponse.Controller.$revision.getter();
}

uint64_t sub_1001CA9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001CACF4(a1, a2, a3, a4);
}

uint64_t sub_1001CAA08()
{
  return 16;
}

__n128 sub_1001CAA14(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for RequestResponse()
{
  return &type metadata for RequestResponse;
}

uint64_t sub_1001CAA30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[13];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v4 = v2;
  if (v5 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v6 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(a1 + 88), v3);
    v7 = type metadata accessor for Published(319, v6);
    v4 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = &unk_1003D28B8;
      v10[3] = &unk_1003D28B8;
      v10[4] = &unk_1003D28B8;
      v10[5] = &unk_1003D28D0;
      v10[6] = &unk_1003D28D0;
      v10[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[9] = &unk_1003D28E8;
      v10[10] = &unk_1003D28E8;
      v10[11] = &unk_1003D28D0;
      v10[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      return swift_initClassMetadata2(a1, 0, 13, v10, a1 + 96);
    }
  }
  return v4;
}

uint64_t type metadata accessor for RequestResponse.Controller(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller);
}

uint64_t sub_1001CAB20(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "(";
  v2[1] = &unk_1003D28D0;
  v2[2] = &unk_1003D28B8;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t type metadata accessor for RequestResponse.Controller.TaskInvalidator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller.TaskInvalidator);
}

uint64_t sub_1001CAB80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88));
    v6 = sub_100009788((uint64_t *)&unk_1004BD690);
    v7 = type metadata accessor for Result(319, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
    v3 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[3] = &unk_1003D2978;
      return swift_initClassMetadata2(a1, 0, 4, v10, a1 + 96);
    }
  }
  return v3;
}

uint64_t sub_1001CAC6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&unk_1003D2990, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001CAC98(uint64_t a1, uint64_t a2)
{
  Swift::String v2;
  void *object;

  v2._countAndFlagsBits = (*(uint64_t (**)(void))(a2 + 24))();
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return 0x3A664F6B736154;
}

uint64_t sub_1001CACF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v6 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v7 = type metadata accessor for Published.Publisher(0, v6);
  __chkstk_darwin(v7);
  v9 = &v14[-v8 - 8];
  (*(void (**)(_BYTE *, uint64_t))(v10 + 16))(&v14[-v8 - 8], a1);
  swift_beginAccess(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v14, 33, 0);
  v11 = type metadata accessor for Published(0, v6);
  Published.projectedValue.setter(v9, v11);
  return swift_endAccess(v14);
}

uint64_t sub_1001CADBC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CADE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001CAE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001C989C(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1001CAE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004C1878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CAE60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004C1878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001CAEA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001CAECC()
{
  uint64_t v0;

  return sub_1001C9A98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001CAED8(uint64_t (**a1)(uint64_t *, uint64_t *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *a1;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v2;
  return v3(&v6, &v5);
}

uint64_t sub_1001CAF18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1001CAF3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001C7C40(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision.InitialResponseLoadingError);
}

uint64_t sub_1001CAF54(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001CAF94 + 4 * asc_1003D27B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001CAFB4 + 4 * byte_1003D27B5[v4]))();
}

_BYTE *sub_1001CAF94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001CAFB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001CAFBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001CAFC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001CAFCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001CAFD4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1001CAFE0(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1003D2A50, a1);
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v5 = swift_allocObject(&unk_10047CF08, 24, 7);
  swift_weakInit(v5 + 16, v4);
  v6 = swift_allocObject(&unk_10047CF30, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v7, 48, 7);
  v8 = swift_bridgeObjectRetain();
  v9 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v8, 0, (uint64_t)sub_10015D02C, v6);
  v10 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v9;
  swift_release(v10);
  return v4;
}

uint64_t GenericRequestResponseInvalidation.__allocating_init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 49, 7);
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

Swift::Void __swiftcall RequestResponseInvalidatable.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1;
  v4 = v0;
  if (((*(uint64_t (**)(void))(v1 + 40))() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(1, v4, v3);
    v5 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
    if (v5)
    {
      v7 = (uint64_t)v5;
      v8 = v6;
      v5(v2, v3);
      sub_10000DCF8(v7, v8);
    }
  }
}

uint64_t GenericRequestResponseInvalidation.init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  sub_10000DCE8(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 32, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_10000DCF8(v5, v6);
}

uint64_t (*CompoundRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t GenericRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 48, v4, 1, 0);
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*GenericRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10000DCF8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t GenericRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10000DCF8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t sub_1001CB378()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init()()
{
  uint64_t v0;

  swift_allocObject(v0, 48, 7);
  return sub_1001CC054((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_allocObject(v1, 48, 7);
  v3 = sub_1001CC054(a1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CompoundRequestResponseInvalidation.init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1001CC054(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.append(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _BYTE v19[24];

  if (result)
  {
    v3 = v2;
    v5 = result;
    ObjectType = swift_getObjectType();
    v7 = swift_allocObject(&unk_10047CF58, 24, 7);
    swift_weakInit(v7 + 16, v2);
    v8 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(a2 + 24);
    swift_unknownObjectRetain(v5);
    v9 = swift_retain(v7);
    v8(sub_1001CC28C, v7, ObjectType, a2, v9);
    swift_release(v7);
    v10 = *(_QWORD **)(v2 + 40);
    swift_unknownObjectRetain(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    *(_QWORD *)(v3 + 40) = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_10005ECE0(0, v10[2] + 1, 1, v10);
      *(_QWORD *)(v3 + 40) = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      v10 = sub_10005ECE0((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      *(_QWORD *)(v3 + 40) = v10;
    }
    v10[2] = v13 + 1;
    v14 = &v10[2 * v13];
    v14[4] = v5;
    v14[5] = a2;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2) & 1) != 0)
    {
      swift_beginAccess(v3 + 32, v19, 1, 0);
      if (*(_BYTE *)(v3 + 32) != 1)
      {
        *(_BYTE *)(v3 + 32) = 1;
        swift_beginAccess(v3 + 16, &v18, 0, 0);
        v15 = *(void (**)(uint64_t, uint64_t, __n128))(v3 + 16);
        if (v15)
        {
          v16 = *(_QWORD *)(v3 + 24);
          v17 = swift_retain(v16);
          v15(v5, a2, v17);
          sub_10000DCF8((uint64_t)v15, v16);
        }
      }
      return swift_unknownObjectRelease(v5);
    }
    else
    {
      return swift_unknownObjectRelease(v5);
    }
  }
  return result;
}

double sub_1001CB62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  uint64_t v10;
  __n128 v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    swift_beginAccess(Strong + 32, v13, 1, 0);
    if ((*(_BYTE *)(v8 + 32) & 1) == 0)
    {
      *(_BYTE *)(v8 + 32) = 1;
      swift_beginAccess(v8 + 16, v12, 0, 0);
      v9 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 16);
      if (v9)
      {
        v10 = *(_QWORD *)(v8 + 24);
        v11 = swift_retain(v10);
        v9(a1, a2, v11);
        sub_10000DCF8((uint64_t)v9, v10);
      }
    }
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall CompoundRequestResponseInvalidation.append(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void (*v9)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t, __n128);
  __n128 v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, unint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  void (**v18)(uint64_t, unint64_t, __n128);
  _BYTE *v19;
  __n128 v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v2 = *((_QWORD *)a1._rawValue + 2);
  if (v2)
  {
    v3 = v1;
    swift_bridgeObjectRetain();
    v19 = (_BYTE *)(v1 + 32);
    swift_beginAccess(v1 + 32, v22, 1, 0);
    v18 = (void (**)(uint64_t, unint64_t, __n128))(v1 + 16);
    swift_beginAccess(v1 + 16, v21, 0, 0);
    for (i = 0; i != v2; ++i)
    {
      v20 = *((__n128 *)a1._rawValue + i + 2);
      v6 = *((_QWORD *)a1._rawValue + 2 * i + 4);
      ObjectType = swift_getObjectType();
      v8 = swift_allocObject(&unk_10047CF58, 24, 7);
      swift_weakInit(v8 + 16, v3);
      v9 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t, __n128))(v20.n128_u64[1] + 24);
      swift_unknownObjectRetain_n(v6, 2, v20);
      v10 = swift_retain(v8);
      v9(sub_1001CC28C, v8, ObjectType, v20.n128_u64[1], v10);
      swift_release(v8);
      v11 = *(_QWORD **)(v3 + 40);
      swift_unknownObjectRetain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      *(_QWORD *)(v3 + 40) = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_10005ECE0(0, v11[2] + 1, 1, v11);
        *(_QWORD *)(v3 + 40) = v11;
      }
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        v11 = sub_10005ECE0((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
        *(_QWORD *)(v3 + 40) = v11;
      }
      v11[2] = v14 + 1;
      *(__n128 *)&v11[2 * v14 + 4] = v20;
      if (((*(uint64_t (**)(uint64_t, unint64_t))(v20.n128_u64[1] + 40))(ObjectType, v20.n128_u64[1]) & 1) != 0
        && (*v19 & 1) == 0)
      {
        *v19 = 1;
        v15 = *v18;
        if (*v18)
        {
          v16 = *(_QWORD *)(v3 + 24);
          v17 = swift_retain(v16);
          v15(v6, v20.n128_u64[1], v17);
          sub_10000DCF8((uint64_t)v15, v16);
        }
      }
      swift_unknownObjectRelease_n(v6, 2);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t CompoundRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 40), 2);
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      ObjectType = swift_getObjectType(v5);
      v7 = *(_QWORD *)(v4 + 8);
      swift_unknownObjectRetain(v5);
      v8 = dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, v7);
      v10 = v9;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = 124;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      swift_unknownObjectRelease(v5);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 93;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(0xEA00000000005B3ALL);
  return 0x646E756F706D6F43;
}

uint64_t CompoundRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t CompoundRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 32, v4, 1, 0);
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t CompoundRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  sub_10000DCF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CompoundRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;

  sub_10000DCF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1001CBB38()
{
  return CompoundRequestResponseInvalidation.debugDescription.getter();
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(trigger:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_1000057B4(&qword_1004BD090);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1003C64D0;
  sub_1000444A8((uint64_t)a1, v5 + 32);
  v6 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  v7 = swift_allocObject(&unk_10047CF08, 24, 7);
  swift_weakInit(v7 + 16, v6);
  v8 = swift_allocObject(&unk_10047CF80, 32, 7);
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v9, 48, 7);
  v10 = swift_bridgeObjectRetain();
  v11 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v10, 0, (uint64_t)sub_1001CC418, v8);
  v12 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v11;
  swift_release(v12);
  sub_10000970C(a1);
  return v6;
}

uint64_t BindingRequestResponseInvalidation.init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = swift_allocObject(&unk_10047CF08, 24, 7);
  swift_weakInit(v4 + 16, v2);
  v5 = swift_allocObject(&unk_10047CFA8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v6, 48, 7);
  v7 = swift_bridgeObjectRetain();
  v8 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v7, 0, (uint64_t)sub_1001CC418, v5);
  v9 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v8;
  swift_release(v9);
  return v2;
}

uint64_t sub_1001CBD30()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001CBD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 40, v11, 1, 0);
    if ((*(_BYTE *)(v5 + 40) & 1) == 0)
    {
      *(_BYTE *)(v5 + 40) = 1;
      swift_beginAccess(v5 + 24, v10, 0, 0);
      v6 = *(void (**)(uint64_t, uint64_t, __n128))(v5 + 24);
      if (v6)
      {
        v7 = *(_QWORD *)(v5 + 32);
        v8 = sub_1001CC3DC((unint64_t *)&qword_1004BED90, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
        v9 = swift_retain(v7);
        v6(v5, v8, v9);
        sub_10000DCF8((uint64_t)v6, v7);
      }
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t BindingRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = 0x3D676E69646E6942;
  v6 = 0xE800000000000000;
  v4 = *(_QWORD *)(v0 + 16);
  swift_retain(v4);
  v1 = sub_1000057B4(&qword_1004C1908);
  v2._countAndFlagsBits = String.init<A>(describing:)(&v4, v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t BindingRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t BindingRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 40, v4, 1, 0);
  *(_BYTE *)(v1 + 40) = a1;
  return result;
}

uint64_t (*BindingRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j_j__swift_endAccess;
}

_QWORD *BindingRequestResponseInvalidation.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_10000DCF8(v0[3], v0[4]);
  return v0;
}

uint64_t BindingRequestResponseInvalidation.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_10000DCF8(v0[3], v0[4]);
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t (*sub_1001CBFA0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1001CBFDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *v0;
  v6 = 0x3D676E69646E6942;
  v7 = 0xE800000000000000;
  v5 = *(_QWORD *)(v1 + 16);
  swift_retain(v5);
  v2 = sub_1000057B4(&qword_1004C1908);
  v3._countAndFlagsBits = String.init<A>(describing:)(&v5, v2);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001CC054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void (*v10)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t, __n128);
  __n128 v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, unint64_t, __n128);
  uint64_t v17;
  __n128 v18;
  void (**v20)(uint64_t, unint64_t, __n128);
  _BYTE *v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v3 = v1 + 16;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v21 = (_BYTE *)(v3 + 16);
    swift_beginAccess(v3 + 16, v24, 1, 0);
    v20 = (void (**)(uint64_t, unint64_t, __n128))v3;
    swift_beginAccess(v3, v23, 0, 0);
    for (i = 0; i != v4; ++i)
    {
      v22 = *(__n128 *)(a1 + 16 * i + 32);
      v7 = *(_QWORD *)(a1 + 16 * i + 32);
      ObjectType = swift_getObjectType();
      v9 = swift_allocObject(&unk_10047CF58, 24, 7);
      swift_weakInit(v9 + 16, v2);
      v10 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t, __n128))(v22.n128_u64[1] + 24);
      swift_unknownObjectRetain_n(v7, 2, v22);
      v11 = swift_retain(v9);
      v10(sub_1001CC28C, v9, ObjectType, v22.n128_u64[1], v11);
      swift_release(v9);
      v12 = *(_QWORD **)(v2 + 40);
      swift_unknownObjectRetain(v7);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      *(_QWORD *)(v2 + 40) = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_10005ECE0(0, v12[2] + 1, 1, v12);
        *(_QWORD *)(v2 + 40) = v12;
      }
      v15 = v12[2];
      v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        v12 = sub_10005ECE0((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
        *(_QWORD *)(v2 + 40) = v12;
      }
      v12[2] = v15 + 1;
      *(__n128 *)&v12[2 * v15 + 4] = v22;
      if (((*(uint64_t (**)(uint64_t, unint64_t))(v22.n128_u64[1] + 40))(ObjectType, v22.n128_u64[1]) & 1) != 0
        && (*v21 & 1) == 0)
      {
        *v21 = 1;
        v16 = *v20;
        if (*v20)
        {
          v17 = *(_QWORD *)(v2 + 24);
          v18 = swift_retain(v17);
          v16(v7, v22.n128_u64[1], v18);
          sub_10000DCF8((uint64_t)v16, v17);
        }
      }
      swift_unknownObjectRelease_n(v7, 2);
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

double sub_1001CC28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001CB62C(a1, a2, v2);
}

uint64_t sub_1001CC29C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CC2C8(uint64_t a1)
{
  uint64_t result;

  result = sub_1001CC3DC(&qword_1004C1910, type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for GenericRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34GenericRequestResponseInvalidation);
}

uint64_t sub_1001CC324(uint64_t a1)
{
  uint64_t result;

  result = sub_1001CC3DC(&qword_1004C1918, type metadata accessor for CompoundRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for CompoundRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CompoundRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore35CompoundRequestResponseInvalidation);
}

uint64_t sub_1001CC380(uint64_t a1)
{
  uint64_t result;

  result = sub_1001CC3DC(&qword_1004C1920, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for BindingRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34BindingRequestResponseInvalidation);
}

uint64_t sub_1001CC3DC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1001CC420(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000057B4(&qword_1004B99B0);
  v6 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000972D8(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v12(v5, v11, v2);
      swift_dynamicCast(v8, v5, v2, v18, 7);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_1000972D8(0, v10[2] + 1, 1);
        v10 = v19;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000972D8(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      v10[2] = v14 + 1;
      sub_10000FD10((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, &qword_1004B99B0);
      v11 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

_QWORD *sub_1001CC5E4(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  int *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100097380(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (int *)(a1 + 32);
    v5 = _swiftEmptyArrayStorage[2];
    do
    {
      v6 = *v4;
      v8 = result;
      v7 = result[3];
      if (v5 >= v7 >> 1)
      {
        sub_100097380((char *)(v7 > 1), v5 + 1, 1);
        result = v8;
      }
      result[2] = v5 + 1;
      *((_DWORD *)result + v5 + 8) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_1001CC6AC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_10000FCD4(v4, (uint64_t)v10);
      v5 = sub_1000057B4(&qword_1004BE080);
      v6 = swift_dynamicCast(&v11, v10, &type metadata for AnyHashable, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_1001CC790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CC7AC(a1, a2, a3, (uint64_t)&type metadata for () + 8);
}

uint64_t sub_1001CC7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CC7AC(a1, a2, a3, (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_1001CC7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_10000FE2C(a1, (uint64_t *)&unk_1004BFBC0);
    v10 = 7168;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v10, v17, a4, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v10 = v18 | 0x1C00;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
      goto LABEL_6;
  }
  v12 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v11);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v12);
  v16 = v15;
  swift_unknownObjectRelease(v11);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v10, v17, a4, a2, a3);
}

uint64_t sub_1001CC8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CC7AC(a1, a2, a3, (uint64_t)&type metadata for Bool);
}

uint64_t sub_1001CC8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000FE2C(a1, (uint64_t *)&unk_1004BFBC0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = sub_1000057B4(&qword_1004C06A8);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, v17, a2, a3);
}

uint64_t Logger.sharePlayTogether.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v0 = type metadata accessor for Logger(0);
  return sub_100039D34(v0, (uint64_t)static Logger.sharePlayTogether);
}

uint64_t static SharePlayTogetherSession.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v5 = *(_QWORD *)(v3 + 8);
  v6 = (_QWORD *)(a2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v7 = v6[1];
  if (v4 == *v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v6, v7, 0);
}

void *SharePlayTogetherSession.activityIdentifier.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.activityIdentifier;
}

unint64_t static SharePlayTogetherSession.activityIdentifier.getter()
{
  return 0xD000000000000017;
}

void *SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey;
}

unint64_t static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.getter()
{
  return 0xD000000000000024;
}

void *SharePlayTogetherSession.didShowDisplayNameAck.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.didShowDisplayNameAck;
}

unint64_t static SharePlayTogetherSession.didShowDisplayNameAck.getter()
{
  return 0xD000000000000026;
}

uint64_t SharePlayTogetherSession.isHost.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost);
}

uint64_t SharePlayTogetherSession.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

SEL *SharePlayTogetherSession.isPlaceholder.getter()
{
  return sub_1001CCB80((SEL *)&selRef_isPlaceholder);
}

SEL *SharePlayTogetherSession.canManageParticipants.getter()
{
  return sub_1001CCB80((SEL *)&selRef_canManageParticipants);
}

SEL *SharePlayTogetherSession.canHandleJoinRequests.getter()
{
  return sub_1001CCB80((SEL *)&selRef_canHandleJoinRequests);
}

SEL *sub_1001CCB80(SEL *result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session))
    return (SEL *)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session), *result);
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.title.getter()
{
  uint64_t v0;
  void *result;
  id v2;
  uint64_t v3;

  result = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v2 = objc_msgSend(result, "localizedSessionName");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SharePlayTogetherSession.joinToken.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "joinToken");
  __break(1u);
  return result;
}

uint64_t SharePlayTogetherSession.routeType.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, v3, 0, 0);
  return *v1;
}

uint64_t SharePlayTogetherSession.routeType.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*SharePlayTogetherSession.routeType.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.routeSymbolName(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return Published.init(initialValue:)(v3, &type metadata for String);
}

uint64_t SharePlayTogetherSession.routeSymbolName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D2C90);
  v2 = swift_getKeyPath(&unk_1003D2CB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001CCDB4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2C90);
  v5 = swift_getKeyPath(&unk_1003D2CB8);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_1001CCE30(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2C90);
  v6 = swift_getKeyPath(&unk_1003D2CB8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t SharePlayTogetherSession.routeSymbolName.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_1003D2C90);
  v6 = swift_getKeyPath(&unk_1003D2CB8);
  v8[0] = a1;
  v8[1] = a2;
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*SharePlayTogetherSession.routeSymbolName.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D2C90);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D2CB8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t SharePlayTogetherSession.$routeSymbolName.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1004C1B68);
}

uint64_t SharePlayTogetherSession.$routeSymbolName.setter(uint64_t a1)
{
  return sub_10017261C(a1, &qword_1004C1B70, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1004C1B68);
}

void (*SharePlayTogetherSession.$routeSymbolName.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1000057B4(&qword_1004C1B70);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1000057B4(&qword_1004C1B68);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100172394;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.participants(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_1000057B4(&qword_1004C1B78);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t SharePlayTogetherSession.participants.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v2 = swift_getKeyPath(&unk_1003D2D00);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001CD144(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v5 = swift_getKeyPath(&unk_1003D2D00);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001CD1C0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v5 = swift_getKeyPath(&unk_1003D2D00);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.participants.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v4 = swift_getKeyPath(&unk_1003D2D00);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*SharePlayTogetherSession.participants.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D2D00);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t SharePlayTogetherSession.$participants.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1004C1B88);
}

uint64_t SharePlayTogetherSession.$participants.setter(uint64_t a1)
{
  return sub_10017261C(a1, &qword_1004C1B90, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1004C1B88);
}

void (*SharePlayTogetherSession.$participants.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1000057B4(&qword_1004C1B90);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1000057B4(&qword_1004C1B88);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100172394;
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.getter()
{
  return sub_100191CC4((uint64_t)&unk_1003D2D20, (uint64_t)&unk_1003D2D48);
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_1001CD6E0(a1, (uint64_t)&unk_1003D2D20, (uint64_t)&unk_1003D2D48);
}

void (*SharePlayTogetherSession.connectedParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D2D20);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D2D48);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_1004C1BA0);
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_10017261C(a1, &qword_1004C26C0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_1004C1BA0);
}

void (*SharePlayTogetherSession.$connectedParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1000057B4(&qword_1004C26C0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1000057B4((uint64_t *)&unk_1004C1BA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100172394;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.pendingParticipantsCount(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Int);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.getter()
{
  return sub_100191CC4((uint64_t)&unk_1003D2D68, (uint64_t)&unk_1003D2D90);
}

void sub_1001CD5E4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2D68);
  v5 = swift_getKeyPath(&unk_1003D2D90);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001CD660(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2D68);
  v5 = swift_getKeyPath(&unk_1003D2D90);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_1001CD6E0(a1, (uint64_t)&unk_1003D2D68, (uint64_t)&unk_1003D2D90);
}

uint64_t sub_1001CD6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*SharePlayTogetherSession.pendingParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D2D68);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D2D90);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_1004C1BA0);
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_10017261C(a1, &qword_1004C26C0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_1004C1BA0);
}

void (*SharePlayTogetherSession.$pendingParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1000057B4(&qword_1004C26C0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1000057B4((uint64_t *)&unk_1004C1BA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100172394;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.host(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_1000057B4(&qword_1004C1BB8);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FEB4(a1, (uint64_t)v4, &qword_1004C1BB8);
  Published.init(initialValue:)(v4, v2);
  return sub_10000FE2C(a1, &qword_1004C1BB8);
}

double SharePlayTogetherSession.host.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_1003D2DB0);
  v4 = swift_getKeyPath(&unk_1003D2DD8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_1001CD9B8@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2DB0);
  v5 = swift_getKeyPath(&unk_1003D2DD8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1001CDA20(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_1000057B4(&qword_1004C1BB8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v14 - v8;
  sub_10000FEB4(a1, (uint64_t)&v14 - v8, &qword_1004C1BB8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2DB0);
  v12 = swift_getKeyPath(&unk_1003D2DD8);
  sub_10000FEB4((uint64_t)v9, (uint64_t)v7, &qword_1004C1BB8);
  static Published.subscript.setter(v7, v10, KeyPath, v12);
  return sub_10000FE2C((uint64_t)v9, &qword_1004C1BB8);
}

uint64_t SharePlayTogetherSession.host.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1000057B4(&qword_1004C1BB8);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1003D2DB0);
  v7 = swift_getKeyPath(&unk_1003D2DD8);
  sub_10000FEB4(a1, (uint64_t)v5, &qword_1004C1BB8);
  static Published.subscript.setter(v5, v1, KeyPath, v7);
  return sub_10000FE2C(a1, &qword_1004C1BB8);
}

void (*SharePlayTogetherSession.host.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D2DB0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1003D2DD8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100172298;
}

uint64_t SharePlayTogetherSession.$host.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_1004C1BC8);
}

uint64_t SharePlayTogetherSession.$host.setter(uint64_t a1)
{
  return sub_10017261C(a1, &qword_1004C1BD0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_1004C1BC8);
}

void (*SharePlayTogetherSession.$host.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1000057B4(&qword_1004C1BD0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1000057B4(&qword_1004C1BC8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100172394;
}

id SharePlayTogetherSession.qrCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  _QWORD v35[2];
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[5];

  v3 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v3);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 8);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 16);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 24);
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  if (v12)
  {
LABEL_8:
    result = sub_1001D2BC8(v9, v10, v11, v12);
    *a1 = v13;
    a1[1] = v14;
    a1[2] = v15;
    a1[3] = (uint64_t)v16;
    a1[4] = v17;
    return result;
  }
  v35[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  v36 = v11;
  v37 = v10;
  v38 = v9;
  result = *(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v19 = v5;
    v20 = v4;
    v21 = objc_msgSend(result, "joinToken");
    if (!v21)
      goto LABEL_5;
    v22 = v21;
    v23 = objc_msgSend(v21, "joinURLString");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    static String.Encoding.utf8.getter();
    v27 = String.data(using:allowLossyConversion:)(v7, 0, v24, v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    if (v29 >> 60 != 15)
    {
      sub_10002676C(v27, v29);
      sub_100216FEC(v27, v29, 76, v39);
      v30 = v27;
      v31 = *v8;
      v32 = v8[1];
      v33 = v8[2];
      v34 = (void *)v8[3];
      sub_10000FD10((uint64_t)v39, (uint64_t)v8, &qword_1004C1BE0);
      sub_1001D7E48(v31, v32, v33, v34);
      sub_10000FC14(v30, v29);
      v13 = *v8;
      v14 = v8[1];
      v15 = v8[2];
      v16 = (void *)v8[3];
      v17 = v8[4];
      sub_1001D2BC8(*v8, v14, v15, v16);
    }
    else
    {
LABEL_5:
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
    }
    v10 = v37;
    v9 = v38;
    v11 = v36;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.joinURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v4 = objc_msgSend(result, "joinToken");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "joinURLString");

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

      URL.init(string:)(v7, v9);
      return (void *)swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SharePlayTogetherSession.isActive.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    if ((objc_msgSend((id)result, "isPlaceholder") & 1) != 0)
    {
      return 0;
    }
    else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      KeyPath = swift_getKeyPath(&unk_1003D2D20);
      v3 = swift_getKeyPath(&unk_1003D2D48);
      static Published.subscript.getter(&v4, v0, KeyPath, v3);
      swift_release(v3);
      swift_release(KeyPath);
      return v4 > 0;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SharePlayTogetherSession.isPersistent.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, v3, 0, 0);
  return *v1;
}

uint64_t SharePlayTogetherSession.isPersistent.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*SharePlayTogetherSession.isPersistent.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1001CE1BC(void *a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  unsigned int v44;
  char v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  Class isa;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  objc_class *v56;
  char *v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  id v90;
  objc_super v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94[3];

  v86 = a2;
  v90 = a1;
  v87 = type metadata accessor for Logger(0);
  v89 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v88 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004C1BC8);
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  __chkstk_darwin(v4);
  v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1000057B4(&qword_1004C1BB8);
  v6 = __chkstk_darwin(v82);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v82 - v9;
  v11 = sub_1000057B4((uint64_t *)&unk_1004C1BA0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004C1B88);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = 0;
  v19 = &v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants];
  v94[0] = (uint64_t)_swiftEmptyArrayStorage;
  v20 = v2;
  v21 = sub_1000057B4(&qword_1004C1B78);
  Published.init(initialValue:)(v94, v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  v22 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount];
  v94[0] = 0;
  Published.init(initialValue:)(v94, &type metadata for Int);
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24 = v90;
  v23(v22, v14, v11);
  v25 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount];
  v94[0] = 0;
  Published.init(initialValue:)(v94, &type metadata for Int);
  v23(v25, v14, v11);
  v26 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host];
  v27 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  sub_10000FEB4((uint64_t)v10, (uint64_t)v8, &qword_1004C1BB8);
  v28 = v83;
  Published.init(initialValue:)(v8, v82);
  sub_10000FE2C((uint64_t)v10, &qword_1004C1BB8);
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v26, v28, v85);
  v29 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected] = 0;
  v30 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap;
  *(_QWORD *)&v20[v30] = sub_1000B96B4((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers] = _swiftEmptyArrayStorage;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = 0;
  v31 = objc_msgSend(v24, "identifier");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = (uint64_t *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier];
  *v35 = v32;
  v35[1] = v34;
  v36 = objc_msgSend(v24, "isHosted");
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost] = v36;
  v37 = v86;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint] = v86;
  v38 = v37;
  v39 = objc_msgSend(v24, "hostInfo");
  LOBYTE(v32) = objc_msgSend(v39, "routeType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType] = v32;
  v40 = objc_msgSend(v38, "groupLeader");
  v41 = objc_msgSend(v40, "transportType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent] = v41 != (id)6;
  v42 = objc_msgSend(v24, "hostInfo");
  LODWORD(v41) = objc_msgSend(v42, "routeType");

  if ((_DWORD)v41 == 1
    || (v43 = objc_msgSend(v24, "hostInfo"),
        v44 = objc_msgSend(v43, "routeType"),
        v43,
        v44 == 2))
  {
    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v94, 33, 0);
    v92 = 0x6C6C69662E726163;
    v93 = 0xE800000000000000;
    Published.init(initialValue:)(&v92, &type metadata for String);
    swift_endAccess(v94);
    v45 = 1;
    v46 = v87;
  }
  else
  {
    v47 = objc_msgSend(v38, "outputDevices");
    if (v47)
    {
      v48 = v47;
      v49 = sub_10000598C(0, (unint64_t *)&unk_1004C1E38, MRAVOutputDevice_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

    }
    v46 = v87;
    v50 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
    sub_10000598C(0, (unint64_t *)&unk_1004C1E38, MRAVOutputDevice_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v50, "symbolNameForOutputDevices:", isa);

    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;

    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v94, 33, 0);
    v92 = v53;
    v93 = v55;
    Published.init(initialValue:)(&v92, &type metadata for String);
    swift_endAccess(v94);
    v45 = 0;
  }

  v56 = (objc_class *)type metadata accessor for SharePlayTogetherSession(0);
  v91.receiver = v20;
  v91.super_class = v56;
  v57 = (char *)objc_msgSendSuper2(&v91, "init");
  v58 = objc_msgSend(v24, "identifier");
  if (!v58)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  v59 = objc_msgSend((id)objc_opt_self(MRGroupSessionProvider), "remoteControlGroupSessionWithIdentifier:delegate:", v58, v57);

  v60 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v61 = *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = v59;
  swift_unknownObjectRelease(v61);
  v62 = (void *)MRAVEndpointOutputDevicesDidChangeNotification;
  v63 = swift_allocObject(&unk_10047D300, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v57);
  v64 = swift_allocObject(&unk_10047D328, 32, 7);
  *(_BYTE *)(v64 + 16) = v45;
  *(_QWORD *)(v64 + 24) = v63;
  v65 = type metadata accessor for NotificationObserver();
  swift_allocObject(v65, 64, 7);
  v66 = v38;
  v67 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v62, (uint64_t)v38, 1, 1, (uint64_t)sub_1001D8EF0, v64);
  v68 = *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver];
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = v67;
  swift_release(v68);
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v69 = sub_100039D34(v46, (uint64_t)static Logger.sharePlayTogether);
  v70 = v88;
  v71 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v69, v46);
  v72 = v57;
  v73 = Logger.logObject.getter(v72);
  v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc(12, -1);
    v76 = swift_slowAlloc(32, -1);
    v94[0] = v76;
    *(_DWORD *)v75 = 136446210;
    v77 = *(void **)&v57[v60];
    if (v77)
    {
      v78 = objc_msgSend(v77, "description");
      v79 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
      v81 = v80;

      *(_QWORD *)(v75 + 4) = sub_1000393D0(v79, v81, v94);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Initialized SharePlayTogetherSession object with MR session %{public}s", (uint8_t *)v75, 0xCu);
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v46);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v46);
  }
}

void sub_1001CEACC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _QWORD v19[2];
  _BYTE v20[24];
  _BYTE v21[24];

  if ((a2 & 1) == 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v21, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      swift_beginAccess(v3, v20, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v3);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = *(id *)(v6 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint);

        v9 = objc_msgSend(v8, "outputDevices");
        if (v9)
        {
          v10 = sub_10000598C(0, (unint64_t *)&unk_1004C1E38, MRAVOutputDevice_ptr);
          static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

        }
      }
      v11 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
      sub_10000598C(0, (unint64_t *)&unk_1004C1E38, MRAVOutputDevice_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v11, "symbolNameForOutputDevices:", isa);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      KeyPath = swift_getKeyPath(&unk_1003D2C90);
      v18 = swift_getKeyPath(&unk_1003D2CB8);
      v19[0] = v14;
      v19[1] = v16;
      static Published.subscript.setter(v19, v5, KeyPath, v18);
    }
  }
}

void SharePlayTogetherSession.approve(participant:)(uint64_t a1)
{
  sub_1001CECD0(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_10047D0C0, (SEL *)&selRef_approvePendingParticipant_completion_);
}

void SharePlayTogetherSession.deny(participant:)(uint64_t a1)
{
  sub_1001CECD0(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_10047D0E8, (SEL *)&selRef_denyPendingParticipant_completion_);
}

void SharePlayTogetherSession.remove(participant:)(uint64_t a1)
{
  sub_1001CECD0(a1, (SEL *)&selRef_participantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_10047D110, (SEL *)&selRef_removeParticipant_completion_);
}

void sub_1001CECD0(uint64_t a1, SEL *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];

  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  swift_unknownObjectRetain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session));
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v7, *a2, v12);

  swift_unknownObjectRelease(v7);
  if (!v13)
    return;
  v14 = *(_QWORD *)(v5 + v6);
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v16[4] = a3;
  v16[5] = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1000179E8;
  v16[3] = a4;
  v15 = _Block_copy(v16);
  objc_msgSend((id)swift_unknownObjectRetain(v14), *a5, v13, v15);
  _Block_release(v15);
  swift_unknownObjectRelease(v13);
  swift_unknownObjectRelease(v14);
}

Swift::Void __swiftcall SharePlayTogetherSession.endSession()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v3[4] = CFRange.init(_:);
    v3[5] = 0;
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 1107296256;
    v3[2] = sub_1000179E8;
    v3[3] = &unk_10047D138;
    v2 = _Block_copy(v3);
    objc_msgSend((id)swift_unknownObjectRetain(v1), "removeAllParticipantsWithCompletion:", v2);
    _Block_release(v2);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.leave()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  void *v3;
  _QWORD v4[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v2 = objc_msgSend(v1, "identifier");
    if (!v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v4[4] = CFRange.init(_:);
    v4[5] = 0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_1000148C8;
    v4[3] = &unk_10047D160;
    v3 = _Block_copy(v4);
    MRGroupSessionLeaveSessionWithIdentifier(v2, v3);
    _Block_release(v3);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.cleanup(notifyObservers:)(Swift::Bool notifyObservers)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(char *);
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = v1;
  v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  if (notifyObservers)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (uint64_t *)(v4 + 40);
      do
      {
        v8 = (void (*)(char *))*(v6 - 1);
        v7 = *v6;
        v11 = 1;
        swift_retain(v7);
        v8(&v11);
        swift_release(v7);
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease(v4);
      v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
    }
  }
  v9 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
}

uint64_t SharePlayTogetherSession.addSessionConnectionObserver(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) == 1)
    return a1();
  v6 = swift_allocObject(&unk_10047D198, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v8 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  swift_retain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)(v2 + v7) = v8;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10005E2F8(0, v8[2] + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_10005E2F8((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v8[2] = v10 + 1;
  v11 = &v8[2 * v10];
  v11[4] = sub_10001122C;
  v11[5] = v6;
  return result;
}

uint64_t SharePlayTogetherSession.addSessionEndedObserver(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = swift_allocObject(&unk_10047D1C0, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
  swift_retain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v7);
  *(_QWORD *)(v2 + v6) = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10005E678(0, v7[2] + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_10005E678((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_1001D7EB8;
  v11[5] = v5;
  return result;
}

id SharePlayTogetherSession.assertSessionManagementScreenVisible()()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "assertSessionManagementScreenVisible");
  __break(1u);
  return result;
}

uint64_t SharePlayTogetherSession.socialProfile(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22[24];

  if (objc_msgSend(a1, "identifierType") == (id)1
    && (v5 = objc_msgSend(a1, "participantIdentifier")) != 0)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
    swift_beginAccess(v10, v22, 0, 0);
    v11 = *v10;
    if (*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_1000277A0(v7, v9);
      if ((v13 & 1) != 0)
      {
        v14 = v12;
        v15 = *(_QWORD *)(v11 + 56);
        v16 = type metadata accessor for SocialProfile(0);
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(a2, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
      }
      else
      {
        v21 = type metadata accessor for SocialProfile(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = type metadata accessor for SocialProfile(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for SocialProfile(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

void *SharePlayTogetherSession.isEquivalent(to:)(uint64_t a1)
{
  uint64_t v1;
  void *result;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = objc_msgSend(result, "isPlaceholder");
  result = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v4 == objc_msgSend(result, "isPlaceholder"))
  {
    v14 = 0;
  }
  else
  {
    v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      v14 = 1;
      v12 = v8;
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v12, 0);
    }
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
  }
  return (void *)(v14 & 1);
}

void sub_1001CF508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  _BOOL4 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint8_t *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char v153[24];
  _QWORD v154[3];
  uint64_t v155[5];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v0);
  v138 = (char *)&v130 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1000057B4(&qword_1004C1DC0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(id *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  v6 = (char *)&v130 - (((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v137 = (char *)&v130 - v7;
  v8 = sub_1000057B4(&qword_1004C1BB8);
  v9 = __chkstk_darwin(v8);
  v136 = (uint64_t)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v135 = (uint64_t)&v130 - v11;
  v12 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
  __chkstk_darwin(v12);
  v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8DB0 == -1)
    goto LABEL_2;
LABEL_75:
  swift_once(&qword_1004B8DB0, sub_1001D2B20);
LABEL_2:
  v15 = type metadata accessor for Logger(0);
  v140 = sub_100039D34(v15, (uint64_t)static Logger.sharePlayTogether);
  v16 = Logger.logObject.getter(v140);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Updating participants", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = swift_allocObject(&unk_10047D288, 24, 7);
  v141 = v19;
  *(_QWORD *)(v19 + 16) = &_swiftEmptySetSingleton;
  v145 = v19 + 16;
  v142 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v20 = *(void **)&v143[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  if (!v20)
  {
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    swift_release(v155[0]);
    __break(1u);
    return;
  }
  v21 = objc_msgSend(v20, "pendingParticipants");
  v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v23 = sub_100112578(v22);
  swift_bridgeObjectRelease();
  v24 = (unint64_t)sub_1001CC6AC((uint64_t)v23);
  swift_release(v23);
  if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
  {
    v126 = swift_bridgeObjectRetain();
    v25 = (uint64_t)sub_100112484(v126);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v155[0] = v25;
  sub_1001D6668(v155);
  v133 = v3;
  v134 = v2;
  swift_bridgeObjectRelease();
  v26 = *(void **)&v143[v142];
  if (!v26)
    goto LABEL_81;
  v27 = v155[0];
  v28 = objc_msgSend(v26, "participants");
  v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v30 = sub_100112578(v29);
  swift_bridgeObjectRelease();
  v31 = (unint64_t)sub_1001CC6AC((uint64_t)v30);
  swift_release(v30);
  if ((v31 & 0x8000000000000000) != 0 || (v31 & 0x4000000000000000) != 0)
  {
    v127 = swift_bridgeObjectRetain();
    v32 = (uint64_t)sub_100112484(v127);
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v155[0] = v32;
  sub_1001D6668(v155);
  swift_bridgeObjectRelease();
  v33 = v155[0];
  v132 = v6;
  if (v155[0] < 0 || (v155[0] & 0x4000000000000000) != 0)
  {
    v128 = swift_bridgeObjectRetain();
    v34 = _CocoaArrayWrapper.endIndex.getter(v128);
    swift_release(v33);
  }
  else
  {
    v34 = *(_QWORD *)(v155[0] + 16);
  }
  KeyPath = swift_getKeyPath(&unk_1003D2D20);
  v36 = swift_getKeyPath(&unk_1003D2D48);
  v155[0] = v34;
  v37 = v143;
  static Published.subscript.setter(v155, v37, KeyPath, v36);
  v131 = v4;
  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
    v129 = swift_bridgeObjectRetain();
    v38 = _CocoaArrayWrapper.endIndex.getter(v129);
    swift_release(v27);
  }
  else
  {
    v38 = *(_QWORD *)(v27 + 16);
  }
  v6 = (char *)swift_getKeyPath(&unk_1003D2D68);
  v4 = (id)swift_getKeyPath(&unk_1003D2D90);
  v155[0] = v38;
  v39 = v37;
  static Published.subscript.setter(v155, v39, v6, v4);
  v155[0] = v27;
  sub_1000AADF8(v33);
  v40 = v155[0];
  v41 = v39;
  v42 = sub_1001D7C94(v40, (uint64_t)v41, v141);

  swift_bridgeObjectRelease();
  v43 = swift_getKeyPath(&unk_1003D2CD8);
  v44 = swift_getKeyPath(&unk_1003D2D00);
  v155[0] = v42;
  v151 = v41;
  static Published.subscript.setter(v155, v151, v43, v44);
  v45 = *(void **)&v143[v142];
  if (!v45)
    goto LABEL_82;
  v46 = objc_msgSend(v45, "members");
  v2 = sub_10000598C(0, &qword_1004C1DC8, MRUserIdentity_ptr);
  v47 = sub_1001D8BB4();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v46, v2, v47);

  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v49 = v3;
    else
      v49 = v3 & 0xFFFFFFFFFFFFFF8;
    v50 = __CocoaSet.makeIterator()(v49);
    v48 = Set.Iterator.init(_cocoa:)(v155, v50, v2, v47);
    v3 = v155[0];
    v150 = v155[1];
    v51 = v155[2];
    v52 = v155[3];
    v53 = v155[4];
  }
  else
  {
    v52 = 0;
    v54 = -1 << *(_BYTE *)(v3 + 32);
    v55 = *(_QWORD *)(v3 + 56);
    v150 = v3 + 56;
    v56 = ~v54;
    v57 = -v54;
    if (v57 < 64)
      v58 = ~(-1 << v57);
    else
      v58 = -1;
    v53 = v58 & v55;
    v51 = v56;
  }
  v147 = v3 & 0x7FFFFFFFFFFFFFFFLL;
  v139 = v51;
  v149 = (unint64_t)(v51 + 64) >> 6;
  v59 = &selRef_setShouldSuppressUserInfo_;
  v146 = (char *)&type metadata for Swift.AnyObject + 8;
  v148 = v2;
  v144 = v3;
  if ((v3 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if (v53)
      {
        v6 = (char *)((v53 - 1) & v53);
        v63 = __clz(__rbit64(v53)) | (v52 << 6);
        v62 = v52;
      }
      else
      {
        v64 = v52 + 1;
        if (__OFADD__(v52, 1))
        {
          __break(1u);
          goto LABEL_75;
        }
        if (v64 >= v149)
          goto LABEL_63;
        v65 = *(_QWORD *)(v150 + 8 * v64);
        v62 = v52 + 1;
        if (!v65)
        {
          v62 = v52 + 2;
          if (v52 + 2 >= v149)
            goto LABEL_63;
          v65 = *(_QWORD *)(v150 + 8 * v62);
          if (!v65)
          {
            v62 = v52 + 3;
            if (v52 + 3 >= v149)
              goto LABEL_63;
            v65 = *(_QWORD *)(v150 + 8 * v62);
            if (!v65)
            {
              v62 = v52 + 4;
              if (v52 + 4 >= v149)
                goto LABEL_63;
              v65 = *(_QWORD *)(v150 + 8 * v62);
              if (!v65)
              {
                v66 = v52 + 5;
                while (v149 != v66)
                {
                  v65 = *(_QWORD *)(v150 + 8 * v66++);
                  if (v65)
                  {
                    v62 = v66 - 1;
                    goto LABEL_49;
                  }
                }
                goto LABEL_63;
              }
            }
          }
        }
LABEL_49:
        v6 = (char *)((v65 - 1) & v65);
        v63 = __clz(__rbit64(v65)) + (v62 << 6);
      }
      v4 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v63);
      if (!v4)
        goto LABEL_63;
LABEL_51:
      if (objc_msgSend(v4, v59[106]) == (id)1)
      {
        v67 = objc_msgSend(v4, "identifier");
        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        v71 = &v151[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap];
        swift_beginAccess(&v151[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap], v153, 0, 0);
        v72 = *(_QWORD *)v71;
        if (*(_QWORD *)(v72 + 16))
        {
          v73 = v14;
          swift_bridgeObjectRetain();
          v74 = sub_1000277A0(v68, v70);
          if ((v75 & 1) != 0)
          {
            v76 = v74;
            v77 = *(_QWORD *)(v72 + 56);
            v78 = type metadata accessor for SocialProfile(0);
            v79 = *(_QWORD *)(v78 - 8);
            v80 = v77 + *(_QWORD *)(v79 + 72) * v76;
            v2 = v148;
            v14 = v73;
            (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v73, v80, v78);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v73, 0, 1, v78);
          }
          else
          {
            v78 = type metadata accessor for SocialProfile(0);
            v79 = *(_QWORD *)(v78 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v14, 1, 1, v78);
          }
          swift_bridgeObjectRelease();
          v3 = v144;
        }
        else
        {
          v78 = type metadata accessor for SocialProfile(0);
          v79 = *(_QWORD *)(v78 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v14, 1, 1, v78);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for SocialProfile(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v14, 1, v78) == 1)
        {
          sub_10000FE2C((uint64_t)v14, (uint64_t *)&unk_1004C1C18);
          v81 = objc_msgSend(v4, "identifier");
          v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
          v84 = v83;

          v85 = MusicItemID.init(_:)(v82, v84);
          v87 = v86;
          swift_beginAccess(v145, v154, 33, 0);
          v2 = v148;
          sub_100152E90(&v152, v85, v87);
          swift_endAccess(v154);

          v48 = (_QWORD *)swift_bridgeObjectRelease();
        }
        else
        {

          v48 = (_QWORD *)sub_10000FE2C((uint64_t)v14, (uint64_t *)&unk_1004C1C18);
        }
        v52 = v62;
        v53 = (unint64_t)v6;
        v59 = &selRef_setShouldSuppressUserInfo_;
        if (v3 < 0)
          break;
      }
      else
      {

        v52 = v62;
        v53 = (unint64_t)v6;
        if (v3 < 0)
          break;
      }
    }
  }
  v60 = __CocoaSet.Iterator.next()(v48);
  if (v60)
  {
    v61 = v60;
    v152 = v60;
    swift_unknownObjectRetain(v60);
    swift_dynamicCast(v154, &v152, v146, v2, 7);
    v4 = (id)v154[0];
    swift_unknownObjectRelease(v61);
    v62 = v52;
    v6 = (char *)v53;
    if (v4)
      goto LABEL_51;
  }
LABEL_63:
  sub_10000FCCC(v3);
  v88 = *(void **)&v143[v142];
  if (!v88)
    goto LABEL_83;
  v89 = objc_msgSend(v88, "host");
  if (v89)
  {
    v90 = v89;
    v91 = v135;
    v92 = v151;
    sub_1001D02F0(v89, (uint64_t)v151, v141, v135);
    v93 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v91, 0, 1, v93);
    v94 = swift_getKeyPath(&unk_1003D2DB0);
    v95 = swift_getKeyPath(&unk_1003D2DD8);
    v96 = v136;
    sub_10000FEB4(v91, v136, &qword_1004C1BB8);
    static Published.subscript.setter(v96, v92, v94, v95);
    sub_10000FE2C(v91, &qword_1004C1BB8);
    swift_unknownObjectRelease(v90);
  }
  v97 = v145;
  swift_beginAccess(v145, v154, 0, 0);
  v98 = *(_QWORD *)(*(_QWORD *)v97 + 16);
  v100 = Logger.logObject.getter(v99);
  v101 = static os_log_type_t.default.getter();
  v102 = os_log_type_enabled(v100, v101);
  if (v98)
  {
    if (v102)
    {
      v103 = swift_slowAlloc(12, -1);
      *(_DWORD *)v103 = 134349056;
      *(_QWORD *)(v103 + 4) = *(_QWORD *)(*(_QWORD *)v145 + 16);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "Fetching %{public}ld profiles", (uint8_t *)v103, 0xCu);
      swift_slowDealloc(v103, -1, -1);
    }

    v104 = swift_getKeyPath(&unk_1003D2F58);
    v105 = swift_bridgeObjectRetain();
    v106 = sub_1001123A0(v105);
    swift_bridgeObjectRelease();
    v107 = type metadata accessor for SocialProfile(0);
    v108 = sub_100004D8C(&qword_1004C1DD8, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v109 = sub_100004D8C(&qword_1004C1DE0, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v110 = v137;
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(v104, v106, v107, v108, v109);
    v111 = type metadata accessor for TaskPriority(0);
    v112 = (uint64_t)v138;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v138, 1, 1, v111);
    v113 = v133;
    v114 = v132;
    v115 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v132, v110, v134);
    type metadata accessor for MainActor(0);
    v116 = v151;
    v118 = static MainActor.shared.getter(v117);
    v119 = *(unsigned __int8 *)(v113 + 80);
    v120 = (v119 + 32) & ~v119;
    v121 = ((unint64_t)v131 + v120 + 7) & 0xFFFFFFFFFFFFFFF8;
    v122 = swift_allocObject(&unk_10047D2B0, v121 + 8, v119 | 7);
    *(_QWORD *)(v122 + 16) = v118;
    *(_QWORD *)(v122 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v122 + v120, v114, v115);
    *(_QWORD *)(v122 + v121) = v116;
    v123 = sub_1001CC7AC(v112, (uint64_t)&unk_1004C1DF0, v122, (uint64_t)&type metadata for () + 8);
    v124 = swift_release(v123);
    (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v110, v115, v124);
  }
  else
  {
    if (v102)
    {
      v125 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v125 = 0;
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "No pending profiles to fetch", v125, 2u);
      swift_slowDealloc(v125, -1, -1);
    }

  }
  swift_release(v141);
}

uint64_t sub_1001D02F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char **v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  _BYTE v71[24];
  uint64_t v72;
  char v73[24];

  v64 = a2;
  v67 = a4;
  v66 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v66);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
  v9 = __chkstk_darwin(v8);
  v65 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v63 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v63 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v63 - v17;
  v19 = type metadata accessor for SocialProfile(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v68 = v18;
  v69 = v21;
  v70 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v18, 1, 1);
  v22 = &selRef_connectionStartTime;
  v23 = objc_msgSend(a1, "identity");
  if (v23)
  {
    v24 = v23;
    if (objc_msgSend(v23, "type") == (id)1)
    {
      v63 = a3;
      v25 = objc_msgSend(v24, "identifier");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = (uint64_t *)(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
      v30 = swift_beginAccess(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap, v73, 0, 0);
      v31 = *v29;
      if (*(_QWORD *)(v31 + 16))
      {
        swift_bridgeObjectRetain();
        v32 = sub_1000277A0(v26, v28);
        if ((v33 & 1) != 0)
        {
          v34 = v70;
          (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v16, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v20 + 72) * v32, v70);
          v35 = v16;
          v36 = 0;
        }
        else
        {
          v35 = v16;
          v36 = 1;
          v34 = v70;
        }
        v69(v35, v36, 1, v34);
        swift_bridgeObjectRelease();
      }
      else
      {
        v34 = v70;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v69)(v16, 1, 1, v70, v30);
      }
      swift_bridgeObjectRelease();
      v37 = (uint64_t)v68;
      sub_10000FE2C((uint64_t)v68, (uint64_t *)&unk_1004C1C18);
      sub_10000FD10((uint64_t)v16, v37, (uint64_t *)&unk_1004C1C18);
      sub_10000FEB4(v37, (uint64_t)v13, (uint64_t *)&unk_1004C1C18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v34) == 1)
      {
        v38 = v63 + 16;
        sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C1C18);
        v39 = objc_msgSend(v24, "identifier");
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v42 = v41;

        v43 = MusicItemID.init(_:)(v40, v42);
        v45 = v44;
        swift_beginAccess(v38, v71, 33, 0);
        sub_100152E90(&v72, v43, v45);
        swift_endAccess(v71);

        swift_bridgeObjectRelease();
        v22 = &selRef_connectionStartTime;
      }
      else
      {

        sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C1C18);
        v22 = &selRef_connectionStartTime;
      }
    }
    else
    {

    }
  }
  v46 = objc_msgSend(a1, "identifier");
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = objc_msgSend(a1, v22[114]);
  v51 = v50;
  v64 = v49;
  if (!v50)
  {
    v53 = v47;
LABEL_18:
    v55 = 0;
    goto LABEL_19;
  }
  v52 = objc_msgSend(v50, "displayName");

  v53 = v47;
  if (!v52)
  {
    v51 = 0;
    goto LABEL_18;
  }
  v51 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

LABEL_19:
  v56 = objc_msgSend(a1, "isPending");
  v57 = objc_msgSend(a1, "isGuest");
  v58 = (uint64_t)v68;
  v59 = v65;
  sub_10000FEB4((uint64_t)v68, v65, (uint64_t *)&unk_1004C1C18);
  v60 = (uint64_t)&v7[*(int *)(v66 + 32)];
  v69((char *)v60, 1, 1, v70);
  v61 = v64;
  *(_QWORD *)v7 = v53;
  *((_QWORD *)v7 + 1) = v61;
  *((_QWORD *)v7 + 2) = v51;
  *((_QWORD *)v7 + 3) = v55;
  v7[32] = v56;
  v7[33] = v57;
  sub_1001D7ED4(v59, v60);
  sub_100084888((uint64_t)v7, v67, type metadata accessor for SharePlayTogetherSession.Participant);
  return sub_10000FE2C(v58, (uint64_t *)&unk_1004C1C18);
}

uint64_t SharePlayTogetherSession.Participant.init(id:displayName:isPending:isGuest:socialProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;

  v16 = a8 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v17 = type metadata accessor for SocialProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 33) = a6;
  return sub_1001D7ED4(a7, v16);
}

uint64_t sub_1001D0850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;

  v5[4] = a5;
  v6 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004C1DF8);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v9 = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[8] = v9;
  v10 = sub_1000057B4(&qword_1004C1E00);
  v5[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[10] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[11] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v13);
  v5[13] = swift_task_alloc(v13);
  v5[14] = swift_task_alloc(v13);
  v5[15] = type metadata accessor for MainActor(0);
  v5[16] = static MainActor.shared.getter(v14);
  v15 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  v5[17] = v15;
  v16 = sub_1000057B4(&qword_1004C1DC0);
  *v15 = v5;
  v15[1] = sub_1001D097C;
  return MusicCatalogResourceRequest.response()(v9, v16);
}

uint64_t sub_1001D097C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1001D0CE8;
  else
    v6 = sub_1001D0A04;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1001D0A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 128));
  MusicCatalogResourceResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = type metadata accessor for Logger(0);
  sub_100039D34(v8, (uint64_t)static Logger.sharePlayTogether);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v10 = v9(v4, v5, v6);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  if (v13)
  {
    v40 = v9;
    v17 = swift_slowAlloc(12, -1);
    *(_DWORD *)v17 = 134349056;
    v18 = sub_1001D8E44();
    dispatch thunk of Collection.startIndex.getter(v15);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 24), v15, v18);
    v19 = dispatch thunk of Collection.distance(from:to:)(v0 + 16, v0 + 24, v15, v18);
    v42 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v42(v14, v15);
    *(_QWORD *)(v17 + 4) = v19;
    v9 = v40;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Finished fetching %{public}ld profiles", (uint8_t *)v17, 0xCu);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    v42 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v42(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  }

  v20 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 72);
  v39 = *(_QWORD *)(v0 + 104);
  v41 = *(_QWORD *)(v0 + 64);
  v26 = *(void **)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 40);
  v38 = v25;
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
  v9(v21, v20, v24);
  v28 = v26;
  v30 = static MainActor.shared.getter(v29);
  v31 = *(unsigned __int8 *)(v22 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (v23 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject(&unk_10047D2D8, v33 + 8, v31 | 7);
  *(_QWORD *)(v34 + 16) = v30;
  *(_QWORD *)(v34 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v34 + v32, v21, v24);
  *(_QWORD *)(v34 + v33) = v28;
  v35 = sub_1000E6084(v38, (uint64_t)&unk_1004C1E10, v34);
  v36 = swift_release(v35);
  ((void (*)(uint64_t, uint64_t, __n128))v42)(v20, v24, v36);
  swift_task_dealloc(v20);
  swift_task_dealloc(v39);
  swift_task_dealloc(v21);
  swift_task_dealloc(v41);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D0CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D0D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v5[31] = a4;
  v5[32] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4((uint64_t *)&unk_1004C1C18) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[33] = swift_task_alloc(v6);
  v5[34] = swift_task_alloc(v6);
  v5[35] = swift_task_alloc(v6);
  v7 = sub_1000057B4(&qword_1004C1BB8);
  v5[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v5[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[38] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[39] = swift_task_alloc(v10);
  v5[40] = swift_task_alloc(v10);
  v11 = sub_1000057B4(&qword_1004C1E00);
  v5[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[42] = v12;
  v5[43] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SocialProfile(0);
  v5[44] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[45] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[46] = swift_task_alloc(v15);
  v5[47] = swift_task_alloc(v15);
  v5[48] = swift_task_alloc(v15);
  v16 = sub_1000057B4(&qword_1004C1E20);
  v5[49] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v17);
  v5[51] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[52] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D0F14, v20, v21);
}

void sub_1001D0F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  NSString v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD);
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  char v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, _QWORD);
  void (*v85)(uint64_t);
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD *);
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  void (*v140)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v1 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = swift_release(*(_QWORD *)(v0 + 416));
  v140 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v140(v2, v6, v4, v8);
  v9 = sub_1001D8E44();
  dispatch thunk of Collection.startIndex.getter(v4);
  *(_QWORD *)(v2 + *(int *)(v3 + 36)) = *(_QWORD *)(v0 + 240);
  sub_10000FD10(v2, v1, &qword_1004C1E20);
  v10 = (_QWORD *)(v1 + *(int *)(v3 + 36));
  v11 = (_QWORD *)(v7 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
  v12 = *v10;
  v139 = (_QWORD *)(v0 + 232);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 232), v4, v9);
  v142 = v11;
  if (v12 != *(_QWORD *)(v0 + 232))
  {
    v74 = *(_QWORD *)(v0 + 360);
    v136 = *(_QWORD *)(v0 + 336);
    v138 = v0 + 80;
    v134 = v9;
    v135 = v0;
    v133 = v10;
    v154 = v0 + 168;
    do
    {
      v79 = *(_QWORD *)(v0 + 408);
      v80 = *(_QWORD *)(v0 + 384);
      v148 = *(_QWORD *)(v0 + 376);
      v151 = *(_QWORD *)(v0 + 368);
      v144 = *(_QWORD *)(v0 + 352);
      v81 = v74;
      v82 = *(_QWORD *)(v0 + 344);
      v83 = *(_QWORD *)(v0 + 328);
      v84 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v138, v10, v83, v9);
      v85 = *(void (**)(uint64_t))(v81 + 16);
      v85(v80);
      v84(v138, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t))v140)(v82, v79, v83);
      dispatch thunk of Collection.formIndex(after:)(v10, v83, v9);
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v82, v83);
      v86 = v81;
      v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 32);
      v88 = v87(v148, v80, v144);
      v89 = SocialProfile.id.getter(v88);
      v91 = v90;
      v92 = swift_beginAccess(v142, v154, 33, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v85)(v151, v148, v144, v92);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v142);
      v94 = (_QWORD *)*v142;
      *v142 = 0x8000000000000000;
      v96 = sub_1000277A0(v89, v91);
      v97 = v94[2];
      v98 = (v95 & 1) == 0;
      v99 = v97 + v98;
      if (__OFADD__(v97, v98))
        goto LABEL_61;
      v100 = v95;
      if (v94[3] >= v99)
      {
        v0 = v135;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1001D6380();
      }
      else
      {
        sub_1001D4C78(v99, isUniquelyReferenced_nonNull_native);
        v101 = sub_1000277A0(v89, v91);
        v0 = v135;
        if ((v100 & 1) != (v102 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          return;
        }
        v96 = v101;
      }
      v103 = *(_QWORD *)(v0 + 368);
      v104 = *(_QWORD *)(v0 + 352);
      if ((v100 & 1) != 0)
      {
        v74 = v86;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v86 + 40))(v94[7] + *(_QWORD *)(v86 + 72) * v96, v103, v104);
      }
      else
      {
        v94[(v96 >> 6) + 8] |= 1 << v96;
        v105 = (uint64_t *)(v94[6] + 16 * v96);
        *v105 = v89;
        v105[1] = v91;
        v74 = v86;
        v87(v94[7] + *(_QWORD *)(v86 + 72) * v96, v103, v104);
        v106 = v94[2];
        v107 = __OFADD__(v106, 1);
        v108 = v106 + 1;
        if (v107)
          goto LABEL_62;
        v94[2] = v108;
        swift_bridgeObjectRetain();
      }
      v75 = *(_QWORD *)(v0 + 376);
      v76 = *(_QWORD *)(v0 + 352);
      v77 = *(_QWORD *)(v0 + 328);
      *v142 = v94;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess(v154);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      v10 = v133;
      v9 = v134;
      v78 = *v133;
      dispatch thunk of Collection.endIndex.getter(v139, v77, v134);
    }
    while (v78 != *(_QWORD *)(v0 + 232));
  }
  v13 = *(_QWORD *)(v0 + 256);
  sub_10000FE2C(*(_QWORD *)(v0 + 408), &qword_1004C1E20);
  KeyPath = swift_getKeyPath(&unk_1003D2CD8);
  v15 = swift_getKeyPath(&unk_1003D2D00);
  static Published.subscript.getter((_QWORD *)(v0 + 216), v13, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 16);
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_35:
    v66 = *(_QWORD *)(v0 + 296);
    v67 = *(_QWORD *)(v0 + 304);
    v68 = *(_QWORD **)(v0 + 288);
    v69 = *(_QWORD *)(v0 + 256);
    v70 = swift_getKeyPath(&unk_1003D2DB0);
    v71 = swift_getKeyPath(&unk_1003D2DD8);
    static Published.subscript.getter(v68, v69, v70, v71);
    swift_release(v70);
    v72 = swift_release(v71);
    v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v73)(v68, 1, v66, v72) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 288), &qword_1004C1BB8);
    }
    else
    {
      v109 = *(_QWORD *)(v0 + 296);
      sub_100084888(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320), type metadata accessor for SharePlayTogetherSession.Participant);
      v110 = SharePlayTogetherSession.host.modify((_QWORD *)(v0 + 112));
      v112 = v111;
      v113 = v73(v111, 1, v109);
      v114 = *(uint64_t **)(v0 + 320);
      if (!v113)
      {
        v115 = *v114;
        v116 = v114[1];
        v117 = swift_beginAccess(v142, v0 + 192, 0, 0);
        v118 = *v142;
        if (*(_QWORD *)(*v142 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v119 = sub_1000277A0(v115, v116);
          v120 = *(_QWORD *)(v0 + 352);
          v121 = *(_QWORD *)(v0 + 360);
          v122 = *(_QWORD *)(v0 + 264);
          if ((v123 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v121 + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v118 + 56) + *(_QWORD *)(v121 + 72) * v119, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v122, 0, 1, v120);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v121 + 56))(*(_QWORD *)(v0 + 264), 1, 1, v120);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 360) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 352), v117);
        }
        v114 = *(uint64_t **)(v0 + 320);
        sub_1001D7ED4(*(_QWORD *)(v0 + 264), v112 + *(int *)(*(_QWORD *)(v0 + 296) + 32));
      }
      ((void (*)(uint64_t, _QWORD))v110)(v0 + 112, 0);
      sub_1001D8E90((uint64_t)v114);
    }
    v124 = *(_QWORD *)(v0 + 400);
    v125 = *(_QWORD *)(v0 + 408);
    v127 = *(_QWORD *)(v0 + 376);
    v126 = *(_QWORD *)(v0 + 384);
    v128 = *(_QWORD *)(v0 + 368);
    v129 = *(_QWORD *)(v0 + 344);
    v130 = *(_QWORD *)(v0 + 320);
    v145 = *(_QWORD *)(v0 + 312);
    v146 = *(_QWORD *)(v0 + 288);
    v149 = *(_QWORD *)(v0 + 280);
    v152 = *(_QWORD *)(v0 + 272);
    v155 = *(_QWORD *)(v0 + 264);
    v131 = type metadata accessor for SharePlayTogetherSession(0);
    sub_100004D8C(&qword_1004C1E28, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
    v132 = ObservableObject<>.objectWillChange.getter(v131);
    ObservableObjectPublisher.send()();
    swift_release(v132);
    swift_task_dealloc(v125);
    swift_task_dealloc(v124);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v149);
    swift_task_dealloc(v152);
    swift_task_dealloc(v155);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v17 = (_QWORD *)(v0 + 224);
  v143 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 312);
  v147 = *(_QWORD *)(v0 + 304);
  v137 = *(_QWORD *)(v0 + 296);
  v153 = *(_QWORD *)(v0 + 256);
  v150 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_beginAccess(v142, v0 + 144, 0, 0);
  v19 = 0;
  v141 = v16;
  while (1)
  {
    v21 = *(_QWORD *)(v0 + 256);
    v22 = swift_getKeyPath(&unk_1003D2CD8);
    v23 = swift_getKeyPath(&unk_1003D2D00);
    static Published.subscript.getter(v17, v21, v22, v23);
    swift_release(v22);
    swift_release(v23);
    v24 = *(_QWORD *)(v0 + 224);
    if (v19 >= *(_QWORD *)(v24 + 16))
      break;
    v25 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    v26 = *(_QWORD *)(v147 + 72) * v19;
    sub_1000A2258(v24 + v25 + v26, *(_QWORD *)(v0 + 312), type metadata accessor for SharePlayTogetherSession.Participant);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      v27 = *(void **)(v153 + v150);
      if (!v27)
        goto LABEL_66;
      swift_unknownObjectRetain(*(_QWORD *)(v153 + v150));
      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend(v27, "pendingParticipantForIdentifier:", v28);

      swift_unknownObjectRelease(v27);
      if (v29)
      {
        v30 = objc_msgSend(v29, "identity");
        swift_unknownObjectRelease(v29);
        if (v30)
        {
          v31 = objc_msgSend(v30, "identifier");

          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v34 = v33;

          v35 = *v142;
          if (*(_QWORD *)(*v142 + 16))
          {
            swift_bridgeObjectRetain();
            v36 = sub_1000277A0(v32, v34);
            v37 = *(_QWORD *)(v0 + 352);
            v38 = *(_QWORD *)(v0 + 280);
            if ((v39 & 1) != 0)
            {
              (*(void (**)(_QWORD, unint64_t, _QWORD))(v143 + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v35 + 56) + *(_QWORD *)(v143 + 72) * v36, *(_QWORD *)(v0 + 352));
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v38, 0, 1, v37);
            }
            else
            {
              (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v143 + 56))(*(_QWORD *)(v0 + 280), 1, 1, v37);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v143 + 56))(*(_QWORD *)(v0 + 280), 1, 1, *(_QWORD *)(v0 + 352));
          }
          swift_bridgeObjectRelease();
          v61 = *(_QWORD *)(v0 + 256);
          v54 = swift_getKeyPath(&unk_1003D2CD8);
          v55 = swift_getKeyPath(&unk_1003D2D00);
          v56 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v61, v54, v55);
          v63 = v62;
          v64 = (_QWORD *)*v62;
          v65 = swift_isUniquelyReferenced_nonNull_native(*v62);
          *v63 = v64;
          if ((v65 & 1) == 0)
          {
            v64 = (_QWORD *)sub_1001D6654(v64);
            *v63 = v64;
          }
          if (v19 >= v64[2])
            goto LABEL_64;
          sub_1001D7ED4(*(_QWORD *)(v0 + 280), (uint64_t)v64 + v25 + v26 + *(int *)(v137 + 32));
          v20 = v0 + 16;
LABEL_5:
          v56(v20, 0);
          swift_release(v54);
          swift_release(v55);
          v17 = (_QWORD *)(v0 + 224);
          v16 = v141;
          goto LABEL_6;
        }
      }
    }
    v40 = *(void **)(v153 + v150);
    if (!v40)
      goto LABEL_65;
    swift_unknownObjectRetain(*(_QWORD *)(v153 + v150));
    v41 = String._bridgeToObjectiveC()();
    v42 = objc_msgSend(v40, "participantForIdentifier:", v41);

    swift_unknownObjectRelease(v40);
    if (v42)
    {
      v43 = objc_msgSend(v42, "identity");
      swift_unknownObjectRelease(v42);
      if (v43)
      {
        v44 = objc_msgSend(v43, "identifier");

        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v47 = v46;

        v48 = *v142;
        if (*(_QWORD *)(*v142 + 16))
        {
          swift_bridgeObjectRetain();
          v49 = sub_1000277A0(v45, v47);
          v50 = *(_QWORD *)(v0 + 352);
          v51 = *(_QWORD *)(v0 + 272);
          if ((v52 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v143 + 16))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v48 + 56) + *(_QWORD *)(v143 + 72) * v49, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v51, 0, 1, v50);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v143 + 56))(*(_QWORD *)(v0 + 272), 1, 1, v50);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v143 + 56))(*(_QWORD *)(v0 + 272), 1, 1, *(_QWORD *)(v0 + 352));
        }
        swift_bridgeObjectRelease();
        v53 = *(_QWORD *)(v0 + 256);
        v54 = swift_getKeyPath(&unk_1003D2CD8);
        v55 = swift_getKeyPath(&unk_1003D2D00);
        v56 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 48, v53, v54, v55);
        v58 = v57;
        v59 = (_QWORD *)*v57;
        v60 = swift_isUniquelyReferenced_nonNull_native(*v57);
        *v58 = v59;
        if ((v60 & 1) == 0)
        {
          v59 = (_QWORD *)sub_1001D6654(v59);
          *v58 = v59;
        }
        if (v19 >= v59[2])
          goto LABEL_63;
        sub_1001D7ED4(*(_QWORD *)(v0 + 272), (uint64_t)v59 + v25 + v26 + *(int *)(v137 + 32));
        v20 = v0 + 48;
        goto LABEL_5;
      }
    }
LABEL_6:
    ++v19;
    sub_1001D8E90(*(_QWORD *)(v0 + 312));
    if (v16 == v19)
      goto LABEL_35;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void SharePlayTogetherSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.SharePlayTogetherSession", 34, "init()", 6, 0);
  __break(1u);
}

id SharePlayTogetherSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayTogetherSession(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001D1D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SharePlayTogetherSession(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isPending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isGuest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SharePlayTogetherSession.Participant.isGuest.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

CFRange (__swiftcall *SharePlayTogetherSession.Participant.isGuest.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  return sub_10000FEB4(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_1004C1C18);
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  return sub_1001D7ED4(a1, v3);
}

CFRange (__swiftcall *SharePlayTogetherSession.Participant.socialProfile.modify())(__C::_NSRange)
{
  type metadata accessor for SharePlayTogetherSession.Participant(0);
  return CFRange.init(_:);
}

double SharePlayTogetherSession.groupSessionDidConnect(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(a1);
  v7 = v1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_10047D1E8, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a1;
  v10[5] = v7;
  v11 = sub_1000E6084((uint64_t)v5, (uint64_t)&unk_1004C1C30, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1001D1EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D1F64, v8, v9);
}

uint64_t sub_1001D1F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(__n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;

  swift_release(*(_QWORD *)(v0 + 72));
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_100039D34(v2, (uint64_t)static Logger.sharePlayTogether);
  v4 = swift_unknownObjectRetain_n(v1, 2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 56);
  if (v7)
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v27 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = objc_msgSend(v8, "description");
    v12 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v14, &v27);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n(v8, 2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "groupSessionDidConnect %{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 56), 2);
  }

  v15 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v15 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) = 1;
  v16 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v17 = *(_QWORD *)(v15 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    v19 = (_QWORD *)(v17 + 40);
    do
    {
      v21 = (void (*)(__n128))*(v19 - 1);
      v20 = *v19;
      v22 = swift_retain(*v19);
      v21(v22);
      swift_release(v20);
      v19 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v15 + v16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  SharePlayTogetherSession.qrCode.getter((uint64_t *)(v0 + 16));
  sub_1001D9078(v0 + 16);
  v23 = type metadata accessor for SharePlayTogetherSession(0);
  sub_100004D8C(&qword_1004C1E28, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v24 = ObservableObject<>.objectWillChange.getter(v23);
  ObservableObjectPublisher.send()();
  v25 = swift_release(v24);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v25);
}

double SharePlayTogetherSession.groupSession(_:didInvalidateWithError:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v4 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v8 = v2;
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_10047D210, 48, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = a2;
  v11[5] = v8;
  v12 = sub_1000E6084((uint64_t)v6, (uint64_t)&unk_1004C1C40, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_1001D23F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D2460, v8, v9);
}

void sub_1001D2460()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  char *v9;
  __objc2_class_ro **p_info;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __objc2_class_ro *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  unsigned __int8 v31;
  uint64_t v32;
  void (*v33)(unsigned __int8 *, __n128);
  void *v34;
  __objc2_class_ro *v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;

  swift_release(*(_QWORD *)(v0 + 56));
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = type metadata accessor for Logger(0);
  sub_100039D34(v3, (uint64_t)static Logger.sharePlayTogether);
  swift_errorRetain(v1);
  v4 = v2;
  swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(char **)(v0 + 48);
  p_info = &OBJC_METACLASS____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource.info;
  if (v7)
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    v13 = swift_slowAlloc(32, -1);
    v38 = v13;
    *(_DWORD *)v11 = 138543618;
    swift_errorRetain(v8);
    v14 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v11 + 4) = v14;
    *v12 = v14;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    *(_WORD *)(v11 + 12) = 2082;
    v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers];
    swift_bridgeObjectRetain();
    v16 = sub_1000057B4((uint64_t *)&unk_1004C1E78);
    v17 = Array.description.getter(v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = (char *)v17;
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource + 32);
    *(_QWORD *)(v11 + 14) = sub_1000393D0(v20, v19, &v38);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Session invalidated with error %{public}@. Calling %{public}s observers.", (uint8_t *)v11, 0x16u);
    v21 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v12, 1, v21);
    swift_slowDealloc(v12, -1, -1);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 40));
    swift_errorRelease(v8);

  }
  v22 = *(_QWORD *)(v0 + 48);
  v23 = p_info[382];
  v24 = *(_QWORD *)((char *)&v23->flags + v22);
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
  {
LABEL_15:
    *(_QWORD *)((char *)&v23->flags + v22) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v35 = v23;
  v36 = v0;
  v26 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually;
  v27 = (_BYTE *)(v22 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  v28 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_bridgeObjectRetain();
  swift_beginAccess(v27, v0 + 16, 0, 0);
  v29 = (_QWORD *)(v24 + 40);
  while (1)
  {
    v33 = (void (*)(unsigned __int8 *, __n128))*(v29 - 1);
    v32 = *v29;
    if ((*(_BYTE *)(v22 + v26) & 1) == 0 && *v27 != 1)
      break;
    v30 = swift_retain(*v29);
    v31 = 1;
LABEL_9:
    v37 = v31;
    v33(&v37, v30);
    swift_release(v32);
    v29 += 2;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      v23 = v35;
      v0 = v36;
      goto LABEL_15;
    }
  }
  v34 = *(void **)(v22 + v28);
  if (v34)
  {
    v31 = objc_msgSend(v34, "isPlaceholder", swift_retain(*v29).n128_f64[0]);
    goto LABEL_9;
  }
  __break(1u);
}

double SharePlayTogetherSession.groupSession(_:didUpdate:)()
{
  return sub_1001D8038("session:didUpdateParticipants", (uint64_t)&unk_10047D3A0, (uint64_t)&unk_1004C1E70);
}

uint64_t sub_1001D28F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D90C4, v6, v7);
}

double SharePlayTogetherSession.groupSession(_:didUpdatePendingParticipants:)()
{
  return sub_1001D8038("session:didUpdatePendingParticipants:", (uint64_t)&unk_10047D378, (uint64_t)&unk_1004C1E60);
}

void sub_1001D29C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  id v12;

  swift_unknownObjectRetain(a3);
  v12 = a1;
  sub_1001D8038(a5, a6, a7);
  swift_unknownObjectRelease(a3);

}

double SharePlayTogetherSession.groupSession(_:didUpdateMembers:)()
{
  return sub_1001D8038("session:didUpdateMembers:", (uint64_t)&unk_10047D350, (uint64_t)&unk_1004C1E50);
}

uint64_t sub_1001D2A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D2AD0, v7, v8);
}

uint64_t sub_1001D2AD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1001CF508();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D2B20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, static Logger.sharePlayTogether);
  sub_100039D34(v0, (uint64_t)static Logger.sharePlayTogether);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0xD000000000000011, 0x80000001003AEC50);
}

id sub_1001D2BC8(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  id result;

  if (a4)
  {
    sub_100026084(a2, a3);
    return a4;
  }
  return result;
}

uint64_t static Logger.sharePlayTogether.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100039D34(v2, (uint64_t)static Logger.sharePlayTogether);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_1001D2C6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004BC8B0);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_24;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_43;
    if (v13 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v13);
    if (!v26)
    {
      v27 = v13 + 1;
      if (v13 + 1 >= v41)
      {
LABEL_34:
        swift_release(v5);
        v3 = v40;
        if ((v43 & 1) == 0)
          goto LABEL_41;
        goto LABEL_37;
      }
      v26 = *(_QWORD *)(v42 + 8 * v27);
      if (!v26)
      {
        while (1)
        {
          v13 = v27 + 1;
          if (__OFADD__(v27, 1))
            break;
          if (v13 >= v41)
            goto LABEL_34;
          v26 = *(_QWORD *)(v42 + 8 * v13);
          ++v27;
          if (v26)
            goto LABEL_23;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      ++v13;
    }
LABEL_23:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_24:
    v28 = 16 * v23;
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v28);
    v31 = *v29;
    v30 = v29[1];
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v28);
    v34 = *v32;
    v33 = v32[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v44);
    String.hash(into:)(v44, v31, v30);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v17 == v36;
        if (v17 == v36)
          v17 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v31;
    v20[1] = v30;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v34;
    v21[1] = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D2F78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004BE690);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_100007EE4((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_10000FCD4(v25, (uint64_t)&v39);
      sub_10000990C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_100007EE4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D328C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004C1EC0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_41;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v35);
      Hasher._combine(_:)(v21);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1001D3550(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004BC890);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v38);
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D3864(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t i;
  int v53;
  uint64_t v54;

  v3 = v2;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v51 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v54 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004BC870);
  v53 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (*(_QWORD *)(v12 + 16))
  {
    v15 = 1 << *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 64);
    v50 = (_QWORD *)(v12 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v48 = v2;
    v49 = (unint64_t)(v15 + 63) >> 6;
    v19 = v13 + 64;
    v20 = swift_retain(v12);
    v21 = 0;
    v22 = v12;
    for (i = v12; ; v22 = i)
    {
      if (v18)
      {
        v24 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v25 = v24 | (v21 << 6);
      }
      else
      {
        v26 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v26 >= v49)
        {
          swift_release(v22);
          v3 = v48;
          v27 = v50;
          if ((v53 & 1) == 0)
            goto LABEL_41;
LABEL_38:
          v46 = 1 << *(_BYTE *)(i + 32);
          if (v46 >= 64)
            bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v27 = -1 << v46;
          v45 = i;
          *(_QWORD *)(i + 16) = 0;
          goto LABEL_44;
        }
        v27 = v50;
        v28 = v50[v26];
        ++v21;
        if (!v28)
        {
          v21 = v26 + 1;
          if (v26 + 1 >= v49)
            goto LABEL_37;
          v28 = v50[v21];
          if (!v28)
          {
            v29 = v26 + 2;
            if (v29 >= v49)
            {
LABEL_37:
              swift_release(v22);
              v3 = v48;
              if ((v53 & 1) == 0)
              {
LABEL_41:
                v45 = i;
                goto LABEL_44;
              }
              goto LABEL_38;
            }
            v28 = v50[v29];
            if (!v28)
            {
              while (1)
              {
                v21 = v29 + 1;
                if (__OFADD__(v29, 1))
                  break;
                if (v21 >= v49)
                  goto LABEL_37;
                v28 = v50[v21];
                ++v29;
                if (v28)
                  goto LABEL_23;
              }
LABEL_46:
              __break(1u);
              return;
            }
            v21 = v29;
          }
        }
LABEL_23:
        v18 = (v28 - 1) & v28;
        v25 = __clz(__rbit64(v28)) + (v21 << 6);
      }
      v30 = *(_QWORD *)(v9 + 72);
      v31 = *(_QWORD *)(v22 + 48) + v30 * v25;
      if ((v53 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 32))(v11, v31, v8, v20);
        v32 = *(_QWORD *)(v22 + 56);
        v33 = *(_QWORD *)(v51 + 72);
        sub_100084888(v32 + v33 * v25, v54, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v11, v31, v8, v20);
        v34 = *(_QWORD *)(v22 + 56);
        v33 = *(_QWORD *)(v51 + 72);
        sub_1000A2258(v34 + v33 * v25, v54, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      }
      v35 = *(_QWORD *)(v14 + 40);
      v36 = sub_100004D8C(&qword_1004C05C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
      v38 = -1 << *(_BYTE *)(v14 + 32);
      v39 = v37 & ~v38;
      v40 = v39 >> 6;
      if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
      {
        v23 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v41 = 0;
        v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (++v40 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v43 = v40 == v42;
          if (v40 == v42)
            v40 = 0;
          v41 |= v43;
          v44 = *(_QWORD *)(v19 + 8 * v40);
        }
        while (v44 == -1);
        v23 = __clz(__rbit64(~v44)) + (v40 << 6);
      }
      *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v30 * v23, v11, v8);
      sub_100084888(v54, *(_QWORD *)(v14 + 56) + v33 * v23, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  v45 = v12;
LABEL_44:
  swift_release(v45);
  *v3 = v14;
}

void sub_1001D3C80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004BC8A0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_100007EE4(v24, v38);
      }
      else
      {
        sub_10000990C((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v37);
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_100007EE4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D3F7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  Swift::UInt *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt *v21;
  Swift::UInt v22;
  Swift::UInt v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004C1EB8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v36)
          goto LABEL_34;
        v19 = v37[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_34;
          v19 = v37[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_34:
              if ((v35 & 1) == 0)
              {
                swift_release(v5);
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v36)
                  goto LABEL_34;
                v19 = v37[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = (Swift::UInt *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v38);
      Hasher._combine(_:)(v23);
      Hasher._combine(_:)(v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (Swift::UInt *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1001D4258(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004BC850);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_unknownObjectRetain(v33);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D452C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  int v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v6 = sub_1000057B4(&qword_1004BF1E0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_1000057B4((uint64_t *)&unk_1004C1EA8);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v45 = v11;
LABEL_45:
    swift_release(v45);
    *v3 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v52 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v50 = v3;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v54 = v11;
  v20 = swift_retain(v11);
  v21 = 0;
  v49 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v53 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v51)
    {
      v46 = v54;
      swift_release(v54);
      v3 = v50;
      v28 = v52;
      if ((v49 & 1) != 0)
      {
LABEL_40:
        v47 = 1 << *(_BYTE *)(v46 + 32);
        if (v47 >= 64)
          bzero(v28, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v47;
        *(_QWORD *)(v46 + 16) = 0;
      }
LABEL_44:
      v45 = v46;
      goto LABEL_45;
    }
    v28 = v52;
    v29 = v52[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v51)
        goto LABEL_37;
      v29 = v52[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v54;
    v32 = *(_QWORD *)(v55 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v55 + v23))(v10, *(_QWORD *)(v54 + 48) + v32 * v26, v8, v20);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v57 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v57 + v23))(v56, v33 + v34 * v26, v58);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_100004D8C(&qword_1004C05C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v57 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v56, v58);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v51)
  {
LABEL_37:
    v46 = v54;
    swift_release(v54);
    v3 = v50;
    if ((v49 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v52[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v51)
      goto LABEL_37;
    v29 = v52[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
}

void sub_1001D4928(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004C1E98);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v40 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v39)
          goto LABEL_36;
        v23 = v40[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_36;
          v23 = v40[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_36:
              if ((v41 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v39)
                  goto LABEL_36;
                v23 = v40[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(_QWORD *)(v5 + 56) + 56 * v21;
      v31 = *(_BYTE *)v30;
      v43 = *(_OWORD *)(v30 + 24);
      v44 = *(_OWORD *)(v30 + 8);
      v42 = *(_OWORD *)(v30 + 40);
      if ((v41 & 1) == 0)
      {
        v32 = (id)v44;
        v33 = *((id *)&v44 + 1);
        v34 = (id)v43;
        v35 = *((id *)&v43 + 1);
        v36 = (id)v42;
        v37 = *((id *)&v42 + 1);
      }
      Hasher.init(_seed:)(v45);
      Hasher._combine(_:)(v29 + 1);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 56 * v18;
      *(_BYTE *)v19 = v31;
      *(_OWORD *)(v19 + 8) = v44;
      *(_OWORD *)(v19 + 24) = v43;
      *(_OWORD *)(v19 + 40) = v42;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1001D4C78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[9];

  v3 = v2;
  v47 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_1000057B4(&qword_1004BC820);
  v45 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v42 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v22 >= v43)
      goto LABEL_36;
    v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v48);
    String.hash(into:)(v48, v29, v28);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v43)
  {
    v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v43)
          goto LABEL_36;
        v23 = v44[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v8);
  v3 = v42;
  if ((v45 & 1) != 0)
  {
    v40 = 1 << *(_BYTE *)(v8 + 32);
    if (v40 >= 64)
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v44 = -1 << v40;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release(v8);
  *v3 = v10;
}

void sub_1001D4FE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004BC8B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    if (!v26)
      break;
LABEL_23:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1001D5180()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004BE690);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_10000FCD4(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10000990C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_100007EE4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D5364()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004C1EC0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D54F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004BC890);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D56A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v36 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000057B4(&qword_1004BC870);
  v30 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    swift_release(v5);
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        sub_100084888(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for PushNotificationObserver.RegisteredHandler))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1000A2258(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    swift_release(v37);
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1001D596C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1000057B4(&qword_1004BC8A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_10000990C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100007EE4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001D5B50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  sub_1000057B4(&qword_1004C1EB8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D5CE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1000057B4(&qword_1004BC850);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_unknownObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D5E88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1000057B4(&qword_1004BF1E0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000057B4((uint64_t *)&unk_1004C1EA8);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1001D616C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004C1E98);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 56 * v15;
    v17 = *(_BYTE *)v16;
    v28 = *(_OWORD *)(v16 + 8);
    v29 = *(_OWORD *)(v16 + 24);
    v30 = *(_OWORD *)(v16 + 40);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 56 * v15;
    *(_BYTE *)v18 = v17;
    *(_OWORD *)(v18 + 8) = v28;
    *(_OWORD *)(v18 + 24) = v29;
    *(_OWORD *)(v18 + 40) = v30;
    v19 = (id)v28;
    v20 = *((id *)&v28 + 1);
    v21 = (id)v29;
    v22 = *((id *)&v29 + 1);
    v23 = (id)v30;
    v24 = *((id *)&v30 + 1);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001D6380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for SocialProfile(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000057B4(&qword_1004BC820);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release(v4);
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release(v4);
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

char *sub_1001D65DC(uint64_t a1)
{
  return sub_100097BAC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001D65F0(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_1001D6604(uint64_t a1)
{
  return sub_10005DE58(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1001D6618(_QWORD *a1)
{
  return sub_10005E7A0(0, a1[2], 0, a1);
}

char *sub_1001D662C(uint64_t a1)
{
  return sub_10005E8C4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1001D6640(uint64_t a1)
{
  return sub_10005E9D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_1001D6654(_QWORD *a1)
{
  return sub_10005EE00(0, a1[2], 0, a1);
}

uint64_t sub_1001D6668(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1001D65F0(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_1001D66E0(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_1001D66E0(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::Int v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t *v48;
  Swift::Int v49;
  Swift::Int v50;
  uint64_t *v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  void *v55;
  Swift::Int v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  void *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  Swift::Int v135;
  Swift::Int v136;
  Swift::Int v137;
  uint64_t v138;
  void **v139;
  uint64_t v140;
  int v141;
  Swift::Int v142;
  Swift::Int v143;
  uint64_t v144;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_171;
    if (v3)
      return sub_1001D70F4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_170;
  v6 = result;
  v129 = a1;
  if (v3 <= 1)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v144 = (uint64_t)_swiftEmptyArrayStorage;
    v139 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_136:
      if (v12 >= 2)
      {
        v122 = *v129;
        do
        {
          v123 = v12 - 2;
          if (v12 < 2)
            goto LABEL_165;
          if (!v122)
            goto LABEL_178;
          v124 = *(_QWORD *)&v9[16 * v123 + 32];
          v125 = *(_QWORD *)&v9[16 * v12 + 24];
          result = sub_1001D7304((void **)(v122 + 8 * v124), (void **)(v122 + 8 * *(_QWORD *)&v9[16 * v12 + 16]), v122 + 8 * v125, v139);
          if (v1)
            break;
          if (v125 < v124)
            goto LABEL_166;
          result = swift_isUniquelyReferenced_nonNull_native(v9);
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1001D78E4((uint64_t)v9);
            v9 = (char *)result;
          }
          if (v123 >= *((_QWORD *)v9 + 2))
            goto LABEL_167;
          v126 = &v9[16 * v123 + 32];
          *(_QWORD *)v126 = v124;
          *((_QWORD *)v126 + 1) = v125;
          v127 = *((_QWORD *)v9 + 2);
          if (v12 > v127)
            goto LABEL_168;
          result = (uint64_t)memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v127 - v12));
          *((_QWORD *)v9 + 2) = v127 - 1;
          v12 = v127 - 1;
        }
        while (v127 > 2);
      }
LABEL_147:
      v128 = swift_bridgeObjectRelease();
      *(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v128);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1000057B4(&qword_1004BE080);
    result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v139 = (void **)((result & 0xFFFFFFFFFFFFFF8) + 32);
    v144 = result;
  }
  v10 = 0;
  v11 = *a1;
  v131 = *a1 + 16;
  v132 = v6;
  v130 = *a1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v135 = v3;
  v140 = *a1;
  while (2)
  {
    v13 = v10;
    v14 = v10 + 1;
    v137 = v10;
    if (v10 + 1 >= v3)
    {
      v24 = v3;
      goto LABEL_59;
    }
    v133 = v9;
    v15 = v11;
    v16 = *(void **)(v11 + 8 * v14);
    v17 = *(void **)(v15 + 8 * v10);
    swift_unknownObjectRetain(v16);
    swift_unknownObjectRetain(v17);
    v18 = objc_msgSend(v16, "identity");
    if (v18
      && (v19 = v18, v20 = objc_msgSend(v18, "displayName"), v19, v20))
    {
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0xE000000000000000;
    }
    v25 = objc_msgSend(v17, "identity");
    v26 = v25;
    if (v25)
    {
      v27 = objc_msgSend(v25, "displayName");

      if (v27)
      {
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v29 = v28;

        if ((void *)v21 != v26)
          goto LABEL_29;
        goto LABEL_27;
      }
      v26 = 0;
    }
    v29 = 0xE000000000000000;
    if ((void *)v21 != v26)
    {
LABEL_29:
      v141 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v26, v29, 1);
      goto LABEL_30;
    }
LABEL_27:
    if (v23 != v29)
      goto LABEL_29;
    v141 = 0;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v16);
    result = swift_unknownObjectRelease(v17);
    v14 = v13 + 2;
    v24 = v135;
    if (v13 + 2 >= v135)
      goto LABEL_51;
    v30 = v13;
    v31 = v13 + 2;
    v32 = (_QWORD *)(v131 + 8 * v30);
    while (1)
    {
      v33 = (void *)*(v32 - 1);
      v34 = (void *)*v32;
      swift_unknownObjectRetain(*v32);
      swift_unknownObjectRetain(v33);
      v35 = objc_msgSend(v34, "identity");
      if (!v35)
        goto LABEL_35;
      v36 = v35;
      v37 = objc_msgSend(v35, "displayName");

      if (v37)
      {
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v40 = v39;

      }
      else
      {
LABEL_35:
        v38 = 0;
        v40 = 0xE000000000000000;
      }
      v41 = objc_msgSend(v33, "identity");
      if (v41)
      {
        v42 = v41;
        v43 = objc_msgSend(v41, "displayName");

        if (v43)
        {
          v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
          v46 = v45;

        }
        else
        {
          v44 = 0;
          v46 = 0xE000000000000000;
        }
        v24 = v135;
        if (v38 != v44)
          goto LABEL_45;
      }
      else
      {
        v44 = 0;
        v46 = 0xE000000000000000;
        if (v38)
          goto LABEL_45;
      }
      if (v40 == v46)
      {
        v47 = 0;
        goto LABEL_46;
      }
LABEL_45:
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v44, v46, 1);
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v34);
      result = swift_unknownObjectRelease(v33);
      if (((v141 ^ v47) & 1) != 0)
        break;
      ++v32;
      if (v24 == ++v31)
      {
        v14 = v24;
        goto LABEL_50;
      }
    }
    v14 = v31;
LABEL_50:
    v13 = v137;
LABEL_51:
    v9 = v133;
    v11 = v140;
    if ((v141 & 1) != 0)
    {
      if (v14 < v13)
        goto LABEL_172;
      if (v13 < v14)
      {
        v48 = (uint64_t *)(v130 + 8 * v14);
        v49 = v14;
        v50 = v13;
        v51 = (uint64_t *)(v140 + 8 * v13);
        do
        {
          if (v50 != --v49)
          {
            if (!v140)
              goto LABEL_177;
            v52 = *v51;
            *v51 = *v48;
            *v48 = v52;
          }
          ++v50;
          --v48;
          ++v51;
        }
        while (v50 < v49);
      }
    }
LABEL_59:
    if (v14 >= v24)
      goto LABEL_88;
    if (__OFSUB__(v14, v13))
      goto LABEL_169;
    if (v14 - v13 >= v132)
      goto LABEL_88;
    if (__OFADD__(v13, v132))
      goto LABEL_173;
    if (v13 + v132 >= v24)
      v53 = v24;
    else
      v53 = v13 + v132;
    if (v53 >= v13)
    {
      if (v14 == v53)
        goto LABEL_88;
      v134 = v9;
      v54 = v130 + 8 * v14;
      v136 = v53;
      while (2)
      {
        v142 = v14;
        v55 = *(void **)(v11 + 8 * v14);
        v56 = v13;
        v138 = v54;
        v57 = v54;
        while (2)
        {
          v58 = *(void **)v57;
          swift_unknownObjectRetain(v55);
          swift_unknownObjectRetain(v58);
          v59 = objc_msgSend(v55, "identity");
          if (v59
            && (v60 = v59,
                v61 = objc_msgSend(v59, "displayName"),
                v60,
                v61))
          {
            v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
            v64 = v63;

          }
          else
          {
            v62 = 0;
            v64 = 0xE000000000000000;
          }
          v65 = objc_msgSend(v58, "identity");
          if (!v65
            || (v66 = v65,
                v67 = objc_msgSend(v65, "displayName"),
                v66,
                !v67))
          {
            v68 = 0;
            v70 = 0xE000000000000000;
            if (!v62)
              goto LABEL_82;
            goto LABEL_83;
          }
          v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
          v70 = v69;

          if (v62 != v68)
            goto LABEL_83;
LABEL_82:
          if (v64 != v70)
          {
LABEL_83:
            v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v64, v68, v70, 1);
            swift_unknownObjectRelease(v55);
            swift_unknownObjectRelease(v58);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if ((v71 & 1) == 0)
              goto LABEL_70;
            v11 = v140;
            if (!v140)
              goto LABEL_175;
            v72 = *(void **)v57;
            v55 = *(void **)(v57 + 8);
            *(_QWORD *)v57 = v55;
            *(_QWORD *)(v57 + 8) = v72;
            v57 -= 8;
            if (v142 == ++v56)
              goto LABEL_71;
            continue;
          }
          break;
        }
        swift_unknownObjectRelease(v55);
        swift_unknownObjectRelease(v58);
        result = swift_bridgeObjectRelease_n(v64, 2);
LABEL_70:
        v11 = v140;
LABEL_71:
        v14 = v142 + 1;
        v13 = v137;
        v54 = v138 + 8;
        if (v142 + 1 != v136)
          continue;
        break;
      }
      v14 = v136;
      v9 = v134;
LABEL_88:
      if (v14 < v13)
        goto LABEL_164;
      result = swift_isUniquelyReferenced_nonNull_native(v9);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001D77EC(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v9 = (char *)result;
      }
      v74 = *((_QWORD *)v9 + 2);
      v73 = *((_QWORD *)v9 + 3);
      v12 = v74 + 1;
      v143 = v14;
      if (v74 >= v73 >> 1)
      {
        result = (uint64_t)sub_1001D77EC((char *)(v73 > 1), v74 + 1, 1, v9);
        v9 = (char *)result;
      }
      *((_QWORD *)v9 + 2) = v12;
      v75 = v9 + 32;
      v76 = &v9[16 * v74 + 32];
      *(_QWORD *)v76 = v137;
      *((_QWORD *)v76 + 1) = v143;
      if (v74)
      {
        while (2)
        {
          v77 = v12 - 1;
          if (v12 >= 4)
          {
            v82 = &v75[2 * v12];
            v83 = *(v82 - 8);
            v84 = *(v82 - 7);
            v88 = __OFSUB__(v84, v83);
            v85 = v84 - v83;
            if (v88)
              goto LABEL_153;
            v87 = *(v82 - 6);
            v86 = *(v82 - 5);
            v88 = __OFSUB__(v86, v87);
            v80 = v86 - v87;
            v81 = v88;
            if (v88)
              goto LABEL_154;
            v89 = v12 - 2;
            v90 = &v75[2 * v12 - 4];
            v92 = *v90;
            v91 = v90[1];
            v88 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v88)
              goto LABEL_155;
            v88 = __OFADD__(v80, v93);
            v94 = v80 + v93;
            if (v88)
              goto LABEL_157;
            if (v94 >= v85)
            {
              v112 = &v75[2 * v77];
              v114 = *v112;
              v113 = v112[1];
              v88 = __OFSUB__(v113, v114);
              v115 = v113 - v114;
              if (v88)
                goto LABEL_163;
              v105 = v80 < v115;
            }
            else
            {
LABEL_107:
              if ((v81 & 1) != 0)
                goto LABEL_156;
              v89 = v12 - 2;
              v95 = &v75[2 * v12 - 4];
              v97 = *v95;
              v96 = v95[1];
              v98 = __OFSUB__(v96, v97);
              v99 = v96 - v97;
              v100 = v98;
              if (v98)
                goto LABEL_158;
              v101 = &v75[2 * v77];
              v103 = *v101;
              v102 = v101[1];
              v88 = __OFSUB__(v102, v103);
              v104 = v102 - v103;
              if (v88)
                goto LABEL_160;
              if (__OFADD__(v99, v104))
                goto LABEL_162;
              if (v99 + v104 < v80)
                goto LABEL_119;
              v105 = v80 < v104;
            }
            if (v105)
              v77 = v89;
          }
          else
          {
            if (v12 == 3)
            {
              v79 = *((_QWORD *)v9 + 4);
              v78 = *((_QWORD *)v9 + 5);
              v88 = __OFSUB__(v78, v79);
              v80 = v78 - v79;
              v81 = v88;
              goto LABEL_107;
            }
            v106 = *((_QWORD *)v9 + 4);
            v107 = *((_QWORD *)v9 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
LABEL_119:
            if ((v100 & 1) != 0)
              goto LABEL_159;
            v108 = &v75[2 * v77];
            v110 = *v108;
            v109 = v108[1];
            v88 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v88)
              goto LABEL_161;
            if (v111 < v99)
              goto LABEL_14;
          }
          v116 = v77 - 1;
          if (v77 - 1 >= v12)
          {
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          if (!v11)
            goto LABEL_176;
          v117 = &v75[2 * v116];
          v118 = *v117;
          v119 = &v75[2 * v77];
          v120 = v119[1];
          result = sub_1001D7304((void **)(v11 + 8 * *v117), (void **)(v11 + 8 * *v119), v11 + 8 * v120, v139);
          if (v1)
            goto LABEL_147;
          if (v120 < v118)
            goto LABEL_150;
          if (v77 > *((_QWORD *)v9 + 2))
            goto LABEL_151;
          *v117 = v118;
          v75[2 * v116 + 1] = v120;
          v121 = *((_QWORD *)v9 + 2);
          if (v77 >= v121)
            goto LABEL_152;
          v12 = v121 - 1;
          result = (uint64_t)memmove(&v75[2 * v77], v119 + 2, 16 * (v121 - 1 - v77));
          *((_QWORD *)v9 + 2) = v121 - 1;
          if (v121 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v12 = 1;
LABEL_14:
      v3 = v135;
      v10 = v143;
      if (v143 >= v135)
        goto LABEL_136;
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
  return result;
}

uint64_t sub_1001D70F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v26 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v26 + 8 * v4);
    v7 = v23;
    v24 = v5;
    v25 = v4;
    while (1)
    {
      v8 = *(void **)v5;
      swift_unknownObjectRetain(v6);
      swift_unknownObjectRetain(v8);
      v9 = objc_msgSend(v6, "identity");
      if (v9
        && (v10 = v9, v11 = objc_msgSend(v9, "displayName"), v10, v11))
      {
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0xE000000000000000;
      }
      v15 = objc_msgSend(v8, "identity");
      v16 = v15;
      if (v15)
      {
        v17 = objc_msgSend(v15, "displayName");

        if (v17)
        {
          v16 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
          v19 = v18;

        }
        else
        {
          v16 = 0;
          v19 = 0xE000000000000000;
        }
        v4 = v25;
        if ((void *)v12 != v16)
          goto LABEL_19;
      }
      else
      {
        v19 = 0xE000000000000000;
        if (v12)
          goto LABEL_19;
      }
      if (v14 == v19)
      {
        swift_unknownObjectRelease(v6);
        swift_unknownObjectRelease(v8);
        result = swift_bridgeObjectRelease_n(v14, 2);
LABEL_5:
        ++v4;
        v5 = v24 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
LABEL_19:
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v19, 1);
      swift_unknownObjectRelease(v6);
      swift_unknownObjectRelease(v8);
      swift_bridgeObjectRelease(v19);
      result = swift_bridgeObjectRelease(v14);
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v26)
      {
        __break(1u);
        return result;
      }
      v21 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v21;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_1001D7304(void **__dst, void **__src, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  char **v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char **v23;
  id v24;
  void *v25;
  void **v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  void **v32;
  void **v33;
  void **v34;
  void *v35;
  void **v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  void **v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v55;
  void **v57;
  void **v58;
  unint64_t v59;
  void **v60;
  void **v61;
  void **v62;
  void **v63;

  v4 = a4;
  v5 = __src;
  v6 = __dst;
  v7 = (char *)__src - (char *)__dst;
  v8 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v8 = (char *)__src - (char *)__dst;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 3;
  if (v9 >= v11 >> 3)
  {
    if (a4 != __src || &__src[v12] <= a4)
      memmove(a4, __src, 8 * v12);
    v13 = &v4[v12];
    if (v6 >= v5 || v10 < 8)
      goto LABEL_63;
    v34 = (void **)(a3 - 8);
    v55 = v4;
    v61 = v6;
    while (1)
    {
      v59 = (unint64_t)v13;
      v35 = *(v13 - 1);
      v57 = v13 - 1;
      v36 = v5 - 1;
      v37 = *(v5 - 1);
      swift_unknownObjectRetain(v35);
      swift_unknownObjectRetain(v37);
      v38 = objc_msgSend(v35, "identity");
      v63 = v5;
      if (v38
        && (v39 = v38, v40 = objc_msgSend(v38, "displayName"),
                       v39,
                       v40))
      {
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

      }
      else
      {
        v41 = 0;
        v43 = 0xE000000000000000;
      }
      v44 = objc_msgSend(v37, "identity");
      v45 = v44;
      if (!v44)
        goto LABEL_47;
      v46 = objc_msgSend(v44, "displayName");

      if (!v46)
        break;
      v45 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v48 = v47;

      if ((void *)v41 != v45)
        goto LABEL_50;
LABEL_48:
      if (v43 == v48)
      {
        v49 = 0;
        v48 = v43;
        goto LABEL_51;
      }
LABEL_50:
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v45, v48, 1);
LABEL_51:
      v50 = v34 + 1;
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v43);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v37);
      if ((v49 & 1) != 0)
      {
        v4 = v55;
        v13 = (void **)v59;
        v51 = (unint64_t)v61;
        if (v50 == v63)
        {
          v5 = v36;
          if (v34 < v63)
            goto LABEL_61;
        }
        else
        {
          v5 = v36;
        }
      }
      else
      {
        v51 = (unint64_t)v61;
        v4 = v55;
        v5 = v63;
        if (v50 == (void **)v59)
        {
          v13 = v57;
          v36 = v57;
          if ((unint64_t)v34 < v59)
            goto LABEL_61;
        }
        else
        {
          v13 = v57;
          v36 = v57;
        }
      }
      *v34 = *v36;
LABEL_61:
      if ((unint64_t)v5 > v51)
      {
        --v34;
        if (v13 > v4)
          continue;
      }
      goto LABEL_63;
    }
    v45 = 0;
LABEL_47:
    v48 = 0xE000000000000000;
    if ((void *)v41 != v45)
      goto LABEL_50;
    goto LABEL_48;
  }
  if (a4 != __dst || &__dst[v9] <= a4)
    memmove(a4, __dst, 8 * v9);
  v13 = &v4[v9];
  if ((unint64_t)v5 < a3 && v7 >= 8)
  {
    v14 = &selRef_connectionStartTime;
    v58 = &v4[v9];
    while (1)
    {
      v60 = v6;
      v62 = v5;
      v15 = *v5;
      v16 = *v4;
      swift_unknownObjectRetain(v15);
      swift_unknownObjectRetain(v16);
      v17 = objc_msgSend(v15, v14[114]);
      if (v17
        && (v18 = v17, v19 = objc_msgSend(v17, "displayName"),
                       v18,
                       v19))
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

      }
      else
      {
        v20 = 0;
        v22 = 0xE000000000000000;
      }
      v23 = v14;
      v24 = objc_msgSend(v16, v14[114]);
      if (v24)
      {
        v25 = v24;
        v26 = v4;
        v27 = objc_msgSend(v24, "displayName");

        if (v27)
        {
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v30 = v29;

          if (v20 != v28)
            goto LABEL_24;
          goto LABEL_22;
        }
      }
      else
      {
        v26 = v4;
      }
      v28 = 0;
      v30 = 0xE000000000000000;
      if (v20)
        goto LABEL_24;
LABEL_22:
      if (v22 == v30)
      {
        swift_unknownObjectRelease(v15);
        swift_unknownObjectRelease(v16);
        swift_bridgeObjectRelease_n(v22, 2);
LABEL_27:
        v32 = v26;
        v4 = v26 + 1;
        v33 = v60;
        v5 = v62;
        if (v60 == v26)
          goto LABEL_29;
LABEL_28:
        *v33 = *v32;
        goto LABEL_29;
      }
LABEL_24:
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v28, v30, 1);
      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v16);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v22);
      if ((v31 & 1) == 0)
        goto LABEL_27;
      v32 = v62;
      v5 = v62 + 1;
      v33 = v60;
      v4 = v26;
      if (v60 != v62)
        goto LABEL_28;
LABEL_29:
      v6 = v33 + 1;
      v13 = v58;
      if (v4 < v58)
      {
        v14 = v23;
        if ((unint64_t)v5 < a3)
          continue;
      }
      break;
    }
  }
  v5 = v6;
LABEL_63:
  v52 = (char *)v13 - (char *)v4;
  v53 = (char *)v13 - (char *)v4 + 7;
  if (v52 < 0)
    v52 = v53;
  if (v5 != v4 || v5 >= (void **)((char *)v4 + (v52 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v5, v4, 8 * (v52 >> 3));
  return 1;
}

char *sub_1001D77EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004C1E30);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1001D78E4(uint64_t a1)
{
  return sub_1001D77EC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL _s9MusicCore24SharePlayTogetherSessionC11ParticipantV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for SocialProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004C1E88);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v20 == v21
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)a1, v20, *(_QWORD *)a2, v21, 0),
        result = 0,
        (v22 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a2 + 24);
    if (v24)
    {
      if (!v25)
        return 0;
      v26 = *(_QWORD *)(a1 + 16);
      v27 = *(_QWORD *)(a2 + 16);
      if (v26 != v27 || v24 != v25)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v24, v27, v25, 0);
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
      || *(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
    {
      return 0;
    }
    v35 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    sub_10000FEB4(a1 + *(int *)(v35 + 32), (uint64_t)v19, (uint64_t *)&unk_1004C1C18);
    sub_10000FEB4(a2 + *(int *)(v35 + 32), (uint64_t)v17, (uint64_t *)&unk_1004C1C18);
    v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10000FEB4((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1004C1C18);
    sub_10000FEB4((uint64_t)v17, v29, (uint64_t *)&unk_1004C1C18);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v30((uint64_t)v10, 1, v4) == 1)
    {
      sub_10000FE2C((uint64_t)v17, (uint64_t *)&unk_1004C1C18);
      sub_10000FE2C((uint64_t)v19, (uint64_t *)&unk_1004C1C18);
      if (v30(v29, 1, v4) == 1)
      {
        sub_10000FE2C((uint64_t)v10, (uint64_t *)&unk_1004C1C18);
        return 1;
      }
      goto LABEL_18;
    }
    sub_10000FEB4((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1004C1C18);
    if (v30(v29, 1, v4) == 1)
    {
      sub_10000FE2C((uint64_t)v17, (uint64_t *)&unk_1004C1C18);
      sub_10000FE2C((uint64_t)v19, (uint64_t *)&unk_1004C1C18);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_18:
      sub_10000FE2C((uint64_t)v10, &qword_1004C1E88);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v29, v4);
    v31 = sub_100004D8C(&qword_1004C1E90, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v32 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v4, v31);
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33(v7, v4);
    sub_10000FE2C((uint64_t)v17, (uint64_t *)&unk_1004C1C18);
    sub_10000FE2C((uint64_t)v19, (uint64_t *)&unk_1004C1C18);
    v33(v14, v4);
    sub_10000FE2C((uint64_t)v10, (uint64_t *)&unk_1004C1C18);
    return (v32 & 1) != 0;
  }
  return result;
}

size_t sub_1001D7C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v19 = a2;
  v20 = a3;
  v6 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = _swiftEmptyArrayStorage;
  if (!v10)
    return (size_t)v11;
  v21 = _swiftEmptyArrayStorage;
  result = sub_1000973B8(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v18[1] = v4;
    v13 = 0;
    v11 = v21;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }
      else
      {
        v14 = *(void **)(a1 + 8 * v13 + 32);
        swift_unknownObjectRetain(v14);
      }
      sub_1001D02F0(v14, v19, v20, (uint64_t)v9);
      swift_unknownObjectRelease(v14);
      v21 = v11;
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_1000973B8(v15 > 1, v16 + 1, 1);
        v11 = v21;
      }
      ++v13;
      v11[2] = v16 + 1;
      sub_100084888((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, type metadata accessor for SharePlayTogetherSession.Participant);
    }
    while (v10 != v13);
    return (size_t)v11;
  }
  __break(1u);
  return result;
}

void sub_1001D7E48(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a4)
  {
    sub_10000FC28(a2, a3);

  }
}

uint64_t sub_1001D7E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001D7E8C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001D7E94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D7EB8(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_100119C94(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t type metadata accessor for SharePlayTogetherSession.Participant(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C1D00, (uint64_t)&nominal type descriptor for SharePlayTogetherSession.Participant);
}

uint64_t sub_1001D7ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SharePlayTogetherSession(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C1C78, (uint64_t)&nominal type descriptor for SharePlayTogetherSession);
}

uint64_t sub_1001D7F30()
{
  return sub_1001D8B50((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001D7F3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004C1C2C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10002F6EC;
  return sub_1001D1EF8(a1, v4, v5, v7, v6);
}

uint64_t sub_1001D7FB4()
{
  return sub_1001D8B50((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1001D7FC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004C1C3C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10002F6EC;
  return sub_1001D23F4(a1, v4, v5, v7, v6);
}

double sub_1001D8038(const char *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = v3;
  v8 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8DB0 != -1)
    swift_once(&qword_1004B8DB0, sub_1001D2B20);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100039D34(v11, (uint64_t)static Logger.sharePlayTogether);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a1, v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = v7;
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(a2, 40, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v17;
  v21 = sub_1000E6084((uint64_t)v10, a3, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1001D81D0()
{
  return type metadata accessor for SharePlayTogetherSession(0);
}

void sub_1001D81D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  const char *v21;

  v10[0] = "\b";
  v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[2] = &unk_1003D2EE8;
  v10[3] = &unk_1003D2F00;
  v10[4] = (char *)&value witness table for Builtin.Int8 + 64;
  sub_1001D833C(319, &qword_1004C1C88, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001A29E4(319, (unint64_t *)&unk_1004C1C90, &qword_1004C1B78);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001D833C(319, (unint64_t *)&unk_1004C2120, (uint64_t)&type metadata for Int);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = v11;
        sub_1001A29E4(319, &qword_1004C1CA0, &qword_1004C1BB8);
        if (v9 <= 0x3F)
        {
          v13 = *(_QWORD *)(v8 - 8) + 64;
          v14 = &unk_1003D2F18;
          v15 = &unk_1003D2EE8;
          v16 = &unk_1003D2EE8;
          v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v20 = &unk_1003D2EE8;
          v21 = "\b";
          swift_updateClassMetadata2(a1, 256, 18, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_1001D833C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v14);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v10 = type metadata accessor for SocialProfile(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for SocialProfile(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for SocialProfile(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D8958);
}

uint64_t sub_1001D8958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D89E4);
}

uint64_t sub_1001D89E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000057B4((uint64_t *)&unk_1004C1C18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1001D8A5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1003D2F00;
  v4[1] = &unk_1003D2F40;
  v4[2] = &unk_1003D2EE8;
  v4[3] = &unk_1003D2EE8;
  sub_1001D8AE4(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1001D8AE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004C1D10)
  {
    v2 = type metadata accessor for SocialProfile(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004C1D10);
  }
}

uint64_t sub_1001D8B38()
{
  return sub_1001D8B50((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1001D8B44()
{
  return sub_1001D8B50((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001D8B50(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 32));

  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001D8B90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001D8BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C1DD0;
  if (!qword_1004C1DD0)
  {
    v1 = sub_10000598C(255, &qword_1004C1DC8, MRUserIdentity_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1004C1DD0);
  }
  return result;
}

uint64_t sub_1001D8C0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000096A0(a1, v3);
  result = dispatch thunk of SocialProfileFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001D8C50()
{
  return sub_1001D8D10(&qword_1004C1DC0);
}

uint64_t sub_1001D8C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C1DC0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1004C1DEC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10002E8E0;
  return sub_1001D0850(a1, v6, v7, v8, v9);
}

uint64_t sub_1001D8D04()
{
  return sub_1001D8D10(&qword_1004C1E00);
}

uint64_t sub_1001D8D10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = sub_1000057B4(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_1001D8D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C1E00) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1004C1E0C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10002F6EC;
  return sub_1001D0D64(a1, v6, v7, v8, v9);
}

unint64_t sub_1001D8E44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C1E18;
  if (!qword_1004C1E18)
  {
    v1 = sub_100009788(&qword_1004C1E00);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1004C1E18);
  }
  return result;
}

uint64_t sub_1001D8E90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D8ECC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001D8EF0(uint64_t a1)
{
  uint64_t v1;

  sub_1001CEACC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001D8F00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C1E4C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002E8E0;
  return sub_1001D2A64(a1, v4, v5, v6);
}

uint64_t sub_1001D8F70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C1E5C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_1001D28F4(a1, v4, v5, v6);
}

uint64_t sub_1001D8FE0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D900C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004C1E6C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002F6EC;
  return sub_1001D28F4(a1, v4, v5, v6);
}

uint64_t sub_1001D9078(uint64_t a1)
{
  sub_1001D7E48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

void sub_1001D90D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_100004D8C(&qword_1004BDAA8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10000FCCC(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_1001D9378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t j;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a4;
  v45 = a3;
  v46 = a2;
  v5 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v41 = (char *)&v37 - v13;
  v14 = *(_QWORD *)(a1 + 56);
  v39 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v44 = a1;
  result = swift_bridgeObjectRetain();
  j = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (j << 6); ; i = __clz(__rbit64(v23)) + (j << 6))
  {
    v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v41, *(_QWORD *)(v44 + 48) + *(_QWORD *)(v9 + 72) * i, v8);
    v26 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
    v27 = v26(v12, v25, v8);
    v28 = Participant.id.getter(v27);
    v29 = UUID.uuidString.getter(v28);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
    if (v29 == v46 && v31 == v45)
    {
      v33 = v45;
      swift_release(v44);
      swift_bridgeObjectRelease(v33);
LABEL_27:
      v35 = v38;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v26)(v38, v12, v8, v34);
      v36 = 0;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v35, v36, 1, v8);
      return swift_bridgeObjectRelease(v45);
    }
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v46, v45, 0);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0)
    {
      v34 = swift_release(v44);
      goto LABEL_27;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v22 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v22 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * v22);
    ++j;
    if (v23)
      goto LABEL_19;
    j = v22 + 1;
    if (v22 + 1 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 2;
    if (v22 + 2 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 3;
    if (v22 + 3 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    v24 = v22 + 4;
    if (v24 >= v40)
    {
LABEL_28:
      swift_release(v44);
      v36 = 1;
      v35 = v38;
      goto LABEL_29;
    }
    v23 = *(_QWORD *)(v39 + 8 * v24);
    for (j = v24; !v23; ++v24)
    {
      j = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_31;
      if (j >= v40)
        goto LABEL_28;
      v23 = *(_QWORD *)(v39 + 8 * j);
    }
LABEL_19:
    v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t GroupActivitiesManager.initiateSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[7] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v7);
  v2[9] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivitiesManager.PrepareResult(0);
  v2[10] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v9);
  v2[12] = swift_task_alloc(v9);
  v2[13] = swift_task_alloc(v9);
  v2[14] = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v2[15] = v10;
  v2[16] = type metadata accessor for MainActor(0);
  v2[17] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_1004C1F1C);
  v2[18] = v12;
  *v12 = v2;
  v12[1] = sub_1001D97F0;
  return sub_1001E2A7C(v10);
}

uint64_t sub_1001D97F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D9860, v2, v3);
}

uint64_t sub_1001D9860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;

  swift_release(*(_QWORD *)(v0 + 136));
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = type metadata accessor for Logger(0);
  sub_100039D34(v3, (uint64_t)static Logger.groupActivities);
  v4 = sub_1000A2258(v2, v1, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 112);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v48 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1000A2258(v8, v9, type metadata accessor for GroupActivitiesManager.PrepareResult);
    v13 = (char *)String.init<A>(describing:)(v9, v10);
    v15 = v14;
    *(_QWORD *)(v11 + 4) = sub_1000393D0(v13, v14, &v48);
    swift_bridgeObjectRelease(v15);
    sub_100034960(v8, type metadata accessor for GroupActivitiesManager.PrepareResult);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "prepareForActivation result=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    sub_100034960(*(_QWORD *)(v0 + 112), type metadata accessor for GroupActivitiesManager.PrepareResult);
  }

  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 48);
  sub_1000A2258(*(_QWORD *)(v0 + 120), v16, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 4, v17))
  {
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 40);
    sub_100034960(*(_QWORD *)(v0 + 96), type metadata accessor for GroupActivitiesManager.PrepareResult);
    sub_1000A2258(v20, v21, type metadata accessor for GroupActivitiesManager.PrepareResult);
    if ((v19(v21, 4, v22) | 2) == 3)
    {
      v23 = 0;
    }
    else
    {
      sub_100034960(*(_QWORD *)(v0 + 88), type metadata accessor for GroupActivitiesManager.PrepareResult);
      v23 = 1;
    }
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 64);
    v24 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 48);
    v47 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 24);
    v27 = *(_QWORD *)(v0 + 32);
    v29 = *(void **)(v0 + 16);
    sub_100084888(*(_QWORD *)(v0 + 96), v24, type metadata accessor for GroupActivitiesManager.Activity);
    sub_1001E3244();
    v30 = type metadata accessor for TaskPriority(0);
    v23 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v27, 1, 1, v30);
    sub_1000A2258(v24, v25, type metadata accessor for GroupActivitiesManager.Activity);
    v31 = v29;
    v32 = swift_retain(v28);
    v33 = static MainActor.shared.getter(v32);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 48) & ~v34;
    v36 = (_QWORD *)swift_allocObject(&unk_10047D428, v35 + v47, v34 | 7);
    v36[2] = v33;
    v36[3] = &protocol witness table for MainActor;
    v36[4] = v29;
    v36[5] = v28;
    sub_100084888(v25, (uint64_t)v36 + v35, type metadata accessor for GroupActivitiesManager.Activity);
    v37 = sub_1000E6084(v27, (uint64_t)&unk_1004C1F28, (uint64_t)v36);
    swift_release(v37);
    sub_100034960(v24, type metadata accessor for GroupActivitiesManager.Activity);
  }
  v39 = *(_QWORD *)(v0 + 112);
  v38 = *(_QWORD *)(v0 + 120);
  v41 = *(_QWORD *)(v0 + 96);
  v40 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 88);
  v44 = *(_QWORD *)(v0 + 64);
  v43 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 32);
  sub_100034960(v38, type metadata accessor for GroupActivitiesManager.PrepareResult);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C22B8, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity);
}

uint64_t type metadata accessor for GroupActivitiesManager.PrepareResult(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C2620, (uint64_t)&nominal type descriptor for GroupActivitiesManager.PrepareResult);
}

uint64_t GroupActivitiesManager.leave(performLeaveCommand:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 88) = v1;
  *(_BYTE *)(v2 + 176) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 96) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 104) = v5;
  *(_QWORD *)(v2 + 112) = v6;
  return swift_task_switch(sub_1001D9CBC, v5, v6);
}

uint64_t sub_1001D9CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 176);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "👋🏻 Leaving session. Will perform leaveCommand=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(unsigned __int8 *)(v0 + 176);

  if (v7 == 1)
  {
    v8 = *(_QWORD **)(v0 + 88);
    v9 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *((_BYTE *)v8 + v9) = 1;
    swift_beginAccess(v8 + 2, v0 + 56, 0, 0);
    v10 = v8[5];
    v11 = v8[6];
    sub_1000096A0(v8 + 2, v10);
    v12 = *(_QWORD *)(v10 - 8);
    v13 = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_QWORD *)(v0 + 136) = v13;
    (*(void (**)(void))(v12 + 16))();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
    *(_QWORD *)(v0 + 144) = v14;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v10);
    if (v14)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for Player.LeaveSessionCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.LeaveSessionCommand;
      v15 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
      *(_QWORD *)(v0 + 152) = v15;
      v16 = (_QWORD *)swift_task_alloc(dword_1004BF57C);
      *(_QWORD *)(v0 + 160) = v16;
      *v16 = v0;
      v16[1] = sub_1001DA03C;
      return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, (uint64_t)v15, 0);
    }
    swift_release(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v13);
    *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
  }
  v18 = *(_QWORD *)(v0 + 88);
  v19 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v20)
  {
    swift_retain(*(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v20);
    v21 = *(_QWORD *)(v18 + v19);
  }
  else
  {
    v21 = 0;
  }
  v22 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v18 + v19) = 0;
  swift_release(v21);
  sub_1001E5598();
  v24 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v25 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v25)
  {
    swift_retain(*(_QWORD *)(v22 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Leave completed, pending session found", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    v30 = *(_QWORD *)(v18 + v19);
    *(_QWORD *)(v18 + v19) = v25;
    swift_retain_n(v25, 2);
    swift_release(v30);
    sub_1001E5598();
    swift_release_n(v25, 2, v31);
    v32 = *(_QWORD *)(v22 + v24);
    *(_QWORD *)(v22 + v24) = 0;
    v23 = swift_release(v32);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v23);
}

uint64_t sub_1001DA03C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  void *v10;
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(void **)(v4 + 144);

    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_1001DA254;
  }
  else
  {
    v10 = *(void **)(v4 + 144);
    v11 = *(_QWORD *)(v4 + 136);

    sub_10000970C((_QWORD *)(v4 + 16));
    swift_task_dealloc(v11);
    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_1001DA0E8;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1001DA0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 96));
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v4);
  sub_1001E5598();
  v7 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v8)
  {
    swift_retain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Leave completed, pending session found", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v8;
    swift_retain_n(v8, 2);
    swift_release(v13);
    sub_1001E5598();
    swift_release_n(v8, 2, v14);
    v15 = *(_QWORD *)(v5 + v7);
    *(_QWORD *)(v5 + v7) = 0;
    v6 = swift_release(v15);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_1001DA254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 96));
  sub_10000970C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v30 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 80) = v6;
    swift_errorRetain(v6);
    v9 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v10 = (char *)String.init<A>(describing:)(v0 + 80, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 4) = sub_1000393D0(v10, v11, &v30);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform leaveCommand with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v14 = *(_QWORD *)(v0 + 88);
  v15 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v16)
  {
    swift_retain(*(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v16);
    v17 = *(_QWORD *)(v14 + v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v14 + v15) = 0;
  swift_release(v17);
  sub_1001E5598();
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v21)
  {
    swift_retain(*(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Leave completed, pending session found", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = *(_QWORD *)(v14 + v15);
    *(_QWORD *)(v14 + v15) = v21;
    swift_retain_n(v21, 2);
    swift_release(v26);
    sub_1001E5598();
    swift_release_n(v21, 2, v27);
    v28 = *(_QWORD *)(v18 + v20);
    *(_QWORD *)(v18 + v20) = 0;
    v19 = swift_release(v28);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v19);
}

void GroupActivitiesManager.postEvent(_:participantID:)(uint64_t a1, char *a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  Swift::String v53;
  char *v54;
  char *v55;
  Swift::Bool v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  int v79;
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  id v84;
  char *v85;
  __n128 v86;
  uint64_t v87;
  id v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int8x16_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  _QWORD *v123;
  uint64_t v124;
  id v125;
  id v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(char *, char *, uint64_t);
  char *v148;
  uint64_t v149;
  NSObject *v150;
  char *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  __n128 v160;
  __n128 v161;
  void (*v162)(char *, uint64_t, __n128);
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  id v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD v197[7];
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  _BYTE v205[32];
  uint64_t v206[4];
  void *v207;
  uint64_t v208;
  int8x16_t v209;
  int8x16_t v210;
  char v211;
  uint64_t v212[4];
  uint64_t v213[2];
  id v214[2];
  uint64_t v215[6];
  char v216;
  _BYTE v217[40];

  v4 = v3;
  v188 = a3;
  v191 = a2;
  v193 = a1;
  sub_10018C8D8(a1, (uint64_t)v197);
  v176 = (id)v197[0];
  v173 = v197[2];
  v174 = v197[1];
  v172 = v197[3];
  v5 = sub_1000057B4(&qword_1004B99B0);
  __chkstk_darwin(v5);
  v177 = (char *)&v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GroupSessionEvent(0);
  v178 = *(_QWORD *)(v7 - 8);
  v179 = v7;
  v8 = __chkstk_darwin(v7);
  v175 = (char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v180 = (char *)&v163 - v11;
  __chkstk_darwin(v10);
  v182 = (char *)&v163 - v12;
  v13 = type metadata accessor for GroupSessionEvent.Action.QueueChange.Item(0);
  v166 = *(_QWORD *)(v13 - 8);
  v167 = v13;
  __chkstk_darwin(v13);
  v165 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for GroupSessionEvent.Action.QueueChange(0);
  v169 = *(_QWORD *)(v15 - 8);
  v170 = v15;
  __chkstk_darwin(v15);
  v168 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for GroupSessionEvent.Action(0);
  v185 = *(_QWORD *)(v183 - 8);
  v17 = __chkstk_darwin(v183);
  v181 = (char *)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v186 = (char *)&v163 - v19;
  v20 = sub_1000057B4(&qword_1004C1F50);
  __chkstk_darwin(v20);
  v187 = (uint64_t)&v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = type metadata accessor for Participant(0);
  v190 = *(_QWORD *)(v192 - 8);
  v22 = __chkstk_darwin(v192);
  v184 = (char *)&v163 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v189 = (char *)&v163 - v24;
  v25 = sub_1000057B4(&qword_1004C1F58);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v31 = (char *)&v163 - v30;
  v171 = v3 + 7;
  swift_beginAccess(v3 + 7, &v196, 1, 0);
  v32 = v3[7];
  v33 = v3[8];
  v34 = v3[9];
  v35 = v3[10];
  *(_OWORD *)(v3 + 7) = xmmword_1003C6C70;
  v3[9] = 0;
  v3[10] = 0;
  sub_10018C9EC(v32, v33, v34, v35);
  v36 = v3 + 2;
  swift_beginAccess(v36, &v195, 0, 0);
  v37 = v4[5];
  v38 = v4[6];
  v39 = sub_1000096A0(v36, v37);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v39);
  v42 = (char *)&v163 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v42);
  v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 64))(v37, v38);
  v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v45 = v193;
  v44(v42, v37);
  v46 = objc_msgSend(v43, "applicationState");

  sub_10018C8D8(v45, (uint64_t)v215);
  if (v216 == 4)
  {
    sub_10000FD10((uint64_t)v215, (uint64_t)v217, &qword_1004C1F78);
    if (v46)
      return;
  }
  else if (!v216)
  {
    sub_1001ED2D0(v215, (uint64_t)v217);
    if (v46)
      return;
  }
  v47 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v47)
    return;
  v48 = swift_retain(*(_QWORD *)((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
  GroupSession.state.getter(v48);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v29, enum case for GroupSession.State.joined<A>(_:), v25);
  v49 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v50 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v164 = v49;
  LOBYTE(v49) = static GroupSession.State.== infix(_:_:)(v31, v29, v49, v50);
  v51 = *(void (**)(char *, uint64_t))(v26 + 8);
  v51(v29, v25);
  v51(v31, v25);
  if ((v49 & 1) == 0)
  {
    v76 = v47;
LABEL_17:
    swift_release(v76);
    return;
  }
  v52 = v47;
  v53._countAndFlagsBits = 0x616C506572616853;
  v53._object = (void *)0xEC0000003D444979;
  v54 = v191;
  v55 = v188;
  v56 = String.hasPrefix(_:)(v53);
  v57 = swift_bridgeObjectRetain();
  v58 = (uint64_t)v55;
  if (v56)
  {
    v59 = sub_1001EC37C(0xC0007uLL, (uint64_t)v191, (unint64_t)v55);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    swift_bridgeObjectRelease();
    v54 = (char *)static String._fromSubstring(_:)(v59, v61, v63, v65);
    v58 = v66;
    v57 = swift_bridgeObjectRelease();
  }
  v67 = GroupSession.activeParticipants.getter(v57);
  swift_bridgeObjectRetain();
  v68 = v187;
  sub_1001D9378(v67, (uint64_t)v54, v58, v187);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v69 = v190;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v68, 1, v192) == 1)
  {
    sub_10000FE2C(v68, &qword_1004C1F50);
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v70 = type metadata accessor for Logger(0);
    sub_100039D34(v70, (uint64_t)static Logger.groupActivities);
    v71 = swift_bridgeObjectRetain_n(v55, 2);
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.error.getter(v72);
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc(12, -1);
      v75 = swift_slowAlloc(32, -1);
      v207 = (void *)v75;
      *(_DWORD *)v74 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v74 + 4) = sub_1000393D0(v191, v55, (uint64_t *)&v207);
      swift_bridgeObjectRelease_n(v55, 3);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "No active participant with identifier=%{public}s", (uint8_t *)v74, 0xCu);
      swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v74, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v55, 2);
    }
    v76 = v47;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v189, v68, v192);
  v77 = sub_10018C8D8(v45, (uint64_t)&v207);
  v78 = v207;
  switch(v211)
  {
    case 0:
      v79 = v208;
      v80 = v176;
      if (v79 == 1)
      {
        v81 = SharedListening.Event.Content.title.getter(v78, 1);
        v82 = v165;
        static GroupSessionEvent.Action.QueueChange.Item.container(_:)(v81);
      }
      else
      {
        v112 = SharedListening.Event.Content.title.getter(v78, 0);
        v82 = v165;
        static GroupSessionEvent.Action.QueueChange.Item.song(_:)(v112);
      }
      swift_bridgeObjectRelease();
      v113 = v168;
      static GroupSessionEvent.Action.QueueChange.added(_:)(v82);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v82, v167);
      v83 = v186;
      static GroupSessionEvent.Action.updatedQueue(_:)(v113);
      sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
      (*(void (**)(char *, uint64_t))(v169 + 8))(v113, v170);
      goto LABEL_46;
    case 1:
      v83 = v186;
      static GroupSessionEvent.Action.react(with:)(v209.i64[0], v209.i64[1]);
      goto LABEL_46;
    case 2:
      v83 = v186;
      static GroupSessionEvent.Action.skip(item:)(v207, v208);
      goto LABEL_46;
    case 3:
      sub_1001ED2D0((uint64_t *)&v207, (uint64_t)v213);
      v84 = v176;
      static GroupSessionEvent.Action.start.getter();
      v85 = (char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
      v86 = swift_beginAccess((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v212, 0, 0);
      if (!(*(unsigned int (**)(char *, uint64_t, __n128))(*(_QWORD *)(v164 - 8) + 48))(v85, 1, v86))
      {
        v124 = *((_QWORD *)v85 + 7);
        if (v124)
        {
          v125 = objc_msgSend(*(id *)(v124 + 16), "identifiers");
          sub_1001ED2D0(v213, (uint64_t)v214);
          v126 = objc_msgSend(v214[0], "identifiers");
          v127 = objc_msgSend(v125, "intersectsSet:", v126);

          if (v127)
          {
            sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
            v128 = v183;
            v83 = v186;
            goto LABEL_47;
          }
        }
      }
      if (qword_1004B8DF8 != -1)
        swift_once(&qword_1004B8DF8, sub_1001EC268);
      v87 = type metadata accessor for Logger(0);
      sub_100039D34(v87, (uint64_t)static Logger.groupActivities);
      v88 = v84;
      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc(12, -1);
        v187 = swift_slowAlloc(32, -1);
        v206[0] = v187;
        *(_DWORD *)v91 = 136446210;
        sub_1001ED2D0(v213, (uint64_t)&v198);
        v92 = (void *)v198;
        v93 = v88;
        v94 = objc_msgSend(v92, "description");
        v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
        v96 = v52;
        v98 = v97;

        v99 = v193;
        sub_10001B1C4(v193, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        v100 = (char *)v95;
        v55 = v188;
        *(_QWORD *)(v91 + 4) = sub_1000393D0(v100, v98, v206);
        v52 = v96;
        v69 = v190;
        swift_bridgeObjectRelease();
        sub_10001B1C4(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        sub_10001B1C4(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Dispatching event for=%{public}s", (uint8_t *)v91, 0xCu);
        v101 = v187;
        swift_arrayDestroy(v187, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v101, -1, -1);
        swift_slowDealloc(v91, -1, -1);
      }
      else
      {
        v99 = v193;
        sub_10001B1C4(v193, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        sub_10001B1C4(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
      }

      v114 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
      v122 = (void *)static OS_dispatch_queue.main.getter(v114, v115, v116, v117, v118, v119, v120, v121);
      v123 = (_QWORD *)swift_allocObject(&unk_10047D450, 96, 7);
      v123[2] = v4;
      sub_10018C8D8(v99, (uint64_t)(v123 + 3));
      v123[10] = v191;
      v123[11] = v55;
      swift_bridgeObjectRetain();
      sub_10001B1C4(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001ED20C);
      swift_retain(v4);
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_1001ED34C, (uint64_t)v123, 1.0);
      swift_release(v52);

      swift_release(v123);
      sub_10001B1C4(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
      (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v183);
      goto LABEL_68;
    case 4:
      v102 = sub_10000FD10((uint64_t)&v207, (uint64_t)v212, &qword_1004C1F78);
      v103 = v45;
      v104 = v186;
      static GroupSessionEvent.Action.updatedQueue.getter(v102);
      v105 = v4[7];
      v106 = v4[8];
      v108 = v4[9];
      v107 = v4[10];
      sub_10000FD10((uint64_t)v212, (uint64_t)v171, &qword_1004C1F78);
      sub_1001ED29C((uint64_t)v176, v174);
      v109 = v107;
      v83 = v104;
      v45 = v103;
      sub_10018C9EC(v105, v106, v108, v109);
      goto LABEL_46;
    case 5:
      v110 = vorrq_s8(v209, v210);
      v111 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v110.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)) | v208;
      if (v207 == (void *)1 && !v111)
      {
        v83 = v186;
        static GroupSessionEvent.Action.seek.getter(v77);
LABEL_46:
        v128 = v183;
LABEL_47:
        v130 = v177;
        v129 = v178;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v184, v189, v192);
        v131 = v181;
        (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v181, v83, v128);
        sub_10018C8D8(v45, (uint64_t)&v198);
        if (v204 == 4)
        {
          sub_10000FD10((uint64_t)&v198, (uint64_t)v205, &qword_1004C1F78);
          v131 = v181;
          sub_10000FD10((uint64_t)v205, (uint64_t)v206, &qword_1004C1F78);
          v132 = v179;
          v133 = v182;
          if (v206[1] != 1)
          {
            v136 = 0xD000000000000026;
            v135 = 0x80000001003AECB0;
            goto LABEL_60;
          }
        }
        else
        {
          v132 = v179;
          v133 = v182;
          if (v204 == 5
            && (!(v202 | v203 | v198 | v201 | v200 | v199) || v198 == 2 && !(v202 | v203 | v201 | v200 | v199)))
          {
            v134 = type metadata accessor for URL(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v130, 1, 1, v134);
LABEL_61:
            GroupSessionEvent.init(originator:action:url:)(v184, v131, v130);
            v193 = v52;
            GroupSession.showNotice(_:)(v133);
            if (qword_1004B8DF8 != -1)
              swift_once(&qword_1004B8DF8, sub_1001EC268);
            v145 = type metadata accessor for Logger(0);
            sub_100039D34(v145, (uint64_t)static Logger.groupActivities);
            v146 = v129;
            v147 = *(uint64_t (**)(char *, char *, uint64_t))(v129 + 16);
            v148 = v180;
            v149 = v147(v180, v133, v132);
            v150 = Logger.logObject.getter(v149);
            v151 = v133;
            v152 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v150, v152))
            {
              v153 = swift_slowAlloc(12, -1);
              v154 = v132;
              v155 = swift_slowAlloc(32, -1);
              v194 = v155;
              *(_DWORD *)v153 = 136446210;
              v156 = v175;
              v147(v175, v148, v154);
              v157 = (char *)String.init<A>(describing:)(v156, v154);
              *(_QWORD *)(v153 + 4) = sub_1000393D0(v157, v158, &v194);
              swift_bridgeObjectRelease();
              v159 = *(void (**)(char *, uint64_t))(v146 + 8);
              v159(v148, v154);
              _os_log_impl((void *)&_mh_execute_header, v150, v152, "Posting event=%{public}s", (uint8_t *)v153, 0xCu);
              swift_arrayDestroy(v155, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v155, -1, -1);
              swift_slowDealloc(v153, -1, -1);

              v160 = swift_release(v193);
              ((void (*)(char *, uint64_t, __n128))v159)(v182, v154, v160);
              (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v183);
            }
            else
            {

              v161 = swift_release(v193);
              v162 = *(void (**)(char *, uint64_t, __n128))(v146 + 8);
              v162(v148, v132, v161);
              ((void (*)(char *, uint64_t))v162)(v151, v132);
              (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v128);
            }
            (*(void (**)(char *, uint64_t))(v190 + 8))(v189, v192);
            return;
          }
        }
        v135 = 0x80000001003AEC90;
        v136 = 0xD000000000000017;
LABEL_60:
        URL.init(string:)(v136, v135);
        goto LABEL_61;
      }
      if (v207 == (void *)3 && !v111)
      {
        v83 = v186;
        static GroupSessionEvent.Action.pause.getter(v77);
        goto LABEL_46;
      }
      if (v207 == (void *)4 && !v111)
      {
        v83 = v186;
        static GroupSessionEvent.Action.play.getter(v77);
        goto LABEL_46;
      }
LABEL_55:
      if (qword_1004B8DF8 != -1)
        swift_once(&qword_1004B8DF8, sub_1001EC268);
      v137 = type metadata accessor for Logger(0);
      sub_100039D34(v137, (uint64_t)static Logger.groupActivities);
      sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001ED20C);
      v138 = sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001ED20C);
      v139 = Logger.logObject.getter(v138);
      v140 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v139, v140))
      {
        v141 = swift_slowAlloc(12, -1);
        v142 = swift_slowAlloc(32, -1);
        v212[0] = v142;
        *(_DWORD *)v141 = 136446210;
        sub_10018C8D8(v45, (uint64_t)&v198);
        sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001ED20C);
        v143 = (char *)String.init<A>(describing:)(&v198, &type metadata for SharedListening.Event);
        *(_QWORD *)(v141 + 4) = sub_1000393D0(v143, v144, v212);
        swift_bridgeObjectRelease();
        sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        _os_log_impl((void *)&_mh_execute_header, v139, v140, "Event case not handle for event=%{public}s", (uint8_t *)v141, 0xCu);
        swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v142, -1, -1);
        swift_slowDealloc(v141, -1, -1);

        swift_release(v47);
      }
      else
      {

        swift_release(v47);
        sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
        sub_10001B1C4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C960);
      }
LABEL_68:
      (*(void (**)(char *, uint64_t))(v69 + 8))(v189, v192);
      break;
    default:
      goto LABEL_55;
  }
}

int64x2_t GroupActivitiesManager.Activity.Metadata.init()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t result;

  v2 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)(a1 + *(int *)(v2 + 32)) = result;
  return result;
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_10000FEB4(v1 + *(int *)(v3 + 28), a1, &qword_1004B99B0);
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_10000FD60(a1, v1 + *(int *)(v3 + 28), &qword_1004B99B0);
}

CFRange (__swiftcall *GroupActivitiesManager.Activity.Metadata.URL.modify())(__C::_NSRange)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return CFRange.init(_:);
}

double GroupActivitiesManager.Activity.Metadata.artworkSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for GroupActivitiesManager.Activity.Metadata(0) + 32));
}

uint64_t GroupActivitiesManager.Activity.Metadata.artworkSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = (double *)(v2 + *(int *)(result + 32));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

CFRange (__swiftcall *GroupActivitiesManager.Activity.Metadata.artworkSize.modify())(__C::_NSRange)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return CFRange.init(_:);
}

uint64_t GroupActivitiesManager.Activity.Metadata.init(modelObject:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[16] = a1;
  v2[17] = a2;
  v3 = type metadata accessor for Locale(0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v2[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[20] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v6);
  v2[22] = swift_task_alloc(v6);
  return swift_task_switch(sub_1001DB8D8, 0, 0);
}

uint64_t sub_1001DB8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  NSString v63;
  NSString v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  id v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  double *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t *v156;
  uint64_t v157;
  void *v158;
  id v159;
  id v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  void *v177;
  id v178;
  uint64_t v179;
  double *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t *v193;
  Swift::Int v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  void *v198;
  Swift::String v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  double *v216;
  uint64_t v217;
  double *v218;
  uint64_t v219;
  double *v220;
  _QWORD *v221;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = v2 + *(int *)(v3 + 28);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (double *)(v2 + *(int *)(v3 + 32));
  *(int64x2_t *)v6 = vdupq_n_s64(0x4072C00000000000uLL);
  objc_opt_self(MPModelAlbum);
  v7 = swift_dynamicCastObjCClass(v1);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = v8;
    v11 = objc_msgSend(v9, "title");
    v221 = (_QWORD *)v2;
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {
      v26 = *(_QWORD *)(v0 + 168);
      v25 = *(_QWORD *)(v0 + 176);
      v27 = *(_QWORD *)(v0 + 152);
      v28 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v29 = *(_QWORD *)(v0 + 168);
      v30 = *(_QWORD *)(v0 + 176);
      v31 = *(_QWORD *)(v0 + 152);
      v32 = *(_QWORD *)(v0 + 160);
      v33 = *(_QWORD *)(v0 + 144);
      v34 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v13 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v34, v33, 0, 0, 256);
      v15 = v35;
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    v36 = objc_msgSend(v9, "artist");
    if (v36 && (v37 = v36, v38 = objc_msgSend(v36, "name"), v37, v38))
    {
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

    }
    else
    {
      v215 = v15;
      v42 = v13;
      v43 = v6;
      v45 = *(_QWORD *)(v0 + 168);
      v44 = *(_QWORD *)(v0 + 176);
      v46 = *(_QWORD *)(v0 + 152);
      v47 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v44, v46);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v48 = *(_QWORD *)(v0 + 168);
      v49 = *(_QWORD *)(v0 + 176);
      v51 = *(_QWORD *)(v0 + 152);
      v50 = *(_QWORD *)(v0 + 160);
      v52 = *(_QWORD *)(v0 + 144);
      v53 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v39 = String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v53, v52, 0, 0, 256);
      v41 = v54;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      v6 = v43;
      v13 = v42;
      v15 = v215;
    }
    v56 = *(uint64_t **)(v0 + 128);
    v55 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v9, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v56 = v13;
    v221[1] = v15;
    swift_bridgeObjectRelease();
    v221[2] = v39;
    v221[3] = v41;
    if (v57)
      goto LABEL_17;
    goto LABEL_42;
  }
  objc_opt_self(MPModelPlaylist);
  v16 = swift_dynamicCastObjCClass(v8);
  v17 = *(void **)(v0 + 136);
  if (v16)
  {
    v18 = (void *)v16;
    v19 = v17;
    v20 = objc_msgSend(v18, "name");
    if (v20)
    {
      v21 = v20;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;

    }
    else
    {
      v216 = v6;
      v76 = *(_QWORD *)(v0 + 168);
      v75 = *(_QWORD *)(v0 + 176);
      v77 = *(_QWORD *)(v0 + 152);
      v78 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001003AA710);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v75, v77);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v79 = *(_QWORD *)(v0 + 168);
      v80 = *(_QWORD *)(v0 + 176);
      v81 = *(_QWORD *)(v0 + 152);
      v82 = *(_QWORD *)(v0 + 160);
      v83 = *(_QWORD *)(v0 + 144);
      v84 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v22 = String.init(localized:table:bundle:locale:comment:)(v79, 0, 0, v84, v83, 0, 0, 256);
      v24 = v85;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
      v6 = v216;
    }
    v86 = objc_msgSend(v18, "curator");
    v87 = v86;
    if (v86)
    {
      v88 = objc_msgSend(v86, "name");

      if (v88)
      {
        v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
        v90 = v89;

LABEL_29:
        v92 = *(uint64_t **)(v0 + 128);
        v91 = *(void **)(v0 + 136);
        v93 = MPModelPlaylist.preferredArtworkCatalog.getter();
LABEL_40:
        v57 = v93;

        swift_bridgeObjectRelease();
        *v92 = v22;
        *(_QWORD *)(v2 + 8) = v24;
        goto LABEL_41;
      }
      v87 = 0;
    }
    v90 = 0;
    goto LABEL_29;
  }
  objc_opt_self(MPModelRadioStation);
  v68 = swift_dynamicCastObjCClass(v17);
  v69 = *(void **)(v0 + 136);
  if (v68)
  {
    v70 = (void *)v68;
    v71 = v69;
    v72 = objc_msgSend(v70, "name");
    if (v72)
    {
      v73 = v72;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v24 = v74;

    }
    else
    {
      v104 = *(_QWORD *)(v0 + 168);
      v103 = *(_QWORD *)(v0 + 176);
      v105 = *(_QWORD *)(v0 + 152);
      v106 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v104, v103, v105);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v107 = *(_QWORD *)(v0 + 168);
      v108 = *(_QWORD *)(v0 + 176);
      v109 = *(_QWORD *)(v0 + 152);
      v110 = *(_QWORD *)(v0 + 160);
      v111 = *(_QWORD *)(v0 + 144);
      v112 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v22 = String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v112, v111, 0, 0, 256);
      v24 = v113;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v109);
    }
    v114 = objc_msgSend(v70, "providerName");
    if (v114)
    {
      v115 = v114;
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
      v90 = v116;

    }
    else
    {
      v87 = 0;
      v90 = 0;
    }
    v92 = *(uint64_t **)(v0 + 128);
    v91 = *(void **)(v0 + 136);
    v93 = objc_msgSend(v70, "artworkCatalog");
    goto LABEL_40;
  }
  objc_opt_self(MPModelSong);
  v94 = swift_dynamicCastObjCClass(v69);
  v95 = *(void **)(v0 + 136);
  if (v94)
  {
    v96 = (void *)v94;
    v97 = v95;
    v98 = objc_msgSend(v96, "title");
    if (v98)
    {
      v99 = v98;
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
      v102 = v101;

    }
    else
    {
      v128 = *(_QWORD *)(v0 + 168);
      v127 = *(_QWORD *)(v0 + 176);
      v129 = *(_QWORD *)(v0 + 152);
      v130 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v128, v127, v129);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v131 = *(_QWORD *)(v0 + 168);
      v132 = *(_QWORD *)(v0 + 176);
      v133 = *(_QWORD *)(v0 + 152);
      v134 = *(_QWORD *)(v0 + 160);
      v135 = *(_QWORD *)(v0 + 144);
      v136 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v100 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v136, v135, 0, 0, 256);
      v137 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v102 = v138;
      v137(v132, v133);
    }
    v139 = objc_msgSend(v96, "artist");
    if (v139
      && (v140 = v139, v141 = objc_msgSend(v139, "name"), v140, v141))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
      v90 = v142;

    }
    else
    {
      v214 = v102;
      v217 = v100;
      v143 = v6;
      v145 = *(_QWORD *)(v0 + 168);
      v144 = *(_QWORD *)(v0 + 176);
      v146 = *(_QWORD *)(v0 + 152);
      v147 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v145, v144, v146);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v148 = *(_QWORD *)(v0 + 168);
      v149 = *(_QWORD *)(v0 + 176);
      v151 = *(_QWORD *)(v0 + 152);
      v150 = *(_QWORD *)(v0 + 160);
      v152 = *(_QWORD *)(v0 + 144);
      v153 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v148, 0, 0, v153, v152, 0, 0, 256);
      v90 = v154;
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
      v6 = v143;
      v102 = v214;
      v100 = v217;
    }
    v156 = *(uint64_t **)(v0 + 128);
    v155 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v96, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v156 = v100;
    *(_QWORD *)(v2 + 8) = v102;
    goto LABEL_41;
  }
  objc_opt_self(MPModelTVEpisode);
  v119 = swift_dynamicCastObjCClass(v95);
  v120 = *(void **)(v0 + 136);
  if (v119)
  {
    v121 = (void *)v119;
    v122 = v120;
    v123 = objc_msgSend(v121, "title");
    if (v123)
    {
      v124 = v123;
      v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
      v213 = v126;

    }
    else
    {
      v218 = v6;
      v166 = *(_QWORD *)(v0 + 168);
      v165 = *(_QWORD *)(v0 + 176);
      v167 = *(_QWORD *)(v0 + 152);
      v168 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16))(v166, v165, v167);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v169 = *(_QWORD *)(v0 + 168);
      v170 = *(_QWORD *)(v0 + 176);
      v171 = *(_QWORD *)(v0 + 152);
      v172 = *(_QWORD *)(v0 + 160);
      v173 = *(_QWORD *)(v0 + 144);
      v174 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v125 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v174, v173, 0, 0, 256);
      v213 = v175;
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
      v6 = v218;
    }
    v176 = objc_msgSend(v121, "show");
    if (v176
      && (v177 = v176, v178 = objc_msgSend(v176, "title"), v177, v178))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v178);
      v90 = v179;

    }
    else
    {
      v219 = v125;
      v180 = v6;
      v182 = *(_QWORD *)(v0 + 168);
      v181 = *(_QWORD *)(v0 + 176);
      v183 = *(_QWORD *)(v0 + 152);
      v184 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16))(v182, v181, v183);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v185 = *(_QWORD *)(v0 + 168);
      v186 = *(_QWORD *)(v0 + 176);
      v188 = *(_QWORD *)(v0 + 152);
      v187 = *(_QWORD *)(v0 + 160);
      v189 = *(_QWORD *)(v0 + 144);
      v190 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v185, 0, 0, v190, v189, 0, 0, 256);
      v90 = v191;
      (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v186, v188);
      v6 = v180;
      v125 = v219;
    }
    v193 = *(uint64_t **)(v0 + 128);
    v192 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v121, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v193 = v125;
    *(_QWORD *)(v2 + 8) = v213;
LABEL_41:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v87;
    *(_QWORD *)(v2 + 24) = v90;
    if (v57)
    {
LABEL_17:
      v58 = v0 + 16;
      *(_QWORD *)(v0 + 184) = v57;
      v59 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
      v60 = swift_allocObject(v59, 32, 7);
      *(_QWORD *)(v0 + 192) = v60;
      *(_QWORD *)(v60 + 16) = 0xD00000000000001ELL;
      *(_QWORD *)(v60 + 24) = 0x80000001003A71C0;
      v61 = v57;
      v62 = (void *)objc_opt_self(MPArtworkCatalog);
      v63 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v63, v60);

      swift_bridgeObjectRetain();
      v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v61, "setCacheIdentifier:forCacheReference:", v64, v60);

      objc_msgSend(v61, "setFittingSize:", *v6, v6[1]);
      objc_msgSend(v61, "setDestinationScale:", 0.0);
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1001DC854;
      v65 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v66 = (_QWORD *)(v0 + 80);
      v66[1] = 0x40000000;
      v66[2] = sub_1001051E0;
      v66[3] = &unk_10047D468;
      v66[4] = v65;
      objc_msgSend(v61, "requestImageWithCompletion:", v66);
      return swift_continuation_await(v58);
    }
    goto LABEL_42;
  }
  objc_opt_self(MPModelMovie);
  v157 = swift_dynamicCastObjCClass(v120);
  if (v157)
  {
    v158 = (void *)v157;
    v159 = *(id *)(v0 + 136);
    v160 = objc_msgSend(v158, "title");
    if (v160)
    {
      v161 = v160;
      v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
      v164 = v163;

    }
    else
    {
      v220 = v6;
      v201 = *(_QWORD *)(v0 + 168);
      v200 = *(_QWORD *)(v0 + 176);
      v202 = *(_QWORD *)(v0 + 152);
      v203 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006569766F4DLL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v201, v200, v202);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v204 = *(_QWORD *)(v0 + 168);
      v205 = *(_QWORD *)(v0 + 176);
      v206 = *(_QWORD *)(v0 + 152);
      v207 = *(_QWORD *)(v0 + 160);
      v208 = *(_QWORD *)(v0 + 144);
      v209 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v162 = String.init(localized:table:bundle:locale:comment:)(v204, 0, 0, v209, v208, 0, 0, 256);
      v164 = v210;
      (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v205, v206);
      v6 = v220;
    }
    v212 = *(uint64_t **)(v0 + 128);
    v211 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v158, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v212 = v162;
    *(_QWORD *)(v2 + 8) = v164;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    if (v57)
      goto LABEL_17;
LABEL_42:

    v117 = *(_QWORD *)(v0 + 168);
    v118 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v194 = sub_1001ED4E4((uint64_t)&off_1004687D8);
  MPModelObject.humanDescription(including:)(v194);
  v196 = v195;
  v198 = v197;
  swift_bridgeObjectRelease();
  v199._countAndFlagsBits = v196;
  v199._object = v198;
  String.append(_:)(v199);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003AED10, "MusicCore/GroupActivitiesManager.swift", 38, 2, 85, 0);
}

uint64_t sub_1001DC854()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 200) = v1;
  if (v1)
    v2 = sub_1001DC954;
  else
    v2 = sub_1001DC8B4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DC8B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v5 = *(void **)(v0 + 120);
  v6 = objc_msgSend(v5, "CGImage");

  swift_release(v1);
  *(_QWORD *)(v4 + 32) = v6;
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DC954(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 192);
  v3 = *(_QWORD *)(v1 + 200);
  v4 = *(void **)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(void **)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  swift_release(v2);
  *(_QWORD *)(v6 + 32) = 0;
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 144);
  swift_task_dealloc(*(_QWORD *)(v1 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001DC9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_1000057B4(&qword_1004C1F90);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DCA4C, 0, 0);
}

uint64_t sub_1001DCA4C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _DWORD *v31;
  __n128 v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v3 = type metadata accessor for GroupActivitiesManager.Activity(0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v4 = v2 + *(int *)(v3 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  if (!v1)
    goto LABEL_8;
  v7 = v1;
  v8 = objc_msgSend(v7, "sharedListeningProperties");
  v0[21] = v8;
  if (!v8)
  {

LABEL_8:
    v26 = (_QWORD *)v0[19];
    v27 = v0[20];
    v28 = v0[18];
    v29 = v0[16];
    v30 = sub_1001F0D48();
    swift_allocError(&type metadata for Errno, v30, 0, 0);
    *v31 = 96;
    swift_willThrow(v32);

    sub_10000970C(v26);
    sub_10000FE2C(v28, &qword_1004C1F90);
    sub_100034960(v29, type metadata accessor for GroupActivitiesManager.Activity);
    swift_task_dealloc(v27);
    v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
  v9 = v8;
  v10 = v0[19];
  v11 = v0[18];
  v36 = v0[17];
  v37 = v0[20];
  v12 = v0[16];
  sub_10000FE2C(v12, &qword_1004C1F98);
  sub_1000444A8(v10, v12);
  sub_1001F14EC(v11, v4, &qword_1004C1F90);
  v13 = type metadata accessor for CodableListeningProperties();
  v14 = swift_allocObject(v13, 24, 7);
  *(_QWORD *)(v14 + 16) = v9;
  v15 = *(_QWORD *)(v2 + 48);
  v16 = v9;
  swift_release(v15);
  *(_QWORD *)(v2 + 48) = v14;
  v17 = *(void **)(v2 + 40);
  v18 = v7;

  *(_QWORD *)(v2 + 40) = v36;
  sub_10000FEB4(v4, v37, &qword_1004C1F90);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v37, 1, v5);
  v20 = v0[20];
  if (v19 != 1)
  {

    sub_10000FE2C(v20, &qword_1004C1F90);
    v34 = v0[20];
    v35 = v0[18];
    sub_10000970C((_QWORD *)v0[19]);
    sub_10000FE2C(v35, &qword_1004C1F90);
    swift_task_dealloc(v34);
    v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
  sub_10000FE2C(v0[20], &qword_1004C1F90);
  if (qword_1004B8DF0 != -1)
    swift_once(&qword_1004B8DF0, sub_1001DE954);
  v21 = v0 + 2;
  v22 = qword_1004C1F00;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1001DCD60;
  v23 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v24 = v0 + 10;
  v24[1] = 0x40000000;
  v24[2] = sub_1001051E0;
  v24[3] = &unk_10047D690;
  v24[4] = v23;
  objc_msgSend(v18, "getRepresentativeObjectWithProperties:completion:", v22, v24);
  return swift_continuation_await(v21);
}

uint64_t sub_1001DCD60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 176) = v1;
  if (v1)
    v2 = sub_1001DCEC0;
  else
    v2 = sub_1001DCDC0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DCDC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v4 = *(void **)(v0 + 120);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v0 + 120), "innermostModelObject");
    v6 = type metadata accessor for CodableModelObjectIdentity();
    v7 = swift_allocObject(v6, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;
    v8 = *(_QWORD *)(v2 + 56);

  }
  else
  {
    v9 = type metadata accessor for CodableModelObjectIdentity();
    v10 = swift_allocObject(v9, 24, 7);
    swift_deallocPartialClassInstance(v10, v9, 24, 7);
    v7 = 0;
    v8 = *(_QWORD *)(v2 + 56);
    v4 = v3;
  }

  swift_release(v8);
  *(_QWORD *)(v2 + 56) = v7;
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 144);
  sub_10000970C(*(_QWORD **)(v0 + 152));
  sub_10000FE2C(v12, &qword_1004C1F90);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DCEC0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 176);
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v3 = *(void **)(v1 + 168);
  v5 = *(_QWORD *)(v1 + 128);
  v4 = *(void **)(v1 + 136);
  v6 = type metadata accessor for CodableModelObjectIdentity();
  v7 = swift_allocObject(v6, 24, 7);
  swift_deallocPartialClassInstance(v7, v6, 24, 7);
  v8 = *(_QWORD *)(v5 + 56);

  swift_release(v8);
  *(_QWORD *)(v5 + 56) = 0;
  v9 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 144);
  sub_10000970C(*(_QWORD **)(v1 + 152));
  sub_10000FE2C(v10, &qword_1004C1F90);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void *GroupActivitiesManager.Activity.activityIdentifier.unsafeMutableAddressor()
{
  return &static GroupActivitiesManager.Activity.activityIdentifier;
}

unint64_t static GroupActivitiesManager.Activity.activityIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t GroupActivitiesManager.Activity.metadata.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_1000057B4(&qword_1004B99B0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v4);
  v2[23] = swift_task_alloc(v4);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v2[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v7);
  v2[27] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivityMetadata.ActivityType(0);
  v2[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DD090, 0, 0);
}

uint64_t sub_1001DD090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  char v41;
  _UNKNOWN **v42;
  char **v43;
  uint64_t v44;
  void *ObjCClassFromMetadata;
  id v46;
  void *v47;
  id v48;
  char v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  Swift::String v88;
  _OWORD *v89;
  int *v90;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = type metadata accessor for GroupActivityMetadata(0);
  *(_QWORD *)(v0 + 232) = v6;
  v7 = swift_allocBox(v6);
  v9 = v8;
  *(_QWORD *)(v0 + 240) = v7;
  *(_QWORD *)(v0 + 248) = v8;
  GroupActivityMetadata.init()();
  v10 = GroupActivityMetadata.supportsContinuationOnTV.setter(0);
  static GroupActivityMetadata.ActivityType.listenTogether.getter(v10);
  GroupActivityMetadata.type.setter(v1);
  v11 = type metadata accessor for GroupActivitiesManager.Activity(0);
  sub_10000FEB4(v5 + *(int *)(v11 + 32), v4, &qword_1004C1F90);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 256) = v12;
  if (v12(v4, 1, v2) != 1)
  {
    v24 = *(uint64_t **)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    sub_100084888(*(_QWORD *)(v0 + 184), (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v28 = *v24;
    v29 = v24[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v28, v29);
    v30 = v24[2];
    v31 = v24[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v30, v31);
    v32 = (void *)v24[4];
    v33 = v32;
    GroupActivityMetadata.previewImage.setter(v32);
    sub_10000FEB4((uint64_t)v24 + *(int *)(v25 + 28), v26, &qword_1004B99B0);
    GroupActivityMetadata.fallbackURL.setter(v26);
    sub_100034960((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v27, v9, v6);
LABEL_35:
    sub_1001DDC68(v7);
    swift_release(v7);
    v70 = *(_QWORD *)(v0 + 216);
    v71 = *(_QWORD *)(v0 + 208);
    v73 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 160);
  sub_10000FE2C(*(_QWORD *)(v0 + 184), &qword_1004C1F90);
  v14 = *(_QWORD *)(v13 + 56);
  if (!v14)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(*(_QWORD *)(v0 + 152), v9, v6);
    goto LABEL_35;
  }
  v15 = *(void **)(v14 + 16);
  *(_QWORD *)(v0 + 264) = v15;
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v15))
  {
    v16 = qword_1004B8DD8;
    v17 = v15;
    if (v16 != -1)
      swift_once(&qword_1004B8DD8, sub_1001DE4D0);
    v18 = (void *)qword_1004C1EE8;
    v19 = (void *)objc_opt_self(MPModelAlbum);
    v20 = (void *)objc_opt_self(MPModelSong);
    v21 = v18;
    v22 = objc_msgSend(v20, "kindWithVariants:", 3);
    v23 = objc_msgSend(v19, "kindWithSongKind:", v22);

    goto LABEL_32;
  }
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v15))
  {
    v89 = (_OWORD *)(v0 + 88);
    v34 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
    v35 = swift_allocObject(v34, 56, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1003C6CF0;
    v36 = (void *)objc_opt_self(MPModelSong);
    v37 = v15;
    *(_QWORD *)(v35 + 32) = objc_msgSend(v36, "kindWithVariants:", 7);
    v38 = (void *)objc_opt_self(NSUserDefaults);
    v39 = objc_msgSend(v38, "standardUserDefaults");
    strcpy((char *)(v0 + 120), "showAllTVShows");
    *(_BYTE *)(v0 + 135) = -18;
    v40 = sub_10002D3FC();
    NSUserDefaults.subscript.getter(v0 + 120, (uint64_t)&type metadata for String, v40, (_OWORD *)(v0 + 56));
    if (*(_QWORD *)(v0 + 80))
    {
      if ((swift_dynamicCast(v0 + 297, v0 + 56, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v41 = *(_BYTE *)(v0 + 297);

        v42 = CAStateController_ptr;
        v43 = &selRef_connectionStartTime;
        if ((v41 & 1) != 0)
        {
          v44 = 3;
          goto LABEL_21;
        }
LABEL_20:
        v44 = 2;
LABEL_21:
        *(_QWORD *)(v35 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), v43[236], v44);
        v48 = objc_msgSend(v38, "standardUserDefaults");
        strcpy((char *)(v0 + 136), "showAllTVShows");
        *(_BYTE *)(v0 + 151) = -18;
        NSUserDefaults.subscript.getter(v0 + 136, (uint64_t)&type metadata for String, v40, v89);
        if (*(_QWORD *)(v0 + 112))
        {
          if ((swift_dynamicCast(v0 + 296, v89, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v49 = *(_BYTE *)(v0 + 296);

            if ((v49 & 1) != 0)
            {
              v50 = 3;
LABEL_28:
              v51 = (void *)objc_opt_self(v42[95]);
              v52 = (void *)objc_opt_self(MPModelPlaylistEntry);
              v53 = objc_msgSend((id)objc_opt_self(MPModelMovie), v43[236], v50);
              *(_QWORD *)(v35 + 48) = v53;
              specialized Array._endMutation()(v53);
              sub_1000057B4((uint64_t *)&unk_1004BD730);
              isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              v55 = objc_msgSend(v52, "kindWithKinds:", isa);

              v23 = objc_msgSend(v51, "kindWithPlaylistEntryKind:options:", v55, 0);
              if (qword_1004B8DE0 != -1)
                swift_once(&qword_1004B8DE0, sub_1001DE6A8);
              v47 = (void *)qword_1004C1EF0;
LABEL_31:
              v21 = v47;
LABEL_32:
              *(_QWORD *)(v0 + 272) = v21;
              *(_QWORD *)(v0 + 280) = v23;
              sub_10000FEB4(*(_QWORD *)(v0 + 160), v0 + 16, &qword_1004C1F98);
              v56 = *(_QWORD *)(v0 + 40);
              if (v56)
              {
                v57 = *(_QWORD *)(v0 + 48);
                sub_1000096A0((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
                v58 = *(int **)(v57 + 16);
                v90 = (int *)((char *)v58 + *v58);
                v59 = (_QWORD *)swift_task_alloc(v58[1]);
                *(_QWORD *)(v0 + 288) = v59;
                *v59 = v0;
                v59[1] = sub_1001DDA54;
                return ((uint64_t (*)(_QWORD, void *, id, id, uint64_t, uint64_t))v90)(*(_QWORD *)(v0 + 176), v15, v23, v21, v56, v57);
              }
              v61 = *(_QWORD *)(v0 + 192);
              v62 = *(_QWORD *)(v0 + 200);
              v63 = *(_QWORD *)(v0 + 176);
              sub_10000FE2C(v0 + 16, &qword_1004C1F98);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, 1, 1, v61);
              v64 = *(void **)(v0 + 280);
              v65 = *(void **)(v0 + 264);
              v7 = *(_QWORD *)(v0 + 240);
              v66 = *(_QWORD *)(v0 + 248);
              v67 = *(_QWORD *)(v0 + 232);
              v68 = *(_QWORD *)(v0 + 176);
              v69 = *(_QWORD *)(v0 + 152);

              sub_10000FE2C(v68, &qword_1004C1F90);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v69, v66, v67);
              goto LABEL_35;
            }
LABEL_27:
            v50 = 2;
            goto LABEL_28;
          }
        }
        else
        {
          sub_10000FE2C((uint64_t)v89, &qword_1004BE030);
        }

        goto LABEL_27;
      }
    }
    else
    {
      sub_10000FE2C(v0 + 56, &qword_1004BE030);
    }

    v42 = CAStateController_ptr;
    v43 = &selRef_connectionStartTime;
    goto LABEL_20;
  }
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(v15))
  {
    sub_10000598C(0, &qword_1004C1FA0, MPModelRadioStationKind_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v46 = v15;
    v23 = objc_msgSend(ObjCClassFromMetadata, "identityKind");
    if (qword_1004B8DE8 != -1)
      swift_once(&qword_1004B8DE8, sub_1001DE880);
    v47 = (void *)qword_1004C1EF8;
    goto LABEL_31;
  }
  objc_opt_self(MPModelSong);
  if (swift_dynamicCastObjCClass(v15))
  {
    v75 = (void *)objc_opt_self(MPModelSong);
    v76 = v15;
    v77 = objc_msgSend(v75, "kindWithVariants:", 7);
LABEL_40:
    v23 = v77;
    if (qword_1004B8DB8 != -1)
      swift_once(&qword_1004B8DB8, sub_1001DDE54);
    v47 = (void *)qword_1004C1ED0;
    goto LABEL_31;
  }
  objc_opt_self(MPModelTVEpisode);
  if (swift_dynamicCastObjCClass(v15))
  {
    v78 = (void *)objc_opt_self(MPModelTVEpisode);
    v79 = v15;
    v77 = objc_msgSend(v78, "kindWithVariants:", 3);
    goto LABEL_40;
  }
  objc_opt_self(MPModelMovie);
  if (swift_dynamicCastObjCClass(v15))
  {
    v80 = (void *)objc_opt_self(MPModelMovie);
    v81 = v15;
    v23 = objc_msgSend(v80, "kindWithVariants:", 3);
    if (qword_1004B8DC8 != -1)
      swift_once(&qword_1004B8DC8, sub_1001DE25C);
    v47 = (void *)qword_1004C1EE0;
    goto LABEL_31;
  }
  v82 = v15;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v83 = sub_1001ED4E4((uint64_t)&off_100468800);
  MPModelObject.humanDescription(including:)(v83);
  v85 = v84;
  v87 = v86;
  swift_bridgeObjectRelease();
  v88._countAndFlagsBits = v85;
  v88._object = v87;
  String.append(_:)(v88);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003AED10, "MusicCore/GroupActivitiesManager.swift", 38, 2, 164, 0);
}

uint64_t sub_1001DDA54()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));
  return swift_task_switch(sub_1001DDAA8, 0, 0);
}

uint64_t sub_1001DDAA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  sub_10000970C((_QWORD *)(v0 + 16));
  v4 = v1(v3, 1, v2);
  v6 = *(void **)(v0 + 272);
  v5 = *(void **)(v0 + 280);
  v7 = *(void **)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  if (v4 == 1)
  {
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 152);

    sub_10000FE2C(v11, &qword_1004C1F90);
  }
  else
  {
    v13 = *(uint64_t **)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 152);
    sub_100084888(*(_QWORD *)(v0 + 176), (uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v30 = v7;
    v15 = *v13;
    v16 = v13[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v15, v16);
    v17 = v13[2];
    v18 = v13[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v17, v18);
    v19 = (void *)v13[4];
    v20 = v19;
    GroupActivityMetadata.previewImage.setter(v19);
    sub_10000FEB4((uint64_t)v13 + *(int *)(v28 + 28), v14, &qword_1004B99B0);
    v21 = v14;
    v12 = v29;
    GroupActivityMetadata.fallbackURL.setter(v21);

    sub_100034960((uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v12, v9, v10);
  sub_1001DDC68(v8);
  swift_release(v8);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001DDC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char *v14;
  char *v15;
  __n128 v16;
  __n128 v17;
  _BYTE v18[24];
  uint64_t v19;

  v2 = type metadata accessor for GroupActivityMetadata(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v6 = type metadata accessor for Logger(0);
  sub_100039D34(v6, (uint64_t)static Logger.groupActivities);
  v7 = swift_retain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v19 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = swift_projectBox(a1);
    v13 = swift_beginAccess(v12, v18, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v12, v2, v13);
    v14 = (char *)String.init<A>(reflecting:)(v5, v2);
    *(_QWORD *)(v10 + 4) = sub_1000393D0(v14, v15, &v19);
    swift_release_n(a1, 2, v16);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sending activity metadata=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2, v17);
  }
}

void sub_1001DDE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  void *v10;
  id v11;
  uint64_t v12;
  Class v13;
  id v14;
  id v15;
  Class v16;
  Class v17;
  id v18;
  _BYTE v19[80];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v4, v19);
  *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self(MPPropertySet);
  v11 = objc_msgSend(v10, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 64) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v10, "propertySetWithProperties:", v13);

  *(_QWORD *)(inited + 72) = v14;
  sub_1000B8E38(inited);
  v15 = objc_allocWithZone((Class)MPPropertySet);
  v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v17 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, "initWithProperties:relationships:", v16, v17);

  qword_1004C1ED0 = (uint64_t)v18;
}

void sub_1001DE084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_1000B8E38(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_1004C1ED8 = (uint64_t)v14;
}

void sub_1001DE25C(uint64_t a1)
{
  sub_1001DE89C(a1, &MPModelPropertyMovieTitle, &MPModelPropertyMovieArtwork, &qword_1004C1EE0);
}

void sub_1001DE278()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  Class isa;
  Class v15;
  id v16;
  _BYTE v17[104];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v0, v17);
  *(_OWORD *)(inited + 16) = xmmword_1003C6280;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  if (qword_1004B8DB8 != -1)
    swift_once(&qword_1004B8DB8, sub_1001DDE54);
  v3 = (void *)qword_1004C1ED0;
  *(_QWORD *)(inited + 48) = qword_1004C1ED0;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  v5 = qword_1004B8DC0;
  v6 = v3;
  if (v5 != -1)
    swift_once(&qword_1004B8DC0, sub_1001DE084);
  v7 = (void *)qword_1004C1ED8;
  *(_QWORD *)(inited + 72) = qword_1004C1ED8;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v8;
  v9 = qword_1004B8DC8;
  v10 = v7;
  if (v9 != -1)
    swift_once(&qword_1004B8DC8, sub_1001DE25C);
  v11 = (void *)qword_1004C1EE0;
  *(_QWORD *)(inited + 96) = qword_1004C1EE0;
  v12 = v11;
  sub_1000B8E38(inited);
  v13 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v15 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, "initWithProperties:relationships:", isa, v15);

  static GroupActivitiesManager.Activity.playingProperties = (uint64_t)v16;
}

uint64_t *GroupActivitiesManager.Activity.playingProperties.unsafeMutableAddressor()
{
  if (qword_1004B8DD0 != -1)
    swift_once(&qword_1004B8DD0, sub_1001DE278);
  return &static GroupActivitiesManager.Activity.playingProperties;
}

id static GroupActivitiesManager.Activity.playingProperties.getter()
{
  if (qword_1004B8DD0 != -1)
    swift_once(&qword_1004B8DD0, sub_1001DE278);
  return (id)static GroupActivitiesManager.Activity.playingProperties;
}

void sub_1001DE4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_1000B8E38(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_1004C1EE8 = (uint64_t)v14;
}

void sub_1001DE6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_1000B8E38(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_1004C1EF0 = (uint64_t)v14;
}

void sub_1001DE880(uint64_t a1)
{
  sub_1001DE89C(a1, &MPModelPropertyRadioStationName, &MPModelPropertyRadioStationArtwork, &qword_1004C1EF8);
}

void sub_1001DE89C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v7 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a3);
  *(_QWORD *)(v8 + 56) = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *a4 = v12;
}

id sub_1001DE954()
{
  id result;

  result = sub_1001DE970();
  qword_1004C1F00 = (uint64_t)result;
  return result;
}

id sub_1001DE970()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  Class isa;
  Class v16;
  id v17;
  id v18;
  _BYTE v20[104];

  if (qword_1004B8DD0 != -1)
    swift_once(&qword_1004B8DD0, sub_1001DE278);
  v0 = (void *)static GroupActivitiesManager.Activity.playingProperties;
  v1 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v1, v20);
  *(_OWORD *)(inited + 16) = xmmword_1003C6280;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 40) = v3;
  if (qword_1004B8DE0 != -1)
    swift_once(&qword_1004B8DE0, sub_1001DE6A8);
  v4 = (void *)qword_1004C1EF0;
  *(_QWORD *)(inited + 48) = qword_1004C1EF0;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 64) = v5;
  v6 = qword_1004B8DD8;
  v7 = v4;
  if (v6 != -1)
    swift_once(&qword_1004B8DD8, sub_1001DE4D0);
  v8 = (void *)qword_1004C1EE8;
  *(_QWORD *)(inited + 72) = qword_1004C1EE8;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v9;
  v10 = qword_1004B8DE8;
  v11 = v8;
  if (v10 != -1)
    swift_once(&qword_1004B8DE8, sub_1001DE880);
  v12 = (void *)qword_1004C1EF8;
  *(_QWORD *)(inited + 96) = qword_1004C1EF8;
  v13 = v12;
  sub_1000B8E38(inited);
  v14 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, "initWithProperties:relationships:", isa, v16);

  v18 = objc_msgSend(v0, "propertySetByCombiningWithPropertySet:", v17);
  return v18;
}

unint64_t sub_1001DEB98()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_1001DEBD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001F0AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DEBFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001ED650();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DEC24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001ED650();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GroupActivitiesManager.Activity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v25 = a2;
  v4 = sub_1000057B4(&qword_1004C1FA8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = &v11[*(int *)(v9 + 32)];
  v13 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = a1[3];
  v15 = a1[4];
  sub_1000096A0(a1, v14);
  v16 = sub_1001ED650();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v16, v14, v15);
  if (!v2)
  {
    v17 = v5;
    v18 = v25;
    v19 = type metadata accessor for CodableListeningProperties();
    v26 = 0;
    v20 = sub_100004D8C(&qword_1004C1FB8, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_1003D3504);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v27, v19, &v26, v4, v19, v20);
    *((_QWORD *)v11 + 6) = v27;
    v22 = type metadata accessor for CodableModelObjectIdentity();
    v26 = 1;
    v23 = sub_100004D8C(&qword_1004C1FC0, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_1003D34DC);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v27, v22, &v26, v4, v22, v23);
    v24 = v27;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
    swift_release(*((_QWORD *)v11 + 7));
    *((_QWORD *)v11 + 7) = v24;
    sub_1000A2258((uint64_t)v11, v18, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_10000970C(a1);
  return sub_100034960((uint64_t)v11, type metadata accessor for GroupActivitiesManager.Activity);
}

uint64_t GroupActivitiesManager.Activity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C1FC8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001ED650();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v11, v9, v10);
  v18 = *(_QWORD *)(v3 + 48);
  HIBYTE(v17) = 0;
  v12 = sub_1000057B4(&qword_1004C1FD0);
  v13 = sub_1001ED6D4();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v12, v13);
  if (!v2)
  {
    v18 = *(_QWORD *)(v3 + 56);
    HIBYTE(v17) = 1;
    v14 = sub_1000057B4(&qword_1004C1FE8);
    v15 = sub_1001ED750();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001DF034(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1004C1F8C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return GroupActivitiesManager.Activity.metadata.getter(a1);
}

uint64_t sub_1001DF088@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupActivitiesManager.Activity.init(from:)(a1, a2);
}

uint64_t sub_1001DF09C(_QWORD *a1)
{
  return GroupActivitiesManager.Activity.encode(to:)(a1);
}

uint64_t GroupActivitiesManager.coordinator.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v3, v5, 33, 0);
  sub_10000970C(v3);
  sub_100033620(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t GroupActivitiesManager.pendingNoticeAlert.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 56, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 56);
  sub_1001ED29C(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t GroupActivitiesManager.isSharePlaySessionActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v33)(_BYTE *, _QWORD, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  char v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t);
  _BYTE v59[12];
  int v60;
  void (*v61)(_BYTE *, _QWORD, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;

  v1 = v0;
  v2 = sub_1000057B4(&qword_1004C1F58);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v65 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = sub_1000057B4(&qword_1004C2000);
  v5 = __chkstk_darwin(v69);
  v7 = &v59[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v59[-v8];
  v10 = sub_1000057B4(&qword_1004C2008);
  v11 = __chkstk_darwin(v10);
  v66 = &v59[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v11);
  v67 = &v59[-v14];
  v15 = __chkstk_darwin(v13);
  v68 = &v59[-v16];
  v17 = __chkstk_darwin(v15);
  v19 = &v59[-v18];
  v20 = __chkstk_darwin(v17);
  v22 = &v59[-v21];
  __chkstk_darwin(v20);
  v24 = &v59[-v23];
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v26 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter(&v70, v1, KeyPath, v26);
  swift_release(KeyPath);
  v27 = swift_release(v26);
  if ((v70 & 1) != 0)
    return 1;
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  v63 = v1;
  v64 = v7;
  v62 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  if (v29)
  {
    v30 = swift_retain(v29);
    GroupSession.state.getter(v30);
    v31 = swift_release(v29);
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 0, 1, v2, v31);
  }
  else
  {
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 1, 1, v2, v27);
  }
  v33 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v33(v22, enum case for GroupSession.State.waiting<A>(_:), v2);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v32)(v22, 0, 1, v2);
  v34 = (uint64_t)&v9[*(int *)(v69 + 48)];
  sub_10000FEB4((uint64_t)v24, (uint64_t)v9, &qword_1004C2008);
  sub_10000FEB4((uint64_t)v22, v34, &qword_1004C2008);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  if (v35((uint64_t)v9, 1, v2) == 1)
  {
    sub_10000FE2C((uint64_t)v22, &qword_1004C2008);
    sub_10000FE2C((uint64_t)v24, &qword_1004C2008);
    if (v35(v34, 1, v2) == 1)
    {
      v36 = (uint64_t)v9;
LABEL_20:
      sub_10000FE2C(v36, &qword_1004C2008);
      return 1;
    }
  }
  else
  {
    sub_10000FEB4((uint64_t)v9, (uint64_t)v19, &qword_1004C2008);
    if (v35(v34, 1, v2) != 1)
    {
      v42 = (void (*)(_BYTE *, uint64_t, uint64_t))v3[4];
      v61 = v33;
      v43 = v65;
      v42(v65, v34, v2);
      v44 = sub_10004FFFC(&qword_1004C2018, &qword_1004C1F58, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v60 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v43, v2, v44);
      v45 = (void (*)(_BYTE *, uint64_t))v3[1];
      v46 = v43;
      v33 = v61;
      v45(v46, v2);
      sub_10000FE2C((uint64_t)v22, &qword_1004C2008);
      sub_10000FE2C((uint64_t)v24, &qword_1004C2008);
      v45(v19, v2);
      sub_10000FE2C((uint64_t)v9, &qword_1004C2008);
      if ((v60 & 1) != 0)
        return 1;
      goto LABEL_12;
    }
    sub_10000FE2C((uint64_t)v22, &qword_1004C2008);
    sub_10000FE2C((uint64_t)v24, &qword_1004C2008);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v19, v2);
  }
  sub_10000FE2C((uint64_t)v9, &qword_1004C2000);
LABEL_12:
  v38 = *(_QWORD *)(v63 + v62);
  if (v38)
  {
    v39 = swift_retain(*(_QWORD *)(v63 + v62));
    v40 = (uint64_t)v68;
    GroupSession.state.getter(v39);
    v37 = swift_release(v38);
    v41 = 0;
  }
  else
  {
    v41 = 1;
    v40 = (uint64_t)v68;
  }
  v47 = (uint64_t)v67;
  v32((_BYTE *)v40, v41, 1, v2, v37);
  v33((_BYTE *)v47, enum case for GroupSession.State.joined<A>(_:), v2);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v32)(v47, 0, 1, v2);
  v48 = (uint64_t)v64;
  v49 = (uint64_t)&v64[*(int *)(v69 + 48)];
  sub_10000FEB4(v40, (uint64_t)v64, &qword_1004C2008);
  sub_10000FEB4(v47, v49, &qword_1004C2008);
  if (v35(v48, 1, v2) == 1)
  {
    sub_10000FE2C(v47, &qword_1004C2008);
    sub_10000FE2C(v40, &qword_1004C2008);
    if (v35(v49, 1, v2) == 1)
    {
      v36 = v48;
      goto LABEL_20;
    }
    goto LABEL_23;
  }
  sub_10000FEB4(v48, (uint64_t)v66, &qword_1004C2008);
  if (v35(v49, 1, v2) == 1)
  {
    sub_10000FE2C(v47, &qword_1004C2008);
    sub_10000FE2C(v40, &qword_1004C2008);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v66, v2);
LABEL_23:
    sub_10000FE2C(v48, &qword_1004C2000);
LABEL_24:
    v50 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v51 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v50, "BOOLForKey:", v51);

    return (uint64_t)v28;
  }
  v53 = v65;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v3[4])(v65, v49, v2);
  v54 = sub_10004FFFC(&qword_1004C2018, &qword_1004C1F58, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
  v55 = v66;
  v56 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v53, v2, v54);
  v57 = v47;
  v58 = (void (*)(_BYTE *, uint64_t))v3[1];
  v58(v53, v2);
  sub_10000FE2C(v57, &qword_1004C2008);
  sub_10000FE2C(v40, &qword_1004C2008);
  v58(v55, v2);
  sub_10000FE2C(v48, &qword_1004C2008);
  if ((v56 & 1) == 0)
    goto LABEL_24;
  return 1;
}

uint64_t GroupActivitiesManager.isLoading.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v2 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t GroupActivitiesManager.participantsCount.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003D2FF0);
  v2 = swift_getKeyPath(&unk_1003D3018);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001DF918(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2FF0);
  v5 = swift_getKeyPath(&unk_1003D3018);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_1001DF994(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2FF0);
  v5 = swift_getKeyPath(&unk_1003D3018);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v9;
  v7 = swift_getKeyPath(&unk_1003D2FF0);
  v8 = swift_getKeyPath(&unk_1003D3018);
  v9 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v9, v3, v7, v8);
  sub_1001DFA5C(v6);
}

void sub_1001DFA5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_1003D2FF0);
  v5 = swift_getKeyPath(&unk_1003D3018);
  static Published.subscript.getter(v21, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (v21[0] != a1)
  {
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v6 = type metadata accessor for Logger(0);
    sub_100039D34(v6, (uint64_t)static Logger.groupActivities);
    v7 = swift_retain_n(v2, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      *(_DWORD *)v11 = 134349056;
      v12 = swift_getKeyPath(&unk_1003D2FF0);
      v13 = swift_getKeyPath(&unk_1003D3018);
      static Published.subscript.getter(v21, v2, v12, v13);
      swift_release(v13);
      swift_release(v12);
      swift_release(v2);
      *(_QWORD *)(v11 + 4) = v21[0];
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "👤 Participants count update=%{public}ld", (uint8_t *)v11, 0xCu);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2, v10);
    }

    v14 = swift_getKeyPath(&unk_1003D2FF0);
    v15 = swift_getKeyPath(&unk_1003D3018);
    static Published.subscript.getter(v21, v2, v14, v15);
    swift_release(v15);
    swift_release(v14);
    v16 = v21[0];
    v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v21, 1, 0);
    if (*v17 < v16)
    {
      v18 = swift_getKeyPath(&unk_1003D2FF0);
      v19 = swift_getKeyPath(&unk_1003D3018);
      static Published.subscript.getter(&v20, v2, v18, v19);
      swift_release(v19);
      swift_release(v18);
      *v17 = v20;
    }
  }
}

uint64_t Logger.groupActivities.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v0 = type metadata accessor for Logger(0);
  return sub_100039D34(v0, (uint64_t)static Logger.groupActivities);
}

uint64_t GroupActivitiesManager.$participantsCount.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1004C1BA0);
}

void sub_1001DFD2C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v5 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_1001DFDA8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v5 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = v9;
  v6 = swift_getKeyPath(&unk_1003D2FA8);
  v7 = swift_getKeyPath(&unk_1003D2FD0);
  v8 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v8, v3, v6, v7);
  sub_1001DFE70(KeyPath);
}

void sub_1001DFE70(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v5 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((uint64_t *)((char *)&v14 + 1), v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (BYTE1(v14) != v3)
  {
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v6 = type metadata accessor for Logger(0);
    sub_100039D34(v6, (uint64_t)static Logger.groupActivities);
    v7 = swift_retain_n(v2, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v11 = swift_slowAlloc(8, -1);
      *(_DWORD *)v11 = 67240192;
      v12 = swift_getKeyPath(&unk_1003D2FA8);
      v13 = swift_getKeyPath(&unk_1003D2FD0);
      static Published.subscript.getter(&v14, v2, v12, v13);
      swift_release(v13);
      swift_release(v12);
      swift_release(v2);
      *(_DWORD *)(v11 + 4) = v14;
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "⏳ Session is loading=%{BOOL,public}d", (uint8_t *)v11, 8u);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2, v10);
    }

  }
}

uint64_t GroupActivitiesManager.$isLoading.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_1004BF240);
}

uint64_t property wrapper backing initializer of GroupActivitiesManager.reaction(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[48];

  sub_10000FD10(a1, (uint64_t)v3, &qword_1004C2028);
  v1 = sub_1000057B4(&qword_1004C2028);
  return Published.init(initialValue:)(v3, v1);
}

double GroupActivitiesManager.reaction.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_1003D3038);
  v4 = swift_getKeyPath(&unk_1003D3060);
  static Published.subscript.getter(v8, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)v8;
  v6 = v8[1];
  v7 = v8[2];
  *a1 = v8[0];
  a1[1] = v6;
  a1[2] = v7;
  return result;
}

double sub_1001E0108@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003D3038);
  v5 = swift_getKeyPath(&unk_1003D3060);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2] = v8;
  return result;
}

_QWORD *sub_1001E018C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[6];
  _QWORD v15[6];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D3038);
  v10 = swift_getKeyPath(&unk_1003D3060);
  sub_1001F143C(v2, v3);
  static Published.subscript.getter(v14, v8, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  sub_10000FD10((uint64_t)v14, (uint64_t)v15, &qword_1004C2028);
  v11 = swift_getKeyPath(&unk_1003D3038);
  v12 = swift_getKeyPath(&unk_1003D3060);
  v14[0] = v2;
  v14[1] = v3;
  v14[2] = v4;
  v14[3] = v5;
  v14[4] = v6;
  v14[5] = v7;
  swift_retain(v8);
  static Published.subscript.setter(v14, v8, v11, v12);
  sub_1001E02B0(v15);
  return sub_1001F14B4(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F1478);
}

void sub_1001E02B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD v60[6];
  _QWORD v61[6];
  _QWORD v62[6];
  uint64_t v63[6];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char v70;

  v2 = v1;
  sub_10000FD10((uint64_t)a1, (uint64_t)v61, &qword_1004C2028);
  v5 = v61[0];
  v4 = v61[1];
  v54 = (char *)v61[4];
  v55 = v61[2];
  v58 = (char *)v61[5];
  v59 = v61[3];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1003D3038);
  v13 = swift_getKeyPath(&unk_1003D3060);
  v56 = v2;
  static Published.subscript.getter(&v64, v2, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v14 = v65;
  if (v65)
  {
    v48 = v9;
    v49 = v7;
    v50 = v6;
    v15 = v64;
    v16 = v66;
    v17 = v67;
    v19 = v68;
    v18 = v69;
    sub_10000FD10((uint64_t)a1, (uint64_t)v62, &qword_1004C2028);
    v57 = v16;
    if (!v62[1])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = v15;
      sub_1001F1478(v15, v14, v16, v17, (uint64_t)v19, (uint64_t)v18);
      sub_1001F1478(v5, v4, v55, v59, (uint64_t)v54, (uint64_t)v58);
      goto LABEL_17;
    }
    if ((v15 == v5 && v14 == v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v14, v5, v4, 0) & 1) != 0)
      && (v57 == v55 && v17 == v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v17, v55, v59, 0) & 1) != 0))
    {
      if (!v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v57;
        sub_1001F143C(v15, v14);
        sub_1001F14B4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F143C);
        swift_bridgeObjectRelease();
        v21 = 0;
        v22 = v15;
        if (!v58)
          goto LABEL_38;
        goto LABEL_16;
      }
      if (v58)
      {
        if (v19 == v54 && v18 == v58)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v20 = v57;
          sub_1001F143C(v15, v14);
          sub_1001F14B4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F143C);
          swift_bridgeObjectRelease();
          v21 = v18;
          v22 = v15;
LABEL_38:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1001F1478(v22, v14, v20, v17, (uint64_t)v19, (uint64_t)v18);
          swift_bridgeObjectRelease_n(v21, 2);
          swift_bridgeObjectRelease_n(v17, 2);
          swift_bridgeObjectRelease_n(v14, 2);
          return;
        }
        LODWORD(v55) = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v54, v58, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v57;
        sub_1001F143C(v15, v14);
        sub_1001F14B4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F143C);
        swift_bridgeObjectRelease();
        v21 = v18;
        v22 = v15;
        if ((v55 & 1) != 0)
          goto LABEL_38;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v57;
    sub_1001F143C(v15, v14);
    sub_1001F14B4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F143C);
    swift_bridgeObjectRelease();
    v22 = v15;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = v22;
    sub_1001F1478(v22, v14, v20, v17, (uint64_t)v19, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v20;
LABEL_17:
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v23 = type metadata accessor for Logger(0);
    sub_100039D34(v23, (uint64_t)static Logger.groupActivities);
    swift_bridgeObjectRetain_n(v18, 2);
    swift_bridgeObjectRetain_n(v14, 2);
    v24 = swift_bridgeObjectRetain_n(v17, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v63[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v64 = v16;
      v65 = v17;
      swift_bridgeObjectRetain();
      v29 = (char *)String.init<A>(reflecting:)(&v64, &type metadata for String);
      *(_QWORD *)(v27 + 4) = sub_1000393D0(v29, v30, v63);
      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "🌚 received: %{public}s)", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      v31 = v56;
      if (!v18)
        goto LABEL_32;
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      v31 = v56;
      if (!v18)
        goto LABEL_32;
    }
    v32 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v32)
    {
      swift_bridgeObjectRetain();
      v33 = swift_retain(v32);
      v34 = v51;
      GroupSession.localParticipant.getter(v33);
      swift_release(v32);
      v35 = v48;
      Participant.id.getter(v36);
      v37 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      v38 = UUID.uuidString.getter(v37);
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
      if (v19 == (char *)v38 && v18 == v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        v42 = swift_getKeyPath(&unk_1003D3038);
        v43 = swift_getKeyPath(&unk_1003D3060);
        static Published.subscript.getter(v60, v31, v42, v43);
        swift_release(v42);
        swift_release(v43);
        sub_10000FD10((uint64_t)v60, (uint64_t)v63, &qword_1004C2028);
        v44 = swift_getKeyPath(&unk_1003D3038);
        v45 = swift_getKeyPath(&unk_1003D3060);
        memset(v60, 0, sizeof(v60));
        swift_retain(v31);
        static Published.subscript.setter(v60, v31, v44, v45);
        sub_1001E02B0(v63);
        sub_1001F14B4(v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001F1478);
        return;
      }
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v38, v40, 0);
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v64 = v47;
    v65 = v14;
    v66 = v57;
    v67 = v17;
    v68 = v19;
    v69 = v18;
    v70 = 1;
    GroupActivitiesManager.postEvent(_:participantID:)((uint64_t)&v64, v19, v18);
    swift_bridgeObjectRelease_n(v18, 2);
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
}

uint64_t GroupActivitiesManager.$reaction.getter()
{
  return sub_10017259C(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_1004C2038);
}

uint64_t GroupActivitiesManager.maxParticipantsCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t GroupActivitiesManager.hasJoined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v1 = sub_1000057B4(&qword_1004C1F58);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000057B4(&qword_1004C2000);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004C2008);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  v17 = (char *)&v30 - v15;
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v18)
  {
    v19 = swift_retain(v18);
    GroupSession.state.getter(v19);
    v20 = swift_release(v18);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21(v17, 0, 1, v1, v20);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21((char *)&v30 - v15, 1, 1, v1, v16);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v14, enum case for GroupSession.State.joined<A>(_:), v1);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v14, 0, 1, v1);
  v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10000FEB4((uint64_t)v17, (uint64_t)v7, &qword_1004C2008);
  sub_10000FEB4((uint64_t)v14, v22, &qword_1004C2008);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v23((uint64_t)v7, 1, v1) == 1)
  {
    sub_10000FE2C((uint64_t)v14, &qword_1004C2008);
    sub_10000FE2C((uint64_t)v17, &qword_1004C2008);
    v24 = v23(v22, 1, v1);
    if (v24 == 1)
      v25 = &qword_1004C2008;
    else
      v25 = &qword_1004C2000;
    if (v24 == 1)
      v26 = -1;
    else
      v26 = 0;
  }
  else
  {
    sub_10000FEB4((uint64_t)v7, (uint64_t)v11, &qword_1004C2008);
    if (v23(v22, 1, v1) == 1)
    {
      sub_10000FE2C((uint64_t)v14, &qword_1004C2008);
      sub_10000FE2C((uint64_t)v17, &qword_1004C2008);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
      v26 = 0;
      v25 = &qword_1004C2000;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v22, v1);
      v27 = sub_10004FFFC(&qword_1004C2018, &qword_1004C1F58, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v4, v1, v27);
      v28 = *(void (**)(char *, uint64_t))(v2 + 8);
      v28(v4, v1);
      v25 = &qword_1004C2008;
      sub_10000FE2C((uint64_t)v14, &qword_1004C2008);
      sub_10000FE2C((uint64_t)v17, &qword_1004C2008);
      v28(v11, v1);
    }
  }
  sub_10000FE2C((uint64_t)v7, v25);
  return v26 & 1;
}

uint64_t GroupActivitiesManager.isSessionEligible.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[11];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v0 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003D3080);
  v2 = swift_getKeyPath(&unk_1003D30A8);
  static Published.subscript.getter(v12, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v12[3];
  v4 = v12[4];
  v5 = v12[7];
  v6 = v12[9];
  v7 = (void *)v12[10];
  v8 = v13;
  v9 = v14;
  v10 = v15;
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0
    && (GroupStateObserver.isEligibleForGroupSession.getter() & 1) != 0)
  {
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);

  return 0;
}

id GroupActivitiesManager.itemProvider(with:metadata:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __n128 v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  _QWORD v67[2];
  _QWORD *v68;
  _QWORD *v69;
  char v70[24];
  id v71[3];
  uint64_t v72;
  char v73[24];
  _QWORD *v74;

  v4 = v2;
  v7 = sub_1000057B4(&qword_1004C1F90);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD **)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)v67 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    goto LABEL_2;
  v67[0] = a2;
  v67[1] = v3;
  swift_beginAccess(v2 + 2, v73, 0, 0);
  v27 = v2[5];
  v26 = v2[6];
  v68 = v2 + 2;
  v28 = sub_1000096A0(v2 + 2, v27);
  v69 = v67;
  v29 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v31);
  v32 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 56))(v27, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
  if (!v32)
  {
LABEL_12:
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v37 = type metadata accessor for Logger(0);
    v17 = (id)sub_100039D34(v37, (uint64_t)static Logger.groupActivities);
    v38 = swift_retain_n(v4, 2);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter(v39);
    if (!os_log_type_enabled(v39, v40))
    {

      swift_release_n(v4, 2, v57);
LABEL_22:
      v63 = sub_1001ED7EC();
      swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v63, 0, 0);
      *(_QWORD *)v64 = 1;
      *(_BYTE *)(v64 + 8) = 4;
      swift_willThrow(v65);
      return v17;
    }
    v41 = swift_slowAlloc(22, -1);
    v69 = (_QWORD *)swift_slowAlloc(64, -1);
    v74 = v69;
    *(_DWORD *)v41 = 136446466;
    v71[0] = 0;
    v42 = sub_1000057B4((uint64_t *)&unk_1004C2050);
    v43 = (char *)String.init<A>(describing:)(v71, v42);
    *(_QWORD *)(v41 + 4) = sub_1000393D0(v43, v44, (uint64_t *)&v74);
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    v45 = v4[5];
    v46 = v4[6];
    v47 = sub_1000096A0(v68, v45);
    v68 = v67;
    v48 = *(_QWORD *)(v45 - 8);
    __chkstk_darwin(v47);
    v50 = (char *)v67 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v48 + 16))(v50);
    v51 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 56))(v45, v46);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v45);
    if (v51)
    {
      v52 = &v51[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v51[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v71, 0, 0);
      v53 = *(_QWORD *)v52;
      if (v53)
      {
        swift_retain(v53);

        KeyPath = swift_getKeyPath(&unk_1003D30C8);
        v55 = swift_getKeyPath(&unk_1003D30F0);
        static Published.subscript.getter(&v72, v53, KeyPath, v55);
        swift_release(v53);
        swift_release(KeyPath);
        swift_release(v55);
        v56 = v72;
LABEL_21:
        v58 = v69;
        v72 = v56;
        v59 = sub_1000057B4(&qword_1004BFC30);
        v60 = (char *)String.init<A>(describing:)(&v72, v59);
        v17 = v61;
        *(_QWORD *)(v41 + 14) = sub_1000393D0(v60, v61, (uint64_t *)&v74);
        swift_release_n(v4, 2, v62);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "    Cannot build itemProvider with intent=%{public}s\")\n    and player=%{public}s\")", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v58, -1, -1);
        swift_slowDealloc(v41, -1, -1);

        goto LABEL_22;
      }

    }
    v56 = 0;
    goto LABEL_21;
  }
  v33 = &v32[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v32[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v70, 0, 0);
  v34 = *(_QWORD *)v33;
  if (!*(_QWORD *)v33)
  {

    goto LABEL_12;
  }
  swift_retain(*(_QWORD *)v33);

  v35 = swift_getKeyPath(&unk_1003D30C8);
  v36 = swift_getKeyPath(&unk_1003D30F0);
  static Published.subscript.getter(v71, v34, v35, v36);
  swift_release(v34);
  swift_release(v35);
  swift_release(v36);
  if (!v71[0])
    goto LABEL_12;

  a2 = v67[0];
LABEL_2:
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100039D34(v11, (uint64_t)static Logger.groupActivities);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    v69 = v9;
    v16 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Building GroupActivity item provider", v15, 2u);
    v10 = (char *)v67 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = v69;
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_10000FEB4(a2, (uint64_t)v10, &qword_1004C1F90);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = ((unint64_t)v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_10047D490, v20 + 8, v18 | 7);
  *(_QWORD *)(v21 + 16) = a1;
  sub_10000FD10((uint64_t)v10, v21 + v19, &qword_1004C1F90);
  *(_QWORD *)(v21 + v20) = v4;
  v22 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v23 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v24 = a1;
  v25 = swift_retain(v4);
  NSItemProvider.registerGroupActivity<A>(preparationHandler:)(&unk_1004C2068, v21, v22, v23, v25);
  swift_release(v21);
  return v17;
}

uint64_t sub_1001E172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_1000057B4(&qword_1004C1F90);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E178C, 0, 0);
}

uint64_t sub_1001E178C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(id);

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = unk_1004C29B4;
    v9 = (uint64_t (*)(id))((char *)&dword_1004C29B0 + dword_1004C29B0);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_1001E1894;
    return v9(v3);
  }
  else
  {
    v6 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 136) = v6;
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v6 + 32) = 0;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v7;
    v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
    *v7 = v0;
    v7[1] = sub_1001E1908;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD00000000000001CLL, 0x80000001003AF0D0, sub_1001F0D3C, v6, v8);
  }
}

uint64_t sub_1001E1894(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001E1A94;
  }
  else
  {
    *(_QWORD *)(v4 + 160) = a1;
    v6 = sub_1001E1984;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001E1908()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 144);
  v3 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001E1C78, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 136));
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001E1984()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = (void *)v0[20];
  v2 = v0[13];
  sub_10000FEB4(v0[12], v0[14], &qword_1004C1F90);
  v2 += 16;
  swift_beginAccess(v2, v0 + 7, 0, 0);
  sub_1000444A8(v2, (uint64_t)(v0 + 2));
  v3 = dword_1004C26F4;
  v4 = v1;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[21] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_1001E1A30;
  return sub_1001DC9EC(v0[10], v0[20], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_1001E1A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001E1BF8;
  else
    v3 = sub_1001E1B0C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001E1A94()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v0[23] = v0[16];
  v1 = (void *)v0[11];
  v2 = type metadata accessor for MainActor(0);
  v3 = v1;
  v0[24] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E1B50, v5, v6);
}

uint64_t sub_1001E1B0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E1B50()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[23];
  v2 = (void *)v0[11];
  swift_release(v0[24]);
  sub_1001E1CB4(v1, v2);

  return swift_task_switch(sub_1001E1BAC, 0, 0);
}

uint64_t sub_1001E1BAC(__n128 a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 88);
  swift_willThrow(a1);

  swift_task_dealloc(*(_QWORD *)(v1 + 112));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001E1BF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 176);
  v1 = *(void **)(v0 + 88);
  v2 = type metadata accessor for MainActor(0);
  v3 = v1;
  *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E1B50, v5, v6);
}

uint64_t sub_1001E1C78()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001E1CB4(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void *v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[7];
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;

  v3 = (uint64_t)v2;
  *(_QWORD *)&v29[0] = a1;
  swift_errorRetain(a1);
  v5 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  if (swift_dynamicCast(v32, v29, v5, &type metadata for SharedListening.ErrorHandling.Error, 6))
  {
    v22 = *(void **)&v32[0];
    v21 = BYTE8(v32[0]);
    swift_beginAccess(v2 + 2, &v27, 0, 0);
    v6 = v2[5];
    v7 = v2[6];
    v8 = sub_1000096A0(v2 + 2, v6);
    v9 = *(_QWORD *)(v6 - 8);
    __chkstk_darwin(v8);
    v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
    if (v12)
    {
      v13 = (uint64_t *)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], &v23, 0, 0);
      v14 = *v13;
      swift_retain(v14);

    }
    else
    {
      v14 = 0;
    }
    v15 = a2;
    swift_retain(v3);
    v16 = v22;
    v17 = v21;
    sub_1001F3168(v22, v21);
    sub_1001F38C8(a2, v3, v14, v16, v17, v28);
    sub_10000FD10((uint64_t)v28, (uint64_t)v29, &qword_1004C2700);
    if (*((_QWORD *)&v30 + 1))
    {
      v32[0] = v29[0];
      v32[1] = v29[1];
      v32[2] = v30;
      v33 = v31;
      sub_1000444A8(v3 + 16, (uint64_t)v24);
      v18 = v25;
      v19 = v26;
      sub_1000096A0(v24, v25);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v19 + 40))(v32, v18, v19);
      sub_100143C8C((uint64_t)v28);
      swift_release(v3);

      swift_release(v14);
      sub_1001F0D8C(v16, v17);
      sub_10000970C(v24);
    }
    else
    {
      swift_release(v3);

      swift_release(v14);
      sub_1001F0D8C(v16, v17);
    }
  }
}

double sub_1001E1F20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v31 = a3;
  v32 = a4;
  v30 = a1;
  v5 = sub_1000057B4(&qword_1004C2708);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4(&qword_1004C1F90);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_10000FEB4(a2, (uint64_t)v12, &qword_1004C1F90);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v30, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_10047D6B8, v22 + 8, v17 | v20 | 7);
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  sub_10000FD10((uint64_t)v12, v23 + v18, &qword_1004C1F90);
  v24 = v31;
  *(_QWORD *)(v23 + v19) = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v8, v5);
  v25 = v32;
  *(_QWORD *)(v23 + v22) = v32;
  v26 = v25;
  swift_retain(v24);
  v27 = sub_1000E6084((uint64_t)v15, (uint64_t)&unk_1004C2718, v23);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_1001E2114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v8 = sub_1000057B4(&qword_1004C2708);
  v7[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[17] = v10;
  v7[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v7[19] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v7[20] = v12;
  v7[21] = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E21AC, 0, 0);
}

uint64_t sub_1001E21AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[18];
  v4 = v0[19];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[15];
  v8 = v0[13];
  v28 = v0[12];
  sub_10000FEB4(v0[11], v1, &qword_1004C1F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v8, v7);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + v11 + 8) & ~v12;
  v14 = swift_allocObject(&unk_10047D6E0, v13 + v6, v9 | v12 | 7);
  v0[22] = v14;
  sub_10000FD10(v1, v14 + v10, &qword_1004C1F90);
  *(_QWORD *)(v14 + v11) = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v14 + v13, v3, v7);
  v15 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v0[2] = _NSConcreteStackBlock;
  v0[6] = CFRange.init(_:);
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_10001D2BC;
  v0[5] = &unk_10047D6F8;
  v16 = _Block_copy(v0 + 2);
  v17 = objc_msgSend(v15, "initWithBlock:", v16, swift_retain(v28).n128_f64[0]);
  v0[23] = v17;
  _Block_release(v16);
  v18 = swift_release(v0[7]);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v18);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = (_QWORD *)v0[12];
    v21 = v20 + 2;
    swift_beginAccess(v20 + 2, v0 + 8, 0, 0);
    v22 = v20[5];
    v23 = v20[6];
    sub_1000096A0(v21, v22);
    v24 = *(_QWORD *)(v22 - 8);
    v25 = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    v0[24] = v25;
    (*(void (**)(void))(v24 + 16))();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
    v0[25] = v26;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v22);
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004C29C0 + dword_1004C29C0);
    v27 = (_QWORD *)swift_task_alloc(unk_1004C29C4);
    v0[26] = v27;
    *v27 = v0;
    v27[1] = sub_1001E242C;
    return v29((uint64_t)v17, (uint64_t)sub_1001F117C, v14, v26);
  }
  return result;
}

uint64_t sub_1001E242C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001E24EC;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v5);
    v4 = sub_1001E24A0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E24A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E24EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 192);

  swift_task_dealloc(v1);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 224) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E2564, v4, v5);
}

uint64_t sub_1001E2564()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[27];
  v2 = (void *)v0[14];
  swift_release(v0[28]);
  sub_1001E1CB4(v1, v2);
  return swift_task_switch(sub_1001E25BC, 0, 0);
}

uint64_t sub_1001E25BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 176);

  swift_release(v2);
  swift_errorRelease(v1);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001E2614(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v29 = a4;
  v30 = a1;
  v31 = a3;
  v5 = sub_1000057B4(&qword_1004C2708);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4(&qword_1004C1F90);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_10000FEB4(a2, (uint64_t)v12, &qword_1004C1F90);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (char *)swift_allocObject(&unk_10047D730, v21 + v7, v17 | v20 | 7);
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  v23 = v30;
  *((_QWORD *)v22 + 4) = v30;
  sub_10000FD10((uint64_t)v12, (uint64_t)&v22[v18], &qword_1004C1F90);
  v24 = v31;
  *(_QWORD *)&v22[v19] = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v8, v5);
  v25 = v23;
  swift_retain(v24);
  v26 = sub_1001CC790((uint64_t)v15, (uint64_t)&unk_1004C2728, (uint64_t)v22);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1001E27FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = sub_1000057B4(&qword_1004C1F90);
  v7[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v9);
  v7[16] = swift_task_alloc(v9);
  return swift_task_switch(sub_1001E288C, 0, 0);
}

uint64_t sub_1001E288C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = v0[12];
  v2 = (void *)v0[10];
  sub_10000FEB4(v0[11], v0[14], &qword_1004C1F90);
  v1 += 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_1000444A8(v1, (uint64_t)(v0 + 2));
  v3 = dword_1004C26F4;
  v4 = v2;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[17] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_1001E2938;
  return sub_1001DC9EC(v0[16], v0[10], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_1001E2938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001E2A34;
  else
    v3 = sub_1001E299C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001E299C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1000A2258(v1, v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = sub_1000057B4(&qword_1004C2708);
  CheckedContinuation.resume(returning:)(v2, v4);
  sub_100034960(v1, type metadata accessor for GroupActivitiesManager.Activity);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E2A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E2A7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for GroupActivityActivationResult(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E2B20, 0, 0);
}

uint64_t sub_1001E2B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GroupActivitiesManager prepareForActivation", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  if ((GroupActivitiesManager.isSessionEligible.getter() & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 64);
    KeyPath = swift_getKeyPath(&unk_1003D2FA8);
    v8 = swift_getKeyPath(&unk_1003D2FD0);
    static Published.subscript.getter((_QWORD *)(v0 + 49), v6, KeyPath, v8);
    swift_release(v8);
    swift_release(KeyPath);
    if ((*(_BYTE *)(v0 + 49) & 1) == 0)
    {
      v18 = *(_OWORD **)(v0 + 128);
      v19 = *(_QWORD *)(v0 + 112);
      v20 = *(_QWORD *)(v0 + 64);
      v18[2] = 0u;
      v18[3] = 0u;
      *v18 = 0u;
      v18[1] = 0u;
      v21 = (char *)v18 + *(int *)(v19 + 32);
      v22 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      sub_10000FE2C((uint64_t)v18, &qword_1004C1F98);
      swift_beginAccess(v20 + 16, v0 + 16, 0, 0);
      sub_1000444A8(v20 + 16, (uint64_t)v18);
      v23 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.prepareForActivation()[1]);
      *(_QWORD *)(v0 + 144) = v23;
      v24 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
      *v23 = v0;
      v23[1] = sub_1001E2EA0;
      return GroupActivity.prepareForActivation()(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v24);
    }
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v29 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = 2;
      *(_QWORD *)(v0 + 40) = 2;
      *(_BYTE *)(v0 + 48) = 4;
      v15 = (char *)String.init<A>(describing:)(v0 + 40, &type metadata for SharedListening.ErrorHandling.Error);
      v17 = v16;
      *(_QWORD *)(v12 + 4) = sub_1000393D0(v15, v16, &v29);
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Prepare error=%{public}s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      v14 = 2;
    }
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 56), v14, 4, *(_QWORD *)(v0 + 112));
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E2EA0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_1001E2EF4, 0, 0);
}

uint64_t sub_1001E2EF4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 16);
  v2 = v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 96);
  if (v5)
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v43 = v11;
    *(_DWORD *)v10 = 136446210;
    v1(v7, v6, v9);
    v12 = (char *)String.init<A>(reflecting:)(v7, v9);
    v14 = v13;
    *(_QWORD *)(v10 + 4) = sub_1000393D0(v12, v13, &v43);
    swift_bridgeObjectRelease(v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(v6, v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "User choice=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
    v15(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  }

  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 72);
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 80) + 104);
  v19(v17, enum case for GroupActivityActivationResult.activationPreferred(_:), v18);
  LOBYTE(v16) = static GroupActivityActivationResult.== infix(_:_:)(v16, v17);
  v15(v17, v18);
  v21 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 112);
  if ((v16 & 1) != 0)
  {
    v40 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 64);
    KeyPath = swift_getKeyPath(&unk_1003D2FA8);
    v41 = v23;
    v27 = swift_getKeyPath(&unk_1003D2FD0);
    static Published.subscript.getter((_QWORD *)(v0 + 50), v25, KeyPath, v27);
    swift_release(v27);
    swift_release(KeyPath);
    v28 = *(_BYTE *)(v0 + 50);
    v29 = swift_getKeyPath(&unk_1003D2FA8);
    v30 = swift_getKeyPath(&unk_1003D2FD0);
    *(_BYTE *)(v0 + 51) = 1;
    swift_retain(v25);
    static Published.subscript.setter(v0 + 51, v25, v29, v30);
    sub_1001DFE70(v28);
    v15(v22, v40);
    sub_1000A2258(v20, v24, type metadata accessor for GroupActivitiesManager.Activity);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v24, 0, 4, v41);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 56);
    v19(v31, enum case for GroupActivityActivationResult.activationDisabled(_:), v32);
    v34 = static GroupActivityActivationResult.== infix(_:_:)(v22, v31);
    v15(v31, v32);
    v15(v22, v32);
    if ((v34 & 1) != 0)
      v35 = 3;
    else
      v35 = 4;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v33, v35, 4, v23);
  }
  sub_100034960(v20, type metadata accessor for GroupActivitiesManager.Activity);
  v36 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E3244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v1 = v0;
  v2 = sub_1000057B4(&qword_1004BCBD0);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1000057B4(&qword_1004BD3B0);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Signpost(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100039D34(v12, (uint64_t)static Logger.groupActivities);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "beginMeasuringInitiationTime", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  if (qword_1004B9410 != -1)
    swift_once(&qword_1004B9410, sub_100217C98);
  v17 = (id)static OS_os_log.sharePlay;
  swift_retain(v1);
  Signpost.init(name:object:log:)((uint64_t)"InitiationToFirstAudioFrame", 27, 2, v1, v17, v11);
  Signpost.begin(dso:_:_:)((uint64_t)&_mh_execute_header, (uint64_t)"enableTelemetry=YES", 19, 2, (uint64_t)_swiftEmptyArrayStorage);
  sub_1000A2258((uint64_t)v11, (uint64_t)v7, type metadata accessor for Signpost);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v18 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v24, 33, 0);
  sub_10000FD60((uint64_t)v7, v18, &qword_1004BD3B0);
  v19 = swift_endAccess(v24);
  Date.init()(v19);
  sub_100034960((uint64_t)v11, type metadata accessor for Signpost);
  v20 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 0, 1, v20);
  v21 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v21, v24, 33, 0);
  sub_10000FD60((uint64_t)v4, v21, &qword_1004BCBD0);
  return swift_endAccess(v24);
}

uint64_t sub_1001E3548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  v7 = *(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8);
  v6[14] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v6[15] = v8;
  v6[16] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[17] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[18] = v11;
  v6[19] = v12;
  return swift_task_switch(sub_1001E35E0, v11, v12);
}

uint64_t sub_1001E35E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (void *)v0[11];
  if (v1)
  {
    v2 = unk_1004C29B4;
    v25 = (uint64_t (*)(uint64_t))((char *)&dword_1004C29B0 + dword_1004C29B0);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    v0[20] = v4;
    *v4 = v0;
    v4[1] = sub_1001E3864;
    return v25((uint64_t)v3);
  }
  else
  {
    v6 = v0[15];
    v7 = v0[16];
    v8 = v0[14];
    v9 = v0[12];
    sub_1000A2258(v0[13], v7, type metadata accessor for GroupActivitiesManager.Activity);
    v10 = *(unsigned __int8 *)(v8 + 80);
    v11 = (v10 + 24) & ~v10;
    v12 = swift_allocObject(&unk_10047D900, v11 + v6, v10 | 7);
    v0[22] = v12;
    *(_QWORD *)(v12 + 16) = v9;
    sub_100084888(v7, v12 + v11, type metadata accessor for GroupActivitiesManager.Activity);
    v13 = objc_allocWithZone((Class)ICLiveLinkIdentity);
    v0[2] = _NSConcreteStackBlock;
    v0[6] = CFRange.init(_:);
    v0[7] = 0;
    v0[3] = 1107296256;
    v0[4] = sub_10001D2BC;
    v0[5] = &unk_10047D918;
    v14 = _Block_copy(v0 + 2);
    v15 = objc_msgSend(v13, "initWithBlock:", v14, swift_retain(v9).n128_f64[0]);
    v0[23] = v15;
    _Block_release(v14);
    v16 = swift_release(v0[7]);
    result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v16);
    if ((result & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v17 = (_QWORD *)v0[12];
      v18 = v17 + 2;
      swift_beginAccess(v17 + 2, v0 + 8, 0, 0);
      v19 = v17[5];
      v20 = v17[6];
      sub_1000096A0(v18, v19);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      v0[24] = v22;
      (*(void (**)(void))(v21 + 16))();
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
      v0[25] = v23;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v19);
      v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004C29C0 + dword_1004C29C0);
      v24 = (_QWORD *)swift_task_alloc(unk_1004C29C4);
      v0[26] = v24;
      *v24 = v0;
      v24[1] = sub_1001E3904;
      return v26((uint64_t)v15, (uint64_t)sub_1001F1ADC, v12, v23);
    }
  }
  return result;
}

uint64_t sub_1001E3864(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t **v7;

  v4 = (*v2)[20];
  v5 = *v2;
  v5[21] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1001E3B84, v5[18], v5[19]);
  v5[28] = a1;
  v7 = (uint64_t **)swift_task_alloc(dword_1004C290C);
  v5[29] = (uint64_t)v7;
  *v7 = v5;
  v7[1] = (uint64_t *)sub_1001E3AF0;
  return sub_1001E3C98(a1, v5[13]);
}

uint64_t sub_1001E3904()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_1001E39C4;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_1001E3978;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001E3978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 136);

  swift_release(v1);
  swift_release(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E39C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(void **)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(v2);
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v8 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 240), v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  v9 = *(_BYTE *)(v0 + 240);
  v10 = swift_getKeyPath(&unk_1003D2FA8);
  v11 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 241) = 0;
  swift_retain(v6);
  static Published.subscript.setter(v0 + 241, v6, v10, v11);
  sub_1001DFE70(v9);
  sub_1001E1CB4(v1, 0);

  swift_release(v4);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E3AF0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  return swift_task_switch(sub_1001E3B3C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1001E3B3C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E3B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 136));
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v5 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 242), v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v0 + 242);
  v7 = swift_getKeyPath(&unk_1003D2FA8);
  v8 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 243) = 0;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 243, v2, v7, v8);
  sub_1001DFE70(v6);
  v9 = v3;
  sub_1001E1CB4(v1, v3);

  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E3C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v3[31] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v5);
  v3[33] = swift_task_alloc(v5);
  v3[34] = swift_task_alloc(v5);
  return swift_task_switch(sub_1001E3D14, 0, 0);
}

uint64_t sub_1001E3D14()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 224);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "sharedListeningProperties");
    *(_QWORD *)(v0 + 280) = v3;
    if (v3)
    {
      if (qword_1004B8DF0 != -1)
        swift_once(&qword_1004B8DF0, sub_1001DE954);
      v4 = v0 + 16;
      v5 = qword_1004C1F00;
      *(_QWORD *)(v0 + 56) = v0 + 200;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1001E4054;
      v6 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v7 = (_QWORD *)(v0 + 80);
      v7[1] = 0x40000000;
      v7[2] = sub_1001051E0;
      v7[3] = &unk_10047D940;
      v7[4] = v6;
      objc_msgSend(v2, "getRepresentativeObjectWithProperties:completion:", v5, v7);
      return swift_continuation_await(v4);
    }

  }
  v9 = *(_QWORD *)(v0 + 240);
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v11 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 329), v9, KeyPath, v11);
  swift_release(v11);
  swift_release(KeyPath);
  v12 = *(_BYTE *)(v0 + 329);
  v13 = swift_getKeyPath(&unk_1003D2FA8);
  v14 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 328) = 0;
  swift_retain(v9);
  static Published.subscript.setter(v0 + 328, v9, v13, v14);
  sub_1001DFE70(v12);
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v15 = *(void **)(v0 + 224);
  v16 = type metadata accessor for Logger(0);
  sub_100039D34(v16, (uint64_t)static Logger.groupActivities);
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = *(_QWORD *)(v0 + 224);
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v29 = v22;
    *(_DWORD *)v21 = 136446210;
    *(_QWORD *)(v0 + 208) = v20;
    v23 = v17;
    v24 = sub_1000057B4((uint64_t *)&unk_1004C2050);
    v25 = (char *)String.init<A>(reflecting:)(v0 + 208, v24);
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v25, v26, &v29);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Cannot activate intent=%{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

  }
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E4054()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 288) = v1;
  if (v1)
    v2 = sub_1001E45C0;
  else
    v2 = sub_1001E40B4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E40B4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;

  v1 = (void *)v0[25];
  v0[37] = v1;
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v2 = type metadata accessor for Logger(0);
  v0[38] = sub_100039D34(v2, (uint64_t)static Logger.groupActivities);
  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v40 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[24] = v1;
    v8 = v3;
    v9 = sub_1000057B4(&qword_1004C2910);
    v10 = (char *)String.init<A>(describing:)(v0 + 24, v9);
    *(_QWORD *)(v6 + 4) = sub_1000393D0(v10, v11, &v40);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Activity starting item=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v12 = v0[34];
  v13 = v0[30];
  sub_1000A2258(v0[29], v12, type metadata accessor for GroupActivitiesManager.Activity);
  sub_10000FE2C(v12, &qword_1004C1F98);
  v13 += 16;
  swift_beginAccess(v13, v0 + 21, 0, 0);
  sub_1000444A8(v13, v12);
  if (v3)
  {
    v14 = objc_msgSend(v3, "innermostModelObject");
    v15 = type metadata accessor for CodableModelObjectIdentity();
    v16 = swift_allocObject(v15, 24, 7);
    *(_QWORD *)(v16 + 16) = v14;
  }
  else
  {
    v17 = type metadata accessor for CodableModelObjectIdentity();
    v18 = swift_allocObject(v17, 24, 7);
    swift_deallocPartialClassInstance(v18, v17, 24, 7);
    v16 = 0;
  }
  v20 = v0[34];
  v19 = (void *)v0[35];
  swift_release(*(_QWORD *)(v20 + 56));
  *(_QWORD *)(v20 + 56) = v16;
  v21 = type metadata accessor for CodableListeningProperties();
  v22 = swift_allocObject(v21, 24, 7);
  *(_QWORD *)(v22 + 16) = v19;
  v23 = *(_QWORD *)(v20 + 48);
  v24 = v19;
  swift_release(v23);
  *(_QWORD *)(v20 + 48) = v22;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v29 = v0[33];
    v28 = v0[34];
    v30 = v0[31];
    v31 = swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v40 = v32;
    *(_DWORD *)v31 = 136446210;
    swift_beginAccess(v28, v0 + 15, 0, 0);
    sub_1000A2258(v28, v29, type metadata accessor for GroupActivitiesManager.Activity);
    v33 = (char *)String.init<A>(describing:)(v29, v30);
    *(_QWORD *)(v31 + 4) = sub_1000393D0(v33, v34, &v40);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "🚀 Activiting activity=%{public}s", (uint8_t *)v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }

  v35 = v0[34];
  v36 = v0[32];
  swift_beginAccess(v35, v0 + 18, 0, 0);
  sub_1000A2258(v35, v36, type metadata accessor for GroupActivitiesManager.Activity);
  v37 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v0[39] = v37;
  v38 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v37 = v0;
  v37[1] = sub_1001E44D8;
  return GroupActivity.activate()(v0[31], v38);
}

uint64_t sub_1001E44D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  sub_100034960(*(_QWORD *)(v2 + 256), type metadata accessor for GroupActivitiesManager.Activity);
  if (v0)
    v4 = sub_1001E4980;
  else
    v4 = sub_1001E454C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E454C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(void **)(v0 + 224);

  sub_100034960(v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E45C0(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37[2];

  v2 = v1[36];
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v1[37] = 0;
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100039D34(v3, (uint64_t)static Logger.groupActivities);
  v1[38] = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v37[0] = v8;
    *(_DWORD *)v7 = 136446210;
    v1[24] = 0;
    v9 = sub_1000057B4(&qword_1004C2910);
    v10 = (char *)String.init<A>(describing:)(v1 + 24, v9);
    *(_QWORD *)(v7 + 4) = sub_1000393D0(v10, v11, v37);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Activity starting item=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  v12 = v1[34];
  v13 = v1[30];
  sub_1000A2258(v1[29], v12, type metadata accessor for GroupActivitiesManager.Activity);
  sub_10000FE2C(v12, &qword_1004C1F98);
  v13 += 16;
  swift_beginAccess(v13, v1 + 21, 0, 0);
  sub_1000444A8(v13, v12);
  v14 = type metadata accessor for CodableModelObjectIdentity();
  v15 = swift_allocObject(v14, 24, 7);
  swift_deallocPartialClassInstance(v15, v14, 24, 7);
  v17 = v1[34];
  v16 = (void *)v1[35];
  swift_release(*(_QWORD *)(v17 + 56));
  *(_QWORD *)(v17 + 56) = 0;
  v18 = type metadata accessor for CodableListeningProperties();
  v19 = swift_allocObject(v18, 24, 7);
  *(_QWORD *)(v19 + 16) = v16;
  v20 = *(_QWORD *)(v17 + 48);
  v21 = v16;
  swift_release(v20);
  *(_QWORD *)(v17 + 48) = v19;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v26 = v1[33];
    v25 = v1[34];
    v27 = v1[31];
    v28 = swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v37[0] = v29;
    *(_DWORD *)v28 = 136446210;
    swift_beginAccess(v25, v1 + 15, 0, 0);
    sub_1000A2258(v25, v26, type metadata accessor for GroupActivitiesManager.Activity);
    v30 = (char *)String.init<A>(describing:)(v26, v27);
    *(_QWORD *)(v28 + 4) = sub_1000393D0(v30, v31, v37);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "🚀 Activiting activity=%{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);
  }

  v32 = v1[34];
  v33 = v1[32];
  swift_beginAccess(v32, v1 + 18, 0, 0);
  sub_1000A2258(v32, v33, type metadata accessor for GroupActivitiesManager.Activity);
  v34 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v1[39] = v34;
  v35 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v34 = v1;
  v34[1] = sub_1001E44D8;
  return GroupActivity.activate()(v1[31], v35);
}

uint64_t sub_1001E4980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 320);
    v6 = *(void **)(v0 + 296);
    v7 = *(void **)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 272);
    v8 = *(void **)(v0 + 224);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v23 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 216) = v5;
    swift_errorRetain(v5);
    v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v12 = (char *)String.init<A>(describing:)(v0 + 216, v11);
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v13, &v23);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activation failed=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v5);
    v14 = v22;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 320);
    v16 = *(void **)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 272);
    v18 = *(void **)(v0 + 224);

    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

    v14 = v17;
  }
  sub_100034960(v14, type metadata accessor for GroupActivitiesManager.Activity);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001E4B7C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1000A2258(a3, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for GroupActivitiesManager.Activity);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 48) & ~v13;
  v15 = (_QWORD *)swift_allocObject(&unk_10047D968, v14 + v8, v13 | 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a1;
  sub_100084888((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, type metadata accessor for GroupActivitiesManager.Activity);
  v16 = a1;
  swift_retain(a2);
  v17 = sub_1000E6084((uint64_t)v11, (uint64_t)&unk_1004C2920, (uint64_t)v15);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_1001E4CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1004C290C);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_10002F6EC;
  return sub_1001E3C98(a5, a6);
}

void GroupActivitiesManager.sessionForReactionAssociation()()
{
  uint64_t v0;

  if ((GroupActivitiesManager.hasJoined.getter() & 1) != 0)
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
}

void sub_1001E4D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[3];

  v1 = v0;
  v86 = sub_1000057B4(&qword_1004C2900);
  __chkstk_darwin(v86);
  v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004C20C8);
  v5 = __chkstk_darwin(v4);
  v85 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v87 = (uint64_t)&v78 - v8;
  v9 = __chkstk_darwin(v7);
  v88 = (uint64_t)&v78 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v78 - v11;
  v13 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v78 - v19;
  v21 = __chkstk_darwin(v18);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v78 - v23;
  __chkstk_darwin(v22);
  v27 = (char *)&v78 - v26;
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v28)
    return;
  v82 = v25;
  v84 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v29 = swift_retain(v28);
  GroupSession.activity.getter(v29);
  swift_release(v28);
  v30 = *((_QWORD *)v27 + 6);
  if (!v30)
  {
    sub_100034960((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
    return;
  }
  v81 = v3;
  v31 = *(id *)(v30 + 16);
  sub_100034960((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
  v32 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v33 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v89, 33, 0);
  v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48);
  if (!v83(v32, 1, v13, v33))
  {
    v34 = type metadata accessor for CodableListeningProperties();
    v35 = swift_allocObject(v34, 24, 7);
    *(_QWORD *)(v35 + 16) = v31;
    v80 = v17;
    v36 = v24;
    v37 = *(_QWORD *)(v32 + 48);
    v38 = v31;
    v39 = v37;
    v24 = v36;
    v17 = v80;
    swift_release(v39);
    *(_QWORD *)(v32 + 48) = v35;
  }
  swift_endAccess(v89);
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0)
    goto LABEL_16;
  sub_10000FEB4(v32, (uint64_t)v12, &qword_1004C20C8);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v83)(v12, 1, v13) == 1)
  {

    sub_10000FE2C((uint64_t)v12, &qword_1004C20C8);
    return;
  }
  sub_100084888((uint64_t)v12, (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
  v40 = v88;
  sub_1000A2258((uint64_t)v24, v88, type metadata accessor for GroupActivitiesManager.Activity);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
  v42 = 1;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v40, 0, 1, v13);
  v44 = *(_QWORD *)(v1 + v84);
  v79 = v1;
  if (v44)
  {
    v45 = swift_retain(v44);
    v46 = v87;
    GroupSession.activity.getter(v45);
    v43 = swift_release(v44);
    v42 = 0;
  }
  else
  {
    v46 = v87;
  }
  v41(v46, v42, 1, v13, v43);
  v47 = (uint64_t)v81;
  v48 = (uint64_t)&v81[*(int *)(v86 + 48)];
  v49 = v88;
  sub_10000FEB4(v88, (uint64_t)v81, &qword_1004C20C8);
  sub_10000FEB4(v46, v48, &qword_1004C20C8);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v83;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v83)(v47, 1, v13) == 1)
  {
    sub_10000FE2C(v46, &qword_1004C20C8);
    sub_10000FE2C(v49, &qword_1004C20C8);
    if (v50(v48, 1, v13) == 1)
    {
      sub_10000FE2C((uint64_t)v81, &qword_1004C20C8);
LABEL_15:
      sub_100034960((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_16:

      return;
    }
    v53 = &qword_1004C2900;
  }
  else
  {
    v51 = v47;
    v52 = v85;
    sub_10000FEB4(v51, v85, &qword_1004C20C8);
    if (v50(v48, 1, v13) == 1)
    {
      v53 = &qword_1004C2900;
    }
    else
    {
      v54 = v48;
      v55 = v82;
      sub_100084888(v54, v82, type metadata accessor for GroupActivitiesManager.Activity);
      v56 = *(_QWORD *)(v52 + 56);
      if (v56)
      {
        v57 = *(_QWORD *)(v55 + 56);
        if (v57)
        {
          v58 = *(void **)(v57 + 16);
          v59 = v55;
          v60 = *(id *)(v56 + 16);
          v61 = v58;
          v62 = objc_msgSend(v60, "identifiers");
          v63 = v24;
          v64 = objc_msgSend(v61, "identifiers");
          LODWORD(v86) = objc_msgSend(v62, "intersectsSet:", v64);

          v24 = v63;
          sub_100034960(v59, type metadata accessor for GroupActivitiesManager.Activity);
          sub_10000FE2C(v87, &qword_1004C20C8);
          sub_10000FE2C(v88, &qword_1004C20C8);
          sub_100034960(v85, type metadata accessor for GroupActivitiesManager.Activity);
          sub_10000FE2C((uint64_t)v81, &qword_1004C20C8);
          if ((v86 & 1) != 0)
            goto LABEL_15;
          goto LABEL_28;
        }
      }
      sub_100034960(v55, type metadata accessor for GroupActivitiesManager.Activity);
      v53 = &qword_1004C20C8;
    }
    sub_10000FE2C(v87, &qword_1004C20C8);
    sub_10000FE2C(v49, &qword_1004C20C8);
    sub_100034960(v52, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_10000FE2C((uint64_t)v81, v53);
LABEL_28:
  v65 = v13;
  v66 = *(_QWORD *)(v79 + v84);
  if (v66)
  {
    sub_1000A2258((uint64_t)v24, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    v67 = swift_retain(v66);
    GroupSession.activity.setter(v20, v67);
    swift_release(v66);
  }
  v68 = v31;
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v69 = type metadata accessor for Logger(0);
  sub_100039D34(v69, (uint64_t)static Logger.groupActivities);
  v70 = sub_1000A2258((uint64_t)v24, (uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter(v71);
  if (os_log_type_enabled(v71, v72))
  {
    v73 = swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    v89[0] = v74;
    *(_DWORD *)v73 = 136446210;
    sub_1000A2258((uint64_t)v17, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    v75 = (char *)String.init<A>(describing:)(v20, v65);
    v77 = v76;
    *(_QWORD *)(v73 + 4) = sub_1000393D0(v75, v76, v89);
    swift_bridgeObjectRelease(v77);
    sub_100034960((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Updating session activity=%{public}s", (uint8_t *)v73, 0xCu);
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1, -1);
    swift_slowDealloc(v73, -1, -1);

  }
  else
  {

    sub_100034960((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_100034960((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
}

void (*sub_1001E5520(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, a1, 33, 0);
  return sub_1001E5568;
}

void sub_1001E5568(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1001E4D5C();
}

void sub_1001E5598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  __n128 v92;
  __n128 v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  __n128 v116;
  id v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  __n128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t KeyPath;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char v183[8];
  id v184;
  uint64_t v185;

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v176 = *(_QWORD *)(v2 - 8);
  v177 = v2;
  __chkstk_darwin(v2);
  v175 = (char *)&v151 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004C2740);
  v179 = *(_QWORD *)(v4 - 8);
  v180 = v4;
  __chkstk_darwin(v4);
  v178 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_1000057B4(&qword_1004C2748);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_1000057B4(&qword_1004C2750);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v172 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1000057B4(&qword_1004C2758);
  v161 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v160 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_1000057B4(&qword_1004C2760);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v162 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1000057B4(&qword_1004C2768);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4((uint64_t *)&unk_1004C2770);
  __chkstk_darwin(v11);
  v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_1000057B4(&qword_1004BFBD0);
  v153 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v15 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_1000057B4(&qword_1004C2780);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_1000057B4(&qword_1004C2788);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000057B4(&qword_1004C20C8);
  __chkstk_darwin(v18);
  v20 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v21 = type metadata accessor for Logger(0);
  sub_100039D34(v21, (uint64_t)static Logger.groupActivities);
  v22 = swift_retain_n(v0, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = (void *)swift_slowAlloc(32, -1);
    v184 = v26;
    *(_DWORD *)v25 = 136446210;
    v185 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    swift_retain(v185);
    v27 = sub_1000057B4(&qword_1004C27E8);
    v28 = (char *)String.init<A>(reflecting:)(&v185, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_1000393D0(v28, v29, (uint64_t *)&v184);
    swift_release_n(v1, 2, v31);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "📲 Receiving a new session=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2, v32);
  }
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v33)
  {
    v34 = swift_retain(v33);
    v182 = v35;
    GroupSession.activity.getter(v34);
    v36 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v20, 0, 1, v36);
    v38 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v184, 33, 0);
    sub_1001F14EC((uint64_t)v20, v38, &qword_1004C20C8);
    swift_endAccess(&v184);
    sub_1001E4D5C();
    sub_10000FE2C((uint64_t)v20, &qword_1004C20C8);
    v39 = sub_1001E5520((uint64_t)&v185);
    v41 = v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v40, 1, v36))
    {
      swift_beginAccess(v1 + 16, v183, 0, 0);
      sub_1000444A8(v1 + 16, (uint64_t)&v184);
      sub_10000FD60((uint64_t)&v184, v41, &qword_1004C1F98);
    }
    v39((uint64_t)&v185, 0);
    v42 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v43 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v44 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v42 = xmmword_1003C6C70;
    *(_BYTE *)(v42 + 16) = 0;
    sub_1001EDA44(v43, v44);
    if (qword_1004B8AF8 != -1)
      swift_once(&qword_1004B8AF8, sub_1000D365C);
    swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &v184, 33, 0);
    v45 = sub_1000057B4((uint64_t *)&unk_1004BCDC0);
    Published.projectedValue.getter(v45);
    swift_endAccess(&v184);
    v46 = sub_10004FFFC((unint64_t *)&unk_1004BFCD8, &qword_1004BFBD0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v47 = sub_1001F1530();
    v48 = v154;
    v49 = v181;
    Publisher<>.removeDuplicates()(v181, v46, v47);
    (*(void (**)(char *, unint64_t))(v153 + 8))(v15, v49);
    v50 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
    v184 = (id)static OS_dispatch_queue.main.getter(v50, v51, v52, v53, v54, v55, v56, v57, v151, v152, v153, v154, v155, v156, v157);
    v58 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
    v152(v13, 1, 1, v58);
    v59 = sub_10004FFFC((unint64_t *)&unk_1004C2798, &qword_1004C2780, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v181 = sub_1001A1FD4();
    v60 = v157;
    v61 = v156;
    Publisher.receive<A>(on:options:)(&v184, v13, v156, v50, v59);
    sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C2770);

    (*(void (**)(char *, uint64_t))(v155 + 8))(v48, v61);
    v62 = swift_allocObject(&unk_10047D758, 24, 7);
    swift_weakInit(v62 + 16, v1);
    v63 = sub_10004FFFC(&qword_1004C27A8, &qword_1004C2788, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v64 = v159;
    v65 = Publisher<>.sink(receiveValue:)(sub_1001F1598, v62, v159, v63);
    v66 = swift_release(v62);
    (*(void (**)(char *, uint64_t, __n128))(v158 + 8))(v60, v64, v66);
    v67 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions;
    v68 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v184, 33, 0);
    AnyCancellable.store(in:)(v67, v68);
    swift_endAccess(&v184);
    v69 = swift_release(v65);
    v70 = v160;
    v71 = GroupSession.$activeParticipants.getter(v69);
    v72 = v50;
    v184 = (id)static OS_dispatch_queue.main.getter(v71, v73, v74, v75, v76, v77, v78, v79, v50, v152, v153, v154, v155, v156, v157);
    v153 = v58;
    v80 = v152;
    v152(v13, 1, 1, v58);
    v81 = sub_10004FFFC(&qword_1004C27B0, &qword_1004C2758, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v82 = v162;
    v83 = v163;
    Publisher.receive<A>(on:options:)(&v184, v13, v163, v72, v81);
    sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C2770);

    (*(void (**)(char *, uint64_t))(v161 + 8))(v70, v83);
    v84 = sub_10004FFFC(&qword_1004C27B8, &qword_1004C2760, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v85 = v166;
    v86 = v165;
    Publisher.map<A>(_:)(sub_1001E7218, 0, v165, &type metadata for Int, v84);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v82, v86);
    v87 = swift_allocObject(&unk_10047D758, 24, 7);
    swift_weakInit(v87 + 16, v1);
    v88 = sub_10004FFFC(&qword_1004C27C0, &qword_1004C2768, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v89 = v168;
    v90 = Publisher<>.sink(receiveValue:)(sub_1001F15A0, v87, v168, v88);
    v91 = swift_release(v87);
    (*(void (**)(char *, uint64_t, __n128))(v167 + 8))(v85, v89, v91);
    v159 = v67;
    v92 = swift_beginAccess(v67, &v184, 33, 0);
    AnyCancellable.store(in:)(v67, v92);
    swift_endAccess(&v184);
    v93 = swift_release(v90);
    v94 = v169;
    v95 = v182;
    v96 = GroupSession.$state.getter(v93);
    v97 = v151;
    v184 = (id)static OS_dispatch_queue.main.getter(v96, v98, v99, v100, v101, v102, v103, v104, v151, v152, v153, v154, v155, v156, v157);
    v80(v13, 1, 1, v58);
    v105 = sub_10004FFFC(&qword_1004C27C8, &qword_1004C2748, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v106 = v172;
    v107 = v171;
    v108 = v97;
    Publisher.receive<A>(on:options:)(&v184, v13, v171, v97, v105);
    sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C2770);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v94, v107);
    v109 = swift_allocObject(&unk_10047D758, 24, 7);
    swift_weakInit(v109 + 16, v1);
    v110 = swift_allocObject(&unk_10047D780, 32, 7);
    *(_QWORD *)(v110 + 16) = v109;
    *(_QWORD *)(v110 + 24) = v95;
    v111 = sub_10004FFFC((unint64_t *)&unk_1004C27D0, &qword_1004C2750, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_retain(v95);
    v112 = v174;
    v113 = Publisher<>.sink(receiveValue:)(sub_1001F15D4, v110, v174, v111);
    v114 = swift_release(v110);
    (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v106, v112, v114);
    v115 = v159;
    v116 = swift_beginAccess(v159, &v184, 33, 0);
    AnyCancellable.store(in:)(v115, v116);
    swift_endAccess(&v184);
    swift_release(v113);
    v117 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v118 = v175;
    NSNotificationCenter.publisher(for:object:)(MPCPlaybackEngineFirstAudioFrameNotification, 0);

    v184 = (id)static OS_dispatch_queue.main.getter(v119, v120, v121, v122, v123, v124, v125, v126, v151, v152, v153, v154, v155, v156, v157);
    v80(v13, 1, 1, v153);
    v127 = sub_100004D8C((unint64_t *)&qword_1004BEE70, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    v129 = v177;
    v128 = v178;
    Publisher.receive<A>(on:options:)(&v184, v13, v177, v108, v127);
    sub_10000FE2C((uint64_t)v13, (uint64_t *)&unk_1004C2770);

    (*(void (**)(char *, uint64_t))(v176 + 8))(v118, v129);
    v130 = swift_allocObject(&unk_10047D758, 24, 7);
    swift_weakInit(v130 + 16, v1);
    v131 = sub_10004FFFC(&qword_1004C27E0, &qword_1004C2740, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v132 = v180;
    v133 = Publisher<>.sink(receiveValue:)(sub_1001F15DC, v130, v180, v131);
    v134 = swift_release(v130);
    (*(void (**)(char *, uint64_t, __n128))(v179 + 8))(v128, v132, v134);
    v135 = swift_beginAccess(v115, &v184, 33, 0);
    AnyCancellable.store(in:)(v115, v135);
    swift_endAccess(&v184);
    swift_release(v182);
    swift_release(v133);
  }
  else
  {
    v136 = type metadata accessor for GroupActivitiesManager.Activity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v20, 1, 1, v136);
    v137 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v184, 33, 0);
    sub_1001F14EC((uint64_t)v20, v137, &qword_1004C20C8);
    swift_endAccess(&v184);
    sub_1001E4D5C();
    sub_10000FE2C((uint64_t)v20, &qword_1004C20C8);
    v138 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v184, 0, 0);
    v139 = *v138;
    v140 = swift_bridgeObjectRetain();
    sub_1001D90D8(v140);
    swift_bridgeObjectRelease(v139);
    v141 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
    swift_release(v141);
    KeyPath = swift_getKeyPath(&unk_1003D2FF0);
    v143 = swift_getKeyPath(&unk_1003D3018);
    static Published.subscript.getter(&v185, v1, KeyPath, v143);
    swift_release(KeyPath);
    swift_release(v143);
    v144 = v185;
    v145 = swift_getKeyPath(&unk_1003D2FF0);
    v146 = swift_getKeyPath(&unk_1003D3018);
    v185 = 0;
    swift_retain(v1);
    static Published.subscript.setter(&v185, v1, v145, v146);
    sub_1001DFA5C(v144);
    v147 = (_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v185, 1, 0);
    *v147 = 0;
    v148 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v149 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v150 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v148 = xmmword_1003C6C70;
    *(_BYTE *)(v148 + 16) = 0;
    sub_1001EDA44(v149, v150);
  }
}

double sub_1001E6510(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _BYTE v25[24];
  _QWORD v26[3];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v20 = *((_QWORD *)a1 + 2);
  v21 = *((_QWORD *)a1 + 1);
  v24 = *(_OWORD *)(a1 + 24);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v18 = *((_QWORD *)a1 + 10);
  v19 = *((_QWORD *)a1 + 9);
  v23 = a1[88];
  v17 = *((_QWORD *)a1 + 12);
  v22 = a1[104];
  v9 = a2 + 16;
  v10 = *((_QWORD *)a1 + 14);
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = Strong;
    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = v14 | v2;
    v16 = 0x10000;
    if (!v4)
      v16 = 0;
    v26[0] = v15 | v16;
    v26[1] = v21;
    v26[2] = v20;
    v27 = v24;
    v28 = v5;
    v29 = v6;
    v30 = v7;
    v31 = v8;
    v32 = v19;
    v33 = v18;
    v34 = v23;
    v35 = v17;
    v36 = v22;
    v37 = v10;
    sub_1001E6638((uint64_t)v26);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1001E6638(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  id v74;
  uint8_t *v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t v86;
  id v87;
  uint8_t *v88;
  uint8_t *v89;
  NSObject *v90;
  os_log_type_t v91;
  id v92;
  uint8_t *v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[15];
  char v135[24];
  uint64_t v136;

  sub_10000FD10(a1, (uint64_t)v134, &qword_1004C27F0);
  v2 = v134[0];
  v3 = v134[4];
  v122 = v134[3];
  v4 = v134[7];
  v6 = v134[9];
  v5 = (void *)v134[10];
  v7 = v134[12];
  v8 = v134[14];
  v9 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v9);
  v111 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = a1;
  sub_10000FD10(a1, (uint64_t)v135, &qword_1004C27F0);
  if (v136)
  {
    v121 = v2 & 1;
    v11 = v122;
  }
  else
  {
    if (qword_1004B8AF8 != -1)
      swift_once(&qword_1004B8AF8, sub_1000D365C);
    v12 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_1003D3080);
    v14 = swift_getKeyPath(&unk_1003D30A8);
    static Published.subscript.getter(&v124, v12, KeyPath, v14);
    swift_release(v14);
    swift_release(KeyPath);
    v121 = v124;
    v11 = v127;
    v3 = v128;
    v4 = v129;
    v6 = v130;
    v5 = v131;
    v7 = v132;
    v8 = v133;
  }
  v120 = v5;
  v15 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001F15E4(v118);
  v16 = v3;
  v17 = sub_1000E63A4(0, v11);
  v18 = sub_1000E63A4(2u, v11);
  v122 = v11;
  swift_bridgeObjectRelease(v11);
  v115 = v16;
  swift_bridgeObjectRelease(v16);
  v116 = v4;
  swift_bridgeObjectRelease(v4);
  v113 = v6;
  swift_bridgeObjectRelease(v6);
  v114 = v7;
  swift_bridgeObjectRelease(v7);
  v117 = v8;
  swift_bridgeObjectRelease(v8);
  v19 = v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  v20 = *(_QWORD *)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
  v21 = *(void **)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
  v22 = *(unsigned __int8 *)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 16);
  LODWORD(v118) = v18;
  if ((v18 & 1) != 0)
    v23 = 256;
  else
    v23 = 0;
  v24 = v23 & 0xFFFFFFFFFFFFFFFELL | v17 & 1;
  if (v21 == (void *)1)
  {
    v25 = v15;
    sub_1001EDA44(v20, (void *)1);
    v26 = v120;
    sub_1001EDA44(v24, v120);
    v27 = v15;
    v28 = v26;
    goto LABEL_23;
  }
  v27 = v15;
  v28 = v120;
  if ((v17 & 1) != ((v20 & 1) == 0) && ((v118 ^ ((v20 & 0x100) == 0)) & 1) != 0)
  {
    if (v21)
    {
      if (!v120)
        goto LABEL_23;
      v110 = sub_10000598C(0, &qword_1004C2690, ICMusicSubscriptionStatus_ptr);
      v29 = v27;
      v109 = v29;
      sub_1001F17E8(v20, v21);
      LOBYTE(v29) = static NSObject.== infix(_:_:)(v21, v29);

      sub_1001EDA44(v20, v21);
      if ((v29 & 1) == 0)
        goto LABEL_23;
    }
    else if (v120)
    {
      goto LABEL_23;
    }
    if (((v121 ^ v22) & 1) == 0)
    {
      if (qword_1004B8DF8 != -1)
        swift_once(&qword_1004B8DF8, sub_1001EC268);
      v30 = type metadata accessor for Logger(0);
      v31 = sub_100039D34(v30, (uint64_t)static Logger.groupActivities);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      v34 = os_log_type_enabled(v32, v33);
      v36 = v116;
      v35 = v117;
      v38 = v113;
      v37 = v114;
      if (v34)
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Eligibility context didn't change.", v39, 2u);
        swift_slowDealloc(v39, -1, -1);

        swift_bridgeObjectRelease(v122);
        swift_bridgeObjectRelease(v115);
        swift_bridgeObjectRelease(v36);
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v35);
        return;
      }
      swift_bridgeObjectRelease(v122);
      swift_bridgeObjectRelease(v115);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v38);

      swift_bridgeObjectRelease(v37);
      v99 = v35;
      goto LABEL_57;
    }
  }
LABEL_23:
  v40 = *(_QWORD *)v19;
  v41 = *(void **)(v19 + 8);
  *(_QWORD *)v19 = v24;
  *(_QWORD *)(v19 + 8) = v28;
  *(_BYTE *)(v19 + 16) = v121;
  v42 = v27;
  sub_1001EDA44(v40, v41);
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v43 = type metadata accessor for Logger(0);
  sub_100039D34(v43, (uint64_t)static Logger.groupActivities);
  v44 = v42;
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter(v45);
  v47 = os_log_type_enabled(v45, v46);
  v112 = v17;
  if (v47)
  {
    v48 = swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v123 = v49;
    *(_DWORD *)v48 = 136446210;
    LOBYTE(v124) = v17 & 1;
    BYTE1(v124) = v118 & 1;
    v50 = v120;
    v125 = v120;
    v126 = v121;
    v51 = v44;
    v52 = v44;
    v53 = (char *)String.init<A>(reflecting:)(&v124, &type metadata for GroupActivitiesManager.EligibilityContext);
    v55 = v54;
    *(_QWORD *)(v48 + 4) = sub_1000393D0(v53, v54, &v123);
    swift_bridgeObjectRelease(v55);

    v44 = v51;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "🛂 Checking eligibility with context=%{public}s", (uint8_t *)v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    v58 = v116;
    v57 = v117;
    v59 = v122;
    if (!v50)
      goto LABEL_30;
  }
  else
  {

    v58 = v116;
    v57 = v117;
    v59 = v122;
    if (!v120)
      goto LABEL_30;
  }
  v56 = objc_msgSend(v44, "capabilities");
  if ((v56 & 1) != 0)
  {
    v78 = type metadata accessor for TaskPriority(0);
    v79 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v111, 1, 1, v78);
    v80 = (_QWORD *)swift_allocObject(&unk_10047D7F8, 40, 7);
    v80[2] = 0;
    v80[3] = 0;
    v81 = v119;
    v80[4] = v119;
    swift_retain(v81);
    v71 = sub_1000E6084(v79, (uint64_t)&unk_1004C2820, (uint64_t)v80);
    swift_bridgeObjectRelease(v59);
    v82 = v115;
LABEL_50:
    swift_bridgeObjectRelease(v82);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);

LABEL_51:
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v57);
    swift_release(v71);
    return;
  }
LABEL_30:
  if ((v112 & 1) == 0)
  {
    v72 = Logger.logObject.getter(v56);
    v73 = static os_log_type_t.default.getter(v72);
    if (os_log_type_enabled(v72, v73))
    {
      v74 = v44;
      v75 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v75 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "🛂 Music services restricted", v75, 2u);
      v76 = v75;
      v44 = v74;
      swift_slowDealloc(v76, -1, -1);
    }

    sub_1001EABE4(0);
    swift_bridgeObjectRelease(v59);
    v77 = v115;
    goto LABEL_45;
  }
  if ((v118 & 1) == 0)
  {
    v83 = Logger.logObject.getter(v56);
    v84 = static os_log_type_t.default.getter(v83);
    v85 = os_log_type_enabled(v83, v84);
    v86 = v115;
    if (v85)
    {
      v87 = v44;
      v88 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v88 = 0;
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "🛂 Apple Music content disabled", v88, 2u);
      v89 = v88;
      v44 = v87;
      swift_slowDealloc(v89, -1, -1);
    }

    sub_1001EABE4(1);
    swift_bridgeObjectRelease(v122);
    v77 = v86;
LABEL_45:
    swift_bridgeObjectRelease(v77);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);

LABEL_46:
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v57);
    return;
  }
  v60 = v115;
  if ((v121 & 1) == 0)
  {
    v90 = Logger.logObject.getter(v56);
    v91 = static os_log_type_t.default.getter(v90);
    if (os_log_type_enabled(v90, v91))
    {
      v92 = v44;
      v93 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v93 = 0;
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "🛂 User is not signed in -> request authentication", v93, 2u);
      v94 = v93;
      v44 = v92;
      swift_slowDealloc(v94, -1, -1);
    }

    v95 = type metadata accessor for TaskPriority(0);
    v96 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v111, 1, 1, v95);
    v97 = (_QWORD *)swift_allocObject(&unk_10047D7A8, 40, 7);
    v97[2] = 0;
    v97[3] = 0;
    v98 = v119;
    v97[4] = v119;
    swift_retain(v98);
    v71 = sub_1000E6084(v96, (uint64_t)&unk_1004C2800, (uint64_t)v97);
    swift_bridgeObjectRelease(v59);
    v82 = v60;
    goto LABEL_50;
  }
  v61 = v120;
  if (v120)
  {
    v62 = v44;
    v63 = objc_msgSend(v62, "capabilities");
    if ((v63 & 1) == 0)
    {
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.default.getter(v64);
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "🛂 User is not a subscriber -> up sell", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      v67 = type metadata accessor for TaskPriority(0);
      v68 = (uint64_t)v111;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v111, 1, 1, v67);
      v69 = (_QWORD *)swift_allocObject(&unk_10047D7D0, 40, 7);
      v69[2] = 0;
      v69[3] = 0;
      v70 = v119;
      v69[4] = v119;
      swift_retain(v70);
      v71 = sub_1000E6084(v68, (uint64_t)&unk_1004C2810, (uint64_t)v69);
      swift_bridgeObjectRelease(v122);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v113);

      goto LABEL_51;
    }

  }
  v100 = v44;
  v32 = Logger.logObject.getter(v100);
  v101 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v101))
  {
    v102 = swift_slowAlloc(12, -1);
    v103 = swift_slowAlloc(32, -1);
    v123 = v103;
    *(_DWORD *)v102 = 136446210;
    LOWORD(v124) = 257;
    v125 = v61;
    v126 = v121;
    v104 = v100;
    v105 = (char *)String.init<A>(reflecting:)(&v124, &type metadata for GroupActivitiesManager.EligibilityContext);
    v107 = v106;
    *(_QWORD *)(v102 + 4) = sub_1000393D0(v105, v106, &v123);
    swift_bridgeObjectRelease(v107);

    _os_log_impl((void *)&_mh_execute_header, v32, v101, "🛂 Unknown prepare case with=%{public}s", (uint8_t *)v102, 0xCu);
    swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v103, -1, -1);
    swift_slowDealloc(v102, -1, -1);

    swift_bridgeObjectRelease(v122);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);
    goto LABEL_46;
  }
  swift_bridgeObjectRelease(v122);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v113);

  swift_bridgeObjectRelease(v114);
  v99 = v57;
LABEL_57:
  swift_bridgeObjectRelease(v99);

}

uint64_t sub_1001E7218@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

double sub_1001E7228(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_1003D2FF0);
    v8 = swift_getKeyPath(&unk_1003D3018);
    static Published.subscript.getter(&v12, v6, KeyPath, v8);
    swift_release(v8);
    swift_release(KeyPath);
    v9 = v12;
    v10 = swift_getKeyPath(&unk_1003D2FF0);
    v11 = swift_getKeyPath(&unk_1003D3018);
    v12 = v2;
    swift_retain(v6);
    static Published.subscript.setter(&v12, v6, v10, v11);
    sub_1001DFA5C(v9);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001E731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  int v47;
  __n128 v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  const char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint8_t *v59;
  os_signpost_id_t v60;
  void (*v61)(char *, uint64_t);
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  char v81[24];
  char v82[24];
  _OWORD v83[7];
  uint64_t v84;

  v70 = type metadata accessor for OSSignpostError(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSSignpostID(0);
  v72 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v71 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v75 = (char *)&v67 - v10;
  v11 = sub_1000057B4(&qword_1004C1F58);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v67 - v19;
  v76 = a2 + 16;
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v21 = type metadata accessor for Logger(0);
  sub_100039D34(v21, (uint64_t)static Logger.groupActivities);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v77 = a1;
  v23 = v22(v20, a1, v11);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  v26 = os_log_type_enabled(v24, v25);
  v73 = v7;
  if (v26)
  {
    v27 = swift_slowAlloc(12, -1);
    v74 = a3;
    v28 = v27;
    v29 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v83[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v22(v18, (uint64_t)v20, v11);
    v30 = (char *)String.init<A>(reflecting:)(v18, v11);
    v32 = v31;
    *(_QWORD *)(v28 + 4) = sub_1000393D0(v30, v31, (uint64_t *)v83);
    swift_bridgeObjectRelease(v32);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "📥 Session update with state=%{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v33 = v28;
    a3 = v74;
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }

  v34 = v76;
  swift_beginAccess(v76, v82, 0, 0);
  result = swift_weakLoadStrong(v34);
  v36 = v77;
  if (result)
  {
    v37 = result;
    v22((char *)v15, v77, v11);
    v38 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11);
    if (v38 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v39 = *v15;
      sub_1001E79E4(v39);
      swift_errorRelease(v39);
    }
    else if (v38 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v84 = 0;
      memset(v83, 0, sizeof(v83));
      sub_1001E6638((uint64_t)v83);
    }
    else
    {
      if (v38 != enum case for GroupSession.State.joined<A>(_:))
      {
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001003AF120, "MusicCore/GroupActivitiesManager.swift", 38, 2, 669, 0);
        __break(1u);
        return result;
      }
      v40 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState;
      v41 = *(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState);
      v42 = v75;
      if (v41)
      {
        v43 = qword_1004B9408;
        swift_retain(*(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState));
        if (v43 != -1)
          swift_once(&qword_1004B9408, sub_100217B48);
        v44 = type metadata accessor for OSSignposter(0);
        sub_100039D34(v44, (uint64_t)static OSSignposter.sharePlay);
        v45 = OSSignposter.logHandle.getter();
        v46 = OSSignpostIntervalState.signpostID.getter();
        v47 = static os_signpost_type_t.end.getter(v46);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          v74 = a3;
          v48 = swift_retain(v41);
          v49 = v68;
          checkForErrorAndConsumeState(state:)(v48);
          v50 = swift_release(v41);
          v51 = v69;
          v52 = v70;
          v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v69 + 88))(v49, v70, v50);
          LODWORD(v76) = v47;
          if (v53 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v54 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
            v54 = "";
          }
          v55 = v72;
          v56 = v71;
          v57 = v42;
          v58 = v73;
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v57, v73);
          v59 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v59 = 0;
          v60 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v45, (os_signpost_type_t)v76, v60, "JoinSession", v54, v59, 2u);
          swift_slowDealloc(v59, -1, -1);

          v61 = *(void (**)(char *, uint64_t))(v55 + 8);
          v61(v75, v58);
          v62 = swift_release(v41);
          ((void (*)(char *, uint64_t, __n128))v61)(v56, v58, v62);
          a3 = v74;
          v36 = v77;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v73);
          swift_release(v41);
        }
        v63 = *(_QWORD *)(v37 + v40);
        *(_QWORD *)(v37 + v40) = 0;
        swift_release(v63);
      }
    }
    swift_beginAccess(v37 + 16, v81, 0, 0);
    sub_1000444A8(v37 + 16, (uint64_t)v78);
    v64 = v79;
    v65 = v80;
    sub_1000096A0(v78, v79);
    v66 = GroupSession.isLocallyInitiated.getter();
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 48))(a3, v36, v66 & 1, v64, v65);
    swift_release(v37);
    return sub_10000970C(v78);
  }
  return result;
}

double sub_1001E79E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;

  v2 = v1;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v7 = type metadata accessor for Logger(0);
  sub_100039D34(v7, (uint64_t)static Logger.groupActivities);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v23 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_getErrorValue(a1, v22, v21);
    v13 = (char *)Error.localizedDescription.getter(v21[1], v21[2]);
    v15 = v14;
    *(_QWORD *)(v11 + 4) = sub_1000393D0(v13, v14, &v23);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Session invalidated for reason=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject(&unk_10047D8D8, 40, 7);
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v2;
  swift_retain(v2);
  v18 = sub_1000E6084((uint64_t)v6, (uint64_t)&unk_1004C28F0, (uint64_t)v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1001E7C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t Strong;
  __n128 v20;
  uint64_t v21;
  _QWORD v24[2];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v3 = sub_1000057B4(&qword_1004BCBD0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  v12 = Notification.userInfo.getter(v8);
  if (!v12)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_10:
    sub_10000FE2C((uint64_t)&v26, &qword_1004BE030);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_11;
  }
  v13 = v12;
  v24[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlaybackEngineFirstAudioFrameDateKey);
  v24[1] = v14;
  AnyHashable.init<A>(_:)(v25, v24, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_100027770((uint64_t)v25), (v16 & 1) != 0))
  {
    sub_10000990C(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  sub_10000FC6C((uint64_t)v25);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_10;
  v17 = swift_dynamicCast(v5, &v26, (char *)&type metadata for Any + 8, v6, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v17 ^ 1u, 1, v6);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if ((_DWORD)v18 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    goto LABEL_12;
  }
LABEL_11:
  Date.init()(v18);
  sub_10000FE2C((uint64_t)v5, &qword_1004BCBD0);
LABEL_12:
  swift_beginAccess(v11, v25, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v21 = Strong;
    sub_1001E7E4C((uint64_t)v10);
    v20 = swift_release(v21);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v20);
}

void sub_1001E7E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  char *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  NSString v37;
  NSString v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t v44;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  _BYTE v50[24];
  char v51[24];

  v45[1] = a1;
  v2 = sub_1000057B4(&qword_1004BCBD0);
  v3 = __chkstk_darwin(v2);
  v45[0] = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v45 - v5;
  v7 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v46 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000057B4(&qword_1004BD3B0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v45 - v13;
  v15 = type metadata accessor for Signpost(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v51, 0, 0);
  sub_10000FEB4(v19, (uint64_t)v14, &qword_1004BD3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10000FE2C((uint64_t)v14, &qword_1004BD3B0);
  }
  else
  {
    sub_100084888((uint64_t)v14, (uint64_t)v18, type metadata accessor for Signpost);
    Signpost.end(dso:)((uint64_t)&_mh_execute_header);
    sub_100034960((uint64_t)v18, type metadata accessor for Signpost);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    swift_beginAccess(v19, v50, 33, 0);
    sub_10000FD60((uint64_t)v12, v19, &qword_1004BD3B0);
    swift_endAccess(v50);
  }
  v20 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, v50, 0, 0);
  sub_10000FEB4(v20, (uint64_t)v6, &qword_1004BCBD0);
  v22 = v47;
  v21 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v6, 1, v48) != 1)
  {
    v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v46, v6, v21);
    v29 = Date.timeIntervalSince(_:)(v28);
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100039D34(v30, (uint64_t)static Logger.groupActivities);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      *(double *)(v34 + 4) = v29;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "endMeasuringInitiationTime: %f", (uint8_t *)v34, 0xCu);
      swift_slowDealloc(v34, -1, -1);
    }

    if (v29 <= 10.0)
      goto LABEL_19;
    v35 = (void *)objc_opt_self(MSVAutoBugCapture);
    v36 = sub_1001E8F7C();
    v37 = String._bridgeToObjectiveC()();
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          v40 = v39;
          v49[0] = (uint64_t)v29;
          dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v42 = v41;
          v43 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v42);
          objc_msgSend(v35, "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:", v36, v37, v38, v40, v43, 0, 0);

LABEL_19:
          (*(void (**)(char *, uint64_t))(v22 + 8))(v46, v21);
          v44 = v45[0];
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v22 + 56))(v45[0], 1, 1, v21);
          swift_beginAccess(v20, v49, 33, 0);
          sub_10000FD60(v44, v20, &qword_1004BCBD0);
          swift_endAccess(v49);
          return;
        }
LABEL_22:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_10000FE2C((uint64_t)v6, &qword_1004BCBD0);
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100039D34(v23, (uint64_t)static Logger.groupActivities);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Attempting to endMeasuringInitiationTime but there was no begin time.", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

}

uint64_t GroupActivitiesManager.__allocating_init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  GroupActivitiesManager.init(coordinator:)(a1);
  return v3;
}

uint64_t GroupActivitiesManager.init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  char *v42;
  _QWORD *v43;
  _OWORD v44[3];

  v2 = v1;
  v43 = (_QWORD *)a1;
  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v3);
  v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000057B4(&qword_1004C2038);
  v5 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004BF240);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4((uint64_t *)&unk_1004C1BA0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = xmmword_1003C6C70;
  *(_OWORD *)(v2 + 56) = xmmword_1003C6C70;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  v16 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  *(_QWORD *)&v44[0] = 0;
  Published.init(initialValue:)(v44, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v17 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  LOBYTE(v44[0]) = 0;
  Published.init(initialValue:)(v44, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v8);
  v18 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  memset(v44, 0, sizeof(v44));
  v19 = sub_1000057B4(&qword_1004C2028);
  Published.init(initialValue:)(v44, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v40);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount) = 0;
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_artworkCachingReference;
  v21 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v22 = swift_allocObject(v21, 32, 7);
  *(_QWORD *)(v22 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v22 + 24) = 0x80000001003A71C0;
  v23 = (void *)objc_opt_self(MPArtworkCatalog);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v24, v22);

  *(_QWORD *)(v2 + v20) = v22;
  v25 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionStateObserver;
  type metadata accessor for GroupStateObserver(0);
  *(_QWORD *)(v2 + v25) = GroupStateObserver.__allocating_init()();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress) = 0;
  v26 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v27 = type metadata accessor for GroupActivitiesManager.Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sharePlayTogetherItemProvider) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = 0;
  v28 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  v29 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain) = 0;
  v30 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  v31 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  *(_OWORD *)v32 = v41;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = v43;
  sub_1000444A8((uint64_t)v43, v2 + 16);
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v42, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject(&unk_10047D4B8, 40, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v2;
  swift_retain(v2);
  v37 = sub_1000E6084(v35, (uint64_t)&unk_1004C20C0, (uint64_t)v36);
  swift_release(v37);
  sub_10000970C(v33);
  return v2;
}

uint64_t sub_1001E88BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C26CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return sub_1001E8904();
}

uint64_t sub_1001E8904()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[5] = v0;
  v2 = sub_1000057B4(&qword_1004C26D0);
  v1[6] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004C26D8);
  v1[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[10] = v5;
  v1[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[12] = v6;
  v1[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[14] = v8;
  v1[15] = v9;
  return swift_task_switch(sub_1001E89CC, v8, v9);
}

uint64_t sub_1001E89CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.groupActivities);
  v0[16] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🚦 Initiating group session observer", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[7];
  v6 = v0[8];
  v8 = v0[6];

  v9 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v10 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  static GroupActivity.sessions()(v9, v10);
  GroupSession.Sessions.makeAsyncIterator()(v8);
  v11.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v12 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v0[17] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
  v0[18] = v12;
  v0[19] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v0[20] = static MainActor.shared.getter(v11);
  v13 = sub_10004FFFC(&qword_1004C26E0, &qword_1004C26D8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[21] = v14;
  *v14 = v0;
  v14[1] = sub_1001E8B9C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[9], v13);
}

uint64_t sub_1001E8B9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001E8F1C;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001E8C60;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_1001E8C60()
{
  _QWORD *v0;

  swift_release(v0[20]);
  v0[23] = v0[2];
  return swift_task_switch(sub_1001E8CA0, v0[14], v0[15]);
}

uint64_t sub_1001E8CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    if (*(_BYTE *)(v2 + *(_QWORD *)(v0 + 136)) == 1)
    {
      v3 = swift_retain_n(*(_QWORD *)(v0 + 184), 2);
      v4 = Logger.logObject.getter(v3);
      v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = swift_slowAlloc(12, -1);
        v7 = swift_slowAlloc(32, -1);
        v26 = v7;
        *(_DWORD *)v6 = 136446210;
        *(_QWORD *)(v0 + 32) = v1;
        swift_retain(v1);
        v8 = sub_1000057B4(&qword_1004C26E8);
        v9 = (char *)String.init<A>(reflecting:)(v0 + 32, v8);
        *(_QWORD *)(v6 + 4) = sub_1000393D0(v9, v10, &v26);
        swift_release_n(v1, 2, v11);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "leaveCommand in progress, setting pendingSession=%{public}s", (uint8_t *)v6, 0xCu);
        swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v7, -1, -1);
        swift_slowDealloc(v6, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2, v20);
      }
      v21 = *(_QWORD *)(v0 + 152);
      v22 = *(_QWORD *)(v0 + 40);
      v23 = *(_QWORD *)(v22 + v21);
      *(_QWORD *)(v22 + v21) = *(_QWORD *)(v0 + 184);
      v19 = swift_release(v23);
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 144);
      v17 = *(_QWORD *)(v2 + v16);
      *(_QWORD *)(v2 + v16) = v1;
      swift_retain_n(v1, 2);
      swift_release(v17);
      sub_1001E5598();
      swift_release_n(v1, 2, v18);
    }
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v19);
    v24 = sub_10004FFFC(&qword_1004C26E0, &qword_1004C26D8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
    v25 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 168) = v25;
    *v25 = v0;
    v25[1] = sub_1001E8B9C;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 72), v24);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v13, *(_QWORD *)(v0 + 72));
    swift_release(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001E8F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 176);
  v1 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

id sub_1001E8F7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  }
  else
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1001E8FE8(unsigned __int8 *a1, void **a2)
{
  void *v2;
  char v3;
  int v4;
  int v5;
  int v6;

  v2 = (void *)*((_QWORD *)a1 + 1);
  v3 = a1[16];
  if (a1[1])
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 | *a1;
  if (*((_BYTE *)a2 + 1))
    v6 = 256;
  else
    v6 = 0;
  return sub_1001ED378(v5, v2, v3, v6 | *(unsigned __int8 *)a2, a2[1], *((_BYTE *)a2 + 16));
}

uint64_t sub_1001E902C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C282C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return sub_1001E9074();
}

uint64_t sub_1001E9074()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1[19] = v0;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v1[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000057B4((uint64_t *)&unk_1004C2770);
  v1[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004BFD70);
  v1[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[23] = v5;
  v1[24] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004BFD78);
  v1[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[26] = v7;
  v1[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostError(0);
  v1[28] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[29] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v10);
  v1[31] = swift_task_alloc(v10);
  v11 = type metadata accessor for OSSignpostID(0);
  v1[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[33] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[34] = swift_task_alloc(v13);
  v1[35] = swift_task_alloc(v13);
  v1[36] = swift_task_alloc(v13);
  v1[37] = swift_task_alloc(v13);
  v1[38] = swift_task_alloc(v13);
  v14 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v1[39] = v14;
  v1[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004C1F58);
  v1[41] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[42] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[43] = swift_task_alloc(v17);
  v1[44] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v1[45] = v18;
  v1[46] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v1[47] = v20;
  v1[48] = v21;
  return swift_task_switch(sub_1001E9278, v20, v21);
}

uint64_t sub_1001E9278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  __n128 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  NSObject *v87;
  os_signpost_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint8_t *v93;
  os_signpost_id_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t);
  uint64_t v115;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  *(_QWORD *)(v0 + 392) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 400) = v3;
  if (!v3)
  {
    v38 = *(_QWORD *)(v0 + 368);
LABEL_23:
    swift_release(v38);
    v51 = *(_QWORD *)(v0 + 344);
    v52 = *(_QWORD *)(v0 + 320);
    v54 = *(_QWORD *)(v0 + 296);
    v53 = *(_QWORD *)(v0 + 304);
    v56 = *(_QWORD *)(v0 + 280);
    v55 = *(_QWORD *)(v0 + 288);
    v57 = *(_QWORD *)(v0 + 272);
    v59 = *(_QWORD *)(v0 + 240);
    v58 = *(_QWORD *)(v0 + 248);
    v109 = *(_QWORD *)(v0 + 216);
    v110 = *(_QWORD *)(v0 + 192);
    v111 = *(_QWORD *)(v0 + 168);
    v113 = *(_QWORD *)(v0 + 160);
    swift_task_dealloc(*(_QWORD *)(v0 + 352));
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v113);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 312);
  v9 = swift_retain(v3);
  GroupSession.state.getter(v9);
  *(_DWORD *)(v0 + 536) = enum case for GroupSession.State.waiting<A>(_:);
  v10 = *(void (**)(uint64_t))(v7 + 104);
  *(_QWORD *)(v0 + 408) = v10;
  v10(v5);
  v11 = sub_100004D8C(&qword_1004C1F60, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *(_QWORD *)(v0 + 416) = v11;
  v12 = static GroupSession.State.== infix(_:_:)(v4, v5, v8, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 424) = v13;
  v13(v5, v6);
  v13(v4, v6);
  if ((v12 & 1) == 0)
  {
    v39 = *(_QWORD *)(v0 + 368);
    swift_release(v3);
    v38 = v39;
    goto LABEL_23;
  }
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v112 = v3;
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100039D34(v14, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 432) = v15;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Attempting to join", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }
  v19 = *(_QWORD *)(v0 + 152);

  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v21 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 543), v19, KeyPath, v21);
  swift_release(KeyPath);
  swift_release(v21);
  LOBYTE(v21) = *(_BYTE *)(v0 + 543);
  v22 = swift_getKeyPath(&unk_1003D2FA8);
  v23 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 550) = 1;
  swift_retain(v19);
  static Published.subscript.setter(v0 + 550, v19, v22, v23);
  sub_1001DFE70(v21);
  v24 = *(_QWORD *)(v1 + v2);
  if (!v24)
    goto LABEL_17;
  v25 = *(_QWORD *)(v0 + 320);
  v26 = swift_retain(v24);
  GroupSession.activity.getter(v26);
  swift_release(v24);
  v27 = *(_QWORD *)(v25 + 48);
  v28 = *(_QWORD *)(v0 + 320);
  if (!v27)
  {
    sub_100034960(*(_QWORD *)(v0 + 320), type metadata accessor for GroupActivitiesManager.Activity);
LABEL_17:
    swift_release(*(_QWORD *)(v0 + 368));
    if (qword_1004B8E18 != -1)
      swift_once(&qword_1004B8E18, sub_1001F5D54);
    v40 = sub_100039D34(v14, (uint64_t)static Logger.sharedListening);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Session properties missing in activity", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }
    v44 = *(_QWORD *)(v0 + 152);

    v45 = swift_getKeyPath(&unk_1003D2FA8);
    v46 = swift_getKeyPath(&unk_1003D2FD0);
    static Published.subscript.getter((_QWORD *)(v0 + 549), v44, v45, v46);
    swift_release(v45);
    swift_release(v46);
    v47 = *(_BYTE *)(v0 + 549);
    v48 = swift_getKeyPath(&unk_1003D2FA8);
    v49 = swift_getKeyPath(&unk_1003D2FD0);
    *(_BYTE *)(v0 + 548) = 0;
    swift_retain(v44);
    static Published.subscript.setter(v0 + 548, v44, v48, v49);
    v50 = v47;
LABEL_22:
    sub_1001DFE70(v50);
    v38 = v112;
    goto LABEL_23;
  }
  v29 = *(void **)(v27 + 16);
  *(_QWORD *)(v0 + 440) = v29;
  v30 = v29;
  sub_100034960(v28, type metadata accessor for GroupActivitiesManager.Activity);
  v31 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v32 = swift_allocObject(&unk_10047D820, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_1001F17F8;
  *(_QWORD *)(v32 + 24) = v112;
  *(_QWORD *)(v0 + 48) = sub_10001122C;
  *(_QWORD *)(v0 + 56) = v32;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_10001D2BC;
  *(_QWORD *)(v0 + 40) = &unk_10047D838;
  v33 = _Block_copy((const void *)(v0 + 16));
  v34 = objc_msgSend(v31, "initWithBlock:", v33, swift_retain(v32).n128_f64[0]);
  *(_QWORD *)(v0 + 448) = v34;
  _Block_release(v33);
  v35 = swift_release(*(_QWORD *)(v0 + 56));
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v32, "", 0, 0, 0, 1, v35);
  swift_release(v32);
  if ((v31 & 1) == 0)
  {
    v36 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "sharedSessionIntentWithProperties:identity:", v30, v34);
    *(_QWORD *)(v0 + 456) = v36;
    if (v36)
    {
      v33 = v36;
      if ((GroupSession.isLocallyInitiated.getter() & 1) != 0 && (GroupSession.isFirstJoin.getter() & 1) != 0)
        v37 = 20;
      else
        v37 = 10;
      objc_msgSend(v33, "setActionAfterQueueLoad:", v37);
      swift_retain(v112);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = swift_slowAlloc(24, -1);
        v65 = swift_slowAlloc(32, -1);
        v115 = v65;
        *(_DWORD *)v64 = 67240706;
        *(_DWORD *)(v64 + 4) = GroupSession.isLocallyInitiated.getter() & 1;
        *(_WORD *)(v64 + 8) = 1026;
        *(_DWORD *)(v64 + 10) = GroupSession.isFirstJoin.getter() & 1;
        v66 = swift_release(v112);
        *(_WORD *)(v64 + 14) = 2082;
        v67 = (id)MPNSStringFromQueueLoadAction(v37, v66);
        if (v67)
        {
          v68 = v67;
          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
          v71 = v70;

        }
        else
        {
          v69 = 0;
          v71 = 0;
        }
        v81 = (char *)Optional<A>.description.getter(v69, v71);
        v83 = v82;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v64 + 16) = sub_1000393D0(v81, v83, &v115);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Will join session isLocallyInitiated=%{BOOL,public}d\n/ isFirstJoin=%{BOOL,public}d.\n-> actionAfterQueueLoad=%{public}s", (uint8_t *)v64, 0x18u);
        swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1, -1);
        swift_slowDealloc(v64, -1, -1);

      }
      else
      {

        swift_release(v112);
      }
      if (qword_1004B9408 == -1)
        goto LABEL_35;
      goto LABEL_40;
    }
    swift_release(*(_QWORD *)(v0 + 368));
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v75 = 0;
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Failed to retrieve shared playback intent", v75, 2u);
      swift_slowDealloc(v75, -1, -1);
    }
    v76 = *(_QWORD *)(v0 + 152);

    v77 = swift_getKeyPath(&unk_1003D2FA8);
    v78 = swift_getKeyPath(&unk_1003D2FD0);
    static Published.subscript.getter((_QWORD *)(v0 + 541), v76, v77, v78);
    swift_release(v77);
    swift_release(v78);
    LOBYTE(v77) = *(_BYTE *)(v0 + 541);
    v79 = swift_getKeyPath(&unk_1003D2FA8);
    v80 = swift_getKeyPath(&unk_1003D2FD0);
    *(_BYTE *)(v0 + 540) = 0;
    swift_retain(v76);
    static Published.subscript.setter(v0 + 540, v76, v79, v80);
    v50 = v77;
    goto LABEL_22;
  }
  __break(1u);
LABEL_40:
  swift_once(&qword_1004B9408, sub_100217B48);
LABEL_35:
  v84 = type metadata accessor for OSSignposter(0);
  v85 = sub_100039D34(v84, (uint64_t)static OSSignposter.sharePlay);
  *(_QWORD *)(v0 + 464) = v85;
  static OSSignpostID.exclusive.getter(v85);
  v87 = OSSignposter.logHandle.getter(v86);
  v88 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v89 = *(_QWORD *)(v0 + 296);
    v90 = *(_QWORD *)(v0 + 256);
    v91 = *(_QWORD *)(v0 + 264);
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16);
    v92(v89, *(_QWORD *)(v0 + 304), v90);
    v93 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v93 = 0;
    v94 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, v88, v94, "AddIntent", "", v93, 2u);
    swift_slowDealloc(v93, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
  }
  else
  {
    v95 = *(_QWORD *)(v0 + 264);

    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
  }
  *(_QWORD *)(v0 + 472) = v92;
  v96 = *(_QWORD *)(v0 + 296);
  v97 = *(_QWORD *)(v0 + 304);
  v98 = *(_QWORD *)(v0 + 256);
  v99 = *(_QWORD *)(v0 + 264);
  v100 = *(_QWORD **)(v0 + 152);
  v92(v96, v97, v98);
  v101 = type metadata accessor for OSSignpostIntervalState(0);
  *(_QWORD *)(v0 + 480) = v101;
  swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
  *(_QWORD *)(v0 + 488) = OSSignpostIntervalState.init(id:isOpen:)(v96, 1);
  v102 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  *(_QWORD *)(v0 + 496) = v102;
  v102(v97, v98);
  swift_beginAccess(v100 + 2, v0 + 112, 0, 0);
  v103 = v100[5];
  v104 = v100[6];
  sub_1000096A0(v100 + 2, v103);
  v105 = *(_QWORD *)(v103 - 8);
  v106 = swift_task_alloc((*(_QWORD *)(v105 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 504) = v106;
  (*(void (**)(void))(v105 + 16))();
  v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 56))(v103, v104);
  *(_QWORD *)(v0 + 512) = v107;
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v106, v103);
  v114 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1004C29D0 + dword_1004C29D0);
  v108 = (_QWORD *)swift_task_alloc(unk_1004C29D4);
  *(_QWORD *)(v0 + 520) = v108;
  *v108 = v0;
  v108[1] = sub_1001E9D7C;
  return v114((uint64_t)v33, v107);
}

uint64_t sub_1001E9D7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 520);
  *(_QWORD *)(*v1 + 528) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_1001EA840;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 504);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_1001E9DF0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001E9DF0()
{
  uint64_t v0;
  __n128 v1;
  NSObject *v2;
  uint64_t v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  const char *v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __n128 v66;
  __n128 v67;
  NSObject *v68;
  os_signpost_type_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  os_signpost_id_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t KeyPath;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v1 = swift_release(*(_QWORD *)(v0 + 368));
  v2 = OSSignposter.logHandle.getter(v1);
  v3 = OSSignpostIntervalState.signpostID.getter();
  v4 = static os_signpost_type_t.end.getter(v3);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 488);
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v9 = swift_retain(v5);
    checkForErrorAndConsumeState(state:)(v9);
    v10 = swift_release(v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v8 + 88))(v6, v7, v10) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v11 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
      v11 = "";
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v12 = (_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v14, v15);
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v4, v17, "AddIntent", v11, v16, 2u);
    swift_slowDealloc(v16, -1, -1);

    v13(v14, v15);
  }
  else
  {
    v12 = (_QWORD *)(v0 + 288);

  }
  v18 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 392);
  v20 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v12, *(_QWORD *)(v0 + 256));
  swift_release(v18);
  v21 = *(_QWORD *)(v20 + v19);
  if (v21)
  {
    v22 = *(_QWORD *)(v0 + 416);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v25 = *(unsigned int *)(v0 + 536);
    v27 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 352);
    v28 = *(_QWORD *)(v0 + 328);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = swift_retain(v21);
    v144 = v31;
    GroupSession.state.getter(v30);
    v24(v27, v25, v28);
    v32 = static GroupSession.State.== infix(_:_:)(v26, v27, v29, v22);
    v23(v27, v28);
    v23(v26, v28);
    if ((v32 & 1) != 0)
    {
      v33 = swift_retain_n(v144, 2);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v146 = v37;
        *(_DWORD *)v36 = 136446210;
        *(_QWORD *)(v0 + 136) = v144;
        v38 = sub_1000057B4(&qword_1004C26E8);
        v39 = sub_10004FFFC((unint64_t *)&unk_1004C28B8, &qword_1004C26E8, (uint64_t)&protocol conformance descriptor for GroupSession<A>);
        v40 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v38, v39);
        *(_QWORD *)(v36 + 4) = sub_1000393D0(v40, v41, &v146);
        swift_release_n(v144, 2, v42);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "🤝 Joining shared session=%{public}s", (uint8_t *)v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

      }
      else
      {

        v43 = swift_release_n(v144, 2, v66);
      }
      static OSSignpostID.exclusive.getter(v43);
      v68 = OSSignposter.logHandle.getter(v67);
      v69 = static os_signpost_type_t.begin.getter();
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v70 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
        v71 = *(_QWORD *)(v0 + 296);
        v72 = *(_QWORD *)(v0 + 256);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 472))(v71, *(_QWORD *)(v0 + 272), v72);
        v73 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v73 = 0;
        v74 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v68, v69, v74, "JoinSession", "", v73, 2u);
        swift_slowDealloc(v73, -1, -1);

        v70(v71, v72);
      }
      else
      {

      }
      v75 = v0 + 547;
      v76 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
      v77 = *(_QWORD *)(v0 + 480);
      v78 = *(_QWORD *)(v0 + 392);
      v79 = *(_QWORD *)(v0 + 296);
      v80 = *(_QWORD *)(v0 + 272);
      v81 = *(_QWORD *)(v0 + 256);
      v82 = *(_QWORD *)(v0 + 152);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472))(v79, v80, v81);
      swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
      v83 = OSSignpostIntervalState.init(id:isOpen:)(v79, 1);
      v76(v80, v81);
      v84 = *(_QWORD *)(v82 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState);
      *(_QWORD *)(v82 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = v83;
      swift_release(v84);
      v85 = *(_QWORD *)(v82 + v78);
      if (v85)
      {
        swift_retain(*(_QWORD *)(v82 + v78));
        GroupSession.join()();
        swift_release(v85);
      }
      v86 = *(_QWORD **)(v0 + 152);
      v87 = v86[5];
      v88 = v86[6];
      v89 = sub_1000096A0(v86 + 2, v87);
      v90 = *(_QWORD *)(v87 - 8);
      v91 = swift_task_alloc((*(_QWORD *)(v90 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v90 + 16))(v91, v89, v87);
      v92 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v88 + 56))(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v91, v87);
      if (v92)
      {
        v93 = &v92[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
        swift_beginAccess(&v92[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v0 + 88, 0, 0);
        v94 = *(_QWORD *)v93;
        if (*(_QWORD *)v93)
        {
          v136 = *(void **)(v0 + 440);
          v137 = *(void **)(v0 + 448);
          v95 = *(_QWORD *)(v0 + 216);
          v138 = *(_QWORD *)(v0 + 208);
          v140 = *(void **)(v0 + 456);
          v96 = *(_QWORD *)(v0 + 192);
          v97 = *(_QWORD *)(v0 + 176);
          v133 = *(_QWORD *)(v0 + 184);
          v98 = *(_QWORD *)(v0 + 168);
          v134 = *(_QWORD *)(v0 + 152);
          v135 = *(_QWORD *)(v0 + 200);
          swift_retain(v94);

          swift_beginAccess(v94 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v0 + 64, 33, 0);
          v99 = sub_1000057B4((uint64_t *)&unk_1004BF850);
          Published.projectedValue.getter(v99);
          swift_endAccess(v0 + 64);
          swift_release(v94);
          v100 = sub_10000598C(0, (unint64_t *)&qword_1004BD060, OS_dispatch_queue_ptr);
          *(_QWORD *)(v0 + 144) = static OS_dispatch_queue.main.getter(v100, v101, v102, v103, v104, v105, v106, v107);
          v108 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v98, 1, 1, v108);
          v109 = sub_10004FFFC((unint64_t *)&qword_1004BF4F0, &qword_1004BFD70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
          sub_1001A1FD4();
          Publisher.receive<A>(on:options:)(v0 + 144, v98, v97, v100, v109);
          v110 = v98;
          v75 = v0 + 547;
          sub_10000FE2C(v110, (uint64_t *)&unk_1004C2770);

          (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v96, v97);
          swift_task_dealloc(v91);
          v111 = swift_allocObject(&unk_10047D758, 24, 7);
          swift_weakInit(v111 + 16, v134);
          v112 = sub_10004FFFC(&qword_1004BFDA0, &qword_1004BFD78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v113 = Publisher<>.sink(receiveValue:)(sub_1001F18F0, v111, v135, v112);
          swift_release(v144);
          swift_release(v111);

          (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v95, v135);
LABEL_25:
          v49 = *(_QWORD *)(v0 + 400);
          v116 = *(_QWORD *)(v0 + 152);
          v117 = *(_QWORD *)(v116 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription);
          *(_QWORD *)(v116 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = v113;
          swift_release(v117);
          KeyPath = swift_getKeyPath(&unk_1003D2FA8);
          v119 = swift_getKeyPath(&unk_1003D2FD0);
          static Published.subscript.getter((_QWORD *)(v0 + 546), v116, KeyPath, v119);
          swift_release(KeyPath);
          swift_release(v119);
          v120 = *(_BYTE *)(v0 + 546);
          v121 = swift_getKeyPath(&unk_1003D2FA8);
          v122 = swift_getKeyPath(&unk_1003D2FD0);
          *(_BYTE *)(v0 + 547) = 0;
          swift_retain(v116);
          static Published.subscript.setter(v75, v116, v121, v122);
          v65 = v120;
          goto LABEL_26;
        }

      }
      v114 = *(void **)(v0 + 448);
      v115 = *(void **)(v0 + 456);

      swift_release(v144);
      swift_task_dealloc(v91);
      v113 = 0;
      goto LABEL_25;
    }
    v45 = *(_QWORD *)(v0 + 392);
    v46 = *(_QWORD *)(v0 + 152);
    swift_release(v144);
    v44 = *(_QWORD *)(v46 + v45);
  }
  else
  {
    v44 = 0;
  }
  v47 = *(void **)(v0 + 448);
  v142 = *(void **)(v0 + 456);
  v48 = *(void **)(v0 + 440);
  v49 = *(_QWORD *)(v0 + 400);
  v50 = *(_QWORD *)(v0 + 152);
  v51 = *(_QWORD *)(v0 + 160);
  v52 = sub_1001ED7EC();
  v53 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v52, 0, 0);
  *(_QWORD *)v54 = v44;
  *(_BYTE *)(v54 + 8) = 1;
  swift_retain(v44);
  sub_1001E1CB4(v53, 0);
  swift_errorRelease(v53);
  v55 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v51, 1, 1, v55);
  v56 = swift_retain(v50);
  v57 = static MainActor.shared.getter(v56);
  v58 = (_QWORD *)swift_allocObject(&unk_10047D898, 40, 7);
  v58[2] = v57;
  v58[3] = &protocol witness table for MainActor;
  v58[4] = v50;
  v59 = sub_1000E6084(v51, (uint64_t)&unk_1004C28A8, (uint64_t)v58);
  swift_release(v59);

  v60 = swift_getKeyPath(&unk_1003D2FA8);
  v61 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 544), v50, v60, v61);
  swift_release(v60);
  swift_release(v61);
  v62 = *(_BYTE *)(v0 + 544);
  v63 = swift_getKeyPath(&unk_1003D2FA8);
  v64 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 545) = 0;
  swift_retain(v50);
  static Published.subscript.setter(v0 + 545, v50, v63, v64);
  v65 = v62;
LABEL_26:
  sub_1001DFE70(v65);
  swift_release(v49);
  v123 = *(_QWORD *)(v0 + 344);
  v124 = *(_QWORD *)(v0 + 320);
  v126 = *(_QWORD *)(v0 + 296);
  v125 = *(_QWORD *)(v0 + 304);
  v128 = *(_QWORD *)(v0 + 280);
  v127 = *(_QWORD *)(v0 + 288);
  v129 = *(_QWORD *)(v0 + 272);
  v131 = *(_QWORD *)(v0 + 240);
  v130 = *(_QWORD *)(v0 + 248);
  v139 = *(_QWORD *)(v0 + 216);
  v141 = *(_QWORD *)(v0 + 192);
  v143 = *(_QWORD *)(v0 + 168);
  v145 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v139);
  swift_task_dealloc(v141);
  swift_task_dealloc(v143);
  swift_task_dealloc(v145);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EA840()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __n128 v3;
  NSObject *v4;
  uint64_t v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  const char *v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(void **)(v0 + 512);
  swift_release(*(_QWORD *)(v0 + 368));

  swift_task_dealloc(v1);
  v4 = OSSignposter.logHandle.getter(v3);
  v5 = OSSignpostIntervalState.signpostID.getter();
  v6 = static os_signpost_type_t.end.getter(v5);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    v11 = swift_retain(v7);
    checkForErrorAndConsumeState(state:)(v11);
    v12 = swift_release(v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v9 + 88))(v8, v10, v12) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v13 = "";
    }
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v14 = (_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v16, v17);
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    v19 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, v6, v19, "AddIntent", v13, v18, 2u);
    swift_slowDealloc(v18, -1, -1);

    v15(v16, v17);
  }
  else
  {
    v14 = (_QWORD *)(v0 + 280);

  }
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 488);
  v22 = *(void **)(v0 + 448);
  v23 = *(void **)(v0 + 456);
  v24 = *(void **)(v0 + 440);
  v50 = *(_QWORD *)(v0 + 400);
  v25 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v14, *(_QWORD *)(v0 + 256));
  swift_release(v21);
  sub_1001E1CB4(v20, 0);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = swift_retain(v25);
  v29 = static MainActor.shared.getter(v28);
  v30 = (_QWORD *)swift_allocObject(&unk_10047D870, 40, 7);
  v30[2] = v29;
  v30[3] = &protocol witness table for MainActor;
  v30[4] = v25;
  v31 = sub_1000E6084(v26, (uint64_t)&unk_1004C2898, (uint64_t)v30);
  swift_release(v31);

  swift_errorRelease(v20);
  KeyPath = swift_getKeyPath(&unk_1003D2FA8);
  v33 = swift_getKeyPath(&unk_1003D2FD0);
  static Published.subscript.getter((_QWORD *)(v0 + 542), v25, KeyPath, v33);
  swift_release(KeyPath);
  swift_release(v33);
  v34 = *(_BYTE *)(v0 + 542);
  v35 = swift_getKeyPath(&unk_1003D2FA8);
  v36 = swift_getKeyPath(&unk_1003D2FD0);
  *(_BYTE *)(v0 + 551) = 0;
  swift_retain(v25);
  static Published.subscript.setter(v0 + 551, v25, v35, v36);
  sub_1001DFE70(v34);
  swift_release(v50);
  v37 = *(_QWORD *)(v0 + 344);
  v38 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 304);
  v42 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 288);
  v43 = *(_QWORD *)(v0 + 272);
  v45 = *(_QWORD *)(v0 + 240);
  v44 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 168);
  v51 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EABE4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[56];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[4];
  char v62;
  char *v63;
  uint64_t v64;

  v2 = v1;
  v45 = a1 & 1;
  v3 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = sub_1000057B4(&qword_1004BF6E0);
  v17 = (char *)swift_allocObject(v16, 88, 7);
  *((_OWORD *)v17 + 1) = xmmword_1003C64D0;
  String.LocalizationValue.init(stringLiteral:)(0x7373696D736944, 0xE700000000000000);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v18 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v19 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v18, v8, 0, 0, 256);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_retain(v2);
  v22 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v23 = UUID.uuidString.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
  *((_QWORD *)v17 + 4) = v23;
  *((_QWORD *)v17 + 5) = v25;
  *((_QWORD *)v17 + 6) = v19;
  *((_QWORD *)v17 + 7) = v21;
  v17[64] = 2;
  *((_QWORD *)v17 + 9) = &unk_1004C28D0;
  *((_QWORD *)v17 + 10) = v2;
  v26 = v45;
  sub_1001EBDD4(v45, (uint64_t)v50);
  sub_10000FD10((uint64_t)v50, (uint64_t)&v51, &qword_1004BD6A8);
  v27 = v2;
  if (*((_QWORD *)&v51 + 1))
  {
    v56 = v51;
    v57 = v52;
    v28 = v54;
    v58 = v53;
    v29 = v55;
    v59 = v51;
    v60 = v52;
    sub_1000795C8((uint64_t)&v59);
    sub_1000795C8((uint64_t)&v60);
    sub_10000DCE8(v28, v29);
    v31 = *((_QWORD *)v17 + 2);
    v30 = *((_QWORD *)v17 + 3);
    if (v31 >= v30 >> 1)
      v17 = sub_10005DD14((char *)(v30 > 1), v31 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v31 + 1;
    v32 = &v17[56 * v31];
    v33 = v57;
    *((_OWORD *)v32 + 2) = v56;
    *((_OWORD *)v32 + 3) = v33;
    *((_QWORD *)v32 + 8) = v58;
    *((_QWORD *)v32 + 9) = v28;
    *((_QWORD *)v32 + 10) = v29;
    sub_100072644((uint64_t)&v59);
    sub_100072644((uint64_t)&v60);
    sub_10000DCF8(v28, v29);
  }
  v34 = sub_1001EBC44(v26, 0xD000000000000011, 0x80000001003AF240, 0xD000000000000013, 0x80000001003AF220);
  v36 = v35;
  v37 = sub_1001EBC44(v26, 0xD000000000000041, 0x80000001003AF1D0, 0xD000000000000049, 0x80000001003AF180);
  v39 = v38;
  v61[0] = v34;
  v61[1] = v36;
  v61[2] = v37;
  v61[3] = v38;
  v62 = 0;
  v63 = v17;
  v64 = 0;
  swift_beginAccess(v27 + 16, &v49, 0, 0);
  sub_1000444A8(v27 + 16, (uint64_t)v46);
  v40 = v47;
  v41 = v48;
  sub_1000096A0(v46, v47);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v41 + 40))(v61, v40, v41);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v17);
  return sub_10000970C(v46);
}

uint64_t sub_1001EAFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 184) = a4;
  return swift_task_switch(sub_1001EAFF0, 0, 0);
}

uint64_t sub_1001EAFF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[23] + 16;
  swift_beginAccess(v1, v0 + 20, 0, 0);
  sub_1000444A8(v1, (uint64_t)(v0 + 10));
  v2 = v0[13];
  v3 = v0[14];
  sub_1000096A0(v0 + 10, v2);
  v4 = *(int **)(v3 + 32);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_1001EB094;
  return v7(v2, v3);
}

uint64_t sub_1001EB094(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_BYTE *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001EB0F0, 0, 0);
}

uint64_t sub_1001EB0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  int v7;
  __n128 v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  sub_10000970C((_QWORD *)(v0 + 80));
  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.groupActivities);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 208);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🛂 User did authenticate=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(unsigned __int8 *)(v0 + 208);

  if (v7 == 1)
  {
    v9 = v0 + 16;
    v10 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    *(_QWORD *)(v0 + 200) = v10;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1001EB2B8;
    v11 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 120) = _NSConcreteStackBlock;
    v12 = (_QWORD *)(v0 + 120);
    v12[1] = 0x40000000;
    v12[2] = sub_1001EB334;
    v12[3] = &unk_10047D8B0;
    v12[4] = v11;
    objc_msgSend(v10, "synchronizeWithCompletionHandler:", v12);
    return swift_continuation_await(v9);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v15)
    {
      swift_retain(*(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
      GroupSession.leave()();
      v8 = swift_release(v15);
    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_1001EB2B8()
{
  return swift_task_switch(sub_1001EB304, 0, 0);
}

uint64_t sub_1001EB304()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB334(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1001EB33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch(sub_1001EB354, 0, 0);
}

uint64_t sub_1001EB354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[10] + 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_1000444A8(v1, (uint64_t)(v0 + 2));
  v2 = v0[5];
  v3 = v0[6];
  sub_1000096A0(v0 + 2, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1001EB3F8;
  return v7(v2, v3);
}

uint64_t sub_1001EB3F8(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001EB454, 0, 0);
}

uint64_t sub_1001EB454()
{
  uint64_t v0;
  int v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v1 = *(unsigned __int8 *)(v0 + 96);
  sub_10000970C((_QWORD *)(v0 + 16));
  if (v1 != 2 && (v1 & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v4)
    {
      swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
      GroupSession.leave()();
      swift_release(v4);
    }
    if (qword_1004B8DF8 != -1)
      swift_once(&qword_1004B8DF8, sub_1001EC268);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100039D34(v5, (uint64_t)static Logger.groupActivities);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "🛂 User did not complete the subscription flow", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001EB574(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  char *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = GroupSession.localParticipant.getter(v10);
  Participant.id.getter(v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = (char *)UUID.uuidString.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16._countAndFlagsBits = 0x616C506572616853;
  v16._object = (void *)0xEC0000003D444979;
  if (String.hasPrefix(_:)(v16))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    strcpy((char *)v30, "SharePlayID=");
    BYTE5(v30[1]) = 0;
    HIWORD(v30[1]) = -5120;
    v17._countAndFlagsBits = (uint64_t)v13;
    v17._object = v15;
    String.append(_:)(v17);
  }
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, "setExternalIdentifier:", v18);

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v19 = type metadata accessor for Logger(0);
  sub_100039D34(v19, (uint64_t)static Logger.groupActivities);
  v20 = swift_bridgeObjectRetain();
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v29 = v24;
    *(_DWORD *)v23 = 136446210;
    v25._countAndFlagsBits = 0x616C506572616853;
    v25._object = (void *)0xEC0000003D444979;
    if (String.hasPrefix(_:)(v25))
    {
      swift_bridgeObjectRetain();
      v26 = (char *)v15;
    }
    else
    {
      strcpy((char *)v30, "SharePlayID=");
      BYTE5(v30[1]) = 0;
      HIWORD(v30[1]) = -5120;
      v27._countAndFlagsBits = (uint64_t)v13;
      v27._object = v15;
      String.append(_:)(v27);
      v13 = (char *)v30[0];
      v26 = (char *)v30[1];
    }
    *(_QWORD *)(v23 + 4) = sub_1000393D0(v13, v26, &v29);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "externalID identity=%{public}s", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
}

uint64_t sub_1001EB898()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1000B2EA4;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001EB900()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1001EB968;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001EB968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001F21D8, v2, v3);
}

void sub_1001EB9D8(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  void (*v12)(uint64_t, char);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _BYTE v21[32];
  _BYTE v22[24];

  if (!*a1)
    return;
  v20 = *a1;
  if (!objc_msgSend(v20, "isSharedListeningSession")
    || (v3 = objc_msgSend(v20, "tracklist"),
        v19 = objc_msgSend(v3, "playingItem"),
        v3,
        !v19))
  {
LABEL_16:

    return;
  }
  if ((objc_msgSend(v19, "isPlaceholder") & 1) != 0)
  {

    return;
  }
  v4 = objc_msgSend(v19, "metadataObject");
  if (!v4)
  {
LABEL_15:

    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "innermostModelObject");

  objc_opt_self(MPModelSong);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {

    goto LABEL_15;
  }
  v8 = v7;
  v9 = a2 + 16;
  swift_beginAccess(v9, v22, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_1001E5520((uint64_t)v21);
    v14 = v13;
    v15 = type metadata accessor for GroupActivitiesManager.Activity(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v16 = type metadata accessor for CodableModelObjectIdentity();
      v17 = swift_allocObject(v16, 24, 7);
      *(_QWORD *)(v17 + 16) = v8;
      v18 = *(_QWORD *)(v14 + 56);
      v6 = v6;
      swift_release(v18);
      *(_QWORD *)(v14 + 56) = v17;
    }
    v12((uint64_t)v21, 0);
    swift_release(v11);
  }

}

uint64_t sub_1001EBBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1001EBBE0, 0, 0);
}

uint64_t sub_1001EBBE0()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) != 0;
  v2 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_10003ACB8;
  return GroupActivitiesManager.leave(performLeaveCommand:)(v1);
}

uint64_t sub_1001EBC44(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];

  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v25[-v18];
  if ((a1 & 1) != 0)
  {
    v20 = a4;
    v21 = a5;
  }
  else
  {
    v20 = a2;
    v21 = a3;
  }
  String.LocalizationValue.init(stringLiteral:)(v20, v21);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v22 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v23 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v22, v12, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  return v23;
}

uint64_t sub_1001EBDD4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int64x2_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = __chkstk_darwin(v13);
  v18 = &v29[-v17];
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v15, v18, v11);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v24 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v21 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v24, v10, 0, 0, 256);
    v26 = v25;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v19 = UUID.uuidString.getter(v27);
    v20 = v28;
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v23 = vdupq_n_s64(2uLL);
    v23.i64[0] = v26;
    v22 = &unk_1004C28E0;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0uLL;
  }
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v21;
  *(int64x2_t *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1001EBFE8()
{
  return swift_task_switch(sub_1001EBFFC, 0, 0);
}

uint64_t sub_1001EBFFC()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    v2 = v1;
    LSApplicationWorkspace.openMusicSettings()();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EC054()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

_QWORD *GroupActivitiesManager.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_10000970C(v0 + 2);
  sub_10018C9EC(v0[7], v0[8], v0[9], v0[10]);
  v1 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  v2 = sub_1000057B4((uint64_t *)&unk_1004C1BA0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  v4 = sub_1000057B4(&qword_1004BF240);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  v6 = sub_1000057B4(&qword_1004C2038);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_artworkCachingReference));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionStateObserver));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription));
  sub_10000FE2C((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &qword_1004C20C8);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));

  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState));
  sub_10000FE2C((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, &qword_1004BD3B0);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain));
  sub_10000FE2C((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, &qword_1004BCBD0);
  sub_1001EDA44(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext), *(void **)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8));
  return v0;
}

uint64_t GroupActivitiesManager.__deallocating_deinit()
{
  uint64_t v0;

  GroupActivitiesManager.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001EC268()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, static Logger.groupActivities);
  sub_100039D34(v0, (uint64_t)static Logger.groupActivities);
  sub_10000598C(0, (unint64_t *)&qword_1004BC960, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x74634170756F7247, 0xEF73656974697669);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.groupActivities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1004B8DF8 != -1)
    swift_once(&qword_1004B8DF8, sub_1001EC268);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100039D34(v2, (uint64_t)static Logger.groupActivities);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_1001EC37C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    return String.subscript.getter(result, v4 | (v3 << 16), a2, a3);
  }
  return result;
}

uint64_t sub_1001EC3C8()
{
  _BYTE *v0;

  if (*v0)
    return 7955819;
  else
    return 0x696669746E656469;
}

uint64_t sub_1001EC400@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001F1FC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001EC424(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F0BD0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EC44C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F0BD0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001EC474(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSString v14;
  NSString v15;
  id v16;
  _QWORD v17[2];
  char v18;
  char v19;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C2648);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F0BD0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  if (v2)
  {
    v12 = type metadata accessor for CodableListeningProperties();
    swift_deallocPartialClassInstance(v1, v12, 24, 7);
  }
  else
  {
    v19 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v19, v5);
    v18 = 1;
    v17[1] = KeyedDecodingContainer.decode(_:forKey:)(&v18, v5);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(MPCPlaybackSharedListeningProperties), "propertiesWithSessionIdentifier:sessionKey:", v14, v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 16) = v16;
  }
  sub_10000970C(a1);
  return v3;
}

uint64_t sub_1001EC668(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  char v24;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C26A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F0BD0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  v12 = *(void **)(v3 + 16);
  v13 = objc_msgSend(v12, "sessionIdentifier");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v24 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v14, v16, &v24, v5);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v12, "sessionKey");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v23 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v20, &v23, v5);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EC808@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001ECFB8(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableListeningProperties, (uint64_t (*)(uint64_t))sub_1001EC474, a2);
}

uint64_t sub_1001EC82C(_QWORD *a1)
{
  return sub_1001EC668(a1);
}

uint64_t sub_1001EC84C()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C436C65646F6DLL;
  else
    return 0x696669746E656469;
}

uint64_t sub_1001EC89C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001F20AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001EC8C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F0C14();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EC8E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F0C14();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001EC910(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  _BYTE *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t result;
  NSString *v22;
  uint64_t ObjCClassMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE *v30;
  __n128 v31;
  id v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  NSString *v39;
  id v40;
  void **aBlock;
  uint64_t v42;
  void (*v43)(uint64_t, void *);
  void *v44;
  CFRange (__swiftcall *v45)(__C::_NSRange);
  uint64_t v46;
  char v47;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C2658);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F0C14();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  if (!v2)
  {
    v47 = 0;
    v12 = sub_1001F0C58();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&aBlock, &type metadata for Data, &v47, v5, &type metadata for Data, v12);
    v14 = (uint64_t)aBlock;
    v13 = v42;
    sub_10000598C(0, (unint64_t *)&unk_1004C2670, NSKeyedUnarchiver_ptr);
    v15 = sub_10000598C(0, &qword_1004BD018, MPIdentifierSet_ptr);
    v16 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v15, v14, v13, v15);
    if (v16)
    {
      v40 = v16;
      LOBYTE(aBlock) = 1;
      KeyedDecodingContainer.decode(_:forKey:)(&aBlock, v5);
      v39 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v22 = v39;
      v38 = NSClassFromString(v39);

      if (v38)
      {
        ObjCClassMetadata = swift_getObjCClassMetadata(v38);
        v24 = sub_10000598C(0, &qword_1004BD020, MPModelObject_ptr);
        v25 = swift_dynamicCastMetatype(ObjCClassMetadata, v24);
        if (v25)
        {
          if (qword_1004B8E08 != -1)
            goto LABEL_22;
          while (1)
          {
            v26 = *((_QWORD *)off_1004C2970 + 2);
            if (!v26)
              break;
            if (*((_QWORD *)off_1004C2970 + 4) == v25)
            {
LABEL_19:
              v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              v45 = CFRange.init(_:);
              v46 = 0;
              aBlock = _NSConcreteStackBlock;
              v42 = 1107296256;
              v43 = sub_10001D2BC;
              v44 = &unk_10047D668;
              v39 = (NSString *)_Block_copy(&aBlock);
              v33 = v32;
              v34 = v40;
              v38 = (Class)objc_msgSend(v33, "initWithIdentifiers:block:", v40, v39);

              _Block_release(v39);
              v35 = swift_release(v46);
              LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v35);
              result = sub_10000FC28(v14, v13);
              if ((v34 & 1) == 0)
              {
                (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
                *(_QWORD *)(v3 + 16) = v38;
                goto LABEL_6;
              }
              __break(1u);
              return result;
            }
            if (v26 == 1)
              break;
            v27 = 5;
            while (1)
            {
              v28 = v27 - 3;
              if (__OFADD__(v27 - 4, 1))
                break;
              if (*((_QWORD *)off_1004C2970 + v27) == v25)
                goto LABEL_19;
              ++v27;
              if (v28 == v26)
                goto LABEL_18;
            }
            __break(1u);
LABEL_22:
            v36 = v25;
            swift_once(&qword_1004B8E08, sub_1001F5638);
            v25 = v36;
          }
        }
      }
LABEL_18:
      v29 = sub_1001F0C9C();
      swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v29, 0, 0);
      *v30 = 1;
      swift_willThrow(v31);
      sub_10000FC28(v14, v13);

    }
    else
    {
      v17 = sub_1001F0C9C();
      swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v17, 0, 0);
      *v18 = 0;
      swift_willThrow(v19);
      sub_10000FC28(v14, v13);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20 = type metadata accessor for CodableModelObjectIdentity();
  swift_deallocPartialClassInstance(v3, v20, 24, 7);
LABEL_6:
  sub_10000970C(a1);
  return v3;
}

uint64_t sub_1001ECD34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  __n128 v21;
  objc_class *ObjCClassFromMetadata;
  NSString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29[2];

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C2698);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F0C14();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  v12 = (void *)objc_opt_self(NSKeyedArchiver);
  v13 = objc_msgSend(*(id *)(v3 + 16), "identifiers");
  v29[0] = 0;
  v14 = objc_msgSend(v12, "archivedDataWithRootObject:requiringSecureCoding:error:", v13, 1, v29);

  v15 = v29[0];
  if (v14)
  {
    v16 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v29[0] = v16;
    v29[1] = v18;
    HIBYTE(v28) = 0;
    v19 = sub_1001F0CF8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, (char *)&v28 + 7, v5, &type metadata for Data, v19);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      swift_getObjectType();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      v24 = NSStringFromClass(ObjCClassFromMetadata);
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      LOBYTE(v29[0]) = 1;
      KeyedEncodingContainer.encode(_:forKey:)(v25, v27, v29, v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    return sub_10000FC28((uint64_t)v16, (unint64_t)v18);
  }
  else
  {
    v20 = v15;
    _convertNSErrorToError(_:)(v15);

    swift_willThrow(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1001ECF94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001ECFB8(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableModelObjectIdentity, (uint64_t (*)(uint64_t))sub_1001EC910, a2);
}

uint64_t sub_1001ECFB8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  v8 = a2(0);
  swift_allocObject(v8, 24, 7);
  result = a3(a1);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1001ED018(_QWORD *a1)
{
  return sub_1001ECD34(a1);
}

uint64_t sub_1001ED038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000970C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity.Metadata(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C2360, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity.Metadata);
}

uint64_t sub_1001ED174(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1004C1F24);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10002F6EC;
  return sub_1001E3548(a1, v5, v6, v7, v8, v9);
}

id sub_1001ED20C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:
      result = result;
      break;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
LABEL_4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 4:
      result = (id)sub_1001ED29C((uint64_t)result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001ED29C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001ED2D0(uint64_t *a1, uint64_t a2)
{
  initializeWithTake for BagProvider.Result(a2, a1);
  return a2;
}

uint64_t sub_1001ED30C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10018C960(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001ED34C()
{
  uint64_t v0;

  return GroupActivitiesManager.postEvent(_:participantID:)(v0 + 24, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1001ED378(int a1, void *a2, char a3, unsigned int a4, void *a5, char a6)
{
  char v6;
  id v11;
  id v12;
  char v13;

  v6 = 0;
  if (((a1 ^ a4) & 1) == 0 && (((a1 ^ a4) >> 8) & 1) == 0)
  {
    if (a2)
    {
      if (a5)
      {
        sub_10000598C(0, &qword_1004C2690, ICMusicSubscriptionStatus_ptr);
        v11 = a5;
        v12 = a2;
        v13 = static NSObject.== infix(_:_:)(v12, v11);

        if ((v13 & 1) != 0)
          goto LABEL_6;
      }
    }
    else if (!a5)
    {
LABEL_6:
      v6 = a3 ^ a6 ^ 1;
      return v6 & 1;
    }
    v6 = 0;
  }
  return v6 & 1;
}

id _s9MusicCore22GroupActivitiesManagerC8ActivityV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(a2 + 56);
  if (!v3)
    return 0;
  v4 = *(void **)(v3 + 16);
  v5 = *(id *)(v2 + 16);
  v6 = v4;
  v7 = objc_msgSend(v5, "identifiers");
  v8 = objc_msgSend(v6, "identifiers");
  v9 = objc_msgSend(v7, "intersectsSet:", v8);

  return v9;
}

Swift::Int sub_1001ED4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1000057B4(&qword_1004C2738);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_BYTE *)(v6 + v4);
      Hasher.init(_seed:)(v19);
      NSDirectionalEdgeInsets.Edge.hash(into:)((uint64_t)v19, v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      if (((1 << v10) & v12) != 0)
      {
        v14 = *(_QWORD *)(v3 + 48);
        result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
        if ((result & 1) != 0)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
          if ((result & 1) != 0)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for GroupActivitiesManager.ArtworkCachingReference()
{
  return objc_opt_self(_TtCC9MusicCore22GroupActivitiesManagerP33_4D3C9D6548BB3147DD0F1D268040B2BF23ArtworkCachingReference);
}

unint64_t sub_1001ED650()
{
  unint64_t result;

  result = qword_1004C1FB0;
  if (!qword_1004C1FB0)
  {
    result = swift_getWitnessTable(&unk_1003D352C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C1FB0);
  }
  return result;
}

uint64_t type metadata accessor for CodableListeningProperties()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableListeningProperties);
}

uint64_t type metadata accessor for CodableModelObjectIdentity()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableModelObjectIdentity);
}

unint64_t sub_1001ED6D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C1FD8;
  if (!qword_1004C1FD8)
  {
    v1 = sub_100009788(&qword_1004C1FD0);
    sub_100004D8C(&qword_1004C1FE0, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_1003D34B4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1004C1FD8);
  }
  return result;
}

unint64_t sub_1001ED750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004C1FF0;
  if (!qword_1004C1FF0)
  {
    v1 = sub_100009788(&qword_1004C1FE8);
    sub_100004D8C(&qword_1004C1FF8, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_1003D348C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1004C1FF0);
  }
  return result;
}

unint64_t sub_1001ED7EC()
{
  unint64_t result;

  result = qword_1004C2048;
  if (!qword_1004C2048)
  {
    result = swift_getWitnessTable(&unk_1003D3AD8, &type metadata for SharedListening.ErrorHandling.Error);
    atomic_store(result, (unint64_t *)&qword_1004C2048);
  }
  return result;
}

uint64_t sub_1001ED838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = v0 + v3;
  v6 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v5 + *(int *)(v6 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11, v2 | 7);
}

uint64_t sub_1001ED93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1004C2064);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10002E8E0;
  return sub_1001E172C(a1, v6, v7, v8);
}

uint64_t sub_1001ED9DC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C20BC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  v2 = (_QWORD *)swift_task_alloc(dword_1004C26CC);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return sub_1001E8904();
}

void sub_1001EDA44(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)

}

uint64_t sub_1001EDA54()
{
  return sub_100004D8C(&qword_1004C20D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

uint64_t sub_1001EDA80()
{
  return sub_100004D8C((unint64_t *)&unk_1004C20D8, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

uint64_t sub_1001EDAAC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1004C1BA0);
}

uint64_t sub_1001EDAD0(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004C26C0, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1004C1BA0);
}

uint64_t sub_1001EDAFC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_1004BF240);
}

uint64_t sub_1001EDB20(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, &qword_1004BF248, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_1004BF240);
}

uint64_t sub_1001EDB4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100191FEC(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_1004C2038);
}

uint64_t sub_1001EDB70(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192058(a1, a2, a3, a4, (uint64_t *)&unk_1004C26B0, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_1004C2038);
}

uint64_t sub_1001EDB9C()
{
  return type metadata accessor for GroupActivitiesManager(0);
}

uint64_t type metadata accessor for GroupActivitiesManager(uint64_t a1)
{
  return sub_1000A1E5C(a1, (uint64_t *)&unk_1004C2110, (uint64_t)&nominal type descriptor for GroupActivitiesManager);
}

void sub_1001EDBB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[20];

  v14[0] = "(";
  v14[1] = &unk_1003D3240;
  sub_1001D833C(319, (unint64_t *)&unk_1004C2120, (uint64_t)&type metadata for Int);
  if (v3 <= 0x3F)
  {
    v14[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001D833C(319, (unint64_t *)&qword_1004BF2B8, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v14[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001EDD60(319);
      if (v7 <= 0x3F)
      {
        v14[4] = *(_QWORD *)(v6 - 8) + 64;
        v14[5] = (char *)&value witness table for Builtin.Int64 + 64;
        v14[6] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[7] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v14[9] = &unk_1003D3258;
        v14[10] = &unk_1003D3270;
        sub_1000A44A8(319, (unint64_t *)&unk_1004C2138, type metadata accessor for GroupActivitiesManager.Activity);
        if (v9 <= 0x3F)
        {
          v14[11] = *(_QWORD *)(v8 - 8) + 64;
          v14[12] = &unk_1003D3258;
          v14[13] = &unk_1003D3258;
          v14[14] = &unk_1003D3258;
          v14[15] = &unk_1003D3258;
          sub_1000A44A8(319, (unint64_t *)&qword_1004BD430, type metadata accessor for Signpost);
          if (v11 <= 0x3F)
          {
            v14[16] = *(_QWORD *)(v10 - 8) + 64;
            v14[17] = &unk_1003D3258;
            sub_1000A44A8(319, (unint64_t *)&unk_1004C2148, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
            if (v13 <= 0x3F)
            {
              v14[18] = *(_QWORD *)(v12 - 8) + 64;
              v14[19] = &unk_1003D3288;
              swift_updateClassMetadata2(a1, 256, 20, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

void sub_1001EDD60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004C2130)
  {
    v2 = sub_100009788(&qword_1004C2028);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004C2130);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD *, uint64_t, uint64_t, __n128);
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *__dst;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v12 = (void *)a2[5];
    v11 = a2[6];
    v4[5] = (uint64_t)v12;
    v4[6] = v11;
    v13 = a2[7];
    v4[7] = v13;
    v14 = *(int *)(a3 + 32);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v18 + 48);
    v20 = v12;
    swift_retain(v11);
    v21 = swift_retain(v13);
    if (v19(v16, 1, v17, v21))
    {
      v22 = sub_1000057B4(&qword_1004C1F90);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v34 = v18;
      v23 = v16[1];
      *v15 = *v16;
      v15[1] = v23;
      v24 = v16[3];
      v15[2] = v16[2];
      v15[3] = v24;
      v25 = (void *)v16[4];
      v15[4] = v25;
      v26 = *(int *)(v17 + 28);
      __dst = (char *)v15 + v26;
      v27 = (char *)v16 + v26;
      v28 = type metadata accessor for URL(0);
      v29 = *(_QWORD *)(v28 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v25;
      if (v35(v27, 1, v28))
      {
        v31 = sub_1000057B4(&qword_1004B99B0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      *(_OWORD *)((char *)v15 + *(int *)(v17 + 32)) = *(_OWORD *)((char *)v16 + *(int *)(v17 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 24))
    sub_10000970C((_QWORD *)a1);

  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v4 + *(int *)(v5 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD *, uint64_t, uint64_t, __n128);
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v33;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v10 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v9;
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v16 + 48);
  v18 = v10;
  swift_retain(v9);
  v19 = swift_retain(v11);
  if (v17(v14, 1, v15, v19))
  {
    v20 = sub_1000057B4(&qword_1004C1F90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v33 = v16;
    v21 = v14[1];
    *v13 = *v14;
    v13[1] = v21;
    v22 = v14[3];
    v13[2] = v14[2];
    v13[3] = v22;
    v23 = (void *)v14[4];
    v13[4] = v23;
    v24 = *(int *)(v15 + 28);
    __dst = (char *)v13 + v24;
    v25 = (char *)v14 + v24;
    v26 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v26 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v23;
    if (v31(v25, 1, v26))
    {
      v29 = sub_1000057B4(&qword_1004B99B0);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.Activity(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *__dst;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_100040AF0((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    sub_10000970C((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *(void **)(a1 + 40);
  v10 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = v10;

  v12 = *(_QWORD *)(a1 + 48);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = *(int *)(a3 + 32);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_100034960((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_14;
    }
    *v17 = *v18;
    v17[1] = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17[2] = v18[2];
    v17[3] = v18[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = (void *)v17[4];
    v32 = (void *)v18[4];
    v17[4] = v32;
    v33 = v32;

    v34 = *(int *)(v19 + 28);
    v35 = (char *)v17 + v34;
    v36 = (char *)v18 + v34;
    v37 = type metadata accessor for URL(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v35, 1, v37);
    v41 = v39(v36, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_23:
        v43 = *(int *)(v19 + 32);
        v44 = (_QWORD *)((char *)v17 + v43);
        v45 = (_QWORD *)((char *)v18 + v43);
        *v44 = *v45;
        v44[1] = v45[1];
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    }
    v42 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_23;
  }
  if (v23)
  {
LABEL_14:
    v30 = sub_1000057B4(&qword_1004C1F90);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v24 = (void *)v18[4];
  v17[4] = v24;
  v25 = *(int *)(v19 + 28);
  __dst = (char *)v17 + v25;
  v26 = (char *)v18 + v25;
  v27 = type metadata accessor for URL(0);
  v47 = *(_QWORD *)(v27 - 8);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v24;
  if (v48(v26, 1, v27))
  {
    v29 = sub_1000057B4(&qword_1004B99B0);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v27);
  }
  *(_OWORD *)((char *)v17 + *(int *)(v19 + 32)) = *(_OWORD *)((char *)v18 + *(int *)(v19 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 32);
  v6 = (_OWORD *)(a1 + v5);
  v7 = (_OWORD *)(a2 + v5);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_1000057B4(&qword_1004C1F90);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *v6 = *v7;
    v6[1] = v11;
    *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
    v12 = *(int *)(v8 + 28);
    v13 = (char *)v6 + v12;
    v14 = (char *)v7 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1000057B4(&qword_1004B99B0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(_OWORD *)((char *)v6 + *(int *)(v8 + 32)) = *(_OWORD *)((char *)v7 + *(int *)(v8 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, uint64_t);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;

  if (*(_QWORD *)(a1 + 24))
    sub_10000970C((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;

  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v10);
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100034960((uint64_t)v12, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_9;
    }
    v27 = v13[1];
    *v12 = *v13;
    v12[1] = v27;
    swift_bridgeObjectRelease();
    v28 = v13[3];
    v12[2] = v13[2];
    v12[3] = v28;
    swift_bridgeObjectRelease();
    v29 = (void *)v12[4];
    v12[4] = v13[4];

    v30 = *(int *)(v14 + 28);
    v31 = (char *)v12 + v30;
    v32 = (char *)v13 + v30;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_18:
        *(_OWORD *)((char *)v12 + *(int *)(v14 + 32)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 32));
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v38 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_18;
  }
  if (v18)
  {
LABEL_9:
    v26 = sub_1000057B4(&qword_1004C1F90);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v19;
  v12[4] = v13[4];
  v20 = *(int *)(v14 + 28);
  v21 = (char *)v12 + v20;
  v22 = (char *)v13 + v20;
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)((char *)v12 + *(int *)(v14 + 32)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EEAA8);
}

uint64_t sub_1001EEAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1000057B4(&qword_1004C1F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EEB40);
}

uint64_t sub_1001EEB40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = sub_1000057B4(&qword_1004C1F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1001EEBB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = &unk_1003D3258;
  v4[2] = &unk_1003D3258;
  v4[3] = &unk_1003D3258;
  sub_1000A44A8(319, (unint64_t *)&unk_1004C22C8, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity.Metadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = (uint64_t)v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    if (v14(v11, 1, v12))
    {
      v16 = sub_1000057B4(&qword_1004B99B0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    v15 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 32);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EF2DC);
}

uint64_t sub_1001EF2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1000057B4(&qword_1004B99B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EF374);
}

uint64_t sub_1001EF374(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_1000057B4(&qword_1004B99B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1001EF3EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1003D32D8;
  v4[1] = &unk_1003D32D8;
  v4[2] = &unk_1003D3258;
  sub_1000A44A8(319, (unint64_t *)&qword_1004C2370, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_1003D32F0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void destroy for GroupActivitiesManager.EligibilityContext(uint64_t a1)
{

}

uint64_t _s9MusicCore22GroupActivitiesManagerC18EligibilityContextVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.EligibilityContext()
{
  return &type metadata for GroupActivitiesManager.EligibilityContext;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.Activity.CodingKey()
{
  return &type metadata for GroupActivitiesManager.Activity.CodingKey;
}

uint64_t *sub_1001EF644(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t, __n128);
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  char *__dst;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[3];
      v39 = v8;
      if (v10)
      {
        v11 = a2[4];
        a1[3] = v10;
        a1[4] = v11;
        (**(void (***)(uint64_t *, uint64_t *))(v10 - 8))(a1, a2);
      }
      else
      {
        v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v12;
        a1[4] = a2[4];
      }
      v14 = (void *)a2[5];
      v13 = a2[6];
      a1[5] = (uint64_t)v14;
      a1[6] = v13;
      v15 = a2[7];
      a1[7] = v15;
      v16 = *(int *)(v7 + 32);
      v17 = (uint64_t *)((char *)a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v20 + 48);
      v22 = v14;
      swift_retain(v13);
      v23 = swift_retain(v15);
      if (v21(v18, 1, v19, v23))
      {
        v24 = sub_1000057B4(&qword_1004C1F90);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v25 = v39;
      }
      else
      {
        v26 = v18[1];
        *v17 = *v18;
        v17[1] = v26;
        v27 = v18[3];
        v17[2] = v18[2];
        v17[3] = v27;
        v28 = (void *)v18[4];
        v17[4] = v28;
        v29 = *(int *)(v19 + 28);
        __dst = (char *)v17 + v29;
        v37 = v20;
        v30 = (char *)v18 + v29;
        v31 = type metadata accessor for URL(0);
        v35 = *(_QWORD *)(v31 - 8);
        v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = v28;
        if (v38(v30, 1, v31))
        {
          v33 = sub_1000057B4(&qword_1004B99B0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v31);
        }
        v25 = v39;
        *(_OWORD *)((char *)v17 + *(int *)(v19 + 32)) = *(_OWORD *)((char *)v18 + *(int *)(v19 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v17, 0, 1, v19);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1001EF8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(a1 + 24))
      sub_10000970C((_QWORD *)a1);

    swift_release(*(_QWORD *)(a1 + 48));
    swift_release(*(_QWORD *)(a1 + 56));
    v4 = a1 + *(int *)(v2 + 32);
    v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v6 = v4 + *(int *)(v5 + 28);
      v7 = type metadata accessor for URL(0);
      v8 = *(_QWORD *)(v7 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return result;
}

_OWORD *sub_1001EF9C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD *, uint64_t, uint64_t, __n128);
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = *((_QWORD *)a2 + 3);
    v37 = v7;
    if (v8)
    {
      v9 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = v8;
      *((_QWORD *)a1 + 4) = v9;
      (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(a1, a2);
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    }
    v12 = (void *)*((_QWORD *)a2 + 5);
    v11 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v11;
    v13 = *((_QWORD *)a2 + 7);
    *((_QWORD *)a1 + 7) = v13;
    v14 = *(int *)(v6 + 32);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v18 + 48);
    v20 = v12;
    swift_retain(v11);
    v21 = swift_retain(v13);
    if (v19(v16, 1, v17, v21))
    {
      v22 = sub_1000057B4(&qword_1004C1F90);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v23 = v37;
    }
    else
    {
      v24 = v16[1];
      *v15 = *v16;
      v15[1] = v24;
      v25 = v16[3];
      v15[2] = v16[2];
      v15[3] = v25;
      v26 = (void *)v16[4];
      v15[4] = v26;
      v27 = *(int *)(v17 + 28);
      __dst = (char *)v15 + v27;
      v36 = v18;
      v28 = (char *)v16 + v27;
      v29 = type metadata accessor for URL(0);
      v33 = *(_QWORD *)(v29 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v26;
      if (v34(v28, 1, v29))
      {
        v31 = sub_1000057B4(&qword_1004B99B0);
        memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v29);
      }
      v23 = v37;
      *(_OWORD *)((char *)v15 + *(int *)(v17 + 32)) = *(_OWORD *)((char *)v16 + *(int *)(v17 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v15, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_1001EFC20(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t, __n128);
  id v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(__int128 *, uint64_t, uint64_t);
  int v47;
  int v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  _QWORD *v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  _QWORD *__dst;
  char *__dsta;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8((uint64_t)a2, 4, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *((_QWORD *)a2 + 3);
      if (v11)
      {
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
      }
      else
      {
        v15 = *a2;
        v16 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v15;
        *(_OWORD *)(a1 + 16) = v16;
      }
      v17 = (void *)*((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v17;
      v18 = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 48) = v18;
      v19 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v19;
      v20 = *(int *)(v6 + 32);
      __dst = (_QWORD *)(a1 + v20);
      v21 = (_QWORD *)((char *)a2 + v20);
      v22 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v23 + 48);
      v25 = v17;
      swift_retain(v18);
      v26 = swift_retain(v19);
      if (v24(v21, 1, v22, v26))
      {
        v27 = sub_1000057B4(&qword_1004C1F90);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *__dst = *v21;
        __dst[1] = v21[1];
        __dst[2] = v21[2];
        __dst[3] = v21[3];
        v28 = (void *)v21[4];
        __dst[4] = v28;
        v29 = *(int *)(v22 + 28);
        v74 = (char *)__dst + v29;
        v72 = (char *)v21 + v29;
        v30 = type metadata accessor for URL(0);
        v71 = *(_QWORD *)(v30 - 8);
        v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = v28;
        if (v73(v72, 1, v30))
        {
          v32 = sub_1000057B4(&qword_1004B99B0);
          memcpy(v74, v72, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v74, v72, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v30);
        }
        *(_OWORD *)((char *)__dst + *(int *)(v22 + 32)) = *(_OWORD *)((char *)v21 + *(int *)(v22 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_100034960(a1, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v13 = (void *)a1;
LABEL_8:
    memcpy(v13, a2, v12);
    return a1;
  }
  v14 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v14)
    {
      sub_100040AF0((_QWORD *)a1, a2);
      goto LABEL_21;
    }
    sub_10000970C((_QWORD *)a1);
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v14 - 8))(a1, a2);
    goto LABEL_21;
  }
  v33 = *a2;
  v34 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v33;
  *(_OWORD *)(a1 + 16) = v34;
LABEL_21:
  v35 = *(void **)(a1 + 40);
  v36 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v36;
  v37 = v36;

  v38 = *(_QWORD *)(a1 + 48);
  v39 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v39;
  swift_retain(v39);
  swift_release(v38);
  v40 = *(_QWORD *)(a1 + 56);
  v41 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v41;
  swift_retain(v41);
  swift_release(v40);
  v42 = *(int *)(v6 + 32);
  v43 = (__int128 *)(a1 + v42);
  a2 = (__int128 *)((char *)a2 + v42);
  v44 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v43, 1, v44);
  v48 = v46(a2, 1, v44);
  if (!v47)
  {
    if (v48)
    {
      sub_100034960((uint64_t)v43, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_27;
    }
    *(_QWORD *)v43 = *(_QWORD *)a2;
    *((_QWORD *)v43 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v43 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)v43 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v56 = (void *)*((_QWORD *)v43 + 4);
    v57 = (void *)*((_QWORD *)a2 + 4);
    *((_QWORD *)v43 + 4) = v57;
    v58 = v57;

    v59 = *(int *)(v44 + 28);
    v60 = (char *)v43 + v59;
    v61 = (char *)a2 + v59;
    v62 = type metadata accessor for URL(0);
    v63 = *(_QWORD *)(v62 - 8);
    v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
    v65 = v64(v60, 1, v62);
    v66 = v64(v61, 1, v62);
    if (v65)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_40:
        v68 = *(int *)(v44 + 32);
        v69 = (_QWORD *)((char *)v43 + v68);
        v70 = (_QWORD *)((char *)a2 + v68);
        *v69 = *v70;
        v69[1] = v70[1];
        return a1;
      }
    }
    else
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v60, v61, v62);
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    }
    v67 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_40;
  }
  if (v48)
  {
LABEL_27:
    v12 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8) + 64);
    v13 = v43;
    goto LABEL_8;
  }
  *(_QWORD *)v43 = *(_QWORD *)a2;
  *((_QWORD *)v43 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)v43 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)v43 + 3) = *((_QWORD *)a2 + 3);
  v49 = (void *)*((_QWORD *)a2 + 4);
  *((_QWORD *)v43 + 4) = v49;
  v50 = *(int *)(v44 + 28);
  __dsta = (char *)v43 + v50;
  v51 = (char *)a2 + v50;
  v52 = type metadata accessor for URL(0);
  v75 = *(_QWORD **)(v52 - 8);
  v76 = (unsigned int (*)(char *, uint64_t, uint64_t))v75[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = v49;
  if (v76(v51, 1, v52))
  {
    v54 = sub_1000057B4(&qword_1004B99B0);
    memcpy(__dsta, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v75[2])(__dsta, v51, v52);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v75[7])(__dsta, 0, 1, v52);
  }
  *(__int128 *)((char *)v43 + *(int *)(v44 + 32)) = *(__int128 *)((char *)a2 + *(int *)(v44 + 32));
  (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v43, 0, 1, v44);
  return a1;
}

_OWORD *sub_1001F0220(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    v9 = *(int *)(v6 + 32);
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000057B4(&qword_1004C1F90);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v16 = *(int *)(v12 + 28);
      __dst = (char *)v10 + v16;
      v17 = (char *)v11 + v16;
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_1000057B4(&qword_1004B99B0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *(_OWORD *)((char *)v10 + *(int *)(v12 + 32)) = *(_OWORD *)((char *)v11 + *(int *)(v12 + 32));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_1001F03FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100034960(a1, type metadata accessor for GroupActivitiesManager.Activity);
      goto LABEL_7;
    }
    if (*(_QWORD *)(a1 + 24))
      sub_10000970C((_QWORD *)a1);
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(void **)(a1 + 40);
    v23 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v23;

    v24 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_release(v24);
    v25 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_release(v25);
    v26 = *(int *)(v6 + 32);
    v27 = a1 + v26;
    v28 = (_QWORD *)(a2 + v26);
    v29 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31((uint64_t)v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        v34 = *((_OWORD *)v28 + 1);
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *(_OWORD *)(v27 + 16) = v34;
        *(_QWORD *)(v27 + 32) = v28[4];
        v35 = *(int *)(v29 + 28);
        v36 = (void *)(v27 + v35);
        v37 = (char *)v28 + v35;
        v38 = type metadata accessor for URL(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
        {
          v40 = sub_1000057B4(&qword_1004B99B0);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        *(_OWORD *)(v27 + *(int *)(v29 + 32)) = *(_OWORD *)((char *)v28 + *(int *)(v29 + 32));
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        return a1;
      }
      goto LABEL_19;
    }
    if (v33)
    {
      sub_100034960(v27, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
LABEL_19:
      v18 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8) + 64);
      v19 = (void *)v27;
      v20 = v28;
      goto LABEL_8;
    }
    v48 = v28[1];
    *(_QWORD *)v27 = *v28;
    *(_QWORD *)(v27 + 8) = v48;
    swift_bridgeObjectRelease();
    v49 = v28[3];
    *(_QWORD *)(v27 + 16) = v28[2];
    *(_QWORD *)(v27 + 24) = v49;
    swift_bridgeObjectRelease();
    v50 = *(void **)(v27 + 32);
    *(_QWORD *)(v27 + 32) = v28[4];

    v51 = *(int *)(v29 + 28);
    v52 = (void *)(v27 + v51);
    v53 = (char *)v28 + v51;
    v54 = type metadata accessor for URL(0);
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
    v57 = v56(v52, 1, v54);
    v58 = v56(v53, 1, v54);
    if (v57)
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
LABEL_32:
        *(_OWORD *)(v27 + *(int *)(v29 + 32)) = *(_OWORD *)((char *)v28 + *(int *)(v29 + 32));
        return a1;
      }
    }
    else
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
        goto LABEL_32;
      }
      (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
    }
    v59 = sub_1000057B4(&qword_1004B99B0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_32;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v19 = (void *)a1;
    v20 = (const void *)a2;
LABEL_8:
    memcpy(v19, v20, v18);
    return a1;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(int *)(v6 + 32);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_1000057B4(&qword_1004C1F90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v41 = v14[1];
    *v13 = *v14;
    v13[1] = v41;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    v42 = *(int *)(v15 + 28);
    __dst = (char *)v13 + v42;
    v43 = (char *)v14 + v42;
    v44 = type metadata accessor for URL(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_1000057B4(&qword_1004B99B0);
      memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(__dst, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1001F088C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F0898);
}

uint64_t sub_1001F0898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_1001F08E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F08F0);
}

uint64_t sub_1001F08F0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1001F0944(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_1001F097C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t sub_1001F09BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for GroupActivitiesManager.Activity(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 4);
    return 0;
  }
  return result;
}

unint64_t sub_1001F0A14()
{
  unint64_t result;

  result = qword_1004C2630;
  if (!qword_1004C2630)
  {
    result = swift_getWitnessTable(&unk_1003D343C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2630);
  }
  return result;
}

unint64_t sub_1001F0A5C()
{
  unint64_t result;

  result = qword_1004C2638;
  if (!qword_1004C2638)
  {
    result = swift_getWitnessTable(&unk_1003D33AC, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2638);
  }
  return result;
}

unint64_t sub_1001F0AA4()
{
  unint64_t result;

  result = qword_1004C2640;
  if (!qword_1004C2640)
  {
    result = swift_getWitnessTable(&unk_1003D33D4, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2640);
  }
  return result;
}

uint64_t sub_1001F0AE8(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD00000000000001BLL)
  {
    v4 = 0x80000001003AF090;
    if (a2 == 0x80000001003AF090)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x80000001003AF090, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001003AF0B0)
  {
    swift_bridgeObjectRelease(0x80000001003AF0B0);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001003AF0B0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1001F0BD0()
{
  unint64_t result;

  result = qword_1004C2650;
  if (!qword_1004C2650)
  {
    result = swift_getWitnessTable(&unk_1003D380C, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2650);
  }
  return result;
}

unint64_t sub_1001F0C14()
{
  unint64_t result;

  result = qword_1004C2660;
  if (!qword_1004C2660)
  {
    result = swift_getWitnessTable(&unk_1003D37BC, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2660);
  }
  return result;
}

unint64_t sub_1001F0C58()
{
  unint64_t result;

  result = qword_1004C2668;
  if (!qword_1004C2668)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1004C2668);
  }
  return result;
}

unint64_t sub_1001F0C9C()
{
  unint64_t result;

  result = qword_1004C2680;
  if (!qword_1004C2680)
  {
    result = swift_getWitnessTable(&unk_1003D377C, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_1004C2680);
  }
  return result;
}

uint64_t sub_1001F0CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001F0CF0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001F0CF8()
{
  unint64_t result;

  result = qword_1004C26A0;
  if (!qword_1004C26A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1004C26A0);
  }
  return result;
}

double sub_1001F0D3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E1F20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t sub_1001F0D48()
{
  unint64_t result;

  result = qword_1004C26F8;
  if (!qword_1004C26F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Errno, &type metadata for Errno);
    atomic_store(result, (unint64_t *)&qword_1004C26F8);
  }
  return result;
}

void sub_1001F0D8C(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 3:
      swift_errorRelease(a1);
      break;
    case 1:
      swift_release(a1);
      break;
    case 2:

      break;
    default:
      return;
  }
}

uint64_t sub_1001F0DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v18;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v18 = *(_QWORD *)(v1 + 64);
  v4 = sub_1000057B4(&qword_1004C2708);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = (v18 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + v6 + 8) & ~v6;
  v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_release(*(_QWORD *)(v0 + v13));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v14, v4, v16);

  return swift_deallocObject(v0, v15 + 8, v2 | v6 | 7);
}

uint64_t sub_1001F0F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_1000057B4(&qword_1004C2708) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + v6);
  v12 = v1 + v5;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_1004C2714);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10002F6EC;
  return sub_1001E2114(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t sub_1001F1020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_1000057B4(&qword_1004C2708);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v3, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v22 = v8;
    v11 = v4;
    v12 = v9 + *(int *)(v10 + 28);
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    v21 = v12;
    v15 = v12;
    v4 = v11;
    v8 = v22;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
  }
  v16 = v2 | v7 | 7;
  v17 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + v7 + 8) & ~v7;
  v19 = swift_release(*(_QWORD *)(v0 + v17));
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v18, v5, v19);
  return swift_deallocObject(v0, v18 + v8, v16);
}

double sub_1001F117C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004C2708) - 8) + 80);
  return sub_1001E2614(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

uint64_t sub_1001F11FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v18 = *(_QWORD *)(v1 + 64);
  v4 = sub_1000057B4(&qword_1004C2708);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = v2 | v6 | 7;
  v14 = (v18 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + v6 + 8) & ~v6;
  v16 = swift_release(*(_QWORD *)(v0 + v14));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v15, v4, v16);
  return swift_deallocObject(v0, v15 + v7, v13);
}

uint64_t sub_1001F135C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004C1F90) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004C2708) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1004C2724);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10002F6EC;
  return sub_1001E27FC(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1001F143C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001F1478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

_QWORD *sub_1001F14B4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1001F14EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000057B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

unint64_t sub_1001F1530()
{
  unint64_t result;

  result = qword_1004C2790;
  if (!qword_1004C2790)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities, &type metadata for ApplicationCapabilities);
    atomic_store(result, (unint64_t *)&qword_1004C2790);
  }
  return result;
}

uint64_t sub_1001F1574()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001F1598(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1001E6510(a1, v1);
}

double sub_1001F15A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1001E7228(a1, v1);
}

uint64_t sub_1001F15A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F15D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E731C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001F15DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E7C18(a1, v1);
}

uint64_t sub_1001F15E4(uint64_t a1)
{
  sub_1001F163C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80));
  return a1;
}

uint64_t sub_1001F163C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v11;
  uint64_t result;

  if (a4)
  {
    v11 = a11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001F16B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1004C27FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[23] = v2;
  return swift_task_switch(sub_1001EAFF0, 0, 0);
}

uint64_t sub_1001F171C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1004C280C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  v3[10] = v2;
  return swift_task_switch(sub_1001EB354, 0, 0);
}

uint64_t sub_1001F1780()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C281C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  v2 = (_QWORD *)swift_task_alloc(dword_1004C282C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return sub_1001E9074();
}

id sub_1001F17E8(uint64_t a1, void *a2)
{
  id result;

  if (a2 != (void *)1)
    return a2;
  return result;
}

void sub_1001F17F8(void *a1)
{
  sub_1001EB574(a1);
}

uint64_t sub_1001F1800()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F1814()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C2894);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return sub_1001EB898();
}

uint64_t sub_1001F1884()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C28A4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return sub_1001EB900();
}

void sub_1001F18F0(id *a1)
{
  uint64_t v1;

  sub_1001EB9D8(a1, v1);
}

uint64_t sub_1001F18F8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C28CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  v2 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001F1964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1004C28EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002E8E0;
  v3[2] = v2;
  return swift_task_switch(sub_1001EBBE0, 0, 0);
}

uint64_t sub_1001F19C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000970C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_1001F1ADC(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  return sub_1001E4B7C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001F1B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000970C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001F1C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1004C291C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002F6EC;
  v6 = (_QWORD *)swift_task_alloc(dword_1004C290C);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_10002F6EC;
  return sub_1001E3C98(v3, v4);
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.InitializerError()
{
  return &type metadata for CodableModelObjectIdentity.InitializerError;
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.CodingKey()
{
  return &type metadata for CodableModelObjectIdentity.CodingKey;
}

uint64_t _s9MusicCore22GroupActivitiesManagerC8ActivityV9CodingKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F1D48 + 4 * byte_1003D2F97[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F1D7C + 4 * byte_1003D2F92[v4]))();
}

uint64_t sub_1001F1D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F1D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F1D8CLL);
  return result;
}

uint64_t sub_1001F1D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F1DA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F1DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F1DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableListeningProperties.CodingKey()
{
  return &type metadata for CodableListeningProperties.CodingKey;
}

unint64_t sub_1001F1DCC()
{
  unint64_t result;

  result = qword_1004C2930;
  if (!qword_1004C2930)
  {
    result = swift_getWitnessTable(&unk_1003D3634, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2930);
  }
  return result;
}

unint64_t sub_1001F1E14()
{
  unint64_t result;

  result = qword_1004C2938;
  if (!qword_1004C2938)
  {
    result = swift_getWitnessTable(&unk_1003D36EC, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2938);
  }
  return result;
}

unint64_t sub_1001F1E5C()
{
  unint64_t result;

  result = qword_1004C2940;
  if (!qword_1004C2940)
  {
    result = swift_getWitnessTable(&unk_1003D3754, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_1004C2940);
  }
  return result;
}

unint64_t sub_1001F1EA4()
{
  unint64_t result;

  result = qword_1004C2948;
  if (!qword_1004C2948)
  {
    result = swift_getWitnessTable(&unk_1003D365C, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2948);
  }
  return result;
}

unint64_t sub_1001F1EEC()
{
  unint64_t result;

  result = qword_1004C2950;
  if (!qword_1004C2950)
  {
    result = swift_getWitnessTable(&unk_1003D3684, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2950);
  }
  return result;
}

unint64_t sub_1001F1F34()
{
  unint64_t result;

  result = qword_1004C2958;
  if (!qword_1004C2958)
  {
    result = swift_getWitnessTable(&unk_1003D35A4, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2958);
  }
  return result;
}

unint64_t sub_1001F1F7C()
{
  unint64_t result;

  result = qword_1004C2960;
  if (!qword_1004C2960)
  {
    result = swift_getWitnessTable(&unk_1003D35CC, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004C2960);
  }
  return result;
}

uint64_t sub_1001F1FC0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v5 = 0xEA00000000007265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(7955819, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1001F20AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x616C436C65646F6DLL && a2 == 0xEE00656D614E7373)
  {
    swift_bridgeObjectRelease(0xEE00656D614E7373);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x616C436C65646F6DLL, 0xEE00656D614E7373, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void MPCPlayerCommandDialog.alert(context:completion:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unsigned int v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD v117[7];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  void *v123;
  uint64_t v124;

  v7 = v6;
  v100 = a5;
  v99 = a4;
  v105 = a3;
  v104 = a2;
  v103 = a1;
  v94 = a6;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for String.LocalizationValue(0);
  v12 = *(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v93 - v16;
  v98 = type metadata accessor for UUID(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v7;
  v19 = objc_msgSend(v7, "actions");
  v20 = sub_10000598C(0, &qword_1004C2980, MPCPlayerCommandDialogAction_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v86 = v21;
    else
      v86 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v21);
  if (!v22)
  {
    v65 = sub_1000057B4(&qword_1004BF6E0);
    v21 = swift_allocObject(v65, 88, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1003C64D0;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    (*(void (**)(char *, char *, _QWORD *))(v12 + 16))(v15, v17, v11);
    if (qword_1004B8A10 == -1)
      goto LABEL_36;
    goto LABEL_57;
  }
  v11 = objc_msgSend(v95, "actions");
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v20);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v11 = (_QWORD *)v23;
    else
      v11 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v23);
    if (v12)
      goto LABEL_6;
LABEL_49:
    swift_bridgeObjectRelease(v23);
    v116 = (char *)_swiftEmptyArrayStorage;
LABEL_50:
    v87 = objc_msgSend(v95, "localizedTitle");
    if (v87)
    {
      v88 = v87;
      v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
      v82 = v89;

    }
    else
    {
      v80 = 0;
      v82 = 0;
    }
    v83 = objc_msgSend(v95, "localizedMessage");
    if (!v83)
      goto LABEL_40;
LABEL_54:
    v90 = v83;
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v85 = v91;

    goto LABEL_55;
  }
  v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_49;
LABEL_6:
  if (v12 >= 1)
  {
    v24 = 0;
    v107 = v23 & 0xC000000000000001;
    v116 = (char *)_swiftEmptyArrayStorage;
    v106 = MPCPlayerCommandDialogActionTitlePlayOnlyForMe;
    v102 = v23;
    v101 = v12;
    while (1)
    {
      if (v107)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v23);
      else
        v25 = *(id *)(v23 + 8 * v24 + 32);
      v26 = v25;
      v27 = objc_msgSend(v25, "localizedTitle");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      if (v28 == v31 && v30 == v32)
      {
        swift_bridgeObjectRelease_n(v30, 2);
      }
      else
      {
        v34 = v32;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v34);
        if ((v35 & 1) == 0)
        {
          v36 = objc_msgSend(v26, "localizedTitle");
          v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v38 = v37;

          v39 = objc_msgSend(v26, "type");
          if (v39 == (id)2)
            v40 = 1;
          else
            v40 = 2;
          if (v39 == (id)1)
            v41 = 0;
          else
            v41 = v40;
          v42 = (_QWORD *)swift_allocObject(&unk_10047DC58, 40, 7);
          v43 = v99;
          v42[2] = v26;
          v42[3] = v43;
          v44 = v100;
          v42[4] = v100;
          v112 = v26;
          v45 = v26;
          sub_10000DCE8(v43, v44);
          v46 = v96;
          v47 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
          v48 = UUID.uuidString.getter(v47);
          v50 = v49;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v46, v98);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain(v42);
          v51 = &unk_1004C2990;
          v52 = &unk_1004C2990;
          v114 = v48;
          v110 = v48;
          v53 = v50;
          v109 = v113;
          v111 = v38;
          v54 = v38;
          v115 = v41;
          v55 = v41;
          v56 = (uint64_t)v42;
          goto LABEL_28;
        }
      }
      sub_1001F62F4(v103, v104, v105, (uint64_t)v117);
      v50 = v117[1];
      v57 = v117[2];
      v58 = v117[3];
      v52 = (void *)v117[5];
      v114 = v117[0];
      v115 = v117[4];
      v42 = (_QWORD *)v117[6];
      sub_10000FD10((uint64_t)v117, (uint64_t)&v118, &qword_1004BD6A8);
      v53 = v119;
      if (v119)
      {
        v112 = v26;
        v113 = v57;
        v110 = v118;
        v54 = v121;
        v109 = v120;
        v55 = v122;
        v59 = v58;
        v51 = v123;
        v56 = v124;
        swift_bridgeObjectRetain();
        v111 = v59;
        swift_bridgeObjectRetain();
        sub_10000DCE8((uint64_t)v52, (uint64_t)v42);
LABEL_28:
        v108 = (uint64_t)v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10000DCE8((uint64_t)v51, v56);
        v60 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) != 0)
          v61 = v116;
        else
          v61 = sub_10005DD14(0, *((_QWORD *)v116 + 2) + 1, 1, v116);
        v63 = *((_QWORD *)v61 + 2);
        v62 = *((_QWORD *)v61 + 3);
        if (v63 >= v62 >> 1)
          v61 = sub_10005DD14((char *)(v62 > 1), v63 + 1, 1, v61);
        *((_QWORD *)v61 + 2) = v63 + 1;
        v116 = v61;
        v64 = &v61[56 * v63];
        *((_QWORD *)v64 + 4) = v110;
        *((_QWORD *)v64 + 5) = v53;
        *((_QWORD *)v64 + 6) = v109;
        *((_QWORD *)v64 + 7) = v54;
        v64[64] = v60;
        *((_QWORD *)v64 + 9) = v51;
        *((_QWORD *)v64 + 10) = v56;
        sub_1001F61A4(v114, v50, v113, v111, v115, v108, (uint64_t)v42);
        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v53);

        sub_10000DCF8((uint64_t)v51, v56);
        v23 = v102;
        v12 = v101;
        goto LABEL_9;
      }

LABEL_9:
      if (v12 == ++v24)
      {
        swift_bridgeObjectRelease(v23);
        goto LABEL_50;
      }
    }
  }
  __break(1u);
LABEL_57:
  swift_once(&qword_1004B8A10, sub_10002B2B8);
LABEL_36:
  v66 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v67 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v66, v10, 0, 0, 256);
  v69 = v68;
  (*(void (**)(char *, _QWORD *))(v12 + 8))(v17, v11);
  v70 = swift_allocObject(&unk_10047DC80, 32, 7);
  v71 = v99;
  v72 = v100;
  *(_QWORD *)(v70 + 16) = v99;
  *(_QWORD *)(v70 + 24) = v72;
  sub_10000DCE8(v71, v72);
  v73 = v96;
  v74 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v75 = UUID.uuidString.getter(v74);
  v77 = v76;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v98);
  *(_QWORD *)(v21 + 32) = v75;
  *(_QWORD *)(v21 + 40) = v77;
  *(_QWORD *)(v21 + 48) = v67;
  *(_QWORD *)(v21 + 56) = v69;
  *(_BYTE *)(v21 + 64) = 0;
  *(_QWORD *)(v21 + 72) = &unk_1004C29A0;
  *(_QWORD *)(v21 + 80) = v70;
  v116 = (char *)v21;
  v78 = objc_msgSend(v95, "localizedTitle");
  if (v78)
  {
    v79 = v78;
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v82 = v81;

  }
  else
  {
    v80 = 0;
    v82 = 0;
  }
  v83 = objc_msgSend(v95, "localizedMessage");
  if (v83)
    goto LABEL_54;
LABEL_40:
  v84 = 0;
  v85 = 0;
LABEL_55:
  v92 = v94;
  *v94 = v80;
  v92[1] = v82;
  v92[2] = v84;
  v92[3] = v85;
  *((_BYTE *)v92 + 32) = 0;
  v92[5] = (uint64_t)v116;
  v92[6] = 0;
}

BOOL static SharedListening.isMusicItemTypeSupported(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  if (qword_1004B8E10 != -1)
    swift_once(&qword_1004B8E10, sub_1001F5714);
  v2 = *((_QWORD *)off_1004C2978 + 2);
  if (!v2)
    return 0;
  v3 = (uint64_t *)((char *)off_1004C2978 + 32);
  v4 = v2 - 1;
  do
  {
    v5 = *v3;
    v3 += 2;
    result = v5 == a1;
  }
  while (v5 != a1 && v4-- != 0);
  return result;
}

uint64_t Logger.sharedListening.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1004B8E18 != -1)
    swift_once(&qword_1004B8E18, sub_1001F5D54);
  v0 = type metadata accessor for Logger(0);
  return sub_100039D34(v0, (uint64_t)static Logger.sharedListening);
}

uint64_t *SharedListening.Event.properties.unsafeMutableAddressor()
{
  if (qword_1004B8E00 != -1)
    swift_once(&qword_1004B8E00, sub_1001F51FC);
  return &static SharedListening.Event.properties;
}

uint64_t SharedListening.Event.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[56];

  sub_1001F6690(a1, (uint64_t)v4);
  return sub_10000FD10((uint64_t)v4, a2, (uint64_t *)&unk_1004BF840);
}

uint64_t static SharedListening.buildSharedSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1004C29B0 + dword_1004C29B0);
  v3 = (_QWORD *)swift_task_alloc(unk_1004C29B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001F2C28;
  return v5(a1);
}

uint64_t sub_1001F2C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t static SharedListening.buildSharedSession(with:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004C29C0 + dword_1004C29C0);
  v9 = (_QWORD *)swift_task_alloc(unk_1004C29C4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10002E8E0;
  return v11(a1, a2, a3, a4);
}

uint64_t SharedListening.Event.Content.title.getter(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  uint64_t v30;
  id v31;
  uint64_t ObjectType;
  Swift::String v33;
  _BYTE v34[16];
  unint64_t v35;
  unint64_t v36;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v34[-v12];
  if ((a2 & 1) == 0)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, "title");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
LABEL_16:

      return v17;
    }
    String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v23 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v23, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    goto LABEL_21;
  }
  objc_opt_self(MPModelAlbum);
  v18 = swift_dynamicCastObjCClass(a1);
  if (v18)
  {
    v19 = (void *)v18;
    v14 = a1;
    v20 = objc_msgSend(v19, "title");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xED00006D75626C41;
LABEL_18:
      String.LocalizationValue.init(stringLiteral:)(v21, v22);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v30 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v30, v6, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

LABEL_21:
      return v24;
    }
    goto LABEL_15;
  }
  objc_opt_self(MPModelPlaylist);
  v25 = swift_dynamicCastObjCClass(a1);
  if (v25)
  {
    v26 = (void *)v25;
    v14 = a1;
    v20 = objc_msgSend(v26, "name");
    if (!v20)
    {
      v22 = 0x80000001003AA710;
      v21 = 0xD000000000000011;
      goto LABEL_18;
    }
LABEL_15:
    v16 = v20;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

    goto LABEL_16;
  }
  objc_opt_self(MPModelRadioStation);
  v27 = swift_dynamicCastObjCClass(a1);
  if (v27)
  {
    v28 = (void *)v27;
    v14 = a1;
    v20 = objc_msgSend(v28, "name");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xEF6E6F6974617453;
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  v31 = a1;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  v35 = 0xD000000000000020;
  v36 = 0x80000001003AF2C0;
  ObjectType = swift_getObjectType();
  v33._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v35, v36, "MusicCore/SharedListening.swift", 31, 2, 49, 0);
  __break(1u);
  return result;
}

void sub_1001F3168(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  const char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint32_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *oslog;
  uint64_t v51;
  char v52;
  _QWORD v53[3];
  char v54[8];
  uint64_t v55;

  switch(a2)
  {
    case 1:
      v3 = qword_1004B8DF8;
      swift_retain(a1);
      if (v3 != -1)
        swift_once(&qword_1004B8DF8, sub_1001EC268);
      v4 = type metadata accessor for Logger(0);
      sub_100039D34(v4, (uint64_t)static Logger.groupActivities);
      v5 = swift_retain_n(a1, 2);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.error.getter(v6);
      if (os_log_type_enabled(v6, v7))
      {
        v8 = swift_slowAlloc(12, -1);
        v9 = swift_slowAlloc(32, -1);
        v51 = v9;
        *(_DWORD *)v8 = 136446210;
        v55 = (uint64_t)a1;
        swift_retain(a1);
        v10 = sub_1000057B4(&qword_1004C27E8);
        v11 = (char *)String.init<A>(describing:)(&v55, v10);
        *(_QWORD *)(v8 + 4) = sub_1000393D0(v11, v12, &v51);
        swift_bridgeObjectRelease();
        sub_1001F0D8C(a1, 1);
        sub_1001F0D8C(a1, 1);
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Cannot joined invalid session=%{public}s", (uint8_t *)v8, 0xCu);
        swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v9, -1, -1);
        swift_slowDealloc(v8, -1, -1);

        sub_1001F0D8C(a1, 1);
      }
      else
      {
        sub_1001F0D8C(a1, 1);
        sub_1001F0D8C(a1, 1);

        swift_release(a1);
      }
      return;
    case 2:
      v13 = objc_msgSend(a1, "error");
      if (qword_1004B8E18 != -1)
        swift_once(&qword_1004B8E18, sub_1001F5D54);
      v14 = type metadata accessor for Logger(0);
      sub_100039D34(v14, (uint64_t)static Logger.sharedListening);
      v15 = v13;
      oslog = Logger.logObject.getter(v15);
      v16 = static os_log_type_t.error.getter(oslog);
      if (!os_log_type_enabled(oslog, v16))
      {

        sub_1001F0D8C(a1, 2);
        goto LABEL_38;
      }
      v17 = swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v55 = v18;
      *(_DWORD *)v17 = 136446210;
      v51 = (uint64_t)v13;
      v52 = 0;
      v19 = v15;
      v20 = (char *)String.init<A>(describing:)(&v51, &type metadata for SharedListening.ErrorHandling.Error);
      *(_QWORD *)(v17 + 4) = sub_1000393D0(v20, v21, &v55);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "Creation error %{public}s", (uint8_t *)v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
      sub_1001F0D8C(a1, 2);

      return;
    case 3:
      if (a1)
      {
        swift_getErrorValue(a1, v54, v53);
        v22 = v53[1];
        v23 = v53[2];
        swift_errorRetain(a1);
        v24 = Error.localizedDescription.getter(v22, v23);
        v26 = v25;
      }
      else
      {
        v24 = 0;
        v26 = 0;
      }
      v32 = (char *)Optional<A>.description.getter(v24, v26);
      v34 = v33;
      swift_bridgeObjectRelease();
      if (qword_1004B8DF8 != -1)
        swift_once(&qword_1004B8DF8, sub_1001EC268);
      v35 = type metadata accessor for Logger(0);
      sub_100039D34(v35, (uint64_t)static Logger.groupActivities);
      v36 = swift_bridgeObjectRetain();
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        v51 = v40;
        *(_DWORD *)v39 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v39 + 4) = sub_1000393D0(v32, v34, &v51);
        swift_bridgeObjectRelease_n(v34, 3);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Could not add intent to the player: %{public}s", (uint8_t *)v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

        sub_1001F0D8C(a1, 3);
      }
      else
      {
        sub_1001F0D8C(a1, 3);

        swift_bridgeObjectRelease_n(v34, 2);
      }
      return;
    case 4:
      if (a1 == (void *)3)
      {
        if (qword_1004B8E18 != -1)
          swift_once(&qword_1004B8E18, sub_1001F5D54);
        v41 = type metadata accessor for Logger(0);
        v42 = sub_100039D34(v41, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v42);
        v29 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v29))
          goto LABEL_38;
        v30 = swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        v31 = "Building session failed because the queue is empty";
LABEL_32:
        v43 = oslog;
        v44 = v29;
        v45 = (uint8_t *)v30;
        v46 = 2;
LABEL_37:
        _os_log_impl((void *)&_mh_execute_header, v43, v44, v31, v45, v46);
        swift_slowDealloc(v30, -1, -1);
LABEL_38:

        return;
      }
      if (a1 == (void *)4)
      {
        if (qword_1004B8E18 != -1)
          swift_once(&qword_1004B8E18, sub_1001F5D54);
        v47 = type metadata accessor for Logger(0);
        v48 = sub_100039D34(v47, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v48);
        v49 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v49))
          goto LABEL_38;
        v30 = swift_slowAlloc(8, -1);
        *(_DWORD *)v30 = 67109120;
        *(_DWORD *)(v30 + 4) = FigOutputMonitorIsScreenProbablyBeingRecorded(v30) != 0;
        v31 = "Presenting not supported content alert (isScreenSharing=%{BOOL}d)";
        v43 = oslog;
        v44 = v49;
        v45 = (uint8_t *)v30;
        v46 = 8;
        goto LABEL_37;
      }
      if (a1 == (void *)5)
      {
        if (qword_1004B8E18 != -1)
          swift_once(&qword_1004B8E18, sub_1001F5D54);
        v27 = type metadata accessor for Logger(0);
        v28 = sub_100039D34(v27, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v28);
        v29 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v29))
          goto LABEL_38;
        v30 = swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        v31 = "Cannot add intent for the current route.";
        goto LABEL_32;
      }
      return;
    default:
      return;
  }
}

void sub_1001F38C8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, unsigned __int8 a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  __int128 v57;
  __int128 v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  void *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  int IsScreenProbablyBeingRecorded;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  Swift::String v136;
  __int128 v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  void *v143;
  char *v144;
  __int128 v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void *v156;
  _QWORD *v157;
  _QWORD v158[7];
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;

  v156 = a4;
  v153 = a2;
  v152 = a1;
  v157 = a6;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v146 - v21;
  v23 = a5;
  if (a5 == 2)
  {
    v150 = a3;
    v149 = v19;
    v51 = v15;
    v52 = v14;
    v53 = v156;
    v54 = v156;
    v55 = objc_msgSend(v54, "dialog");
    if (v55)
    {
      v56 = v55;
      MPCPlayerCommandDialog.alert(context:completion:)(v152, v153, v150, 0, 0, (uint64_t *)&v159);
      v57 = v159;
      v58 = v160;
      v28 = v161;
      v29 = v162;
      v30 = v163;

      v24 = (void *)v57;
      sub_1001F0D8C(v53, 2);
      v25 = (char *)*((_QWORD *)&v57 + 1);
      v27 = *((_QWORD *)&v58 + 1);
      v26 = v58;
LABEL_51:
      v31 = v157;
      goto LABEL_52;
    }
    v146 = v54;
    v74 = objc_msgSend(v54, "error");
    v14 = v52;
    v15 = v51;
    v19 = v149;
    v155 = v11;
    v154 = v9;
    if (v74)
    {
      *(_QWORD *)&v159 = v74;
      v75 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      type metadata accessor for MPCPlayerEnqueueError(0);
      v77 = v76;
      if ((swift_dynamicCast(v158, &v159, v75, v76, 6) & 1) != 0)
      {
        v78 = v8;
        v79 = (void *)v158[0];
        v80 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
        _BridgedStoredNSError.code.getter(&v159, v77, v80);

        if ((_QWORD)v159 == 3)
        {
          sub_1001F0D8C(v156, 2);
          v32 = v78;
          a3 = v150;
          goto LABEL_20;
        }
        v8 = v78;
      }
    }
    v151 = v8;
    String.LocalizationValue.init(stringLiteral:)(0x100000000000002DLL, 0x80000001003AF350);
    v121 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v121(v19, v22, v15);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v122 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v122, v14, 0, 0, 256);
    v147 = v123;
    v124 = *(void (**)(char *, uint64_t))(v16 + 8);
    v124(v22, v15);
    v125 = sub_1000057B4(&qword_1004BF6E0);
    v29 = (char *)swift_allocObject(v125, 88, 7);
    *((_OWORD *)v29 + 1) = xmmword_1003C64D0;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v121(v19, v22, v15);
    v126 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v127 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v126, v14, 0, 0, 256);
    v129 = v128;
    v124(v22, v15);
    v130 = v155;
    v131 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v132 = UUID.uuidString.getter(v131);
    v134 = v133;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v130, v151);
    *((_QWORD *)v29 + 4) = v132;
    *((_QWORD *)v29 + 5) = v134;
    *((_QWORD *)v29 + 6) = v127;
    *((_QWORD *)v29 + 7) = v129;
    v29[64] = 0;
    *((_QWORD *)v29 + 9) = 0;
    *((_QWORD *)v29 + 10) = 0;
    *(_QWORD *)&v159 = 0;
    *((_QWORD *)&v159 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v159 = 0xD00000000000001CLL;
    *((_QWORD *)&v159 + 1) = 0x80000001003AF410;
    v158[0] = objc_msgSend(v146, "error");
    v135 = sub_1000057B4(&qword_1004C0630);
    v136._countAndFlagsBits = String.init<A>(describing:)(v158, v135);
    String.append(_:)(v136);
    swift_bridgeObjectRelease();
    v137 = v159;
    v138 = sub_1000B8F50((uint64_t)_swiftEmptyArrayStorage);
    sub_1000FE58C(v137, *((uint64_t *)&v137 + 1), 0xD000000000000032, 0x80000001003A86D0, (uint64_t)_swiftEmptyArrayStorage, v138, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v158);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000FD10((uint64_t)v158, (uint64_t)&v159, &qword_1004BD6A8);
    if (*((_QWORD *)&v159 + 1))
    {
      v164 = v159;
      v165 = v160;
      v139 = (uint64_t)v162;
      v166 = v161;
      v140 = v163;
      v167 = v159;
      v168 = v160;
      sub_1000795C8((uint64_t)&v167);
      sub_1000795C8((uint64_t)&v168);
      sub_10000DCE8(v139, v140);
      v142 = *((_QWORD *)v29 + 2);
      v141 = *((_QWORD *)v29 + 3);
      if (v142 >= v141 >> 1)
        v29 = sub_10005DD14((char *)(v141 > 1), v142 + 1, 1, v29);
      v143 = v156;
      *((_QWORD *)v29 + 2) = v142 + 1;
      v144 = &v29[56 * v142];
      v145 = v165;
      *((_OWORD *)v144 + 2) = v164;
      *((_OWORD *)v144 + 3) = v145;
      *((_QWORD *)v144 + 8) = v166;
      *((_QWORD *)v144 + 9) = v139;
      *((_QWORD *)v144 + 10) = v140;
      sub_1001F0D8C(v143, 2);
      sub_100072644((uint64_t)&v167);
      sub_100072644((uint64_t)&v168);
      sub_10000DCF8(v139, v140);
    }
    else
    {
      sub_1001F0D8C(v156, 2);
    }
    v24 = 0;
    v25 = 0;
    v28 = 0;
    v30 = 0;
    v26 = v148;
    v27 = v147;
    goto LABEL_51;
  }
  v155 = v11;
  v154 = v9;
  if (a5 == 3)
  {
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v59 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v59(v19, v22, v15);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v60 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v153 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v60, v14, 0, 0, 256);
    v152 = v61;
    v62 = *(void (**)(char *, uint64_t))(v16 + 8);
    v62(v22, v15);
    v63 = v155;
    v64 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v150 = UUID.uuidString.getter(v64);
    v149 = v65;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v63, v8);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003AD550);
    v59(v19, v22, v15);
    v66 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v66, v14, 0, 0, 256);
    v68 = v67;
    v62(v22, v15);
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000050, 0x80000001003AF380);
    v59(v19, v22, v15);
    v69 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v70 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v69, v14, 0, 0, 256);
    v72 = v71;
    v62(v22, v15);
    v73 = sub_1000057B4(&qword_1004BF6E0);
    v49 = swift_allocObject(v73, 88, 7);
    v25 = v68;
    v27 = v72;
    v29 = (char *)v49;
    v26 = v70;
    v28 = 0;
    v30 = 0;
    *(_OWORD *)(v49 + 16) = xmmword_1003C64D0;
    *(_QWORD *)(v49 + 32) = v150;
    v24 = v156;
    v50 = (char *)&v167 + 8;
    goto LABEL_15;
  }
  v151 = v8;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = v157;
  if (v23 == 4)
  {
    if (v156 == (void *)3)
    {
      String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x80000001003AF430);
      v87 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v87(v19, v22, v15);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v88 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v88, v14, 0, 0, 256);
      v90 = v89;
      v91 = *(void (**)(char *, uint64_t))(v16 + 8);
      v91(v22, v15);
      v92 = sub_1000057B4(&qword_1004BF6E0);
      v29 = (char *)swift_allocObject(v92, 88, 7);
      *((_OWORD *)v29 + 1) = xmmword_1003C64D0;
      String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
      v87(v19, v22, v15);
      v93 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v94 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v93, v14, 0, 0, 256);
      v96 = v95;
      v91(v22, v15);
      v97 = v155;
      v98 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v99 = UUID.uuidString.getter(v98);
      v101 = v100;
      (*(void (**)(char *, uint64_t))(v154 + 8))(v97, v151);
      v25 = v90;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v30 = 0;
      *((_QWORD *)v29 + 4) = v99;
      *((_QWORD *)v29 + 5) = v101;
      v24 = v156;
      *((_QWORD *)v29 + 6) = v94;
      *((_QWORD *)v29 + 7) = v96;
      v29[64] = 0;
      *((_QWORD *)v29 + 9) = 0;
      *((_QWORD *)v29 + 10) = 0;
      goto LABEL_51;
    }
    v32 = v151;
    if (v156 != (void *)4)
    {
      if (v156 == (void *)5)
      {
        String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
        v33 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        v33(v19, v22, v15);
        if (qword_1004B8A10 != -1)
          swift_once(&qword_1004B8A10, sub_10002B2B8);
        v34 = qword_1004F4630;
        static Locale.current.getter((id)qword_1004F4630);
        v153 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v34, v14, 0, 0, 256);
        v152 = v35;
        v36 = *(void (**)(char *, uint64_t))(v16 + 8);
        v36(v22, v15);
        v37 = v155;
        v38 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
        v39 = UUID.uuidString.getter(v38);
        v150 = v40;
        (*(void (**)(char *, uint64_t))(v154 + 8))(v37, v32);
        String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003AD4D0);
        v33(v19, v22, v15);
        v41 = qword_1004F4630;
        static Locale.current.getter((id)qword_1004F4630);
        v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v41, v14, 0, 0, 256);
        v43 = v42;
        v36(v22, v15);
        String.LocalizationValue.init(stringLiteral:)(0x100000000000002DLL, 0x80000001003AF350);
        v33(v19, v22, v15);
        v44 = qword_1004F4630;
        static Locale.current.getter((id)qword_1004F4630);
        v45 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v44, v14, 0, 0, 256);
        v47 = v46;
        v36(v22, v15);
        v48 = sub_1000057B4(&qword_1004BF6E0);
        v49 = swift_allocObject(v48, 88, 7);
        v25 = v43;
        v27 = v47;
        v29 = (char *)v49;
        v26 = v45;
        v28 = 0;
        v30 = 0;
        *(_OWORD *)(v49 + 16) = xmmword_1003C64D0;
        *(_QWORD *)(v49 + 32) = v39;
        v24 = v156;
        v50 = (char *)&v168;
LABEL_15:
        *(_QWORD *)(v49 + 40) = *((_QWORD *)v50 - 32);
        *(_QWORD *)(v49 + 48) = v153;
        *(_QWORD *)(v49 + 56) = v152;
        *(_BYTE *)(v49 + 64) = 2;
        *(_QWORD *)(v49 + 72) = 0;
        *(_QWORD *)(v49 + 80) = 0;
        goto LABEL_51;
      }
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      goto LABEL_52;
    }
LABEL_20:
    IsScreenProbablyBeingRecorded = FigOutputMonitorIsScreenProbablyBeingRecorded(v20);
    v82 = v155;
    if (IsScreenProbablyBeingRecorded)
    {
      String.LocalizationValue.init(stringLiteral:)(0x100000000000002CLL, 0x80000001003AF3E0);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, v15);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v83 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v83, v14, 0, 0, 256);
      v147 = v84;
      v85 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      v86 = 0;
      v149 = 0;
    }
    else
    {
      v150 = a3;
      v102 = v32;
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x80000001003AD570);
      v103 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v103(v19, v22, v15);
      if (qword_1004B8A10 != -1)
        swift_once(&qword_1004B8A10, sub_10002B2B8);
      v104 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v104, v14, 0, 0, 256);
      v147 = v105;
      v106 = *(void (**)(char *, uint64_t))(v16 + 8);
      v106(v22, v15);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003AD550);
      v103(v19, v22, v15);
      v107 = qword_1004F4630;
      static Locale.current.getter((id)qword_1004F4630);
      v86 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v107, v14, 0, 0, 256);
      v149 = v108;
      v85 = ((uint64_t (*)(char *, uint64_t))v106)(v22, v15);
      v32 = v102;
      v82 = v155;
      a3 = v150;
    }
    v109 = FigOutputMonitorIsScreenProbablyBeingRecorded(v85);
    v156 = v86;
    v110 = a3;
    if (v109)
    {
      if (qword_1004B92E0 != -1)
        swift_once(&qword_1004B92E0, sub_10020C04C);
      v111 = &static String.okButtonTitle;
    }
    else
    {
      if (qword_1004B92F0 != -1)
        swift_once(&qword_1004B92F0, sub_10020C0C0);
      v111 = &static String.cancelButtonTitle;
    }
    v113 = *v111;
    v112 = v111[1];
    swift_bridgeObjectRetain();
    v114 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v115 = UUID.uuidString.getter(v114);
    v117 = v116;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v82, v32);
    v118 = sub_1000057B4(&qword_1004BF6E0);
    v29 = (char *)swift_allocObject(v118, 88, 7);
    *((_OWORD *)v29 + 1) = xmmword_1003C64D0;
    *((_QWORD *)v29 + 4) = v115;
    *((_QWORD *)v29 + 5) = v117;
    *((_QWORD *)v29 + 6) = v113;
    *((_QWORD *)v29 + 7) = v112;
    v29[64] = 0;
    *((_QWORD *)v29 + 9) = 0;
    *((_QWORD *)v29 + 10) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001F62F4(v152, v153, v110, (uint64_t)v158);
    sub_10000FD10((uint64_t)v158, (uint64_t)&v159, &qword_1004BD6A8);
    if (*((_QWORD *)&v159 + 1))
    {
      v164 = v159;
      v165 = v160;
      v119 = (uint64_t)v162;
      v166 = v161;
      v120 = v163;
      v167 = v159;
      v168 = v160;
      sub_1000795C8((uint64_t)&v167);
      sub_1000795C8((uint64_t)&v168);
      sub_10000DCE8(v119, v120);
      v29 = sub_10005DD14((char *)1, 2, 1, v29);
      *((_QWORD *)v29 + 2) = 2;
      *(_OWORD *)(v29 + 88) = v164;
      *(_OWORD *)(v29 + 104) = v165;
      *((_QWORD *)v29 + 15) = v166;
      *((_QWORD *)v29 + 16) = v119;
      *((_QWORD *)v29 + 17) = v120;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100072644((uint64_t)&v167);
      sub_100072644((uint64_t)&v168);
      sub_10000DCF8(v119, v120);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v28 = 0;
    v30 = 0;
    v26 = v148;
    v27 = v147;
    v24 = v156;
    v25 = v149;
    goto LABEL_51;
  }
LABEL_52:
  *v31 = v24;
  v31[1] = v25;
  v31[2] = v26;
  v31[3] = v27;
  v31[4] = v28;
  v31[5] = v29;
  v31[6] = v30;
}

uint64_t static SharedListening.addIntent(_:sourceViewController:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1004C29D0 + dword_1004C29D0);
  v6 = (_QWORD *)swift_task_alloc(unk_1004C29D4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10002F6EC;
  return v8(a1, a3);
}

BOOL static SharedListening.isModelObjectTypeSupported(_:)(uint64_t a1)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  if (qword_1004B8E08 != -1)
    goto LABEL_16;
  while (1)
  {
    v2 = *((_QWORD *)off_1004C2970 + 2);
    if (!v2)
      return 0;
    if (*((_QWORD *)off_1004C2970 + 4) == a1)
      break;
    if (v2 == 1)
      return 0;
    for (i = 5; ; ++i)
    {
      v5 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v6 = *((_QWORD *)off_1004C2970 + i);
      result = v6 == a1;
      if (v6 == a1 || v5 == v2)
        return result;
    }
    __break(1u);
LABEL_16:
    swift_once(&qword_1004B8E08, sub_1001F5638);
  }
  return 1;
}

void __swiftcall SharedListening.Reaction.init(id:emoji:senderID:)(MusicCore::SharedListening::Reaction *__return_ptr retstr, Swift::String_optional id, Swift::String emoji, Swift::String_optional senderID)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  object = senderID.value._object;
  countAndFlagsBits = senderID.value._countAndFlagsBits;
  v6 = emoji._object;
  v7 = emoji._countAndFlagsBits;
  v8 = id.value._object;
  v9 = id.value._countAndFlagsBits;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v8)
  {
    v15 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v9 = UUID.uuidString.getter(v15);
    v8 = v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  retstr->id._countAndFlagsBits = v9;
  retstr->id._object = v8;
  retstr->emoji._countAndFlagsBits = v7;
  retstr->emoji._object = v6;
  retstr->senderID.value._countAndFlagsBits = countAndFlagsBits;
  retstr->senderID.value._object = object;
}

void SharedListening.Reaction.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v1[2];
  v6 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = v1[5];
  if (v7)
  {
    v8 = v1[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_1001F4CF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696A6F6D65;
  if (*v0 != 1)
    v1 = 0x44497265646E6573;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1001F4D44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001F96E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001F4D68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F969C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F4D90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F969C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SharedListening.Reaction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_1000057B4(&qword_1004C29D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F969C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SharedListening.Reaction.CodingKeys, &type metadata for SharedListening.Reaction.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v22 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v22, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v21 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v21, v5);
    v16 = v3[4];
    v17 = v3[5];
    v20 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int SharedListening.Reaction.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v0[5];
  if (v5)
  {
    v6 = v0[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

double SharedListening.Reaction.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1001F9814(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1001F5000(_QWORD *a1)
{
  return SharedListening.Reaction.encode(to:)(a1);
}

void sub_1001F5018(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1001F50E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  Hasher.init(_seed:)(v8);
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1001F51B8(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)v7, v8) & 1;
}

void sub_1001F51FC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  id v28;
  id v29;
  Class v30;
  Class v31;
  id v32;
  id v33;
  Class v34;
  Class v35;
  id v36;
  _BYTE v37[56];
  _BYTE v38[136];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BD740);
  inited = swift_initStackObject(v0, v38);
  *(_OWORD *)(inited + 16) = xmmword_1003C6320;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003C64D0;
  v5 = MPModelPropertyAlbumTitle;
  *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v4 + 40) = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self(MPPropertySet);
  v9 = objc_msgSend(v8, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v10;
  v11 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v11 + 40) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v8, "propertySetWithProperties:", v13);

  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v15;
  v16 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationName);
  *(_QWORD *)(v16 + 40) = v17;
  v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v8, "propertySetWithProperties:", v18);

  *(_QWORD *)(inited + 96) = v19;
  *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 112) = v20;
  v21 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v21 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v21 + 40) = v22;
  v23 = swift_initStackObject(v0, v37);
  *(_OWORD *)(v23 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v23 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v23 + 40) = v24;
  v25 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v25 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  *(_QWORD *)(v25 + 40) = v26;
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v8, "propertySetWithProperties:", v27);

  *(_QWORD *)(v23 + 48) = v28;
  sub_1000B8E38(v23);
  v29 = objc_allocWithZone((Class)MPPropertySet);
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10000598C(0, (unint64_t *)&qword_1004BDD80, MPPropertySet_ptr);
  v31 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v29, "initWithProperties:relationships:", v30, v31);

  *(_QWORD *)(inited + 120) = v32;
  sub_1000B8E38(inited);
  v33 = objc_allocWithZone((Class)MPPropertySet);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v33, "initWithProperties:relationships:", v34, v35);

  static SharedListening.Event.properties = (uint64_t)v36;
}

id static SharedListening.Event.properties.getter()
{
  if (qword_1004B8E00 != -1)
    swift_once(&qword_1004B8E00, sub_1001F51FC);
  return (id)static SharedListening.Event.properties;
}

uint64_t sub_1001F5638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1001F61F0();
  v1 = swift_allocObject(v0, ((*(unsigned int *)(v0 + 48) + 7) & 0x1FFFFFFF8) + 40, *(unsigned __int16 *)(v0 + 52) | 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6270;
  *(_QWORD *)(v1 + 32) = sub_10000598C(0, &qword_1004C2A10, MPModelAlbum_ptr);
  *(_QWORD *)(v1 + 40) = sub_10000598C(0, &qword_1004C2A18, MPModelSong_ptr);
  *(_QWORD *)(v1 + 48) = sub_10000598C(0, &qword_1004BC8C8, MPModelPlaylist_ptr);
  *(_QWORD *)(v1 + 56) = sub_10000598C(0, qword_1004BC8D8, MPModelRadioStation_ptr);
  result = sub_10000598C(0, &qword_1004C2A20, MPModelArtist_ptr);
  *(_QWORD *)(v1 + 64) = result;
  off_1004C2970 = (_UNKNOWN *)v1;
  return result;
}

void *sub_1001F5714()
{
  void *result;

  result = (void *)sub_1001F5730();
  off_1004C2978 = result;
  return result;
}

uint64_t sub_1001F5730()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1000057B4(&qword_1004C2A58);
  v1 = swift_allocObject(v0, 128, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1003C6FD0;
  *(_QWORD *)(v1 + 32) = type metadata accessor for Album(0);
  *(_QWORD *)(v1 + 40) = &protocol witness table for Album;
  *(_QWORD *)(v1 + 48) = type metadata accessor for Song(0);
  *(_QWORD *)(v1 + 56) = &protocol witness table for Song;
  *(_QWORD *)(v1 + 64) = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v1 + 72) = &protocol witness table for MusicVideo;
  *(_QWORD *)(v1 + 80) = type metadata accessor for Playlist(0);
  *(_QWORD *)(v1 + 88) = &protocol witness table for Playlist;
  *(_QWORD *)(v1 + 96) = type metadata accessor for Station(0);
  *(_QWORD *)(v1 + 104) = &protocol witness table for Station;
  *(_QWORD *)(v1 + 112) = type metadata accessor for Artist(0);
  *(_QWORD *)(v1 + 120) = &protocol witness table for Artist;
  return v1;
}

uint64_t sub_1001F57EC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_10000FD10((uint64_t)&v6, v3, &qword_1004C2A38);
  return swift_continuation_resume(v2);
}

uint64_t sub_1001F583C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD **)(*(_QWORD *)(v4 + 64) + 40);
  *v5 = a2;
  v5[1] = a3;
  v6 = a2;
  v7 = a3;
  return swift_continuation_resume(v4);
}

uint64_t sub_1001F5874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v4 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F58D4, 0, 0);
}

uint64_t sub_1001F58D4()
{
  uint64_t v0;
  void *v1;
  _UNKNOWN **v2;
  ValueMetadata *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = 3;
    v2 = &protocol witness table for Player.ReplaceCommand;
    v3 = &type metadata for Player.ReplaceCommand;
    v4 = v1;
  }
  else
  {
    v4 = 0;
    *(_BYTE *)(v0 + 16) = 0;
    v2 = &protocol witness table for Player.PlaybackCommand;
    v3 = &type metadata for Player.PlaybackCommand;
  }
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_1000444A8(v0 + 16, v0 + 56);
  v9 = swift_allocObject(&unk_10047E198, 104, 7);
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v1;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = v6;
  *(_BYTE *)(v9 + 56) = v1 == 0;
  sub_100033620((__int128 *)(v0 + 56), v9 + 64);
  swift_retain(v6);
  v10 = v4;
  swift_retain(v7);
  v11 = sub_1001CC790(v5, (uint64_t)&unk_1004C2A78, v9);
  swift_release(v11);
  sub_10000970C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F5A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 24) = a6;
  *(_QWORD *)(v8 + 32) = a8;
  *(_BYTE *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 16) = a5;
  v9 = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F5A80, 0, 0);
}

uint64_t sub_1001F5A80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1004C1F34);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_1001F5B7C;
    return GroupActivitiesManager.leave(performLeaveCommand:)(*(_BYTE *)(v0 + 80));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    if (*(_QWORD *)(v0 + 24))
    {
      v4 = *(int **)(v0 + 40);
      _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v5 = (_QWORD *)(v3 + v4[5]);
      *v5 = 0;
      v5[1] = 0;
      *(_QWORD *)(v3 + v4[6]) = 0;
      *(_BYTE *)(v3 + v4[7]) = 0;
      *(_QWORD *)(v3 + v4[8]) = 0;
      v6 = (_QWORD *)swift_task_alloc(dword_1004BFDFC);
      *(_QWORD *)(v0 + 64) = v6;
      *v6 = v0;
      v6[1] = sub_1001F5C84;
      return sub_100195168(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 48));
    }
    else
    {
      swift_task_dealloc(*(_QWORD *)(v0 + 48));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1001F5B7C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_1001F5BD0, 0, 0);
}

uint64_t sub_1001F5BD0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v0 + 24))
  {
    v2 = *(int **)(v0 + 40);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v3 = (_QWORD *)(v1 + v2[5]);
    *v3 = 0;
    v3[1] = 0;
    *(_QWORD *)(v1 + v2[6]) = 0;
    *(_BYTE *)(v1 + v2[7]) = 0;
    *(_QWORD *)(v1 + v2[8]) = 0;
    v4 = (_QWORD *)swift_task_alloc(dword_1004BFDFC);
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_1001F5C84;
    return sub_100195168(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 48));
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001F5C84(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 64);
  v5 = *v2;
  *(_QWORD *)(v5 + 72) = v1;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 48);
  if (v1)
  {
    sub_1001A3614(*(_QWORD *)(v5 + 48));
    return swift_task_switch(sub_1001F5D20, 0, 0);
  }
  else
  {

    sub_1001A3614(v6);
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1001F5D20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F5D54()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, static Logger.sharedListening);
  sub_100039D34(v0, (uint64_t)static Logger.sharedListening);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x694C646572616853, 0xEF676E696E657473);
}

uint64_t static Logger.sharedListening.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1004B8E18 != -1)
    swift_once(&qword_1004B8E18, sub_1001F5D54);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100039D34(v2, (uint64_t)static Logger.sharedListening);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001F5E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001F5E5C, 0, 0);
}

uint64_t sub_1001F5E5C()
{
  uint64_t v0;
  void (*v1)(id);
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  v1 = *(void (**)(id))(v0 + 16);
  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
    v3 = v2;
    v4 = objc_allocWithZone((Class)NSError);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    v6 = objc_msgSend(v4, "initWithDomain:code:userInfo:", v5, 3072, 0);

    v1(v6);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F5F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch(sub_1001F5F2C, 0, 0);
}

uint64_t sub_1001F5F2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;

  v2 = v0[9];
  v1 = v0[10];
  v3 = (void *)v0[8];
  v4 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v5 = objc_msgSend(v3, "commandRequest");
  v6 = (_QWORD *)swift_allocObject(&unk_10047E1C0, 40, 7);
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = v1;
  v0[6] = sub_1001FA84C;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000148C8;
  v0[5] = &unk_10047E1D8;
  v7 = _Block_copy(v0 + 2);
  v8 = v0[7];
  v9 = v3;
  sub_10000DCE8(v2, v1);
  objc_msgSend(v4, "performRequest:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1001F6044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1004C298C);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10002F6EC;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v5;
  return swift_task_switch(sub_1001F5F2C, 0, 0);
}

void sub_1001F60B4(void *a1, id a2, void (*a3)(id))
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;

  if (objc_msgSend(a2, "type") == (id)1)
  {
    if (a3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
      v6 = v5;
      v7 = objc_allocWithZone((Class)NSError);
      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      v9 = objc_msgSend(v7, "initWithDomain:code:userInfo:", v8, 3072, 0);

      a3(v9);
    }
  }
  else if (a3)
  {
    a3(a1);
  }
}

uint64_t sub_1001F61A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return sub_10000DCF8(a6, a7);
  }
  return result;
}

uint64_t sub_1001F61F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_1000057B4(&qword_1004C2A28);
  if (swift_isClassType(v0))
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1004BDDB0;
  else
    v2 = (uint64_t *)&unk_1004C2A30;
  return sub_1000057B4(v2);
}

uint64_t _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = a1[5];
      v17 = a2[5];
      if (v16)
      {
        if (v17)
        {
          v18 = a1[4];
          v19 = a2[4];
          if (v18 == v19 && v16 == v17)
            return 1;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0) & 1) != 0)
            return 1;
        }
      }
      else if (!v17)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_1001F62F4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  int64x2_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a3;
  v44 = a2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v40 - v19;
  if (FigOutputMonitorIsScreenProbablyBeingRecorded(v18))
  {
    if (qword_1004B8E18 != -1)
      swift_once(&qword_1004B8E18, sub_1001F5D54);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100039D34(v21, (uint64_t)static Logger.sharedListening);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Play locally action is NOT available because of screen sharing", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0uLL;
  }
  else
  {
    v41 = v7;
    v42 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003AD920);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v13);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v32 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v28 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v32, v12, 0, 0, 256);
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    v30 = (_QWORD *)swift_allocObject(&unk_10047E170, 40, 7);
    v35 = v44;
    v30[2] = a1;
    v30[3] = v35;
    v36 = v43;
    v30[4] = v43;
    swift_retain(v36);
    v37 = a1;
    swift_retain(v35);
    v38 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v26 = UUID.uuidString.getter(v38);
    v27 = v39;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
    v31 = vdupq_n_s64(2uLL);
    v31.i64[0] = v34;
    v29 = &unk_1004C2A68;
  }
  *(_QWORD *)a4 = v26;
  *(_QWORD *)(a4 + 8) = v27;
  *(_QWORD *)(a4 + 16) = v28;
  *(int64x2_t *)(a4 + 24) = v31;
  *(_QWORD *)(a4 + 40) = v29;
  *(_QWORD *)(a4 + 48) = v30;
}

uint64_t sub_1001F6604()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F6630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1004C299C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002F6EC;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_1001F5E5C, 0, 0);
}

void sub_1001F6690(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  os_log_type_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  unint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  id v84;
  BOOL v85;
  id v86;

  switch((unint64_t)objc_msgSend(a1, "type"))
  {
    case 1uLL:
      v4 = objc_msgSend(a1, "sessionEvent");
      if (!v4)
        goto LABEL_23;
      v5 = v4;
      v6 = objc_msgSend(v4, "kind");

      if (v6 == (id)4)
      {

        v8 = 0;
        v9 = 0;
        v10 = 0;
        v11 = 5;
        v7 = 2;
      }
      else
      {
        if (v6 != (id)1)
        {
LABEL_23:
          if (qword_1004B8E18 != -1)
            swift_once(&qword_1004B8E18, sub_1001F5D54);
          v38 = type metadata accessor for Logger(0);
          sub_100039D34(v38, (uint64_t)static Logger.sharedListening);
          v13 = a1;
          v14 = Logger.logObject.getter(v13);
          v39 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v14, v39))
          {
            v16 = swift_slowAlloc(12, -1);
            v17 = (id)swift_slowAlloc(32, -1);
            v86 = v17;
            *(_DWORD *)v16 = 136446210;
            v40 = objc_msgSend(v13, "sessionEvent");
            v41 = v40;
            if (v40)
            {
              v42 = objc_msgSend(v40, "kind");

            }
            else
            {
              v42 = 0;
            }
            v84 = v42;
            v85 = v41 == 0;
            v61 = sub_1000057B4(&qword_1004C2A50);
            v62 = (char *)String.init<A>(describing:)(&v84, v61);
            *(_QWORD *)(v16 + 4) = sub_1000393D0(v62, v63, (uint64_t *)&v86);

            swift_bridgeObjectRelease();
            v23 = v39;
            v21 = "Unknown session event kind: %{public}s";
            goto LABEL_51;
          }
          goto LABEL_33;
        }

        v7 = 0;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        v11 = 5;
      }
      goto LABEL_84;
    case 2uLL:
      v24 = objc_msgSend(a1, "playbackEvent");
      if (!v24)
      {
LABEL_28:
        if (qword_1004B8E18 != -1)
          swift_once(&qword_1004B8E18, sub_1001F5D54);
        v43 = type metadata accessor for Logger(0);
        sub_100039D34(v43, (uint64_t)static Logger.sharedListening);
        v13 = a1;
        v14 = Logger.logObject.getter(v13);
        v44 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v14, v44))
        {
LABEL_33:

          goto LABEL_53;
        }
        v16 = swift_slowAlloc(12, -1);
        v17 = (id)swift_slowAlloc(32, -1);
        v86 = v17;
        *(_DWORD *)v16 = 136446210;
        v45 = objc_msgSend(v13, "playbackEvent");
        v46 = v45;
        if (v45)
        {
          v47 = objc_msgSend(v45, "kind");

        }
        else
        {
          v47 = 0;
        }
        v84 = v47;
        v85 = v46 == 0;
        v64 = sub_1000057B4(&qword_1004C2A48);
        v65 = (char *)String.init<A>(describing:)(&v84, v64);
        *(_QWORD *)(v16 + 4) = sub_1000393D0(v65, v66, (uint64_t *)&v86);

        swift_bridgeObjectRelease();
        v23 = v44;
        v21 = "Unknown playback event kind: %{public}s";
LABEL_51:
        v22 = v14;
        goto LABEL_52;
      }
      v25 = v24;
      v26 = objc_msgSend(v24, "kind");

      switch((unint64_t)v26)
      {
        case 1uLL:

          v8 = 0;
          v9 = 0;
          v10 = 0;
          v11 = 5;
          v7 = 4;
          goto LABEL_84;
        case 2uLL:

          v8 = 0;
          v9 = 0;
          v10 = 0;
          v11 = 5;
          v7 = 3;
          goto LABEL_84;
        case 3uLL:

          v8 = 0;
          v9 = 0;
          v10 = 0;
          v11 = 5;
          v7 = 1;
          goto LABEL_84;
        case 4uLL:
          v53 = objc_msgSend(a1, "playbackEvent");
          if (v53)
          {
            v54 = v53;
            v55 = objc_msgSend(v53, "item");

            if (v55)
            {
              v56 = objc_msgSend(v55, "innermostModelObject");

              objc_opt_self(MPModelSong);
              v57 = (void *)swift_dynamicCastObjCClass(v56);
              v55 = v57;
              if (v57)
              {
                v58 = objc_msgSend(v57, "title");
                if (v58)
                {
                  v59 = v58;
                  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
                  v8 = v60;

                  v9 = 0;
                  v10 = 0;
                  v11 = 2;
                  goto LABEL_84;
                }
              }
              else
              {

              }
            }
          }
          else
          {
            v55 = 0;
          }

          v7 = 0;
          v9 = 0;
          v10 = 0;
          v11 = 2;
          v8 = 0xE000000000000000;
          break;
        default:
          goto LABEL_28;
      }
      goto LABEL_84;
    case 3uLL:
      v27 = objc_msgSend(a1, "queueEvent");
      v7 = (uint64_t)v27;
      if (!v27)
        goto LABEL_80;
      v28 = objc_msgSend(v27, "kind");

      if (v28 == (id)1)
      {
        v48 = objc_msgSend(a1, "queueEvent");
        if (!v48)
          goto LABEL_76;
        v49 = v48;
        v50 = objc_msgSend(v48, "addedContent");

        if (!v50)
          goto LABEL_76;
        v51 = objc_msgSend(v50, "container");
        if (v51)
        {
          v52 = v51;
          v7 = (uint64_t)objc_msgSend(v51, "innermostModelObject");

          v9 = 0;
          v10 = 0;
          v11 = 0;
LABEL_83:
          v8 = 1;
          goto LABEL_84;
        }
        v67 = objc_msgSend(v50, "items");
        v68 = sub_10000598C(0, &qword_1004C2A40, MPModelGenericObject_ptr);
        v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v68);

        if ((unint64_t)v69 >> 62)
        {
          if (v69 < 0)
            v74 = v69;
          else
            v74 = v69 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v75 = _CocoaArrayWrapper.endIndex.getter(v74);
          swift_bridgeObjectRelease();
          if (v75)
            goto LABEL_63;
        }
        else if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_63:
          if ((v69 & 0xC000000000000001) != 0)
          {
            v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v69);
          }
          else
          {
            if (!*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              JUMPOUT(0x1001F7178);
            }
            v70 = *(id *)(v69 + 32);
          }
          v71 = v70;
          swift_bridgeObjectRelease();
          v72 = objc_msgSend(v71, "innermostModelObject");

          objc_opt_self(MPModelSong);
          v73 = swift_dynamicCastObjCClass(v72);
          if (v73)
          {
            v7 = v73;

            v8 = 0;
            v9 = 0;
            v10 = 0;
            v11 = 0;
            goto LABEL_84;
          }

          goto LABEL_76;
        }

        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
      if (v28 == (id)7)
      {
LABEL_76:
        v76 = objc_msgSend(a1, "queueEvent");
        v7 = (uint64_t)v76;
        if (!v76)
        {
LABEL_80:

LABEL_82:
          v9 = 0;
          v10 = 0;
          v11 = 4;
          goto LABEL_83;
        }
        v77 = objc_msgSend(v76, "contentUpdatedMessage");

        if (v77)
        {
          v78 = objc_msgSend(v77, "localizedTitle");
          if (v78)
          {
            v79 = v78;
            v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
            v8 = v80;

          }
          else
          {
            v7 = 0;
            v8 = 0;
          }
          v81 = objc_msgSend(v77, "localizedMessage");
          if (v81)
          {
            v82 = v81;
            v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
            v10 = v83;

          }
          else
          {

            v9 = 0;
            v10 = 0;
          }
          v11 = 4;
          goto LABEL_84;
        }
LABEL_81:

        v7 = 0;
        goto LABEL_82;
      }
      if (v28 != (id)6)
        goto LABEL_81;
      v29 = objc_msgSend(a1, "queueEvent");
      v8 = (unint64_t)v29;
      if (!v29)
      {

        v7 = 0;
        goto LABEL_56;
      }
      v7 = (uint64_t)objc_msgSend(v29, "playedNowContent");

      if (!v7)
      {

        goto LABEL_55;
      }
      v30 = objc_msgSend((id)v7, "startItem");
      v31 = objc_msgSend(v30, "innermostModelObject");

      objc_opt_self(MPModelSong);
      v7 = swift_dynamicCastObjCClass(v31);
      if (!v7)
      {

        goto LABEL_55;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 3;
LABEL_84:
      *(_QWORD *)a2 = v7;
      *(_QWORD *)(a2 + 8) = v8;
      *(_QWORD *)(a2 + 16) = v9;
      *(_QWORD *)(a2 + 24) = v10;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 40) = 0;
      *(_BYTE *)(a2 + 48) = v11;
      return;
    case 4uLL:
      v32 = objc_msgSend(a1, "reactionEvent");
      if (!v32)
      {

        goto LABEL_54;
      }
      v33 = v32;
      v34 = objc_msgSend(v32, "reactionIdentifier");
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v8 = v35;

      v36 = objc_msgSend(v33, "reaction");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v10 = v37;

      v11 = 1;
      goto LABEL_84;
    default:
      if (qword_1004B8E18 != -1)
        swift_once(&qword_1004B8E18, sub_1001F5D54);
      v12 = type metadata accessor for Logger(0);
      sub_100039D34(v12, (uint64_t)static Logger.sharedListening);
      v13 = a1;
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v14, v15))
        goto LABEL_33;
      v16 = swift_slowAlloc(12, -1);
      v17 = (id)swift_slowAlloc(32, -1);
      v84 = v17;
      *(_DWORD *)v16 = 136446210;
      v86 = objc_msgSend(v13, "type");
      type metadata accessor for MPCSharedListeningEventType(0);
      v19 = (char *)String.init<A>(describing:)(&v86, v18);
      *(_QWORD *)(v16 + 4) = sub_1000393D0(v19, v20, (uint64_t *)&v84);

      swift_bridgeObjectRelease();
      v21 = "Unknown event type: %{public}s";
      v22 = v14;
      v23 = v15;
LABEL_52:
      _os_log_impl((void *)&_mh_execute_header, v22, v23, v21, (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

LABEL_53:
LABEL_54:
      v7 = 0;
LABEL_55:
      v8 = 0;
LABEL_56:
      v9 = 0;
      v10 = 0;
      v11 = -1;
      goto LABEL_84;
  }
}

uint64_t sub_1001F7198(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return swift_task_switch(sub_1001F71B0, 0, 0);
}

uint64_t sub_1001F71B0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  __n128 v12;
  uint64_t result;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  if (qword_1004B8E18 != -1)
    swift_once(&qword_1004B8E18, sub_1001F5D54);
  v1 = (void *)v0[18];
  v2 = type metadata accessor for Logger(0);
  v0[19] = sub_100039D34(v2, (uint64_t)static Logger.sharedListening);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[18];
    v6 = swift_slowAlloc(12, -1);
    v7 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138543362;
    *(_QWORD *)(v6 + 4) = v5;
    *v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🏗 Building session with intent=%{public}@", (uint8_t *)v6, 0xCu);
    v8 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v7, 1, v8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

    v3 = v0[18];
  }

  v9 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v0[14] = CFRange.init(_:);
  v0[15] = 0;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_10001D2BC;
  v0[13] = &unk_10047E120;
  v10 = _Block_copy(v0 + 10);
  v11 = objc_msgSend(v9, "initWithBlock:", v10);
  v0[20] = v11;
  _Block_release(v10);
  v12 = swift_release(v0[15]);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v12);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v0[18];
    v15 = (void *)objc_opt_self(MPCPlaybackIntent);
    v0[7] = v0 + 16;
    v0[2] = v0;
    v0[3] = sub_1001F742C;
    v16 = swift_continuation_init(v0 + 2, 0);
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1001F583C;
    v0[13] = &unk_10047E148;
    v0[14] = v16;
    objc_msgSend(v15, "buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:", v14, v11, v0 + 10);
    return swift_continuation_await(v0 + 2);
  }
  return result;
}

uint64_t sub_1001F742C()
{
  return swift_task_switch(sub_1001F7478, 0, 0);
}

uint64_t sub_1001F7478()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  NSObject *v9;
  uint8_t *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;

  v1 = *(void **)(v0 + 128);
  v2 = *(NSObject **)(v0 + 136);
  if (v1)
  {
    v3 = v1;
    v4 = -[NSObject sharedListeningProperties](v3, "sharedListeningProperties");
    if (v4)
    {

      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(NSObject **)(v0 + 160);
      if (v8)
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "✅ Shared listening intent successfully built", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
        v11 = v9;
        v12 = v6;
      }
      else
      {
        v11 = v3;
        v12 = v2;
        v2 = *(NSObject **)(v0 + 160);
        v3 = v6;
      }

      return (*(uint64_t (**)(void *))(v0 + 8))(v1);
    }

  }
  v13 = v2;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v26 = v17;
    *(_DWORD *)v16 = 136446210;
    *(_QWORD *)(v0 + 80) = -[NSObject error](v13, "error");
    v18 = sub_1000057B4(&qword_1004C0630);
    v19 = (char *)String.init<A>(describing:)(v0 + 80, v18);
    *(_QWORD *)(v16 + 4) = sub_1000393D0(v19, v20, &v26);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "⚠️ Creation error %{public}s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {

  }
  v21 = *(void **)(v0 + 160);
  v22 = sub_1001ED7EC();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v22, 0, 0);
  *(_QWORD *)v23 = v13;
  *(_BYTE *)(v23 + 8) = 2;
  swift_willThrow(v24);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F7710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[34] = a3;
  v4[35] = a4;
  v4[32] = a1;
  v4[33] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[36] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[37] = v7;
  v4[38] = v8;
  return swift_task_switch(sub_1001F7780, v7, v8);
}

uint64_t sub_1001F7780()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  __n128 v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t result;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  id v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  uint64_t v58[2];

  if (qword_1004B8E18 != -1)
    swift_once(&qword_1004B8E18, sub_1001F5D54);
  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(void **)(v0 + 256);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 312) = sub_100039D34(v3, (uint64_t)static Logger.sharedListening);
  v4 = v2;
  swift_retain_n(v1, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 272);
  if (v7)
  {
    v57 = *(_OWORD *)(v0 + 256);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v58[0] = v10;
    *(_DWORD *)v9 = 136446210;
    *(_OWORD *)(v0 + 208) = v57;
    *(_QWORD *)(v0 + 224) = v8;
    v11 = (id)v57;
    swift_retain(v8);
    v12 = (char *)String.init<A>(describing:)(v0 + 208, &type metadata for Player.BuildSharedSessionCommand);
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v13, v58);
    swift_bridgeObjectRelease();

    swift_release_n(v8, 2, v14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "🏗 Building session with command=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 256);

    swift_release_n(v8, 2, v16);
  }

  v17 = *(_QWORD *)(v0 + 280);
  if (!v17)
    goto LABEL_17;
  v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 160, 0, 0);
  v19 = *v18;
  if (!v19)
    goto LABEL_17;
  KeyPath = swift_getKeyPath(&unk_1003D3B18);
  v21 = swift_getKeyPath(&unk_1003D3B40);
  swift_retain(v19);
  static Published.subscript.getter((_QWORD *)(v0 + 248), v22, KeyPath, v21);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(v19);
  v23 = *(void **)(v0 + 248);
  if (!v23)
    goto LABEL_17;
  result = swift_conformsToProtocol2(&type metadata for Player.BuildSharedSessionCommand, &protocol descriptor for _PlayerCommand);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v25 = (*(uint64_t (**)(void *, ValueMetadata *, uint64_t))(result + 16))(v23, &type metadata for Player.BuildSharedSessionCommand, result);

  if ((v25 & 1) == 0)
  {
LABEL_17:
    swift_release(*(_QWORD *)(v0 + 288));
    v39 = sub_1001ED7EC();
    swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v39, 0, 0);
    *(_QWORD *)v40 = 3;
    *(_BYTE *)(v40 + 8) = 4;
    swift_willThrow(v41);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v26 = (uint64_t *)(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 184, 0, 0);
  v27 = *v26;
  if (!v27)
    goto LABEL_16;
  v28 = swift_getKeyPath(&unk_1003D3B60);
  v29 = swift_getKeyPath(&unk_1003D3B88);
  swift_retain(v27);
  static Published.subscript.getter((_QWORD *)(v0 + 232), v30, v28, v29);
  swift_release(v29);
  swift_release(v28);
  *(_QWORD *)&v31 = swift_release(v27).n128_u64[0];
  v32 = *(void **)(v0 + 232);
  if (!v32)
    goto LABEL_16;
  v33 = objc_msgSend(*(id *)(v0 + 232), "route", v31);
  *(_QWORD *)(v0 + 320) = v33;

  if (!v33)
    goto LABEL_16;
  if ((objc_msgSend(v33, "isDeviceRoute") & 1) != 0)
  {

LABEL_16:
    v34 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 104) = &type metadata for Player.BuildSharedSessionCommand;
    *(_QWORD *)(v0 + 112) = &protocol witness table for Player.BuildSharedSessionCommand;
    v35 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v35;
    *(_QWORD *)(v0 + 96) = v34;
    v36 = dword_1004BF57C;
    v37 = (id)v35;
    swift_retain(v34);
    v38 = (_QWORD *)swift_task_alloc(v36);
    *(_QWORD *)(v0 + 344) = v38;
    *v38 = v0;
    v38[1] = sub_1001F7EA4;
    return PlaybackController.perform(_:options:route:intent:)(v0 + 80, 0x10000, 0, 0);
  }
  v42 = v33;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v58[0] = v46;
    *(_DWORD *)v45 = 136446210;
    v47 = v42;
    v48 = objc_msgSend(v47, "description");
    v49 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *(_QWORD *)(v45 + 4) = sub_1000393D0(v49, v51, v58);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v43, v44, "    Build session command needs to be performed on the system route.\n    Switching from %{public}s) to system route.", (uint8_t *)v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);
  }
  else
  {

  }
  v52 = v0 + 16;
  v53 = (void *)objc_opt_self(MPAVRoutingController);
  v54 = objc_msgSend(v53, "systemRoute");
  *(_QWORD *)(v0 + 328) = v54;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1001F7DA0;
  v55 = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 120) = _NSConcreteStackBlock;
  v56 = (_QWORD *)(v0 + 120);
  v56[1] = 0x40000000;
  v56[2] = sub_1000C3E88;
  v56[3] = &unk_10047E108;
  v56[4] = v55;
  objc_msgSend(v53, "setActiveRoute:completion:", v54, v56);
  return swift_continuation_await(v52);
}

uint64_t sub_1001F7DA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 336) = v2;
  if (v2)
    v3 = sub_1001F816C;
  else
    v3 = sub_1001F7DFC;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304));
}

uint64_t sub_1001F7DFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 328);

  v2 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 104) = &type metadata for Player.BuildSharedSessionCommand;
  *(_QWORD *)(v0 + 112) = &protocol witness table for Player.BuildSharedSessionCommand;
  v3 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 80) = v3;
  *(_QWORD *)(v0 + 96) = v2;
  v4 = dword_1004BF57C;
  v5 = (id)v3;
  swift_retain(v2);
  v6 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 344) = v6;
  *v6 = v0;
  v6[1] = sub_1001F7EA4;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 80, 0x10000, 0, 0);
}

uint64_t sub_1001F7EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 344);
  v3[44] = a1;
  v3[45] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[37];
    v6 = v3[38];
    v7 = sub_1001F81BC;
  }
  else
  {
    sub_10000970C(v3 + 10);
    v5 = v3[37];
    v6 = v3[38];
    v7 = sub_1001F7F18;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1001F7F18()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release(*(_QWORD *)(v0 + 288));
  if (!v1)
    goto LABEL_10;
  v2 = *(id *)(v0 + 352);
  v3 = objc_msgSend(v2, "error");
  if (!v3)
  {
    v4 = objc_msgSend(v2, "dialog");

    if (v4)
      goto LABEL_5;

LABEL_10:
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }

LABEL_5:
  v5 = *(_QWORD *)(v0 + 352);
  v6 = sub_1001ED7EC();
  v7 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v6, 0, 0);
  *(_QWORD *)v8 = v5;
  *(_BYTE *)(v8 + 8) = 2;
  swift_willThrow(v9);

  swift_errorRetain(v7);
  v10 = swift_errorRetain(v7);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v22 = v14;
    *(_DWORD *)v13 = 136446210;
    *(_QWORD *)(v0 + 240) = v7;
    swift_errorRetain(v7);
    v15 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v16 = (char *)String.init<A>(describing:)(v0 + 240, v15);
    *(_QWORD *)(v13 + 4) = sub_1000393D0(v16, v17, &v22);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "⚠️ Building session failed with error=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v6, 0, 0);
  *(_QWORD *)v18 = 4;
  *(_BYTE *)(v18 + 8) = 4;
  swift_willThrow(v19);
  swift_errorRelease(v7);
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1001F816C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  __n128 v3;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 320);
  v3 = swift_release(*(_QWORD *)(v0 + 288));
  swift_willThrow(v3);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F81BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 288));
  sub_10000970C((_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 360);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 240) = v1;
    swift_errorRetain(v1);
    v7 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v8 = (char *)String.init<A>(describing:)(v0 + 240, v7);
    *(_QWORD *)(v5 + 4) = sub_1000393D0(v8, v9, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "⚠️ Building session failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = sub_1001ED7EC();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v10, 0, 0);
  *(_QWORD *)v11 = 4;
  *(_BYTE *)(v11 + 8) = 4;
  swift_willThrow(v12);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F8378(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[72] = a2;
  v2[71] = a1;
  v3 = type metadata accessor for MainActor(0);
  v2[73] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[74] = v5;
  v2[75] = v6;
  return swift_task_switch(sub_1001F83EC, v5, v6);
}

uint64_t sub_1001F83EC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  void *v19;
  uint64_t v20;

  v1 = qword_1004B8E18;
  v2 = *(id *)(v0 + 568);
  if (v1 == -1)
  {
    v3 = v2;
  }
  else
  {
    swift_once(&qword_1004B8E18, sub_1001F5D54);
    v3 = *(void **)(v0 + 568);
  }
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 608) = sub_100039D34(v4, (uint64_t)static Logger.sharedListening);
  v5 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 568);
  if (v7)
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v20 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 496) = v8;
    *(_QWORD *)(v0 + 504) = 1;
    v11 = v8;
    v12 = (char *)String.init<A>(describing:)(v0 + 496, &type metadata for Player.ReplaceCommand);
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v13, &v20);

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Adding the intent to the player with command%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    if (*(_QWORD *)(v0 + 576))
    {
LABEL_5:
      v14 = *(void **)(v0 + 568);
      *(_QWORD *)(v0 + 416) = &type metadata for Player.ReplaceCommand;
      *(_QWORD *)(v0 + 424) = &protocol witness table for Player.ReplaceCommand;
      *(_QWORD *)(v0 + 392) = v14;
      *(_QWORD *)(v0 + 400) = 1;
      v15 = dword_1004BF57C;
      v16 = v14;
      v17 = (_QWORD *)swift_task_alloc(v15);
      *(_QWORD *)(v0 + 616) = v17;
      *v17 = v0;
      v17[1] = sub_1001F8630;
      return PlaybackController.perform(_:options:route:intent:)(v0 + 392, 0x10000, 0, 0);
    }
  }
  else
  {

    if (*(_QWORD *)(v0 + 576))
      goto LABEL_5;
  }
  v19 = *(void **)(v0 + 568);
  swift_release(*(_QWORD *)(v0 + 584));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F8630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 616);
  v3[78] = a1;
  v3[79] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[75];
    v6 = v3[74];
    v7 = sub_1001F92CC;
  }
  else
  {
    sub_10000970C(v3 + 49);
    v5 = v3[75];
    v6 = v3[74];
    v7 = sub_1001F86B0;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1001F86B0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  uint64_t (*v7)(__n128);
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v27;
  void *v28;
  __n128 v29;
  void *v30;
  id v31;
  __n128 v32;

  v1 = (void *)v0[78];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "error");
    if (v3)
    {

      goto LABEL_7;
    }
    v8 = objc_msgSend(v2, "dialog");

    if (v8)
    {
LABEL_7:
      v9 = v0[78];
      v10 = sub_1001ED7EC();
      v11 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v10, 0, 0);
      *(_QWORD *)v12 = v9;
      *(_BYTE *)(v12 + 8) = 2;
      swift_willThrow(v13);

      v0[65] = v11;
      swift_errorRetain(v11);
      v14 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      type metadata accessor for MPCPlayerRequestError(0);
      v16 = v15;
      if ((swift_dynamicCast(v0 + 64, v0 + 65, v14, v15, 0) & 1) != 0)
      {
        v17 = (void *)v0[64];
        v0[80] = v17;
        v0[66] = v17;
        v18 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
        _BridgedStoredNSError.code.getter(v0 + 68, v16, v18);
        if (v0[68] == 1001)
        {
          swift_errorRelease(v11);
          v19 = v17;
          v20 = (void *)_convertErrorToNSError(_:)(v19);

          v21 = objc_msgSend(v20, "msv_errorByUnwrappingDomain:", MPCErrorDomain);
          v0[81] = v21;

          if (v21)
          {
            swift_getErrorValue(v21, v0 + 70, v0 + 59);
            if (dispatch thunk of Error._code.getter(v0[60], v0[61]) == 58)
            {
              v22 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
              v23 = objc_allocWithZone((Class)MPAVRoutingController);
              v24 = String._bridgeToObjectiveC()();
              v25 = objc_msgSend(v23, "initWithDataSource:name:", v22, v24);
              v0[82] = v25;

              v0[31] = v0 + 69;
              v0[26] = v0;
              v0[27] = sub_1001F8A28;
              v0[38] = swift_continuation_init(v0 + 26, 0);
              v0[34] = _NSConcreteStackBlock;
              v0[35] = 0x40000000;
              v0[36] = sub_1001F57EC;
              v0[37] = &unk_10047E0A8;
              objc_msgSend(v25, "getActiveRouteWithTimeout:completion:", v0 + 34, 2.0);
              return swift_continuation_await(v0 + 26);
            }

          }
          v30 = (void *)v0[71];
          swift_release(v0[73]);
          v31 = v19;
          swift_willThrow(v32);

          swift_errorRelease(v0[65]);
          goto LABEL_15;
        }
        v27 = v0[73];

      }
      else
      {
        v27 = v0[73];
      }
      swift_release(v27);
      v28 = (void *)v0[71];
      swift_errorRelease(v0[65]);
      swift_willThrow(v29);

LABEL_15:
      v7 = (uint64_t (*)(__n128))v0[1];
      return v7(v6);
    }
    v4 = v0[73];
    v5 = (void *)v0[71];

  }
  else
  {
    v4 = v0[73];
    v5 = (void *)v0[71];
  }

  v6 = swift_release(v4);
  v7 = (uint64_t (*)(__n128))v0[1];
  return v7(v6);
}

uint64_t sub_1001F8A28()
{
  uint64_t v0;

  return swift_task_switch(sub_1001F8A70, *(_QWORD *)(*(_QWORD *)v0 + 592), *(_QWORD *)(*(_QWORD *)v0 + 600));
}

uint64_t sub_1001F8A70()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  __n128 v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  v1 = *(void **)(v0 + 552);
  *(_QWORD *)(v0 + 664) = v1;
  v2 = (void *)objc_opt_self(MPAVRoutingController);
  *(_QWORD *)(v0 + 672) = v2;
  v3 = v1;
  v4 = objc_msgSend(v2, "systemRoute");
  v5 = v4;
  if (v1)
  {
    if (v4)
    {
      sub_10000598C(0, &qword_1004C0658, MPAVRoute_ptr);
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) == 0)
        goto LABEL_9;
LABEL_6:
      v9 = *(void **)(v0 + 656);
      v10 = *(void **)(v0 + 648);
      v11 = *(void **)(v0 + 640);
      v12 = *(void **)(v0 + 568);
      swift_release(*(_QWORD *)(v0 + 584));
      v13 = v11;
      swift_willThrow(v14);

      swift_errorRelease(*(_QWORD *)(v0 + 520));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v5 = v3;
  }
  else if (!v4)
  {
    goto LABEL_6;
  }

LABEL_9:
  v16 = Logger.logObject.getter(v8);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "SharedListening requires system route, switching…", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_1001F8C84;
  *(_QWORD *)(v0 + 344) = swift_continuation_init(v0 + 144, 1);
  *(_QWORD *)(v0 + 312) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 320) = 0x40000000;
  *(_QWORD *)(v0 + 328) = sub_1000C3E88;
  *(_QWORD *)(v0 + 336) = &unk_10047E0C0;
  objc_msgSend(v2, "setActiveRoute:completion:", 0, v0 + 312);
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_1001F8C84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 680) = v2;
  if (v2)
    v3 = sub_1001F958C;
  else
    v3 = sub_1001F8CE4;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 592), *(_QWORD *)(v1 + 600));
}

uint64_t sub_1001F8CE4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 656);
  v2 = objc_msgSend(*(id *)(v0 + 672), "systemRoute");
  *(_QWORD *)(v0 + 688) = v2;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_1001F8DA4;
  *(_QWORD *)(v0 + 464) = swift_continuation_init(v0 + 80, 1);
  *(_QWORD *)(v0 + 432) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 440) = 0x40000000;
  *(_QWORD *)(v0 + 448) = sub_1000C3E88;
  *(_QWORD *)(v0 + 456) = &unk_10047E0D8;
  objc_msgSend(v1, "selectRoute:operation:completion:", v2, 0, v0 + 432);
  return swift_continuation_await(v0 + 80);
}

uint64_t sub_1001F8DA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 696) = v2;
  if (v2)
    v3 = sub_1001F9610;
  else
    v3 = sub_1001F8E04;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 592), *(_QWORD *)(v1 + 600));
}

uint64_t sub_1001F8E04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 656);

  *(_QWORD *)(v0 + 56) = v0 + 536;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1001F8EB0;
  *(_QWORD *)(v0 + 384) = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 352) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 360) = 0x40000000;
  *(_QWORD *)(v0 + 368) = sub_1001F57EC;
  *(_QWORD *)(v0 + 376) = &unk_10047E0F0;
  objc_msgSend(v1, "getActiveRouteWithTimeout:completion:", v0 + 352, 2.0);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_1001F8EB0()
{
  uint64_t v0;

  return swift_task_switch(sub_1001F8EF8, *(_QWORD *)(*(_QWORD *)v0 + 592), *(_QWORD *)(*(_QWORD *)v0 + 600));
}

uint64_t sub_1001F8EF8()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  NSObject *v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  char *v23;

  v1 = *(void **)(v0 + 536);
  *(_QWORD *)(v0 + 704) = v1;
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    *(_QWORD *)(v5 + 4) = v2;
    *v6 = v1;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "active route=%@", (uint8_t *)v5, 0xCu);
    v7 = sub_1000057B4(&qword_1004C0DB0);
    swift_arrayDestroy(v6, 1, v7);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {

    v3 = v2;
  }
  v8 = *(void **)(v0 + 672);

  v9 = objc_msgSend(v8, "systemRoute");
  v10 = v9;
  if (!v1)
  {
    if (v9)
    {
      v13 = *(_QWORD *)(v0 + 584);

      goto LABEL_12;
    }
LABEL_10:
    v23 = (char *)&dword_1004C29D0 + dword_1004C29D0;
    v14 = (_QWORD *)swift_task_alloc(unk_1004C29D4);
    *(_QWORD *)(v0 + 712) = v14;
    *v14 = v0;
    v14[1] = sub_1001F9178;
    return ((uint64_t (*)(_QWORD, _QWORD))v23)(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576));
  }
  if (!v9)
  {
    v13 = *(_QWORD *)(v0 + 584);

    goto LABEL_12;
  }
  sub_10000598C(0, &qword_1004C0658, MPAVRoute_ptr);
  v11 = v2;
  v12 = static NSObject.== infix(_:_:)(v11, v10);

  if ((v12 & 1) != 0)
    goto LABEL_10;
  v13 = *(_QWORD *)(v0 + 584);
LABEL_12:
  swift_release(v13);
  v16 = *(void **)(v0 + 656);
  v17 = *(void **)(v0 + 648);
  v18 = *(void **)(v0 + 640);
  v19 = *(void **)(v0 + 568);
  v20 = sub_1001ED7EC();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v20, 0, 0);
  *(_QWORD *)v21 = 5;
  *(_BYTE *)(v21 + 8) = 4;
  swift_willThrow(v22);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9178()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 712);
  *(_QWORD *)(*v1 + 720) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1001F9254;
  else
    v4 = sub_1001F91DC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 592), *(_QWORD *)(v2 + 600));
}

uint64_t sub_1001F91DC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 704);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 584);

  swift_release(v5);
  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9254()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 704);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 584);

  swift_release(v5);
  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F92CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v15;
  void *v16;
  __n128 v17;
  void *v18;
  id v19;
  __n128 v20;

  sub_10000970C((_QWORD *)(v0 + 392));
  v1 = *(_QWORD *)(v0 + 632);
  *(_QWORD *)(v0 + 520) = v1;
  swift_errorRetain(v1);
  v2 = sub_1000057B4((uint64_t *)&unk_1004BD690);
  type metadata accessor for MPCPlayerRequestError(0);
  v4 = v3;
  if (!swift_dynamicCast(v0 + 512, v0 + 520, v2, v3, 0))
  {
    v15 = *(_QWORD *)(v0 + 584);
LABEL_8:
    swift_release(v15);
    v16 = *(void **)(v0 + 568);
    swift_errorRelease(*(_QWORD *)(v0 + 520));
    swift_willThrow(v17);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(void **)(v0 + 512);
  *(_QWORD *)(v0 + 640) = v5;
  *(_QWORD *)(v0 + 528) = v5;
  v6 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  _BridgedStoredNSError.code.getter((_QWORD *)(v0 + 544), v4, v6);
  if (*(_QWORD *)(v0 + 544) != 1001)
  {
    v15 = *(_QWORD *)(v0 + 584);

    goto LABEL_8;
  }
  swift_errorRelease(v1);
  v7 = v5;
  v8 = (void *)_convertErrorToNSError(_:)(v7);

  v9 = objc_msgSend(v8, "msv_errorByUnwrappingDomain:", MPCErrorDomain);
  *(_QWORD *)(v0 + 648) = v9;

  if (v9)
  {
    swift_getErrorValue(v9, v0 + 560, v0 + 472);
    if (dispatch thunk of Error._code.getter(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488)) == 58)
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
      v11 = objc_allocWithZone((Class)MPAVRoutingController);
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "initWithDataSource:name:", v10, v12);
      *(_QWORD *)(v0 + 656) = v13;

      *(_QWORD *)(v0 + 248) = v0 + 552;
      *(_QWORD *)(v0 + 208) = v0;
      *(_QWORD *)(v0 + 216) = sub_1001F8A28;
      *(_QWORD *)(v0 + 304) = swift_continuation_init(v0 + 208, 0);
      *(_QWORD *)(v0 + 272) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 280) = 0x40000000;
      *(_QWORD *)(v0 + 288) = sub_1001F57EC;
      *(_QWORD *)(v0 + 296) = &unk_10047E0A8;
      objc_msgSend(v13, "getActiveRouteWithTimeout:completion:", v0 + 272, 2.0);
      return swift_continuation_await(v0 + 208);
    }

  }
  v18 = *(void **)(v0 + 568);
  swift_release(*(_QWORD *)(v0 + 584));
  v19 = v7;
  swift_willThrow(v20);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F958C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __n128 v6;

  v1 = *(void **)(v0 + 664);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(void **)(v0 + 568);
  v6 = swift_release(*(_QWORD *)(v0 + 584));
  swift_willThrow(v6);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9610()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __n128 v7;

  v1 = *(void **)(v0 + 688);
  v2 = *(void **)(v0 + 664);
  v3 = *(void **)(v0 + 656);
  v4 = *(void **)(v0 + 648);
  v5 = *(void **)(v0 + 640);
  v6 = *(void **)(v0 + 568);
  v7 = swift_release(*(_QWORD *)(v0 + 584));
  swift_willThrow(v7);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001F969C()
{
  unint64_t result;

  result = qword_1004C29E0;
  if (!qword_1004C29E0)
  {
    result = swift_getWitnessTable(&unk_1003D3A88, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C29E0);
  }
  return result;
}

uint64_t sub_1001F96E0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x696A6F6D65 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x44497265646E6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x44497265646E6573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001F9814@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v5 = sub_1000057B4(&qword_1004C2A08);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_1001F969C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SharedListening.Reaction.CodingKeys, &type metadata for SharedListening.Reaction.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000970C(a1);
  v30 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
  v14 = v13;
  v27 = v12;
  v29 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
  v17 = v16;
  v25 = v15;
  v28 = 2;
  swift_bridgeObjectRetain();
  v26 = v17;
  v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v28, v5);
  v20 = v19;
  v21 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  sub_10000970C(a1);
  swift_bridgeObjectRelease();
  v22 = v26;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v14;
  a2[2] = v25;
  a2[3] = v22;
  a2[4] = v21;
  a2[5] = v20;
  return result;
}

unint64_t sub_1001F9A4C()
{
  unint64_t result;

  result = qword_1004C29E8;
  if (!qword_1004C29E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SharedListening.Reaction, &type metadata for SharedListening.Reaction);
    atomic_store(result, (unint64_t *)&qword_1004C29E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening()
{
  return &type metadata for SharedListening;
}

uint64_t destroy for SharedListening.Reaction(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a2[5];
  v7 = a1[5];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Reaction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Reaction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Reaction()
{
  return &type metadata for SharedListening.Reaction;
}

void destroy for SharedListening.Event(uint64_t a1)
{
  sub_10018C960(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1001ED20C(*(id *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1001ED20C(*(id *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_10018C960(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_10018C960(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001F9EB4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1001F9ECC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Event()
{
  return &type metadata for SharedListening.Event;
}

ValueMetadata *type metadata accessor for SharedListening.Event.Content()
{
  return &type metadata for SharedListening.Event.Content;
}

uint64_t destroy for SharedListening.Event.Alert(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a2[3];
  v6 = a1[3];
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

_QWORD *assignWithTake for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Event.Alert(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Event.Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Event.Alert()
{
  return &type metadata for SharedListening.Event.Alert;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling()
{
  return &type metadata for SharedListening.ErrorHandling;
}

double destroy for SharedListening.ErrorHandling.Context(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *_s9MusicCore15SharedListeningO13ErrorHandlingV7ContextVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for SharedListening.ErrorHandling.Context(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for SharedListening.ErrorHandling.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.ErrorHandling.Context(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.ErrorHandling.Context(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling.Context()
{
  return &type metadata for SharedListening.ErrorHandling.Context;
}

uint64_t storeEnumTagSinglePayload for SharedListening.Reaction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001FA340 + 4 * byte_1003D386F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001FA374 + 4 * byte_1003D386A[v4]))();
}

uint64_t sub_1001FA374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FA37C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001FA384);
  return result;
}

uint64_t sub_1001FA390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001FA398);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001FA39C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FA3A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Reaction.CodingKeys()
{
  return &type metadata for SharedListening.Reaction.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001FA404(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1001FA404(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 3:
      result = (id)swift_errorRetain(result);
      break;
    case 1:
      result = (id)swift_retain(result);
      break;
    case 2:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for SharedListening.ErrorHandling.Error(uint64_t a1)
{
  sub_1001F0D8C(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001FA404(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1001F0D8C(v5, v6);
  return a1;
}

uint64_t assignWithTake for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1001F0D8C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.ErrorHandling.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.ErrorHandling.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001FA564(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1001FA57C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling.Error()
{
  return &type metadata for SharedListening.ErrorHandling.Error;
}

unint64_t sub_1001FA5A8()
{
  unint64_t result;

  result = qword_1004C29F0;
  if (!qword_1004C29F0)
  {
    result = swift_getWitnessTable(&unk_1003D3A60, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C29F0);
  }
  return result;
}

unint64_t sub_1001FA5F0()
{
  unint64_t result;

  result = qword_1004C29F8;
  if (!qword_1004C29F8)
  {
    result = swift_getWitnessTable(&unk_1003D39D0, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C29F8);
  }
  return result;
}

unint64_t sub_1001FA638()
{
  unint64_t result;

  result = qword_1004C2A00;
  if (!qword_1004C2A00)
  {
    result = swift_getWitnessTable(&unk_1003D39F8, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C2A00);
  }
  return result;
}

uint64_t sub_1001FA68C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001FA69C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001FA6A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001FA6D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1004C2A64);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002E8E0;
  return sub_1001F5874(v2, v3, v4);
}

uint64_t sub_1001FA738()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  sub_10000970C((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001FA77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1004C2A74);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10002E8E0;
  return sub_1001F5A1C(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

uint64_t sub_1001FA818()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001FA84C(void *a1)
{
  uint64_t v1;

  sub_1001F60B4(a1, *(id *)(v1 + 16), *(void (**)(id))(v1 + 24));
}

void *UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor()
{
  return &static UnifiedMessages.groupDefaultsSuiteName;
}

unint64_t static UnifiedMessages.groupDefaultsSuiteName.getter()
{
  return 0xD000000000000015;
}

uint64_t UnifiedMessages.MLI.State.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001FA8C8 + 4 * byte_1003D3BB0[a1]))(0xD00000000000001ELL, 0x80000001003A70F0);
}

uint64_t sub_1001FA8C8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1001FA8E0()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1001FA8FC()
{
  return 0x6574656C706D6F63;
}

void sub_1001FA918(char *a1)
{
  sub_100048508(*a1);
}

void sub_1001FA924()
{
  char *v0;

  sub_1000DDEF4(*v0);
}

void sub_1001FA92C()
{
  __asm { BR              X10 }
}

uint64_t sub_1001FA96C(uint64_t a1)
{
  String.hash(into:)(a1, 0x6E776F6E6B6E75, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_1001FA9D0(uint64_t a1)
{
  char *v1;

  sub_1000DE2E8(a1, *v1);
}

unint64_t sub_1001FA9D8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore15UnifiedMessagesO3MLIV5StateO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001FAA04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001FAA38 + 4 * byte_1003D3BB8[*v0]))();
}

void sub_1001FAA38(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

void sub_1001FAA54(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676F72506E69;
  a1[1] = 0xEA00000000007373;
}

void sub_1001FAA74(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1001FAA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001FAFB8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

const char *UnifiedMessages.MLI.userDefaultsKey.unsafeMutableAddressor()
{
  return "mliState";
}

uint64_t static UnifiedMessages.MLI.userDefaultsKey.getter()
{
  return 0x6574617453696C6DLL;
}

const char *UnifiedMessages.MLI.sessionIDKey.unsafeMutableAddressor()
{
  return "mliSessionID";
}

uint64_t static UnifiedMessages.MLI.sessionIDKey.getter()
{
  return 0x6973736553696C6DLL;
}

void *UnifiedMessages.MLI.didCompleteTransferKey.unsafeMutableAddressor()
{
  return &static UnifiedMessages.MLI.didCompleteTransferKey;
}

unint64_t static UnifiedMessages.MLI.didCompleteTransferKey.getter()
{
  return 0xD000000000000016;
}

const char *UnifiedMessages.MLI.mliReviewKey.unsafeMutableAddressor()
{
  return "mliReview";
}

uint64_t static UnifiedMessages.MLI.mliReviewKey.getter()
{
  return 0x6569766552696C6DLL;
}

MusicCore::UnifiedMessages::GroupDefaultsKey_optional __swiftcall UnifiedMessages.GroupDefaultsKey.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicCore::UnifiedMessages::GroupDefaultsKey_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004688A8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicCore_UnifiedMessages_GroupDefaultsKey_countOfSongsInLibrary;
  else
    v4.value = MusicCore_UnifiedMessages_GroupDefaultsKey_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

unint64_t UnifiedMessages.GroupDefaultsKey.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000019;
}

uint64_t sub_1001FAC0C(char *a1, char *a2)
{
  return sub_100048670(*a1, *a2);
}

Swift::Int sub_1001FAC18()
{
  char *v0;

  return sub_1000DDFC0(*v0);
}

uint64_t sub_1001FAC20(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  if (*v1)
    v3 = 0x80000001003A7150;
  else
    v3 = 0x80000001003A7130;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001FAC80(uint64_t a1)
{
  char *v1;

  return sub_1000DE268(a1, *v1);
}

uint64_t sub_1001FAC88@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004688A8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001FACE4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  v3 = 0x80000001003A7130;
  if (*v1)
    v3 = 0x80000001003A7150;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t _s9MusicCore15UnifiedMessagesO3MLIV5StateO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100468828, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1001FAD74()
{
  unint64_t result;

  result = qword_1004C2A80;
  if (!qword_1004C2A80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.MLI.State, &type metadata for UnifiedMessages.MLI.State);
    atomic_store(result, (unint64_t *)&qword_1004C2A80);
  }
  return result;
}

unint64_t sub_1001FADBC()
{
  unint64_t result;

  result = qword_1004C2A88;
  if (!qword_1004C2A88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.GroupDefaultsKey, &type metadata for UnifiedMessages.GroupDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_1004C2A88);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages()
{
  return &type metadata for UnifiedMessages;
}

ValueMetadata *type metadata accessor for UnifiedMessages.MLI()
{
  return &type metadata for UnifiedMessages.MLI;
}

uint64_t storeEnumTagSinglePayload for UnifiedMessages.MLI.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001FAE6C + 4 * byte_1003D3BC1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001FAEA0 + 4 * byte_1003D3BBC[v4]))();
}

uint64_t sub_1001FAEA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FAEA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001FAEB0);
  return result;
}

uint64_t sub_1001FAEBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001FAEC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001FAEC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FAED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages.MLI.State()
{
  return &type metadata for UnifiedMessages.MLI.State;
}

uint64_t storeEnumTagSinglePayload for UnifiedMessages.GroupDefaultsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001FAF38 + 4 * byte_1003D3BCB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001FAF6C + 4 * byte_1003D3BC6[v4]))();
}

uint64_t sub_1001FAF6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FAF74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001FAF7CLL);
  return result;
}

uint64_t sub_1001FAF88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001FAF90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001FAF94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FAF9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages.GroupDefaultsKey()
{
  return &type metadata for UnifiedMessages.GroupDefaultsKey;
}

unint64_t sub_1001FAFB8()
{
  unint64_t result;

  result = qword_1004C2A90;
  if (!qword_1004C2A90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.MLI.State, &type metadata for UnifiedMessages.MLI.State);
    atomic_store(result, (unint64_t *)&qword_1004C2A90);
  }
  return result;
}

MusicCore::AccessibilityIdentifier __swiftcall AccessibilityIdentifier.init(name:)(Swift::String name)
{
  void *object;
  uint64_t countAndFlagsBits;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  MusicCore::AccessibilityIdentifier result;
  uint64_t v8;
  void *v9;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v8 = qword_1004C2A98;
  v9 = (void *)unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 46;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = countAndFlagsBits;
  v4._object = object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v8;
  v6 = v9;
  result.rawValue._object = v6;
  result.rawValue._countAndFlagsBits = v5;
  return result;
}

uint64_t static AccessibilityIdentifier.named(_:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v8;

  v4 = qword_1004B8E20;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v8 = qword_1004C2A98;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 46;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1001FB168()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = sub_1001FB1C8();
  v3 = v2;

  qword_1004C2A98 = v1;
  unk_1004C2AA0 = v3;
}

uint64_t sub_1001FB1C8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  _BYTE v39[16];
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0;
  v2 = 0x6973754D2E414955;
  v3 = sub_1000057B4(&qword_1004B99B0);
  v4 = __chkstk_darwin(v3);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v39[-v7];
  LOBYTE(v42) = 6;
  v9 = sub_1000A9294();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9) & 1) != 0)
  {
    LOBYTE(v42) = 5;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9) & 1) != 0)
    {
      v42 = 0;
      v43 = 0xE000000000000000;
      v10 = objc_msgSend(v0, "bundleIdentifier");
      if (v10)
      {
        v11 = v10;
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v14 = v13;

        v40 = 46;
        v41 = 0xE100000000000000;
        __chkstk_darwin(v15);
        *(_QWORD *)&v39[-16] = &v40;
        swift_bridgeObjectRetain();
        v16 = sub_100205E60(0x7FFFFFFFFFFFFFFFLL, 1, sub_1002065B4, (uint64_t)&v39[-32], v12, v14);
        swift_bridgeObjectRelease(v14);
        v17 = *((_QWORD *)v16 + 2);
        if (v17)
        {
          v18 = (uint64_t *)&v16[32 * v17];
          v19 = *v18;
          v20 = v18[1];
          v22 = v18[2];
          v21 = v18[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease(v16);
LABEL_14:
          v34 = static String._fromSubstring(_:)(v19, v20, v22, v21);
          v36 = v35;
          swift_bridgeObjectRelease(v21);
          v37._countAndFlagsBits = v34;
          v37._object = v36;
          String.append(_:)(v37);
          swift_bridgeObjectRelease(v36);
          return v42;
        }
        swift_bridgeObjectRelease(v16);
      }
      v40 = 0;
      v41 = 0xE000000000000000;
      v23 = objc_msgSend(v1, "executableURL");
      if (v23)
      {
        v24 = v23;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v25 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
      }
      else
      {
        v25 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
      }
      sub_10002DB68((uint64_t)v6, (uint64_t)v8);
      type metadata accessor for URL(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v25) == 1)
      {
        sub_10002DBF8((uint64_t)v8);
        v27 = (void *)0xE500000000000000;
        v28 = 0x636973754DLL;
      }
      else
      {
        v28 = URL.lastPathComponent.getter();
        v27 = v29;
        (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v8, v25);
      }
      v30._countAndFlagsBits = v28;
      v30._object = v27;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v27);
      v19 = Substring.init(_:)(v40, v41);
      v20 = v31;
      v22 = v32;
      v21 = v33;
      goto LABEL_14;
    }
  }
  return v2;
}

uint64_t sub_1001FB4F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6B726F77747241;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease(v4);
  static AccessibilityIdentifier.artwork = v3;
  *(_QWORD *)algn_1004F4C08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artwork.unsafeMutableAddressor()
{
  if (qword_1004B8E28 != -1)
    swift_once(&qword_1004B8E28, sub_1001FB4F4);
  return &static AccessibilityIdentifier.artwork;
}

uint64_t static AccessibilityIdentifier.artwork.getter()
{
  return sub_100204E50(&qword_1004B8E28, &static AccessibilityIdentifier.artwork);
}

uint64_t sub_1001FB604()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0380;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.doneButton = v3;
  *(_QWORD *)algn_1004F4C18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.doneButton.unsafeMutableAddressor()
{
  if (qword_1004B8E30 != -1)
    swift_once(&qword_1004B8E30, sub_1001FB604);
  return &static AccessibilityIdentifier.doneButton;
}

uint64_t static AccessibilityIdentifier.doneButton.getter()
{
  return sub_100204E50(&qword_1004B8E30, &static AccessibilityIdentifier.doneButton);
}

uint64_t sub_1001FB718()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x747475426B636142;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.backButton = v3;
  *(_QWORD *)algn_1004F4C28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.backButton.unsafeMutableAddressor()
{
  if (qword_1004B8E38 != -1)
    swift_once(&qword_1004B8E38, sub_1001FB718);
  return &static AccessibilityIdentifier.backButton;
}

uint64_t static AccessibilityIdentifier.backButton.getter()
{
  return sub_100204E50(&qword_1004B8E38, &static AccessibilityIdentifier.backButton);
}

uint64_t sub_1001FB82C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 1701998413;
  v1._object = (void *)0xE400000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.moreButton = v3;
  *(_QWORD *)algn_1004F4C38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.moreButton.unsafeMutableAddressor()
{
  if (qword_1004B8E40 != -1)
    swift_once(&qword_1004B8E40, sub_1001FB82C);
  return &static AccessibilityIdentifier.moreButton;
}

uint64_t static AccessibilityIdentifier.moreButton.getter()
{
  return sub_100204E50(&qword_1004B8E40, &static AccessibilityIdentifier.moreButton);
}

uint64_t sub_1001FB934()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0360;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.contextMenuButton = v3;
  *(_QWORD *)algn_1004F4C48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.contextMenuButton.unsafeMutableAddressor()
{
  if (qword_1004B8E48 != -1)
    swift_once(&qword_1004B8E48, sub_1001FB934);
  return &static AccessibilityIdentifier.contextMenuButton;
}

uint64_t static AccessibilityIdentifier.contextMenuButton.getter()
{
  return sub_100204E50(&qword_1004B8E48, &static AccessibilityIdentifier.contextMenuButton);
}

uint64_t sub_1001FBA48()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0340;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.calendarButton = v3;
  *(_QWORD *)algn_1004F4C58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.calendarButton.unsafeMutableAddressor()
{
  if (qword_1004B8E50 != -1)
    swift_once(&qword_1004B8E50, sub_1001FBA48);
  return &static AccessibilityIdentifier.calendarButton;
}

uint64_t static AccessibilityIdentifier.calendarButton.getter()
{
  return sub_100204E50(&qword_1004B8E50, &static AccessibilityIdentifier.calendarButton);
}

uint64_t sub_1001FBB5C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x65486C6961746544;
  v1._object = (void *)0xEC00000072656461;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeader = v3;
  *(_QWORD *)algn_1004F4C68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeader.unsafeMutableAddressor()
{
  if (qword_1004B8E58 != -1)
    swift_once(&qword_1004B8E58, sub_1001FBB5C);
  return &static AccessibilityIdentifier.detailHeader;
}

uint64_t static AccessibilityIdentifier.detailHeader.getter()
{
  return sub_100204E50(&qword_1004B8E58, &static AccessibilityIdentifier.detailHeader);
}

uint64_t sub_1001FBC74()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0320;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderTitle = v3;
  *(_QWORD *)algn_1004F4C78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderTitle.unsafeMutableAddressor()
{
  if (qword_1004B8E60 != -1)
    swift_once(&qword_1004B8E60, sub_1001FBC74);
  return &static AccessibilityIdentifier.detailHeaderTitle;
}

uint64_t static AccessibilityIdentifier.detailHeaderTitle.getter()
{
  return sub_100204E50(&qword_1004B8E60, &static AccessibilityIdentifier.detailHeaderTitle);
}

uint64_t sub_1001FBD88()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0300;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderTitleFavorited = v3;
  *(_QWORD *)algn_1004F4C88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderTitleFavorited.unsafeMutableAddressor()
{
  if (qword_1004B8E68 != -1)
    swift_once(&qword_1004B8E68, sub_1001FBD88);
  return &static AccessibilityIdentifier.detailHeaderTitleFavorited;
}

uint64_t static AccessibilityIdentifier.detailHeaderTitleFavorited.getter()
{
  return sub_100204E50(&qword_1004B8E68, &static AccessibilityIdentifier.detailHeaderTitleFavorited);
}

uint64_t sub_1001FBE9C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B02E0;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderLabel = v3;
  *(_QWORD *)algn_1004F4C98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderLabel.unsafeMutableAddressor()
{
  if (qword_1004B8E70 != -1)
    swift_once(&qword_1004B8E70, sub_1001FBE9C);
  return &static AccessibilityIdentifier.detailHeaderLabel;
}

uint64_t static AccessibilityIdentifier.detailHeaderLabel.getter()
{
  return sub_100204E50(&qword_1004B8E70, &static AccessibilityIdentifier.detailHeaderLabel);
}

uint64_t sub_1001FBFB0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B02C0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderArtistLink = v3;
  *(_QWORD *)algn_1004F4CA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderArtistLink.unsafeMutableAddressor()
{
  if (qword_1004B8E78 != -1)
    swift_once(&qword_1004B8E78, sub_1001FBFB0);
  return &static AccessibilityIdentifier.detailHeaderArtistLink;
}

uint64_t static AccessibilityIdentifier.detailHeaderArtistLink.getter()
{
  return sub_100204E50(&qword_1004B8E78, &static AccessibilityIdentifier.detailHeaderArtistLink);
}

uint64_t sub_1001FC0C4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B02A0;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderDescriptionLabel = v3;
  *(_QWORD *)algn_1004F4CB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderDescriptionLabel.unsafeMutableAddressor()
{
  if (qword_1004B8E80 != -1)
    swift_once(&qword_1004B8E80, sub_1001FC0C4);
  return &static AccessibilityIdentifier.detailHeaderDescriptionLabel;
}

uint64_t static AccessibilityIdentifier.detailHeaderDescriptionLabel.getter()
{
  return sub_100204E50(&qword_1004B8E80, &static AccessibilityIdentifier.detailHeaderDescriptionLabel);
}

uint64_t sub_1001FC1D8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0280;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderMore = v3;
  *(_QWORD *)algn_1004F4CC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderMore.unsafeMutableAddressor()
{
  if (qword_1004B8E88 != -1)
    swift_once(&qword_1004B8E88, sub_1001FC1D8);
  return &static AccessibilityIdentifier.detailHeaderMore;
}

uint64_t static AccessibilityIdentifier.detailHeaderMore.getter()
{
  return sub_100204E50(&qword_1004B8E88, &static AccessibilityIdentifier.detailHeaderMore);
}

uint64_t sub_1001FC2EC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0260;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playIntentButton = v3;
  *(_QWORD *)algn_1004F4CD8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor()
{
  if (qword_1004B8E90 != -1)
    swift_once(&qword_1004B8E90, sub_1001FC2EC);
  return &static AccessibilityIdentifier.playIntentButton;
}

uint64_t static AccessibilityIdentifier.playIntentButton.getter()
{
  return sub_100204E50(&qword_1004B8E90, &static AccessibilityIdentifier.playIntentButton);
}

uint64_t sub_1001FC400()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0240;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.shuffleIntentButton = v3;
  *(_QWORD *)algn_1004F4CE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor()
{
  if (qword_1004B8E98 != -1)
    swift_once(&qword_1004B8E98, sub_1001FC400);
  return &static AccessibilityIdentifier.shuffleIntentButton;
}

uint64_t static AccessibilityIdentifier.shuffleIntentButton.getter()
{
  return sub_100204E50(&qword_1004B8E98, &static AccessibilityIdentifier.shuffleIntentButton);
}

uint64_t sub_1001FC514()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0220;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.startSingingIntentButton = v3;
  *(_QWORD *)algn_1004F4CF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor()
{
  if (qword_1004B8EA0 != -1)
    swift_once(&qword_1004B8EA0, sub_1001FC514);
  return &static AccessibilityIdentifier.startSingingIntentButton;
}

uint64_t static AccessibilityIdentifier.startSingingIntentButton.getter()
{
  return sub_100204E50(&qword_1004B8EA0, &static AccessibilityIdentifier.startSingingIntentButton);
}

uint64_t sub_1001FC628()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C6C6543676E6F53;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.songCell = v3;
  *(_QWORD *)algn_1004F4D08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.songCell.unsafeMutableAddressor()
{
  if (qword_1004B8EA8 != -1)
    swift_once(&qword_1004B8EA8, sub_1001FC628);
  return &static AccessibilityIdentifier.songCell;
}

uint64_t static AccessibilityIdentifier.songCell.getter()
{
  return sub_100204E50(&qword_1004B8EA8, &static AccessibilityIdentifier.songCell);
}

uint64_t sub_1001FC738()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x73694C6B63617254;
  v1._object = (void *)0xED00006C6C654374;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCell = v3;
  *(_QWORD *)algn_1004F4D18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCell.unsafeMutableAddressor()
{
  if (qword_1004B8EB0 != -1)
    swift_once(&qword_1004B8EB0, sub_1001FC738);
  return &static AccessibilityIdentifier.trackListCell;
}

uint64_t static AccessibilityIdentifier.trackListCell.getter()
{
  return sub_100204E50(&qword_1004B8EB0, &static AccessibilityIdentifier.trackListCell);
}

uint64_t sub_1001FC854()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0200;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListEmptyCell = v3;
  *(_QWORD *)algn_1004F4D28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListEmptyCell.unsafeMutableAddressor()
{
  if (qword_1004B8EB8 != -1)
    swift_once(&qword_1004B8EB8, sub_1001FC854);
  return &static AccessibilityIdentifier.trackListEmptyCell;
}

uint64_t static AccessibilityIdentifier.trackListEmptyCell.getter()
{
  return sub_100204E50(&qword_1004B8EB8, &static AccessibilityIdentifier.trackListEmptyCell);
}

uint64_t sub_1001FC968()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B01E0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellArtwork = v3;
  *(_QWORD *)algn_1004F4D38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellArtwork.unsafeMutableAddressor()
{
  if (qword_1004B8EC0 != -1)
    swift_once(&qword_1004B8EC0, sub_1001FC968);
  return &static AccessibilityIdentifier.trackListCellArtwork;
}

uint64_t static AccessibilityIdentifier.trackListCellArtwork.getter()
{
  return sub_100204E50(&qword_1004B8EC0, &static AccessibilityIdentifier.trackListCellArtwork);
}

uint64_t sub_1001FCA7C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B01C0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellFavoriteBadge = v3;
  *(_QWORD *)algn_1004F4D48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellFavoriteBadge.unsafeMutableAddressor()
{
  if (qword_1004B8EC8 != -1)
    swift_once(&qword_1004B8EC8, sub_1001FCA7C);
  return &static AccessibilityIdentifier.trackListCellFavoriteBadge;
}

uint64_t static AccessibilityIdentifier.trackListCellFavoriteBadge.getter()
{
  return sub_100204E50(&qword_1004B8EC8, &static AccessibilityIdentifier.trackListCellFavoriteBadge);
}

uint64_t sub_1001FCB90()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B01A0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellPopularBadge = v3;
  *(_QWORD *)algn_1004F4D58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellPopularBadge.unsafeMutableAddressor()
{
  if (qword_1004B8ED0 != -1)
    swift_once(&qword_1004B8ED0, sub_1001FCB90);
  return &static AccessibilityIdentifier.trackListCellPopularBadge;
}

uint64_t static AccessibilityIdentifier.trackListCellPopularBadge.getter()
{
  return sub_100204E50(&qword_1004B8ED0, &static AccessibilityIdentifier.trackListCellPopularBadge);
}

uint64_t sub_1001FCCA4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0180;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellTrackNumber = v3;
  *(_QWORD *)algn_1004F4D68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellTrackNumber.unsafeMutableAddressor()
{
  if (qword_1004B8ED8 != -1)
    swift_once(&qword_1004B8ED8, sub_1001FCCA4);
  return &static AccessibilityIdentifier.trackListCellTrackNumber;
}

uint64_t static AccessibilityIdentifier.trackListCellTrackNumber.getter()
{
  return sub_100204E50(&qword_1004B8ED8, &static AccessibilityIdentifier.trackListCellTrackNumber);
}

uint64_t sub_1001FCDB8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0160;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellChartNumber = v3;
  *(_QWORD *)algn_1004F4D78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellChartNumber.unsafeMutableAddressor()
{
  if (qword_1004B8EE0 != -1)
    swift_once(&qword_1004B8EE0, sub_1001FCDB8);
  return &static AccessibilityIdentifier.trackListCellChartNumber;
}

uint64_t static AccessibilityIdentifier.trackListCellChartNumber.getter()
{
  return sub_100204E50(&qword_1004B8EE0, &static AccessibilityIdentifier.trackListCellChartNumber);
}

uint64_t sub_1001FCECC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0140;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellVideoIcon = v3;
  *(_QWORD *)algn_1004F4D88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellVideoIcon.unsafeMutableAddressor()
{
  if (qword_1004B8EE8 != -1)
    swift_once(&qword_1004B8EE8, sub_1001FCECC);
  return &static AccessibilityIdentifier.trackListCellVideoIcon;
}

uint64_t static AccessibilityIdentifier.trackListCellVideoIcon.getter()
{
  return sub_100204E50(&qword_1004B8EE8, &static AccessibilityIdentifier.trackListCellVideoIcon);
}

uint64_t sub_1001FCFE0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0120;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellTitle = v3;
  *(_QWORD *)algn_1004F4D98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor()
{
  if (qword_1004B8EF0 != -1)
    swift_once(&qword_1004B8EF0, sub_1001FCFE0);
  return &static AccessibilityIdentifier.trackListCellTitle;
}

uint64_t static AccessibilityIdentifier.trackListCellTitle.getter()
{
  return sub_100204E50(&qword_1004B8EF0, &static AccessibilityIdentifier.trackListCellTitle);
}

uint64_t sub_1001FD0F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0100;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellArtist = v3;
  *(_QWORD *)algn_1004F4DA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor()
{
  if (qword_1004B8EF8 != -1)
    swift_once(&qword_1004B8EF8, sub_1001FD0F4);
  return &static AccessibilityIdentifier.trackListCellArtist;
}

uint64_t static AccessibilityIdentifier.trackListCellArtist.getter()
{
  return sub_100204E50(&qword_1004B8EF8, &static AccessibilityIdentifier.trackListCellArtist);
}

uint64_t sub_1001FD208()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B00E0;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellAlbum = v3;
  *(_QWORD *)algn_1004F4DB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellAlbum.unsafeMutableAddressor()
{
  if (qword_1004B8F00 != -1)
    swift_once(&qword_1004B8F00, sub_1001FD208);
  return &static AccessibilityIdentifier.trackListCellAlbum;
}

uint64_t static AccessibilityIdentifier.trackListCellAlbum.getter()
{
  return sub_100204E50(&qword_1004B8F00, &static AccessibilityIdentifier.trackListCellAlbum);
}

uint64_t sub_1001FD31C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B00C0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellDuration = v3;
  *(_QWORD *)algn_1004F4DC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellDuration.unsafeMutableAddressor()
{
  if (qword_1004B8F08 != -1)
    swift_once(&qword_1004B8F08, sub_1001FD31C);
  return &static AccessibilityIdentifier.trackListCellDuration;
}

uint64_t static AccessibilityIdentifier.trackListCellDuration.getter()
{
  return sub_100204E50(&qword_1004B8F08, &static AccessibilityIdentifier.trackListCellDuration);
}

uint64_t sub_1001FD430()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x64616F6C6E776F44;
  v1._object = (void *)0xEE00737574617453;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.downloadStatus = v3;
  *(_QWORD *)algn_1004F4DD8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.downloadStatus.unsafeMutableAddressor()
{
  if (qword_1004B8F10 != -1)
    swift_once(&qword_1004B8F10, sub_1001FD430);
  return &static AccessibilityIdentifier.downloadStatus;
}

uint64_t static AccessibilityIdentifier.downloadStatus.getter()
{
  return sub_100204E50(&qword_1004B8F10, &static AccessibilityIdentifier.downloadStatus);
}

uint64_t sub_1001FD54C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B00A0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsStaticView = v3;
  *(_QWORD *)algn_1004F4DE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsStaticView.unsafeMutableAddressor()
{
  if (qword_1004B8F18 != -1)
    swift_once(&qword_1004B8F18, sub_1001FD54C);
  return &static AccessibilityIdentifier.lyricsStaticView;
}

uint64_t static AccessibilityIdentifier.lyricsStaticView.getter()
{
  return sub_100204E50(&qword_1004B8F18, &static AccessibilityIdentifier.lyricsStaticView);
}

uint64_t sub_1001FD660()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0080;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsSyncedView = v3;
  *(_QWORD *)algn_1004F4DF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsSyncedView.unsafeMutableAddressor()
{
  if (qword_1004B8F20 != -1)
    swift_once(&qword_1004B8F20, sub_1001FD660);
  return &static AccessibilityIdentifier.lyricsSyncedView;
}

uint64_t static AccessibilityIdentifier.lyricsSyncedView.getter()
{
  return sub_100204E50(&qword_1004B8F20, &static AccessibilityIdentifier.lyricsSyncedView);
}

uint64_t sub_1001FD774()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7474754279616C50;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playButton = v3;
  *(_QWORD *)algn_1004F4E08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playButton.unsafeMutableAddressor()
{
  if (qword_1004B8F28 != -1)
    swift_once(&qword_1004B8F28, sub_1001FD774);
  return &static AccessibilityIdentifier.playButton;
}

uint64_t static AccessibilityIdentifier.playButton.getter()
{
  return sub_100204E50(&qword_1004B8F28, &static AccessibilityIdentifier.playButton);
}

uint64_t sub_1001FD888()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7475426573756150;
  v1._object = (void *)0xEB000000006E6F74;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.pauseButton = v3;
  *(_QWORD *)algn_1004F4E18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.pauseButton.unsafeMutableAddressor()
{
  if (qword_1004B8F30 != -1)
    swift_once(&qword_1004B8F30, sub_1001FD888);
  return &static AccessibilityIdentifier.pauseButton;
}

uint64_t static AccessibilityIdentifier.pauseButton.getter()
{
  return sub_100204E50(&qword_1004B8F30, &static AccessibilityIdentifier.pauseButton);
}

uint64_t sub_1001FD9A0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x74747542706F7453;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.stopButton = v3;
  *(_QWORD *)algn_1004F4E28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.stopButton.unsafeMutableAddressor()
{
  if (qword_1004B8F38 != -1)
    swift_once(&qword_1004B8F38, sub_1001FD9A0);
  return &static AccessibilityIdentifier.stopButton;
}

uint64_t static AccessibilityIdentifier.stopButton.getter()
{
  return sub_100204E50(&qword_1004B8F38, &static AccessibilityIdentifier.stopButton);
}

uint64_t sub_1001FDAB4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0060;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.skipForwardButton = v3;
  *(_QWORD *)algn_1004F4E38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.skipForwardButton.unsafeMutableAddressor()
{
  if (qword_1004B8F40 != -1)
    swift_once(&qword_1004B8F40, sub_1001FDAB4);
  return &static AccessibilityIdentifier.skipForwardButton;
}

uint64_t static AccessibilityIdentifier.skipForwardButton.getter()
{
  return sub_100204E50(&qword_1004B8F40, &static AccessibilityIdentifier.skipForwardButton);
}

uint64_t sub_1001FDBC8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0040;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.skipBackwardButton = v3;
  *(_QWORD *)algn_1004F4E48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.skipBackwardButton.unsafeMutableAddressor()
{
  if (qword_1004B8F48 != -1)
    swift_once(&qword_1004B8F48, sub_1001FDBC8);
  return &static AccessibilityIdentifier.skipBackwardButton;
}

uint64_t static AccessibilityIdentifier.skipBackwardButton.getter()
{
  return sub_100204E50(&qword_1004B8F48, &static AccessibilityIdentifier.skipBackwardButton);
}

uint64_t sub_1001FDCDC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x74747542706D754ALL;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.jumpButton = v3;
  *(_QWORD *)algn_1004F4E58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.jumpButton.unsafeMutableAddressor()
{
  if (qword_1004B8F50 != -1)
    swift_once(&qword_1004B8F50, sub_1001FDCDC);
  return &static AccessibilityIdentifier.jumpButton;
}

uint64_t static AccessibilityIdentifier.jumpButton.getter()
{
  return sub_100204E50(&qword_1004B8F50, &static AccessibilityIdentifier.jumpButton);
}

uint64_t sub_1001FDDF0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x547972617262694CLL;
  v1._object = (void *)0xEA00000000006261;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTab = v3;
  *(_QWORD *)algn_1004F4E68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTab.unsafeMutableAddressor()
{
  if (qword_1004B8F58 != -1)
    swift_once(&qword_1004B8F58, sub_1001FDDF0);
  return &static AccessibilityIdentifier.libraryTab;
}

uint64_t static AccessibilityIdentifier.libraryTab.getter()
{
  return sub_100204E50(&qword_1004B8F58, &static AccessibilityIdentifier.libraryTab);
}

uint64_t sub_1001FDF04()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6F4E6E657473694CLL;
  v1._object = (void *)0xEC00000062615477;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.listenNowTab = v3;
  *(_QWORD *)algn_1004F4E78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.listenNowTab.unsafeMutableAddressor()
{
  if (qword_1004B8F60 != -1)
    swift_once(&qword_1004B8F60, sub_1001FDF04);
  return &static AccessibilityIdentifier.listenNowTab;
}

uint64_t static AccessibilityIdentifier.listenNowTab.getter()
{
  return sub_100204E50(&qword_1004B8F60, &static AccessibilityIdentifier.listenNowTab);
}

uint64_t sub_1001FE01C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x61546573776F7242;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.browseTab = v3;
  *(_QWORD *)algn_1004F4E88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.browseTab.unsafeMutableAddressor()
{
  if (qword_1004B8F68 != -1)
    swift_once(&qword_1004B8F68, sub_1001FE01C);
  return &static AccessibilityIdentifier.browseTab;
}

uint64_t static AccessibilityIdentifier.browseTab.getter()
{
  return sub_100204E50(&qword_1004B8F68, &static AccessibilityIdentifier.browseTab);
}

uint64_t sub_1001FE130()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6261546F69646152;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.radioTab = v3;
  *(_QWORD *)algn_1004F4E98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.radioTab.unsafeMutableAddressor()
{
  if (qword_1004B8F70 != -1)
    swift_once(&qword_1004B8F70, sub_1001FE130);
  return &static AccessibilityIdentifier.radioTab;
}

uint64_t static AccessibilityIdentifier.radioTab.getter()
{
  return sub_100204E50(&qword_1004B8F70, &static AccessibilityIdentifier.radioTab);
}

uint64_t sub_1001FE240()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6154686372616553;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.searchTab = v3;
  *(_QWORD *)algn_1004F4EA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.searchTab.unsafeMutableAddressor()
{
  if (qword_1004B8F78 != -1)
    swift_once(&qword_1004B8F78, sub_1001FE240);
  return &static AccessibilityIdentifier.searchTab;
}

uint64_t static AccessibilityIdentifier.searchTab.getter()
{
  return sub_100204E50(&qword_1004B8F78, &static AccessibilityIdentifier.searchTab);
}

uint64_t sub_1001FE354()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6154736F65646956;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.videosTab = v3;
  *(_QWORD *)algn_1004F4EB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.videosTab.unsafeMutableAddressor()
{
  if (qword_1004B8F80 != -1)
    swift_once(&qword_1004B8F80, sub_1001FE354);
  return &static AccessibilityIdentifier.videosTab;
}

uint64_t static AccessibilityIdentifier.videosTab.getter()
{
  return sub_100204E50(&qword_1004B8F80, &static AccessibilityIdentifier.videosTab);
}

uint64_t sub_1001FE468()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0020;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeader = v3;
  *(_QWORD *)algn_1004F4EC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeader.unsafeMutableAddressor()
{
  if (qword_1004B8F88 != -1)
    swift_once(&qword_1004B8F88, sub_1001FE468);
  return &static AccessibilityIdentifier.containerDetailHeader;
}

uint64_t static AccessibilityIdentifier.containerDetailHeader.getter()
{
  return sub_100204E50(&qword_1004B8F88, &static AccessibilityIdentifier.containerDetailHeader);
}

uint64_t sub_1001FE57C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B0000;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderArtwork = v3;
  *(_QWORD *)algn_1004F4ED8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_1004B8F90 != -1)
    swift_once(&qword_1004B8F90, sub_1001FE57C);
  return &static AccessibilityIdentifier.containerDetailHeaderArtwork;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderArtwork.getter()
{
  return sub_100204E50(&qword_1004B8F90, &static AccessibilityIdentifier.containerDetailHeaderArtwork);
}

uint64_t sub_1001FE690()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFFE0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderTitle = v3;
  *(_QWORD *)algn_1004F4EE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderTitle.unsafeMutableAddressor()
{
  if (qword_1004B8F98 != -1)
    swift_once(&qword_1004B8F98, sub_1001FE690);
  return &static AccessibilityIdentifier.containerDetailHeaderTitle;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderTitle.getter()
{
  return sub_100204E50(&qword_1004B8F98, &static AccessibilityIdentifier.containerDetailHeaderTitle);
}

uint64_t sub_1001FE7A4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFFB0;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderAttribution = v3;
  *(_QWORD *)algn_1004F4EF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderAttribution.unsafeMutableAddressor()
{
  if (qword_1004B8FA0 != -1)
    swift_once(&qword_1004B8FA0, sub_1001FE7A4);
  return &static AccessibilityIdentifier.containerDetailHeaderAttribution;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderAttribution.getter()
{
  return sub_100204E50(&qword_1004B8FA0, &static AccessibilityIdentifier.containerDetailHeaderAttribution);
}

uint64_t sub_1001FE8B8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFF90;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderMetadata = v3;
  *(_QWORD *)algn_1004F4F08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderMetadata.unsafeMutableAddressor()
{
  if (qword_1004B8FA8 != -1)
    swift_once(&qword_1004B8FA8, sub_1001FE8B8);
  return &static AccessibilityIdentifier.containerDetailHeaderMetadata;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderMetadata.getter()
{
  return sub_100204E50(&qword_1004B8FA8, &static AccessibilityIdentifier.containerDetailHeaderMetadata);
}

uint64_t sub_1001FE9CC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFF60;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderDescription = v3;
  *(_QWORD *)algn_1004F4F18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderDescription.unsafeMutableAddressor()
{
  if (qword_1004B8FB0 != -1)
    swift_once(&qword_1004B8FB0, sub_1001FE9CC);
  return &static AccessibilityIdentifier.containerDetailHeaderDescription;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderDescription.getter()
{
  return sub_100204E50(&qword_1004B8FB0, &static AccessibilityIdentifier.containerDetailHeaderDescription);
}

uint64_t sub_1001FEAE0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFF30;
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailContextualActionsButton = v3;
  *(_QWORD *)algn_1004F4F28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailContextualActionsButton.unsafeMutableAddressor()
{
  if (qword_1004B8FB8 != -1)
    swift_once(&qword_1004B8FB8, sub_1001FEAE0);
  return &static AccessibilityIdentifier.containerDetailContextualActionsButton;
}

uint64_t static AccessibilityIdentifier.containerDetailContextualActionsButton.getter()
{
  return sub_100204E50(&qword_1004B8FB8, &static AccessibilityIdentifier.containerDetailContextualActionsButton);
}

uint64_t sub_1001FEBF4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFF00;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailFloatingArtwork = v3;
  *(_QWORD *)algn_1004F4F38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailFloatingArtwork.unsafeMutableAddressor()
{
  if (qword_1004B8FC0 != -1)
    swift_once(&qword_1004B8FC0, sub_1001FEBF4);
  return &static AccessibilityIdentifier.containerDetailFloatingArtwork;
}

uint64_t static AccessibilityIdentifier.containerDetailFloatingArtwork.getter()
{
  return sub_100204E50(&qword_1004B8FC0, &static AccessibilityIdentifier.containerDetailFloatingArtwork);
}

uint64_t sub_1001FED08()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFEE0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailStateButton = v3;
  *(_QWORD *)algn_1004F4F48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailStateButton.unsafeMutableAddressor()
{
  if (qword_1004B8FC8 != -1)
    swift_once(&qword_1004B8FC8, sub_1001FED08);
  return &static AccessibilityIdentifier.containerDetailStateButton;
}

uint64_t static AccessibilityIdentifier.containerDetailStateButton.getter()
{
  return sub_100204E50(&qword_1004B8FC8, &static AccessibilityIdentifier.containerDetailStateButton);
}

uint64_t sub_1001FEE1C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFEC0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailAddButton = v3;
  *(_QWORD *)algn_1004F4F58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailAddButton.unsafeMutableAddressor()
{
  if (qword_1004B8FD0 != -1)
    swift_once(&qword_1004B8FD0, sub_1001FEE1C);
  return &static AccessibilityIdentifier.containerDetailAddButton;
}

uint64_t static AccessibilityIdentifier.containerDetailAddButton.getter()
{
  return sub_100204E50(&qword_1004B8FD0, &static AccessibilityIdentifier.containerDetailAddButton);
}

uint64_t sub_1001FEF30()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFEA0;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadButton = v3;
  *(_QWORD *)algn_1004F4F68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadButton.unsafeMutableAddressor()
{
  if (qword_1004B8FD8 != -1)
    swift_once(&qword_1004B8FD8, sub_1001FEF30);
  return &static AccessibilityIdentifier.containerDetailDownloadButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadButton.getter()
{
  return sub_100204E50(&qword_1004B8FD8, &static AccessibilityIdentifier.containerDetailDownloadButton);
}

uint64_t sub_1001FF044()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFE70;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadQueuedButton = v3;
  *(_QWORD *)algn_1004F4F78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadQueuedButton.unsafeMutableAddressor()
{
  if (qword_1004B8FE0 != -1)
    swift_once(&qword_1004B8FE0, sub_1001FF044);
  return &static AccessibilityIdentifier.containerDetailDownloadQueuedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadQueuedButton.getter()
{
  return sub_100204E50(&qword_1004B8FE0, &static AccessibilityIdentifier.containerDetailDownloadQueuedButton);
}

uint64_t sub_1001FF158()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFE40;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadPausedButton = v3;
  *(_QWORD *)algn_1004F4F88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadPausedButton.unsafeMutableAddressor()
{
  if (qword_1004B8FE8 != -1)
    swift_once(&qword_1004B8FE8, sub_1001FF158);
  return &static AccessibilityIdentifier.containerDetailDownloadPausedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadPausedButton.getter()
{
  return sub_100204E50(&qword_1004B8FE8, &static AccessibilityIdentifier.containerDetailDownloadPausedButton);
}

uint64_t sub_1001FF26C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFE10;
  v1._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadingButton = v3;
  *(_QWORD *)algn_1004F4F98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadingButton.unsafeMutableAddressor()
{
  if (qword_1004B8FF0 != -1)
    swift_once(&qword_1004B8FF0, sub_1001FF26C);
  return &static AccessibilityIdentifier.containerDetailDownloadingButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadingButton.getter()
{
  return sub_100204E50(&qword_1004B8FF0, &static AccessibilityIdentifier.containerDetailDownloadingButton);
}

uint64_t sub_1001FF380()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFDE0;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadedButton = v3;
  *(_QWORD *)algn_1004F4FA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadedButton.unsafeMutableAddressor()
{
  if (qword_1004B8FF8 != -1)
    swift_once(&qword_1004B8FF8, sub_1001FF380);
  return &static AccessibilityIdentifier.containerDetailDownloadedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadedButton.getter()
{
  return sub_100204E50(&qword_1004B8FF8, &static AccessibilityIdentifier.containerDetailDownloadedButton);
}

uint64_t sub_1001FF494()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFDB0;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailNavigationBackButton = v3;
  *(_QWORD *)algn_1004F4FB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailNavigationBackButton.unsafeMutableAddressor()
{
  if (qword_1004B9000 != -1)
    swift_once(&qword_1004B9000, sub_1001FF494);
  return &static AccessibilityIdentifier.containerDetailNavigationBackButton;
}

uint64_t static AccessibilityIdentifier.containerDetailNavigationBackButton.getter()
{
  return sub_100204E50(&qword_1004B9000, &static AccessibilityIdentifier.containerDetailNavigationBackButton);
}

uint64_t sub_1001FF5A8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFD80;
  v1._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.albumDetailOpenInClassicalButton = v3;
  *(_QWORD *)algn_1004F4FC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.albumDetailOpenInClassicalButton.unsafeMutableAddressor()
{
  if (qword_1004B9008 != -1)
    swift_once(&qword_1004B9008, sub_1001FF5A8);
  return &static AccessibilityIdentifier.albumDetailOpenInClassicalButton;
}

uint64_t static AccessibilityIdentifier.albumDetailOpenInClassicalButton.getter()
{
  return sub_100204E50(&qword_1004B9008, &static AccessibilityIdentifier.albumDetailOpenInClassicalButton);
}

uint64_t sub_1001FF6BC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFD50;
  v1._countAndFlagsBits = 0xD000000000000023;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistDetailCollaborationControl = v3;
  *(_QWORD *)algn_1004F4FD8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistDetailCollaborationControl.unsafeMutableAddressor()
{
  if (qword_1004B9010 != -1)
    swift_once(&qword_1004B9010, sub_1001FF6BC);
  return &static AccessibilityIdentifier.playlistDetailCollaborationControl;
}

uint64_t static AccessibilityIdentifier.playlistDetailCollaborationControl.getter()
{
  return sub_100204E50(&qword_1004B9010, &static AccessibilityIdentifier.playlistDetailCollaborationControl);
}

uint64_t sub_1001FF7D0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFD30;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCell = v3;
  *(_QWORD *)algn_1004F4FE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCell.unsafeMutableAddressor()
{
  if (qword_1004B9018 != -1)
    swift_once(&qword_1004B9018, sub_1001FF7D0);
  return &static AccessibilityIdentifier.libraryListCell;
}

uint64_t static AccessibilityIdentifier.libraryListCell.getter()
{
  return sub_100204E50(&qword_1004B9018, &static AccessibilityIdentifier.libraryListCell);
}

uint64_t sub_1001FF8E4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFD10;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellArtwork = v3;
  *(_QWORD *)algn_1004F4FF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellArtwork.unsafeMutableAddressor()
{
  if (qword_1004B9020 != -1)
    swift_once(&qword_1004B9020, sub_1001FF8E4);
  return &static AccessibilityIdentifier.libraryListCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryListCellArtwork.getter()
{
  return sub_100204E50(&qword_1004B9020, &static AccessibilityIdentifier.libraryListCellArtwork);
}

uint64_t sub_1001FF9F8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFCF0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellTitle = v3;
  *(_QWORD *)algn_1004F5008 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellTitle.unsafeMutableAddressor()
{
  if (qword_1004B9028 != -1)
    swift_once(&qword_1004B9028, sub_1001FF9F8);
  return &static AccessibilityIdentifier.libraryListCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryListCellTitle.getter()
{
  return sub_100204E50(&qword_1004B9028, &static AccessibilityIdentifier.libraryListCellTitle);
}

uint64_t sub_1001FFB0C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFCD0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellSubtitle = v3;
  *(_QWORD *)algn_1004F5018 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellSubtitle.unsafeMutableAddressor()
{
  if (qword_1004B9030 != -1)
    swift_once(&qword_1004B9030, sub_1001FFB0C);
  return &static AccessibilityIdentifier.libraryListCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryListCellSubtitle.getter()
{
  return sub_100204E50(&qword_1004B9030, &static AccessibilityIdentifier.libraryListCellSubtitle);
}

uint64_t sub_1001FFC20()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFCB0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCell = v3;
  *(_QWORD *)algn_1004F5028 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCell.unsafeMutableAddressor()
{
  if (qword_1004B9038 != -1)
    swift_once(&qword_1004B9038, sub_1001FFC20);
  return &static AccessibilityIdentifier.libraryGridCell;
}

uint64_t static AccessibilityIdentifier.libraryGridCell.getter()
{
  return sub_100204E50(&qword_1004B9038, &static AccessibilityIdentifier.libraryGridCell);
}

uint64_t sub_1001FFD34()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFC90;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellArtwork = v3;
  *(_QWORD *)algn_1004F5038 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellArtwork.unsafeMutableAddressor()
{
  if (qword_1004B9040 != -1)
    swift_once(&qword_1004B9040, sub_1001FFD34);
  return &static AccessibilityIdentifier.libraryGridCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryGridCellArtwork.getter()
{
  return sub_100204E50(&qword_1004B9040, &static AccessibilityIdentifier.libraryGridCellArtwork);
}

uint64_t sub_1001FFE48()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFC70;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellTitle = v3;
  *(_QWORD *)algn_1004F5048 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellTitle.unsafeMutableAddressor()
{
  if (qword_1004B9048 != -1)
    swift_once(&qword_1004B9048, sub_1001FFE48);
  return &static AccessibilityIdentifier.libraryGridCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryGridCellTitle.getter()
{
  return sub_100204E50(&qword_1004B9048, &static AccessibilityIdentifier.libraryGridCellTitle);
}

uint64_t sub_1001FFF5C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFC50;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellSubtitle = v3;
  *(_QWORD *)algn_1004F5058 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellSubtitle.unsafeMutableAddressor()
{
  if (qword_1004B9050 != -1)
    swift_once(&qword_1004B9050, sub_1001FFF5C);
  return &static AccessibilityIdentifier.libraryGridCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryGridCellSubtitle.getter()
{
  return sub_100204E50(&qword_1004B9050, &static AccessibilityIdentifier.libraryGridCellSubtitle);
}

uint64_t sub_100200070()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFC30;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryContextMenuButton = v3;
  *(_QWORD *)algn_1004F5068 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryContextMenuButton.unsafeMutableAddressor()
{
  if (qword_1004B9058 != -1)
    swift_once(&qword_1004B9058, sub_100200070);
  return &static AccessibilityIdentifier.libraryContextMenuButton;
}

uint64_t static AccessibilityIdentifier.libraryContextMenuButton.getter()
{
  return sub_100204E50(&qword_1004B9058, &static AccessibilityIdentifier.libraryContextMenuButton);
}

uint64_t sub_100200184()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFC10;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFilterOptionsButton = v3;
  *(_QWORD *)algn_1004F5078 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor()
{
  if (qword_1004B9060 != -1)
    swift_once(&qword_1004B9060, sub_100200184);
  return &static AccessibilityIdentifier.libraryFilterOptionsButton;
}

uint64_t static AccessibilityIdentifier.libraryFilterOptionsButton.getter()
{
  return sub_100204E50(&qword_1004B9060, &static AccessibilityIdentifier.libraryFilterOptionsButton);
}

uint64_t sub_100200298()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFBF0;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFilterMenu = v3;
  *(_QWORD *)algn_1004F5088 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFilterMenu.unsafeMutableAddressor()
{
  if (qword_1004B9068 != -1)
    swift_once(&qword_1004B9068, sub_100200298);
  return &static AccessibilityIdentifier.libraryFilterMenu;
}

uint64_t static AccessibilityIdentifier.libraryFilterMenu.getter()
{
  return sub_100204E50(&qword_1004B9068, &static AccessibilityIdentifier.libraryFilterMenu);
}

uint64_t sub_1002003AC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFBD0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.librarySortOptionsButton = v3;
  *(_QWORD *)algn_1004F5098 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.librarySortOptionsButton.unsafeMutableAddressor()
{
  if (qword_1004B9070 != -1)
    swift_once(&qword_1004B9070, sub_1002003AC);
  return &static AccessibilityIdentifier.librarySortOptionsButton;
}

uint64_t static AccessibilityIdentifier.librarySortOptionsButton.getter()
{
  return sub_100204E50(&qword_1004B9070, &static AccessibilityIdentifier.librarySortOptionsButton);
}

uint64_t sub_1002004C0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFBB0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCell = v3;
  *(_QWORD *)algn_1004F50A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCell.unsafeMutableAddressor()
{
  if (qword_1004B9078 != -1)
    swift_once(&qword_1004B9078, sub_1002004C0);
  return &static AccessibilityIdentifier.libraryTrackCell;
}

uint64_t static AccessibilityIdentifier.libraryTrackCell.getter()
{
  return sub_100204E50(&qword_1004B9078, &static AccessibilityIdentifier.libraryTrackCell);
}

uint64_t sub_1002005D4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFB90;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellArtwork = v3;
  *(_QWORD *)algn_1004F50B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellArtwork.unsafeMutableAddressor()
{
  if (qword_1004B9080 != -1)
    swift_once(&qword_1004B9080, sub_1002005D4);
  return &static AccessibilityIdentifier.libraryTrackCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellArtwork.getter()
{
  return sub_100204E50(&qword_1004B9080, &static AccessibilityIdentifier.libraryTrackCellArtwork);
}

uint64_t sub_1002006E8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFB70;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellTitle = v3;
  *(_QWORD *)algn_1004F50C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellTitle.unsafeMutableAddressor()
{
  if (qword_1004B9088 != -1)
    swift_once(&qword_1004B9088, sub_1002006E8);
  return &static AccessibilityIdentifier.libraryTrackCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellTitle.getter()
{
  return sub_100204E50(&qword_1004B9088, &static AccessibilityIdentifier.libraryTrackCellTitle);
}

uint64_t sub_1002007FC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFB50;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellSubtitle = v3;
  *(_QWORD *)algn_1004F50D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellSubtitle.unsafeMutableAddressor()
{
  if (qword_1004B9090 != -1)
    swift_once(&qword_1004B9090, sub_1002007FC);
  return &static AccessibilityIdentifier.libraryTrackCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellSubtitle.getter()
{
  return sub_100204E50(&qword_1004B9090, &static AccessibilityIdentifier.libraryTrackCellSubtitle);
}

uint64_t sub_100200910()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFB30;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellDetailText = v3;
  *(_QWORD *)algn_1004F50E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellDetailText.unsafeMutableAddressor()
{
  if (qword_1004B9098 != -1)
    swift_once(&qword_1004B9098, sub_100200910);
  return &static AccessibilityIdentifier.libraryTrackCellDetailText;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellDetailText.getter()
{
  return sub_100204E50(&qword_1004B9098, &static AccessibilityIdentifier.libraryTrackCellDetailText);
}

uint64_t sub_100200A24()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFB10;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellDuration = v3;
  *(_QWORD *)algn_1004F50F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellDuration.unsafeMutableAddressor()
{
  if (qword_1004B90A0 != -1)
    swift_once(&qword_1004B90A0, sub_100200A24);
  return &static AccessibilityIdentifier.libraryTrackCellDuration;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellDuration.getter()
{
  return sub_100204E50(&qword_1004B90A0, &static AccessibilityIdentifier.libraryTrackCellDuration);
}

uint64_t sub_100200B38()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFAF0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTextCell = v3;
  *(_QWORD *)algn_1004F5108 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTextCell.unsafeMutableAddressor()
{
  if (qword_1004B90A8 != -1)
    swift_once(&qword_1004B90A8, sub_100200B38);
  return &static AccessibilityIdentifier.libraryTextCell;
}

uint64_t static AccessibilityIdentifier.libraryTextCell.getter()
{
  return sub_100204E50(&qword_1004B90A8, &static AccessibilityIdentifier.libraryTextCell);
}

uint64_t sub_100200C4C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFAD0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFavoriteBadge = v3;
  *(_QWORD *)algn_1004F5118 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFavoriteBadge.unsafeMutableAddressor()
{
  if (qword_1004B90B0 != -1)
    swift_once(&qword_1004B90B0, sub_100200C4C);
  return &static AccessibilityIdentifier.libraryFavoriteBadge;
}

uint64_t static AccessibilityIdentifier.libraryFavoriteBadge.getter()
{
  return sub_100204E50(&qword_1004B90B0, &static AccessibilityIdentifier.libraryFavoriteBadge);
}

uint64_t sub_100200D60()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFAB0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMenuView = v3;
  *(_QWORD *)algn_1004F5128 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMenuView.unsafeMutableAddressor()
{
  if (qword_1004B90B8 != -1)
    swift_once(&qword_1004B90B8, sub_100200D60);
  return &static AccessibilityIdentifier.libraryMenuView;
}

uint64_t static AccessibilityIdentifier.libraryMenuView.getter()
{
  return sub_100204E50(&qword_1004B90B8, &static AccessibilityIdentifier.libraryMenuView);
}

uint64_t sub_100200E74()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFA90;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryContentView = v3;
  *(_QWORD *)algn_1004F5138 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryContentView.unsafeMutableAddressor()
{
  if (qword_1004B90C0 != -1)
    swift_once(&qword_1004B90C0, sub_100200E74);
  return &static AccessibilityIdentifier.libraryContentView;
}

uint64_t static AccessibilityIdentifier.libraryContentView.getter()
{
  return sub_100204E50(&qword_1004B90C0, &static AccessibilityIdentifier.libraryContentView);
}

uint64_t sub_100200F88()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x567972617262694CLL;
  v1._object = (void *)0xEB00000000776569;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryView = v3;
  *(_QWORD *)algn_1004F5148 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryView.unsafeMutableAddressor()
{
  if (qword_1004B90C8 != -1)
    swift_once(&qword_1004B90C8, sub_100200F88);
  return &static AccessibilityIdentifier.libraryView;
}

uint64_t static AccessibilityIdentifier.libraryView.getter()
{
  return sub_100204E50(&qword_1004B90C8, &static AccessibilityIdentifier.libraryView);
}

uint64_t sub_1002010A0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFA70;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryRecentlyAddedView = v3;
  *(_QWORD *)algn_1004F5158 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryRecentlyAddedView.unsafeMutableAddressor()
{
  if (qword_1004B90D0 != -1)
    swift_once(&qword_1004B90D0, sub_1002010A0);
  return &static AccessibilityIdentifier.libraryRecentlyAddedView;
}

uint64_t static AccessibilityIdentifier.libraryRecentlyAddedView.getter()
{
  return sub_100204E50(&qword_1004B90D0, &static AccessibilityIdentifier.libraryRecentlyAddedView);
}

uint64_t sub_1002011B4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFA50;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryArtistsListView = v3;
  *(_QWORD *)algn_1004F5168 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryArtistsListView.unsafeMutableAddressor()
{
  if (qword_1004B90D8 != -1)
    swift_once(&qword_1004B90D8, sub_1002011B4);
  return &static AccessibilityIdentifier.libraryArtistsListView;
}

uint64_t static AccessibilityIdentifier.libraryArtistsListView.getter()
{
  return sub_100204E50(&qword_1004B90D8, &static AccessibilityIdentifier.libraryArtistsListView);
}

uint64_t sub_1002012C8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFA20;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryArtistsDetailView = v3;
  *(_QWORD *)algn_1004F5178 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryArtistsDetailView.unsafeMutableAddressor()
{
  if (qword_1004B90E0 != -1)
    swift_once(&qword_1004B90E0, sub_1002012C8);
  return &static AccessibilityIdentifier.libraryArtistsDetailView;
}

uint64_t static AccessibilityIdentifier.libraryArtistsDetailView.getter()
{
  return sub_100204E50(&qword_1004B90E0, &static AccessibilityIdentifier.libraryArtistsDetailView);
}

uint64_t sub_1002013DC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AFA00;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryAlbumsView = v3;
  *(_QWORD *)algn_1004F5188 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryAlbumsView.unsafeMutableAddressor()
{
  if (qword_1004B90E8 != -1)
    swift_once(&qword_1004B90E8, sub_1002013DC);
  return &static AccessibilityIdentifier.libraryAlbumsView;
}

uint64_t static AccessibilityIdentifier.libraryAlbumsView.getter()
{
  return sub_100204E50(&qword_1004B90E8, &static AccessibilityIdentifier.libraryAlbumsView);
}

uint64_t sub_1002014F0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF9E0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryComposersView = v3;
  *(_QWORD *)algn_1004F5198 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryComposersView.unsafeMutableAddressor()
{
  if (qword_1004B90F0 != -1)
    swift_once(&qword_1004B90F0, sub_1002014F0);
  return &static AccessibilityIdentifier.libraryComposersView;
}

uint64_t static AccessibilityIdentifier.libraryComposersView.getter()
{
  return sub_100204E50(&qword_1004B90F0, &static AccessibilityIdentifier.libraryComposersView);
}

uint64_t sub_100201604()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF9C0;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryCompilationsView = v3;
  *(_QWORD *)algn_1004F51A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryCompilationsView.unsafeMutableAddressor()
{
  if (qword_1004B90F8 != -1)
    swift_once(&qword_1004B90F8, sub_100201604);
  return &static AccessibilityIdentifier.libraryCompilationsView;
}

uint64_t static AccessibilityIdentifier.libraryCompilationsView.getter()
{
  return sub_100204E50(&qword_1004B90F8, &static AccessibilityIdentifier.libraryCompilationsView);
}

uint64_t sub_100201718()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF9A0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryDownloadedView = v3;
  *(_QWORD *)algn_1004F51B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryDownloadedView.unsafeMutableAddressor()
{
  if (qword_1004B9100 != -1)
    swift_once(&qword_1004B9100, sub_100201718);
  return &static AccessibilityIdentifier.libraryDownloadedView;
}

uint64_t static AccessibilityIdentifier.libraryDownloadedView.getter()
{
  return sub_100204E50(&qword_1004B9100, &static AccessibilityIdentifier.libraryDownloadedView);
}

uint64_t sub_10020182C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF980;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryDownloadingView = v3;
  *(_QWORD *)algn_1004F51C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryDownloadingView.unsafeMutableAddressor()
{
  if (qword_1004B9108 != -1)
    swift_once(&qword_1004B9108, sub_10020182C);
  return &static AccessibilityIdentifier.libraryDownloadingView;
}

uint64_t static AccessibilityIdentifier.libraryDownloadingView.getter()
{
  return sub_100204E50(&qword_1004B9108, &static AccessibilityIdentifier.libraryDownloadingView);
}

uint64_t sub_100201940()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF960;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryHomeSharingView = v3;
  *(_QWORD *)algn_1004F51D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryHomeSharingView.unsafeMutableAddressor()
{
  if (qword_1004B9110 != -1)
    swift_once(&qword_1004B9110, sub_100201940);
  return &static AccessibilityIdentifier.libraryHomeSharingView;
}

uint64_t static AccessibilityIdentifier.libraryHomeSharingView.getter()
{
  return sub_100204E50(&qword_1004B9110, &static AccessibilityIdentifier.libraryHomeSharingView);
}

uint64_t sub_100201A54()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF940;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGenresView = v3;
  *(_QWORD *)algn_1004F51E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGenresView.unsafeMutableAddressor()
{
  if (qword_1004B9118 != -1)
    swift_once(&qword_1004B9118, sub_100201A54);
  return &static AccessibilityIdentifier.libraryGenresView;
}

uint64_t static AccessibilityIdentifier.libraryGenresView.getter()
{
  return sub_100204E50(&qword_1004B9118, &static AccessibilityIdentifier.libraryGenresView);
}

uint64_t sub_100201B68()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF920;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMadeForYouView = v3;
  *(_QWORD *)algn_1004F51F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMadeForYouView.unsafeMutableAddressor()
{
  if (qword_1004B9120 != -1)
    swift_once(&qword_1004B9120, sub_100201B68);
  return &static AccessibilityIdentifier.libraryMadeForYouView;
}

uint64_t static AccessibilityIdentifier.libraryMadeForYouView.getter()
{
  return sub_100204E50(&qword_1004B9120, &static AccessibilityIdentifier.libraryMadeForYouView);
}

uint64_t sub_100201C7C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF900;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMusicVideosView = v3;
  *(_QWORD *)algn_1004F5208 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMusicVideosView.unsafeMutableAddressor()
{
  if (qword_1004B9128 != -1)
    swift_once(&qword_1004B9128, sub_100201C7C);
  return &static AccessibilityIdentifier.libraryMusicVideosView;
}

uint64_t static AccessibilityIdentifier.libraryMusicVideosView.getter()
{
  return sub_100204E50(&qword_1004B9128, &static AccessibilityIdentifier.libraryMusicVideosView);
}

uint64_t sub_100201D90()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF8E0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryPlaylistsView = v3;
  *(_QWORD *)algn_1004F5218 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryPlaylistsView.unsafeMutableAddressor()
{
  if (qword_1004B9130 != -1)
    swift_once(&qword_1004B9130, sub_100201D90);
  return &static AccessibilityIdentifier.libraryPlaylistsView;
}

uint64_t static AccessibilityIdentifier.libraryPlaylistsView.getter()
{
  return sub_100204E50(&qword_1004B9130, &static AccessibilityIdentifier.libraryPlaylistsView);
}

uint64_t sub_100201EA4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF8C0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.librarySongsView = v3;
  *(_QWORD *)algn_1004F5228 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.librarySongsView.unsafeMutableAddressor()
{
  if (qword_1004B9138 != -1)
    swift_once(&qword_1004B9138, sub_100201EA4);
  return &static AccessibilityIdentifier.librarySongsView;
}

uint64_t static AccessibilityIdentifier.librarySongsView.getter()
{
  return sub_100204E50(&qword_1004B9138, &static AccessibilityIdentifier.librarySongsView);
}

uint64_t sub_100201FB8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF8A0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTVAndMoviesView = v3;
  *(_QWORD *)algn_1004F5238 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTVAndMoviesView.unsafeMutableAddressor()
{
  if (qword_1004B9140 != -1)
    swift_once(&qword_1004B9140, sub_100201FB8);
  return &static AccessibilityIdentifier.libraryTVAndMoviesView;
}

uint64_t static AccessibilityIdentifier.libraryTVAndMoviesView.getter()
{
  return sub_100204E50(&qword_1004B9140, &static AccessibilityIdentifier.libraryTVAndMoviesView);
}

uint64_t sub_1002020CC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF880;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTVEpisodesView = v3;
  *(_QWORD *)algn_1004F5248 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTVEpisodesView.unsafeMutableAddressor()
{
  if (qword_1004B9148 != -1)
    swift_once(&qword_1004B9148, sub_1002020CC);
  return &static AccessibilityIdentifier.libraryTVEpisodesView;
}

uint64_t static AccessibilityIdentifier.libraryTVEpisodesView.getter()
{
  return sub_100204E50(&qword_1004B9148, &static AccessibilityIdentifier.libraryTVEpisodesView);
}

uint64_t sub_1002021E0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF860;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.listenNowContentView = v3;
  *(_QWORD *)algn_1004F5258 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.listenNowContentView.unsafeMutableAddressor()
{
  if (qword_1004B9150 != -1)
    swift_once(&qword_1004B9150, sub_1002021E0);
  return &static AccessibilityIdentifier.listenNowContentView;
}

uint64_t static AccessibilityIdentifier.listenNowContentView.getter()
{
  return sub_100204E50(&qword_1004B9150, &static AccessibilityIdentifier.listenNowContentView);
}

uint64_t sub_1002022F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF840;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.browseContentView = v3;
  *(_QWORD *)algn_1004F5268 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.browseContentView.unsafeMutableAddressor()
{
  if (qword_1004B9158 != -1)
    swift_once(&qword_1004B9158, sub_1002022F4);
  return &static AccessibilityIdentifier.browseContentView;
}

uint64_t static AccessibilityIdentifier.browseContentView.getter()
{
  return sub_100204E50(&qword_1004B9158, &static AccessibilityIdentifier.browseContentView);
}

uint64_t sub_100202408()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF820;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.radioContentView = v3;
  *(_QWORD *)algn_1004F5278 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.radioContentView.unsafeMutableAddressor()
{
  if (qword_1004B9160 != -1)
    swift_once(&qword_1004B9160, sub_100202408);
  return &static AccessibilityIdentifier.radioContentView;
}

uint64_t static AccessibilityIdentifier.radioContentView.getter()
{
  return sub_100204E50(&qword_1004B9160, &static AccessibilityIdentifier.radioContentView);
}

uint64_t sub_10020251C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF800;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.searchContentView = v3;
  *(_QWORD *)algn_1004F5288 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.searchContentView.unsafeMutableAddressor()
{
  if (qword_1004B9168 != -1)
    swift_once(&qword_1004B9168, sub_10020251C);
  return &static AccessibilityIdentifier.searchContentView;
}

uint64_t static AccessibilityIdentifier.searchContentView.getter()
{
  return sub_100204E50(&qword_1004B9168, &static AccessibilityIdentifier.searchContentView);
}

uint64_t sub_100202630()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF7E0;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.videosContentView = v3;
  *(_QWORD *)algn_1004F5298 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.videosContentView.unsafeMutableAddressor()
{
  if (qword_1004B9170 != -1)
    swift_once(&qword_1004B9170, sub_100202630);
  return &static AccessibilityIdentifier.videosContentView;
}

uint64_t static AccessibilityIdentifier.videosContentView.getter()
{
  return sub_100204E50(&qword_1004B9170, &static AccessibilityIdentifier.videosContentView);
}

uint64_t sub_100202744()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x5672616265646953;
  v1._object = (void *)0xEB00000000776569;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.sidebarView = v3;
  *(_QWORD *)algn_1004F52A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.sidebarView.unsafeMutableAddressor()
{
  if (qword_1004B9178 != -1)
    swift_once(&qword_1004B9178, sub_100202744);
  return &static AccessibilityIdentifier.sidebarView;
}

uint64_t static AccessibilityIdentifier.sidebarView.getter()
{
  return sub_100204E50(&qword_1004B9178, &static AccessibilityIdentifier.sidebarView);
}

uint64_t sub_10020285C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6979616C50776F4ELL;
  v1._object = (void *)0xEE0077656956676ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingView = v3;
  *(_QWORD *)algn_1004F52B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingView.unsafeMutableAddressor()
{
  if (qword_1004B9180 != -1)
    swift_once(&qword_1004B9180, sub_10020285C);
  return &static AccessibilityIdentifier.nowPlayingView;
}

uint64_t static AccessibilityIdentifier.nowPlayingView.getter()
{
  return sub_100204E50(&qword_1004B9180, &static AccessibilityIdentifier.nowPlayingView);
}

uint64_t sub_100202978()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF7C0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.bottomPlayerView = v3;
  *(_QWORD *)algn_1004F52C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.bottomPlayerView.unsafeMutableAddressor()
{
  if (qword_1004B9188 != -1)
    swift_once(&qword_1004B9188, sub_100202978);
  return &static AccessibilityIdentifier.bottomPlayerView;
}

uint64_t static AccessibilityIdentifier.bottomPlayerView.getter()
{
  return sub_100204E50(&qword_1004B9188, &static AccessibilityIdentifier.bottomPlayerView);
}

uint64_t sub_100202A8C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF7A0;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingShuffleButton = v3;
  *(_QWORD *)algn_1004F52D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingShuffleButton.unsafeMutableAddressor()
{
  if (qword_1004B9190 != -1)
    swift_once(&qword_1004B9190, sub_100202A8C);
  return &static AccessibilityIdentifier.nowPlayingShuffleButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingShuffleButton.getter()
{
  return sub_100204E50(&qword_1004B9190, &static AccessibilityIdentifier.nowPlayingShuffleButton);
}

uint64_t sub_100202BA0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF780;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingRepeatButton = v3;
  *(_QWORD *)algn_1004F52E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingRepeatButton.unsafeMutableAddressor()
{
  if (qword_1004B9198 != -1)
    swift_once(&qword_1004B9198, sub_100202BA0);
  return &static AccessibilityIdentifier.nowPlayingRepeatButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingRepeatButton.getter()
{
  return sub_100204E50(&qword_1004B9198, &static AccessibilityIdentifier.nowPlayingRepeatButton);
}

uint64_t sub_100202CB4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF760;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingAutoPlayButton = v3;
  *(_QWORD *)algn_1004F52F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingAutoPlayButton.unsafeMutableAddressor()
{
  if (qword_1004B91A0 != -1)
    swift_once(&qword_1004B91A0, sub_100202CB4);
  return &static AccessibilityIdentifier.nowPlayingAutoPlayButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingAutoPlayButton.getter()
{
  return sub_100204E50(&qword_1004B91A0, &static AccessibilityIdentifier.nowPlayingAutoPlayButton);
}

uint64_t sub_100202DC8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF740;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingFavoriteButton = v3;
  *(_QWORD *)algn_1004F5308 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingFavoriteButton.unsafeMutableAddressor()
{
  if (qword_1004B91A8 != -1)
    swift_once(&qword_1004B91A8, sub_100202DC8);
  return &static AccessibilityIdentifier.nowPlayingFavoriteButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingFavoriteButton.getter()
{
  return sub_100204E50(&qword_1004B91A8, &static AccessibilityIdentifier.nowPlayingFavoriteButton);
}

uint64_t sub_100202EDC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x747475426574754DLL;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.muteButton = v3;
  *(_QWORD *)algn_1004F5318 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.muteButton.unsafeMutableAddressor()
{
  if (qword_1004B91B0 != -1)
    swift_once(&qword_1004B91B0, sub_100202EDC);
  return &static AccessibilityIdentifier.muteButton;
}

uint64_t static AccessibilityIdentifier.muteButton.getter()
{
  return sub_100204E50(&qword_1004B91B0, &static AccessibilityIdentifier.muteButton);
}

uint64_t sub_100202FF0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C53656D756C6F56;
  v1._object = (void *)0xEC00000072656469;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.volumeSlider = v3;
  *(_QWORD *)algn_1004F5328 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.volumeSlider.unsafeMutableAddressor()
{
  if (qword_1004B91B8 != -1)
    swift_once(&qword_1004B91B8, sub_100202FF0);
  return &static AccessibilityIdentifier.volumeSlider;
}

uint64_t static AccessibilityIdentifier.volumeSlider.getter()
{
  return sub_100204E50(&qword_1004B91B8, &static AccessibilityIdentifier.volumeSlider);
}

uint64_t sub_100203108()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6B63616279616C50;
  v1._object = (void *)0xEE00726564696C53;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playbackSlider = v3;
  *(_QWORD *)algn_1004F5338 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playbackSlider.unsafeMutableAddressor()
{
  if (qword_1004B91C0 != -1)
    swift_once(&qword_1004B91C0, sub_100203108);
  return &static AccessibilityIdentifier.playbackSlider;
}

uint64_t static AccessibilityIdentifier.playbackSlider.getter()
{
  return sub_100204E50(&qword_1004B91C0, &static AccessibilityIdentifier.playbackSlider);
}

uint64_t sub_100203224()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x412E726579616C50;
  v1._object = (void *)0xEE006B726F777472;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playerArtwork = v3;
  *(_QWORD *)algn_1004F5348 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playerArtwork.unsafeMutableAddressor()
{
  if (qword_1004B91C8 != -1)
    swift_once(&qword_1004B91C8, sub_100203224);
  return &static AccessibilityIdentifier.playerArtwork;
}

uint64_t static AccessibilityIdentifier.playerArtwork.getter()
{
  return sub_100204E50(&qword_1004B91C8, &static AccessibilityIdentifier.playerArtwork);
}

uint64_t sub_100203340()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF720;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playerMenuButton = v3;
  *(_QWORD *)algn_1004F5358 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playerMenuButton.unsafeMutableAddressor()
{
  if (qword_1004B91D0 != -1)
    swift_once(&qword_1004B91D0, sub_100203340);
  return &static AccessibilityIdentifier.playerMenuButton;
}

uint64_t static AccessibilityIdentifier.playerMenuButton.getter()
{
  return sub_100204E50(&qword_1004B91D0, &static AccessibilityIdentifier.playerMenuButton);
}

uint64_t sub_100203454()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x754273636972794CLL;
  v1._object = (void *)0xEC0000006E6F7474;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsButton = v3;
  *(_QWORD *)algn_1004F5368 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsButton.unsafeMutableAddressor()
{
  if (qword_1004B91D8 != -1)
    swift_once(&qword_1004B91D8, sub_100203454);
  return &static AccessibilityIdentifier.lyricsButton;
}

uint64_t static AccessibilityIdentifier.lyricsButton.getter()
{
  return sub_100204E50(&qword_1004B91D8, &static AccessibilityIdentifier.lyricsButton);
}

uint64_t sub_10020356C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF700;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playbackQueueButton = v3;
  *(_QWORD *)algn_1004F5378 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playbackQueueButton.unsafeMutableAddressor()
{
  if (qword_1004B91E0 != -1)
    swift_once(&qword_1004B91E0, sub_10020356C);
  return &static AccessibilityIdentifier.playbackQueueButton;
}

uint64_t static AccessibilityIdentifier.playbackQueueButton.getter()
{
  return sub_100204E50(&qword_1004B91E0, &static AccessibilityIdentifier.playbackQueueButton);
}

uint64_t sub_100203680()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF6E0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsView = v3;
  *(_QWORD *)algn_1004F5388 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsView.unsafeMutableAddressor()
{
  if (qword_1004B91E8 != -1)
    swift_once(&qword_1004B91E8, sub_100203680);
  return &static AccessibilityIdentifier.playlistSuggestedSongsView;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsView.getter()
{
  return sub_100204E50(&qword_1004B91E8, &static AccessibilityIdentifier.playlistSuggestedSongsView);
}

uint64_t sub_100203794()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF6B0;
  v1._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton = v3;
  *(_QWORD *)algn_1004F5398 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.unsafeMutableAddressor()
{
  if (qword_1004B91F0 != -1)
    swift_once(&qword_1004B91F0, sub_100203794);
  return &static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.getter()
{
  return sub_100204E50(&qword_1004B91F0, &static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton);
}

uint64_t sub_1002038A8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF690;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCell = v3;
  *(_QWORD *)algn_1004F53A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCell.unsafeMutableAddressor()
{
  if (qword_1004B91F8 != -1)
    swift_once(&qword_1004B91F8, sub_1002038A8);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCell;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCell.getter()
{
  return sub_100204E50(&qword_1004B91F8, &static AccessibilityIdentifier.playlistSuggestedSongsCell);
}

uint64_t sub_1002039BC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF660;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork = v3;
  *(_QWORD *)algn_1004F53B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.unsafeMutableAddressor()
{
  if (qword_1004B9200 != -1)
    swift_once(&qword_1004B9200, sub_1002039BC);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.getter()
{
  return sub_100204E50(&qword_1004B9200, &static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork);
}

uint64_t sub_100203AD0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF630;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellTitle = v3;
  *(_QWORD *)algn_1004F53C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor()
{
  if (qword_1004B9208 != -1)
    swift_once(&qword_1004B9208, sub_100203AD0);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellTitle;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellTitle.getter()
{
  return sub_100204E50(&qword_1004B9208, &static AccessibilityIdentifier.playlistSuggestedSongsCellTitle);
}

uint64_t sub_100203BE4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF600;
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName = v3;
  *(_QWORD *)algn_1004F53D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor()
{
  if (qword_1004B9210 != -1)
    swift_once(&qword_1004B9210, sub_100203BE4);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.getter()
{
  return sub_100204E50(&qword_1004B9210, &static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName);
}

uint64_t sub_100203CF8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF5D0;
  v1._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellDuration = v3;
  *(_QWORD *)algn_1004F53E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellDuration.unsafeMutableAddressor()
{
  if (qword_1004B9218 != -1)
    swift_once(&qword_1004B9218, sub_100203CF8);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellDuration;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellDuration.getter()
{
  return sub_100204E50(&qword_1004B9218, &static AccessibilityIdentifier.playlistSuggestedSongsCellDuration);
}

uint64_t sub_100203E0C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF5A0;
  v1._countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton = v3;
  *(_QWORD *)algn_1004F53F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.unsafeMutableAddressor()
{
  if (qword_1004B9220 != -1)
    swift_once(&qword_1004B9220, sub_100203E0C);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.getter()
{
  return sub_100204E50(&qword_1004B9220, &static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton);
}

uint64_t sub_100203F20()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x636973754D646441;
  v1._object = (void *)0xEE006E6F74747542;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.addMusicButton = v3;
  *(_QWORD *)algn_1004F5408 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.addMusicButton.unsafeMutableAddressor()
{
  if (qword_1004B9228 != -1)
    swift_once(&qword_1004B9228, sub_100203F20);
  return &static AccessibilityIdentifier.addMusicButton;
}

uint64_t static AccessibilityIdentifier.addMusicButton.getter()
{
  return sub_100204E50(&qword_1004B9228, &static AccessibilityIdentifier.addMusicButton);
}

uint64_t sub_10020403C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF580;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistAddMusicCell = v3;
  *(_QWORD *)algn_1004F5418 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistAddMusicCell.unsafeMutableAddressor()
{
  if (qword_1004B9230 != -1)
    swift_once(&qword_1004B9230, sub_10020403C);
  return &static AccessibilityIdentifier.playlistAddMusicCell;
}

uint64_t static AccessibilityIdentifier.playlistAddMusicCell.getter()
{
  return sub_100204E50(&qword_1004B9230, &static AccessibilityIdentifier.playlistAddMusicCell);
}

uint64_t sub_100204150()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF560;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.showOnProfileAndInSearchSwitch = v3;
  *(_QWORD *)algn_1004F5428 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.showOnProfileAndInSearchSwitch.unsafeMutableAddressor()
{
  if (qword_1004B9238 != -1)
    swift_once(&qword_1004B9238, sub_100204150);
  return &static AccessibilityIdentifier.showOnProfileAndInSearchSwitch;
}

uint64_t static AccessibilityIdentifier.showOnProfileAndInSearchSwitch.getter()
{
  return sub_100204E50(&qword_1004B9238, &static AccessibilityIdentifier.showOnProfileAndInSearchSwitch);
}

uint64_t sub_100204264()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x462E747369747241;
  v1._object = (void *)0xEF657469726F7661;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.artistFavorite = v3;
  *(_QWORD *)algn_1004F5438 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artistFavorite.unsafeMutableAddressor()
{
  if (qword_1004B9240 != -1)
    swift_once(&qword_1004B9240, sub_100204264);
  return &static AccessibilityIdentifier.artistFavorite;
}

uint64_t static AccessibilityIdentifier.artistFavorite.getter()
{
  return sub_100204E50(&qword_1004B9240, &static AccessibilityIdentifier.artistFavorite);
}

uint64_t sub_100204380()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF540;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.artistUndoFavorite = v3;
  *(_QWORD *)algn_1004F5448 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artistUndoFavorite.unsafeMutableAddressor()
{
  if (qword_1004B9248 != -1)
    swift_once(&qword_1004B9248, sub_100204380);
  return &static AccessibilityIdentifier.artistUndoFavorite;
}

uint64_t static AccessibilityIdentifier.artistUndoFavorite.getter()
{
  return sub_100204E50(&qword_1004B9248, &static AccessibilityIdentifier.artistUndoFavorite);
}

uint64_t sub_100204494()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x657469726F766146;
  v1._object = (void *)0xED00006567646142;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.favoriteBadge = v3;
  *(_QWORD *)algn_1004F5458 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.favoriteBadge.unsafeMutableAddressor()
{
  if (qword_1004B9250 != -1)
    swift_once(&qword_1004B9250, sub_100204494);
  return &static AccessibilityIdentifier.favoriteBadge;
}

uint64_t static AccessibilityIdentifier.favoriteBadge.getter()
{
  return sub_100204E50(&qword_1004B9250, &static AccessibilityIdentifier.favoriteBadge);
}

uint64_t sub_1002045B0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF520;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyTermsAcceptButton = v3;
  *(_QWORD *)algn_1004F5468 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyTermsAcceptButton.unsafeMutableAddressor()
{
  if (qword_1004B9258 != -1)
    swift_once(&qword_1004B9258, sub_1002045B0);
  return &static AccessibilityIdentifier.privacyTermsAcceptButton;
}

uint64_t static AccessibilityIdentifier.privacyTermsAcceptButton.getter()
{
  return sub_100204E50(&qword_1004B9258, &static AccessibilityIdentifier.privacyTermsAcceptButton);
}

uint64_t sub_1002046C4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF500;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyTermsLink = v3;
  *(_QWORD *)algn_1004F5478 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyTermsLink.unsafeMutableAddressor()
{
  if (qword_1004B9260 != -1)
    swift_once(&qword_1004B9260, sub_1002046C4);
  return &static AccessibilityIdentifier.privacyTermsLink;
}

uint64_t static AccessibilityIdentifier.privacyTermsLink.getter()
{
  return sub_100204E50(&qword_1004B9260, &static AccessibilityIdentifier.privacyTermsLink);
}

uint64_t sub_1002047D8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF4E0;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeImage = v3;
  *(_QWORD *)algn_1004F5488 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeImage.unsafeMutableAddressor()
{
  if (qword_1004B9268 != -1)
    swift_once(&qword_1004B9268, sub_1002047D8);
  return &static AccessibilityIdentifier.privacyWelcomeImage;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeImage.getter()
{
  return sub_100204E50(&qword_1004B9268, &static AccessibilityIdentifier.privacyWelcomeImage);
}

uint64_t sub_1002048EC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF4C0;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeTitle = v3;
  *(_QWORD *)algn_1004F5498 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeTitle.unsafeMutableAddressor()
{
  if (qword_1004B9270 != -1)
    swift_once(&qword_1004B9270, sub_1002048EC);
  return &static AccessibilityIdentifier.privacyWelcomeTitle;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeTitle.getter()
{
  return sub_100204E50(&qword_1004B9270, &static AccessibilityIdentifier.privacyWelcomeTitle);
}

uint64_t sub_100204A00()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003AF4A0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeDescription = v3;
  *(_QWORD *)algn_1004F54A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeDescription.unsafeMutableAddressor()
{
  if (qword_1004B9278 != -1)
    swift_once(&qword_1004B9278, sub_100204A00);
  return &static AccessibilityIdentifier.privacyWelcomeDescription;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeDescription.getter()
{
  return sub_100204E50(&qword_1004B9278, &static AccessibilityIdentifier.privacyWelcomeDescription);
}

uint64_t sub_100204B14()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6569566D75626C41;
  v1._object = (void *)0xE900000000000077;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.albumView = v3;
  *(_QWORD *)algn_1004F54B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.albumView.unsafeMutableAddressor()
{
  if (qword_1004B9280 != -1)
    swift_once(&qword_1004B9280, sub_100204B14);
  return &static AccessibilityIdentifier.albumView;
}

uint64_t static AccessibilityIdentifier.albumView.getter()
{
  return sub_100204E50(&qword_1004B9280, &static AccessibilityIdentifier.albumView);
}

uint64_t sub_100204C28()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7473696C79616C50;
  v1._object = (void *)0xEC00000077656956;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistView = v3;
  *(_QWORD *)algn_1004F54C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistView.unsafeMutableAddressor()
{
  if (qword_1004B9288 != -1)
    swift_once(&qword_1004B9288, sub_100204C28);
  return &static AccessibilityIdentifier.playlistView;
}

uint64_t static AccessibilityIdentifier.playlistView.getter()
{
  return sub_100204E50(&qword_1004B9288, &static AccessibilityIdentifier.playlistView);
}

uint64_t sub_100204D40()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  v4 = unk_1004C2AA0;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x77656956676E6F53;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.songView = v3;
  *(_QWORD *)algn_1004F54D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.songView.unsafeMutableAddressor()
{
  if (qword_1004B9290 != -1)
    swift_once(&qword_1004B9290, sub_100204D40);
  return &static AccessibilityIdentifier.songView;
}

uint64_t static AccessibilityIdentifier.songView.getter()
{
  return sub_100204E50(&qword_1004B9290, &static AccessibilityIdentifier.songView);
}

uint64_t sub_100204E50(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

_QWORD *sub_100204EA0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

id UIView.withAccessibilityIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  id v5;

  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(a1, a2);
  return v5;
}

void UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v2, "setAccessibilityIdentifier:", v4);

}

uint64_t UIAccessibilityIdentification.musicAccessibilityIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "accessibilityIdentifier");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void (*UIAccessibilityIdentification.musicAccessibilityIdentifier.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  a1[2] = a2;
  a1[3] = v2;
  *a1 = UIAccessibilityIdentification.musicAccessibilityIdentifier.getter();
  a1[1] = v4;
  return sub_100204FE4;
}

void sub_100204FE4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(*a1, v2);
  }
}

uint64_t View.textSuffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t TupleTypeMetadata2;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v39[0] = a4;
  v43 = a7;
  v12 = type metadata accessor for Text.Suffix(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a5;
  v53 = a6;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v52, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 0);
  v17 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v41 = OpaqueTypeMetadata2;
  v42 = v17;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v40 = (char *)v39 - v18;
  v19 = a3 & 1;
  v20 = a1;
  v21 = a1;
  v22 = a2;
  v23 = a2;
  v24 = v39[0];
  static Text.Suffix.alwaysVisible(_:)(v20, v22, v19, v39[0]);
  v25 = a6;
  v26 = a6;
  v27 = v39[1];
  View.textSuffix(_:)(v15, a5, v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v45 = a5;
  v46 = v25;
  v47 = v27;
  v48 = v21;
  v49 = v23;
  v50 = v19;
  v51 = v24;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a5, &type metadata for Text, 0, 0);
  v29 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v29);
  v31 = type metadata accessor for HStack(255, v29, WitnessTable);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v31);
  v52 = v31;
  v53 = v32;
  v33 = swift_getOpaqueTypeMetadata2(0, &v52, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v52 = a5;
  v53 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
  v52 = v31;
  v53 = v32;
  v35 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v37 = v40;
  v36 = v41;
  View.accessibilityRepresentation<A>(representation:)(sub_100205518, v44, v41, v33, OpaqueTypeConformance2, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v37, v36);
}

uint64_t sub_100205280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v37 = a7;
  v32 = a6;
  v39 = a5;
  v38 = a4;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  v42 = a8;
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a6, &type metadata for Text, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for HStack(0, v13, WitnessTable);
  v33 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v15);
  v51 = v15;
  v52 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v51, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v21 = __chkstk_darwin(OpaqueTypeMetadata2);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v31 - v25;
  v44 = v32;
  v45 = v37;
  v46 = v34;
  v47 = v35;
  v48 = v36;
  v49 = v38 & 1;
  v50 = v39;
  v27 = static VerticalAlignment.center.getter(v24);
  v28 = HStack.init(alignment:spacing:content:)(v27, 0, 1, sub_100206584, v43, v13, WitnessTable);
  static AccessibilityChildBehavior.combine.getter(v28);
  View.accessibilityElement(children:)(v11, v15, v18);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v15);
  v51 = v15;
  v52 = v18;
  swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_10005B690((uint64_t)v23, OpaqueTypeMetadata2, (uint64_t)v26);
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v23, OpaqueTypeMetadata2);
  sub_100055EDC((uint64_t)v26, OpaqueTypeMetadata2, v42);
  return ((uint64_t (*)(char *, uint64_t))v29)(v26, OpaqueTypeMetadata2);
}

uint64_t sub_100205518()
{
  return sub_100206590((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100205280);
}

uint64_t sub_100205524(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29[2];

  v13 = *(_QWORD *)(a6 - 8);
  v14 = __chkstk_darwin(a1);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)v23 - v18;
  sub_10005B690(v17, v20, (uint64_t)v23 - v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, a6);
  v25 = a2;
  v26 = a3;
  a4 &= 1u;
  v27 = a4;
  v28 = a5;
  v29[0] = (uint64_t)v16;
  v29[1] = (uint64_t)&v25;
  sub_10005B4C0(a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_10005B4C0(a2, a3, a4);
  swift_bridgeObjectRetain();
  v24[0] = a6;
  v24[1] = &type metadata for Text;
  v23[0] = a7;
  v23[1] = &protocol witness table for Text;
  sub_1000588C8(v29, 2uLL, (uint64_t)v24);
  sub_10005B4D0(a2, a3, a4);
  swift_bridgeObjectRelease();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v19, a6);
  sub_10005B4D0(v25, v26, v27);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, a6);
}

uint64_t AccessibilityString.init(_:tableName:bundle:comment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  static Locale.current.getter(v15);
  v16 = String.init(localized:table:bundle:locale:comment:)(v14, a2, a3, a4, v10, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v16;
}

uint64_t View.accessibilityLabel(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002057E8(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityLabel<A>(_:));
}

uint64_t View.accessibilityHint(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002057E8(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityHint<A>(_:));
}

uint64_t View.accessibilityValue(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002057E8(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityValue<A>(_:));
}

uint64_t sub_1002057E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[2];

  if (a2)
    v8 = a1;
  else
    v8 = 0;
  if (a2)
    v9 = a2;
  else
    v9 = 0xE000000000000000;
  v12[0] = v8;
  v12[1] = v9;
  v10 = sub_10002D3FC();
  swift_bridgeObjectRetain();
  a5(v12, a3, &type metadata for String, a4, v10);
  return swift_bridgeObjectRelease();
}

uint64_t Text.accessibilityLabel(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  if (a2)
    v10 = a1;
  else
    v10 = 0;
  if (a2)
    v11 = a2;
  else
    v11 = 0xE000000000000000;
  v15[0] = v10;
  v15[1] = v11;
  v12 = sub_10002D3FC();
  swift_bridgeObjectRetain();
  v13 = Text.accessibilityLabel<A>(_:)(v15, a3, a4, a5 & 1, a6, &type metadata for String, v12);
  swift_bridgeObjectRelease();
  return v13;
}

char *static Text.compact(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)_swiftEmptyArrayStorage;
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v5 = *v2;
    if (*v2)
    {
      v17[0] = *(v2 - 1);
      v17[1] = v5;
      v6 = sub_10002D3FC();
      swift_bridgeObjectRetain();
      v7 = Text.init<A>(_:)(v17, &type metadata for String, v6);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_10005EF88(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v15 = *((_QWORD *)v3 + 2);
      v14 = *((_QWORD *)v3 + 3);
      if (v15 >= v14 >> 1)
        v3 = sub_10005EF88((char *)(v14 > 1), v15 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v15 + 1;
      v4 = &v3[32 * v15];
      *((_QWORD *)v4 + 4) = v7;
      *((_QWORD *)v4 + 5) = v9;
      v4[48] = v11 & 1;
      *((_QWORD *)v4 + 7) = v13;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void TabIdentifier.accessibilityIdentifier.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100205AA8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t v3;

  if (qword_1004B8E20 != -1)
    swift_once(&qword_1004B8E20, sub_1001FB168);
  v3 = qword_1004C2A98;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C2E726142626174;
  v1._object = (void *)0xEE00797261726269;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

char *sub_100205E60(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  _QWORD v52[4];

  v52[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_10047E600, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v49 = swift_allocObject(&unk_10047E628, 24, 7);
  *(_QWORD *)(v49 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v33 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    sub_100206278(v33 | (v15 << 16), v49, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease(a6);
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release(v14);
    v34 = v49;
    goto LABEL_40;
  }
  v44 = a1;
  v45 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v43 = v17 | (v16 << 16);
  v50 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v19 = String.subscript.getter(v9, v11, a6);
    v21 = v20;
    v52[0] = v19;
    v52[1] = v20;
    v22 = a3(v52);
    if (v7)
    {
      swift_release(v45);
      swift_release(v49);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(a6);
      return v10;
    }
    v6 = v22;
    swift_bridgeObjectRelease(v21);
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v50 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v49 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v23 = String.subscript.getter(v8, v9, v11, a6);
  v46 = v24;
  v47 = v23;
  v26 = v25;
  v28 = v27;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_10005DFA4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v30 = *((_QWORD *)v10 + 2);
  v29 = *((_QWORD *)v10 + 3);
  v6 = v30 + 1;
  if (v30 >= v29 >> 1)
    v10 = sub_10005DFA4((char *)(v29 > 1), v30 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v31 = &v10[32 * v30];
  *((_QWORD *)v31 + 4) = v47;
  *((_QWORD *)v31 + 5) = v26;
  *((_QWORD *)v31 + 6) = v28;
  *((_QWORD *)v31 + 7) = v46;
  *(_QWORD *)(v45 + 16) = v10;
  v32 = String.index(after:)(v9, v11, a6);
  v9 = v32;
  *(_QWORD *)(v49 + 16) = v32;
  if (*((_QWORD *)v10 + 2) != v44)
  {
    v8 = v32;
    v18 = v32;
    goto LABEL_11;
  }
  v18 = v32;
  v8 = v32;
LABEL_31:
  if (v50 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease(a6);
    v35 = v45;
    goto LABEL_39;
  }
  if (v50 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v43, v11, a6);
    v8 = v36;
    v9 = v37;
    v11 = v38;
    swift_bridgeObjectRelease(a6);
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_10005DFA4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v40 = *((_QWORD *)v10 + 2);
  v39 = *((_QWORD *)v10 + 3);
  if (v40 >= v39 >> 1)
    v10 = sub_10005DFA4((char *)(v39 > 1), v40 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v40 + 1;
  v41 = &v10[32 * v40];
  *((_QWORD *)v41 + 4) = v6;
  *((_QWORD *)v41 + 5) = v8;
  *((_QWORD *)v41 + 6) = v9;
  *((_QWORD *)v41 + 7) = v11;
  v35 = v45;
  *(_QWORD *)(v45 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release(v35);
  v34 = v49;
LABEL_40:
  swift_release(v34);
  return v10;
}

uint64_t sub_100206278(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_10005DFA4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_10005DFA4((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifier()
{
  return &type metadata for AccessibilityIdentifier;
}

ValueMetadata *type metadata accessor for AccessibilityString()
{
  return &type metadata for AccessibilityString;
}

uint64_t sub_1002063B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_10020640C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_10020640C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BC4B0;
  if (!qword_1004BC4B0)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_1004BC4B0);
  }
  return result;
}

uint64_t sub_100206454(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeMetadata2;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[1];
  v13 = *a1;
  v1 = v13;
  v14 = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v1, &type metadata for Text, 0, 0);
  v5 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v5);
  v7 = type metadata accessor for HStack(255, v5, WitnessTable);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
  v13 = v7;
  v14 = v8;
  v9 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v13 = v1;
  v14 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
  v13 = v7;
  v14 = v8;
  v11 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v13 = OpaqueTypeMetadata2;
  v14 = v9;
  v15 = OpaqueTypeConformance2;
  v16 = v11;
  return swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
}

uint64_t sub_100206584()
{
  return sub_100206590((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100205524);
}

uint64_t sub_100206590(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002065B4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  if (v4 == *v3 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v3, v6, 0) & 1;
}

uint64_t sub_100206608()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020662C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t static AppReview.requestReview(in:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1004C2AD0 + dword_1004C2AD0);
  v3 = (_QWORD *)swift_task_alloc(unk_1004C2AD4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return v5(a1);
}

double static AppReview.recordAppOpened()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  _QWORD v20[4];

  v0 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v0);
  v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TaskPriority(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  v5 = swift_allocObject(&unk_10047E678, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (uint64_t *)(v5 + 16);
  *(_QWORD *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10000FE2C((uint64_t)v2, (uint64_t *)&unk_1004BFBC0);
    v8 = 0;
    v9 = 0;
    v10 = 7168;
  }
  else
  {
    v11 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    v10 = v11 | 0x1C00;
    v12 = *v6;
    if (*v6)
    {
      v13 = *(_QWORD *)(v5 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v9 = v15;
      swift_unknownObjectRelease(v12);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v16 = swift_allocObject(&unk_10047E6A0, 32, 7);
  *(_QWORD *)(v16 + 16) = &unk_1004C2AE0;
  *(_QWORD *)(v16 + 24) = v5;
  if (v9 | v8)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v8;
    v20[3] = v9;
  }
  else
  {
    v17 = 0;
  }
  v18 = swift_task_create(v10, v17, (char *)&type metadata for () + 8, &unk_1004BDA80, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_100206868()
{
  return swift_task_switch(sub_10020687C, 0, 0);
}

uint64_t sub_10020687C()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_1004B9298 != -1)
    swift_once(&qword_1004B9298, sub_100206B90);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to StoreReviewGatingController.didEnterForeground()[1]);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002F6EC;
  return StoreReviewGatingController.didEnterForeground()();
}

unint64_t sub_1002068F4()
{
  return 0xD000000000000010;
}

uint64_t sub_100206910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100207C74(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_100206938(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100206944(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100207ABC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10020696C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100207ABC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100206994@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;

  v5 = sub_1000057B4(&qword_1004C2B00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_100207ABC();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for AppReview.UsageRequirements.CodingKeys, &type metadata for AppReview.UsageRequirements.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000970C(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_10000970C(a1);
  *a2 = v13 & 1;
  return result;
}

uint64_t sub_100206AA8(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_1000057B4(&qword_1004C2B10);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  sub_1000096A0(a1, v8);
  v10 = sub_100207ABC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for AppReview.UsageRequirements.CodingKeys, &type metadata for AppReview.UsageRequirements.CodingKeys, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v11, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100206B90()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  id v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v0 = objc_allocWithZone((Class)ICStoreRequestContext);
  v7[4] = sub_100114A5C;
  v8 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001D2BC;
  v7[3] = &unk_10047E6D8;
  v1 = _Block_copy(v7);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v8);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)ICAMSBagAdapter), "initWithRequestContext:", v2);

    v6 = objc_allocWithZone((Class)type metadata accessor for StoreReviewGatingController(0));
    result = StoreReviewGatingController.init(bag:)(v5);
    qword_1004C2AA8 = result;
  }
  return result;
}

uint64_t sub_100206C9C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004C2AB0);
  sub_100039D34(v0, (uint64_t)qword_1004C2AB0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x6569766552707041, 0xE900000000000077);
}

void _s9MusicCore9AppReviewO16recordSongPlayedyyFZ_0()
{
  void *v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  id v4;
  id v5;
  _QWORD v6[6];

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = sub_100207968();
  v3 = sub_1002079AC();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&type metadata for AppReview.UsageRequirements, v2, (uint64_t)v6);

  v4 = objc_msgSend(v0, "standardUserDefaults");
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&type metadata for AppReview.UsageRequirements, v2, (uint64_t)v6);

  if (LOBYTE(v6[0]) == 2 || (v6[0] & 1) == 0)
  {
    v5 = objc_msgSend(v0, "standardUserDefaults");
    v6[3] = &type metadata for AppReview.UsageRequirements;
    v6[4] = v2;
    v6[5] = v3;
    LOBYTE(v6[0]) = 1;
    NSUserDefaults.encodeValue(_:forKey:)(v6);

    sub_10000970C(v6);
  }
}

uint64_t sub_100206E5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[26] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[27] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[28] = v4;
  v1[29] = v5;
  return swift_task_switch(sub_100206EC8, v4, v5);
}

void sub_100206EC8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  sub_100207918(*(_QWORD *)(v0 + 208), v0 + 136);
  if (*(_QWORD *)(v0 + 192) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 216));
    sub_10000FE2C(v0 + 136, &qword_1004B9DF0);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 136);
    if (Strong)
    {
      v2 = Strong;
      v3 = objc_msgSend(Strong, "view");

      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x100207508);
      }
      v4 = objc_msgSend(v3, "window");

      v5 = objc_msgSend(v4, "windowScene");
      *(_QWORD *)(v0 + 240) = v5;

      sub_100034A74(v0 + 136);
      if (v5)
      {
        if (qword_1004B8AF8 != -1)
          swift_once(&qword_1004B8AF8, sub_1000D365C);
        v6 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_1003D3E68);
        v8 = swift_getKeyPath(&unk_1003D3E90);
        static Published.subscript.getter((_QWORD *)(v0 + 16), v6, KeyPath, v8);
        swift_release(v8);
        swift_release(KeyPath);
        v9 = *(_QWORD *)(v0 + 48);
        v10 = *(_QWORD *)(v0 + 72);
        v11 = *(_QWORD *)(v0 + 88);
        v12 = *(void **)(v0 + 96);
        v13 = *(unsigned __int8 *)(v0 + 104);
        v14 = *(_QWORD *)(v0 + 112);
        v15 = *(_QWORD *)(v0 + 128);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease(v11);

        __asm { BR              X9 }
      }
      v17 = *(_QWORD *)(v0 + 216);
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 216);
      sub_100034A74(v0 + 136);
      v17 = v16;
    }
    swift_release(v17);
  }
  if (qword_1004B92A0 != -1)
    swift_once(&qword_1004B92A0, sub_100206C9C);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100039D34(v18, (uint64_t)qword_1004C2AB0);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "🤩❌ No windowScene", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  __asm { BR              X0 }
}

uint64_t sub_100207518(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_BYTE *)(*v1 + 265) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100207570, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_100207570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint8_t *v14;

  if (*(_BYTE *)(v0 + 265) == 1)
  {
    static AppStore.requestReview(in:)(*(_QWORD *)(v0 + 240));
    if (qword_1004B92A0 != -1)
      swift_once(&qword_1004B92A0, sub_100206C9C);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100039D34(v1, (uint64_t)qword_1004C2AB0);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "🤩 Requesting a review through StoreKit", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    v6 = (_QWORD *)swift_task_alloc(async function pointer to StoreReviewGatingController.didPrompt()[1]);
    *(_QWORD *)(v0 + 256) = v6;
    *v6 = v0;
    v6[1] = sub_10020775C;
    return StoreReviewGatingController.didPrompt()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 216));
    if (qword_1004B92A0 != -1)
      swift_once(&qword_1004B92A0, sub_100206C9C);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100039D34(v8, (uint64_t)qword_1004C2AB0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void **)(v0 + 240);
    if (v12)
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "🤩❌ Review is being gated by AMS", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10020775C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_1002077A8, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_1002077A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 216));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002077E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100207804()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004C2ADC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10002E8E0;
  return swift_task_switch(sub_10020687C, 0, 0);
}

uint64_t sub_10020785C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100207880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1004C2AEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1004C2AE8 + dword_1004C2AE8))(a1, v4);
}

ValueMetadata *type metadata accessor for AppReview()
{
  return &type metadata for AppReview;
}

uint64_t sub_100207900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100207910(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100207918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B9DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100207968()
{
  unint64_t result;

  result = qword_1004C2AF0;
  if (!qword_1004C2AF0)
  {
    result = swift_getWitnessTable(&unk_1003D3F14, &type metadata for AppReview.UsageRequirements);
    atomic_store(result, (unint64_t *)&qword_1004C2AF0);
  }
  return result;
}

unint64_t sub_1002079AC()
{
  unint64_t result;

  result = qword_1004C2AF8;
  if (!qword_1004C2AF8)
  {
    result = swift_getWitnessTable(&unk_1003D3EEC, &type metadata for AppReview.UsageRequirements);
    atomic_store(result, (unint64_t *)&qword_1004C2AF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReview.UsageRequirements(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100207A3C + 4 * byte_1003D3E45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100207A70 + 4 * asc_1003D3E40[v4]))();
}

uint64_t sub_100207A70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100207A78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100207A80);
  return result;
}

uint64_t sub_100207A8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100207A94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100207A98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100207AA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppReview.UsageRequirements()
{
  return &type metadata for AppReview.UsageRequirements;
}

unint64_t sub_100207ABC()
{
  unint64_t result;

  result = qword_1004C2B08;
  if (!qword_1004C2B08)
  {
    result = swift_getWitnessTable(&unk_1003D4000, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C2B08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReview.UsageRequirements.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100207B40 + 4 * byte_1003D3E4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100207B60 + 4 * byte_1003D3E4F[v4]))();
}

_BYTE *sub_100207B40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100207B60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100207B68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100207B70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100207B78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100207B80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppReview.UsageRequirements.CodingKeys()
{
  return &type metadata for AppReview.UsageRequirements.CodingKeys;
}

unint64_t sub_100207BA0()
{
  unint64_t result;

  result = qword_1004C2B18;
  if (!qword_1004C2B18)
  {
    result = swift_getWitnessTable(&unk_1003D3FD8, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C2B18);
  }
  return result;
}

unint64_t sub_100207BE8()
{
  unint64_t result;

  result = qword_1004C2B20;
  if (!qword_1004C2B20)
  {
    result = swift_getWitnessTable(&unk_1003D3F48, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C2B20);
  }
  return result;
}

unint64_t sub_100207C30()
{
  unint64_t result;

  result = qword_1004C2B28;
  if (!qword_1004C2B28)
  {
    result = swift_getWitnessTable(&unk_1003D3F70, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004C2B28);
  }
  return result;
}

uint64_t sub_100207C74(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001003B03C0)
  {
    swift_bridgeObjectRelease(0x80000001003B03C0);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001003B03C0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t static ClassicalBridge.generatePrestoURL(forAlbum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;

  v3 = Album.catalogID.getter(a1);
  if (v4)
  {
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v3, v4, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_10007BB90();
    swift_allocError(&type metadata for ClassicalBridge.Error, v6, 0, 0);
    *(_QWORD *)v7 = 2;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_BYTE *)(v7 + 32) = 2;
    return swift_willThrow(v8);
  }
}

uint64_t static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1004C2B70 + dword_1004C2B70);
  v5 = (_QWORD *)swift_task_alloc(unk_1004C2B74);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002E8E0;
  return v7(a1, a2);
}

uint64_t sub_100207E04(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  void *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  _OWORD v45[2];
  uint64_t v46;

  if (!*(_QWORD *)(a1 + 16))
  {
    v22 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v22, 0, 0);
    v23 = 0uLL;
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_QWORD *)(v24 + 32) = 0;
    *(_BYTE *)(v24 + 40) = 2;
LABEL_15:
    swift_willThrow(v23);
    return v27 & 1;
  }
  v2 = v1;
  v46 = a1;
  v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_1000601A4(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v2, "valueForBagKey:", v7);

  if (!v8)
  {
    swift_bridgeObjectRelease(v46);
    v25 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v25, 0, 0);
    *(_QWORD *)v26 = v4;
    *(_BYTE *)(v26 + 40) = 0;
    goto LABEL_15;
  }
  _bridgeAnyObjectToAny(_:)(v8);
  swift_unknownObjectRelease(v8);
  sub_100007EE4(v44, v45);
  sub_10000990C((uint64_t)v45, (uint64_t)v44);
  v9 = v46;
  v10 = *(_QWORD *)(v46 + 16);
  if (v10)
  {
    v11 = v4;
    v12 = 0;
    v40 = v11;
    while (1)
    {
      v13 = *(void **)(v9 + 8 * v12 + 32);
      sub_10000990C((uint64_t)v44, (uint64_t)&v42);
      v14 = v13;
      v15 = sub_1000057B4((uint64_t *)&unk_1004BF820);
      if (!swift_dynamicCast(&v41, &v42, (char *)&type metadata for Any + 8, v15, 6))
      {
        swift_bridgeObjectRelease(v9);
        v32 = sub_100114ABC();
        swift_allocError(&type metadata for ICURLBag.Error, v32, 0, 0);
        v34 = v33;
        *v33 = v14;
        sub_10000990C((uint64_t)v44, (uint64_t)(v33 + 1));
        *((_BYTE *)v34 + 40) = 1;
        goto LABEL_22;
      }
      v16 = v41;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v19 = v18;
      if (*(_QWORD *)(v16 + 16) && (v20 = sub_1000277A0(v17, v18), (v21 & 1) != 0))
      {
        sub_10000990C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v42);
      }
      else
      {
        v42 = 0u;
        v43 = 0u;
      }
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);
      if (!*((_QWORD *)&v43 + 1))
        break;
      ++v12;
      sub_10000970C(v44);

      sub_100007EE4(&v42, v44);
      v11 = v14;
      if (v10 == v12)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease(v9);
    sub_10000FE2C((uint64_t)&v42, &qword_1004BE030);
    v35 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v35, 0, 0);
    *(_QWORD *)v36 = v14;
    *(_BYTE *)(v36 + 40) = 0;
LABEL_22:
    v37 = v14;
    swift_willThrow(v38);

    goto LABEL_23;
  }
  v14 = v4;
LABEL_17:
  swift_bridgeObjectRelease(v9);
  sub_10000990C((uint64_t)v44, (uint64_t)&v42);
  if (!swift_dynamicCast(&v41, &v42, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
    v28 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v28, 0, 0);
    v30 = v29;
    *v29 = v14;
    sub_10000990C((uint64_t)v44, (uint64_t)(v29 + 1));
    *((_BYTE *)v30 + 40) = 1;
    swift_willThrow(v31);

LABEL_23:
    sub_10000970C(v44);
    sub_10000970C(v45);
    return v27 & 1;
  }

  sub_10000970C(v44);
  sub_10000970C(v45);
  v27 = v41 & 1;
  return v27 & 1;
}

uint64_t sub_1002081D8(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  _OWORD v44[2];
  uint64_t v45;

  if (!*(_QWORD *)(a1 + 16))
  {
    v22 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v22, 0, 0);
    v23 = 0uLL;
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_QWORD *)(v24 + 32) = 0;
    *(_BYTE *)(v24 + 40) = 2;
    return swift_willThrow(v23);
  }
  v2 = v1;
  v45 = a1;
  v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_1000601A4(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v2, "valueForBagKey:", v7);

  if (!v8)
  {
    swift_bridgeObjectRelease(v45);
    v25 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v25, 0, 0);
    *(_QWORD *)v26 = v4;
    *(_BYTE *)(v26 + 40) = 0;
    return swift_willThrow(v23);
  }
  _bridgeAnyObjectToAny(_:)(v8);
  swift_unknownObjectRelease(v8);
  sub_100007EE4(v43, v44);
  sub_10000990C((uint64_t)v44, (uint64_t)v43);
  v9 = v45;
  v10 = *(_QWORD *)(v45 + 16);
  if (v10)
  {
    v11 = v4;
    v12 = 0;
    v39 = v11;
    while (1)
    {
      v13 = *(void **)(v9 + 8 * v12 + 32);
      sub_10000990C((uint64_t)v43, (uint64_t)&v41);
      v14 = v13;
      v15 = sub_1000057B4((uint64_t *)&unk_1004BF820);
      if (!swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v15, 6))
      {
        swift_bridgeObjectRelease(v9);
        v32 = sub_100114ABC();
        swift_allocError(&type metadata for ICURLBag.Error, v32, 0, 0);
        v34 = v33;
        *v33 = v14;
        sub_10000990C((uint64_t)v43, (uint64_t)(v33 + 1));
        *((_BYTE *)v34 + 40) = 1;
        goto LABEL_22;
      }
      v16 = v40;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v19 = v18;
      if (*(_QWORD *)(v16 + 16) && (v20 = sub_1000277A0(v17, v18), (v21 & 1) != 0))
      {
        sub_10000990C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v41);
      }
      else
      {
        v41 = 0u;
        v42 = 0u;
      }
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);
      if (!*((_QWORD *)&v42 + 1))
        break;
      ++v12;
      sub_10000970C(v43);

      sub_100007EE4(&v41, v43);
      v11 = v14;
      if (v10 == v12)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease(v9);
    sub_10000FE2C((uint64_t)&v41, &qword_1004BE030);
    v35 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v35, 0, 0);
    *(_QWORD *)v36 = v14;
    *(_BYTE *)(v36 + 40) = 0;
LABEL_22:
    v37 = v14;
    swift_willThrow(v38);

  }
  else
  {
    v14 = v4;
LABEL_17:
    swift_bridgeObjectRelease(v9);
    sub_10000990C((uint64_t)v43, (uint64_t)&v41);
    if (swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {

      sub_10000970C(v43);
      sub_10000970C(v44);
      return v40;
    }
    v28 = sub_100114ABC();
    swift_allocError(&type metadata for ICURLBag.Error, v28, 0, 0);
    v30 = v29;
    *v29 = v14;
    sub_10000990C((uint64_t)v43, (uint64_t)(v29 + 1));
    *((_BYTE *)v30 + 40) = 1;
    swift_willThrow(v31);

  }
  sub_10000970C(v43);
  return sub_10000970C(v44);
}

uint64_t sub_1002085A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[15] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[16] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[17] = v4;
  v1[18] = v5;
  return swift_task_switch(sub_100208610, v4, v5);
}

uint64_t sub_100208610()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  NSURL *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;

  v1 = v0;
  v2 = v0 + 2;
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1[19] = v3;
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v1[20] = v5;
  sub_1000B8E1C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000A44F4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v1[21] = isa;
  swift_bridgeObjectRelease();
  v1[7] = v1 + 22;
  v1[2] = v1;
  v1[3] = sub_100208740;
  v8 = swift_continuation_init(v2, 0);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_10018A1B0;
  v1[3] = &unk_10047EB40;
  v1[4] = v8;
  objc_msgSend(v3, "openURL:options:completionHandler:", v6, isa, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_100208740()
{
  uint64_t v0;

  return swift_task_switch(sub_100208784, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_100208784()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 128));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002087D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_1000057B4(&qword_1004B99B0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[19] = v5;
  v2[20] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[21] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[22] = v8;
  v2[23] = v9;
  return swift_task_switch(sub_10020888C, v8, v9);
}

uint64_t sub_10020888C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSURL *v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = v5;
  v6._object = v3;
  String.append(_:)(v6);
  URL.init(string:)(0xD000000000000022, 0x80000001003B0560);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    swift_release(*(_QWORD *)(v0 + 168));
    sub_10000FE2C(v9, &qword_1004B99B0);
    v11 = sub_10007BB90();
    swift_allocError(&type metadata for ClassicalBridge.Error, v11, 0, 0);
    *(_QWORD *)v12 = 0xD000000000000022;
    *(_QWORD *)(v12 + 8) = 0x80000001003B0560;
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v8;
    *(_BYTE *)(v12 + 32) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow(v13);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = v0 + 16;
    v17 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v19, v18);
    v20 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    *(_QWORD *)(v0 + 192) = v20;
    URL._bridgeToObjectiveC()(v21);
    v23 = v22;
    *(_QWORD *)(v0 + 200) = v22;
    sub_1000B8E1C((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1000A44F4();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v0 + 208) = isa;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v0 + 216;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100208B08;
    v25 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v26 = (_QWORD *)(v0 + 80);
    v26[1] = 0x40000000;
    v26[2] = sub_10018A1B0;
    v26[3] = &unk_10047EB58;
    v26[4] = v25;
    objc_msgSend(v20, "openURL:options:completionHandler:", v23, isa, v26);
    return swift_continuation_await(v15);
  }
}

uint64_t sub_100208B08()
{
  uint64_t v0;

  return swift_task_switch(sub_100208B4C, *(_QWORD *)(*(_QWORD *)v0 + 176), *(_QWORD *)(*(_QWORD *)v0 + 184));
}

uint64_t sub_100208B4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = swift_release(*(_QWORD *)(v0 + 168));
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v4, v5, v8);

  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[56];
  char v92[56];
  unint64_t v93;

  v9 = sub_1000057B4(&qword_1004B99B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8BC0 != -1)
    swift_once(&qword_1004B8BC0, sub_1000E30D8);
  sub_1000057B4(&qword_1004BD040);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10002D3E4);
  v12 = v87;
  if (!v87)
  {
    v23 = sub_10007BB90();
    swift_allocError(&type metadata for ClassicalBridge.Error, v23, 0, 0);
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_BYTE *)(v24 + 32) = 2;
    swift_willThrow((__n128)0);
    return;
  }
  v80 = a1;
  v79 = a4;
  v81 = a2;
  v93 = a3;
  v13 = sub_1000057B4(&qword_1004BACC0);
  inited = swift_initStackObject(v13, v92);
  v82 = xmmword_1003C6BD0;
  *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
  v15 = (void *)ICURLBagKeyMusicCommon;
  *(_QWORD *)(inited + 32) = ICURLBagKeyMusicCommon;
  v16 = inited + 32;
  v17 = qword_1004B92B0;
  v18 = v15;
  if (v17 != -1)
    swift_once(&qword_1004B92B0, sub_10020A040);
  v19 = (void *)qword_1004C2B38;
  *(_QWORD *)(inited + 40) = qword_1004C2B38;
  v20 = v19;
  v21 = sub_100207E04(inited);
  if (v4)
  {
    swift_setDeallocating(inited);
    v22 = *(_QWORD *)(inited + 16);
    type metadata accessor for ICURLBagKey(0);
    swift_arrayDestroy(inited + 32, v22, v58);
LABEL_22:

    return;
  }
  v25 = v21;
  swift_setDeallocating(inited);
  v26 = *(_QWORD *)(inited + 16);
  type metadata accessor for ICURLBagKey(0);
  v78 = v27;
  swift_arrayDestroy(v16, v26, v27);
  if ((v25 & 1) == 0)
  {
    v37 = sub_10007BB90();
    swift_allocError(&type metadata for ClassicalBridge.Error, v37, 0, 0);
    *(_QWORD *)v39 = 1;
    *(_QWORD *)(v39 + 8) = 0;
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    *(_BYTE *)(v39 + 32) = 2;
LABEL_16:
    swift_willThrow(v38);
    goto LABEL_22;
  }
  v28 = swift_initStackObject(v13, v91);
  v77 = xmmword_1003C6280;
  *(_OWORD *)(v28 + 16) = xmmword_1003C6280;
  *(_QWORD *)(v28 + 32) = v18;
  v29 = qword_1004B92C0;
  v30 = v18;
  if (v29 != -1)
    swift_once(&qword_1004B92C0, sub_10020A0A8);
  v31 = (void *)qword_1004C2B48;
  *(_QWORD *)(v28 + 40) = qword_1004C2B48;
  v32 = qword_1004B92C8;
  v33 = v31;
  if (v32 != -1)
    swift_once(&qword_1004B92C8, sub_10020A0DC);
  v34 = (void *)qword_1004C2B50;
  *(_QWORD *)(v28 + 48) = qword_1004C2B50;
  v35 = v34;
  sub_1002081D8(v28);
  v40 = v36;
  swift_setDeallocating(v28);
  swift_arrayDestroy(v28 + 32, *(_QWORD *)(v28 + 16), v78);
  swift_bridgeObjectRelease(v40);
  v41 = swift_initStackObject(v13, &v90);
  v42 = v30;
  v43 = v41;
  *(_OWORD *)(v41 + 16) = v77;
  *(_QWORD *)(v41 + 32) = v42;
  v44 = v41 + 32;
  v45 = (void *)qword_1004C2B48;
  *(_QWORD *)(v41 + 40) = qword_1004C2B48;
  v46 = qword_1004B92D0;
  *(_QWORD *)&v77 = v42;
  v47 = v45;
  if (v46 != -1)
    swift_once(&qword_1004B92D0, sub_10020A10C);
  v48 = (void *)qword_1004C2B58;
  *(_QWORD *)(v43 + 48) = qword_1004C2B58;
  v49 = v48;
  sub_1002081D8(v43);
  v51 = v50;
  swift_setDeallocating(v43);
  swift_arrayDestroy(v44, *(_QWORD *)(v43 + 16), v78);
  swift_bridgeObjectRelease(v51);
  v52 = swift_initStackObject(v13, &v89);
  *(_OWORD *)(v52 + 16) = v82;
  v53 = (void *)v77;
  *(_QWORD *)(v52 + 32) = v77;
  v54 = qword_1004B92B8;
  v55 = v53;
  if (v54 != -1)
    swift_once(&qword_1004B92B8, sub_10020A074);
  v56 = (void *)qword_1004C2B40;
  *(_QWORD *)(v52 + 40) = qword_1004C2B40;
  v57 = v56;
  v59 = sub_1002081D8(v52);
  v61 = v60;
  swift_setDeallocating(v52);
  swift_arrayDestroy(v52 + 32, *(_QWORD *)(v52 + 16), v78);
  v78 = v59;
  v87 = (void *)v59;
  v88 = v61;
  *(_QWORD *)&v82 = v61;
  v85 = 0x7D646E696B7BLL;
  v86 = 0xE600000000000000;
  v62 = 0x6D75626C61;
  if ((v80 & 1) != 0)
  {
    v63 = 0xE500000000000000;
  }
  else
  {
    v62 = 0x747369747261;
    v63 = 0xE600000000000000;
  }
  v83 = v62;
  v84 = v63;
  v64 = sub_10002D3FC();
  v65 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v85, &v83, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v64, v64, v64);
  v67 = v66;
  swift_bridgeObjectRelease(v63);
  v87 = (void *)v65;
  v88 = v67;
  v85 = 2103732603;
  v86 = 0xE400000000000000;
  v83 = v81;
  v84 = v93;
  v68 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v85, &v83, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v64, v64, v64);
  v70 = v69;
  swift_bridgeObjectRelease(v67);
  URL.init(string:)(v68, v70);
  swift_bridgeObjectRelease(v70);
  v71 = type metadata accessor for URL(0);
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v11, 1, v71) == 1)
  {
    sub_10000FE2C((uint64_t)v11, &qword_1004B99B0);
    v73 = sub_10007BB90();
    swift_allocError(&type metadata for ClassicalBridge.Error, v73, 0, 0);
    v74 = v82;
    *(_QWORD *)v75 = v78;
    *(_QWORD *)(v75 + 8) = v74;
    v76 = v93;
    *(_QWORD *)(v75 + 16) = v81;
    *(_QWORD *)(v75 + 24) = v76;
    *(_BYTE *)(v75 + 32) = 1;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  swift_bridgeObjectRelease(v82);

  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v79, v11, v71);
}

