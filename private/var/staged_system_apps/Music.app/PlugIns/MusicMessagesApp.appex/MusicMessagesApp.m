void sub_100004380(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  if (a2)
  {
    v2 = *(void **)(a1 + 32);
    v3 = a2;
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URL"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Failed to insert rich link with URL %@ (%@)"), v5, v3));

    MMALog(v4);
  }
}

id _MMALog()
{
  if (qword_1004CE228[0] != -1)
    dispatch_once(qword_1004CE228, &stru_1004643A8);
  return (id)qword_1004CE220;
}

void sub_100004454(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Music", "MusicMessagesApp");
  v2 = (void *)qword_1004CE220;
  qword_1004CE220 = (uint64_t)v1;

}

void MMALog(void *a1)
{
  id v1;
  id v2;
  NSObject *v3;
  int v4;
  id v5;

  v1 = a1;
  v2 = _MMALog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@", (uint8_t *)&v4, 0xCu);
  }

}

void MMALogDebug(void *a1)
{
  id v1;
  id v2;
  NSObject *v3;

  v1 = a1;
  v2 = _MMALog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10039ACC8((uint64_t)v1, v3);

}

uint64_t MMASetSQLiteTraceEnabled(int a1)
{
  if (a1)
    return setenv("SQLITE_AUTO_TRACE", "syslog", 6);
  else
    return unsetenv("SQLITE_AUTO_TRACE");
}

void type metadata accessor for WaitingReason(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F08, (uint64_t)&unk_1004647C0);
}

void type metadata accessor for Status(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F10, (uint64_t)&unk_1004647E8);
}

void type metadata accessor for MPArtworkRepresentationKinds(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F18, (uint64_t)&unk_100464808);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F20, (uint64_t)&unk_100464830);
}

void type metadata accessor for ICStoreArtworkInfoCropStyle(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F28, (uint64_t)&unk_100464850);
}

__n128 sub_100004608(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6F30, (uint64_t)&unk_1004648D0);
}

BOOL sub_100004678(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000468C(uint64_t a1, uint64_t a2)
{
  return sub_1000050A0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000046A0(uint64_t a1, uint64_t a2)
{
  return sub_1000050A0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_1000046B8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1000046C0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1000046F0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100004704@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100004718@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_10000472C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100004758@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10000477C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100004790@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000047A4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000047B8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000047CC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000047E0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1000047F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_100004808(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

id UIView.Shadow.color.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_100004824@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_10000482C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_10000483C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100004848(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1000048BC(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100004938@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

_QWORD *sub_10000497C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_100004988@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10000499C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

uint64_t sub_1000049B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100005240(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1000049EC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(AVFoundationErrorDomain);
}

uint64_t sub_1000049FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100004A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100004A7C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100004AE0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_100004B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100004B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_100004BC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100004C04@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100004C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B7038, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C60E0);
  v3 = sub_100004D8C(&qword_1004B7040, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C6034);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004CB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B6F98, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_1003C59F0);
  v3 = sub_100004D8C(&qword_1004B6FA0, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_1003C5998);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004D34()
{
  return sub_100004D8C(&qword_1004B6F38, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_1003C5960);
}

uint64_t sub_100004D60()
{
  return sub_100004D8C(&qword_1004B6F40, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_1003C5938);
}

uint64_t sub_100004D8C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004DCC()
{
  return sub_100004D8C(&qword_1004B6F48, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_1003C59C8);
}

uint64_t sub_100004DF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B6FF8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5F80);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100004E38(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B6FF8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5F80);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100004E7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100004EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100004F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B6F88, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_1003C5D94);
  v3 = sub_100004D8C(&qword_1004B6F90, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_1003C5D3C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004F98()
{
  return sub_100004D8C(&qword_1004B6F50, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_1003C5B1C);
}

uint64_t sub_100004FC4()
{
  return sub_100004D8C(&qword_1004B6F58, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_1003C5AEC);
}

uint64_t sub_100004FF0()
{
  return sub_100004D8C(&qword_1004B6F60, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_1003C5B44);
}

uint64_t sub_10000501C()
{
  return sub_100004D8C(&qword_1004B6F68, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_1003C5B7C);
}

uint64_t sub_100005048()
{
  return sub_100004D8C(&qword_1004B6F70, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_1003C5D04);
}

uint64_t sub_100005074()
{
  return sub_100004D8C(&qword_1004B6F78, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_1003C5CDC);
}

uint64_t sub_1000050A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1000050DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000511C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_10000518C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_100005214()
{
  return sub_100004D8C(&qword_1004B6F80, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_1003C5D6C);
}

uint64_t sub_100005240(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6FA8, (uint64_t)&unk_1004648F8);
}

uint64_t _s14descr100484C39V11PlaceholderVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_1000052BC(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6FB0, (uint64_t)&unk_100464978);
}

void type metadata accessor for AVError(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6FB8, (uint64_t)&unk_1004649A0);
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6FC0, (uint64_t)&unk_1004649C8);
}

void type metadata accessor for MPCScriptedLooperStatus(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B6FC8, (uint64_t)&unk_1004649E8);
}

uint64_t sub_100005364()
{
  return sub_100004D8C(&qword_1004B6FD0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5EA8);
}

uint64_t sub_100005390()
{
  return sub_100004D8C(&qword_1004B6FD8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5ED0);
}

uint64_t sub_1000053BC()
{
  return sub_100004D8C(&qword_1004B6FE0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C5FF8);
}

uint64_t sub_1000053E8()
{
  return sub_100004D8C(&qword_1004B6FE8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C5FCC);
}

uint64_t sub_100005414()
{
  return sub_100004D8C(&qword_1004B6FF0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C6068);
}

uint64_t sub_100005440()
{
  return sub_100004D8C(&qword_1004B6FF8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5F80);
}

uint64_t sub_10000546C()
{
  return sub_100004D8C(&qword_1004B7000, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5F50);
}

uint64_t sub_100005498()
{
  return sub_100004D8C(&qword_1004B7008, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C5F10);
}

uint64_t sub_1000054C4()
{
  return sub_100004D8C(&qword_1004B7010, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1003C61C4);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B7048, (uint64_t)&unk_100464A08);
}

uint64_t sub_100005504()
{
  return sub_100004D8C(&qword_1004B7018, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1003C618C);
}

unint64_t sub_100005534()
{
  unint64_t result;

  result = qword_1004B7020;
  if (!qword_1004B7020)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1004B7020);
  }
  return result;
}

uint64_t sub_100005578()
{
  return sub_100004D8C(&qword_1004B7028, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1003C61FC);
}

uint64_t sub_1000055A4()
{
  return sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B7050, (uint64_t)&unk_100464A80);
}

void sub_1000055E4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

UITraitCollection __swiftcall UITraitCollection.init(isStandardNavigationBar:)(Swift::Bool isStandardNavigationBar)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  UITraitCollection result;
  void *ObjCClassFromMetadata;
  Class isa;
  id v11;

  v2 = sub_1000057B4(&qword_1004B7058);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C6240;
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", isStandardNavigationBar);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "_traitCollectionWithValue:forTraitNamed:", v5, v6);

  if (v7)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(_QWORD *)(v3 + 32) = v7;
    specialized Array._endMutation()(ObjCClassFromMetadata);
    sub_10000598C(0, &qword_1004B7060, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    v11 = objc_msgSend(ObjCClassFromMetadata, "traitCollectionWithTraitsFromCollections:", isa);

    return (UITraitCollection)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000057B4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

id UITraitCollection.isStandardNavigationBar.getter()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_100005904((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_10000594C((uint64_t)v9);
    return 0;
  }
  v3 = sub_10000598C(0, (unint64_t *)&qword_1004B73F0, NSNumber_ptr);
  if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = v7;
  v5 = objc_msgSend(v7, "BOOLValue");

  return v5;
}

uint64_t sub_100005904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B7068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000594C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004B7068);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000598C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

UITraitCollection __swiftcall UITraitCollection.combining(with:)(UITraitCollection_optional with)
{
  void *v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  id v6;
  Class v7;
  id v8;
  uint64_t v10;

  if (!with.value.super.isa)
    return (UITraitCollection)v1;
  isa = with.value.super.isa;
  v3 = sub_1000057B4(&qword_1004B7058);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003C6250;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = isa;
  v10 = v4;
  specialized Array._endMutation()(v4);
  sub_10000598C(0, &qword_1004B7060, UITraitCollection_ptr);
  v5 = isa;
  v6 = v1;
  v7 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraitsFromCollections:", v7);

  return (UITraitCollection)v8;
}

void sub_100005AC8()
{
  off_1004B7070 = &off_1004643C8;
}

double sub_100005ADC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_1000057B4(&qword_1004B7100);
  v1 = swift_allocObject(v0, 72, 7);
  *(_QWORD *)&result = 5;
  *(_OWORD *)(v1 + 16) = xmmword_1003C6270;
  *(_QWORD *)(v1 + 32) = &off_100464410;
  *(_QWORD *)(v1 + 40) = &off_100464480;
  *(_QWORD *)(v1 + 48) = &off_1004644F0;
  *(_QWORD *)(v1 + 56) = &off_100464560;
  *(_QWORD *)(v1 + 64) = &off_1004645E0;
  off_1004B7078 = (_UNKNOWN *)v1;
  return result;
}

double sub_100005B4C()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  result = 1.0 / v2 + 1.0;
  *(double *)&qword_1004B7080 = result;
  return result;
}

uint64_t sub_100005BB8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  objc_super v44;
  _QWORD *v45;

  v5 = v4;
  v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize] = 0;
  v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped] = 1;
  v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_showsIdealizedLevelPositionsWhenStopped] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelWidth] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight] = 0x4000000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight] = 0x402C000000000000;
  v10 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews;
  v45 = _swiftEmptyArrayStorage;
  v11 = v4;
  specialized ContiguousArray.reserveCapacity(_:)(5);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v14 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
  v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
  specialized ContiguousArray._endMutation()(v15);
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v18 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
  v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized ContiguousArray._endMutation()(v19);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v21 = objc_msgSend(v20, "layer");
  objc_msgSend(v21, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v22 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
  v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
  specialized ContiguousArray._endMutation()(v23);
  v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v25 = objc_msgSend(v24, "layer");
  objc_msgSend(v25, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v26 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
  v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
  specialized ContiguousArray._endMutation()(v27);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v29 = objc_msgSend(v28, "layer");
  objc_msgSend(v29, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v30 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
  v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized ContiguousArray._endMutation()(v31);
  *(_QWORD *)&v5[v10] = _swiftEmptyArrayStorage;

  v44.receiver = v11;
  v44.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  v32 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v33 = v32;
  v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews];
  if (!((unint64_t)v34 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    v36 = v32;
    result = swift_bridgeObjectRetain();
    if (v35)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v34);
    sub_100006670();

    return (uint64_t)v33;
  }
  if (v34 < 0)
    v42 = *(_QWORD *)&v32[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews];
  else
    v42 = v34 & 0xFFFFFFFFFFFFFF8;
  v43 = v32;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v42);
  v35 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v35 >= 1)
  {
    v38 = 0;
    do
    {
      if ((v34 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v34);
      else
        v39 = *(id *)(v34 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v33, "tintColor");
      objc_msgSend(v40, "setBackgroundColor:", v41);

    }
    while (v35 != v38);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100006040()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v9, "tintColorDidChange");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v1);
  }
  if (v1 < 0)
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews];
  else
    v8 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v0, "tintColor");
      objc_msgSend(v6, "setBackgroundColor:", v7);

    }
    while (v2 != v4);
    return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000061A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double MaxY;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;
  CGRect v21;
  CGRect v22;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v20, "layoutSubviews");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews];
  if ((unint64_t)v1 >> 62)
    goto LABEL_21;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelWidth;
    v6 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_showsIdealizedLevelPositionsWhenStopped;
    v7 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight;
    v19 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v8 = *(id *)(v1 + 8 * v4 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "superview");

      if (!v10)
        objc_msgSend(v0, "addSubview:", v9);
      objc_msgSend(v9, "frame");
      v12 = v11;
      v13 = *(double *)&v0[v5];
      if (v0[v6] == 1)
      {
        if (qword_1004B6DF0 != -1)
          swift_once(&qword_1004B6DF0, sub_100005AC8);
        if ((unint64_t)v4 >= *((_QWORD *)off_1004B7070 + 2))
        {
          __break(1u);
LABEL_21:
          if (v1 < 0)
            v18 = v1;
          else
            v18 = v1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          result = _CocoaArrayWrapper.endIndex.getter(v18);
          v2 = result;
          if (!result)
            return swift_bridgeObjectRelease(v1);
          goto LABEL_3;
        }
        v14 = *(double *)&v0[v7] + *((double *)off_1004B7070 + v4 + 4) * (*(double *)&v0[v19] - *(double *)&v0[v7]);
        v15 = *(double *)&v0[v5];
      }
      else
      {
        v14 = *(double *)&v0[v7];
        v15 = *(double *)&v0[v5];
      }
      if (qword_1004B6E00 != -1)
        swift_once(&qword_1004B6E00, sub_100005B4C);
      v16 = (v15 + *(double *)&qword_1004B7080) * (double)v4;
      objc_msgSend(v0, "bounds");
      MaxY = CGRectGetMaxY(v21);
      v22.origin.x = v16;
      v22.origin.y = v12;
      v22.size.width = v13;
      v22.size.height = v14;
      objc_msgSend(v9, "setFrame:", v16, MaxY - CGRectGetHeight(v22), v13, v14);

      if (v2 == ++v4)
        return swift_bridgeObjectRelease(v1);
    }
  }
  __break(1u);
  return result;
}

void sub_1000064EC(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v14, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if (!a1)
  {

    goto LABEL_9;
  }
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {

    swift_bridgeObjectRelease_n(v8, 2);
    return;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) == 0)
LABEL_9:
    sub_100006670();
}

void sub_100006670()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  NSString *v6;
  double v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  NSString *v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  NSString *v18;
  double v19;
  double v20;

  if (v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize] == 1)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self(UIFontMetrics);
    v3 = objc_msgSend(v2, "defaultMetrics");
    v4 = objc_msgSend(v1, "traitCollection");
    v5 = (void *)static UIContentSizeCategory.default.getter();
    v6 = UIContentSizeCategoryUnspecified;
    v7 = UIFontMetrics.scaledValue(for:traitCollection:noSmallerThan:noLargerThan:where:)(v4, v5, v6, static MPCPlayerCommandRequest.isAvailable(in:), 0, 3.0);

    v8 = *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelWidth];
    *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelWidth] = v7;
    if (v7 != v8)
      objc_msgSend(v1, "setNeedsLayout");
    v9 = objc_msgSend(v2, "defaultMetrics");
    v10 = objc_msgSend(v1, "traitCollection");
    v11 = (void *)static UIContentSizeCategory.default.getter();
    v12 = v6;
    v13 = UIFontMetrics.scaledValue(for:traitCollection:noSmallerThan:noLargerThan:where:)(v10, v11, v12, static MPCPlayerCommandRequest.isAvailable(in:), 0, 2.0);

    v14 = *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight];
    *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight] = v13;
    if (v13 != v14)
      objc_msgSend(v1, "setNeedsLayout");
    v15 = objc_msgSend(v2, "defaultMetrics");
    v16 = objc_msgSend(v1, "traitCollection");
    v17 = (void *)static UIContentSizeCategory.default.getter();
    v18 = v12;
    v19 = UIFontMetrics.scaledValue(for:traitCollection:noSmallerThan:noLargerThan:where:)(v16, v17, v18, static MPCPlayerCommandRequest.isAvailable(in:), 0, 14.0);

    v20 = *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight];
    *(double *)&v1[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight] = v19;
    if (v19 != v20)
      objc_msgSend(v1, "setNeedsLayout");
  }
}

void sub_1000068CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSString v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double Height;
  double v24;
  double v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  Class v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  Class v54;
  uint64_t v55;
  uint64_t v56;
  Class v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  Class v62;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  NSString v67;
  id v68;
  _QWORD *v69;
  Class v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  uint64_t v77;
  uint64_t v78;
  Class v79;
  Class v80;
  double v81;
  NSString v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  CGRect v104;

  v1 = v0;
  v2 = (void *)objc_opt_self(CAMediaTimingFunction);
  v87 = objc_msgSend(v2, "functionWithName:", kCAMediaTimingFunctionEaseOut);
  v99 = objc_msgSend(v2, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews);
  if ((unint64_t)v3 >> 62)
    goto LABEL_62;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    v5 = 0;
    v6 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped;
    v100 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight;
    v101 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight;
    v7 = v3 & 0xC000000000000001;
    v93 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_showsIdealizedLevelPositionsWhenStopped;
    v88 = v3 + 32;
    v89 = v3 & 0xFFFFFFFFFFFFFF8;
    v86 = xmmword_1003C6250;
    v91 = v4;
    v92 = v3;
    v90 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped;
    v94 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v7)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v89 + 16))
          goto LABEL_60;
        v9 = *(id *)(v88 + 8 * v5);
      }
      v10 = v9;
      v11 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      v12 = objc_msgSend(v9, "layer");
      v98 = v10;
      if (*(_BYTE *)(v1 + v6) == 1)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, "presentationLayer");
        if (!v14)
          v14 = v13;
        objc_msgSend(v14, "bounds", v86);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        v22 = v21;

        v104.origin.x = v16;
        v104.origin.y = v18;
        v104.size.width = v20;
        v104.size.height = v22;
        Height = CGRectGetHeight(v104);
        v24 = Height;
        if (*(_BYTE *)(v1 + v93) == 1)
        {
          if (qword_1004B6DF0 != -1)
            swift_once(&qword_1004B6DF0, sub_100005AC8);
          if (v5 >= *((_QWORD *)off_1004B7070 + 2))
            goto LABEL_61;
          Height = *(double *)(v1 + v101)
                 + *((double *)off_1004B7070 + v5 + 4) * (*(double *)(v1 + v100) - *(double *)(v1 + v101));
          v25 = Height;
          if (v24 != Height)
          {
LABEL_37:
            v42 = Height * 1.1;
            v43 = String._bridgeToObjectiveC()();
            v44 = objc_msgSend((id)objc_opt_self(CAKeyframeAnimation), "animationWithKeyPath:", v43);

            objc_msgSend(v44, "setDuration:", 0.733333333);
            v45 = sub_1000057B4(&qword_1004B70F0);
            v46 = swift_allocObject(v45, 128, 7);
            *(_OWORD *)(v46 + 16) = xmmword_1003C6280;
            *(_QWORD *)(v46 + 56) = &type metadata for CGFloat;
            *(double *)(v46 + 32) = v24;
            *(_QWORD *)(v46 + 88) = &type metadata for CGFloat;
            *(double *)(v46 + 64) = v42;
            *(_QWORD *)(v46 + 120) = &type metadata for CGFloat;
            *(double *)(v46 + 96) = v25;
            v97 = v11;
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v46);
            objc_msgSend(v44, "setValues:", isa);

            specialized ContiguousArray.reserveCapacity(_:)(3);
            v48 = Double._bridgeToObjectiveC()().super.super.isa;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            v49 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v49);
            v50 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v48);
            specialized ContiguousArray._endMutation()(v50);
            v51 = Double._bridgeToObjectiveC()().super.super.isa;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            v52 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v52);
            v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v51);
            specialized ContiguousArray._endMutation()(v53);
            v54 = Double._bridgeToObjectiveC()().super.super.isa;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            v55 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v55);
            v56 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v54);
            specialized ContiguousArray._endMutation()(v56);
            sub_10000598C(0, (unint64_t *)&qword_1004B73F0, NSNumber_ptr);
            v57 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v44, "setKeyTimes:", v57, swift_release(_swiftEmptyArrayStorage).n128_f64[0]);

            v58 = sub_1000057B4(&qword_1004B7058);
            v59 = swift_allocObject(v58, 48, 7);
            *(_OWORD *)(v59 + 16) = v86;
            *(_QWORD *)(v59 + 32) = v87;
            *(_QWORD *)(v59 + 40) = v99;
            v103 = v59;
            specialized Array._endMutation()(v59);
            sub_10000598C(0, &qword_1004B70E8, CAMediaTimingFunction_ptr);
            v60 = v87;
            v61 = v99;
            v62 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v103);
            objc_msgSend(v44, "setTimingFunctions:", v62);

            v11 = v97;
            v3 = v92;
            v8 = String._bridgeToObjectiveC()();
            objc_msgSend(v13, "addAnimation:forKey:", v44, v8);

            goto LABEL_5;
          }
        }
        else
        {
          v25 = *(double *)(v1 + v101);
          if (Height != v25)
            goto LABEL_37;
        }
        v8 = String._bridgeToObjectiveC()();
        objc_msgSend(v13, "removeAnimationForKey:", v8);
LABEL_5:

        goto LABEL_6;
      }
      v95 = v12;
      v96 = v5 + 1;
      v26 = _swiftEmptyArrayStorage;
      v102 = _swiftEmptyArrayStorage;
      v27 = sub_100007C74(v5);
      v28 = v27;
      v29 = *(_QWORD *)(v27 + 16);
      if (v29)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v29; ++i)
        {
          v32 = v28 + 8 * i;
          if (*(double *)(v32 + 32) <= 1.0)
            v33 = *(double *)(v32 + 32);
          else
            v33 = 1.0;
          v34 = *(double *)(v1 + v101);
          v35 = *(double *)(v1 + v100);
          if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
            v26 = sub_1000231FC(0, v26[2] + 1, 1, v26);
          v37 = v26[2];
          v36 = v26[3];
          if (v37 >= v36 >> 1)
            v26 = sub_1000231FC((_QWORD *)(v36 > 1), v37 + 1, 1, v26);
          v26[2] = v37 + 1;
          *(double *)&v26[v37 + 4] = v34 + v33 * (v35 - v34);
          if (i < v29 - 1)
          {
            v38 = v99;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
            v40 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v39 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v40 >= v39 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
            v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
            specialized Array._endMutation()(v31);
          }
        }
        swift_bridgeObjectRelease_n(v28, 2);
        v41 = (uint64_t)_swiftEmptyArrayStorage;
        v3 = v92;
      }
      else
      {
        swift_bridgeObjectRelease(v27);
        v41 = (uint64_t)_swiftEmptyArrayStorage;
      }
      v7 = v94;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        if ((uint64_t)_swiftEmptyArrayStorage < 0)
          v83 = _swiftEmptyArrayStorage;
        else
          v83 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        v84 = _CocoaArrayWrapper.endIndex.getter(v83);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if (!v84)
          goto LABEL_59;
      }
      else if (!*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_59;
      }
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(_swiftEmptyArrayStorage);
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject
        || ((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
        || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_10001118C((uint64_t)_swiftEmptyArrayStorage);
        v41 = isUniquelyReferenced_nonNull_bridgeObject;
        v102 = (_QWORD *)isUniquelyReferenced_nonNull_bridgeObject;
      }
      v64 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v64)
        goto LABEL_58;
      v65 = v64 - 1;
      v66 = *(void **)((v41 & 0xFFFFFFFFFFFFFF8) + 8 * v65 + 0x20);
      *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) = v65;
      specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

      v67 = String._bridgeToObjectiveC()();
      v68 = objc_msgSend((id)objc_opt_self(CAKeyframeAnimation), "animationWithKeyPath:", v67);

      objc_msgSend(v68, "setDuration:", 1.0);
      v69 = sub_100007340((uint64_t)v26);
      swift_bridgeObjectRelease(v26);
      v70 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v69);
      objc_msgSend(v68, "setValues:", v70);

      v71 = sub_100007DA0(v5);
      v72 = v71;
      v73 = *(_QWORD *)(v71 + 16);
      if (v73)
      {
        specialized ContiguousArray.reserveCapacity(_:)(v73);
        v74 = 0;
        do
        {
          v75 = v74 + 1;
          v76 = Double._bridgeToObjectiveC()().super.super.isa;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v77 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v77);
          v78 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v76);
          specialized ContiguousArray._endMutation()(v78);
          v74 = v75;
        }
        while (v73 != v75);
        swift_bridgeObjectRelease(v72);
        v7 = v94;
      }
      else
      {
        swift_bridgeObjectRelease(v71);
      }
      sub_10000598C(0, (unint64_t *)&qword_1004B73F0, NSNumber_ptr);
      v79 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      objc_msgSend(v68, "setKeyTimes:", v79);

      sub_10000598C(0, &qword_1004B70E8, CAMediaTimingFunction_ptr);
      v80 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v102);
      objc_msgSend(v68, "setTimingFunctions:", v80);

      LODWORD(v81) = 2139095040;
      objc_msgSend(v68, "setRepeatCount:", v81);
      objc_msgSend(v68, "setRemovedOnCompletion:", 0);
      v82 = String._bridgeToObjectiveC()();
      objc_msgSend(v95, "addAnimation:forKey:", v68, v82);

      v6 = v90;
      v4 = v91;
      v11 = v96;
LABEL_6:
      v5 = v11;
      if (v11 == v4)
        goto LABEL_66;
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    if (v3 < 0)
      v85 = v3;
    else
      v85 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v85);
  }
LABEL_66:

  swift_bridgeObjectRelease(v3);
}

_QWORD *sub_100007340(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  _OWORD v9[2];
  _QWORD *v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v10 = _swiftEmptyArrayStorage;
    sub_100007500(0, v1, 0);
    v4 = (uint64_t *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v8 = *v4;
      swift_dynamicCast(v9, &v8, &type metadata for CGFloat, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100007500(0, v2[2] + 1, 1);
        v2 = v10;
      }
      v6 = v2[2];
      v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100007500(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      v2[2] = v6 + 1;
      sub_100007EE4(v9, &v2[4 * v6 + 4]);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_100007460()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingIndicatorView()
{
  return objc_opt_self(_TtC16MusicMessagesApp23NowPlayingIndicatorView);
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

uint64_t sub_1000074C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10000751C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000074E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100007678(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100007500(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000077D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10000751C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004B7108);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100007678(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004B70F8);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000077D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004B70F0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100007940()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize] = 0;
  v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped] = 1;
  v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_showsIdealizedLevelPositionsWhenStopped] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelWidth] = 0x4008000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_minimumLevelHeight] = 0x4000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_maximumLevelHeight] = 0x402C000000000000;
  v2 = OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelViews;
  specialized ContiguousArray.reserveCapacity(_:)(5);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v4, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v5 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
  v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
  specialized ContiguousArray._endMutation()(v6);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v9 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
  v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized ContiguousArray._endMutation()(v10);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v12, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v13 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
  v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
  specialized ContiguousArray._endMutation()(v14);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v16, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v17 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
  v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
  specialized ContiguousArray._endMutation()(v18);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = objc_msgSend(v19, "layer");
  objc_msgSend(v20, "setAnchorPoint:", 0.5, 1.0);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  v21 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
  v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
  specialized ContiguousArray._endMutation()(v22);
  *(_QWORD *)&v1[v2] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003A4070, "MusicMessagesApp/NowPlayingIndicatorView.swift", 46, 2, 77, 0);
  __break(1u);
}

uint64_t sub_100007C74(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = result;
  if (qword_1004B6DF8 == -1)
  {
    if ((result & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = swift_once(&qword_1004B6DF8, sub_100005ADC);
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_3:
  if (*((_QWORD *)off_1004B7078 + 2) <= v1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v2 = *((_QWORD *)off_1004B7078 + v1 + 4);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1000074C8(0, v3, 0);
    v4 = _swiftEmptyArrayStorage[2];
    v5 = 32;
    do
    {
      v6 = *(_QWORD *)(v2 + v5);
      v7 = _swiftEmptyArrayStorage[3];
      if (v4 >= v7 >> 1)
        sub_1000074C8(v7 > 1, v4 + 1, 1);
      _swiftEmptyArrayStorage[2] = v4 + 1;
      _swiftEmptyArrayStorage[v4 + 4] = v6;
      v5 += 16;
      ++v4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100007DA0(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;

  v1 = result;
  if (qword_1004B6DF8 == -1)
  {
    if ((result & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = swift_once(&qword_1004B6DF8, sub_100005ADC);
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_3:
  if (*((_QWORD *)off_1004B7078 + 2) <= v1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v2 = *((_QWORD *)off_1004B7078 + v1 + 4);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1000074E4(0, v3, 0);
    v4 = _swiftEmptyArrayStorage[2];
    v5 = 40;
    do
    {
      v6 = *(double *)(v2 + v5);
      v7 = _swiftEmptyArrayStorage[3];
      if (v4 >= v7 >> 1)
        sub_1000074E4(v7 > 1, v4 + 1, 1);
      _swiftEmptyArrayStorage[2] = v4 + 1;
      *(double *)&_swiftEmptyArrayStorage[v4 + 4] = v6 / 60.0;
      v5 += 16;
      ++v4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

_OWORD *sub_100007EE4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_100007EF4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudioPreviewPlayer()), "init");
  qword_1004F44D0 = (uint64_t)result;
  return result;
}

double sub_100007F20(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v20[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerDispatchQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_100464D90, v13 + v11, v12 | 7);
  *(_QWORD *)(v14 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_100009840;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011FD0;
  aBlock[3] = &unk_100464DA8;
  v15 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v1);
  v24 = _swiftEmptyArrayStorage;
  v16 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
  v18 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

double sub_10000817C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerDispatchQueue];
  v9 = swift_allocObject(&unk_100464D40, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_100009768;
  v18 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011FD0;
  aBlock[3] = &unk_100464D58;
  v10 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
  v13 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_100008360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  NSDictionary v42;
  objc_class *v43;
  uint64_t v44;
  _QWORD *v45;
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  objc_super v52;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v5[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts];
  v19 = *(_QWORD *)&v5[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts];
  if (!a5)
  {
    if (v19)
    {
      if (*((_QWORD *)v18 + 1))
        goto LABEL_14;
      goto LABEL_11;
    }
LABEL_16:
    v23 = v15;
    v31 = swift_allocObject(&unk_100464E30, 24, 7);
    *(_QWORD *)(v31 + 16) = v5;
    v50 = sub_100009904;
    v51 = v31;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100011FD0;
    v49 = &unk_100464E48;
    v32 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v5);
    v45 = _swiftEmptyArrayStorage;
    v33 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v34 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v35 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v34, v35, v10, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v12, v32);
    v29 = v32;
    goto LABEL_17;
  }
  if (v19)
    v20 = a5 == v19;
  else
    v20 = 0;
  if (v20)
    goto LABEL_16;
  v21 = *((_QWORD *)v18 + 1);
  if (v21)
    v22 = a5 == v21;
  else
    v22 = 0;
  if (v22)
  {
LABEL_11:
    v23 = v15;
    v24 = swift_allocObject(&unk_100464DE0, 32, 7);
    *(_QWORD *)(v24 + 16) = a4;
    *(_QWORD *)(v24 + 24) = v5;
    v50 = sub_1000098FC;
    v51 = v24;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100011FD0;
    v49 = &unk_100464DF8;
    v25 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter(v5);
    v45 = _swiftEmptyArrayStorage;
    v26 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v28 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v27, v28, v10, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v12, v25);
    v29 = v25;
LABEL_17:
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v23);
    swift_release(v51);
    return;
  }
LABEL_14:
  if (a2)
    v30 = String._bridgeToObjectiveC()();
  else
    v30 = 0;
  sub_100009584(a3, (uint64_t)&aBlock);
  v36 = v49;
  if (!v49)
  {
    v41 = 0;
    if (a4)
      goto LABEL_21;
LABEL_23:
    v42.super.isa = 0;
    goto LABEL_24;
  }
  v37 = sub_1000096A0(&aBlock, (uint64_t)v49);
  v38 = *(v36 - 1);
  __chkstk_darwin(v37);
  v40 = (char *)&v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v38 + 16))(v40);
  v41 = _bridgeAnythingToObjectiveC<A>(_:)(v40, v36);
  (*(void (**)(char *, _QWORD *))(v38 + 8))(v40, v36);
  sub_10000970C(&aBlock);
  if (!a4)
    goto LABEL_23;
LABEL_21:
  type metadata accessor for NSKeyValueChangeKey(0);
  sub_100004D8C(&qword_1004B7038, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003C60E0);
  v42.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_24:
  v43 = (objc_class *)type metadata accessor for AudioPreviewPlayer();
  v52.receiver = v5;
  v52.super_class = v43;
  objc_msgSendSuper2(&v52, "observeValueForKeyPath:ofObject:change:context:", v30, v41, v42.super.isa, a5);

  swift_unknownObjectRelease(v41);
}

id sub_1000087E8(uint64_t a1)
{
  uint64_t v2;
  id result;
  float v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  v2 = OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player;
  result = *(id *)(a1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player);
  if (result)
  {
    result = objc_msgSend(result, "status");
    if (result == (id)1)
    {
      result = *(id *)(a1 + v2);
      if (result)
      {
        result = objc_msgSend(result, "rate");
        if (v4 == 0.0)
        {
          v5 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
          v6 = objc_msgSend(v5, "mode");
          v14 = 0;
          v7 = objc_msgSend(v5, "setCategory:mode:options:error:", AVAudioSessionCategoryPlayback, v6, 0, &v14);

          v8 = v14;
          if (v7
            && (v14 = 0,
                v9 = v8,
                v10 = objc_msgSend(v5, "setActive:withOptions:error:", 1, 0, &v14),
                v8 = v14,
                (v10 & 1) != 0))
          {
            v11 = v14;

          }
          else
          {
            v12 = v8;
            v13 = _convertNSErrorToError(_:)(v8);

            swift_willThrow();
            swift_errorRelease(v13);
          }
          return objc_msgSend(*(id *)(a1 + v2), "play");
        }
      }
    }
  }
  return result;
}

void sub_100008978(uint64_t a1)
{
  NSString *v1;
  unint64_t v3;
  char v4;
  float v5;
  NSString *v6;
  unint64_t v7;
  char v8;
  float v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[2];

  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    v10 = 0u;
    v11 = 0u;
    __break(1u);
    goto LABEL_16;
  }
  v1 = NSKeyValueChangeOldKey;
  v3 = sub_100027674((uint64_t)v1);
  if ((v4 & 1) == 0)
  {
LABEL_16:
    v10 = 0u;
    v11 = 0u;

    goto LABEL_17;
  }
  sub_10000990C(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)&v10);

  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100007EE4(&v10, v12);
  swift_dynamicCast(&v9, v12, (char *)&type metadata for Any + 8, &type metadata for Float, 7);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    v10 = 0u;
    v11 = 0u;
LABEL_19:
    __break(1u);
    return;
  }
  v5 = v9;
  v6 = NSKeyValueChangeNewKey;
  v7 = sub_100027674((uint64_t)v6);
  if ((v8 & 1) != 0)
  {
    sub_10000990C(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }

  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_19;
  sub_100007EE4(&v10, v12);
  swift_dynamicCast(&v9, v12, (char *)&type metadata for Any + 8, &type metadata for Float, 7);
  if (v5 > 0.0 && v9 == 0.0)
    sub_1000095CC();
}

uint64_t sub_100008C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t result;
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  double v17;
  void *v18;
  void *v19;
  id v20;
  NSString v21;
  void *v22;
  id v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeEpoch epoch;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  Class isa;
  void *v37;
  id v38;
  uint64_t v39;
  _BYTE v41[24];
  __int128 aBlock;
  __int128 v43;
  void (*v44)();
  uint64_t v45;
  CMTime v46;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerDispatchQueue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  v8 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    v10 = objc_allocWithZone((Class)AVPlayer);
    URL._bridgeToObjectiveC()(v11);
    v13 = v12;
    v14 = objc_msgSend(v10, "initWithURL:", v12);

    v15 = OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player;
    v16 = *(void **)(v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player) = v14;

    v18 = *(void **)(v1 + v15);
    if (v18)
    {
      LODWORD(v17) = *(_DWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer_volume);
      objc_msgSend(v18, "setVolume:", v17);
      v19 = *(void **)(v1 + v15);
      if (v19)
      {
        v20 = v19;
        v21 = String._bridgeToObjectiveC()();
        objc_msgSend(v20, "addObserver:forKeyPath:options:context:", v1, v21, 3, *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts));

        v22 = *(void **)(v1 + v15);
        if (v22)
        {
          v23 = v22;
          v24 = String._bridgeToObjectiveC()();
          objc_msgSend(v23, "addObserver:forKeyPath:options:context:", v1, v24, 3, *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts + 8));

        }
      }
    }
    v25 = sub_1000057B4(&qword_1004B7058);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1003C6240;
    v46 = CMTime.init(value:timescale:)(3, 4);
    value = v46.value;
    timescale = v46.timescale;
    epoch = v46.epoch;
    v30 = HIDWORD(*(_QWORD *)&v46.timescale);
    v31 = objc_allocWithZone((Class)NSValue);
    *(_QWORD *)&aBlock = value;
    *((_QWORD *)&aBlock + 1) = __PAIR64__(v30, timescale);
    *(_QWORD *)&v43 = epoch;
    v32 = objc_msgSend(v31, "initWithCMTime:", &aBlock);
    *(_QWORD *)(v26 + 32) = v32;
    *(_QWORD *)&aBlock = v26;
    specialized Array._endMutation()(v32);
    v33 = aBlock;
    v34 = *(void **)(v1 + v15);
    if (v34)
    {
      sub_10000598C(0, &qword_1004B7160, NSValue_ptr);
      v35 = v34;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v33);
      v44 = sub_100008F80;
      v45 = 0;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v43 = sub_100011FD0;
      *((_QWORD *)&v43 + 1) = &unk_100464D08;
      v37 = _Block_copy(&aBlock);
      v38 = objc_msgSend(v35, "addBoundaryTimeObserverForTimes:queue:usingBlock:", isa, v7, v37);
      _Block_release(v37);

      _bridgeAnyObjectToAny(_:)(v38);
      swift_unknownObjectRelease(v38);
    }
    else
    {
      swift_bridgeObjectRelease(aBlock);
      aBlock = 0u;
      v43 = 0u;
    }
    v39 = v1 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerBoundaryTimeObservationToken;
    swift_beginAccess(v39, v41, 33, 0);
    sub_1000096C4((uint64_t)&aBlock, v39);
    return swift_endAccess(v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100008F80()
{
  id v0;

  v0 = String._bridgeToObjectiveC()();
  AnalyticsSendEvent(v0, 0);

}

void sub_100008FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;
  NSString v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  _BYTE v23[24];
  _BYTE v24[24];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  CMTimeEpoch epoch;
  uint64_t v29;
  CMTime v30;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerDispatchQueue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    v7 = OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player;
    v8 = *(void **)(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player);
    if (v8)
    {
      v9 = v8;
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "removeObserver:forKeyPath:context:", v0, v10, *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts));

      v11 = *(void **)(v0 + v7);
      if (v11)
      {
        v12 = v11;
        v13 = String._bridgeToObjectiveC()();
        objc_msgSend(v12, "removeObserver:forKeyPath:context:", v0, v13, *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts + 8));

      }
    }
    v14 = v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerBoundaryTimeObservationToken;
    swift_beginAccess(v0 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerBoundaryTimeObservationToken, v24, 0, 0);
    sub_100009584(v14, (uint64_t)&v25);
    if (*((_QWORD *)&v26 + 1))
    {
      sub_100007EE4(&v25, &v27);
      v15 = *(void **)(v0 + v7);
      if (v15)
      {
        v16 = v29;
        v17 = sub_1000096A0(&v27, v29);
        v18 = v15;
        v19 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
        objc_msgSend(v18, "removeTimeObserver:", v19);

        swift_unknownObjectRelease(v19);
      }
      v25 = 0u;
      v26 = 0u;
      swift_beginAccess(v14, v23, 33, 0);
      sub_1000096C4((uint64_t)&v25, v14);
      swift_endAccess(v23);
      sub_10000970C(&v27);
      v20 = *(void **)(v0 + v7);
      if (!v20)
        goto LABEL_10;
    }
    else
    {
      sub_10000594C((uint64_t)&v25);
      v20 = *(void **)(v0 + v7);
      if (!v20)
        goto LABEL_10;
    }
    v21 = v20;
    v30 = CMTime.init(value:timescale:)(1, 2);
    *(_QWORD *)&v27 = v30.value;
    *((_QWORD *)&v27 + 1) = *(_QWORD *)&v30.timescale;
    epoch = v30.epoch;
    LODWORD(v22) = 0;
    objc_msgSend(v21, "setRate:withVolumeRampDuration:", &v27, v22);

    v20 = *(void **)(v0 + v7);
LABEL_10:
    *(_QWORD *)(v0 + v7) = 0;

    sub_1000095CC();
    return;
  }
  __break(1u);
}

id sub_100009264()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *ObjCClassFromMetadata;
  char *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD v24[2];
  uint64_t v25;
  objc_class *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  _QWORD *v31;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  __chkstk_darwin(v2);
  v27 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer_volume] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player] = 0;
  v25 = OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerDispatchQueue;
  v24[1] = sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v26 = (objc_class *)type metadata accessor for AudioPreviewPlayer();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v11 = v1;
  v12 = NSStringFromClass(ObjCClassFromMetadata);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  static DispatchQoS.userInitiated.getter();
  v31 = _swiftEmptyArrayStorage;
  v16 = sub_100004D8C((unint64_t *)&unk_1004B7450, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = sub_1000057B4(&qword_1004B7178);
  v18 = sub_100009890((unint64_t *)&unk_1004B7460, &qword_1004B7178);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v17, v18, v4, v16);
  v19 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v13, v15, v9, v6, v19, 0);
  *(_QWORD *)&v1[v25] = v20;
  v21 = &v11[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerObservationContexts];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__playerBoundaryTimeObservationToken];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;

  v30.receiver = v11;
  v30.super_class = v26;
  return objc_msgSendSuper2(&v30, "init");
}

id sub_1000094EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioPreviewPlayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudioPreviewPlayer()
{
  return objc_opt_self(_TtC16MusicMessagesApp18AudioPreviewPlayer);
}

uint64_t sub_100009584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B7068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000095CC()
{
  id v0;
  unsigned int v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v0 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  v6 = 0;
  v1 = objc_msgSend(v0, "setActive:withOptions:error:", 0, 1, &v6);
  v2 = v6;
  if (v1)
  {
    v3 = v6;

  }
  else
  {
    v4 = v6;
    v5 = _convertNSErrorToError(_:)(v2);

    swift_willThrow();
    swift_errorRelease(v5);
  }
}

_QWORD *sub_1000096A0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1000096C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B7068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000970C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10000972C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000973C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100009744()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100009768()
{
  sub_100008FC4();
}

uint64_t sub_100009788(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000097CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100009840()
{
  type metadata accessor for URL(0);
  sub_100008FC4();
  return sub_100008C04();
}

uint64_t sub_100009890(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100009788(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000098D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000098FC()
{
  uint64_t v0;

  sub_100008978(*(_QWORD *)(v0 + 16));
}

id sub_100009904()
{
  uint64_t v0;

  return sub_1000087E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10000990C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_10000996C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for MusicMessagesSharingViewController(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  qword_1004F44D8 = (uint64_t)result;
  return result;
}

uint64_t sub_1000099C0()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String_optional v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v5._countAndFlagsBits = 0xD000000000000062;
  v5._object = (void *)0x80000001003A46E0;
  v0._object = (void *)0x80000001003A46C0;
  v1._countAndFlagsBits = 0x545F524544414548;
  v1._object = (void *)0xEB00000000545845;
  v2.value._countAndFlagsBits = 0;
  v2.value._object = (void *)0xE000000000000000;
  v0._countAndFlagsBits = 0xD000000000000015;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)qword_1004F44D8, v0, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004B7180 = (__int128)v4;
  return result;
}

char *sub_100009A74(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *ObjCClassFromMetadata;
  char *v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  id v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  void *v43;
  _QWORD v45[2];
  uint64_t v46;
  objc_class *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  objc_super v53;
  _QWORD *v54;

  v4 = v3;
  v51 = a2;
  v52 = a3;
  v45[0] = a1;
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v48 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack] = 0;
  v14 = &v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect];
  v17 = type metadata accessor for IndexPath(0, v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout] = 0;
  v46 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__mediaLibraryQueue;
  v45[1] = sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v47 = (objc_class *)type metadata accessor for MusicMessagesSharingViewController(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v19 = v4;
  v20 = NSStringFromClass(ObjCClassFromMetadata);
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  static DispatchQoS.userInitiated.getter(v24);
  v54 = _swiftEmptyArrayStorage;
  v25 = sub_100004D8C((unint64_t *)&unk_1004B7450, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v26 = sub_1000057B4(&qword_1004B7178);
  v27 = sub_100009890((unint64_t *)&unk_1004B7460, &qword_1004B7178);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v26, v27, v7, v25);
  v28 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v50);
  v29 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v21, v23, v12, v9, v28, 0);
  *(_QWORD *)&v4[v46] = v29;
  *(_QWORD *)&v19[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserverToken] = 0;
  v30 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserver;
  if (qword_1004B6EE0 != -1)
    swift_once(&qword_1004B6EE0, sub_100026788);
  v31 = qword_1004F45F0;
  *(_QWORD *)&v19[v30] = qword_1004F45F0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks] = _swiftEmptyArrayStorage;
  v32 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier;
  *(_QWORD *)&v19[v32] = sub_1000261F4(_swiftEmptyArrayStorage);
  v19[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] = 0;
  swift_retain(v31);

  v33 = v51;
  if (v51)
  {
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v34 = 0;
  }
  v53.receiver = v19;
  v53.super_class = v47;
  v35 = v52;
  v36 = objc_msgSendSuper2(&v53, "initWithNibName:bundle:", v34, v52, v45[0]);

  v37 = (void *)objc_opt_self(MPMediaQuery);
  v38 = (char *)v36;
  objc_msgSend(v37, "setFilteringDisabled:", 1);
  v39 = *(_QWORD *)&v38[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserver];
  v40 = swift_allocObject(&unk_100464EF8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v38);
  swift_retain(v39);
  swift_retain(v40);
  v41 = sub_1000267C0((uint64_t)sub_10000FF00, v40);
  v42 = swift_release(v39);
  swift_release_n(v40, 2, v42);

  v43 = *(void **)&v38[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserverToken];
  *(_QWORD *)&v38[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserverToken] = v41;

  return v38;
}

void sub_100009E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10000BC60();

  }
}

id sub_100009F5C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  _BYTE v12[24];
  objc_super v13;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setDataSource:", 0);
    objc_msgSend(v3, "setDelegate:", 0);

  }
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserverToken];
  if (v4)
  {
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserver];
    swift_beginAccess(v5 + 40, v12, 33, 0);
    swift_retain(v5);
    v6 = v4;
    v7 = sub_10000DF18((uint64_t)v6);
    v9 = v8;
    swift_endAccess(v12);
    if (v7)
      sub_10000DCF8(v7, v9);

    swift_release(v5);
  }
  v10 = (objc_class *)type metadata accessor for MusicMessagesSharingViewController(0);
  v13.receiver = v1;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, "dealloc");
}

uint64_t sub_10000A154()
{
  return type metadata accessor for MusicMessagesSharingViewController(0);
}

uint64_t type metadata accessor for MusicMessagesSharingViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1004B7348;
  if (!qword_1004B7348)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MusicMessagesSharingViewController);
  return result;
}

void sub_10000A198()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  objc_super v46;

  v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for MusicMessagesSharingViewController(0);
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_22;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = v12;
  if (qword_1004B6E58 != -1)
    swift_once(&qword_1004B6E58, sub_10001BBF8);
  objc_msgSend(v13, "setBackgroundColor:", qword_1004F4570);

  v14 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
  v15 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout;
  v16 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout] = v14;

  v17 = *(void **)&v1[v15];
  if (!v17)
    goto LABEL_23;
  objc_msgSend(v17, "setSectionHeadersPinToVisibleBounds:", 0);
  v18 = *(_QWORD *)&v1[v15];
  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharingCollectionView()), "initWithFrame:collectionViewLayout:", v18, v5, v7, v9, v11);
  v20 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView;
  v21 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView] = v19;

  v22 = *(void **)&v1[v20];
  if (!v22)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v22, "setAutoresizingMask:", 18);
  v23 = *(void **)&v1[v20];
  if (!v23)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v23, "setAlwaysBounceVertical:", 1);
  v24 = *(void **)&v1[v20];
  if (!v24)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  type metadata accessor for SharingCollectionViewHeader();
  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v26 = v25;
  v27 = v24;
  static UICollectionReusableView.reuseIdentifier.getter();
  v29 = v28;
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v29);
  v30 = *(void **)&v1[v20];
  if (!v30)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  type metadata accessor for LaunchMusicCellView();
  v31 = v30;
  static UICollectionReusableView.reuseIdentifier.getter();
  v33 = v32;
  UICollectionView.register<A>(_:reuseIdentifier:)();

  swift_bridgeObjectRelease(v33);
  v34 = *(void **)&v1[v20];
  if (!v34)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  type metadata accessor for TrackCellView();
  v35 = v34;
  static UICollectionReusableView.reuseIdentifier.getter();
  v37 = v36;
  UICollectionView.register<A>(_:reuseIdentifier:)();

  swift_bridgeObjectRelease(v37);
  v38 = *(void **)&v1[v20];
  if (!v38)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v38, "setDelegate:", v1);
  v39 = *(void **)&v1[v20];
  if (!v39)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v39, "setDataSource:", v1);
  v40 = objc_msgSend(v1, "view");
  if (!v40)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!*(_QWORD *)&v1[v20])
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v41 = v40;
  objc_msgSend(v40, "addSubview:");

  v42 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction])
    return;
  v43 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v1);
  v44 = *(void **)&v1[v42];
  *(_QWORD *)&v1[v42] = v43;

  v45 = *(void **)&v1[v20];
  if (!v45)
    goto LABEL_34;
  if (!*(_QWORD *)&v1[v42])
  {
LABEL_35:
    __break(1u);
    return;
  }
  objc_msgSend(v45, "addInteraction:");
}

void sub_10000A58C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for MusicMessagesSharingViewController(0);
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v3 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction])
    goto LABEL_5;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v1);
  v5 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = v4;

  v6 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)&v1[v3])
  {
    objc_msgSend(v6, "addInteraction:");
LABEL_5:
    v7 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout];
    if (v7)
    {
      objc_msgSend(v7, "invalidateLayout");
      v8 = objc_msgSend(v1, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setNeedsLayout");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

double sub_10000A6E0()
{
  char *v0;
  char *v1;
  double result;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  objc_super v7;

  v1 = v0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MusicMessagesSharingViewController(0);
  objc_msgSendSuper2(&v7, "viewDidLayoutSubviews");
  v3 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack])
  {
    v4 = objc_msgSend(v0, "presentedViewController");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 0, 0);

    }
    v6 = *(_QWORD *)&v1[v3];
    *(_QWORD *)&v1[v3] = 0;
    swift_release(v6);
    if (qword_1004B6E08 != -1)
      swift_once(&qword_1004B6E08, sub_100007EF4);
    result = sub_10000817C();
    if (v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] == 1)
    {
      v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] = 0;
      return sub_10000BC60();
    }
  }
  return result;
}

double sub_10000A868(char a1)
{
  return sub_10000A8C8(a1, (SEL *)&selRef_viewWillDisappear_);
}

double sub_10000A8BC(char a1)
{
  return sub_10000A8C8(a1, (SEL *)&selRef_viewDidDisappear_);
}

double sub_10000A8C8(char a1, SEL *a2)
{
  char *v2;
  char *v4;
  uint64_t v6;
  double result;
  objc_super v8;

  v4 = v2;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for MusicMessagesSharingViewController(0);
  objc_msgSendSuper2(&v8, *a2, a1 & 1);
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack];
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack] = 0;
  swift_release(v6);
  if (qword_1004B6E08 != -1)
    swift_once(&qword_1004B6E08, sub_100007EF4);
  result = sub_10000817C();
  if (v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] == 1)
  {
    v4[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] = 0;
    return sub_10000BC60();
  }
  return result;
}

void sub_10000A9C8(uint64_t a1, char *a2)
{
  void *v2;
  id v4;
  id v5;

  v2 = *(void **)&a2[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout];
  if (v2)
  {
    objc_msgSend(v2, "invalidateLayout");
    v4 = objc_msgSend(a2, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10000AA40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_10000ACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  unsigned __int8 *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
  if (!((unint64_t)v6 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_26:
    v34 = type metadata accessor for LaunchMusicCellView();
    v35 = static UICollectionReusableView.reuseIdentifier.getter();
    v37 = v36;
    UICollectionView.dequeue<A>(_:forItemAt:reuseIdentifier:)(v34, a2, v35, v36, v34);
    swift_bridgeObjectRelease(v37);
    return;
  }
  if (v6 < 0)
    v32 = v6;
  else
    v32 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v33 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v6);
  if (v33 < 1)
    goto LABEL_26;
LABEL_3:
  v7 = type metadata accessor for TrackCellView();
  v8 = static UICollectionReusableView.reuseIdentifier.getter();
  v10 = v9;
  v11 = (char *)UICollectionView.dequeue<A>(_:forItemAt:reuseIdentifier:)(v7, a2, v8, v9, v7);
  v12 = swift_bridgeObjectRelease(v10);
  v13 = IndexPath.row.getter(v12);
  v14 = v13;
  v15 = *(_QWORD *)(v3 + v5);
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(_QWORD *)(v15 + 8 * v13 + 32);
      swift_retain(v16);
      goto LABEL_7;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v15);
  swift_bridgeObjectRelease(v15);
LABEL_7:
  if (*(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8))
  {
    v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
    v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
  }
  else
  {
    v17 = 0;
    v18 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_10001DB24(v17, v18);
  v19 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isExplicit);
  v20 = *(void **)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel];
  if (v19 == objc_msgSend(v20, "isHidden"))
  {
    objc_msgSend(v20, "setHidden:", v19 ^ 1u);
    objc_msgSend(v11, "setNeedsLayout");
  }
  if (*(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8))
  {
    v21 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
    v22 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
  }
  else
  {
    v21 = 0;
    v22 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_10001DCDC(v21, v22);
  v23 = (*(_BYTE *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying) & 1) == 0;
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel], "setHidden:", v23);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView], "setHidden:", v23);
  v24 = *(unsigned __int8 **)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView];
  objc_msgSend(v24, "setHidden:", v23);
  objc_msgSend(v11, "setNeedsLayout");
  v25 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isPlaying);
  v26 = v24[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped];
  v24[OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped] = v25 ^ 1;
  if (v25 == v26)
    sub_1000068CC();
  v27 = *(_QWORD *)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent];
  if (!v27)
    goto LABEL_30;
  v28 = *(uint64_t (**)(uint64_t))(v16
                                          + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
  if (v28)
  {
    v29 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser + 8);
    swift_retain(*(_QWORD *)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent]);
    v30 = sub_10000DCE8((uint64_t)v28, v29);
    v31 = (void *)v28(v30);
    sub_10000DCF8((uint64_t)v28, v29);
  }
  else
  {
    swift_retain(*(_QWORD *)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent]);
    v31 = 0;
  }
  sub_100012490(v31);
  swift_release(v27);
  swift_release(v16);
}

uint64_t sub_10000B390(char *a1, char a2)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGRect v28;
  CGRect v29;

  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v26 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks];
    else
      v26 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks]);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v4);
    if (v27 < 1)
      return 1;
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return 1;
  }
  result = (uint64_t)objc_msgSend(a1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v6 = (void *)result;
  objc_msgSend((id)result, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v28.origin.x = v8;
  v28.origin.y = v10;
  v28.size.width = v12;
  v28.size.height = v14;
  if (CGRectGetWidth(v28) < 736.0)
  {
    result = (uint64_t)objc_msgSend(a1, "view");
    if (result)
    {
      v15 = (void *)result;
      objc_msgSend((id)result, "bounds");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      v29.origin.x = v17;
      v29.origin.y = v19;
      v29.size.width = v21;
      v29.size.height = v23;
      if (CGRectGetWidth(v29) > 320.0)
      {
        v24 = (a2 & 1) == 0;
        v25 = 1;
        goto LABEL_9;
      }
      return 1;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  v24 = (a2 & 1) == 0;
  v25 = 2;
LABEL_9:
  if (v24)
    return v25 + 1;
  else
    return v25;
}

char *sub_10000B6D4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  objc_super v15;
  char v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  v5 = (char *)Strong;
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack);
    swift_retain(v6);

    if (v6)
    {
      v7 = (objc_class *)type metadata accessor for TrackPreviewViewController();
      v8 = (char *)objc_allocWithZone(v7);
      *(_QWORD *)&v8[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__cellView] = 0;
      *(_QWORD *)&v8[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__sharableTrack] = 0;
      v15.receiver = v8;
      v15.super_class = v7;
      swift_retain(v6);
      v9 = (char *)objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
      v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__sharableTrack];
      *(_QWORD *)&v9[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__sharableTrack] = v6;
      swift_release(v10);
      v5 = v9;
      objc_msgSend(a2, "frame");
      v12 = v11 * 1.6;
      objc_msgSend(a2, "frame");
      objc_msgSend(v5, "setPreferredContentSize:", v12, v13);

      swift_release(v6);
    }
    else
    {
      return 0;
    }
  }
  return v5;
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

void sub_10000B890(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(void))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain(a5);
  v12 = a1;
  a6();

  swift_unknownObjectRelease(a5);
}

void sub_10000B90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[12];

  v7[0] = &unk_1003C63B8;
  v7[1] = &unk_1003C63D0;
  v7[2] = &unk_1003C63D0;
  sub_10000BEA0(319, a2, a3);
  if (v5 <= 0x3F)
  {
    v6 = *(_QWORD *)(v4 - 8) + 64;
    v7[5] = &unk_1003C63D0;
    v7[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[3] = v6;
    v7[4] = &unk_1003C63D0;
    v7[7] = &unk_1003C63D0;
    v7[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v7[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v7[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v7[11] = &unk_1003C63E8;
    swift_updateClassMetadata2(a1, 256, 12, v7, a1 + 80);
  }
}

uint64_t sub_10000B9CC@<X0>(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void *v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v7 = sub_1000057B4(&qword_1004B7410);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v36 - v11;
  v15 = type metadata accessor for IndexPath(0, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView;
  v20 = *(void **)(v3 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
LABEL_7:
    sub_10000FE2C((uint64_t)v12, &qword_1004B7410);
    goto LABEL_14;
  }
  v21 = objc_msgSend(v20, "indexPathForItemAtPoint:", a2, a3);
  if (v21)
  {
    v22 = v21;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, v23, 1, v15);
  sub_10000FD10((uint64_t)v10, (uint64_t)v12, &qword_1004B7410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
    goto LABEL_7;
  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v18, v12, v15);
  v25 = *(void **)(v3 + v19);
  if (v25)
  {
    v26 = v25;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v28 = objc_msgSend(v26, "cellForItemAtIndexPath:", isa);

    if (v28)
    {
      v29 = type metadata accessor for TrackCellView();
      v30 = swift_dynamicCastClass(v28, v29);
      if (v30)
      {
        v31 = v30;
        v32 = sub_1000057B4(&qword_1004B7418);
        v33 = *(int *)(v32 + 48);
        v24(a1, v18, v15);
        *(_QWORD *)&a1[v33] = v31;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a1, 0, 1, v32);
      }

    }
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_14:
  v35 = sub_1000057B4(&qword_1004B7418);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
}

double sub_10000BC60()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack])
  {
    v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] = 1;
  }
  else
  {
    v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier];
    v11 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserver]
                   + 16);
    v19 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__mediaLibraryQueue];
    v12 = (_QWORD *)swift_allocObject(&unk_100464E80, 40, 7);
    v12[2] = v11;
    v12[3] = v10;
    v12[4] = v0;
    aBlock[4] = sub_10000DD3C;
    v22 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011FD0;
    aBlock[3] = &unk_100464E98;
    v13 = _Block_copy(aBlock);
    v18 = v11;
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter(v0);
    v20 = _swiftEmptyArrayStorage;
    v14 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v16 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v1, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

void sub_10000BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1004B7358)
  {
    v4 = type metadata accessor for IndexPath(255, a2, a3);
    v5 = type metadata accessor for Optional(a1, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1004B7358);
  }
}

void sub_10000BEF4(void *a1, uint64_t a2, void *a3)
{
  unint64_t v5;
  unint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  float v33;
  uint64_t v34;
  id (**v35)();
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id (**v40)();
  uint64_t v41;
  uint64_t v42;
  id v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t inited;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  Swift::Int v78;
  Class isa;
  id v80;
  void *v81;
  void *v82;
  void *v83;
  _QWORD *v84;
  char v85;
  char v86;
  void *v87;
  void *v88;
  void *v89;
  _QWORD *v90;
  char v91;
  char v92;
  void *v93;
  void *v94;
  void *v95;
  char v96;
  char v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t *v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  id v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  id v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  void *v162;
  void *v163;
  unsigned __int8 v164;
  uint64_t v165;
  id (**v166)();
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  id (**v171)();
  uint64_t v172;
  uint64_t v173;
  id v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  _QWORD *v192;
  unint64_t v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v198;
  uint64_t *v199;
  unsigned int v200;
  unint64_t v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208[192];
  uint64_t v209;

  v5 = swift_allocObject(&unk_100464ED0, 24, 7);
  v6 = sub_1000261F4(_swiftEmptyArrayStorage);
  *(_QWORD *)(v5 + 16) = v6;
  v199 = (uint64_t *)(v5 + 16);
  v209 = (uint64_t)_swiftEmptyArrayStorage;
  if ((sub_10001D318(a1) & 1) != 0)
  {
    if (!kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier)
    {
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    v7 = sub_10001D7EC(kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier, a1);
    if ((v8 & 1) != 0 || (v9 = (uint64_t)v7) == 0)
    {
      if (!kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      v10 = sub_10001D7EC(kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier, a1);
      if ((v11 & 1) != 0)
      {
LABEL_102:
        __break(1u);
        return;
      }
      v9 = (uint64_t)v10;
      if (!v10)
      {
        __break(1u);
        goto LABEL_97;
      }
    }
    if (*(_QWORD *)(a2 + 16) && (v12 = sub_100027740(v9), (v13 & 1) != 0))
    {
      v14 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v12);
      swift_retain(v14);
    }
    else
    {
      v15 = type metadata accessor for SharableTrack(0);
      swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
      v14 = sub_1000242E8(v9);
    }
    v16 = sub_10001D3D8(a1);
    v17 = (_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
    v18 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
    *v17 = v16;
    v17[1] = v19;
    swift_bridgeObjectRelease(v18);
    v20 = sub_10001D3E4(a1);
    v21 = (_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
    v22 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
    *v21 = v20;
    v21[1] = v23;
    swift_bridgeObjectRelease(v22);
    v24 = sub_10001D3F0(a1);
    v25 = (_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album);
    v26 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album + 8);
    *v25 = v24;
    v25[1] = v27;
    swift_bridgeObjectRelease(v26);
    if (!kMRMediaRemoteNowPlayingInfoIsExplicitTrack)
      goto LABEL_99;
    *(_BYTE *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isExplicit) = sub_10001D65C(kMRMediaRemoteNowPlayingInfoIsExplicitTrack, a1) & 1;
    if (!kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier)
    {
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    v28 = sub_10001D7EC(kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier, a1);
    if (v29 & 1 | (v28 == 0))
      v30 = 0;
    else
      v30 = v28;
    v31 = v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreIdentifier;
    *(_QWORD *)v31 = v30;
    *(_BYTE *)(v31 + 8) = v29 & 1 | (v28 == 0);
    *(_BYTE *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying) = 1;
    v32 = (unint64_t)sub_10001D588(a1);
    v33 = *(float *)&v32;
    if ((v32 & (unint64_t)&_mh_execute_header) != 0)
      v33 = 0.0;
    *(_BYTE *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isPlaying) = v33 > 0.0;
    sub_100024428();
    v34 = swift_allocObject(&unk_100464FC0, 24, 7);
    *(_QWORD *)(v34 + 16) = a1;
    v35 = (id (**)())(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
    v36 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
    v37 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser + 8);
    *v35 = sub_10000FC04;
    v35[1] = (id (*)())v34;
    v38 = a1;
    sub_10000DCF8(v36, v37);
    v39 = swift_allocObject(&unk_100464FE8, 24, 7);
    *(_QWORD *)(v39 + 16) = v38;
    v40 = (id (**)())(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
    v41 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
    v42 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8);
    *v40 = sub_10000FC0C;
    v40[1] = (id (*)())v39;
    v43 = v38;
    sub_10000DCF8(v41, v42);
    swift_retain(v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v206 = v6;
    *v199 = 0x8000000000000000;
    sub_10002899C(v14, v9, isUniquelyReferenced_nonNull_native);
    *v199 = v206;
    swift_bridgeObjectRelease(0x8000000000000000);
    v45 = swift_retain(v14);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
    v47 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v46 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v47 >= v46 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
    v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v14);
    specialized Array._endMutation()(v48);
    swift_release(v14);
  }
  v49 = objc_msgSend((id)objc_opt_self(MPMediaQuery), "playbackHistoryPlaylist");
  if (!v49)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, "items");
  v52 = sub_10000598C(0, &qword_1004B73B0, MPMediaItem_ptr);
  v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

  if ((unint64_t)v53 >> 62)
    goto LABEL_91;
  v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v54)
  {
    v192 = v50;
    v193 = v5;
    v201 = v53 & 0xC000000000000001;
    v196 = v53 & 0xFFFFFFFFFFFFFF8;
    v198 = v53;
    v194 = a3;
    v195 = v53 + 32;
    a3 = &protocol witness table for AnyHashable;
    v205 = MPMediaItemPropertyStoreID;
    v204 = MPMediaItemPropertySubscriptionStoreItemID;
    v203 = MPMediaItemPropertyStorePlaylistID;
    while (!__OFSUB__(v54--, 1))
    {
      if (v201)
      {
        v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v198);
      }
      else
      {
        if ((v54 & 0x8000000000000000) != 0)
          goto LABEL_89;
        if (v54 >= *(_QWORD *)(v196 + 16))
          goto LABEL_90;
        v70 = *(id *)(v195 + 8 * v54);
      }
      v71 = v70;
      v72 = sub_1000057B4(&qword_1004B73B8);
      inited = swift_initStackObject(v72, v208);
      *(_OWORD *)(inited + 16) = xmmword_1003C6320;
      v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v205);
      v207 = v74;
      AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v206, &type metadata for String, &protocol witness table for String);
      v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v204);
      v207 = v75;
      AnyHashable.init<A>(_:)((_QWORD *)(inited + 72), &v206, &type metadata for String, &protocol witness table for String);
      v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v203);
      v207 = v76;
      AnyHashable.init<A>(_:)((_QWORD *)(inited + 112), &v206, &type metadata for String, &protocol witness table for String);
      v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPMediaItemPropertyIsExplicit);
      v207 = v77;
      AnyHashable.init<A>(_:)((_QWORD *)(inited + 152), &v206, &type metadata for String, &protocol witness table for String);
      v78 = sub_10000F910(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 4, &type metadata for AnyHashable);
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v78);
      v80 = objc_msgSend(v71, "valuesForProperties:", isa);

      if (v80)
      {
        v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v80, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {
        v5 = sub_100023F6C((uint64_t)_swiftEmptyArrayStorage);
      }
      v81 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v205);
      v83 = v82;
      v84 = sub_10000D010(v81, v82, v5);
      v86 = v85;
      swift_bridgeObjectRelease(v83);
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v204);
      v89 = v88;
      v90 = sub_10000D010(v87, v88, v5);
      v92 = v91;
      swift_bridgeObjectRelease(v89);
      v93 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v203);
      v95 = v94;
      v202 = sub_10000D010(v93, v94, v5);
      v97 = v96;
      swift_bridgeObjectRelease(v95);
      if ((v92 & 1) != 0)
        v50 = v84;
      else
        v50 = v90;
      if ((v92 & 1) != 0 && (v86 & 1) != 0)
      {
        v98 = swift_bridgeObjectRelease(v5);
        v99 = static os_log_type_t.default.getter(v98);
        v100 = sub_1000057B4(&qword_1004B73C0);
        v101 = swift_allocObject(v100, 312, 7);
        *(_OWORD *)(v101 + 16) = xmmword_1003C6330;
        v102 = objc_msgSend(v71, "title");
        v200 = v99;
        if (v102)
        {
          v103 = v102;
          v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
          v106 = v105;

        }
        else
        {
          v104 = 0;
          v106 = 0;
        }
        v117 = Optional<A>.description.getter(v104, v106);
        v119 = v118;
        swift_bridgeObjectRelease(v106);
        *(_QWORD *)(v101 + 56) = &type metadata for String;
        v5 = sub_10000FA74();
        *(_QWORD *)(v101 + 64) = v5;
        *(_QWORD *)(v101 + 32) = v117;
        *(_QWORD *)(v101 + 40) = v119;
        v120 = objc_msgSend(v71, "artist");
        if (v120)
        {
          v121 = v120;
          v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
          v124 = v123;

        }
        else
        {
          v122 = 0;
          v124 = 0;
        }
        v125 = Optional<A>.description.getter(v122, v124);
        v127 = v126;
        swift_bridgeObjectRelease(v124);
        *(_QWORD *)(v101 + 96) = &type metadata for String;
        *(_QWORD *)(v101 + 104) = v5;
        *(_QWORD *)(v101 + 72) = v125;
        *(_QWORD *)(v101 + 80) = v127;
        v128 = objc_msgSend(v71, "albumTitle");
        if (v128)
        {
          v129 = v128;
          v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
          v132 = v131;

        }
        else
        {
          v130 = 0;
          v132 = 0;
        }
        v133 = Optional<A>.description.getter(v130, v132);
        v135 = v134;
        swift_bridgeObjectRelease(v132);
        *(_QWORD *)(v101 + 136) = &type metadata for String;
        *(_QWORD *)(v101 + 144) = v5;
        *(_QWORD *)(v101 + 112) = v133;
        *(_QWORD *)(v101 + 120) = v135;
        v136 = objc_msgSend(v71, "albumArtist");
        if (v136)
        {
          v55 = v136;
          v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
          v58 = v57;

        }
        else
        {
          v56 = 0;
          v58 = 0;
        }
        v59 = Optional<A>.description.getter(v56, v58);
        v61 = v60;
        swift_bridgeObjectRelease(v58);
        v50 = &type metadata for String;
        *(_QWORD *)(v101 + 176) = &type metadata for String;
        *(_QWORD *)(v101 + 184) = v5;
        *(_QWORD *)(v101 + 152) = v59;
        *(_QWORD *)(v101 + 160) = v61;
        v206 = (uint64_t)v84;
        LOBYTE(v207) = 1;
        v62 = sub_1000057B4(&qword_1004B73D0);
        v63 = String.init<A>(describing:)(&v206, v62);
        *(_QWORD *)(v101 + 216) = &type metadata for String;
        *(_QWORD *)(v101 + 224) = v5;
        *(_QWORD *)(v101 + 192) = v63;
        *(_QWORD *)(v101 + 200) = v64;
        v206 = (uint64_t)v90;
        LOBYTE(v207) = 1;
        v65 = String.init<A>(describing:)(&v206, v62);
        *(_QWORD *)(v101 + 256) = &type metadata for String;
        *(_QWORD *)(v101 + 264) = v5;
        *(_QWORD *)(v101 + 232) = v65;
        *(_QWORD *)(v101 + 240) = v66;
        v206 = (uint64_t)v202;
        LOBYTE(v207) = v97 & 1;
        v67 = String.init<A>(describing:)(&v206, v62);
        *(_QWORD *)(v101 + 296) = &type metadata for String;
        *(_QWORD *)(v101 + 304) = v5;
        *(_QWORD *)(v101 + 272) = v67;
        *(_QWORD *)(v101 + 280) = v68;
        sub_10000598C(0, &qword_1004B73D8, OS_os_log_ptr);
        v53 = static OS_os_log.default.getter();
        os_log(_:dso:log:_:_:)(v200, &_mh_execute_header, v53, "MusicMessagesSharingViewController: skipping track without store ID Track( title: %{public}@, artist: %{public}@, albumTitle: %{public}@, albumArtist: %{public}@, id: %{public}@, subscriptionID: %{public}@, albumStoreIdentifier: %{public}@)", 240, 2, v101);

        swift_bridgeObjectRelease(v101);
        goto LABEL_28;
      }
      v53 = *v199;
      if (*(_QWORD *)(*v199 + 16))
      {
        sub_100027740((uint64_t)v50);
        if ((v107 & 1) != 0)
        {

          swift_bridgeObjectRelease(v5);
LABEL_28:
          a3 = &protocol witness table for AnyHashable;
          goto LABEL_29;
        }
      }
      if (*(_QWORD *)(a2 + 16) && (v108 = sub_100027740((uint64_t)v50), (v109 & 1) != 0))
      {
        v110 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v108);
        swift_retain(v110);
      }
      else
      {
        v111 = type metadata accessor for SharableTrack(0);
        swift_allocObject(v111, *(unsigned int *)(v111 + 48), *(unsigned __int16 *)(v111 + 52));
        v110 = sub_1000242E8((uint64_t)v50);
      }
      v112 = objc_msgSend(v71, "title");
      if (v112)
      {
        v113 = v112;
        v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
        v116 = v115;

      }
      else
      {
        v114 = 0;
        v116 = 0;
      }
      v137 = (uint64_t *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
      v138 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
      *v137 = v114;
      v137[1] = v116;
      swift_bridgeObjectRelease(v138);
      v139 = objc_msgSend(v71, "artist");
      if (v139)
      {
        v140 = v139;
        v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v139);
        v143 = v142;

      }
      else
      {
        v141 = 0;
        v143 = 0;
      }
      v144 = (uint64_t *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
      v145 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
      *v144 = v141;
      v144[1] = v143;
      swift_bridgeObjectRelease(v145);
      v146 = objc_msgSend(v71, "albumTitle");
      if (v146)
      {
        v147 = v146;
        v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v146);
        v150 = v149;

      }
      else
      {
        v148 = 0;
        v150 = 0;
      }
      v151 = (uint64_t *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album);
      v152 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album + 8);
      *v151 = v148;
      v151[1] = v150;
      swift_bridgeObjectRelease(v152);
      v153 = objc_msgSend(v71, "albumArtist");
      if (v153)
      {
        v154 = v153;
        v155 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153);
        v157 = v156;

      }
      else
      {
        v155 = 0;
        v157 = 0;
      }
      a3 = &protocol witness table for AnyHashable;
      v158 = (uint64_t *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumArtist);
      v159 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumArtist + 8);
      *v158 = v155;
      v158[1] = v157;
      swift_bridgeObjectRelease(v159);
      v160 = v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreIdentifier;
      *(_QWORD *)v160 = v202;
      *(_BYTE *)(v160 + 8) = v97 & 1;
      v161 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(MPMediaItemPropertyIsExplicit);
      v163 = v162;
      v164 = sub_10000D11C(v161, v162, v5);
      swift_bridgeObjectRelease(v163);
      swift_bridgeObjectRelease(v5);
      *(_BYTE *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isExplicit) = v164 & 1;
      sub_100024428();
      *(_BYTE *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying) = 0;
      *(_BYTE *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isPlaying) = 0;
      v165 = swift_allocObject(&unk_100464F70, 24, 7);
      *(_QWORD *)(v165 + 16) = v71;
      v166 = (id (**)())(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
      v167 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
      v168 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser + 8);
      *v166 = sub_10000FB48;
      v166[1] = (id (*)())v165;
      v169 = v71;
      sub_10000DCF8(v167, v168);
      v170 = swift_allocObject(&unk_100464F98, 24, 7);
      *(_QWORD *)(v170 + 16) = v169;
      v171 = (id (**)())(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
      v172 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
      v173 = *(_QWORD *)(v110 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8);
      *v171 = sub_10000FBA4;
      v171[1] = (id (*)())v170;
      v174 = v169;
      sub_10000DCF8(v172, v173);
      swift_retain(v110);
      v175 = *v199;
      v176 = swift_isUniquelyReferenced_nonNull_native(*v199);
      v206 = v175;
      *v199 = 0x8000000000000000;
      sub_10002899C(v110, (uint64_t)v50, v176);
      *v199 = v206;
      swift_bridgeObjectRelease(0x8000000000000000);
      v177 = swift_retain(v110);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v177);
      v179 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v178 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v179 >= v178 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v178 > 1, v179 + 1, 1);
      v180 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v179, v110);
      specialized Array._endMutation()(v180);
      v53 = v209;
      if ((unint64_t)v209 >> 62)
      {
        if (v209 < 0)
          v182 = v209;
        else
          v182 = v209 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v181 = _CocoaArrayWrapper.endIndex.getter(v182);

        swift_release(v110);
        swift_bridgeObjectRelease(v53);
      }
      else
      {
        v181 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x10);

        swift_release(v110);
      }
      if (v181 >= 30)
      {
LABEL_84:
        swift_bridgeObjectRelease(v198);
        v5 = v193;
        a3 = v194;
        v50 = v192;
        goto LABEL_85;
      }
LABEL_29:
      if (!v54)
        goto LABEL_84;
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    if (v53 < 0)
      v191 = v53;
    else
      v191 = v53 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v54 = _CocoaArrayWrapper.endIndex.getter(v191);
    swift_bridgeObjectRelease(v53);
  }
  swift_bridgeObjectRelease(v53);
LABEL_85:
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v183 = swift_allocObject(&unk_100464EF8, 24, 7);
  swift_unknownObjectWeakInit(v183 + 16, a3);
  v184 = v209;
  v185 = (_QWORD *)swift_allocObject(&unk_100464F20, 40, 7);
  v185[2] = v183;
  v185[3] = v184;
  v185[4] = v5;
  swift_retain(v183);
  swift_retain(v5);
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10000FB10, (uint64_t)v185);
  swift_release(v183);
  swift_release(v185);
  if (qword_1004B6EC0 != -1)
    swift_once(&qword_1004B6EC0, sub_10001FEF0);
  swift_beginAccess(v199, &v206, 0, 0);
  v186 = *(_QWORD *)(v5 + 16);
  v187 = swift_bridgeObjectRetain();
  v188 = sub_10000DE34(v187);
  swift_bridgeObjectRelease(v186);
  v189 = swift_allocObject(&unk_100464F48, 24, 7);
  *(_QWORD *)(v189 + 16) = a3;
  v190 = a3;
  sub_10001FFC4((uint64_t)v188, (void (*)(uint64_t))sub_10000FB40, v189);
  swift_release(v5);

  swift_release(v188);
  swift_release(v189);
}

id sub_10000CE34(void *a1)
{
  double v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  Class isa;
  id v8;
  id v9;

  v1 = *(double *)&qword_1004B81E0;
  v2 = sub_10001D4BC(a1);
  if (v3 >> 60 == 15)
    return 0;
  v4 = (uint64_t)v2;
  v5 = v3;
  v6 = objc_allocWithZone((Class)UIImage);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithData:", isa);

  if (!v8)
  {
    sub_10000FC14(v4, v5);
    return 0;
  }
  v9 = objc_msgSend((id)objc_opt_self(MPArtworkCatalog), "staticArtworkCatalogWithImage:", v8);
  objc_msgSend(v9, "setFittingSize:", v1, v1);

  sub_10000FC14(v4, v5);
  return v9;
}

id sub_10000CF20(void *a1)
{
  double v1;
  double v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  Class isa;
  id v9;
  id v10;

  v1 = *(double *)&qword_1004B7190;
  v2 = unk_1004B7198;
  v3 = sub_10001D4BC(a1);
  if (v4 >> 60 == 15)
    return 0;
  v5 = (uint64_t)v3;
  v6 = v4;
  v7 = objc_allocWithZone((Class)UIImage);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "initWithData:", isa);

  if (!v9)
  {
    sub_10000FC14(v5, v6);
    return 0;
  }
  v10 = objc_msgSend((id)objc_opt_self(MPArtworkCatalog), "staticArtworkCatalogWithImage:", v9);
  objc_msgSend(v10, "setFittingSize:", v1, v2);

  sub_10000FC14(v5, v6);
  return v10;
}

id sub_10000D010(void *a1, void *a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  id v8;
  id v10[2];
  _QWORD v11[5];
  __int128 v12;
  __int128 v13;

  v10[0] = a1;
  v10[1] = a2;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v11, v10, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v4 = sub_100027770((uint64_t)v11), (v5 & 1) != 0))
  {
    sub_10000990C(*(_QWORD *)(a3 + 56) + 32 * v4, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_10000FC6C((uint64_t)v11);
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_10000FE2C((uint64_t)&v12, &qword_1004B7068);
    return 0;
  }
  v6 = sub_10000598C(0, (unint64_t *)&qword_1004B73F0, NSNumber_ptr);
  if ((swift_dynamicCast(v10, &v12, (char *)&type metadata for Any + 8, v6, 6) & 1) == 0)
    return 0;
  v7 = v10[0];
  v8 = objc_msgSend(v10[0], "longLongValue");

  if (!v8)
    return 0;
  return v8;
}

id sub_10000D11C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  id v8;
  id v10[2];
  _QWORD v11[5];
  __int128 v12;
  __int128 v13;

  v10[0] = a1;
  v10[1] = a2;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v11, v10, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v4 = sub_100027770((uint64_t)v11), (v5 & 1) != 0))
  {
    sub_10000990C(*(_QWORD *)(a3 + 56) + 32 * v4, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_10000FC6C((uint64_t)v11);
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_10000FE2C((uint64_t)&v12, &qword_1004B7068);
    return 0;
  }
  v6 = sub_10000598C(0, (unint64_t *)&qword_1004B73F0, NSNumber_ptr);
  if ((swift_dynamicCast(v10, &v12, (char *)&type metadata for Any + 8, v6, 6) & 1) == 0)
    return 0;
  v7 = v10[0];
  v8 = objc_msgSend(v10[0], "BOOLValue");

  return v8;
}

void sub_10000D21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks) = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v8);
    swift_beginAccess(a3 + 16, &v13, 0, 0);
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier];
    *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier] = v9;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRelease(v10);
    if (objc_msgSend(v7, "isViewLoaded"))
    {
      v11 = *(void **)&v7[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView];
      if (!v11)
      {
        __break(1u);
        return;
      }
      v12 = v11;
      objc_msgSend(v12, "reloadData");

    }
  }
}

double sub_10000D318(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  double result;

  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v4 = swift_allocObject(&unk_100465010, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  v5 = a2;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10000FCAC, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_10000D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _BYTE v42[24];

  v4 = sub_1000057B4(&qword_1004B73F8);
  v5 = __chkstk_darwin(v4);
  v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v38 = (char *)&v37 - v7;
  v8 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v12 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier;
  v13 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  v41 = a2;
  v39 = v12;
  v15 = (uint64_t)v40;
  while (1)
  {
    if (v11)
    {
      v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v24 = v23 | (v14 << 6);
      goto LABEL_22;
    }
    v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v25 >= v13)
      goto LABEL_27;
    v26 = *(_QWORD *)(v8 + 8 * v25);
    ++v14;
    if (!v26)
    {
      v14 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_27;
      v26 = *(_QWORD *)(v8 + 8 * v14);
      if (!v26)
      {
        v14 = v25 + 2;
        if (v25 + 2 >= v13)
          goto LABEL_27;
        v26 = *(_QWORD *)(v8 + 8 * v14);
        if (!v26)
          break;
      }
    }
LABEL_21:
    v11 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_22:
    v28 = *(_QWORD *)(a1 + 56) + 16 * v24;
    if ((*(_BYTE *)(v28 + 8) & 1) == 0)
    {
      v29 = *(_QWORD *)(a2 + v12);
      if (*(_QWORD *)(v29 + 16))
      {
        v30 = *(void **)v28;
        v31 = sub_100027740(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v24));
        if ((v32 & 1) != 0)
        {
          v33 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v31);
          sub_10000FCB4(v30, 0);
          sub_10000FCB4(v30, 0);
          swift_retain(v33);
          v34 = objc_msgSend(v30, "productPageURL");
          if (v34)
          {
            v35 = v34;
            v17 = (uint64_t)v38;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            v36 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v17, 0, 1, v36);
          }
          else
          {
            v16 = type metadata accessor for URL(0);
            v17 = (uint64_t)v38;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v38, 1, 1, v16);
          }
          sub_10000FD10(v17, v15, &qword_1004B73F8);
          v18 = v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
          swift_beginAccess(v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL, v42, 33, 0);
          sub_10000FD60(v15, v18, &qword_1004B73F8);
          swift_endAccess(v42);
          v19 = sub_1000226AC();
          v20 = *(_QWORD *)(v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews);
          *(_QWORD *)(v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews) = v19;
          swift_bridgeObjectRelease(v20);
          v21 = sub_100022F4C();
          sub_10000FCC0(v30, 0);
          sub_10000FCC0(v30, 0);
          v22 = *(_QWORD *)(v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_offerTypes);
          *(_QWORD *)(v33 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_offerTypes) = v21;
          swift_release(v33);
          swift_bridgeObjectRelease(v22);
          a2 = v41;
          v12 = v39;
        }
      }
    }
  }
  v27 = v25 + 3;
  if (v27 >= v13)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v26 = *(_QWORD *)(v8 + 8 * v27);
  if (v26)
  {
    v14 = v27;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v14 >= v13)
      goto LABEL_27;
    v26 = *(_QWORD *)(v8 + 8 * v14);
    ++v27;
    if (v26)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
}

void sub_10000D760()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  int v12;
  void *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char v20;
  void *v21;
  char *v22;
  _BOOL8 v23;
  char *v24;
  int v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  objc_super v37;

  v1 = v0;
  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for TrackPreviewViewController();
  objc_msgSendSuper2(&v37, "viewDidLoad");
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TrackCellView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__cellView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__cellView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__cellView] = v2;

  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__sharableTrack];
  if (!v6)
  {
LABEL_23:
    v35 = objc_msgSend(v1, "view", v5);
    if (v35)
    {
      if (*(_QWORD *)&v1[v3])
      {
        v36 = v35;
        objc_msgSend(v35, "addSubview:");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  v7 = *(void **)&v0[v3];
  if (!v7)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (*(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8))
  {
    v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
    v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
  }
  else
  {
    v8 = 0;
    v9 = 0xE000000000000000;
  }
  swift_retain(v6);
  v10 = v7;
  swift_bridgeObjectRetain();
  sub_10001DB24(v8, v9);

  v11 = *(char **)&v0[v3];
  if (!v11)
    goto LABEL_29;
  v12 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isExplicit);
  v13 = *(void **)&v11[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel];
  v14 = v11;
  if (v12 == objc_msgSend(v13, "isHidden"))
  {
    objc_msgSend(v13, "setHidden:", v12 ^ 1u);
    objc_msgSend(v14, "setNeedsLayout");
  }

  v15 = *(void **)&v1[v3];
  if (!v15)
    goto LABEL_30;
  if (*(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8))
  {
    v16 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
    v17 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
  }
  else
  {
    v16 = 0;
    v17 = 0xE000000000000000;
  }
  v18 = v15;
  swift_bridgeObjectRetain();
  sub_10001DCDC(v16, v17);

  v19 = *(char **)&v1[v3];
  if (!v19)
    goto LABEL_31;
  v20 = *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying);
  v21 = *(void **)&v19[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel];
  v22 = v19;
  v23 = (v20 & 1) == 0;
  objc_msgSend(v21, "setHidden:", v23);
  objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView], "setHidden:", v23);
  objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView], "setHidden:", v23);
  objc_msgSend(v22, "setNeedsLayout");

  v24 = *(char **)&v1[v3];
  if (!v24)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v25 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isPlaying);
  v26 = *(_QWORD *)&v24[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView];
  v27 = *(unsigned __int8 *)(v26 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped);
  *(_BYTE *)(v26 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped) = v25 ^ 1;
  if (v25 == v27)
  {
    v28 = v24;
    sub_1000068CC();

  }
  v29 = *(_QWORD *)&v1[v3];
  if (!v29)
    goto LABEL_33;
  v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent);
  if (v30)
  {
    v31 = *(uint64_t (**)(uint64_t))(v6
                                            + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
    if (v31)
    {
      v32 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser + 8);
      swift_retain(v30);
      v33 = sub_10000DCE8((uint64_t)v31, v32);
      v34 = (void *)v31(v33);
      sub_10000DCF8((uint64_t)v31, v32);
    }
    else
    {
      swift_retain(v30);
      v34 = 0;
    }
    sub_100012490(v34);
    swift_release(v6);
    *(_QWORD *)&v5 = swift_release(v30).n128_u64[0];
    goto LABEL_23;
  }
LABEL_34:
  __break(1u);
}

void sub_10000DB28()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for TrackPreviewViewController();
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController__cellView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10000DC5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrackPreviewViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrackPreviewViewController()
{
  return objc_opt_self(_TtC16MusicMessagesAppP33_578446D9A918AE2275B472A9158C63A626TrackPreviewViewController);
}

uint64_t sub_10000DCE8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10000DCF8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_10000DD08()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10000DD3C()
{
  uint64_t v0;

  sub_10000BEF4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10000DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000DD58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10000DD60()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10000DD84(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id sub_10000DDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10000598C(0, &qword_1004B7438, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v7 = (void *)v4(v6);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v7;
}

_QWORD *sub_10000DE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1000057B4(&qword_1004B7400);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_10000DFEC(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain();
  sub_10000FCCC(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_10000DF18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain();
  v5 = sub_1000276F4(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100028AD4();
    v8 = v12;
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_100010E2C(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

_QWORD *sub_10000DFEC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_10000E180()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *ObjCClassFromMetadata;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__contextMenuInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack] = 0;
  v12 = &v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect];
  v15 = type metadata accessor for IndexPath(0, v13, v14);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionFlowLayout] = 0;
  v30 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__mediaLibraryQueue;
  v29[1] = sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  type metadata accessor for MusicMessagesSharingViewController(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v17 = NSStringFromClass(ObjCClassFromMetadata);
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  static DispatchQoS.userInitiated.getter(v21);
  v33 = _swiftEmptyArrayStorage;
  v22 = sub_100004D8C((unint64_t *)&unk_1004B7450, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = sub_1000057B4(&qword_1004B7178);
  v24 = sub_100009890((unint64_t *)&unk_1004B7460, &qword_1004B7178);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v23, v24, v5, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v18, v20, v10, v7, v4, 0);
  *(_QWORD *)&v1[v30] = v25;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserverToken] = 0;
  v26 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__nowPlayingObserver;
  if (qword_1004B6EE0 != -1)
    swift_once(&qword_1004B6EE0, sub_100026788);
  v27 = qword_1004F45F0;
  *(_QWORD *)&v1[v26] = qword_1004F45F0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks] = _swiftEmptyArrayStorage;
  v28 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracksByStoreIdentifier;
  *(_QWORD *)&v1[v28] = sub_1000261F4(_swiftEmptyArrayStorage);
  v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload] = 0;
  swift_retain(v27);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003A4070, "MusicMessagesApp/MusicMessagesSharingViewController.swift", 57, 2, 72, 0);
  __break(1u);
}

uint64_t sub_10000E4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;

  v3 = sub_1000057B4(&qword_1004B7440);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SharingCollectionViewHeader();
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v9 = v8;
  v10 = static UICollectionReusableView.reuseIdentifier.getter();
  v12 = v11;
  v13 = UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v6, v7, v9, a2, v10, v11, v6);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v12);
  if (qword_1004B6E18 != -1)
    swift_once(&qword_1004B6E18, sub_1000099C0);
  v21 = xmmword_1004B7180;
  v14 = swift_bridgeObjectRetain();
  static Locale.current.getter(v14);
  v15 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 0, 1, v15);
  v16 = sub_10000FDE8();
  v17 = StringProtocol.uppercased(with:)(v5, &type metadata for String, v16);
  v19 = v18;
  sub_10000FE2C((uint64_t)v5, &qword_1004B7440);
  swift_bridgeObjectRelease(*((_QWORD *)&v21 + 1));
  sub_100021CAC(v17, v19);
  return v13;
}

BOOL sub_10000E638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = sub_1000057B4(&qword_1004B7410);
  v4 = __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v17[-v7];
  v11 = type metadata accessor for IndexPath(0, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = v1
      + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect, v18, 0, 0);
  sub_10000FEB4(v15, (uint64_t)v8, &qword_1004B7410);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_10000FE2C((uint64_t)v8, &qword_1004B7410);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v8, v11);
    if ((static IndexPath.== infix(_:_:)(v14, a1) & 1) != 0)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
      swift_beginAccess(v15, v17, 33, 0);
      sub_10000FD60((uint64_t)v6, v15, &qword_1004B7410);
      swift_endAccess(v17);
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
      return 0;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
  return *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack) == 0;
}

void sub_10000E814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;

  v2 = v1;
  v3 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_15:
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate);
    if (!Strong)
      return;
    v16 = Strong;
    v19 = (id)MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
    if (v19)
    {
      v17 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
      if (v17)
      {
        v18 = v17;
        objc_msgSend(v17, "openApplicationWithBundleID:", v19);
        swift_unknownObjectRelease(v16);

        return;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:

    __break(1u);
    return;
  }
  if (v4 < 0)
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
  else
    v13 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter(v13);
  a1 = swift_bridgeObjectRelease(v4);
  if (v14 < 1)
    goto LABEL_15;
LABEL_3:
  v5 = IndexPath.row.getter(a1);
  v6 = v5;
  v7 = *(_QWORD *)(v2 + v3);
  if ((v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v7);
    swift_bridgeObjectRelease(v7);
    goto LABEL_7;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v5 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = *(_QWORD *)(v7 + 8 * v5 + 32);
  swift_retain(v8);
LABEL_7:
  v9 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate);
  if (v9)
  {
    v10 = v9;
    v11 = swift_allocObject(&unk_1004650D8, 32, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v8;
    swift_unknownObjectRetain(v10);
    swift_retain(v8);
    sub_100024950((uint64_t)sub_10000FF58, v11);
    swift_release(v8);
    swift_unknownObjectRelease(v10);
    v12 = v11;
  }
  else
  {
    v12 = v8;
  }
  swift_release(v12);
}

double sub_10000EA20(uint64_t a1)
{
  char *v1;
  double Width;
  double v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  char v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  CGRect v22;

  v4 = *(double *)&qword_1004B8100;
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = objc_msgSend(v5, "preferredContentSizeCategory");

  v7 = UIContentSizeCategory.isAccessibilityCategory.getter(v6);
  v8 = sub_10000B390(v1, v7 & 1);
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v8;
  objc_msgSend((id)a1, "bounds");
  Width = CGRectGetWidth(v22);
  v10 = objc_msgSend(v1, "traitCollection");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");

  v12 = (void *)static UIContentSizeCategory.default.getter();
  v13 = static UIContentSizeCategory.> infix(_:_:)(v11, v12);

  if ((v13 & 1) != 0)
  {
    v14 = objc_msgSend(v1, "traitCollection");
    v15 = objc_msgSend(v14, "preferredContentSizeCategory");

    LOBYTE(v14) = UIContentSizeCategory.isAccessibilityCategory.getter(v15);
    if ((v14 & 1) == 0)
    {
LABEL_7:
      v18 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
      objc_msgSend(v18, "scaledValueForValue:", 73.0);
LABEL_14:

      return CGSize.nonNegative()((Width - (v4 + v4) + (double)v9 * -10.0) / (double)v7);
    }
    a1 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks];
    if (!((unint64_t)a1 >> 62))
    {
      if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
        goto LABEL_13;
      goto LABEL_6;
    }
LABEL_9:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
    if (v20 > 0)
      goto LABEL_13;
LABEL_6:
    v16 = objc_msgSend(v1, "traitCollection");
    v17 = objc_msgSend(v16, "horizontalSizeClass");

    if (v17 == (id)1)
      goto LABEL_7;
LABEL_13:
    v18 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v18, "scaledValueForValue:", 55.0);
    goto LABEL_14;
  }
  return CGSize.nonNegative()((Width - (v4 + v4) + (double)v9 * -10.0) / (double)v7);
}

double sub_10000ECD0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  __int128 v25;
  CGRect v26;

  v2 = sub_1000057B4(&qword_1004B7440);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SharingCollectionViewHeader();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  if (qword_1004B6E18 != -1)
    swift_once(&qword_1004B6E18, sub_1000099C0);
  v25 = xmmword_1004B7180;
  v6 = swift_bridgeObjectRetain();
  static Locale.current.getter(v6);
  v7 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  v8 = sub_10000FDE8();
  v9 = StringProtocol.uppercased(with:)(v4, &type metadata for String, v8);
  v11 = v10;
  sub_10000FE2C((uint64_t)v4, &qword_1004B7440);
  swift_bridgeObjectRelease(*((_QWORD *)&v25 + 1));
  sub_100021CAC(v9, v11);
  objc_msgSend(a1, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  objc_msgSend(a1, "contentInset");
  v26.origin.x = sub_10000FE68(v13, v15, v17, v19, v20, v21);
  objc_msgSend(v5, "sizeThatFits:", CGRectGetWidth(v26), 0.0);
  v23 = v22;

  return v23;
}

id sub_10000EEA0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_1000057B4(&qword_1004B7428);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B7430);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
    else
      v22 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v9);
    if (v23 < 1)
      return 0;
  }
  else if (*(uint64_t *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return 0;
  }
  objc_msgSend(a1, "locationInView:", *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView));
  sub_10000B9CC(v5, v10, v11);
  v12 = sub_1000057B4(&qword_1004B7418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) != 1)
  {
    v16 = *(_QWORD *)&v5[*(int *)(v12 + 48)];
    v17 = *(int *)(v6 + 48);
    v18 = type metadata accessor for IndexPath(0, v13, v14);
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v5, v18);
    *(_QWORD *)&v8[v17] = v16;
    v20 = *(void **)&v8[*(int *)(v6 + 48)];
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
    v15 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v20);

    return v15;
  }
  sub_10000FE2C((uint64_t)v5, &qword_1004B7428);
  return 0;
}

id sub_10000F084(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  char *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void **aBlock;
  uint64_t v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;

  v5 = sub_1000057B4(&qword_1004B7420);
  v70 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v71 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v7);
  v72 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v73 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4(&qword_1004B7410);
  __chkstk_darwin(v11);
  v74 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004B7428);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000057B4(&qword_1004B7430);
  __chkstk_darwin(v16);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for IndexPath(0, v19, v20);
  v21 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks;
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v64 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__sharableTracks);
    else
      v64 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v65 = _CocoaArrayWrapper.endIndex.getter(v64);
    swift_bridgeObjectRelease(v25);
    if (v65 < 1)
      return 0;
LABEL_3:
    sub_10000B9CC(v15, a1, a2);
    v26 = sub_1000057B4(&qword_1004B7418);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v15, 1, v26) == 1)
    {
      sub_10000FE2C((uint64_t)v15, &qword_1004B7428);
      return 0;
    }
    v67 = v9;
    v68 = v23;
    v27 = *(_QWORD *)&v15[*(int *)(v26 + 48)];
    v28 = *(int *)(v16 + 48);
    v29 = v2;
    v30 = v21;
    v31 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v32 = v15;
    v33 = v75;
    v31(v18, v32, v75);
    *(_QWORD *)&v18[v28] = v27;
    v34 = v68;
    v35 = *(char **)&v18[*(int *)(v16 + 48)];
    v36 = ((uint64_t (*)(char *, char *, uint64_t))v31)(v68, v18, v33);
    v37 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack;
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack))
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v33);

      return 0;
    }
    v66 = v30;
    v40 = IndexPath.row.getter(v36);
    v41 = v40;
    v42 = *(_QWORD *)(v2 + v24);
    if ((v42 & 0xC000000000000001) == 0)
    {
      v43 = v66;
      v44 = v67;
      if ((v40 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v40 < *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v45 = *(_QWORD *)(v42 + 8 * v40 + 32);
        swift_retain(v45);
LABEL_13:
        v46 = *(_QWORD *)(v29 + v37);
        *(_QWORD *)(v29 + v37) = v45;
        v47 = swift_release(v46);
        v48 = (uint64_t)v74;
        (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v74, v34, v33, v47);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v33);
        v49 = v29
            + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect;
        swift_beginAccess(v29+ OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewedItemIndexToIgnoreForNextSelect, &aBlock, 33, 0);
        sub_10000FD60(v48, v49, &qword_1004B7410);
        swift_endAccess(&aBlock);
        v50 = *(_QWORD *)(v29 + v37);
        if (v50
          && (v51 = *(_QWORD *)(v50 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews),
              *(_QWORD *)(v51 + 16)))
        {
          v52 = v71;
          sub_10000FEB4(v51 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80)), v71, &qword_1004B7420);
          v53 = (uint64_t)v72;
          v43 = v73;
          v54 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 32);
          v54(v72, v52, v44);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v53, 0, 1, v44);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v53, 1, v44) != 1)
          {
            v37 = (uint64_t)v69;
            v54(v69, v53, v44);
            if ((objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel], "isHidden") & 1) == 0&& *(_BYTE *)(*(_QWORD *)&v35[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView]+ OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped) != 1)
            {
              goto LABEL_20;
            }
            if (qword_1004B6E08 == -1)
            {
LABEL_19:
              v55 = qword_1004F44D0;
              v56 = sub_100007F20(v37);
              *(_DWORD *)(v55 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer_volume) = 1065353216;
              LODWORD(v56) = 1.0;
              objc_msgSend(*(id *)(v55 + OBJC_IVAR____TtC16MusicMessagesApp18AudioPreviewPlayer__player), "setVolume:", v56);
LABEL_20:
              (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v37, v44);
LABEL_23:
              v57 = swift_allocObject(&unk_100464EF8, 24, 7);
              swift_unknownObjectWeakInit(v57 + 16, v29);
              v58 = swift_allocObject(&unk_100465060, 32, 7);
              *(_QWORD *)(v58 + 16) = v57;
              *(_QWORD *)(v58 + 24) = v35;
              v59 = (void *)objc_opt_self(UIContextMenuConfiguration);
              v80 = sub_10000FDE0;
              v81 = v58;
              aBlock = _NSConcreteStackBlock;
              v77 = 1107296256;
              v78 = sub_10000DD84;
              v79 = &unk_100465078;
              v60 = _Block_copy(&aBlock);
              v61 = v81;
              swift_retain(v57);
              v62 = v35;
              swift_retain(v58);
              swift_release(v61);
              v80 = static MPMediaLibraryFilteringOptions.none.getter;
              v81 = 0;
              aBlock = _NSConcreteStackBlock;
              v77 = 1107296256;
              v78 = sub_10000DDBC;
              v79 = &unk_1004650A0;
              v63 = _Block_copy(&aBlock);
              v38 = objc_msgSend(v59, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v60, v63, swift_release(v81).n128_f64[0]);
              swift_release(v58);
              _Block_release(v63);
              _Block_release(v60);

              (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v33);
              swift_release(v57);
              return v38;
            }
LABEL_32:
            swift_once(&qword_1004B6E08, sub_100007EF4);
            goto LABEL_19;
          }
        }
        else
        {
          v53 = (uint64_t)v72;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v72, 1, 1, v44);
        }
        sub_10000FE2C(v53, &qword_1004B73F8);
        goto LABEL_23;
      }
      __break(1u);
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    v45 = specialized _ArrayBuffer._getElementSlowPath(_:)(v41, v42);
    swift_bridgeObjectRelease(v42);
    v43 = v66;
    v44 = v67;
    goto LABEL_13;
  }
  if (*(uint64_t *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    goto LABEL_3;
  return 0;
}

double sub_10000F770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack);
  if (v3)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate);
    if (Strong)
    {
      v5 = Strong;
      v6 = swift_allocObject(&unk_100465038, 32, 7);
      *(_QWORD *)(v6 + 16) = v5;
      *(_QWORD *)(v6 + 24) = v3;
      swift_retain_n(v3, 2);
      swift_unknownObjectRetain(v5);
      sub_100024950((uint64_t)sub_10000FD58, v6);
      swift_release(v3);
      swift_unknownObjectRelease(v5);
      swift_release(v6);
    }
  }
  v7 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v7);
  if (qword_1004B6E08 != -1)
    swift_once(&qword_1004B6E08, sub_100007EF4);
  result = sub_10000817C();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload) = 0;
    return sub_10000BC60();
  }
  return result;
}

double sub_10000F888()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__activePreviewingTrack) = 0;
  swift_release(v1);
  if (qword_1004B6E08 != -1)
    swift_once(&qword_1004B6E08, sub_100007EF4);
  result = sub_10000817C();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__previewingPreventedReload) = 0;
    return sub_10000BC60();
  }
  return result;
}

Swift::Int sub_10000F910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE v20[40];
  _OWORD v21[2];
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1000057B4(&qword_1004B7408);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      sub_10000FCD4(v6 + 40 * v4, (uint64_t)v21);
      result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
      v8 = ~(-1 << *(_BYTE *)(v3 + 32));
      v9 = result & v8;
      v10 = (result & (unint64_t)v8) >> 6;
      v11 = *(_QWORD *)(v5 + 8 * v10);
      v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          sub_10000FCD4(*(_QWORD *)(v3 + 48) + 40 * v9, (uint64_t)v20);
          v13 = static AnyHashable.== infix(_:_:)(v20, v21);
          result = sub_10000FC6C((uint64_t)v20);
          if ((v13 & 1) != 0)
            break;
          v9 = (v9 + 1) & v8;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            goto LABEL_8;
        }
        sub_10000FC6C((uint64_t)v21);
      }
      else
      {
LABEL_8:
        *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
        v14 = *(_QWORD *)(v3 + 48) + 40 * v9;
        v15 = v21[0];
        v16 = v21[1];
        *(_QWORD *)(v14 + 32) = v22;
        *(_OWORD *)v14 = v15;
        *(_OWORD *)(v14 + 16) = v16;
        v17 = *(_QWORD *)(v3 + 16);
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v19;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_10000FA74()
{
  unint64_t result;

  result = qword_1004B73C8;
  if (!qword_1004B73C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1004B73C8);
  }
  return result;
}

uint64_t sub_10000FAB8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000FADC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10000FB10()
{
  uint64_t *v0;

  sub_10000D21C(v0[2], v0[3], v0[4]);
}

uint64_t sub_10000FB1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10000FB40(uint64_t a1)
{
  uint64_t v1;

  return sub_10000D318(a1, *(void **)(v1 + 16));
}

id sub_10000FB48()
{
  uint64_t v0;
  double v1;
  id v2;

  v1 = *(double *)&qword_1004B81E0;
  v2 = objc_msgSend(*(id *)(v0 + 16), "artworkCatalog");
  objc_msgSend(v2, "setFittingSize:", v1, v1);
  return v2;
}

id sub_10000FBA4()
{
  uint64_t v0;
  double v1;
  double v2;
  id v3;

  v1 = *(double *)&qword_1004B7190;
  v2 = unk_1004B7198;
  v3 = objc_msgSend(*(id *)(v0 + 16), "artworkCatalog");
  objc_msgSend(v3, "setFittingSize:", v1, v2);
  return v3;
}

id sub_10000FC04()
{
  uint64_t v0;

  return sub_10000CE34(*(void **)(v0 + 16));
}

id sub_10000FC0C()
{
  uint64_t v0;

  return sub_10000CF20(*(void **)(v0 + 16));
}

uint64_t sub_10000FC14(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10000FC28(result, a2);
  return result;
}

uint64_t sub_10000FC28(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10000FC6C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10000FCA0()
{
  return sub_10000FDB0((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10000FCAC()
{
  uint64_t v0;

  sub_10000D39C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10000FCB4(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain();
  else
    return a1;
}

void sub_10000FCC0(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

uint64_t sub_10000FCCC(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10000FCD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10000FD10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000057B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10000FD58(void *a1)
{
  uint64_t v1;

  sub_1000298B4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10000FD60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000057B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000FDA4()
{
  return sub_10000FDB0((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10000FDB0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, 32, 7);
}

char *sub_10000FDE0()
{
  uint64_t v0;

  return sub_10000B6D4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10000FDE8()
{
  unint64_t result;

  result = qword_1004B7448;
  if (!qword_1004B7448)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1004B7448);
  }
  return result;
}

uint64_t sub_10000FE2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1000057B4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_10000FE68(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_10000FE88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000FEB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000057B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_10000FEF8(uint64_t a1)
{
  uint64_t v1;

  sub_10000A9C8(a1, *(char **)(v1 + 16));
}

void sub_10000FF00(uint64_t a1)
{
  uint64_t v1;

  sub_100009E8C(a1, v1);
}

uint64_t sub_10000FF08(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

id sub_10000FF5C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = _s24LoadingStatusCoordinatorCMa();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)NSHashTable), "initWithOptions:capacity:", 5, 0);
  result = objc_msgSend(objc_allocWithZone((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 5, 0, 0);
  *(_QWORD *)(v1 + 24) = result;
  qword_1004F44E0 = v1;
  return result;
}

void sub_10000FFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t p_types;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char **v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  void (*v95)(__n128);
  __n128 v96;
  char *v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  id v111;
  _OWORD v112[2];
  _OWORD v113[2];

  objc_msgSend(*(id *)(v1 + 16), "removeObject:");
  v2 = sub_1000240AC((uint64_t)_swiftEmptyArrayStorage);
  v105 = v1;
  v3 = objc_msgSend(*(id *)(v1 + 24), "keyEnumerator");
  v4 = objc_msgSend(v3, "nextObject");
  v103 = v3;
  if (!v4)
  {
LABEL_40:
    if ((v2 & 0xC000000000000001) != 0)
    {
      if (v2 < 0)
        v43 = v2;
      else
        v43 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v44 = __CocoaDictionary.count.getter(v43);
      swift_bridgeObjectRelease(v2);
      if (v44 > 0)
      {
        v45 = __CocoaDictionary.makeIterator()(v43);
        v99 = 0;
        v46 = 0;
        v47 = 0;
        v2 = v45 | 0x8000000000000000;
LABEL_51:
        v52 = 0;
        v98 = (unint64_t)(v46 + 64) >> 6;
        v108 = _swiftEmptyArrayStorage;
        p_types = 0x1004AB000;
        v97 = (char *)&type metadata for Swift.AnyObject + 8;
        v100 = v2;
        if ((v2 & 0x8000000000000000) == 0)
          goto LABEL_55;
LABEL_73:
        v63 = (void *)__CocoaDictionary.Iterator.next()();
        if (v63)
        {
          v65 = v63;
          v66 = v64;
          v111 = v63;
          v67 = sub_10001124C();
          swift_unknownObjectRetain(v65);
          swift_dynamicCast(v112, &v111, v97, v67, 7);
          v62 = *(id *)&v112[0];
          swift_unknownObjectRelease(v65);
          v111 = v66;
          v68 = _s24LoadingStatusCoordinatorC12ObserverListCMa();
          swift_unknownObjectRetain(v66);
          swift_dynamicCast(v112, &v111, v97, v68, 7);
          v106 = *(_QWORD *)&v112[0];
          swift_unknownObjectRelease(v66);
          v53 = v52;
          v54 = v47;
          p_types = 0x1004AB000;
          while (v62)
          {
            v104 = v62;
            v109 = (uint64_t *)(v106 + 16);
            swift_beginAccess(v106 + 16, v113, 0, 0);
            v69 = *(_QWORD *)(*(_QWORD *)(v106 + 16) + 16);
            if (v69)
            {
              v101 = v54;
              v102 = v53;
              v70 = swift_bridgeObjectRetain();
              v71 = -v69;
              v72 = 24 * v69 + 16;
              v73 = v69 - 1;
              v74 = a1;
              v75 = &selRef_startWithCompletionHandler_;
              v110 = v70;
              do
              {
                if (!v71)
                {
                  __break(1u);
LABEL_100:
                  __break(1u);
LABEL_101:
                  __break(1u);
                  goto LABEL_102;
                }
                if (v73 >= *(_QWORD *)(v70 + 16))
                  goto LABEL_100;
                v80 = *(_QWORD *)(v70 + v72 - 8);
                v81 = *(_QWORD *)(v70 + v72);
                v82 = *(id *)(v70 + v72 + 8);
                objc_msgSend(v82, v75[248], v74, swift_retain(v81).n128_f64[0]);
                if (!objc_msgSend(v82, *(SEL *)(p_types + 3736)))
                {
                  swift_beginAccess(v109, v112, 33, 0);
                  p_types = *v109;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v109);
                  *v109 = p_types;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    p_types = (uint64_t)sub_1000111F4((_QWORD *)p_types);
                    *v109 = p_types;
                  }
                  v84 = *(_QWORD *)(p_types + 16);
                  if (v73 >= v84)
                    goto LABEL_101;
                  if ((uint64_t)(v71 + v84) < 0)
                    goto LABEL_107;
                  v85 = v84 - 1;
                  v86 = *(_QWORD *)(p_types + v72);
                  v87 = *(void **)(p_types + v72 + 8);
                  memmove((void *)(p_types + v72 - 8), (const void *)(p_types + v72 + 16), 24 * (v71 + v84));
                  *(_QWORD *)(p_types + 16) = v85;
                  *v109 = p_types;
                  swift_endAccess(v112);

                  swift_release(v86);
                  v88 = swift_allocObject(&unk_1004651D0, 32, 7);
                  *(_QWORD *)(v88 + 16) = v80;
                  *(_QWORD *)(v88 + 24) = v81;
                  v76 = v108;
                  v89 = v108[2];
                  swift_retain(v81);
                  v90 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v108);
                  if (!(_DWORD)v90 || v89 >= v108[3] >> 1)
                    v76 = sub_100023730(v90, v89 + 1, 1, v108);
                  v77 = sub_1000057B4(&qword_1004B7738);
                  swift_arrayDestroy(v76 + 4, 0, v77);
                  v78 = v76[2];
                  memmove(v76 + 6, v76 + 4, 16 * v78);
                  v76[2] = v78 + 1;
                  v76[4] = sub_10001122C;
                  v76[5] = v88;
                  v108 = v76;
                  v74 = a1;
                  p_types = (uint64_t)&stru_1004AAFF8.types;
                  v75 = &selRef_startWithCompletionHandler_;
                }
                swift_release(v81);

                v72 -= 24;
                --v73;
                v79 = __CFADD__(v71++, 1);
                v70 = v110;
              }
              while (!v79);
              swift_bridgeObjectRelease(v110);
              v2 = v100;
              if (!*(_QWORD *)(*v109 + 16))
              {
                v54 = v101;
                v53 = v102;
                goto LABEL_54;
              }
              swift_release(v106);

              v47 = v101;
              v52 = v102;
              if (v100 < 0)
                goto LABEL_73;
            }
            else
            {
LABEL_54:
              v55 = *(id *)(v105 + 24);
              objc_msgSend(v55, "removeObjectForKey:", v104);

              swift_release(v106);
              v52 = v53;
              v47 = v54;
              if (v2 < 0)
                goto LABEL_73;
            }
LABEL_55:
            if (v47)
            {
              v54 = (v47 - 1) & v47;
              v56 = __clz(__rbit64(v47)) | (v52 << 6);
              v53 = v52;
            }
            else
            {
              v57 = v52 + 1;
              if (__OFADD__(v52, 1))
                goto LABEL_105;
              if (v57 >= v98)
                break;
              v58 = *(_QWORD *)(v99 + 8 * v57);
              v53 = v52 + 1;
              if (!v58)
              {
                v53 = v52 + 2;
                if (v52 + 2 >= v98)
                  break;
                v58 = *(_QWORD *)(v99 + 8 * v53);
                if (!v58)
                {
                  v53 = v52 + 3;
                  if (v52 + 3 >= v98)
                    break;
                  v58 = *(_QWORD *)(v99 + 8 * v53);
                  if (!v58)
                  {
                    v53 = v52 + 4;
                    if (v52 + 4 >= v98)
                      break;
                    v58 = *(_QWORD *)(v99 + 8 * v53);
                    if (!v58)
                    {
                      v59 = v52 + 5;
                      while (v98 != v59)
                      {
                        v58 = *(_QWORD *)(v99 + 8 * v59++);
                        if (v58)
                        {
                          v53 = v59 - 1;
                          goto LABEL_70;
                        }
                      }
                      break;
                    }
                  }
                }
              }
LABEL_70:
              v54 = (v58 - 1) & v58;
              v56 = __clz(__rbit64(v58)) + (v53 << 6);
            }
            v60 = 8 * v56;
            v61 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v60);
            v62 = *(id *)(*(_QWORD *)(v2 + 48) + v60);
            v106 = v61;
            swift_retain(v61);
          }
        }
        sub_10000FCCC(v2);
        v91 = v108;
        v92 = v108[2];
        if (v92)
        {
          v93 = v108 + 5;
          do
          {
            v95 = (void (*)(__n128))*(v93 - 1);
            v94 = *v93;
            v96 = swift_retain(*v93);
            v95(v96);
            swift_release(v94);
            v93 += 2;
            --v92;
          }
          while (v92);
          v91 = v108;
        }
        swift_bridgeObjectRelease(v91);

        return;
      }
    }
    else if (*(_QWORD *)(v2 + 16))
    {
      v48 = -1 << *(_BYTE *)(v2 + 32);
      v99 = v2 + 64;
      v49 = ~v48;
      v50 = -v48;
      if (v50 < 64)
        v51 = ~(-1 << v50);
      else
        v51 = -1;
      v47 = v51 & *(_QWORD *)(v2 + 64);
      v46 = v49;
      goto LABEL_51;
    }

    swift_bridgeObjectRelease(v2);
    return;
  }
  v5 = v4;
  while (1)
  {
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v5);
    sub_100007EE4(v112, v113);
    sub_10000990C((uint64_t)v113, (uint64_t)v112);
    p_types = sub_10001124C();
    if ((swift_dynamicCast(&v111, v112, (char *)&type metadata for Any + 8, p_types, 6) & 1) == 0)
      goto LABEL_7;
    v9 = *(void **)(v105 + 24);
    v10 = v111;
    v11 = objc_msgSend(v9, "objectForKey:", v10);
    v12 = v2 & 0xC000000000000001;
    if (!v11)
    {
      if (v12)
      {
        if (v2 < 0)
          v25 = v2;
        else
          v25 = v2 & 0xFFFFFFFFFFFFFF8;
        v26 = v10;
        swift_bridgeObjectRetain();
        v27 = __CocoaDictionary.lookup(_:)(v26, v25);

        if (v27)
        {
          swift_unknownObjectRelease(v27);
          v28 = __CocoaDictionary.count.getter(v25);
          v29 = sub_100010C04(v25, v28);
          swift_retain(v29);
          v30 = sub_100027804((uint64_t)v26);
          p_types = v31;
          swift_release(v29);
          if ((p_types & 1) == 0)
            goto LABEL_106;

          v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
          sub_100010FDC(v30, v29);
          swift_release(v32);

          swift_bridgeObjectRelease(v2);
          v2 = v29;
          goto LABEL_6;
        }

        v7 = v2;
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      v38 = sub_100027804((uint64_t)v10);
      v40 = v39;
      swift_bridgeObjectRelease(v2);
      if ((v40 & 1) == 0)
      {

        goto LABEL_6;
      }
      v41 = swift_isUniquelyReferenced_nonNull_native(v2);
      *(_QWORD *)&v112[0] = v2;
      if ((v41 & 1) == 0)
      {
        sub_100028FE4();
        v2 = *(_QWORD *)&v112[0];
      }

      v42 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v38);
      sub_100010FDC(v38, v2);
      swift_release(v42);
      goto LABEL_4;
    }
    v13 = v11;
    if (v12)
    {
      if (v2 < 0)
        v14 = v2;
      else
        v14 = v2 & 0xFFFFFFFFFFFFFF8;
      v15 = __CocoaDictionary.count.getter(v14);
      if (__OFADD__(v15, 1))
        goto LABEL_103;
      v2 = sub_100010C04(v14, v15 + 1);
    }
    v16 = swift_isUniquelyReferenced_nonNull_native(v2);
    *(_QWORD *)&v112[0] = v2;
    v18 = sub_100027804((uint64_t)v10);
    v19 = *(_QWORD *)(v2 + 16);
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (*(_QWORD *)(v2 + 24) >= v21)
    {
      if ((v16 & 1) != 0)
      {
        v2 = *(_QWORD *)&v112[0];
        if ((v17 & 1) == 0)
          goto LABEL_30;
      }
      else
      {
        sub_100028FE4();
        v2 = *(_QWORD *)&v112[0];
        if ((v22 & 1) == 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_100028558(v21, v16);
      v23 = sub_100027804((uint64_t)v10);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_108;
      v18 = v23;
      v2 = *(_QWORD *)&v112[0];
      if ((v22 & 1) == 0)
      {
LABEL_30:
        *(_QWORD *)(v2 + 8 * (v18 >> 6) + 64) |= 1 << v18;
        v33 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v33) = v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v33) = v13;
        v34 = *(_QWORD *)(v2 + 16);
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_104;
        *(_QWORD *)(v2 + 16) = v36;
        v37 = v10;
        goto LABEL_4;
      }
    }
    v6 = *(_QWORD *)(v2 + 56);
    swift_release(*(_QWORD *)(v6 + 8 * v18));
    *(_QWORD *)(v6 + 8 * v18) = v13;
LABEL_4:

    v7 = 0x8000000000000000;
LABEL_5:
    swift_bridgeObjectRelease(v7);
LABEL_6:
    v3 = v103;
LABEL_7:
    sub_10000970C(v113);
    v5 = objc_msgSend(v3, "nextObject");
    if (!v5)
      goto LABEL_40;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
LABEL_108:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(p_types);
  __break(1u);
}

uint64_t WeakValuesDictionary.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_1000109EC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s24LoadingStatusCoordinatorCMa()
{
  return objc_opt_self(_TtCE16MusicMessagesAppV11MusicCoreUI7Artwork24LoadingStatusCoordinator);
}

uint64_t _s24LoadingStatusCoordinatorC12ObserverListCMa()
{
  return objc_opt_self(_TtCCE16MusicMessagesAppV11MusicCoreUI7Artwork24LoadingStatusCoordinatorP33_EE6D7E8CBE6FA7420A0E5D857423798C12ObserverList);
}

void _s24LoadingStatusCoordinatorC15ObserverContextVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));

}

_QWORD *_s24LoadingStatusCoordinatorC15ObserverContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

_QWORD *_s24LoadingStatusCoordinatorC15ObserverContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  return a1;
}

__n128 _s24LoadingStatusCoordinatorC15ObserverContextVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s24LoadingStatusCoordinatorC15ObserverContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t _s24LoadingStatusCoordinatorC15ObserverContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s24LoadingStatusCoordinatorC15ObserverContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s24LoadingStatusCoordinatorC15ObserverContextVMa()
{
  return &_s24LoadingStatusCoordinatorC15ObserverContextVN;
}

Swift::Int sub_100010C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_1000057B4((uint64_t *)&unk_1004B7748);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_10001124C();
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = _s24LoadingStatusCoordinatorC12ObserverListCMa();
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_100028558(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

void sub_100010E2C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 16 * v3);
            v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100010FDC(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_10001118C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

_QWORD *sub_1000111F4(_QWORD *a1)
{
  return sub_10002383C(0, a1[2], 0, a1);
}

uint64_t sub_100011208()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001122C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10001124C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B7740;
  if (!qword_1004B7740)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004B7740);
  }
  return result;
}

void sub_100011288()
{
  qword_1004B7760 = UIRoundToViewScale(0, 13.5);
}

id sub_1000112AC(uint64_t a1)
{
  return sub_1000112D4(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_1004B7768);
}

id sub_1000112C0(uint64_t a1)
{
  return sub_1000112D4(a1, (SEL *)&selRef_blackColor, &qword_1004B7770);
}

id sub_1000112D4(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

id sub_100011314()
{
  if (qword_1004B6E30 != -1)
    swift_once(&qword_1004B6E30, sub_1000112AC);
  qword_1004F44E8 = qword_1004B7768;
  return (id)qword_1004B7768;
}

char *sub_10001135C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  objc_super v29;

  v9 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_customBackgroundView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1004B6E40 != -1)
    swift_once(&qword_1004B6E40, sub_100011314);
  objc_msgSend(v13, "setBackgroundColor:", qword_1004F44E8);
  v14 = objc_msgSend(v13, "layer");
  if (qword_1004B6E28 != -1)
    swift_once(&qword_1004B6E28, sub_100011288);
  objc_msgSend(v14, "setCornerRadius:", *(double *)&qword_1004B7760);

  v15 = objc_msgSend(v13, "layer");
  objc_msgSend(v15, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v13, "setClipsToBounds:", 1);
  *(_QWORD *)&v11[v12] = v13;
  v16 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_highlightDimmingView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1004B6E38 != -1)
    swift_once(&qword_1004B6E38, sub_1000112C0);
  objc_msgSend(v17, "setBackgroundColor:", qword_1004B7770);
  v18 = objc_msgSend(v17, "layer");
  objc_msgSend(v18, "setCornerRadius:", *(double *)&qword_1004B7760);

  v19 = objc_msgSend(v17, "layer");
  objc_msgSend(v19, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v17, "setClipsToBounds:", 1);
  objc_msgSend(v17, "setAlpha:", 0.0);
  *(_QWORD *)&v11[v16] = v17;
  v11[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView__isPlatterViewBorrowed] = 0;

  v29.receiver = v11;
  v29.super_class = (Class)type metadata accessor for PlatterCellView();
  v20 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  v21 = objc_msgSend(v20, "contentView");
  v22 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView]);

  v23 = *(void **)&v20[v22];
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_customBackgroundView]);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_highlightDimmingView]);
  v24 = qword_1004B6E58;
  v25 = v20;
  if (v24 != -1)
    swift_once(&qword_1004B6E58, sub_10001BBF8);
  objc_msgSend(v25, "setBackgroundColor:", qword_1004F4570);

  v26 = objc_msgSend(v25, "contentView");
  v27 = objc_msgSend(v25, "backgroundColor");
  objc_msgSend(v26, "setBackgroundColor:", v27);

  return v25;
}

id sub_100011760()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for PlatterCellView();
  objc_msgSendSuper2(&v15, "layoutSubviews");
  if ((v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView__isPlatterViewBorrowed] & 1) == 0)
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView];
    v2 = objc_msgSend(v0, "contentView");
    objc_msgSend(v2, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
  }
  v11 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView];
  v12 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_highlightDimmingView];
  objc_msgSend(v11, "bringSubviewToFront:", v12);
  objc_msgSend(v11, "bounds");
  objc_msgSend(v12, "setFrame:");
  v13 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_customBackgroundView];
  objc_msgSend(v11, "bounds");
  return objc_msgSend(v13, "setFrame:");
}

void sub_100011944(char a1)
{
  void *v1;
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for PlatterCellView();
  objc_msgSendSuper2(&v11, "setHighlighted:", a1 & 1);
  if (objc_msgSend(v1, "isHighlighted"))
    v3 = 0.15;
  else
    v3 = 0.0;
  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_100465270, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v9[4] = sub_100011CF0;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100011FD0;
  v9[3] = &unk_100465288;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v1;
  swift_release(v7);
  objc_msgSend(v4, "animateWithDuration:animations:", v6, v3);
  _Block_release(v6);
}

void sub_100011A58()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for PlatterCellView();
  objc_msgSendSuper2(&v11, "prepareForReuse");
  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1004651F8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100465220, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100011CB4;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_10001122C;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100011BA4;
  v9[3] = &unk_100465238;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 93, 102, 40, 1, v7);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_100011BA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_100011BF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlatterCellView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlatterCellView()
{
  return objc_opt_self(_TtC16MusicMessagesApp15PlatterCellView);
}

uint64_t sub_100011C90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100011CB4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHighlighted:", 0);
}

uint64_t sub_100011CC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100011CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100011CE8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100011CF0()
{
  uint64_t v0;
  char *v1;
  void *v2;
  unsigned int v3;
  double v4;

  v1 = *(char **)(v0 + 16);
  v2 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_highlightDimmingView];
  v3 = objc_msgSend(v1, "isHighlighted");
  v4 = 0.15;
  if (!v3)
    v4 = 0.0;
  return objc_msgSend(v2, "setAlpha:", v4);
}

void sub_100011D48()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v1 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_customBackgroundView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1004B6E40 != -1)
    swift_once(&qword_1004B6E40, sub_100011314);
  objc_msgSend(v3, "setBackgroundColor:", qword_1004F44E8);
  v4 = objc_msgSend(v3, "layer");
  if (qword_1004B6E28 != -1)
    swift_once(&qword_1004B6E28, sub_100011288);
  objc_msgSend(v4, "setCornerRadius:", *(double *)&qword_1004B7760);

  v5 = objc_msgSend(v3, "layer");
  objc_msgSend(v5, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v3, "setClipsToBounds:", 1);
  *(_QWORD *)&v0[v2] = v3;
  v6 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_highlightDimmingView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1004B6E38 != -1)
    swift_once(&qword_1004B6E38, sub_1000112C0);
  objc_msgSend(v7, "setBackgroundColor:", qword_1004B7770);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setCornerRadius:", *(double *)&qword_1004B7760);

  v9 = objc_msgSend(v7, "layer");
  objc_msgSend(v9, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v7, "setClipsToBounds:", 1);
  objc_msgSend(v7, "setAlpha:", 0.0);
  *(_QWORD *)&v0[v6] = v7;
  v0[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView__isPlatterViewBorrowed] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003A4070, "MusicMessagesApp/PlatterCellView.swift", 38, 2, 76, 0);
  __break(1u);
}

uint64_t sub_100011FD0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_100011FFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  void *object;
  Swift::String v38;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = 1;
  *(_BYTE *)(v2 + 24) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_QWORD *)(v2 + 64) = 0xE000000000000000;
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 80) = 1;
  v4 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v2 + 88) = objc_msgSend(v4, "clearColor");
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = 0;
  *(_QWORD *)(v2 + 176) = 1;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  v5 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  *(_OWORD *)(v2 + 232) = 0u;
  v6 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment);
  v7[1] = 0;
  v7[2] = 0;
  *v7 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_explicitBackgroundColor) = 0;
  v8 = (_QWORD *)(v2
                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageDidChangeHandler);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler);
  *v11 = 0;
  v11[1] = 0;
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler);
  *v12 = 0;
  v12[1] = 0;
  v13 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidFailHandler);
  *v13 = 0;
  v13[1] = 0;
  v14 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler);
  *v14 = 0;
  v14[1] = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) = 0;
  v15 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_QWORD *)(v15 + 32) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isReusable) = 1;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog) = 0;
  v16 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_foregroundOverlayColor;
  *(_QWORD *)(v2 + v16) = objc_msgSend(v4, "clearColor");
  *(_QWORD *)(v2
            + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_needsArtworkReload) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_lastProposedAspectRatio) = 0x3FF0000000000000;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_foregroundOverlayView) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLoadingTimer) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlaying) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver) = 0;
  v17 = (_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView);
  *v17 = 0;
  v17[1] = 0;
  v18 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)v18 = 0u;
  *(_BYTE *)(v18 + 48) = -1;
  objc_msgSend(a1, "setClipsToBounds:", 1);
  objc_msgSend(a1, "setHidden:", 1);
  objc_msgSend(a1, "setAccessibilityIgnoresInvertColors:", 1);
  *(_QWORD *)(v2 + 144) = a1;
  v19 = a1;
  objc_msgSend(v19, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v28, "setFrame:", v21, v23, v25, v27);
  objc_msgSend(v28, "setAutoresizingMask:", 18);
  objc_msgSend(v28, "setHidden:", 1);
  objc_msgSend(v19, "addSubview:", v28);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component__fadeImageView) = v28;
  v29 = type metadata accessor for ArtworkComponentImageView();
  v30 = swift_dynamicCastClass(v19, v29);
  if (v30)
  {
    swift_weakAssign(v30 + OBJC_IVAR___MusicArtworkComponentImageView_artworkComponent, v2);
    v31 = v28;
  }
  else
  {
    v32 = sub_1000057B4(&qword_1004B70F0);
    v33 = swift_allocObject(v32, 64, 7);
    *(_OWORD *)(v33 + 16) = xmmword_1003C64D0;
    v34 = v28;
    _StringGuts.grow(_:)(81);
    v35._countAndFlagsBits = 0xD000000000000028;
    v35._object = (void *)0x80000001003A5110;
    String.append(_:)(v35);
    v36._countAndFlagsBits = _typeName(_:qualified:)(*(_QWORD *)v2, 0);
    object = v36._object;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(object);
    v38._object = (void *)0x80000001003A5140;
    v38._countAndFlagsBits = 0xD000000000000027;
    String.append(_:)(v38);
    *(_QWORD *)(v33 + 56) = &type metadata for String;
    *(_QWORD *)(v33 + 32) = 0;
    *(_QWORD *)(v33 + 40) = 0xE000000000000000;
    debugPrint(_:separator:terminator:)(v33, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v33);
  }
  sub_100014DDC(0);

  return v2;
}

void sub_100012490(id a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;
  id v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  char v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  _QWORD v39[6];
  _QWORD v40[7];

  v2 = (void *)v1[12];
  v38 = a1;
  if (v2)
  {
    if (!a1)
    {
      v8 = 0;
      goto LABEL_9;
    }
    if (objc_msgSend(v2, "isArtworkVisuallyIdenticalToCatalog:", a1))
    {
      if ((*((_BYTE *)v1
            + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) & 1) != 0)
        goto LABEL_18;
      goto LABEL_10;
    }
LABEL_7:
    v3 = (void *)v1[18];
    v4 = v38;
    v5 = objc_msgSend(v3, "traitCollection");
    objc_msgSend(v5, "displayScale");
    v7 = v6;

    objc_msgSend(v4, "setDestinationScale:", v7);
    v8 = v4;
    objc_msgSend(v8, "setRenderHint:", (unint64_t)objc_msgSend(v8, "renderHint") | 1);

    a1 = v38;
    v2 = (void *)v1[12];
LABEL_9:
    v1[12] = a1;
    v9 = v8;

    goto LABEL_10;
  }
  if (a1)
    goto LABEL_7;
  v13 = (void *)v1[26];
  if (!v13)
    goto LABEL_18;
  v15 = (void *)v1[23];
  v14 = (void *)v1[24];
  v16 = (void *)v1[25];
  v18 = v1[27];
  v17 = v1[28];
  v20 = *(void **)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent);
  v19 = *(void **)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 8);
  v22 = *(void **)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 16);
  v21 = *(void **)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 24);
  v24 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 32);
  v23 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 40);
  v25 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent
                                + 48);
  v40[0] = v15;
  v40[1] = v14;
  v40[2] = v16;
  v40[3] = v13;
  v40[4] = v18;
  v40[5] = v17;
  v36 = v21;
  v37 = v24;
  v35 = v23;
  if (v25 == 255)
  {
    v28 = v22;
    v29 = v16;
    v30 = v13;
    v31 = v15;
    v32 = v14;
    sub_10001B540(v20, v19, v28, v36, v37, v35, 0xFFu);
    sub_10001B540(v15, v14, v16, v13, v18, v17, 1u);
  }
  else
  {
    v34 = v22;
    if ((v25 & 1) != 0)
    {
      v39[0] = v20;
      v39[1] = v19;
      v39[2] = v22;
      v39[3] = v21;
      v39[4] = v24;
      v39[5] = v23;
      sub_10001B4F0(v20, v19, v22, v21, v24, v23, v25);
      sub_10001B9FC(v15, v14, v16, v13);
      v33 = static Artwork.Placeholder.__derived_struct_equals(_:_:)(v39, v40);
      sub_10001BA40(v15, v14, v16, v13);
      sub_10001B540(v20, v19, v34, v36, v37, v35, v25);
      if ((v33 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      v26 = v22;
      v27 = v23;
      sub_10001B4F0(v20, v19, v22, v21, v24, v23, v25);
      sub_10001B4F0(v20, v19, v26, v36, v37, v27, v25);
      sub_10001B9FC(v15, v14, v16, v13);
      sub_10001BA40(v15, v14, v16, v13);
      sub_10001B540(v20, v19, v34, v36, v37, v35, v25);
      sub_10001B540(v20, v19, v34, v36, v37, v35, v25);
    }
  }
LABEL_10:
  v10 = *(void (**)(uint64_t))((char *)v1
                                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  if (v10)
  {
    v11 = *(_QWORD *)((char *)v1
                    + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                    + 8);
    v12 = swift_retain(v11);
    v10(v12);

    sub_10000DCF8((uint64_t)v10, v11);
    return;
  }
LABEL_18:

}

uint64_t sub_100012820(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD v10[2];

  type metadata accessor for CGSize(0);
  *(double *)v10 = a1;
  *(double *)&v10[1] = a2;
  v9 = *(_OWORD *)(v2 + 112);
  result = static ApproximatelyEquatable.!=~ infix(_:_:)(v10, &v9);
  if ((result & 1) != 0)
  {
    result = *(_QWORD *)(v2 + 96);
    if (result)
      result = (uint64_t)objc_msgSend((id)result, "setFittingSize:", *(double *)(v2 + 112), *(double *)(v2 + 120));
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) != 1
      || (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0
      || !*(_QWORD *)(v2 + 104))
    {
      v6 = *(void (**)(uint64_t))(v2
                                          + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
      if (v6)
      {
        v7 = *(_QWORD *)(v2
                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                       + 8);
        v8 = swift_retain(v7);
        v6(v8);
        return sub_10000DCF8((uint64_t)v6, v7);
      }
    }
  }
  return result;
}

uint64_t sub_1000128FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];

  v2 = v1;
  v4 = type metadata accessor for UIView.Corner(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1000057B4(&qword_1004B8018);
  __chkstk_darwin(v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1000057B4(&qword_1004B8020);
  __chkstk_darwin(v11);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  swift_beginAccess(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, v26, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000FEB4(a1, (uint64_t)v13, &qword_1004B8018);
  sub_10000FEB4(v14, v15, &qword_1004B8018);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      return sub_10000FE2C((uint64_t)v13, &qword_1004B8018);
  }
  else
  {
    sub_10000FEB4((uint64_t)v13, (uint64_t)v10, &qword_1004B8018);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = sub_100004D8C(&qword_1004B8028, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v18);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      result = sub_10000FE2C((uint64_t)v13, &qword_1004B8018);
      if ((v19 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  result = sub_10000FE2C((uint64_t)v13, &qword_1004B8020);
LABEL_8:
  v21 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler;
  v22 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  if (v22)
  {
    v23 = *(_QWORD *)(v21 + 8);
    v24 = swift_retain(v23);
    v22(v24);
    return sub_10000DCF8((uint64_t)v22, v23);
  }
  return result;
}

void sub_100012B7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  char v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  id v17;

  v5 = a2;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment + 8);
  v10 = *(void **)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment + 16);
  *v7 = a1;
  v7[1] = a2;
  v7[2] = (uint64_t)a3;
  v17 = a3;
  if (!v10)
  {
    if (!a3)
    {
LABEL_8:
      v11 = v10;
      goto LABEL_9;
    }
LABEL_6:
    v14 = *(void (**)(uint64_t))(v3
                                         + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    if (v14)
    {
      v15 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                      + 8);
      v16 = swift_retain(v15);
      v14(v16);
      sub_10000DCF8((uint64_t)v14, v15);
    }
    goto LABEL_8;
  }
  if (!a3)
    goto LABEL_6;
  v11 = v10;
  v12 = v17;
  v13 = static UIView.Border.__derived_struct_equals(_:_:)(v8, v9 & 1, (uint64_t)v11, a1, v5 & 1, (uint64_t)v12);

  if ((v13 & 1) == 0)
    goto LABEL_6;
LABEL_9:

}

double sub_100012C80(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  double *v38;
  double *v39;
  double v40;
  uint64_t v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  char *v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  double v57;
  _QWORD v58[3];
  double v59;

  v4 = v3;
  v7 = a3 & 1;
  v56 = type metadata accessor for UIView.Corner(0);
  v8 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4(&qword_1004B8020);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004B8018);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v54 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v54 - v20;
  v22 = sub_10001320C(a1, a2, v7, (uint64_t)v4);
  v24 = v23;
  v25 = (void *)v4[18];
  v26 = (uint64_t)objc_msgSend(v25, "image");
  if (!v26)
    goto LABEL_27;
  v27 = (void *)v26;
  objc_msgSend((id)v26, "size");
  v29 = v28;
  v31 = v30;

  v32 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed;
  if (*((_BYTE *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) == 1
    && (*((_BYTE *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
    && v4[13])
  {
    goto LABEL_27;
  }
  *(double *)v58 = v29;
  v59 = 0.0;
  v26 = static ApproximatelyEquatable.!=~ infix(_:_:)(v58, &v59);
  if ((v26 & 1) == 0)
    goto LABEL_27;
  *(double *)v58 = v31;
  v59 = 0.0;
  v26 = static ApproximatelyEquatable.!=~ infix(_:_:)(v58, &v59);
  if ((v26 & 1) == 0)
    goto LABEL_27;
  v54 = v32;
  v33 = (uint64_t)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  swift_beginAccess((char *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, v58, 0, 0);
  v34 = sub_10000FEB4(v33, (uint64_t)v21, &qword_1004B8018);
  static UIView.Corner.rounded.getter(v34);
  v35 = v56;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v56);
  v36 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_10000FEB4((uint64_t)v21, (uint64_t)v12, &qword_1004B8018);
  sub_10000FEB4((uint64_t)v19, v36, &qword_1004B8018);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v37((uint64_t)v12, 1, v35) != 1)
  {
    sub_10000FEB4((uint64_t)v12, (uint64_t)v16, &qword_1004B8018);
    if (v37(v36, 1, v35) != 1)
    {
      v50 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v55, v36, v35);
      v51 = sub_100004D8C(&qword_1004B8028, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
      v52 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v50, v35, v51);
      v53 = *(void (**)(char *, uint64_t))(v8 + 8);
      v53(v50, v35);
      sub_10000FE2C((uint64_t)v19, &qword_1004B8018);
      sub_10000FE2C((uint64_t)v21, &qword_1004B8018);
      v53(v16, v35);
      v26 = sub_10000FE2C((uint64_t)v12, &qword_1004B8018);
      if ((v52 & 1) != 0)
        goto LABEL_31;
LABEL_13:
      if (v4[22] == 1)
      {
        if (*((_BYTE *)v4 + v54) == 1
          && (*((_BYTE *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
          && v4[13])
        {
          v38 = (double *)(v4 + 16);
          v39 = (double *)(v4 + 17);
        }
        else
        {
          v38 = (double *)(v4 + 14);
          v39 = (double *)(v4 + 15);
        }
        v40 = CGSize.aspectRatio.getter(v26, *v38, *v39);
        if (vabdd_f64(v40, CGSize.aspectRatio.getter(v41, v29, v31)) > 0.1 && (v29 >= v31 || v24 >= v22))
        {
          v42 = objc_msgSend(v25, "traitCollection");
          objc_msgSend(v42, "displayScale");
          v44 = v43;

          v59 = v22 / v29;
          v57 = v24 / v31;
          v26 = static ApproximatelyEquatable.!=~ infix(_:_:)(&v59, &v57);
          if ((v26 & 1) != 0)
          {
            if (v22 / v29 >= v24 / v31)
              v45 = v24 / v31;
            else
              v45 = v22 / v29;
            v22 = CGFloat.floorValue(scale:)(v44, v29 * v45);
            CGFloat.floorValue(scale:)(v44, v31 * v45);
            v46 = v29;
            v47 = v31;
            goto LABEL_28;
          }
        }
      }
LABEL_27:
      v46 = v22;
      v47 = v24;
LABEL_28:
      v48 = CGSize.aspectRatio.getter(v26, v46, v47);
      goto LABEL_29;
    }
    sub_10000FE2C((uint64_t)v19, &qword_1004B8018);
    sub_10000FE2C((uint64_t)v21, &qword_1004B8018);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v35);
LABEL_12:
    v26 = sub_10000FE2C((uint64_t)v12, &qword_1004B8020);
    goto LABEL_13;
  }
  sub_10000FE2C((uint64_t)v19, &qword_1004B8018);
  sub_10000FE2C((uint64_t)v21, &qword_1004B8018);
  if (v37(v36, 1, v35) != 1)
    goto LABEL_12;
  sub_10000FE2C((uint64_t)v12, &qword_1004B8018);
LABEL_31:
  if (v24 >= v22)
    v24 = v22;
  v48 = 1.0;
  v22 = v24;
LABEL_29:
  *(double *)((char *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_lastProposedAspectRatio) = v48;
  return v22;
}

double sub_10001320C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a3 & 1) == 0)
  {
    v9 = 0;
    v10 = a1;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v10, &v9) & 1) != 0)
    {
      v9 = 0;
      v10 = a2;
      if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v10, &v9) & 1) != 0)
        return *(double *)&a1;
    }
  }
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) == 1
    && (*(_BYTE *)(a4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
    && *(_QWORD *)(a4 + 104))
  {
    v8 = a4 + 128;
  }
  else
  {
    v8 = a4 + 112;
  }
  return *(double *)v8;
}

uint64_t sub_1000132E8(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  char v21;
  uint64_t v22;
  id v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  char *v42;
  int v43;
  unint64_t *v44;
  void *v45;
  id v46;
  uint64_t v47;
  char v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  uint64_t v57;
  id v58;
  unsigned __int8 v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  char v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  unsigned __int8 v75;
  char v76;
  void *v77;
  void *v78;
  void (*v79)(__n128);
  uint64_t v80;
  __n128 v81;
  void *v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  double *v88;
  double *v89;
  double v90;
  double v91;
  id v92;
  uint64_t v93;
  NSString v94;
  uint64_t v95;
  uint64_t v96;
  NSString v97;
  uint64_t v98;
  void *v99;
  id v100;
  NSString v101;
  id v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char v108;
  id v109;
  void *v111;
  void *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  _BYTE *v118;
  id v119;
  char v120[24];
  __int128 aBlock;
  __int128 v122;
  __int128 v123;
  char v124;
  _QWORD v125[6];
  double v126;
  double v127;
  double v128;
  double v129;
  uint64_t v130;
  uint64_t v131;

  v5 = v4;
  v10 = sub_1000057B4(&qword_1004B8018);
  __chkstk_darwin(v10);
  v12 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (_BYTE *)OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed;
  if (*((_BYTE *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) != 1
    || (*((_BYTE *)v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0
    || (v13 = (id)v4[13]) == 0)
  {
    v13 = (id)v4[12];
  }
  v14 = v13;
  v15 = (void *)v4[18];
  v16 = objc_msgSend(v15, "artworkCatalog");
  if (v16)
  {
    v17 = v16;
    if (v13)
    {
      sub_10000598C(0, &qword_1004B80E8, MPArtworkCatalog_ptr);
      v18 = v13;
      v19 = v17;
      v20 = static NSObject.== infix(_:_:)(v19, v18);

      if ((v20 & 1) != 0)
        goto LABEL_10;
    }
    else
    {

    }
  }
  else if (!v13)
  {
LABEL_10:
    v21 = 0;
    goto LABEL_13;
  }
  objc_msgSend(v15, "clearArtworkCatalogs");
  *(_QWORD *)((char *)v5
            + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = 0;
  v22 = v5[30];
  v5[29] = 0;
  v5[30] = 0;
  swift_bridgeObjectRelease(v22);
  v21 = 1;
LABEL_13:
  v23 = objc_msgSend(v15, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  type metadata accessor for CGRect(0);
  objc_msgSend(v15, "frame");
  *(_QWORD *)&aBlock = v26;
  *((_QWORD *)&aBlock + 1) = v27;
  *(_QWORD *)&v122 = v28;
  *((_QWORD *)&v122 + 1) = v29;
  v126 = a1;
  v127 = a2;
  v128 = a3;
  v129 = a4;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&aBlock, &v126) & 1) != 0)
    objc_msgSend(v15, "setFrame:", a1, a2, a3, a4);
  v30 = (void *)v5[19];
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v31, "frame");
    *(_QWORD *)&aBlock = v32;
    *((_QWORD *)&aBlock + 1) = v33;
    *(_QWORD *)&v122 = v34;
    *((_QWORD *)&v122 + 1) = v35;
    v126 = 0.0;
    v127 = 0.0;
    v128 = a3;
    v129 = a4;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&aBlock, &v126) & 1) != 0)
      objc_msgSend(v31, "setFrame:", 0.0, 0.0, a3, a4);

  }
  v36 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment);
  v37 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment + 8);
  v38 = *(void **)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_borderTreatment + 16);
  v39 = v38;
  UIView.border.setter(v36, v37, v38);
  v40 = (uint64_t)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  swift_beginAccess((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, v120, 0, 0);
  sub_10000FEB4(v40, (uint64_t)v12, &qword_1004B8018);
  UIView.corner.setter(v12);
  v41 = *(void **)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_foregroundOverlayView);
  if (v41)
    objc_msgSend(v41, "setFrame:", 0.0, 0.0, a3, a4);
  sub_100015AC0();
  v42 = (char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent;
  v43 = *((unsigned __int8 *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent
                                + 48);
  v44 = &qword_1004B7000;
  if (v43 != 255 && (v43 & 1) != 0)
  {
    v45 = *(void **)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView);
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v15, "bounds");
      objc_msgSend(v46, "setFrame:");

      v43 = v42[48];
    }
  }
  v119 = v15;
  v47 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_needsArtworkReload;
  v48 = v21 | *((_BYTE *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_needsArtworkReload);
  if (v43 != 255)
  {
    v116 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_needsArtworkReload;
    v117 = v13;
    v49 = *(void **)v42;
    v50 = *((void **)v42 + 1);
    v51 = *((void **)v42 + 2);
    v52 = *((void **)v42 + 3);
    v54 = *((_QWORD *)v42 + 4);
    v53 = *((_QWORD *)v42 + 5);
    if ((v43 & 1) != 0)
    {
      v126 = *(double *)v42;
      v127 = *(double *)&v50;
      v128 = *(double *)&v51;
      v129 = *(double *)&v52;
      v130 = v54;
      v131 = v53;
      if ((v48 & 1) != 0)
      {
        v55 = 1;
        sub_10001A5B8(v49, v50, v51, v52, v54, v53, 1);

        v56 = v119;
        v13 = v117;
        v44 = &qword_1004B7000;
        v47 = v116;
        goto LABEL_45;
      }
      v61 = (void *)v5[23];
      v60 = (void *)v5[24];
      v63 = (void *)v5[25];
      v62 = (void *)v5[26];
      v65 = v5[27];
      v64 = v5[28];
      v115 = v64;
      v114 = v61;
      v113 = v65;
      if (v62)
      {
        v125[0] = v61;
        v125[1] = v60;
        v125[2] = v63;
        v125[3] = v62;
        v125[4] = v65;
        v125[5] = v64;
        v111 = v60;
        v112 = v62;
        sub_10001B9FC(v61, v60, v63, v62);
        sub_10001B4F0(v49, v50, v51, v52, v54, v53, v43);
        sub_10001B9FC(v114, v111, v63, v112);
        v66 = v51;
        v67 = v52;
        v68 = v49;
        v69 = v50;
        v70 = static Artwork.Placeholder.__derived_struct_equals(_:_:)(v125, &v126);

        v71 = v114;
        v72 = v111;
        v73 = v112;
        sub_10001BA40(v114, v111, v63, v112);

      }
      else
      {
        v74 = v60;
        sub_10001A5B8(v49, v50, v51, v52, v54, v53, 1);
        sub_10001BA40(v114, v74, v63, 0);
        sub_10001BA40(v49, v50, v51, v52);
        v70 = 0;
      }
      v56 = v119;
      v55 = v70 ^ 1;
    }
    else
    {
      sub_10001A5B8(*(void **)v42, *((void **)v42 + 1), *((void **)v42 + 2), *((void **)v42 + 3), *((_QWORD *)v42 + 4), *((_QWORD *)v42 + 5), 0);

      if ((v48 & 1) == 0)
      {
        v13 = v117;
        if (v117)
        {
          v58 = v117;
          v59 = objc_msgSend(v58, "isArtworkVisuallyIdenticalToCatalog:", v49);

        }
        else
        {
          v59 = 0;
        }
        v56 = v119;
        v47 = v116;

        v55 = v59 ^ 1;
        v44 = &qword_1004B7000;
LABEL_45:
        if (*(_QWORD *)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog))
        {
          if (v13)
          {
            v75 = objc_msgSend(v13, "isArtworkVisuallyIdenticalToCatalog:");
            v76 = v55 | v75;
            if ((v55 & 1) == 0 || (v75 & 1) != 0)
              goto LABEL_52;
            goto LABEL_54;
          }
          if ((v55 & 1) != 0)
            goto LABEL_54;
LABEL_78:
          v76 = 0;
          goto LABEL_79;
        }
        goto LABEL_50;
      }

      v55 = 1;
      v56 = v119;
    }
    v13 = v117;
    v44 = &qword_1004B7000;
    v47 = v116;
    goto LABEL_45;
  }
  if (v48 & 1 | (v13 != 0))
  {
    v55 = 1;
    v56 = v119;
    goto LABEL_45;
  }
  v57 = v5[26];
  v55 = v57 != 0;
  v56 = v119;
  if (*(_QWORD *)((char *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog))
  {
    if (v57)
      goto LABEL_54;
    goto LABEL_78;
  }
LABEL_50:
  if ((v55 & 1) == 0)
  {
    v76 = 0;
LABEL_52:

LABEL_79:
    v108 = (v42[48] != 255) | v76;
    return v108 & 1;
  }
LABEL_54:
  if (qword_1004B6E20 != -1)
    swift_once(&qword_1004B6E20, sub_10000FF5C);
  objc_msgSend(*(id *)(qword_1004F44E0 + 16), "addObject:", v5);
  if (*((_BYTE *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isReusable) == 1)
  {
    objc_msgSend(v56, "setImage:", 0);
    sub_100019200();
  }
  v77 = *(void **)((char *)v5 + v44[259]);
  if (v77)
    objc_msgSend(v77, "setHidden:", 1);
  v78 = v13;
  objc_msgSend(v56, "setHidden:", 0);
  *((_BYTE *)v5 + v47) = 0;
  v79 = *(void (**)(__n128))((char *)v5
                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler);
  if (v79)
  {
    v80 = *(_QWORD *)((char *)v5
                    + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler
                    + 8);
    v81 = swift_retain(v80);
    v79(v81);
    sub_10000DCF8((uint64_t)v79, v80);
  }
  v82 = (void *)v5[23];
  v83 = (void *)v5[24];
  v85 = (void *)v5[25];
  v84 = (id)v5[26];
  v87 = v5[27];
  v86 = v5[28];
  if (v78)
  {
    if (v118[(_QWORD)v5] == 1
      && (*((_BYTE *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
      && v5[13])
    {
      v88 = (double *)(v5 + 16);
      v89 = (double *)(v5 + 17);
    }
    else
    {
      v88 = (double *)(v5 + 14);
      v89 = (double *)(v5 + 15);
    }
    v90 = *v89;
    v91 = *v88;
    v92 = v78;
    v119 = v82;
    sub_10001B9FC(v82, v83, v85, v84);
    objc_msgSend(v92, "setFittingSize:", v91, v90);
    objc_msgSend(v92, "setDestinationScale:", v25);
    v93 = v5[8];
    swift_bridgeObjectRetain();
    v94 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v93);
    objc_msgSend(v92, "setCacheIdentifier:forCacheReference:", v94, v5[6]);

    if ((v5[10] & 1) == 0)
    {
      v117 = v84;
      v96 = v5[8];
      v95 = v5[9];
      swift_bridgeObjectRetain();
      v97 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v96);
      v98 = v5[6];
      v99 = (void *)objc_opt_self(MPArtworkCatalog);
      v84 = v117;
      objc_msgSend(v99, "setCacheLimit:forCacheIdentifier:cacheReference:", v95, v97, v98);

    }
    if (v118[(_QWORD)v5] == 1
      && (*((_BYTE *)v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
      && v5[13])
    {
      v100 = objc_msgSend((id)objc_opt_self(AVResourceReclamationController), "defaultController");
      v101 = String._bridgeToObjectiveC()();
      v102 = objc_msgSend(v100, "takeAssertionPreventingResourceReclamationWithReason:", v101);
      v117 = v84;
      v103 = v102;

      v104 = *(void **)((char *)v5
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion);
      *(_QWORD *)((char *)v5
                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion) = v103;
      v84 = v117;
      v105 = 3;
    }
    else
    {
      v104 = *(void **)((char *)v5
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion);
      *(_QWORD *)((char *)v5
                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion) = 0;
      v105 = 1;
    }

    v106 = swift_allocObject(&unk_1004653D0, 24, 7);
    swift_weakInit(v106 + 16, v5);
    *(_QWORD *)&v123 = sub_10001BA84;
    *((_QWORD *)&v123 + 1) = v106;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v122 = sub_10001491C;
    *((_QWORD *)&v122 + 1) = &unk_100465690;
    v107 = _Block_copy(&aBlock);
    objc_msgSend(v92, "setDestination:forRepresentationKinds:configurationBlock:", v56, v105, v107, swift_release(*((_QWORD *)&v123 + 1)).n128_f64[0]);

    sub_10001BA40(v119, v83, v85, v84);
    _Block_release(v107);
    v108 = 1;
  }
  else if (v84)
  {
    *(_QWORD *)&aBlock = v5[23];
    *((_QWORD *)&aBlock + 1) = v83;
    *(_QWORD *)&v122 = v85;
    *((_QWORD *)&v122 + 1) = v84;
    *(_QWORD *)&v123 = v87;
    *((_QWORD *)&v123 + 1) = v86;
    v108 = 1;
    v124 = 1;
    sub_10001B9FC(v82, v83, v85, v84);
    v119 = v85;
    v117 = v84;
    v118 = v82;
    v109 = v83;
    sub_1000150CC(&aBlock);
    sub_10001BA40(v82, v83, v85, v84);

  }
  else
  {
    v123 = 0u;
    v122 = 0u;
    aBlock = 0u;
    v124 = -1;
    sub_1000150CC(&aBlock);
    v108 = 1;
  }
  return v108 & 1;
}

void sub_100013FA4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  unsigned __int8 v12;
  id v13;
  BOOL v14;
  id v15;
  uint64_t v16;
  void (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  _BYTE v55[24];
  __int128 aBlock;
  __int128 v57;
  __int128 v58;
  char v59;

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v55, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (!Strong)
    return;
  v6 = (_QWORD *)Strong;
  v7 = objc_msgSend(*(id *)(Strong + 144), "artworkCatalog");
  if (!v7)
  {
LABEL_11:
    swift_release(v6);
    return;
  }
  v8 = v7;
  v9 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed;
  if (((*((_BYTE *)v6 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) & 1) == 0
     || (*((_BYTE *)v6 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0
     || (v10 = (void *)v6[13]) == 0)
    && (v10 = (void *)v6[12]) == 0
    || (v11 = v10,
        v12 = objc_msgSend(v11, "isArtworkVisuallyIdenticalToCatalog:", v8),
        v11,
        (v12 & 1) == 0))
  {

    goto LABEL_11;
  }
  v13 = objc_msgSend(a2, "imageRepresentation");

  if (v13)
  {
    v14 = 0;
  }
  else
  {
    v15 = objc_msgSend(a2, "videoRepresentation");

    v14 = v15 == 0;
  }
  if (*((_BYTE *)v6 + v9) != 1)
    goto LABEL_22;
  v16 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork;
  if ((*((_BYTE *)v6 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0)
    goto LABEL_22;
  if (!v6[13])
    v14 = 0;
  if (!v14)
  {
LABEL_22:
    v20 = objc_msgSend(v8, "visualIdenticalityIdentifier");
    if (v20)
    {
      v21 = v20;
      if ((objc_msgSend(v20, "respondsToSelector:", "stringRepresentation") & 1) != 0)
      {
        v22 = objc_msgSend(v21, "stringRepresentation");
        if (v22)
        {
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;
          swift_unknownObjectRelease(v21);

          goto LABEL_28;
        }
      }
      swift_unknownObjectRelease(v21);
    }
    v24 = 0;
    v26 = 0;
LABEL_28:
    v27 = v6[30];
    v6[29] = v24;
    v6[30] = v26;
    swift_bridgeObjectRelease(v27);
    v28 = objc_msgSend(a2, "imageRepresentation");
    v29 = objc_msgSend(a2, "videoRepresentation");
    if (v28)
    {
      v30 = v28;
      v31 = objc_msgSend(v30, "image");
      if (v31)
      {
        v32 = v31;
        LOBYTE(aBlock) = 0;
        v33 = sub_10001BA8C();
        if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.MediaPlayer, v33) & 1) != 0
          && !objc_msgSend(v30, "isImagePrepared"))
        {
          v43 = *(void **)((char *)v6
                         + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog);
          *(_QWORD *)((char *)v6 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog) = v8;
          v44 = v8;

          v45 = (_QWORD *)swift_allocObject(&unk_1004656C8, 40, 7);
          v45[2] = v44;
          v45[3] = v6;
          v45[4] = v32;
          *(_QWORD *)&v58 = sub_10001BB08;
          *((_QWORD *)&v58 + 1) = v45;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v57 = sub_1000148C8;
          *((_QWORD *)&v57 + 1) = &unk_1004656E0;
          v46 = _Block_copy(&aBlock);
          v47 = *((_QWORD *)&v58 + 1);
          v48 = v44;
          v49 = v32;
          swift_retain(v6);
          objc_msgSend(v49, "prepareForDisplayWithCompletionHandler:", v46, swift_release(v47).n128_f64[0]);

          _Block_release(v46);
          if (!v29)
            goto LABEL_44;
        }
        else
        {
          *(_QWORD *)&aBlock = v8;
          *((_QWORD *)&aBlock + 1) = v32;
          v57 = 0u;
          v58 = 0u;
          v59 = 0;
          v34 = v8;
          v35 = v32;
          sub_1000150CC(&aBlock);

          if (!v29)
            goto LABEL_44;
        }
LABEL_36:
        v36 = v29;
        if (objc_msgSend(a2, "isBestRepresentationForKind:", objc_msgSend(v36, "kind")))
        {
          v37 = objc_msgSend(v36, "video");
          sub_100015E34(v37);

          swift_release(v6);
LABEL_45:

          return;
        }

LABEL_44:
        sub_100015E34(0);
        swift_release(v6);

        goto LABEL_45;
      }

    }
    if (!v29)
    {
      v38 = (void *)v6[26];
      if (v38)
      {
        v39 = v6[27];
        v52 = v6[28];
        v41 = (void *)v6[24];
        v40 = (void *)v6[25];
        v42 = (void *)v6[23];
        *(_QWORD *)&aBlock = v42;
        *((_QWORD *)&aBlock + 1) = v41;
        *(_QWORD *)&v57 = v40;
        *((_QWORD *)&v57 + 1) = v38;
        *(_QWORD *)&v58 = v39;
        *((_QWORD *)&v58 + 1) = v52;
        v59 = 1;
        sub_10001B9FC(v42, v41, v40, v38);
        v54 = v40;
        v51 = v38;
        v53 = v42;
        v50 = v41;
        sub_1000150CC(&aBlock);
        sub_10001BA40(v42, v41, v40, v38);

      }
      else
      {
        v57 = 0u;
        v58 = 0u;
        aBlock = 0u;
        v59 = -1;
        sub_1000150CC(&aBlock);
      }
      goto LABEL_44;
    }
    goto LABEL_36;
  }
  sub_100014D24(0);
  *((_BYTE *)v6 + v16) = 1;
  v17 = *(void (**)(__n128))((char *)v6
                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  if (v17)
  {
    v18 = *(_QWORD *)((char *)v6
                    + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                    + 8);
    v19 = swift_retain(v18);
    v17(v19);
    sub_10000DCF8((uint64_t)v17, v18);
  }
  swift_release(v6);

}

double sub_1000144F4(void *a1, void *a2, uint64_t a3, void *a4)
{
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  double result;

  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v8 = (_QWORD *)swift_allocObject(&unk_100465718, 48, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a4;
  v9 = a1;
  v10 = a4;
  v11 = a2;
  swift_retain(a3);
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10001BB50, (uint64_t)v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_100014594(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void (*v20)(__n128);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint8_t *v28;
  id v29;
  _QWORD *v30;
  os_log_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint8_t *v37;
  _QWORD *v38;
  uint8_t *v39;
  os_log_t v40;
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) != 1
    || (*(_BYTE *)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0
    || (v12 = *(void **)(a2 + 104)) == 0)
  {
    v12 = *(void **)(a2 + 96);
    if (!v12)
      goto LABEL_8;
  }
  v13 = v12;
  sub_10000598C(0, &qword_1004B80E8, MPArtworkCatalog_ptr);
  v14 = a1;
  v15 = static NSObject.== infix(_:_:)(v14, v13);

  if ((v15 & 1) != 0)
  {
    if (a3)
    {
      v41 = v14;
      v42 = a3;
      v43 = 0u;
      v44 = 0u;
      v45 = 0;
      v16 = v14;
      v17 = a3;
      sub_1000150CC(&v41);

    }
    else
    {
      v23 = Logger.artwork.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v8);
      v24 = a4;
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v40 = v25;
        v27 = (uint8_t *)swift_slowAlloc(12, -1);
        v38 = (_QWORD *)swift_slowAlloc(8, -1);
        v39 = v27;
        *(_DWORD *)v27 = 138412290;
        v28 = v27 + 12;
        v37 = v27 + 4;
        v41 = v24;
        v29 = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v37, v28);
        v30 = v38;
        *v38 = v24;

        v31 = v40;
        v32 = v26;
        v33 = v39;
        _os_log_impl((void *)&_mh_execute_header, v40, v32, "Failed to prepare image: %@", v39, 0xCu);
        v34 = sub_1000057B4(&qword_1004B8078);
        swift_arrayDestroy(v30, 1, v34);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v41 = v14;
      v42 = v24;
      v43 = 0u;
      v44 = 0u;
      v45 = 0;
      sub_1000150CC(&v41);
    }
    v35 = *(void **)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog);
    *(_QWORD *)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog) = 0;

  }
  else
  {
LABEL_8:
    v18 = *(void **)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog);
    *(_QWORD *)(a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_decodingCatalog) = 0;

    v19 = a2
        + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler;
    v20 = *(void (**)(__n128))(a2
                                        + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    if (v20)
    {
      v21 = *(_QWORD *)(v19 + 8);
      v22 = swift_retain(v21);
      v20(v22);
      sub_10000DCF8((uint64_t)v20, v21);
    }
  }
}

void sub_1000148C8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_10001491C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *, id);
  id v7;
  _QWORD v9[4];

  v6 = *(void (**)(_QWORD *, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(v9, v7);
  swift_release(v5);

  return sub_10000970C(v9);
}

id sub_100014B38()
{
  return sub_10001A518(0, _s9ComponentC11OverlayViewCMa);
}

uint64_t sub_100014B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100004D8C((unint64_t *)&unk_1004B7450, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_1000057B4(&qword_1004B7178);
  v13 = sub_100009890((unint64_t *)&unk_1004B7460, &qword_1004B7178);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x80000001003A5400, v9, v6, v3, 0);
  qword_1004B77C0 = result;
  return result;
}

void sub_100014D24(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  char v6;
  id v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLoadingTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLoadingTimer) = a1;
  v7 = a1;
  if (!a1)
  {
    if (!v3)
    {
LABEL_7:
      v4 = v3;
      goto LABEL_8;
    }
LABEL_6:
    objc_msgSend(v3, "invalidate");
    goto LABEL_7;
  }
  if (!v3)
    goto LABEL_6;
  sub_10000598C(0, &qword_1004B80E0, NSTimer_ptr);
  v4 = v3;
  v5 = v7;
  v6 = static NSObject.== infix(_:_:)(v5, v4);

  if ((v6 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

id sub_100014DDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  id result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double *v25;
  double *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v8 = _dispatchPreconditionTest(_:)(v7);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v10 = *(_QWORD *)(v2 + 176);
  v11 = *(void **)(v2 + 144);
  v12 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) == 1
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
    && *(_QWORD *)(v2 + 104))
  {
    v13 = *(void **)(v2 + 168);
    v14 = v13;
    v15 = sub_10001B694(v13);
    result = objc_msgSend(v11, "contentMode");
    if (result == (id)v15)
      return result;
    result = objc_msgSend(v11, "setContentMode:", v15);
    goto LABEL_25;
  }
  if (!a1)
    goto LABEL_23;
  objc_msgSend(a1, "size");
  if (v16 < v17)
  {
    if (*(_BYTE *)(v2 + v12) == 1
      && (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0)
    {
      v33 = *(_QWORD *)(v2 + 104);
      v34 = 128;
      if (!v33)
        v34 = 112;
      v18 = *(double *)(v2 + v34);
      if (v33)
      {
        v19 = (double *)(v2 + 136);
LABEL_13:
        if (*v19 < v18)
          goto LABEL_15;
        goto LABEL_14;
      }
    }
    else
    {
      v18 = *(double *)(v2 + 112);
    }
    v19 = (double *)(v2 + 120);
    goto LABEL_13;
  }
LABEL_14:
  if (v10 == 1)
  {
LABEL_15:
    v20 = objc_msgSend(a1, "size");
    v22 = v21;
    v24 = v23;
    if (*(_BYTE *)(v2 + v12) == 1
      && (*(_BYTE *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
      && *(_QWORD *)(v2 + 104))
    {
      v25 = (double *)(v2 + 128);
      v26 = (double *)(v2 + 136);
    }
    else
    {
      v25 = (double *)(v2 + 112);
      v26 = (double *)(v2 + 120);
    }
    v27 = CGSize.aspectRatio.getter(v20, *v25, *v26);
    if (vabdd_f64(v27, CGSize.aspectRatio.getter(v28, v22, v24)) > 0.1)
      v10 = 1;
    else
      v10 = 2;
  }
LABEL_23:
  result = objc_msgSend(v11, "contentMode");
  if (result == (id)v10)
    return result;
  result = objc_msgSend(v11, "setContentMode:", v10);
LABEL_25:
  v29 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler;
  v30 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler);
  if (v30)
  {
    v31 = *(_QWORD *)(v29 + 8);
    v32 = swift_retain(v31);
    v30(v32);
    return (id)sub_10000DCF8((uint64_t)v30, v31);
  }
  return result;
}

uint64_t sub_100015084(__int128 *a1, __int128 *a2)
{
  __int128 v4[3];
  __int128 v5[3];

  sub_10001AA28(a1, (uint64_t)v4);
  sub_10001AA28(a2, (uint64_t)v5);
  return sub_10001B088(v4, v5) & 1;
}

void sub_1000150CC(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  void (*v36)(_QWORD, __n128);
  uint64_t v37;
  __n128 v38;
  id v39;
  void *v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  id v46;
  id v47;
  id v48;
  id v49;
  _OWORD *v50;
  __int128 v51;
  id v52;
  int v53;
  id v54;
  void (*v55)(__n128);
  uint64_t v56;
  __n128 v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  id v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double *v74;
  double *v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double *v81;
  double *v82;
  double v83;
  void (*v84)(__n128);
  uint64_t v85;
  __n128 v86;
  id v87;
  id v88;
  void (*v89)(__n128);
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  _QWORD *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  id v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105[3];
  unsigned __int8 v106;
  __int128 v107[3];
  _OWORD v108[3];
  char v109;
  __int128 aBlock;
  __int128 v111;
  __int128 v112;
  id v113;
  id v114;
  id v115[3];

  v5 = v1;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(id *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  *v10 = static OS_dispatch_queue.main.getter();
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v8 + 13))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  v11 = _dispatchPreconditionTest(_:)(v10);
  (*((void (**)(_QWORD *, uint64_t))v8 + 1))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_53:
    swift_once(&qword_1004B6E20, sub_10000FF5C);
    goto LABEL_51;
  }
  v99 = a1;
  v12 = *(_QWORD *)(v5
                  + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock);
  if ((v12 & 1) == 0)
    *(_QWORD *)(v5
              + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = v12 | 1;
  v13 = *(void **)(v5 + 144);
  v14 = objc_msgSend(v13, "image");
  sub_100014DDC(v14);

  v15 = v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent;
  v16 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent);
  v17 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 8);
  v18 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 16);
  v19 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 24);
  v98 = v5;
  v21 = *(_QWORD *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 32);
  v20 = *(_QWORD *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 40);
  v22 = *(unsigned __int8 *)(v15 + 48);
  v23 = (uint64_t)v99;
  v92 = v15;
  sub_10000FD10((uint64_t)v99, v15, &qword_1004B80A8);
  sub_10001B4F0(v16, v17, v18, v19, v21, v20, v22);
  sub_10001B508(v23);
  v94 = v17;
  v95 = v16;
  v93 = v18;
  v96 = (void *)v21;
  v97 = v19;
  v24 = v21;
  v25 = v13;
  v100 = v20;
  LODWORD(v101) = v22;
  sub_10001B540(v16, v17, v18, v19, v24, v20, v22);
  v26 = AccessibilityIdentifier.artwork.unsafeMutableAddressor();
  v27 = *v26;
  v28 = v26[1];
  sub_10000598C(0, &qword_1004B80B0, UIImageView_ptr);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v27, v28);
  sub_10000FD10(v23, (uint64_t)v105, &qword_1004B80A8);
  if (v106 == 255)
  {
    objc_msgSend(v13, "setHidden:", 1);
    v5 = v98;
    v35 = *(void **)(v98 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView);
    if (v35)
      objc_msgSend(v35, "setHidden:", 1);
    sub_100019200();
    v36 = *(void (**)(_QWORD, __n128))(v5
                                                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler);
    v3 = v94;
    v2 = v95;
    v4 = v93;
    a1 = v96;
    v10 = v97;
    LOBYTE(v8) = (_BYTE)v101;
    if (v36)
    {
      v37 = *(_QWORD *)(v5
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler
                      + 8);
      v38 = swift_retain(v37);
      v36(0, v38);
      sub_10000DCF8((uint64_t)v36, v37);
    }
  }
  else
  {
    v5 = v98;
    sub_10001AA28(v105, (uint64_t)v107);
    sub_10001AA28(v107, (uint64_t)v108);
    if ((v109 & 1) != 0)
    {
      aBlock = v108[0];
      v111 = v108[1];
      v112 = v108[2];
      sub_10000FD10((uint64_t)&aBlock, (uint64_t)&v113, &qword_1004B80B8);
      sub_10000FD10((uint64_t)&aBlock + 8, (uint64_t)&v114, &qword_1004B80B8);
      sub_10000FD10((uint64_t)&v111, (uint64_t)v115, &qword_1004B80C0);
      v29 = (void *)*((_QWORD *)&v111 + 1);
      v30 = v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView;
      v31 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView);
      v99 = (id)*((_QWORD *)&v111 + 1);
      if (v31)
      {
        v32 = *(_QWORD *)(v30 + 8);
        sub_10001B220(&v113);
        sub_10001B220(&v114);
        sub_10001B220(v115);
        v33 = v29;
        v34 = v31;
      }
      else
      {
        v102 = aBlock;
        v103 = v111;
        v104 = v112;
        sub_10001B220(&v113);
        sub_10001B220(&v114);
        sub_10001B220(v115);
        v41 = sub_10001B558();
        v42 = v29;
        v34 = (void *)MusicUIContentConfiguration.makeContentView()((uint64_t)&type metadata for Artwork.Placeholder, v41);
        v32 = v43;
        v31 = 0;
      }
      v44 = v92;
      ObjectType = swift_getObjectType();
      v46 = v31;
      v47 = objc_msgSend(v34, "superview");

      if (!v47)
        objc_msgSend(v25, "insertSubview:atIndex:", v34, 0);
      v48 = *(id *)v30;
      *(_QWORD *)v30 = v34;
      *(_QWORD *)(v30 + 8) = v32;
      v49 = v34;

      objc_msgSend(v49, "setHidden:", 0);
      *((_QWORD *)&v103 + 1) = &type metadata for Artwork.Placeholder;
      *(_QWORD *)&v104 = sub_10001B59C();
      v50 = (_OWORD *)swift_allocObject(&unk_100465628, 64, 7);
      *(_QWORD *)&v102 = v50;
      v51 = v111;
      v50[1] = aBlock;
      v50[2] = v51;
      v50[3] = v112;
      sub_10001B220(&v113);
      sub_10001B220(&v114);
      sub_10001B220(v115);
      v52 = v99;
      dispatch thunk of UIContentView.configuration.setter(&v102, ObjectType, v32);
      v53 = *(unsigned __int8 *)(v44 + 48);
      if (v53 != 255 && (v53 & 1) != 0 && *(_QWORD *)v30)
      {
        v54 = *(id *)v30;
        objc_msgSend(v25, "bounds");
        objc_msgSend(v54, "setFrame:");

      }
      v55 = *(void (**)(__n128))(v5
                                          + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
      LOBYTE(v8) = (_BYTE)v101;
      if (v55)
      {
        v56 = *(_QWORD *)(v5
                        + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                        + 8);
        v57 = swift_retain(v56);
        v55(v57);
        sub_10001B248(&v113);
        sub_10001B248(&v114);
        sub_10001B248(v115);

        sub_10000DCF8((uint64_t)v55, v56);
      }
      else
      {
        sub_10001B248(&v113);
        sub_10001B248(&v114);
        sub_10001B248(v115);

      }
      v3 = v94;
      v2 = v95;
      v4 = v93;
      a1 = v96;
      v10 = v97;
    }
    else
    {
      v39 = *((id *)&v108[0] + 1);
      objc_msgSend(v13, "setHidden:", 0);
      v40 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_placeholderView);
      if (v40)
        objc_msgSend(v40, "setHidden:", 1);
      LOBYTE(v8) = (_BYTE)v101;
      if ((_DWORD)v101 == 255)
      {
        v8 = v39;
        v58 = *(void **)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component__fadeImageView);
        v59 = objc_msgSend(v25, "image");
        objc_msgSend(v58, "setImage:", v59);

        v60 = objc_msgSend(v58, "image");
        if (v60)
          v61 = 0;
        else
          v61 = objc_msgSend(v25, "backgroundColor");
        v3 = v94;
        v2 = v95;
        v4 = v93;
        objc_msgSend(v58, "setBackgroundColor:", v61);

        objc_msgSend(v58, "setAlpha:", 1.0);
        objc_msgSend(v58, "setHidden:", 0);
        objc_msgSend(v25, "setImage:", v8);
        v62 = objc_opt_self(UIView);
        *(_QWORD *)&v112 = sub_10001B61C;
        *((_QWORD *)&v112 + 1) = v5;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v111 = sub_100011FD0;
        *((_QWORD *)&v111 + 1) = &unk_100465640;
        v63 = _Block_copy(&aBlock);
        v64 = *((_QWORD *)&v112 + 1);
        swift_retain(v5);
        swift_release(v64);
        *(_QWORD *)&v112 = sub_10001B638;
        *((_QWORD *)&v112 + 1) = v5;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v111 = sub_100015A84;
        *((_QWORD *)&v111 + 1) = &unk_100465668;
        v65 = _Block_copy(&aBlock);
        v66 = *((_QWORD *)&v112 + 1);
        swift_retain(v5);
        swift_release(v66);
        v67 = (void *)v62;
        v39 = v8;
        objc_msgSend(v67, "animateWithDuration:animations:completion:", v63, v65, 0.2);
        _Block_release(v65);
        _Block_release(v63);
        LOBYTE(v8) = (_BYTE)v101;
      }
      else
      {
        objc_msgSend(v25, "setImage:", v39);
        v3 = v94;
        v2 = v95;
        v4 = v93;
      }
      v101 = v39;
      v68 = objc_msgSend(v39, "size");
      v70 = v69;
      v72 = v71;
      v73 = OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed;
      a1 = v96;
      v10 = v97;
      if (*(_BYTE *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) == 1
        && (*(_BYTE *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
        && *(_QWORD *)(v5 + 104))
      {
        v74 = (double *)(v5 + 128);
        v75 = (double *)(v5 + 136);
      }
      else
      {
        v74 = (double *)(v5 + 112);
        v75 = (double *)(v5 + 120);
      }
      v76 = CGSize.aspectRatio.getter(v68, *v74, *v75);
      if (vabdd_f64(v76, CGSize.aspectRatio.getter(v77, v70, v72)) <= 0.1)
      {
        if (*(_BYTE *)(v5 + v73) == 1
          && (*(_BYTE *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0
          && *(_QWORD *)(v5 + 104))
        {
          v81 = (double *)(v5 + 128);
          v82 = (double *)(v5 + 136);
        }
        else
        {
          v81 = (double *)(v5 + 112);
          v82 = (double *)(v5 + 120);
        }
        v80 = *v82;
        v79 = *v81;
      }
      else
      {
        v79 = v70;
        v80 = v72;
      }
      v83 = CGSize.aspectRatio.getter(v78, v79, v80);
      *(_QWORD *)&aBlock = *(_QWORD *)(v5
                                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_lastProposedAspectRatio);
      *(double *)&v102 = v83;
      if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&aBlock, &v102) & 1) != 0)
      {
        v84 = *(void (**)(__n128))(v5
                                            + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
        if (v84)
        {
          v85 = *(_QWORD *)(v5
                          + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                          + 8);
          v86 = swift_retain(v85);
          v84(v86);
          sub_10000DCF8((uint64_t)v84, v85);
        }
      }
      v87 = v101;
      v88 = v101;
      sub_100014DDC(v87);

    }
  }
  sub_100015AC0();
  v89 = *(void (**)(__n128))(v5
                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageDidChangeHandler);
  if (v89)
  {
    v90 = *(_QWORD *)(v5 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageDidChangeHandler + 8);
    v91 = swift_retain(v90);
    v89(v91);
    sub_10000DCF8((uint64_t)v89, v90);
  }
  if (qword_1004B6E20 != -1)
    goto LABEL_53;
LABEL_51:
  sub_10000FFDC(v5);
  sub_10001B540(v2, v3, v4, v10, (uint64_t)a1, v100, v8);
}

uint64_t sub_100015A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_100015AC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  char v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_explicitBackgroundColor);
  v3 = v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent;
  v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 48);
  v35 = v2;
  if (v4 == 255)
  {
    v16 = v2;
    v15 = v35;
    goto LABEL_7;
  }
  v5 = *(void **)v3;
  v6 = *(void **)(v3 + 8);
  v7 = *(void **)(v3 + 16);
  v8 = *(void **)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  if ((v4 & 1) != 0)
  {
    v17 = v2;
    sub_10001B4F0(v5, v6, v7, v8, v10, v9, v4);
    v18 = v17;

    v15 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    goto LABEL_7;
  }
  if (!v2)
  {
    sub_10001A5B8(*(void **)v3, *(void **)(v3 + 8), *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), 0);
    objc_msgSend(v6, "size");
    v21 = v20;
    objc_msgSend(v6, "size");
    if (v21 >= v22)
      goto LABEL_18;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) == 1
      && (*(_BYTE *)(v1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) == 0)
    {
      v33 = *(_QWORD *)(v1 + 104);
      v34 = 128;
      if (!v33)
        v34 = 112;
      v23 = *(double *)(v1 + v34);
      if (v33)
      {
        v24 = (double *)(v1 + 136);
LABEL_17:
        if (*v24 < v23)
        {
LABEL_20:
          v15 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");

          goto LABEL_7;
        }
LABEL_18:
        v25 = COERCE_DOUBLE(MPArtworkCatalog.originalSize.getter());
        if ((v28 & 1) == 0)
        {
          v27 = v25;
          if (v25 < v26)
            goto LABEL_20;
        }
        v29 = objc_msgSend(v5, "dataSource", v27);
        if (v29)
        {
          v30 = v29;
          objc_opt_self(MPMediaLibraryArtworkDataSource);
          if (swift_dynamicCastObjCClass(v30))
          {

            swift_unknownObjectRelease(v30);
            goto LABEL_28;
          }
          swift_unknownObjectRelease(v30);
        }
        v31 = objc_msgSend(v5, "existingColorAnalysisWithAlgorithm:", 1);
        if (v31)
        {
          v32 = v31;
          v15 = objc_msgSend(v31, "backgroundColor");

LABEL_7:
          v13 = *(void **)(v1 + 144);
          if (v15)
            v19 = v15;
          else
            v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
          goto LABEL_10;
        }

LABEL_28:
        v15 = *(id *)(v1 + 88);
        v13 = *(void **)(v1 + 144);
        v19 = v15;
LABEL_10:
        v14 = v19;
        goto LABEL_11;
      }
    }
    else
    {
      v23 = *(double *)(v1 + 112);
    }
    v24 = (double *)(v1 + 120);
    goto LABEL_17;
  }
  v11 = v2;
  sub_10001B4F0(v5, v6, v7, v8, v10, v9, v4);
  v12 = v11;

  v13 = *(void **)(v1 + 144);
  v14 = v12;
  v15 = v35;
LABEL_11:
  objc_msgSend(v13, "setBackgroundColor:", v14);

}

void sub_100015E34(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, __n128);
  uint64_t v18;
  __n128 v19;
  id v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v8 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if (a1)
  {
    v9 = *(id *)(v2 + 160);
    if (v9)
    {
      v10 = a1;
      v11 = objc_msgSend(v9, "player");
      v12 = objc_msgSend(v11, "currentItem");

      if (v12)
      {
        v9 = objc_msgSend(v12, "asset");

        if (v9)
        {
          sub_10000598C(0, &qword_1004B80A0, AVAsset_ptr);
          v13 = v10;
          v9 = v9;
          v14 = static NSObject.== infix(_:_:)(v13, v9);

          if ((v14 & 1) != 0)
          {

LABEL_14:
            return;
          }
        }
      }
      else
      {
        v9 = 0;
      }
    }
    else
    {
      v20 = a1;
    }
    sub_10001603C(a1);

    goto LABEL_14;
  }
  v15 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock);
  if ((v15 & 2) == 0)
  {
    *(_QWORD *)(v2
              + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = v15 | 2;
    v16 = v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler;
    v17 = *(void (**)(_QWORD, __n128))(v2
                                                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler);
    if (v17)
    {
      v18 = *(_QWORD *)(v16 + 8);
      v19 = swift_retain(v18);
      v17(0, v19);
      sub_10000DCF8((uint64_t)v17, v18);
    }
  }
}

void sub_10001603C(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD aBlock[5];
  _QWORD *v38;

  v29 = *v1;
  v30 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v15 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v16 = *(uint64_t *)((char *)v1
                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock);
    if ((v16 & 2) == 0)
      *(uint64_t *)((char *)v1
                 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = v16 | 2;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v7);
    v17 = (void *)static OS_dispatch_queue.global(qos:)(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v18 = swift_allocObject(&unk_1004653D0, 24, 7);
    swift_weakInit(v18 + 16, v1);
    v19 = (_QWORD *)swift_allocObject(&unk_100465498, 40, 7);
    v20 = v29;
    v21 = v30;
    v19[2] = v18;
    v19[3] = v21;
    v19[4] = v20;
    aBlock[4] = sub_10001B454;
    v38 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011FD0;
    aBlock[3] = &unk_1004654B0;
    v22 = _Block_copy(aBlock);
    swift_retain(v18);
    static DispatchQoS.unspecified.getter(v21);
    v36 = _swiftEmptyArrayStorage;
    v23 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v25 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    v26 = v33;
    v27 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v24, v25, v35, v23);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v26, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    v28 = v38;
    swift_release(v18);
    swift_release(v28);
  }
  else
  {
    __break(1u);
  }
}

void sub_100016390(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  void *v21;
  id v22;
  unsigned __int8 v23;
  void **v24;
  void **v25;
  unsigned int v26;
  void **v27;
  void **v28;
  unsigned int v29;
  void **v30;
  id v31;
  void **v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  _QWORD *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  _QWORD *v58;
  id v59;
  id v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void **v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void **v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void **v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  void **v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint8_t *v142;
  uint64_t v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  _QWORD *v152;
  uint64_t v153;
  void **aBlock;
  uint64_t v155;
  uint64_t (*v156)(uint64_t);
  void *v157;
  void (*v158)();
  _QWORD *v159;
  char v160[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v139 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v139 - v12;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v149 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  v150 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v151 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v160, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    return;
  v148 = v16;
  v20 = *(void **)(Strong + 104);
  if (!v20)
  {
    swift_release(Strong);
    return;
  }
  v146 = Strong;
  v21 = (void *)objc_opt_self(AVAudioSession);
  v145 = v20;
  v22 = objc_msgSend(v21, "auxiliarySession");
  aBlock = 0;
  v23 = objc_msgSend(v22, "setParticipatesInNowPlayingAppPolicy:error:", 0, &aBlock);
  v24 = aBlock;
  v147 = v14;
  v144 = v22;
  if ((v23 & 1) == 0)
  {
    v65 = aBlock;
    v66 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v67);
    v68 = Logger.motion.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v13, v68, v4);
    swift_errorRetain(v66);
    v69 = swift_errorRetain(v66);
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v70, v71))
    {
      v143 = v17;
      v72 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = (void **)swift_slowAlloc(32, -1);
      aBlock = v73;
      *(_DWORD *)v72 = 136315138;
      v142 = v72 + 4;
      v152 = (_QWORD *)v66;
      swift_errorRetain(v66);
      v74 = sub_1000057B4(&qword_1004B8088);
      v75 = String.init<A>(describing:)(&v152, v74);
      v77 = v76;
      v152 = (_QWORD *)sub_10001AA48(v75, v76, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153, v142, v72 + 12);
      v78 = v77;
      v17 = v143;
      swift_bridgeObjectRelease(v78);
      swift_errorRelease(v66);
      swift_errorRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Error creating non-now-playing session: %s", v72, 0xCu);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v72, -1, -1);
    }
    else
    {
      swift_errorRelease(v66);
      swift_errorRelease(v66);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
    v93 = (void *)static OS_dispatch_queue.main.getter();
    v94 = v146;
    v158 = sub_10001B478;
    v159 = (_QWORD *)v146;
    aBlock = _NSConcreteStackBlock;
    v155 = 1107296256;
    v156 = sub_100011FD0;
    v157 = &unk_1004654D8;
    v95 = _Block_copy(&aBlock);
    v96 = v159;
    swift_retain(v94);
    swift_release(v96);
    v97 = v151;
    static DispatchQoS.unspecified.getter(v98);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v99 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v100 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v101 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    v102 = v148;
    v103 = v100;
    v104 = v147;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v103, v101, v147, v99);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v97, v102, v95);

    _Block_release(v95);
    swift_release(v94);

    swift_errorRelease(v66);
    goto LABEL_22;
  }
  aBlock = 0;
  v25 = v24;
  v26 = objc_msgSend(v22, "setCategory:error:", AVAudioSessionCategoryAmbient, &aBlock);
  v27 = aBlock;
  if (!v26)
  {
    v79 = aBlock;
    v80 = _convertNSErrorToError(_:)(v27);

    swift_willThrow(v81);
    v82 = Logger.motion.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v82, v4);
    swift_errorRetain(v80);
    v83 = swift_errorRetain(v80);
    v84 = Logger.logObject.getter(v83);
    v85 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v84, v85))
    {
      v143 = v17;
      v86 = (uint8_t *)swift_slowAlloc(12, -1);
      v87 = (void **)swift_slowAlloc(32, -1);
      aBlock = v87;
      *(_DWORD *)v86 = 136315138;
      v142 = v86 + 4;
      v152 = (_QWORD *)v80;
      swift_errorRetain(v80);
      v88 = sub_1000057B4(&qword_1004B8088);
      v89 = String.init<A>(describing:)(&v152, v88);
      v91 = v90;
      v152 = (_QWORD *)sub_10001AA48(v89, v90, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153, v142, v86 + 12);
      v92 = v91;
      v17 = v143;
      swift_bridgeObjectRelease(v92);
      swift_errorRelease(v80);
      swift_errorRelease(v80);
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "Error creating ambient audio session: %s", v86, 0xCu);
      swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1, -1);
      swift_slowDealloc(v86, -1, -1);
    }
    else
    {
      swift_errorRelease(v80);
      swift_errorRelease(v80);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
    v119 = (void *)static OS_dispatch_queue.main.getter();
    v120 = v146;
    v158 = sub_10001B478;
    v159 = (_QWORD *)v146;
    aBlock = _NSConcreteStackBlock;
    v155 = 1107296256;
    v156 = sub_100011FD0;
    v157 = &unk_100465500;
    v121 = _Block_copy(&aBlock);
    v122 = v159;
    swift_retain(v120);
    swift_release(v122);
    v97 = v151;
    static DispatchQoS.unspecified.getter(v123);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v124 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v125 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v126 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    v127 = v148;
    v128 = v125;
    v129 = v147;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v128, v126, v147, v124);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v97, v127, v121);

    _Block_release(v121);
    swift_errorRelease(v80);
    swift_release(v120);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v127, v129);
    goto LABEL_27;
  }
  aBlock = 0;
  v28 = v27;
  v29 = objc_msgSend(v22, "setRequiresNoAudioResources:error:", 1, &aBlock);
  v30 = aBlock;
  if (!v29)
  {
    v105 = aBlock;
    v106 = _convertNSErrorToError(_:)(v30);

    swift_willThrow(v107);
    v108 = Logger.motion.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v108, v4);
    swift_errorRetain(v106);
    v109 = swift_errorRetain(v106);
    v110 = Logger.logObject.getter(v109);
    v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      v143 = v17;
      v112 = (uint8_t *)swift_slowAlloc(12, -1);
      v113 = (void **)swift_slowAlloc(32, -1);
      aBlock = v113;
      *(_DWORD *)v112 = 136315138;
      v142 = v112 + 4;
      v152 = (_QWORD *)v106;
      swift_errorRetain(v106);
      v114 = sub_1000057B4(&qword_1004B8088);
      v115 = String.init<A>(describing:)(&v152, v114);
      v117 = v116;
      v152 = (_QWORD *)sub_10001AA48(v115, v116, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153, v142, v112 + 12);
      v118 = v117;
      v17 = v143;
      swift_bridgeObjectRelease(v118);
      swift_errorRelease(v106);
      swift_errorRelease(v106);
      _os_log_impl((void *)&_mh_execute_header, v110, v111, "Error creating audio-resource-less session: %s", v112, 0xCu);
      swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v112, -1, -1);
    }
    else
    {
      swift_errorRelease(v106);
      swift_errorRelease(v106);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
    v130 = (void *)static OS_dispatch_queue.main.getter();
    v131 = v146;
    v158 = sub_10001B478;
    v159 = (_QWORD *)v146;
    aBlock = _NSConcreteStackBlock;
    v155 = 1107296256;
    v156 = sub_100011FD0;
    v157 = &unk_100465528;
    v132 = _Block_copy(&aBlock);
    v133 = v159;
    swift_retain(v131);
    swift_release(v133);
    v97 = v151;
    static DispatchQoS.unspecified.getter(v134);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v135 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v136 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v137 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    v102 = v148;
    v138 = v136;
    v104 = v147;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v138, v137, v147, v135);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v97, v102, v132);

    _Block_release(v132);
    swift_errorRelease(v106);
    swift_release(v131);
LABEL_22:
    (*(void (**)(char *, uint64_t))(v149 + 8))(v102, v104);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v150 + 8))(v97, v17);
    return;
  }
  v31 = objc_allocWithZone((Class)MPCScriptedLooper);
  v32 = v30;
  v33 = objc_msgSend(v31, "initWithAsset:audioSession:", a2, v22);
  v34 = objc_msgSend(v33, "player");
  v35 = objc_msgSend(v34, "currentItem");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v145, "scaledFittingSize");
    objc_msgSend(v36, "setPreferredMinimumResolution:");

  }
  v143 = v17;
  objc_msgSend(v34, "setAutomaticallyWaitsToMinimizeStalling:", 1);
  objc_msgSend(v34, "setMuted:", 1);
  objc_msgSend(v34, "setAllowsExternalPlayback:", 0);
  objc_msgSend(v34, "setPreventsDisplaySleepDuringVideoPlayback:", 0);
  objc_msgSend(v34, "_setSuppressesAudioRendering:", 1);
  if (qword_1004B6E48 != -1)
    swift_once(&qword_1004B6E48, sub_100014B58);
  v37 = swift_allocObject(&unk_1004653D0, 24, 7);
  swift_weakInit(v37 + 16, v146);
  v38 = swift_allocObject(&unk_100465560, 32, 7);
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = v33;
  v158 = sub_10001B4D0;
  v159 = (_QWORD *)v38;
  aBlock = _NSConcreteStackBlock;
  v155 = 1107296256;
  v156 = sub_100011FD0;
  v157 = &unk_100465578;
  v39 = _Block_copy(&aBlock);
  swift_retain(v37);
  v140 = v33;
  v40 = v151;
  static DispatchQoS.unspecified.getter(v140);
  v152 = _swiftEmptyArrayStorage;
  v41 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
  v43 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
  v44 = v148;
  v141 = v42;
  v45 = v42;
  v139 = v43;
  v46 = v147;
  v142 = (uint8_t *)v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v152, v45, v43, v147, v41);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v40, v44, v39);
  _Block_release(v39);
  v149 = *(_QWORD *)(v149 + 8);
  ((void (*)(char *, uint64_t))v149)(v44, v46);
  v47 = *(void (**)(char *, uint64_t))(v150 + 8);
  v47(v40, v143);
  v48 = v159;
  swift_release(v37);
  v49 = objc_msgSend(v34, "currentItem", swift_release(v48).n128_f64[0]);
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend(a2, "mediaSelectionGroupForMediaCharacteristic:", AVMediaCharacteristicAudible);
    if (v51)
    {
      v52 = v51;
      objc_msgSend(v50, "selectMediaOption:inMediaSelectionGroup:", 0, v51);

      v50 = v52;
    }

  }
  sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  v53 = (void *)static OS_dispatch_queue.main.getter();
  v54 = (_QWORD *)swift_allocObject(&unk_1004655B0, 40, 7);
  v55 = v140;
  v56 = v146;
  v54[2] = v140;
  v54[3] = v56;
  v54[4] = v34;
  v158 = sub_10001B4DC;
  v159 = v54;
  aBlock = _NSConcreteStackBlock;
  v155 = 1107296256;
  v156 = sub_100011FD0;
  v157 = &unk_1004655C8;
  v57 = _Block_copy(&aBlock);
  v58 = v159;
  v59 = v55;
  swift_retain(v56);
  v60 = v34;
  swift_release(v58);
  v61 = v151;
  static DispatchQoS.unspecified.getter(v62);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v64 = v147;
  v63 = v148;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v141, v139, v147, v142);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v63, v57);
  _Block_release(v57);
  swift_release(v56);

  ((void (*)(char *, uint64_t))v149)(v63, v64);
  v47(v61, v143);
}

void sub_100017398(uint64_t a1)
{
  void (*v2)(__n128);
  uint64_t v3;
  __n128 v4;

  sub_100014D24(0);
  *(_BYTE *)(a1 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) = 1;
  v2 = *(void (**)(__n128))(a1
                                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  if (v2)
  {
    v3 = *(_QWORD *)(a1
                   + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                   + 8);
    v4 = swift_retain(v3);
    v2(v4);
    sub_10000DCF8((uint64_t)v2, v3);
  }
}

void sub_100017404(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(Strong + 160);
    *(_QWORD *)(Strong + 160) = a2;
    v7 = a2;
    swift_release(v5);

  }
}

void sub_100017470(void *a1, uint64_t a2, void *a3)
{
  void *v3;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(id, __n128);
  uint64_t v20;
  __n128 v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = *(void **)(a2 + 160);
  if (v3)
  {
    sub_10000598C(0, &qword_1004B8090, MPCScriptedLooper_ptr);
    v7 = a1;
    v8 = v3;
    LOBYTE(a1) = static NSObject.== infix(_:_:)(v7, v8);

    if ((a1 & 1) != 0)
    {
      v9 = (void *)objc_opt_self(NSTimer);
      v10 = swift_allocObject(&unk_1004653D0, 24, 7);
      swift_weakInit(v10 + 16, a2);
      v22[4] = sub_10001B4E8;
      v23 = v10;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 1107296256;
      v22[2] = sub_1000179E8;
      v22[3] = &unk_1004655F0;
      v11 = _Block_copy(v22);
      swift_release(v23);
      v12 = objc_msgSend(v9, "scheduledTimerWithTimeInterval:repeats:block:", 0, v11, 8.0);
      _Block_release(v11);
      sub_100014D24(v12);
      v13 = *(void **)(a2 + 152);
      if (v13)
      {
        v14 = v13;
        v15 = a3;
        v16 = objc_msgSend(v14, "layer");
        v17 = objc_opt_self(AVPlayerLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v16, v17, 0, 0, 0), "setPlayer:", v15);

      }
      sub_100017A38(v7);
      v18 = a2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler;
      v19 = *(void (**)(id, __n128))(a2
                                              + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler);
      if (v19)
      {
        v20 = *(_QWORD *)(v18 + 8);
        v21 = swift_retain(v20);
        v19(v7, v21);
        sub_10000DCF8((uint64_t)v19, v20);
      }
    }
  }
}

double sub_100017670(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  void (*v36)(__n128);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  int v40;
  char v41[24];
  char v42[24];
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  v8 = Logger.motion.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(a2, 4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v45 = v13;
    *(_DWORD *)v12 = 136315394;
    swift_beginAccess(a2 + 16, v42, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    v40 = v11;
    v39 = v13;
    if (Strong)
    {
      v15 = Strong;
      sub_10000FEB4(Strong + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext, (uint64_t)v43, &qword_1004B8068);
      swift_release(v15);
    }
    else
    {
      v44 = 0;
      memset(v43, 0, sizeof(v43));
    }
    v17 = sub_1000057B4(&qword_1004B8068);
    v18 = String.init<A>(describing:)(v43, v17);
    v20 = v19;
    *(_QWORD *)&v43[0] = sub_10001AA48(v18, v19, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v43, (char *)v43 + 8, v12 + 4, v12 + 12);
    swift_release_n(a2, 2, v21);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v12 + 12) = 2080;
    swift_beginAccess(a2 + 16, v41, 0, 0);
    v22 = swift_weakLoadStrong(a2 + 16);
    v23 = (id)v22;
    if (v22)
    {
      v24 = *(void **)(v22 + 160);
      v25 = v24;
      *(_QWORD *)&v26 = swift_release(v23).n128_u64[0];
      if (v24)
      {
        v23 = objc_msgSend(v25, "player", v26);

      }
      else
      {
        v23 = 0;
      }
    }
    *(_QWORD *)&v43[0] = v23;
    v27 = sub_1000057B4(&qword_1004B8098);
    v28 = String.init<A>(describing:)(v43, v27);
    v30 = v29;
    *(_QWORD *)&v43[0] = sub_10001AA48(v28, v29, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v43, (char *)v43 + 8, v12 + 14, v12 + 22);
    swift_release_n(a2, 2, v31);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v40, "Timed out loading video artwork [player was not ready to play]. context=%s player=%s, privacy: .public)", (uint8_t *)v12, 0x16u);
    v32 = v39;
    swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(a2, 4, v16);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess(v7, v43, 0, 0);
  v33 = swift_weakLoadStrong(v7);
  if (v33)
  {
    v35 = v33;
    sub_100014D24(0);
    *(_BYTE *)(v35 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) = 1;
    v36 = *(void (**)(__n128))(v35
                                        + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    if (v36)
    {
      v37 = *(_QWORD *)(v35
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                      + 8);
      v38 = swift_retain(v37);
      v36(v38);
      sub_10000DCF8((uint64_t)v36, v37);
    }
    *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  }
  return result;
}

void sub_1000179E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_100017A38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;

  v2 = v1;
  v4 = objc_msgSend(a1, "player");
  v5 = sub_1000057B4(&qword_1004B7058);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1003C64E0;
  type metadata accessor for Whitetail.Binding();
  KeyPath = swift_getKeyPath(&unk_1003C6800);
  v30 = sub_1000057B4(&qword_1004B8040);
  v31 = &protocol witness table for KeyValueObservationTrigger<A, B>;
  v28 = (uint64_t)a1;
  v29 = KeyPath;
  v8 = swift_allocObject(&unk_1004653D0, 24, 7);
  swift_weakInit(v8 + 16, v1);
  v9 = swift_allocObject(&unk_1004653F8, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = a1;
  *(_QWORD *)(v6 + 32) = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v28, 1, (uint64_t)sub_10001B318, v9);
  v11 = swift_getKeyPath(&unk_1003C6848);
  v30 = sub_1000057B4(&qword_1004B8048);
  v31 = &protocol witness table for KeyValueObservationTrigger<A, B>;
  v28 = (uint64_t)v4;
  v29 = v11;
  v12 = swift_allocObject(&unk_100465420, 24, 7);
  *(_QWORD *)(v12 + 16) = v10;
  v13 = v10;
  v14 = v4;
  *(_QWORD *)(v6 + 40) = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v28, 1, (uint64_t)sub_10001B388, v12);
  v15 = swift_getKeyPath(&unk_1003C6888);
  v30 = sub_1000057B4(&qword_1004B8050);
  v31 = &protocol witness table for KeyValueObservationTrigger<A, B>;
  v28 = (uint64_t)v14;
  v29 = v15;
  v16 = swift_allocObject(&unk_1004653D0, 24, 7);
  swift_weakInit(v16 + 16, v1);
  v17 = v14;
  *(_QWORD *)(v6 + 48) = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v28, 1, (uint64_t)sub_10001B3CC, v16);
  v18 = swift_getKeyPath(&unk_1003C68B8);
  v30 = sub_1000057B4(&qword_1004B8058);
  v31 = &protocol witness table for KeyValueObservationTrigger<A, B>;
  v28 = (uint64_t)v17;
  v29 = v18;
  v19 = swift_allocObject(&unk_1004653D0, 24, 7);
  swift_weakInit(v19 + 16, v1);
  v20 = (_QWORD *)swift_allocObject(&unk_100465448, 40, 7);
  v20[2] = v13;
  v20[3] = v19;
  v20[4] = v17;
  v21 = v17;
  v22 = v13;
  v23 = v21;
  v24 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v28, 1, (uint64_t)sub_10001B41C, (uint64_t)v20);
  *(_QWORD *)(v6 + 56) = v24;
  v28 = v6;
  specialized Array._endMutation()(v24);
  v25 = v28;

  v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings) = v25;
  return swift_bridgeObjectRelease(v26);
}

void sub_100017CF0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void *, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  int v40;
  NSObject *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  void (*v65)(_BYTE *, uint64_t);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  __n128 v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  void *object;
  _BYTE v88[12];
  int v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[3];
  uint64_t v96;
  _QWORD v97[3];
  __int128 v98;
  __int128 v99;
  uint64_t v100;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v88[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v88[-v9];
  v11 = a2 + 16;
  switch((unint64_t)objc_msgSend(a1, "status"))
  {
    case 0uLL:
      return;
    case 1uLL:
      swift_beginAccess(a2 + 16, &v98, 0, 0);
      Strong = swift_weakLoadStrong(a2 + 16);
      if (Strong)
      {
        v13 = Strong;
        sub_100014D24(0);
        swift_release(v13);
      }
      return;
    case 2uLL:
      v14 = objc_msgSend(a1, "error");
      if (v14)
      {
        *(_QWORD *)&v98 = v14;
        v15 = sub_1000057B4(&qword_1004B8088);
        type metadata accessor for AVError(0);
        v17 = v16;
        if ((swift_dynamicCast(v97, &v98, v15, v16, 6) & 1) != 0)
        {
          v18 = (void *)v97[0];
          v19 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
          _BridgedStoredNSError.code.getter(&v98, v17, v19);

          v11 = a2 + 16;
          if ((_QWORD)v98 == -11819)
            return;
        }
      }
      v20 = objc_msgSend(a1, "error");
      if (v20)
      {
        *(_QWORD *)&v98 = v20;
        v21 = sub_1000057B4(&qword_1004B8088);
        type metadata accessor for AVError(0);
        v23 = v22;
        if ((swift_dynamicCast(v97, &v98, v21, v22, 6) & 1) != 0)
        {
          v24 = v11;
          v25 = (void *)v97[0];
          v26 = sub_100004D8C(&qword_1004B7030, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_1003C6124);
          _BridgedStoredNSError.code.getter(&v98, v23, v26);

          v11 = v24;
          if ((_QWORD)v98 == -11818)
            return;
        }
      }
      v94 = v4;
      v27 = objc_msgSend(a1, "player");
      v28 = objc_msgSend(v27, "status");

      if (v28 == (id)2)
      {
        swift_beginAccess(v11, v95, 0, 0);
        v29 = swift_weakLoadStrong(v11);
        if (v29)
        {
          v30 = v29;
          v32 = *(void (**)(void *, __n128))(v29
                                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidFailHandler);
          v31 = *(_QWORD *)(v29
                          + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidFailHandler
                          + 8);
          sub_10000DCE8((uint64_t)v32, v31);
          v33 = swift_release(v30);
          if (v32)
          {
            v32(a1, v33);
            sub_10000DCF8((uint64_t)v32, v31);
          }
        }
      }
      v93 = v11;
      sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
      swift_retain(a2);
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10001B434, a2);
      swift_release(a2);
      v34 = Logger.motion.unsafeMutableAddressor();
      v35 = v94;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v10, v34, v94);
      v36 = a1;
      swift_retain_n(a2, 2);
      v37 = v5;
      v38 = v36;
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter();
      v41 = v39;
      if (os_log_type_enabled(v39, (os_log_type_t)v40))
      {
        LODWORD(v90) = v40;
        v92 = v37;
        v42 = swift_slowAlloc(32, -1);
        v43 = (_QWORD *)swift_slowAlloc(8, -1);
        v91 = swift_slowAlloc(64, -1);
        v96 = v91;
        *(_DWORD *)v42 = 136446722;
        *(_QWORD *)&v98 = objc_msgSend(v38, "error");
        v44 = sub_1000057B4(&qword_1004B8080);
        v45 = String.init<A>(describing:)(&v98, v44);
        v47 = v46;
        *(_QWORD *)&v98 = sub_10001AA48(v45, v46, &v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v42 + 4, v42 + 12);

        swift_bridgeObjectRelease(v47);
        *(_WORD *)(v42 + 12) = 2114;
        *(_QWORD *)&v98 = v38;
        v48 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v42 + 14, v42 + 22);
        *v43 = v38;
        v49 = v43;

        *(_WORD *)(v42 + 22) = 2082;
        v50 = v93;
        swift_beginAccess(v93, v97, 0, 0);
        v51 = swift_weakLoadStrong(v50);
        if (v51)
        {
          v52 = v51;
          sub_10000FEB4(v51 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext, (uint64_t)&v98, &qword_1004B8068);
          swift_release(v52);
        }
        else
        {
          v100 = 0;
          v98 = 0u;
          v99 = 0u;
        }
        v4 = v94;
        v77 = v92;
        v78 = sub_1000057B4(&qword_1004B8068);
        v79 = String.init<A>(describing:)(&v98, v78);
        v81 = v80;
        *(_QWORD *)&v98 = sub_10001AA48(v79, v80, &v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v42 + 24, v42 + 32);
        swift_release_n(a2, 2, v82);
        swift_bridgeObjectRelease(v81);
        v83 = v41;
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v90, "MPCScriptedLooper failed. error=%{public}s videoLooper=%{public}@ context=%{public}s", (uint8_t *)v42, 0x20u);
        v84 = sub_1000057B4(&qword_1004B8078);
        swift_arrayDestroy(v49, 1, v84);
        swift_slowDealloc(v49, -1, -1);
        v85 = v91;
        swift_arrayDestroy(v91, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v85, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        v65 = *(void (**)(_BYTE *, uint64_t))(v77 + 8);
        v76 = v10;
LABEL_27:
        v65(v76, v4);
      }
      else
      {

        swift_release_n(a2, 2, v66);
        (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v10, v35);
      }
      return;
    case 3uLL:
      v93 = a2 + 16;
      sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
      swift_retain(a2);
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10001B434, a2);
      swift_release(a2);
      v53 = Logger.motion.unsafeMutableAddressor();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v8, v53, v4);
      swift_retain_n(a2, 2);
      v54 = v5;
      v55 = a1;
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, (os_log_type_t)v57))
      {
        v89 = v57;
        v92 = v54;
        v94 = v4;
        v58 = swift_slowAlloc(22, -1);
        v59 = (_QWORD *)swift_slowAlloc(8, -1);
        v91 = swift_slowAlloc(32, -1);
        v95[0] = v91;
        *(_DWORD *)v58 = 138543618;
        *(_QWORD *)&v98 = v55;
        v60 = v55;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v58 + 4, v58 + 12);
        v90 = v59;
        *v59 = v55;

        *(_WORD *)(v58 + 12) = 2082;
        v61 = v93;
        swift_beginAccess(v93, v97, 0, 0);
        v62 = swift_weakLoadStrong(v61);
        if (v62)
        {
          v63 = v62;
          sub_10000FEB4(v62 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext, (uint64_t)&v98, &qword_1004B8068);
          swift_release(v63);
        }
        else
        {
          v100 = 0;
          v98 = 0u;
          v99 = 0u;
        }
        v4 = v94;
        v67 = v92;
        v68 = sub_1000057B4(&qword_1004B8068);
        v69 = String.init<A>(describing:)(&v98, v68);
        v71 = v70;
        *(_QWORD *)&v98 = sub_10001AA48(v69, v70, v95);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v58 + 14, v58 + 22);
        swift_release_n(a2, 2, v72);
        swift_bridgeObjectRelease(v71);
        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v89, "MPCScriptedLooper was cancelled. videoLooper=%{public}@ context=%{public}s", (uint8_t *)v58, 0x16u);
        v73 = sub_1000057B4(&qword_1004B8078);
        v74 = v90;
        swift_arrayDestroy(v90, 1, v73);
        swift_slowDealloc(v74, -1, -1);
        v75 = v91;
        swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v75, -1, -1);
        swift_slowDealloc(v58, -1, -1);

        v65 = *(void (**)(_BYTE *, uint64_t))(v67 + 8);
      }
      else
      {

        swift_release_n(a2, 2, v64);
        v65 = *(void (**)(_BYTE *, uint64_t))(v54 + 8);
      }
      v76 = v8;
      goto LABEL_27;
    default:
      *(_QWORD *)&v98 = 0;
      *((_QWORD *)&v98 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease(*((_QWORD *)&v98 + 1));
      objc_msgSend(a1, "status");
      *(_QWORD *)&v98 = 0xD00000000000002CLL;
      *((_QWORD *)&v98 + 1) = 0x80000001003A53B0;
      v86._countAndFlagsBits = MPCScriptedLooperStatus.description.getter(objc_msgSend(a1, "status"));
      object = v86._object;
      String.append(_:)(v86);
      swift_bridgeObjectRelease(object);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v98, *((_QWORD *)&v98 + 1), "MusicMessagesApp/ArtworkComponent.swift", 39, 2, 1019, 0);
      __break(1u);
      JUMPOUT(0x100018674);
  }
}

double sub_100018684(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_100014D24(0);
    *(_BYTE *)(v4 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_prefersImageArtwork) = 1;
    v5 = *(void (**)(__n128))(v4
                                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(v4
                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                     + 8);
      v7 = swift_retain(v6);
      v5(v7);
      sub_10000DCF8((uint64_t)v5, v6);
    }
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void sub_100018728(void *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  float v7;
  float v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v2 = (_QWORD *)type metadata accessor for Logger(0);
  v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, "player");
  objc_msgSend(v6, "rate");
  v8 = v7;

  if (v8 == 1.0)
  {
    v9 = objc_msgSend(a1, "player");
    v48 = objc_msgSend(v9, "reasonForWaitingToPlay");

    if (v48)
    {
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(AVPlayerWaitingWithNoItemToPlayReason);
      if (v10 != v13 || v12 != v14)
      {
        v16 = v14;
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v16);
        if ((v17 & 1) != 0)
          goto LABEL_11;
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v12 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(AVPlayerWaitingToMinimizeStallsReason);
        v22 = v20;
        if (v18 != v21 || v12 != v20)
        {
          v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v12, v21, v20, 0);
          swift_bridgeObjectRelease(v12);
          swift_bridgeObjectRelease(v22);
          if ((v44 & 1) == 0)
          {

            return;
          }
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease_n(v12, 2);
LABEL_11:
      v23 = Logger.motion.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, _QWORD *))(v3 + 16))(v5, v23, v2);
      v24 = v48;
      v25 = a1;
      v26 = v24;
      v27 = v25;
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc(22, -1);
        v47 = swift_slowAlloc(64, -1);
        v49 = (uint64_t)v26;
        v50 = v47;
        *(_DWORD *)v30 = 136446466;
        v48 = v2;
        type metadata accessor for WaitingReason(0);
        v32 = v31;
        v33 = v26;
        v34 = String.init<A>(describing:)(&v49, v32);
        v36 = v35;
        v49 = sub_10001AA48(v34, v35, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v30 + 4, v30 + 12);
        v46 = v33;

        swift_bridgeObjectRelease(v36);
        *(_WORD *)(v30 + 12) = 2082;
        v37 = objc_msgSend(v27, "player");
        v38 = objc_msgSend(v37, "currentItem");

        v49 = (uint64_t)v38;
        v39 = sub_1000057B4(&qword_1004B8060);
        v40 = String.init<A>(describing:)(&v49, v39);
        v42 = v41;
        v49 = sub_10001AA48(v40, v41, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v30 + 14, v30 + 22);

        swift_bridgeObjectRelease(v42);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "AVPlayer waiting because %{public}s currentItem=%{public}s", (uint8_t *)v30, 0x16u);
        v43 = v47;
        swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v30, -1, -1);

        (*(void (**)(char *, id))(v3 + 8))(v5, v48);
      }
      else
      {

        (*(void (**)(char *, _QWORD *))(v3 + 8))(v5, v2);
      }
    }
  }
}

void sub_100018B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  float v8;
  int v9;
  void (*v10)(uint64_t, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void **)(Strong + 160);
    if (!v4 || (v5 = objc_msgSend(v4, "player")) == 0)
    {
      swift_release(v3);
      return;
    }
    v6 = v5;
    v7 = objc_msgSend(v5, "timeControlStatus");
    objc_msgSend(v6, "rate");
    if (v7)
    {
      if (v7 != (id)2)
        goto LABEL_16;
      if (v8 != 1.0)
        goto LABEL_16;
      v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlaying);
      *(_BYTE *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlaying) = 1;
      if (v9 == 1)
        goto LABEL_16;
      v10 = *(void (**)(uint64_t, __n128))(v3
                                                   + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler);
      if (!v10)
        goto LABEL_16;
      v11 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler
                      + 8);
      v12 = swift_retain(v11);
      v13 = 1;
    }
    else
    {
      if (v8 != 0.0)
        goto LABEL_16;
      v14 = *(_BYTE *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlaying);
      *(_BYTE *)(v3 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlaying) = 0;
      if ((v14 & 1) == 0)
        goto LABEL_16;
      v10 = *(void (**)(uint64_t, __n128))(v3
                                                   + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler);
      if (!v10)
        goto LABEL_16;
      v11 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler
                      + 8);
      v12 = swift_retain(v11);
      v13 = 0;
    }
    v10(v13, v12);
    sub_10000DCF8((uint64_t)v10, v11);
LABEL_16:
    swift_release(v3);

  }
}

void sub_100018CA0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  uint64_t Strong;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v5 = objc_msgSend(a1, "player");
  v6 = objc_msgSend(v5, "currentItem");

  if (v6)
  {
    swift_beginAccess(a2 + 16, v15, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    if (Strong)
    {
      v8 = Strong;
      v9 = String._bridgeToObjectiveC()();
      v10 = swift_allocObject(&unk_100465470, 32, 7);
      *(_QWORD *)(v10 + 16) = a3;
      *(_QWORD *)(v10 + 24) = a2;
      v11 = type metadata accessor for NotificationObserver();
      swift_allocObject(v11, 64, 7);
      v12 = a3;
      swift_retain(a2);
      v13 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v9, (uint64_t)v6, 1, 1, (uint64_t)sub_10001B42C, v10);
      v14 = *(_QWORD *)(v8
                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver);
      *(_QWORD *)(v8
                + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver) = v13;
      swift_release(v8);
      swift_release(v14);
    }
    else
    {

    }
  }
}

uint64_t sub_100018DEC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[32];
  __int128 v49;
  __int128 v50;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Notification.userInfo.getter(v7);
  if (v10)
  {
    v11 = v10;
    *(_QWORD *)&v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(AVPlayerItemFailedToPlayToEndTimeErrorKey);
    *((_QWORD *)&v49 + 1) = v12;
    AnyHashable.init<A>(_:)(v45, &v49, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v11 + 16) && (v13 = sub_100027770((uint64_t)v45), (v14 & 1) != 0))
    {
      sub_10000990C(*(_QWORD *)(v11 + 56) + 32 * v13, (uint64_t)&v49);
    }
    else
    {
      v49 = 0u;
      v50 = 0u;
    }
    swift_bridgeObjectRelease(v11);
    sub_10000FC6C((uint64_t)v45);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  v15 = Logger.motion.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v15, v5);
  sub_10000FEB4((uint64_t)&v49, (uint64_t)v48, &qword_1004B7068);
  v16 = a2;
  swift_retain_n(a3, 2);
  v17 = v16;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v43 = v5;
    v20 = swift_slowAlloc(32, -1);
    v41 = swift_slowAlloc(96, -1);
    v47 = v41;
    *(_DWORD *)v20 = 136446722;
    v42 = a3;
    sub_10000FEB4((uint64_t)v48, (uint64_t)v45, &qword_1004B7068);
    v21 = sub_1000057B4(&qword_1004B7068);
    v22 = String.init<A>(describing:)(v45, v21);
    v24 = v23;
    *(_QWORD *)&v45[0] = sub_10001AA48(v22, v23, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, (char *)v45 + 8, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v24);
    sub_10000FE2C((uint64_t)v48, &qword_1004B7068);
    *(_WORD *)(v20 + 12) = 2082;
    *(_QWORD *)&v45[0] = objc_msgSend(v17, "currentItem");
    v25 = sub_1000057B4(&qword_1004B8060);
    v26 = String.init<A>(describing:)(v45, v25);
    v28 = v27;
    *(_QWORD *)&v45[0] = sub_10001AA48(v26, v27, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, (char *)v45 + 8, v20 + 14, v20 + 22);

    v29 = v28;
    v30 = v42;
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v20 + 22) = 2082;
    swift_beginAccess(v30 + 16, v44, 0, 0);
    Strong = swift_weakLoadStrong(v30 + 16);
    if (Strong)
    {
      v32 = Strong;
      sub_10000FEB4(Strong + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext, (uint64_t)v45, &qword_1004B8068);
      swift_release(v32);
    }
    else
    {
      v46 = 0;
      memset(v45, 0, sizeof(v45));
    }
    v34 = sub_1000057B4(&qword_1004B8068);
    v35 = String.init<A>(describing:)(v45, v34);
    v37 = v36;
    *(_QWORD *)&v45[0] = sub_10001AA48(v35, v36, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, (char *)v45 + 8, v20 + 24, v20 + 32);
    swift_release_n(v30, 2, v38);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "AVPlayerItem failed to play to end. error=%{public}s currentItem=%{public}s context=%{public}s", (uint8_t *)v20, 0x20u);
    v39 = v41;
    swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v43);
  }
  else
  {

    swift_release_n(a3, 2, v33);
    sub_10000FE2C((uint64_t)v48, &qword_1004B7068);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_10000FE2C((uint64_t)&v49, &qword_1004B7068);
}

void sub_100019200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver) = 0;
  swift_release(v2);
  v3 = *(void **)(v0 + 152);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v4, "layer");
    v6 = objc_opt_self(AVPlayerLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v5, v6, 0, 0, 0), "setPlayer:", 0);

  }
  v7 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 160) = 0;

}

uint64_t sub_1000192BC()
{
  uint64_t v0;

  sub_10001BB5C(*(id *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  sub_10001BA40(*(void **)(v0 + 184), *(void **)(v0 + 192), *(void **)(v0 + 200), *(void **)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  sub_10000FE2C(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, &qword_1004B8018);

  sub_10000DCF8(*(_QWORD *)(v0+ OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler), *(_QWORD *)(v0+ OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler+ 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageDidChangeHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageDidChangeHandler + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidChangeHandler + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidFailHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoLooperDidFailHandler + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_isPlayingDidChangeHandler + 8));
  sub_10000FE2C(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_loggingContext, &qword_1004B8068);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_resourceReclamationAssertion));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_videoBindings));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_itemFailedToPlayToEndTimeObserver));

  sub_10001B540(*(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent), *(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 8), *(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 16), *(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 40), *(_BYTE *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_appliedContent + 48));
  return v0;
}

uint64_t sub_1000194DC()
{
  uint64_t v0;

  sub_1000192BC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100019500()
{
  return _s9ComponentCMa(0);
}

uint64_t _s9ComponentCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1004B7850;
  if (!qword_1004B7850)
    return swift_getSingletonMetadata(a1, &_s9ComponentCMn);
  return result;
}

void sub_100019544(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[46];

  v4[0] = "\t";
  v4[1] = &unk_1003C6658;
  v4[2] = &unk_1003C6658;
  v4[3] = &unk_1003C6658;
  v4[4] = &unk_1003C6670;
  v4[5] = &unk_1003C6688;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_1003C6658;
  v4[8] = &unk_1003C6658;
  v4[9] = &unk_1003C66A0;
  v4[10] = &unk_1003C66A0;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = &unk_1003C6658;
  v4[13] = &unk_1003C6658;
  v4[14] = &unk_1003C6658;
  v4[15] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[16] = &unk_1003C66B8;
  v4[17] = &unk_1003C66D0;
  sub_100019690(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(v2 - 8) + 64;
    v4[19] = &unk_1003C66E8;
    v4[20] = &unk_1003C6658;
    v4[21] = &unk_1003C66D0;
    v4[22] = &unk_1003C66D0;
    v4[23] = &unk_1003C66D0;
    v4[24] = &unk_1003C66D0;
    v4[25] = &unk_1003C66D0;
    v4[26] = &unk_1003C66D0;
    v4[27] = &unk_1003C66D0;
    v4[28] = &unk_1003C6700;
    v4[29] = &unk_1003C6718;
    v4[30] = &unk_1003C6700;
    v4[31] = &unk_1003C6658;
    v4[32] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[33] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[34] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[35] = &unk_1003C6700;
    v4[36] = &unk_1003C6700;
    v4[37] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[38] = &unk_1003C6658;
    v4[39] = &unk_1003C6658;
    v4[40] = &unk_1003C6658;
    v4[41] = &unk_1003C6700;
    v4[42] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[43] = &unk_1003C6658;
    v4[44] = &unk_1003C66D0;
    v4[45] = &unk_1003C6730;
    swift_updateClassMetadata2(a1, 256, 46, v4, a1 + 80);
  }
}

void sub_100019690(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004B7860)
  {
    v2 = type metadata accessor for UIView.Corner(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004B7860);
  }
}

uint64_t _s9ComponentC11OverlayViewCMa()
{
  return objc_opt_self(_TtCCE16MusicMessagesAppV11MusicCoreUI7Artwork9ComponentP33_F6B6DCEFF56A9DC1390A9746FE4F657811OverlayView);
}

void sub_100019704()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  objc_msgSendSuper2(&v7, "didMoveToSuperview");
  v1 = objc_msgSend(v0, "superview");
  v2 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v1, "insertSubview:above:", v3, v0);
      v4 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStrokeView];
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v1, "insertSubview:below:", v5, v3);

      }
      else
      {

      }
    }
    else
    {
      v6 = *(id *)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStrokeView];
      objc_msgSend(v6, "removeFromSuperview");

    }
  }
  else
  {
    if (v2)
      objc_msgSend(v2, "removeFromSuperview");
    objc_msgSend(*(id *)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStrokeView], "removeFromSuperview");
  }
}

void sub_1000199B4(void *a1)
{
  void *v1;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (a1)
  {
    objc_msgSend(a1, "displayScale");
    v4 = v3;
  }
  else
  {
    v4 = 0.0;
  }
  v5 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v5, "displayScale");
  v7 = v6;

  if (!a1 || v4 != v7)
    sub_100019EFC();
}

void sub_100019ABC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double *v8;
  double v9;
  double v10;
  double Width;
  double Height;
  double v13;
  id v14;
  CGFloat x;
  CGFloat y;
  CGFloat v17;
  CGFloat v18;
  double MaxX;
  CGFloat v20;
  double MaxY;
  double v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  CGFloat v30;
  double v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGPathRef v40;
  id v41;
  id v42;
  void *v43;
  double v44;
  id v45;
  double v46;
  float64x2_t v47;
  __int128 v48;
  double v49;
  float64x2_t v50;
  __int128 v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;

  v1 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v3, "sizeThatFits:", 0.0, 0.0);
    v6 = v4;
    v7 = v5;
    v8 = (double *)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStyle];
    if (*(_QWORD *)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStyle] < 3uLL || ((_BYTE)v8[3] & 1) != 0)
    {
      if (v4 > v5)
        v10 = v4;
      else
        v10 = v5;
      objc_msgSend(v0, "frame");
      Width = CGRectGetWidth(v52);
      objc_msgSend(v0, "frame");
      Height = CGRectGetHeight(v53);
      if (Width > Height)
        Height = Width;
      v13 = Height / 3.0;
      if (Height / 3.0 >= v10)
      {
        v9 = v6;
      }
      else
      {
        v49 = v10;
        v46 = v6;
        sub_10001B270();
        if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(&v49, &v46) & 1) != 0)
        {
          v7 = v7 / v6 * v13;
          v9 = v13;
        }
        else
        {
          v49 = v10;
          v46 = v7;
          v9 = v6;
          if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(&v49, &v46) & 1) != 0)
          {
            v9 = v6 / v7 * v13;
            v7 = v13;
          }
        }
      }
    }
    else
    {
      v9 = v8[1];
      v7 = v8[2];
    }
    objc_msgSend(v0, "frame", *(_QWORD *)&v46);
    v14 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(v2, "bounds");
    v54.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v14);
    x = v54.origin.x;
    y = v54.origin.y;
    v17 = v54.size.width;
    v18 = v54.size.height;
    MaxX = CGRectGetMaxX(v54);
    v55.origin.x = 0.0;
    v55.origin.y = 0.0;
    v55.size.width = v9;
    v55.size.height = v7;
    v20 = MaxX - CGRectGetWidth(v55);
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = v17;
    v56.size.height = v18;
    MaxY = CGRectGetMaxY(v56);
    v57.origin.y = 0.0;
    v57.origin.x = v20;
    v57.size.width = v9;
    v57.size.height = v7;
    v22 = MaxY - CGRectGetHeight(v57);
    v23 = v3;
    v24 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(v2, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v24, v25, v26, v27, v28, v20, v22, v9, v7);
    objc_msgSend(v23, "setFrame:");

    v29 = *(id *)v8;
    sub_10001B200(*(id *)v8);
    objc_msgSend(v23, "bounds");
    if (v29)
    {
      v34 = v30;
      v35 = v31;
      v36 = v32;
      v37 = v33;
      v38 = CGRectGetWidth(*(CGRect *)&v30) * 0.5;
      v58.origin.x = v34;
      v58.origin.y = v35;
      v58.size.width = v36;
      v58.size.height = v37;
      v39 = CGRectGetHeight(v58) * 0.5;
      v59.origin.x = v34;
      v59.origin.y = v35;
      v59.size.width = v36;
      v59.size.height = v37;
      v40 = CGPathCreateWithRoundedRect(v59, v38, v39, 0);
      sub_10001B210(v29);
      v41 = objc_msgSend(v23, "layer");
      objc_msgSend(v41, "setShadowPath:", v40);

      v42 = *(id *)v8;
      if ((unint64_t)(*(_QWORD *)v8 - 1) <= 1)
      {
        v43 = (void *)objc_opt_self(UIColor);
        sub_10001B200(v42);
        UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)objc_msgSend(v43, "blackColor"), (uint64_t)&v46, 0.2, 3.0, 0.0, 3.0);
        sub_10001B210(v42);
        v44 = v9 / v6;
        if (v9 >= v6)
          v44 = 1.0;
        v49 = v46;
        v50 = vmulq_n_f64(v47, v44);
        v51 = v48;
        v45 = v23;
        sub_10001B220((id *)&v46);
        UIView.shadow.setter((uint64_t)&v49);
        sub_10001B248((id *)&v46);

      }
    }
    sub_100019EFC();

  }
}

void sub_100019EFC()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;

  v1 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStrokeView];
    if (v2)
    {
      v3 = *(void **)&v0[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStyle];
      v4 = v1;
      v13 = v2;
      sub_10001B200(v3);
      v5 = objc_msgSend(v0, "traitCollection");
      objc_msgSend(v5, "displayScale");
      v7 = v6;

      sub_10001B210(v3);
      v8 = 0.0;
      if ((unint64_t)v3 >= 3)
      {
        if (v7 < 1.0)
          v8 = 2.0;
        else
          v8 = 2.0 / v7;
      }
      objc_msgSend(v4, "frame");
      objc_msgSend(v13, "setFrame:", sub_10000FE68(v9, v10, v11, v12, -v8, -v8));

    }
  }
}

id sub_10001A258(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  swift_weakInit(&v1[OBJC_IVAR___MusicArtworkComponentImageView_artworkComponent], 0);
  *(_QWORD *)&v1[OBJC_IVAR___MusicArtworkComponentImageView_accessoryArtworkCatalog] = 0;
  v3 = &v1[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStyle];
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = 0;
  v3[24] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicArtworkComponentImageView_accessoryImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicArtworkComponentImageView_accessoryStrokeView] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_10001A31C()
{
  return sub_10001A518(0, type metadata accessor for ArtworkComponentImageView);
}

uint64_t type metadata accessor for ArtworkComponentImageView()
{
  return objc_opt_self(MusicArtworkComponentImageView);
}

id sub_10001A50C(uint64_t a1)
{
  return sub_10001A518(a1, type metadata accessor for ArtworkComponentVideoView);
}

id sub_10001A518(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ArtworkComponentVideoView()
{
  return objc_opt_self(_TtC16MusicMessagesApp25ArtworkComponentVideoView);
}

id sub_10001A5B8(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  id v9;
  id v10;
  id v11;

  if ((a7 & 1) != 0)
  {
    v9 = a3;
    v10 = a4;
  }
  v11 = a1;
  return a2;
}

void _s9ComponentC7ContentOwxx(uint64_t a1)
{
  sub_10001A610(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

void sub_10001A610(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

    a1 = a2;
  }
  else
  {
    a3 = a2;
  }

}

uint64_t _s9ComponentC7ContentOwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10001A5B8(*(void **)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s9ComponentC7ContentOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10001A5B8(*(void **)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(void **)(a1 + 8);
  v12 = *(void **)(a1 + 16);
  v13 = *(void **)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_10001A610(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 _s9ComponentC7ContentOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s9ComponentC7ContentOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_10001A610(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t _s9ComponentC7ContentOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s9ComponentC7ContentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_10001A86C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_10001A878(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *_s9ComponentC7ContentOMa()
{
  return &_s9ComponentC7ContentON;
}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

void _s9ComponentC26VideoPresentationResetInfoVwxx(id *a1)
{

}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9ComponentC26VideoPresentationResetInfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s9ComponentC26VideoPresentationResetInfoVMa()
{
  return &_s9ComponentC26VideoPresentationResetInfoVN;
}

uint64_t sub_10001AA28(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_10001AA48(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_10001AB18(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000990C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000990C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000970C(v12);
  return v7;
}

uint64_t sub_10001AB18(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10001ACD0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10001ACD0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10001AD64(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_10001AF3C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10001AF3C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10001AD64(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10001AED8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10001AED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_1000057B4(&qword_1004B8070);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10001AF3C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004B8070);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001B088(__int128 *a1, __int128 *a2)
{
  void *v4;
  void *v5;
  unsigned __int8 v6;
  __int128 v7;
  id v8;
  id v9;
  _QWORD v11[7];
  _OWORD v12[3];
  char v13;
  _OWORD v14[3];
  _OWORD v15[3];
  char v16;
  _OWORD v17[3];

  sub_10001AA28(a1, (uint64_t)v11);
  v5 = (void *)v11[0];
  v4 = (void *)v11[1];
  sub_10001AA28(a1, (uint64_t)v15);
  if ((v16 & 1) == 0)
  {
    v7 = v15[0];
    v8 = v5;
    v9 = v4;

    sub_10001AA28(a2, (uint64_t)v12);
    if ((v13 & 1) == 0)
    {
      v6 = objc_msgSend((id)v7, "isArtworkVisuallyIdenticalToCatalog:", *(_QWORD *)&v12[0]);

      return v6 & 1;
    }

    goto LABEL_6;
  }
  v17[0] = v15[0];
  v17[1] = v15[1];
  v17[2] = v15[2];
  sub_10001AA28(a2, (uint64_t)v12);
  if (v13 != 1)
  {
LABEL_6:
    v6 = 0;
    return v6 & 1;
  }
  v14[0] = v12[0];
  v14[1] = v12[1];
  v14[2] = v12[2];
  sub_10001B1C4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001A5B8);
  sub_10001B1C4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001A5B8);
  v6 = static Artwork.Placeholder.__derived_struct_equals(_:_:)(v17, v14);
  sub_10001B1C4((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001A610);
  sub_10001B1C4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001A610);
  return v6 & 1;
}

uint64_t sub_10001B1C4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

id sub_10001B200(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void sub_10001B210(id a1)
{
  if ((unint64_t)a1 >= 3)

}

id *sub_10001B220(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_10001B248(id *a1)
{

  return a1;
}

unint64_t sub_10001B270()
{
  unint64_t result;

  result = qword_1004B8038;
  if (!qword_1004B8038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1004B8038);
  }
  return result;
}

const char *sub_10001B2B4()
{
  return "status";
}

id sub_10001B2C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "status");
  *a2 = result;
  return result;
}

uint64_t sub_10001B2F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001B318()
{
  uint64_t v0;

  sub_100017CF0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

const char *sub_10001B320()
{
  return "reasonForWaitingToPlay";
}

id sub_10001B32C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "reasonForWaitingToPlay");
  *a2 = result;
  return result;
}

uint64_t sub_10001B364()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10001B388()
{
  uint64_t v0;

  sub_100018728(*(void **)(v0 + 16));
}

const char *sub_10001B390()
{
  return "timeControlStatus";
}

id sub_10001B39C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "timeControlStatus");
  *a2 = result;
  return result;
}

void sub_10001B3CC()
{
  uint64_t v0;

  sub_100018B48(v0);
}

const char *sub_10001B3D4()
{
  return "currentItem";
}

id sub_10001B3E0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "currentItem");
  *a2 = result;
  return result;
}

void sub_10001B41C()
{
  uint64_t v0;

  sub_100018CA0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10001B42C(uint64_t a1)
{
  uint64_t v1;

  return sub_100018DEC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_10001B434()
{
  uint64_t v0;

  return sub_100018684(v0);
}

uint64_t sub_10001B44C()
{
  return sub_10001B498(40);
}

void sub_10001B454()
{
  uint64_t v0;

  sub_100016390(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10001B460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001B470(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10001B478()
{
  uint64_t v0;

  sub_100017398(v0);
}

uint64_t sub_10001B490()
{
  return sub_10001B498(32);
}

uint64_t sub_10001B498(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

void sub_10001B4D0()
{
  uint64_t v0;

  sub_100017404(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10001B4DC()
{
  uint64_t v0;

  sub_100017470(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

double sub_10001B4E8(uint64_t a1)
{
  uint64_t v1;

  return sub_100017670(a1, v1);
}

id sub_10001B4F0(id result, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255)
    return sub_10001A5B8(result, a2, a3, a4, a5, a6, a7 & 1);
  return result;
}

uint64_t sub_10001B508(uint64_t a1)
{
  sub_10001B4F0(*(id *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

void sub_10001B540(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255)
    sub_10001A610(a1, a2, a3, a4, a5, a6, a7 & 1);
}

unint64_t sub_10001B558()
{
  unint64_t result;

  result = qword_1004B80C8;
  if (!qword_1004B80C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Artwork.Placeholder, &type metadata for Artwork.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1004B80C8);
  }
  return result;
}

unint64_t sub_10001B59C()
{
  unint64_t result;

  result = qword_1004B80D0;
  if (!qword_1004B80D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Artwork.Placeholder, &type metadata for Artwork.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1004B80D0);
  }
  return result;
}

uint64_t sub_10001B5E0()
{
  id *v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_10001B61C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component__fadeImageView), "setAlpha:", 0.0);
}

id sub_10001B638()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component__fadeImageView);
  objc_msgSend(v1, "setImage:", 0);
  objc_msgSend(v1, "setBackgroundColor:", 0);
  return objc_msgSend(v1, "setHidden:", 1);
}

uint64_t sub_10001B694(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 2;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSpecificRectangle);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v6 == v9 && v8 == v10)
  {
LABEL_15:
    swift_bridgeObjectRelease_n(v8, 2);
    goto LABEL_16;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) == 0)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSquareCenterCrop);
    v8 = v15;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v14 != v16 || v8 != v17)
    {
      v19 = v17;
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v8, v16, v17, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
      {
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleBoundedBox);
        v23 = v22;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v26 = v24;
        if (v21 == v25 && v23 == v24)
        {
          swift_bridgeObjectRelease_n(v23, 2);
        }
        else
        {
          v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
          swift_bridgeObjectRelease(v23);
          swift_bridgeObjectRelease(v26);
          if ((v29 & 1) == 0)
          {
            sub_10000598C(0, &qword_1004B73D8, OS_os_log_ptr);
            v30 = static OS_os_log.default.getter();
            Logger.init(_:)(v30);
            v31 = a1;
            v32 = Logger.logObject.getter(v31);
            v33 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v32, v33))
            {
              v34 = (uint8_t *)swift_slowAlloc(12, -1);
              v35 = swift_slowAlloc(32, -1);
              v43 = (uint64_t)a1;
              v44 = v35;
              *(_DWORD *)v34 = 136446210;
              v42 = v34 + 4;
              v36 = v31;
              v37 = sub_1000057B4(&qword_1004B80D8);
              v38 = String.init<A>(describing:)(&v43, v37);
              v40 = v39;
              v43 = sub_10001AA48(v38, v39, &v44);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v42, v34 + 12);

              swift_bridgeObjectRelease(v40);
              _os_log_impl((void *)&_mh_execute_header, v32, v33, "Falling back to UIView.ContentMode.scaleAspectFit [cropStyle is unsupported] cropStyle=%{public}s", v34, 0xCu);
              v27 = 1;
              swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v35, -1, -1);
              swift_slowDealloc(v34, -1, -1);

              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
              return v27;
            }

            (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            return 1;
          }
        }

        return 1;
      }
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_16:

  return 2;
}

id sub_10001B9FC(id result, void *a2, void *a3, void *a4)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  if (a4)
  {
    v5 = result;
    v6 = a3;
    v7 = a4;
    v8 = v5;
    return a2;
  }
  return result;
}

void sub_10001BA40(void *a1, void *a2, void *a3, void *a4)
{
  if (a4)
  {

  }
}

void sub_10001BA84(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100013FA4(a1, a2, v2);
}

unint64_t sub_10001BA8C()
{
  unint64_t result;

  result = qword_1004B80F0;
  if (!qword_1004B80F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.MediaPlayer, &type metadata for Feature.MediaPlayer);
    atomic_store(result, (unint64_t *)&qword_1004B80F0);
  }
  return result;
}

uint64_t sub_10001BAD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10001BB08(void *a1)
{
  uint64_t v1;

  return sub_1000144F4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10001BB14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10001BB50()
{
  uint64_t v0;

  sub_100014594(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

void sub_10001BB5C(id a1)
{
  if (a1 != (id)1)

}

id sub_10001BBC0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  qword_1004B80F8 = (uint64_t)result;
  return result;
}

id sub_10001BBF8()
{
  if (qword_1004B6E50 != -1)
    swift_once(&qword_1004B6E50, sub_10001BBC0);
  qword_1004F4570 = qword_1004B80F8;
  return (id)qword_1004B80F8;
}

id sub_10001BD94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharingCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SharingCollectionView()
{
  return objc_opt_self(_TtC16MusicMessagesApp21SharingCollectionView);
}

void sub_10001BDE8()
{
  qword_1004B8130 = UIRoundToViewScale(0, 13.5);
}

id sub_10001BE0C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  qword_1004B8138 = (uint64_t)result;
  return result;
}

uint64_t sub_10001BE44()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String_optional v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v0._countAndFlagsBits = 0xD000000000000018;
  v5._countAndFlagsBits = 0xD00000000000006FLL;
  v5._object = (void *)0x80000001003A5600;
  v1._object = (void *)0x80000001003A55C0;
  v0._object = (void *)0x80000001003A55E0;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2.value._countAndFlagsBits = 0;
  v2.value._object = (void *)0xE000000000000000;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)qword_1004F44D8, v0, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004B8140 = (__int128)v4;
  return result;
}

char *sub_10001BEF0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  id v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_launchMusicLabel;
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_10001C944();
  type metadata accessor for NowPlayingIndicatorView();
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v11, "setTintColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());

  v12 = *((_BYTE *)v11 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize);
  *((_BYTE *)v11 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize) = 1;
  if ((v12 & 1) == 0)
    sub_100006670();
  v13 = OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_indicatorView;
  objc_msgSend(v11, "sizeToFit");
  *(_QWORD *)&v10[v13] = v11;
  v14 = &v10[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for LaunchMusicCellView();
  v15 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v16 = objc_msgSend(v15, "contentView");
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_indicatorView]);

  v17 = objc_msgSend(v15, "contentView");
  v18 = *(id *)&v15[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_launchMusicLabel];
  objc_msgSend(v17, "addSubview:", v18);

  return v15;
}

uint64_t sub_10001C0D4()
{
  uint64_t v0;

  return sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler + 8));
}

id sub_10001C114()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for LaunchMusicCellView();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_10001C254()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  unsigned __int8 v4;
  id v5;
  id v6;
  int v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  double v13;
  double Width;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double MinY;
  id v35;
  void *v36;
  double v37;
  double v38;
  CGFloat Height;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  objc_super v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v68.receiver = v0;
  v68.super_class = (Class)type metadata accessor for LaunchMusicCellView();
  objc_msgSendSuper2(&v68, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_indicatorView];
  objc_msgSend(v1, "sizeToFit");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  v4 = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  v7 = v4 & (v6 == (id)1);
  v8 = objc_msgSend(v0, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  v10 = static UIContentSizeCategory.> infix(_:_:)(v9, UIContentSizeCategoryAccessibilityExtraLarge);
  v11 = objc_msgSend(v0, "traitCollection");
  v12 = objc_msgSend(v11, "layoutDirection");

  v13 = 6.0;
  if ((v7 & 1) == 0)
  {
    objc_msgSend(v1, "bounds");
    v13 = CGRectGetWidth(v69) + 6.0;
  }
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v70);
  if (qword_1004B6E60 != -1)
    swift_once(&qword_1004B6E60, sub_10001BDE8);
  v15 = *(double *)&qword_1004B8130;
  v16 = Width - (v15 + v15) - v13;
  v17 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_launchMusicLabel];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v17, "sizeThatFits:", v16, CGRectGetHeight(v71));
  v20 = v19;
  if (v16 >= v18)
    v16 = v18;
  objc_msgSend(v0, "bounds");
  v21 = CGRectGetWidth(v72);
  v22 = UIRoundToViewScale(v0, (v21 - v16 - v13) * 0.5);
  if (v12 == (id)1)
    v23 = -0.0;
  else
    v23 = v13;
  if (v7)
  {
    if ((v10 & 1) == 0 || (objc_msgSend(v0, "bounds"), CGRectGetWidth(v73) > 320.0))
      v15 = 43.0 - v15;
  }
  else
  {
    v24 = objc_msgSend(v17, "font");
    if (!v24)
    {
LABEL_30:
      __break(1u);
      return;
    }
    v25 = v24;
    objc_msgSend(v24, "ascender");
    v27 = v26;

    v15 = 43.0 - UIRoundToViewScale(v0, v27);
  }
  v28 = v23 + v22;
  objc_msgSend(v17, "setFrame:", v28, v15, v16, v20);
  if (v7)
  {
    if (v12 == (id)1)
    {
      objc_msgSend(v1, "frame");
      v28 = v16 + v28 - v29;
    }
  }
  else
  {
    objc_msgSend(v17, "frame");
    if (v12 == (id)1)
      v28 = CGRectGetMaxX(*(CGRect *)&v30) + 6.0;
    else
      v28 = CGRectGetMinX(*(CGRect *)&v30) - v13;
  }
  objc_msgSend(v17, "frame");
  MinY = CGRectGetMinY(v74);
  v35 = objc_msgSend(v17, "font");
  if (!v35)
  {
    __break(1u);
    goto LABEL_30;
  }
  v36 = v35;
  objc_msgSend(v35, "ascender");
  v38 = v37;

  objc_msgSend(v1, "bounds");
  Height = CGRectGetHeight(v75);
  v40 = MinY + UIRoundToViewScale(v0, v38 - Height);
  objc_msgSend(v1, "frame");
  objc_msgSend(v1, "setFrame:", v28, v40);
  if (v7)
  {
    objc_msgSend(v1, "bounds");
    v41 = CGRectGetWidth(v76);
    sub_10001CB1C(v13 + v41);
  }
  else
  {
    sub_10001CB1C(0.0);
    if ((v4 & 1) != 0 || (uint64_t)objc_msgSend(v17, "_measuredNumberOfLines") >= 2)
    {
      objc_msgSend(v17, "frame");
      v43 = v42;
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v50 = objc_msgSend(v0, "bounds");
      UIRectCenteredYInRect(v50, v43, v45, v47, v49, v51, v52, v53, v54);
      objc_msgSend(v17, "setFrame:");
      objc_msgSend(v1, "frame");
      v56 = v55;
      v58 = v57;
      v60 = v59;
      v62 = v61;
      v63 = objc_msgSend(v0, "bounds");
      UIRectCenteredYInRect(v63, v56, v58, v60, v62, v64, v65, v66, v67);
      objc_msgSend(v1, "setFrame:");
    }
  }
}

id sub_10001C780(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id result;
  void (*v15)(char *);
  uint64_t v16;
  objc_super v17;

  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for LaunchMusicCellView();
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if (!a1)
  {

LABEL_9:
    result = objc_msgSend(v1, "setNeedsLayout");
    v15 = *(void (**)(char *))&v1[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler];
    if (v15)
    {
      v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler + 8];
      swift_retain(v16);
      v15(v1);
      return (id)sub_10000DCF8((uint64_t)v15, v16);
    }
    return result;
  }
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {

    return (id)swift_bridgeObjectRelease_n(v8, 2);
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

  swift_bridgeObjectRelease(v8);
  result = (id)swift_bridgeObjectRelease(v12);
  if ((v13 & 1) == 0)
    goto LABEL_9;
  return result;
}

id sub_10001C944()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  double v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = v0;
  v2 = (void *)static UIContentSizeCategory.default.getter();
  objc_msgSend(v1, "setMinimumContentSizeCategory:", v2);

  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v1, "setFont:", v3);

  if (qword_1004B6E68 != -1)
    swift_once(&qword_1004B6E68, sub_10001BE0C);
  objc_msgSend(v1, "setTextColor:", qword_1004B8138);
  if (qword_1004B6E70 != -1)
    swift_once(&qword_1004B6E70, sub_10001BE44);
  v4 = *((_QWORD *)&xmmword_1004B8140 + 1);
  v5 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend(v5, "initWithString:", v6);

  objc_msgSend(v1, "setAttributedText:", v7);
  objc_msgSend(v1, "setNumberOfLines:", 0);
  objc_msgSend(v1, "setLineBreakMode:", 0);
  LODWORD(v8) = 0.5;
  objc_msgSend(v1, "_setHyphenationFactor:", v8);
  return v1;
}

void sub_10001CB1C(double a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  id v5;
  NSString v6;
  __int128 v7;
  id v8;
  id v9;

  v3 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v3, "setFirstLineHeadIndent:", a1);
  if (qword_1004B6E70 != -1)
    swift_once(&qword_1004B6E70, sub_10001BE44);
  v4 = *((_QWORD *)&xmmword_1004B8140 + 1);
  v5 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v9 = objc_msgSend(v5, "initWithString:", v6);

  v7 = xmmword_1004B8140;
  v8 = v3;
  objc_msgSend(v9, "addAttribute:value:range:", NSParagraphStyleAttributeName, v8, 0, String.count.getter(v7, *((_QWORD *)&v7 + 1)));

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_launchMusicLabel), "setAttributedText:", v9);
}

uint64_t type metadata accessor for LaunchMusicCellView()
{
  return objc_opt_self(_TtC16MusicMessagesApp19LaunchMusicCellView);
}

uint64_t sub_10001CCA0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char v4;
  uint64_t v5;
  char *v6;
  uint64_t result;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_launchMusicLabel;
  *(_QWORD *)&v1[v2] = sub_10001C944();
  type metadata accessor for NowPlayingIndicatorView();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v3, "setTintColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());

  v4 = *((_BYTE *)v3 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize);
  *((_BYTE *)v3 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_levelsScaleWithTextSize) = 1;
  if ((v4 & 1) == 0)
    sub_100006670();
  v5 = OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_indicatorView;
  objc_msgSend(v3, "sizeToFit");
  *(_QWORD *)&v1[v5] = v3;
  v6 = &v1[OBJC_IVAR____TtC16MusicMessagesApp19LaunchMusicCellView_layoutInvalidationHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003A4070, "MusicMessagesApp/LaunchMusicCellView.swift", 42, 2, 31, 0);
  __break(1u);
  return result;
}

UIImage __swiftcall UIImage.applying(tintColor:)(UIColor tintColor)
{
  void *v1;
  id v2;
  id v3;

  v2 = objc_msgSend(v1, "flattenedImageWithColor:", tintColor.super.isa);
  v3 = objc_msgSend(v2, "imageWithRenderingMode:", 1);

  return (UIImage)v3;
}

void static UIImage.stretchableImage(filledWith:cornerRadius:)(void *a1, double a2)
{
  double v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  char isEscapingClosureAtFileLocation;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  id v26;
  __int128 v27;

  __asm { FMOV            V0.2D, #1.0 }
  v27 = _Q0;
  v9 = 1.0;
  if (a2 > 0.0)
  {
    v9 = a2 + a2 + 1.0;
    *(double *)&v27 = v9;
    *((double *)&v27 + 1) = v9;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v11, "scale");
  v13 = v12;

  objc_msgSend(v10, "setScale:", v13);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v10, v9, v9);
  v26 = 0;
  v15 = swift_allocObject(&unk_100465758, 48, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = &v27;
  *(double *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = &v26;
  v16 = swift_allocObject(&unk_100465780, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_10001D29C;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_10001122C;
  v25 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001D2BC;
  aBlock[3] = &unk_100465798;
  v17 = _Block_copy(aBlock);
  v18 = v25;
  v19 = a1;
  swift_retain(v16);

  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 82, 324, 41, 1, v20);
  swift_release(v16);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v26)
  {

    goto LABEL_10;
  }
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
    goto LABEL_12;
  if (a2 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < 9.22337204e18)
  {
    v22 = v26;
    objc_msgSend(v22, "stretchableImageWithLeftCapWidth:topCapHeight:", (uint64_t)a2, (uint64_t)a2);

LABEL_10:
    v23 = v26;
    swift_release(v15);

    return;
  }
LABEL_14:
  __break(1u);
}

void sub_10001D0B4(void *a1, void *a2, double *a3, void **a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  CGContext *v14;
  id v15;
  CGColor *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  const CGPath *v21;
  CGContext *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;

  v10 = type metadata accessor for CGPathFillRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (CGContext *)objc_msgSend(a1, "CGContext");
  v15 = objc_msgSend(objc_retainAutorelease(a2), "cgColor");
  if (v15)
  {
    v16 = (CGColor *)v15;
    CGContextSetFillColorWithColor(v14, v16);

    v17 = *a3;
    v18 = a3[1];
    if (a5 <= 0.0)
    {
      objc_msgSend(a1, "fillRect:", 0.0, 0.0, v17, v18);
    }
    else
    {
      v19 = 0;
      v20 = 0;
      v21 = CGPathCreateWithRoundedRect(*(CGRect *)(&v17 - 2), a5, a5, 0);
      v22 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextAddPath(v22, v21);

      v23 = objc_msgSend(a1, "CGContext");
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for CGPathFillRule.winding(_:), v10);
      CGContextRef.fillPath(using:)(v13);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    v24 = objc_msgSend(a1, "currentImage");
    v25 = *a4;
    *a4 = v24;

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001D278()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10001D29C(void *a1)
{
  uint64_t v1;

  sub_10001D0B4(a1, *(void **)(v1 + 16), *(double **)(v1 + 24), *(void ***)(v1 + 40), *(CGFloat *)(v1 + 32));
}

uint64_t sub_10001D2AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10001D2BC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_10001D2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001D300(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *type metadata accessor for NowPlayingInformation()
{
  return &type metadata for NowPlayingInformation;
}

uint64_t sub_10001D318(void *a1)
{
  uint64_t result;
  id v3;
  char v4;
  id v5;
  char v6;

  if (sub_10001D710(a1))
    return 0;
  result = kMRMediaRemoteNowPlayingInfoIsMusicApp;
  if (!kMRMediaRemoteNowPlayingInfoIsMusicApp)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if ((sub_10001D65C(kMRMediaRemoteNowPlayingInfoIsMusicApp, a1) & 1) == 0)
    return 0;
  result = kMRMediaRemoteNowPlayingInfoIsAdvertisement;
  if (!kMRMediaRemoteNowPlayingInfoIsAdvertisement)
    goto LABEL_19;
  if ((sub_10001D65C(kMRMediaRemoteNowPlayingInfoIsAdvertisement, a1) & 1) != 0)
    return 0;
  result = kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier;
  if (!kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier)
    goto LABEL_20;
  v3 = sub_10001D7EC(kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier, a1);
  if ((v4 & 1) == 0 && v3)
    return 1;
  result = kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier;
  if (!kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier)
    goto LABEL_21;
  v5 = sub_10001D7EC(kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier, a1);
  return (v6 & 1) == 0 && v5 != 0;
}

void *sub_10001D3D8(void *a1)
{
  return sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoTitle);
}

void *sub_10001D3E4(void *a1)
{
  return sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoArtist);
}

void *sub_10001D3F0(void *a1)
{
  return sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoAlbum);
}

void *sub_10001D3FC(void *result, _QWORD *a2)
{
  id v2;
  id v3;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (*a2)
  {
    v2 = objc_msgSend(result, "objectForKey:");
    if (v2)
    {
      v3 = v2;
      _bridgeAnyObjectToAny(_:)(v2);
      swift_unknownObjectRelease(v3);
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_100005904((uint64_t)v5, (uint64_t)v6);
    if (v7)
    {
      if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
        return (void *)v4;
      else
        return 0;
    }
    else
    {
      sub_10000594C((uint64_t)v6);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_10001D4BC(void *result)
{
  id v1;
  id v2;
  uint64_t v3;
  _OWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  if (kMRMediaRemoteNowPlayingInfoArtworkData)
  {
    v1 = objc_msgSend(result, "objectForKey:");
    if (v1)
    {
      v2 = v1;
      _bridgeAnyObjectToAny(_:)(v1);
      swift_unknownObjectRelease(v2);
    }
    else
    {
      memset(v4, 0, sizeof(v4));
    }
    sub_100005904((uint64_t)v4, (uint64_t)v5);
    if (v6)
    {
      if (swift_dynamicCast(&v3, v5, (char *)&type metadata for Any + 8, &type metadata for Data, 6))
        return (void *)v3;
      else
        return 0;
    }
    else
    {
      sub_10000594C((uint64_t)v5);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_10001D588(void *result)
{
  id v1;
  id v2;
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned int v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  if (kMRMediaRemoteNowPlayingInfoPlaybackRate)
  {
    v1 = objc_msgSend(result, "objectForKey:");
    if (v1)
    {
      v2 = v1;
      _bridgeAnyObjectToAny(_:)(v1);
      swift_unknownObjectRelease(v2);
    }
    else
    {
      memset(v7, 0, sizeof(v7));
    }
    sub_100005904((uint64_t)v7, (uint64_t)v8);
    if (v9)
    {
      v3 = swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, &type metadata for Float, 6);
      v4 = v6;
      v5 = v3 ^ 1;
      if (!v3)
        v4 = 0;
    }
    else
    {
      sub_10000594C((uint64_t)v8);
      v4 = 0;
      v5 = 1;
    }
    v8[0] = v5;
    return (void *)(v4 | ((unint64_t)v5 << 32));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001D65C(uint64_t a1, id a2)
{
  id v2;
  id v3;
  uint64_t result;
  unsigned __int8 v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v2 = objc_msgSend(a2, "objectForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100005904((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    result = swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v5;
  }
  else
  {
    sub_10000594C((uint64_t)v7);
    return 0;
  }
  return result;
}

BOOL sub_10001D710(void *a1)
{
  void *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoTitle);
  if (v3)
  {
    v4 = (unint64_t)v2;
    v5 = v3;
    swift_bridgeObjectRelease(v3);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v4 & 0xFFFFFFFFFFFFLL;
    if (v6)
      return 0;
  }
  v7 = sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoArtist);
  if (v8)
  {
    v9 = (unint64_t)v7;
    v10 = v8;
    swift_bridgeObjectRelease(v8);
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v9 & 0xFFFFFFFFFFFFLL;
    if (v11)
      return 0;
  }
  v13 = sub_10001D3FC(a1, &kMRMediaRemoteNowPlayingInfoAlbum);
  if (!v14)
    return 1;
  v15 = (unint64_t)v13;
  v16 = v14;
  swift_bridgeObjectRelease(v14);
  v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0)
    v17 = v15 & 0xFFFFFFFFFFFFLL;
  return v17 == 0;
}

id sub_10001D7EC(uint64_t a1, id a2)
{
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  id v6;
  id v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend(a2, "objectForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_100005904((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_10000594C((uint64_t)v10);
    return 0;
  }
  v4 = sub_10001D8C8();
  if ((swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v8;
  v6 = objc_msgSend(v8, "longLongValue");

  return v6;
}

unint64_t sub_10001D8C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B73F0;
  if (!qword_1004B73F0)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004B73F0);
  }
  return result;
}

void sub_10001D904()
{
  qword_1004B8190 = UIRoundToViewScale(0, 13.5);
}

uint64_t sub_10001D928()
{
  uint64_t result;

  sub_10001FEB4();
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption2, UIFontWeightSemibold);
  qword_1004B8198 = result;
  return result;
}

id sub_10001D970(uint64_t a1)
{
  return sub_1000112D4(a1, (SEL *)&selRef_labelColor, &qword_1004B81A0);
}

id sub_10001D984(uint64_t a1)
{
  return sub_10001DA0C(a1, &qword_1004B81A8);
}

id sub_10001D990(uint64_t a1)
{
  return sub_1000112D4(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1004B81B0);
}

id sub_10001D9A4()
{
  if (qword_1004B6E90 != -1)
    swift_once(&qword_1004B6E90, sub_10001D984);
  qword_1004B81B8 = qword_1004B81A8;
  return (id)qword_1004B81A8;
}

id sub_10001D9EC(uint64_t a1)
{
  return sub_1000112D4(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1004B81C0);
}

id sub_10001DA00(uint64_t a1)
{
  return sub_10001DA0C(a1, &qword_1004B81C8);
}

id sub_10001DA0C(uint64_t a1, _QWORD *a2)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  *a2 = result;
  return result;
}

uint64_t sub_10001DA58()
{
  Swift::String v0;
  Swift::String_optional v1;
  Swift::String v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v5._countAndFlagsBits = 0xD000000000000059;
  v5._object = (void *)0x80000001003A5830;
  v0._object = (void *)0x80000001003A5810;
  v0._countAndFlagsBits = 0xD000000000000015;
  v1.value._countAndFlagsBits = 0;
  v1.value._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 0x59414C5020574F4ELL;
  v2._object = (void *)0xEB00000000474E49;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, v1, (NSBundle)qword_1004F44D8, v2, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004B81D0 = (__int128)v4;
  return result;
}

id sub_10001DB24(uint64_t a1, uint64_t a2)
{
  return sub_10001DCE8(a1, a2, &OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel);
}

id sub_10001DBE0(char *a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  char *v4;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  NSString v9;

  v3 = *(void **)&a1[*a3];
  v4 = a1;
  v5 = objc_msgSend(v3, "text");
  if (v5)
  {
    v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {

    v8 = 0xE000000000000000;
  }
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  return v9;
}

void sub_10001DC7C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

}

id sub_10001DCDC(uint64_t a1, uint64_t a2)
{
  return sub_10001DCE8(a1, a2, &OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel);
}

id sub_10001DCE8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v13;
  NSString v14;

  v6 = *(void **)&v3[*a3];
  v7 = objc_msgSend(v6, "text");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

    if (v9 != a1)
      goto LABEL_7;
  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
    if (a1)
      goto LABEL_7;
  }
  if (v11 == a2)
    return (id)swift_bridgeObjectRelease_n(a2, 2);
LABEL_7:
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a1, a2, 0);
  swift_bridgeObjectRelease(v11);
  if ((v13 & 1) != 0)
    return (id)swift_bridgeObjectRelease(a2);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v6, "setText:", v14);

  return objc_msgSend(v3, "setNeedsLayout");
}

void sub_10001DEEC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  _QWORD *v44;
  uint64_t *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  void (*v73)(__n128);
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  void *v77;
  char *v78;
  id v79;
  objc_class *v80;
  char *v81;
  void *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  NSString v88;
  void *v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  NSString v106;
  void *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  uint64_t v114;
  id v115;
  void *v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  id v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void (**v136)();
  uint64_t v137;
  uint64_t v138;
  _BYTE v139[4];
  int v140;
  void *v141;
  id v142;
  _BYTE *v143;
  id v144;
  id v145;
  id v146;
  char *v147;
  uint64_t v148;
  char *v149;
  void *v150;
  uint64_t v151;
  void *v152;
  void *v153;
  void *v154;
  char v155[24];
  objc_super v156;
  char v157[24];
  _QWORD v158[6];
  _QWORD v159[6];

  v5 = v4;
  v10 = sub_1000057B4(&qword_1004B8018);
  v11 = __chkstk_darwin(v10);
  v13 = &v139[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v139[-v14];
  v16 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent] = 0;
  v17 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel;
  v18 = objc_allocWithZone((Class)UILabel);
  v19 = v4;
  *(_QWORD *)&v4[v17] = objc_msgSend(v18, "init");
  v20 = &v19[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView;
  type metadata accessor for NowPlayingIndicatorView();
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v22 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView;
  *(_QWORD *)&v19[v22] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel;
  *(_QWORD *)&v19[v23] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v24 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel;
  *(_QWORD *)&v19[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel;
  *(_QWORD *)&v19[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  type metadata accessor for ArtworkComponentImageView();
  v26 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v27 = _s9ComponentCMa(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = sub_100011FFC(v26);
  v29 = *(_QWORD *)&v4[v16];
  *(_QWORD *)&v4[v16] = v28;
  swift_release(v29);
  v30 = *(_QWORD *)&v4[v16];
  if (!v30)
  {
    __break(1u);
    goto LABEL_36;
  }
  swift_retain(*(_QWORD *)&v5[v16]);
  v31 = UIView.Border.artwork.unsafeMutableAddressor();
  v32 = *v31;
  v33 = *((unsigned __int8 *)v31 + 8);
  v34 = (void *)v31[2];
  v35 = v34;
  sub_100012B7C(v32, v33, v34);
  swift_release(v30);
  v36 = *(_QWORD *)&v5[v16];
  if (!v36)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_retain(*(_QWORD *)&v5[v16]);
  v37 = UIView.Corner.small.unsafeMutableAddressor();
  v38 = type metadata accessor for UIView.Corner(0);
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v39 + 16))(v15, v37, v38);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v38);
  v40 = v36 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  swift_beginAccess(v36 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, v157, 0, 0);
  sub_10001FD8C(v40, (uint64_t)v13);
  swift_beginAccess(v40, v159, 33, 0);
  sub_10001FDD4((uint64_t)v15, v40);
  swift_endAccess(v159);
  sub_1000128FC((uint64_t)v13);
  sub_10001FE1C((uint64_t)v15);
  sub_10001FE1C((uint64_t)v13);
  swift_release(v36);
  v41 = *(_QWORD *)&v5[v16];
  if (!v41)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v147 = v19;
  v143 = v15;
  v42 = *(double *)(v41 + 112);
  v43 = *(double *)(v41 + 120);
  *(int64x2_t *)(v41 + 112) = vdupq_n_s64(0x4048000000000000uLL);
  swift_retain(v41);
  sub_100012820(v42, v43);
  swift_release(v41);
  v149 = v5;
  v148 = v16;
  v44 = *(_QWORD **)&v5[v16];
  if (!v44)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_retain(*(_QWORD *)&v5[v16]);
  v45 = Artwork.Placeholder.music.unsafeMutableAddressor();
  v46 = (void *)*v45;
  v47 = (void *)v45[1];
  v48 = (void *)v45[2];
  v49 = (void *)v45[3];
  v50 = (void *)v44[23];
  v51 = (void *)v44[24];
  v52 = (void *)v44[25];
  v150 = (void *)v44[26];
  v53 = v44[27];
  v54 = v44[28];
  v55 = *((_OWORD *)v45 + 2);
  v44[23] = v46;
  v44[24] = v47;
  v44[25] = v48;
  v44[26] = v49;
  *(_OWORD *)(v44 + 27) = v55;
  v56 = v48;
  v57 = v49;
  v58 = v46;
  v59 = v47;
  v146 = v56;
  v145 = v57;
  v60 = v58;
  v61 = v54;
  v62 = v150;
  v144 = v60;
  v63 = v59;
  sub_10001B9FC(v50, v51, v52, v62);
  v152 = v50;
  v154 = v51;
  v153 = v52;
  v151 = v53;
  sub_10001BA40(v50, v51, v52, v62);
  v65 = (void *)v44[23];
  v64 = (void *)v44[24];
  v66 = (void *)v44[25];
  v67 = (void *)v44[26];
  v69 = v44[27];
  v68 = v44[28];
  if (v62)
  {
    if (v67)
    {
      v159[0] = v44[23];
      v159[1] = v64;
      v159[2] = v66;
      v159[3] = v67;
      v159[4] = v69;
      v159[5] = v68;
      v158[0] = v152;
      v158[1] = v154;
      v142 = v63;
      v70 = v153;
      v158[2] = v153;
      v158[3] = v62;
      v158[4] = v151;
      v158[5] = v61;
      sub_10001B9FC(v152, v154, v153, v62);
      sub_10001B9FC(v65, v64, v66, v67);
      v140 = static Artwork.Placeholder.__derived_struct_equals(_:_:)(v158, v159);
      sub_10001BA40(v65, v64, v66, v67);
      v71 = v70;
      v63 = v142;
      sub_10001BA40(v152, v154, v71, v62);
      if ((v140 & 1) != 0)
        goto LABEL_13;
      goto LABEL_11;
    }
  }
  else if (!v67)
  {
    goto LABEL_13;
  }
  v72 = v152;
  v141 = (void *)v44[24];
  v142 = v63;
  sub_10001B9FC(v152, v154, v153, v62);
  sub_10001B9FC(v65, v64, v66, v67);
  v62 = v150;
  v63 = v142;
  sub_10001BA40(v72, v154, v153, v150);
  sub_10001BA40(v65, v141, v66, v67);
LABEL_11:
  v73 = *(void (**)(__n128))((char *)v44
                                      + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
  if (v73)
  {
    v74 = *(_QWORD *)((char *)v44
                    + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                    + 8);
    v75 = swift_retain(v74);
    v73(v75);
    sub_10000DCF8((uint64_t)v73, v74);
  }
LABEL_13:

  sub_10001BA40(v152, v154, v153, v62);
  swift_release(v44);
  v76 = *(_QWORD *)&v149[v148];
  if (!v76)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v77 = *(void **)(v76 + 144);
  v78 = v147;
  *(_QWORD *)&v147[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artworkView] = v77;
  v79 = v77;

  v80 = (objc_class *)type metadata accessor for TrackCellView();
  v156.receiver = v78;
  v156.super_class = v80;
  v81 = (char *)objc_msgSendSuper2(&v156, "initWithFrame:", a1, a2, a3, a4);
  v82 = (void *)static UIContentSizeCategory.default.getter();
  objc_msgSend(v81, "setMinimumContentSizeCategory:", v82);

  v83 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel;
  v84 = *(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel];
  objc_msgSend(v84, "setTextColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());

  v85 = qword_1004B6EB8;
  v86 = *(id *)&v81[v83];
  if (v85 != -1)
    swift_once(&qword_1004B6EB8, sub_10001DA58);
  v87 = *((_QWORD *)&xmmword_1004B81D0 + 1);
  swift_bridgeObjectRetain();
  v88 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v87);
  objc_msgSend(v86, "setText:", v88);

  v89 = *(void **)&v81[v83];
  objc_msgSend(v89, "setHidden:", 1);
  v90 = qword_1004B6E40;
  v91 = v89;
  if (v90 != -1)
    swift_once(&qword_1004B6E40, sub_100011314);
  objc_msgSend(v91, "setBackgroundColor:", qword_1004F44E8);

  v92 = *(void **)&v81[v83];
  objc_msgSend(v92, "setAdjustsFontForContentSizeCategory:", 1);
  v93 = qword_1004B6E80;
  v94 = v92;
  if (v93 != -1)
    swift_once(&qword_1004B6E80, sub_10001D928);
  objc_msgSend(v94, "setFont:", qword_1004B8198);

  v95 = OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView;
  objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView], "addSubview:", *(_QWORD *)&v81[v83]);
  v96 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel;
  v97 = qword_1004B6E88;
  v98 = *(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel];
  if (v97 != -1)
    swift_once(&qword_1004B6E88, sub_10001D970);
  objc_msgSend(v98, "setTextColor:", qword_1004B81A0);

  v99 = *(void **)&v81[v96];
  objc_msgSend(v99, "setAllowsDefaultTighteningForTruncation:", 1);
  objc_msgSend(v99, "setBackgroundColor:", qword_1004F44E8);
  objc_msgSend(v99, "setAdjustsFontForContentSizeCategory:", 1);
  v100 = qword_1004B6E90;
  v101 = v99;
  if (v100 != -1)
    swift_once(&qword_1004B6E90, sub_10001D984);
  objc_msgSend(v101, "setFont:", qword_1004B81A8);

  objc_msgSend(*(id *)&v81[v95], "addSubview:", *(_QWORD *)&v81[v96]);
  v102 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel;
  v103 = qword_1004B6EA8;
  v104 = *(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel];
  if (v103 != -1)
    swift_once(&qword_1004B6EA8, sub_10001D9EC);
  objc_msgSend(v104, "setTextColor:", qword_1004B81C0);

  v105 = *(id *)&v81[v102];
  v106 = String._bridgeToObjectiveC()();
  objc_msgSend(v105, "setText:", v106);

  v107 = *(void **)&v81[v102];
  objc_msgSend(v107, "sizeToFit");
  objc_msgSend(v107, "setHidden:", 0);
  objc_msgSend(v107, "setBackgroundColor:", qword_1004F44E8);
  objc_msgSend(v107, "setAdjustsFontForContentSizeCategory:", 1);
  v108 = qword_1004B6EB0;
  v109 = v107;
  if (v108 != -1)
    swift_once(&qword_1004B6EB0, sub_10001DA00);
  objc_msgSend(v109, "setFont:", qword_1004B81C8);

  objc_msgSend(*(id *)&v81[v95], "addSubview:", *(_QWORD *)&v81[v102]);
  v110 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel;
  v111 = qword_1004B6E98;
  v112 = *(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel];
  if (v111 != -1)
    swift_once(&qword_1004B6E98, sub_10001D990);
  objc_msgSend(v112, "setTextColor:", qword_1004B81B0);

  v113 = *(void **)&v81[v110];
  objc_msgSend(v113, "setAllowsDefaultTighteningForTruncation:", 1);
  objc_msgSend(v113, "setBackgroundColor:", qword_1004F44E8);
  objc_msgSend(v113, "setAdjustsFontForContentSizeCategory:", 1);
  v114 = qword_1004B6EA0;
  v115 = v113;
  if (v114 != -1)
    swift_once(&qword_1004B6EA0, sub_10001D9A4);
  objc_msgSend(v115, "setFont:", qword_1004B81B8);

  v116 = *(void **)&v81[v95];
  objc_msgSend(v116, "addSubview:", *(_QWORD *)&v81[v110]);
  objc_msgSend(v116, "addSubview:", *(_QWORD *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artworkView]);
  v117 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView;
  v118 = *(void **)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView];
  v119 = (void *)objc_opt_self(UIColor);
  v120 = v118;
  v121 = objc_msgSend(v119, "blackColor");
  objc_msgSend(v120, "setBackgroundColor:", v121);

  v122 = *(void **)&v81[v117];
  objc_msgSend(v122, "setAlpha:", 0.3);
  v123 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent;
  v124 = *(_QWORD *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent];
  if (!v124)
    goto LABEL_40;
  v125 = v124 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment;
  swift_beginAccess(v124 + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_cornerTreatment, v155, 0, 0);
  v126 = v125;
  v127 = (uint64_t)v143;
  sub_10001FD8C(v126, (uint64_t)v143);
  v128 = v122;
  UIView.corner.setter(v127);

  v129 = *(void **)&v81[v117];
  objc_msgSend(v129, "setHidden:", 1);
  objc_msgSend(*(id *)&v81[v95], "addSubview:", v129);
  v130 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView;
  v131 = *(id *)&v81[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView];
  v132 = objc_msgSend(v119, "whiteColor");
  objc_msgSend(v131, "setTintColor:", v132);

  v133 = *(void **)&v81[v130];
  objc_msgSend(v133, "sizeToFit");
  objc_msgSend(v133, "setHidden:", 1);
  objc_msgSend(*(id *)&v81[v95], "addSubview:", v133);
  v134 = *(_QWORD *)&v81[v123];
  if (v134)
  {
    swift_retain(*(_QWORD *)&v81[v123]);

    v135 = swift_allocObject(&unk_1004657F8, 24, 7);
    swift_unknownObjectUnownedInit(v135 + 16, v81);
    v136 = (void (**)())(v134
                       + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    v137 = *(_QWORD *)(v134
                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler);
    v138 = *(_QWORD *)(v134
                     + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_requiresContentsAndLayoutUpdateHandler
                     + 8);
    *v136 = sub_10001FE80;
    v136[1] = (void (*)())v135;
    sub_10000DCF8(v137, v138);
    swift_release(v134);
    return;
  }
LABEL_41:
  __break(1u);
}

void sub_10001ED14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent));

  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler + 8));
}

id sub_10001EDB4()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TrackCellView();
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_10001EF54()
{
  char *v0;
  char *v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for TrackCellView();
  objc_msgSendSuper2(&v8, "prepareForReuse");
  sub_10001DB24(0, 0xE000000000000000);
  result = sub_10001DCDC(0, 0xE000000000000000);
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent];
  if (v3)
  {
    objc_msgSend(*(id *)(v3 + 144), "clearArtworkCatalogs", swift_retain(v3).n128_f64[0]);
    *(_QWORD *)(v3
              + OBJC_IVAR____TtCE16MusicMessagesAppV11MusicCoreUI7Artwork9Component_representationsUpdatedFromConfigurationBlock) = 0;
    v4 = *(_QWORD *)(v3 + 240);
    *(_QWORD *)(v3 + 232) = 0;
    *(_QWORD *)(v3 + 240) = 0;
    swift_release(v3);
    swift_bridgeObjectRelease(v4);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artworkView], "setImage:", 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel], "setHidden:", 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView], "setHidden:", 1);
    v5 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView];
    objc_msgSend(v5, "setHidden:", 1);
    objc_msgSend(v1, "setNeedsLayout");
    v6 = *((_BYTE *)v5 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped);
    *((_BYTE *)v5 + OBJC_IVAR____TtC16MusicMessagesApp23NowPlayingIndicatorView_isStopped) = 1;
    if ((v6 & 1) == 0)
      sub_1000068CC();
    v7 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel];
    result = objc_msgSend(v7, "isHidden");
    if ((result & 1) == 0)
    {
      objc_msgSend(v7, "setHidden:", 1);
      return objc_msgSend(v1, "setNeedsLayout");
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001F118()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  char **v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  char v16;
  id v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double MaxX;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  void *v33;
  unsigned __int8 v34;
  id v35;
  void *v36;
  id v37;
  double v38;
  void *v39;
  id v40;
  double v41;
  double v42;
  id v43;
  double v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  void *v54;
  CGFloat v55;
  double v56;
  double v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  void *v64;
  double v65;
  double v66;
  double v67;
  double MinX;
  unsigned int v69;
  double v70;
  double v71;
  double v72;
  id v73;
  void *v74;
  double v75;
  double v76;
  id v77;
  void *v78;
  double v79;
  double v80;
  void *v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  double v86;
  double v87;
  double v88;
  CGFloat v89;
  double v90;
  double v91;
  double v92;
  double v93;
  CGFloat v94;
  CGFloat v95;
  double v96;
  CGFloat rect;
  double recta;
  double v99;
  double v100[6];
  objc_super v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;

  v1 = v0;
  v101.receiver = v0;
  v101.super_class = (Class)type metadata accessor for TrackCellView();
  objc_msgSendSuper2(&v101, "layoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "layoutDirection");

  v4 = &selRef_startWithCompletionHandler_;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp15PlatterCellView_platterView], "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v1, "traitCollection");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  v15 = (void *)static UIContentSizeCategory.default.getter();
  v16 = static UIContentSizeCategory.> infix(_:_:)(v14, v15);

  v17 = objc_msgSend(v1, "traitCollection");
  v18 = objc_msgSend(v17, "preferredContentSizeCategory");

  v19 = UIContentSizeCategory.isAccessibilityCategory.getter(v18);
  v20 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent;
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent];
  if (!v21)
  {
    __break(1u);
    goto LABEL_50;
  }
  swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent]);
  v22 = sub_100012C80(0, 0, 1);
  v24 = v23;
  swift_release(v21);
  if (v3 == (id)1)
  {
    v102.origin.x = v6;
    v102.origin.y = v8;
    v102.size.width = v10;
    v102.size.height = v12;
    MaxX = CGRectGetMaxX(v102);
    if (qword_1004B6E78 != -1)
      v25 = swift_once(&qword_1004B6E78, sub_10001D904);
    v27 = *(double *)&qword_1004B8190;
    v28 = MaxX - *(double *)&qword_1004B8190 - v22;
    if ((v16 & 1) == 0)
    {
LABEL_6:
      v99 = v22;
      goto LABEL_11;
    }
  }
  else
  {
    if (qword_1004B6E78 != -1)
      v25 = swift_once(&qword_1004B6E78, sub_10001D904);
    v27 = *(double *)&qword_1004B8190;
    v28 = *(double *)&qword_1004B8190;
    if ((v16 & 1) == 0)
      goto LABEL_6;
  }
  v28 = UIRectCenteredYInRect(v25, v28, v27, v22, v24, v6, v8, v10, v12);
  v27 = v29;
  v99 = v30;
  v24 = v31;
LABEL_11:
  v32 = *(_QWORD *)&v1[v20];
  if (!v32)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v95 = v12;
  rect = v10;
  v94 = v8;
  swift_retain(v32);
  sub_1000132E8(v28, v27, v99, v24);
  swift_release(v32);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView], "setCenter:", CGRect.center.getter(v28, v27, v99, v24));
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView], "setFrame:", v28, v27, v99, v24);
  v33 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel];
  v34 = objc_msgSend(v33, "isHidden");
  v35 = objc_msgSend(v1, "traitCollection");
  v36 = v35;
  v88 = v28;
  if ((v34 & 1) != 0)
  {
    v37 = objc_msgSend(v35, "displayScale");
    v93 = UIRoundToScale(v37, 34.5, v38);
    v39 = (void *)objc_opt_self(UIFontMetrics);
    v40 = objc_msgSend(v39, "defaultMetrics");
    objc_msgSend(v40, "scaledValueForValue:compatibleWithTraitCollection:", v36, 34.5);
    v42 = v41;

    v43 = objc_msgSend(v36, "displayScale");
    v92 = UIRoundToScale(v43, v42, v44);
    v4 = &selRef_startWithCompletionHandler_;
    v45 = objc_msgSend(v39, "defaultMetrics");
    v91 = 51.0;
    objc_msgSend(v45, "scaledValueForValue:compatibleWithTraitCollection:", v36);
    v90 = v46;

    v47 = 0.0;
    v36 = v45;
    v48 = 0.0;
  }
  else
  {
    sub_10001FB04(v35, v100);
    v47 = v100[0];
    v48 = v100[3];
    v92 = v100[4];
    v93 = v100[1];
    v90 = v100[5];
    v91 = v100[2];
  }

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artworkView], "frame");
  v49 = CGRectGetMaxX(v103) + 8.0;
  if (v3 == (id)1)
    v50 = *(double *)&qword_1004B8190;
  else
    v50 = v49;
  v104.origin.x = v6;
  v104.origin.y = v94;
  v104.size.height = v95;
  v104.size.width = rect;
  v51 = ceil(CGRectGetWidth(v104) - v22 + -8.0 - (*(double *)&qword_1004B8190 + *(double *)&qword_1004B8190));
  objc_msgSend(v33, "sizeThatFits:", v51, 0.0);
  if ((v16 & 1) != 0)
    v47 = v48;
  recta = v50;
  objc_msgSend(v33, "setFrame:", v50, 0.0, v51, v52, *(_QWORD *)&v88);
  if ((v19 & 1) != 0)
  {
    v53 = objc_msgSend(v33, "font");
    if (v53)
    {
      v54 = v53;
      v55 = v24;
      objc_msgSend(v53, "ascender");
      v57 = v56;

      v47 = v47 - UIRoundToViewScale(v1, v57);
      goto LABEL_24;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v55 = v24;
LABEL_24:
  objc_msgSend(v33, "_setFirstLineBaselineFrameOriginY:", v47);
  v58 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel];
  objc_msgSend(v58, v4[161]);
  v60 = v59;
  v96 = v61;
  if (objc_msgSend(v58, "isHidden"))
    v62 = 0.0;
  else
    v62 = v60 + 2.0;
  v63 = v51 - v62;
  v64 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel];
  objc_msgSend(v64, "sizeThatFits:", v51 - v62, 0.0);
  v67 = v66;
  if (v63 >= v65)
    v63 = v65;
  if (v3 == (id)1)
  {
    v105.origin.x = v89;
    v105.origin.y = v27;
    v105.size.width = v99;
    v105.size.height = v55;
    MinX = CGRectGetMinX(v105);
    v69 = objc_msgSend(v58, "isHidden");
    v70 = 0.0;
    if (!v69)
      v70 = v60 + 2.0;
    v49 = MinX + -8.0 - v63 - v70;
  }
  if ((v16 & 1) != 0)
    v71 = v92;
  else
    v71 = v93;
  objc_msgSend(v64, "setFrame:", v49, 0.0, v63, v67);
  v72 = v71;
  if ((v19 & 1) != 0)
  {
    v73 = objc_msgSend(v64, "font", v71);
    if (v73)
    {
      v74 = v73;
      objc_msgSend(v73, "ascender");
      v76 = v75;

      v72 = v71 - UIRoundToViewScale(v1, v76);
      goto LABEL_39;
    }
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
LABEL_39:
  objc_msgSend(v64, "_setFirstLineBaselineFrameOriginY:", v72);
  objc_msgSend(v64, "frame");
  objc_msgSend(v58, "setFrame:", CGRectGetMaxX(v106) + 2.0, 0.0, v60, v96);
  if ((v19 & 1) != 0)
  {
    v77 = objc_msgSend(v64, "font");
    if (v77)
    {
      v78 = v77;
      objc_msgSend(v77, "ascender");
      v80 = v79;

      v71 = v71 - UIRoundToViewScale(v1, v80);
      goto LABEL_42;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_42:
  objc_msgSend(v58, "_setFirstLineBaselineFrameOriginY:", v71);
  v81 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel];
  objc_msgSend(v81, "sizeThatFits:", v51, 0.0);
  if ((v16 & 1) != 0)
    v83 = v90;
  else
    v83 = v91;
  objc_msgSend(v81, "setFrame:", recta, 0.0, v51, v82);
  if ((v19 & 1) == 0)
    goto LABEL_48;
  v84 = objc_msgSend(v81, "font");
  if (v84)
  {
    v85 = v84;
    objc_msgSend(v84, "ascender");
    v87 = v86;

    v83 = v83 - UIRoundToViewScale(v1, v87);
LABEL_48:
    objc_msgSend(v81, "_setFirstLineBaselineFrameOriginY:", v83);
    return;
  }
LABEL_54:
  __break(1u);
}

id sub_10001F920(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id result;
  void (*v15)(char *, __n128);
  uint64_t v16;
  __n128 v17;
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for TrackCellView();
  objc_msgSendSuper2(&v18, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if (!a1)
  {

LABEL_9:
    result = objc_msgSend(v1, "setNeedsLayout");
    v15 = *(void (**)(char *, __n128))&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler];
    if (v15)
    {
      v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler + 8];
      v17 = swift_retain(v16);
      v15(v1, v17);
      return (id)sub_10000DCF8((uint64_t)v15, v16);
    }
    return result;
  }
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {

    return (id)swift_bridgeObjectRelease_n(v8, 2);
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

  swift_bridgeObjectRelease(v8);
  result = (id)swift_bridgeObjectRelease(v12);
  if ((v13 & 1) == 0)
    goto LABEL_9;
  return result;
}

uint64_t type metadata accessor for TrackCellView()
{
  return objc_opt_self(_TtC16MusicMessagesApp13TrackCellView);
}

void sub_10001FB04(void *a1@<X0>, double *a2@<X8>)
{
  id v4;
  double v5;
  double v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v4 = objc_msgSend(a1, "displayScale");
  v6 = UIRoundToScale(v4, 41.5, v5);
  v7 = (void *)objc_opt_self(UIFontMetrics);
  v8 = objc_msgSend(v7, "defaultMetrics");
  objc_msgSend(v8, "scaledValueForValue:compatibleWithTraitCollection:", a1, 25.0);
  v10 = v9;

  v11 = objc_msgSend(v7, "defaultMetrics");
  objc_msgSend(v11, "scaledValueForValue:compatibleWithTraitCollection:", a1, 41.5);
  v13 = v12;

  v14 = objc_msgSend(a1, "displayScale");
  v16 = UIRoundToScale(v14, v13, v15);
  v17 = objc_msgSend(v7, "defaultMetrics");
  objc_msgSend(v17, "scaledValueForValue:compatibleWithTraitCollection:", a1, 58.0);
  v19 = v18;

  *a2 = 25.0;
  a2[1] = v6;
  a2[2] = 58.0;
  *((_QWORD *)a2 + 3) = v10;
  a2[4] = v16;
  *((_QWORD *)a2 + 5) = v19;
}

void sub_10001FC50()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_artworkComponent] = 0;
  v1 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__explicitLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = &v0[OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView_layoutInvalidationHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorView;
  type metadata accessor for NowPlayingIndicatorView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v4 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingIndicatorDimmingView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__nowPlayingLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__titleLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC16MusicMessagesApp13TrackCellView__artistLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003A4070, "MusicMessagesApp/TrackCellView.swift", 36, 2, 196, 0);
  __break(1u);
}

uint64_t sub_10001FD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B8018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001FDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B8018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001FE1C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004B8018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001FE5C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001FE80()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  objc_msgSend(Strong, "setNeedsLayout");

}

unint64_t sub_10001FEB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B8258;
  if (!qword_1004B8258)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004B8258);
  }
  return result;
}

uint64_t sub_10001FEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for StoreLookupManager();
  v1 = swift_allocObject(v0, 32, 7);
  result = sub_10002135C();
  qword_1004F4578 = v1;
  return result;
}

void sub_10001FF28(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v6 = sub_100027740(a4);
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(a1 + 56) + 16 * v6;
        v9 = *(void **)v8;
        v10 = *(unsigned __int8 *)(v8 + 8);
        sub_10000FCB4(*(void **)v8, *(_BYTE *)(v8 + 8));
        a2(v9, v10);
        sub_10000FCC0(v9, v10);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10001FFC4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[5];
  _QWORD *v57;

  v4 = v3;
  v8 = _swiftEmptyArrayStorage;
  v55 = swift_allocObject(&unk_100465820, 24, 7);
  *(_QWORD *)(v55 + 16) = sub_1000262F0((uint64_t)_swiftEmptyArrayStorage);
  v52 = swift_allocObject(&unk_100465848, 24, 7);
  *(_QWORD *)(v52 + 16) = _swiftEmptyArrayStorage;
  v54 = *(_QWORD *)(a1 + 16);
  if (!v54)
  {
    v10 = _swiftEmptyArrayStorage;
LABEL_27:
    if (v8[2])
      v42 = 1;
    else
      v42 = a2 == 0;
    if (!v42)
    {
      v43 = *(_QWORD *)(v55 + 16);
      v44 = swift_bridgeObjectRetain();
      a2(v44);
      swift_bridgeObjectRelease(v43);
    }
    v45 = objc_msgSend((id)objc_opt_self(ISURLBagLoadingController), "sharedBagLoadingController");
    v46 = (_QWORD *)swift_allocObject(&unk_100465870, 64, 7);
    v46[2] = v10;
    v46[3] = v52;
    v46[4] = v4;
    v46[5] = v55;
    v46[6] = a2;
    v46[7] = a3;
    aBlock[4] = sub_1000214DC;
    v57 = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000212A8;
    aBlock[3] = &unk_100465888;
    v47 = _Block_copy(aBlock);
    v48 = v57;
    swift_retain(v52);
    swift_retain(v4);
    swift_retain(v55);
    sub_10000DCE8((uint64_t)a2, a3);
    objc_msgSend(v45, "requestAccessToBagUsingBlock:", v47, swift_release(v48).n128_f64[0]);
    _Block_release(v47);
    swift_release(v55);
    swift_release(v52);

    return;
  }
  v50 = a2;
  v51 = a3;
  v49 = v4;
  v53 = *(id *)(v4 + 24);
  swift_bridgeObjectRetain();
  v9 = 0;
  v10 = _swiftEmptyArrayStorage;
  while (1)
  {
    v12 = *(_QWORD *)(a1 + 8 * v9 + 32);
    v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", v12);
    v14 = objc_msgSend(v53, "objectForKey:", v13);

    if (!v14)
    {
      v27 = *(_QWORD **)(v52 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
      *(_QWORD *)(v52 + 16) = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_100023414(0, v27[2] + 1, 1, v27);
        *(_QWORD *)(v52 + 16) = v27;
      }
      v30 = v27[2];
      v29 = v27[3];
      if (v30 >= v29 >> 1)
        v27 = sub_100023414((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      v27[2] = v30 + 1;
      v27[v30 + 4] = v12;
      *(_QWORD *)(v52 + 16) = v27;
      aBlock[0] = v12;
      v31 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v33 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        v10 = sub_100023308(0, v10[2] + 1, 1, v10);
      v35 = v10[2];
      v34 = v10[3];
      if (v35 >= v34 >> 1)
        v10 = sub_100023308((_QWORD *)(v34 > 1), v35 + 1, 1, v10);
      v10[2] = v35 + 1;
      v36 = &v10[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
      goto LABEL_5;
    }
    v15 = a1;
    v16 = v14;
    v17 = *(_QWORD *)(v55 + 16);
    v18 = swift_isUniquelyReferenced_nonNull_native(v17);
    aBlock[0] = v17;
    *(_QWORD *)(v55 + 16) = 0x8000000000000000;
    v20 = sub_100027740(v12);
    v21 = *(_QWORD *)(v17 + 16);
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (*(_QWORD *)(v17 + 24) >= v23)
    {
      if ((v18 & 1) == 0)
        sub_100028C90();
    }
    else
    {
      sub_100027FE4(v23, v18);
      v25 = sub_100027740(v12);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_35;
      v20 = v25;
    }
    a1 = v15;
    v37 = (_QWORD *)aBlock[0];
    if ((v24 & 1) != 0)
    {
      v11 = *(_QWORD *)(aBlock[0] + 56) + 16 * v20;
      sub_10000FCC0(*(void **)v11, *(_BYTE *)(v11 + 8));
      *(_QWORD *)v11 = v14;
      *(_BYTE *)(v11 + 8) = 0;
    }
    else
    {
      *(_QWORD *)(aBlock[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
      *(_QWORD *)(v37[6] + 8 * v20) = v12;
      v38 = v37[7] + 16 * v20;
      *(_QWORD *)v38 = v14;
      *(_BYTE *)(v38 + 8) = 0;
      v39 = v37[2];
      v40 = __OFADD__(v39, 1);
      v41 = v39 + 1;
      if (v40)
        goto LABEL_34;
      v37[2] = v41;
    }
    *(_QWORD *)(v55 + 16) = v37;

    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_5:
    if (v54 == ++v9)
    {
      swift_bridgeObjectRelease(a1);
      a3 = v51;
      v8 = *(_QWORD **)(v52 + 16);
      v4 = v49;
      a2 = v50;
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int64);
  __break(1u);
}

uint64_t sub_100020480(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  NSString v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t result;
  uint64_t v76;
  void (*v77)(_QWORD);
  void *v78;
  uint64_t v79;
  id v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD v88[3];
  char v89[24];

  v79 = a4;
  v13 = type metadata accessor for URL(0);
  v83 = *(_QWORD *)(v13 - 8);
  v84 = v13;
  __chkstk_darwin(v13);
  v81 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v15);
  v82 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t *)(a3 + 16);
  if (a2)
  {
    v85 = a2;
  }
  else
  {
    v18 = objc_allocWithZone((Class)NSError);
    v19 = String._bridgeToObjectiveC()();
    v85 = objc_msgSend(v18, "initWithDomain:code:userInfo:", v19, 0, 0);

  }
  v20 = (_QWORD *)(a5 + 16);
  swift_beginAccess(v17, v89, 0, 0);
  v21 = *v17;
  v86 = *(_QWORD *)(*v17 + 16);
  if (v86)
  {
    v76 = a7;
    v77 = a6;
    swift_errorRetain(a2);
    swift_bridgeObjectRetain();
    v22 = 0;
    v23 = v85;
    v78 = a1;
    while (1)
    {
      v26 = v21;
      v27 = *(_QWORD *)(v21 + 8 * v22 + 32);
      if (a1)
      {
        v88[0] = *(_QWORD *)(v21 + 8 * v22 + 32);
        v28 = a1;
        dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v30 = v29;
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v30);
        v32 = objc_msgSend(v28, "itemForKey:", v31);

        if (v32)
        {
          v33 = objc_msgSend(v32, "productPageURL");
          if (v33)
          {
            v34 = v33;
            v35 = v81;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            v37 = (uint64_t)v82;
            v36 = v83;
            v38 = v35;
            v39 = v84;
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v38, v84);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v39);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v39) != 1)
            {
              sub_100021558(v37);
              v40 = *(void **)(v79 + 24);
              v41 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", v27);
              objc_msgSend(v40, "setObject:forKey:", v32, v41);

              swift_beginAccess(v20, v88, 33, 0);
              v80 = v32;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
              v87 = (_QWORD *)*v20;
              v43 = v87;
              *v20 = 0x8000000000000000;
              v45 = sub_100027740(v27);
              v46 = v43[2];
              v47 = (v44 & 1) == 0;
              v48 = v46 + v47;
              if (__OFADD__(v46, v47))
                goto LABEL_47;
              v49 = v44;
              if (v43[3] >= v48)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                {
                  v52 = v87;
                  if ((v44 & 1) == 0)
                    goto LABEL_37;
                }
                else
                {
                  sub_100028C90();
                  v52 = v87;
                  if ((v49 & 1) == 0)
                    goto LABEL_37;
                }
              }
              else
              {
                sub_100027FE4(v48, isUniquelyReferenced_nonNull_native);
                v50 = sub_100027740(v27);
                if ((v49 & 1) != (v51 & 1))
                  goto LABEL_49;
                v45 = v50;
                v52 = v87;
                if ((v49 & 1) == 0)
                {
LABEL_37:
                  v52[(v45 >> 6) + 8] |= 1 << v45;
                  *(_QWORD *)(v52[6] + 8 * v45) = v27;
                  v69 = v52[7] + 16 * v45;
                  *(_QWORD *)v69 = v32;
                  *(_BYTE *)(v69 + 8) = 0;
                  v70 = v52[2];
                  v66 = __OFADD__(v70, 1);
                  v71 = v70 + 1;
                  if (v66)
                    goto LABEL_48;
                  v52[2] = v71;
                  goto LABEL_39;
                }
              }
              v68 = v52[7] + 16 * v45;
              sub_10000FCC0(*(void **)v68, *(_BYTE *)(v68 + 8));
              *(_QWORD *)v68 = v32;
              *(_BYTE *)(v68 + 8) = 0;
LABEL_39:
              v72 = *v20;
              *v20 = v52;
              swift_bridgeObjectRelease(v72);
              swift_endAccess(v88);

              a1 = v78;
              v23 = v85;
              goto LABEL_8;
            }
          }
          else
          {
            v37 = (uint64_t)v82;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v82, 1, 1, v84);
          }

          sub_100021558(v37);
        }
        else
        {

        }
        v23 = v85;
      }
      swift_beginAccess(v20, v88, 33, 0);
      swift_errorRetain(v23);
      v53 = swift_isUniquelyReferenced_nonNull_native(*v20);
      v87 = (_QWORD *)*v20;
      v54 = v87;
      *v20 = 0x8000000000000000;
      v56 = sub_100027740(v27);
      v57 = v54[2];
      v58 = (v55 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int64);
        __break(1u);
        return result;
      }
      v60 = v55;
      if (v54[3] >= v59)
      {
        if ((v53 & 1) != 0)
        {
          v63 = v87;
          if ((v55 & 1) == 0)
            goto LABEL_29;
        }
        else
        {
          sub_100028C90();
          v63 = v87;
          if ((v60 & 1) == 0)
            goto LABEL_29;
        }
      }
      else
      {
        sub_100027FE4(v59, v53);
        v61 = sub_100027740(v27);
        if ((v60 & 1) != (v62 & 1))
          goto LABEL_49;
        v56 = v61;
        v63 = v87;
        if ((v60 & 1) == 0)
        {
LABEL_29:
          v63[(v56 >> 6) + 8] |= 1 << v56;
          *(_QWORD *)(v63[6] + 8 * v56) = v27;
          v64 = v63[7] + 16 * v56;
          *(_QWORD *)v64 = v23;
          *(_BYTE *)(v64 + 8) = 1;
          v65 = v63[2];
          v66 = __OFADD__(v65, 1);
          v67 = v65 + 1;
          if (v66)
            goto LABEL_46;
          v63[2] = v67;
          goto LABEL_7;
        }
      }
      v24 = v63[7] + 16 * v56;
      sub_10000FCC0(*(void **)v24, *(_BYTE *)(v24 + 8));
      *(_QWORD *)v24 = v23;
      *(_BYTE *)(v24 + 8) = 1;
LABEL_7:
      v25 = *v20;
      *v20 = v63;
      swift_bridgeObjectRelease(v25);
      swift_endAccess(v88);
LABEL_8:
      ++v22;
      v21 = v26;
      if (v86 == v22)
      {
        swift_bridgeObjectRelease(v26);
        a6 = v77;
        if (!v77)
          return swift_errorRelease(v85);
LABEL_41:
        swift_beginAccess(v20, v88, 0, 0);
        v73 = *v20;
        v74 = swift_bridgeObjectRetain();
        a6(v74);
        swift_errorRelease(v85);
        return swift_bridgeObjectRelease(v73);
      }
    }
  }
  swift_errorRetain(a2);
  if (a6)
    goto LABEL_41;
  return swift_errorRelease(v85);
}

void sub_100020A94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v17;
  id v18;
  Class v19;
  id v20;
  id v21;
  Class v22;
  id v23;
  NSString v24;
  NSString v25;
  NSString v26;
  NSString v27;
  NSString v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  if (!a1)
    goto LABEL_3;
  if (a2)
    goto LABEL_3;
  v32 = a8;
  v33 = a5;
  v13 = sub_100020E70(a1);
  v14 = objc_allocWithZone((Class)SSVPlatformContext);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  v16 = objc_msgSend(v14, "initWithBagDictionary:", isa);

  a8 = v32;
  a5 = v33;
  if (!v16)
    goto LABEL_3;
  v17 = sub_100020E70(a1);
  v18 = objc_allocWithZone((Class)SSVURLBagInterpreter);
  v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v20 = objc_msgSend(v18, "initWithURLBagDictionary:", v19);

  if (!v20)
  {

    a8 = v32;
    a5 = v33;
LABEL_3:
    sub_100020480(0, a2, a4, a5, a6, a7, a8);
    return;
  }
  v21 = objc_msgSend(objc_allocWithZone((Class)SSVPlatformRequestOperation), "initWithPlatformContext:", v16);
  objc_msgSend(v21, "setPersonalizationStyle:", 2);
  objc_msgSend(v21, "setKeyProfile:", SSLookupKeyProfileLockup);
  v22 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "setItemIdentifiers:", v22);

  v23 = objc_msgSend(v20, "storeFrontSuffix");
  objc_msgSend(v21, "setStoreFrontSuffix:", v23);

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setValue:forRequestParameter:", v24, SSLookupParameterProtocolVersion);

  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setValue:forRequestParameter:", v25, v26);

  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setValue:forRequestParameter:", v27, v28);

  v29 = (_QWORD *)swift_allocObject(&unk_1004658C0, 56, 7);
  v29[2] = a4;
  v29[3] = v33;
  v29[4] = a6;
  v29[5] = a7;
  v29[6] = v32;
  aBlock[4] = sub_100021548;
  v35 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021234;
  aBlock[3] = &unk_1004658D8;
  v30 = _Block_copy(aBlock);
  v31 = v35;
  swift_retain(a4);
  swift_retain(v33);
  swift_retain(a6);
  sub_10000DCE8((uint64_t)a7, v32);
  objc_msgSend(v21, "setResponseBlock:", v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);
  objc_msgSend(*(id *)(v33 + 16), "addOperation:", v21);

}

uint64_t sub_100020E70(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1000057B4(&qword_1004B8330);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_10000990C(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_100007EE4(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_100007EE4(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_100007EE4(v37, v38);
    sub_100007EE4(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_100007EE4(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10000FCCC(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_100021234(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_1000212A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

uint64_t type metadata accessor for StoreLookupManager()
{
  return objc_opt_self(_TtC16MusicMessagesApp18StoreLookupManager);
}

uint64_t sub_10002135C()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  objc_class *ObjCClassFromMetadata;
  NSString *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setName:", v2);

  objc_msgSend(v1, "setMaxConcurrentOperationCount:", 3);
  *(_QWORD *)(v0 + 16) = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  type metadata accessor for StoreLookupManager();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v5 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  objc_msgSend(v3, "setName:", v5);

  objc_msgSend(v3, "setCountLimit:", 100);
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

uint64_t sub_10002146C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100021490()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  if (v0[6])
    swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_1000214DC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100020A94(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(_QWORD))(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1000214EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000214FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100021504()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100021548(void *a1, void *a2)
{
  uint64_t v2;

  return sub_100020480(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD))(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100021558(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004B73F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for StoreLookupManager.LookupResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10000FCB4(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for StoreLookupManager.LookupResult(uint64_t a1)
{
  sub_10000FCC0(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for StoreLookupManager.LookupResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10000FCB4(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10000FCC0(v5, v6);
  return a1;
}

uint64_t assignWithTake for StoreLookupManager.LookupResult(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10000FCC0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreLookupManager.LookupResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreLookupManager.LookupResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100021704(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10002170C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StoreLookupManager.LookupResult()
{
  return &type metadata for StoreLookupManager.LookupResult;
}

uint64_t BackgroundFetchManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for Artwork.CachingReference()
{
  return objc_opt_self(_TtCE16MusicMessagesAppV11MusicCoreUI7Artwork16CachingReference);
}

void _s14AccessoryStyleOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

uint64_t _s14AccessoryStyleOwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v4 = v3;
  }
  return a1;
}

uint64_t _s14AccessoryStyleOwca(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v8 = *(__int128 *)((char *)a2 + 8);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_OWORD *)(a1 + 8) = v8;
      v9 = v5;
      return a1;
    }
LABEL_7:
    v10 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  v7 = *(__int128 *)((char *)a2 + 8);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  return a1;
}

__n128 _s14AccessoryStyleOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s14AccessoryStyleOwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s14AccessoryStyleOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t _s14AccessoryStyleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1000219C8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1000219E0(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *_s14AccessoryStyleOMa()
{
  return &_s14AccessoryStyleON;
}

BOOL sub_100021A14(uint64_t a1, uint64_t a2)
{
  return sub_100021A38(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

BOOL sub_100021A38(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  char v17;

  if (a1)
  {
    if (a1 == (void *)1)
    {
      if (a5 == (void *)1)
        return 1;
    }
    else
    {
      if (a1 == (void *)2)
        return a5 == (void *)2;
      if ((unint64_t)a5 < 3)
        return 0;
      sub_100021B74();
      sub_10001B200(a1);
      sub_10001B200(a5);
      v17 = static NSObject.== infix(_:_:)(a1, a5);
      sub_10001B210(a5);
      sub_10001B210(a1);
      if ((v17 & 1) == 0)
        return 0;
      if ((a4 & 1) == 0)
        return (a8 & 1) == 0 && *(double *)&a2 == *(double *)&a6 && *(double *)&a3 == *(double *)&a7;
      if ((a8 & 1) != 0)
        return 1;
    }
  }
  else if (!a5)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_100021B74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B8430;
  if (!qword_1004B8430)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004B8430);
  }
  return result;
}

uint64_t sub_100021BB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100021BEC + 4 * byte_1003C6A88[a1]))(0xD00000000000002DLL, 0x80000001003A5A60);
}

uint64_t sub_100021BEC()
{
  uint64_t v0;

  return v0 + 12;
}

unint64_t sub_100021C04()
{
  return 0xD000000000000025;
}

uint64_t sub_100021C2C()
{
  uint64_t result;

  sub_10001FEB4();
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleFootnote, UIFontWeightSemibold);
  qword_1004B8438 = result;
  return result;
}

id sub_100021C74()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  qword_1004B8440 = (uint64_t)result;
  return result;
}

id sub_100021CAC(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v12;
  NSString v13;

  v5 = *(void **)&v2[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label];
  v6 = objc_msgSend(v5, "text");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    if (v8 != a1)
      goto LABEL_7;
  }
  else
  {
    v8 = 0;
    v10 = 0xE000000000000000;
    if (a1)
      goto LABEL_7;
  }
  if (v10 == a2)
    return (id)swift_bridgeObjectRelease_n(a2, 2);
LABEL_7:
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, a1, a2, 0);
  swift_bridgeObjectRelease(v10);
  if ((v12 & 1) != 0)
    return (id)swift_bridgeObjectRelease(a2);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v5, "setText:", v13);

  objc_msgSend(v5, "sizeToFit");
  return objc_msgSend(v2, "setNeedsLayout");
}

char *sub_100021DF8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  objc_super v28;

  v9 = &v4[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader_layoutInvalidationHandler];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label] = v12;
  objc_msgSend(v12, "setAdjustsFontForContentSizeCategory:", 1);
  v14 = qword_1004B6EC8;
  v15 = v12;
  if (v14 != -1)
    swift_once(&qword_1004B6EC8, sub_100021C2C);
  objc_msgSend(v15, "setFont:", qword_1004B8438);

  v16 = qword_1004B6ED0;
  v17 = *(id *)&v11[v13];
  if (v16 != -1)
    swift_once(&qword_1004B6ED0, sub_100021C74);
  objc_msgSend(v17, "setTextColor:", qword_1004B8440);

  v18 = *(void **)&v11[v13];
  objc_msgSend(v18, "setNumberOfLines:", 0);
  objc_msgSend(v18, "setLineBreakMode:", 0);
  v19 = v18;
  LODWORD(v20) = 0.5;
  objc_msgSend(v19, "_setHyphenationFactor:", v20);

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for SharingCollectionViewHeader();
  v21 = objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  v22 = qword_1004B6E58;
  v23 = (char *)v21;
  if (v22 != -1)
    swift_once(&qword_1004B6E58, sub_10001BBF8);
  objc_msgSend(v23, "setBackgroundColor:", qword_1004F4570);
  v24 = OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label;
  v25 = *(id *)&v23[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label];
  v26 = objc_msgSend(v23, "backgroundColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[v24]);
  return v23;
}

id sub_1000220F0()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SharingCollectionViewHeader();
  return objc_msgSendSuper2(&v3, "dealloc");
}

double sub_100022294(double a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label];
  objc_msgSend(v3, "sizeThatFits:", a1 - (*(double *)&qword_1004B8100 + *(double *)&qword_1004B8100));
  objc_msgSend(v3, "_firstLineBaselineOffsetFromBoundsTop");
  objc_msgSend(v3, "_baselineOffsetFromBottom");
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
  if ((v4 & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v6, "scaledValueForValue:", 28.0);

  }
  return a1;
}

id sub_100022414()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  double v17;
  id v18;
  double v19;
  objc_super v21;
  CGRect v22;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for SharingCollectionViewHeader();
  objc_msgSendSuper2(&v21, "layoutSubviews");
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "layoutDirection");

  v3 = *(double *)&qword_1004B8100;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
  if ((v4 & 1) != 0 && (objc_msgSend(v0, "bounds"), v6 <= 736.0))
  {
    v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v9, "sizeThatFits:", v12 - (v3 + v3), 1.79769313e308);
    v10 = v13;
    v11 = v14;
  }
  else
  {
    if (v2 == (id)1)
    {
      objc_msgSend(v0, "bounds");
      v7 = CGRectGetMaxX(v22) - v3;
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label], "frame");
      v3 = v7 - v8;
    }
    v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp27SharingCollectionViewHeader__label];
    objc_msgSend(v9, "frame");
  }
  objc_msgSend(v9, "setFrame:", v3, 0.0, v10, v11);
  v15 = objc_msgSend(v0, "traitCollection");
  v16 = objc_msgSend(v15, "preferredContentSizeCategory");

  LOBYTE(v15) = UIContentSizeCategory.isAccessibilityCategory.getter(v16);
  v17 = 28.0;
  if ((v15 & 1) != 0)
  {
    v18 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v18, "scaledValueForValue:", 28.0);
    v17 = v19;

  }
  return objc_msgSend(v9, "_setFirstLineBaselineFrameOriginY:", v17);
}

uint64_t type metadata accessor for SharingCollectionViewHeader()
{
  return objc_opt_self(_TtC16MusicMessagesApp27SharingCollectionViewHeader);
}

uint64_t sub_1000226AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  void (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  int v57;
  id v58;
  uint64_t v59;
  id v60;
  int v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v70 = sub_1000057B4(&qword_1004B7420);
  v69 = *(_QWORD *)(v70 - 8);
  v0 = __chkstk_darwin(v70);
  v73 = (char *)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __chkstk_darwin(v0);
  v68 = (char *)&v63 - v3;
  __chkstk_darwin(v2);
  v72 = (uint64_t)&v63 - v4;
  v5 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v76 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)sub_1000230C8();
  v12 = result;
  v13 = *(_QWORD *)(result + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease(result);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  v14 = 0;
  v71 = result + 32;
  v75 = _swiftEmptyArrayStorage;
  v66 = (char *)&type metadata for Swift.AnyObject + 8;
  v65 = (char *)&type metadata for Any + 8;
  v77 = v8;
  v67 = v7;
  v80 = v9;
  v64 = result;
  v63 = v13;
  while (v14 < *(_QWORD *)(v12 + 16))
  {
    v15 = *(_QWORD *)(v71 + 8 * v14);
    if (!*(_QWORD *)(v15 + 16))
      goto LABEL_5;
    v74 = v14;
    swift_bridgeObjectRetain();
    v16 = sub_1000277A0(0x737465737361, 0xE600000000000000);
    if ((v17 & 1) == 0)
    {
      v20 = v15;
LABEL_72:
      result = swift_bridgeObjectRelease(v20);
      goto LABEL_4;
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
    swift_unknownObjectRetain(v18);
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)&v83 = v18;
    v19 = sub_1000057B4(&qword_1004B8480);
    result = swift_dynamicCast(&v81, &v83, v66, v19, 6);
    if ((result & 1) != 0)
    {
      v20 = v81;
      v79 = *(_QWORD *)(v81 + 16);
      if (v79)
      {
        v21 = 0;
        v78 = v81;
        while (1)
        {
          v22 = *(_QWORD *)(v20 + 8 * v21 + 32);
          v23 = *(_QWORD *)(v22 + 16);
          swift_bridgeObjectRetain();
          if (!v23)
            break;
          v24 = sub_1000277A0(0x726F76616C66, 0xE600000000000000);
          if ((v25 & 1) != 0)
          {
            *(_QWORD *)&v81 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24);
            swift_unknownObjectRetain(v81);
            v26 = swift_dynamicCast(&v83, &v81, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6);
            if (v26)
              v27 = v83;
            else
              v27 = 0;
            if (v26)
              v28 = *((_QWORD *)&v83 + 1);
            else
              v28 = 0;
            if (!*(_QWORD *)(v22 + 16))
              goto LABEL_30;
          }
          else
          {
            v27 = 0;
            v28 = 0;
            if (!*(_QWORD *)(v22 + 16))
              goto LABEL_30;
          }
          v29 = sub_1000277A0(0x77656976657270, 0xE700000000000000);
          if ((v30 & 1) == 0)
            goto LABEL_30;
          v31 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v29);
          swift_unknownObjectRetain(v31);
          swift_bridgeObjectRelease(v22);
          objc_opt_self(NSDictionary);
          v32 = (void *)swift_dynamicCastObjCClass(v31);
          if (!v32)
          {
            swift_unknownObjectRelease(v31);
            goto LABEL_31;
          }
          v33 = v32;
          *(_QWORD *)&v81 = 7107189;
          *((_QWORD *)&v81 + 1) = 0xE300000000000000;
          v34 = v32;
          v35 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v81, &type metadata for String);
          v36 = objc_msgSend(v34, "__swift_objectForKeyedSubscript:", v35);
          swift_unknownObjectRelease(v35);

          if (v36)
          {
            _bridgeAnyObjectToAny(_:)(v36);
            swift_unknownObjectRelease(v36);
          }
          else
          {
            v81 = 0u;
            v82 = 0u;
          }
          sub_10000FD10((uint64_t)&v81, (uint64_t)&v83, &qword_1004B7068);
          if (*((_QWORD *)&v84 + 1))
          {
            v57 = swift_dynamicCast(&v81, &v83, (char *)&type metadata for Any + 8, &type metadata for String, 6);
            if (v57)
              v38 = v81;
            else
              v38 = 0;
            if (v57)
              v37 = *((_QWORD *)&v81 + 1);
            else
              v37 = 0;
          }
          else
          {
            sub_10000FE2C((uint64_t)&v83, &qword_1004B7068);
            v37 = 0;
            v38 = 0;
          }
          *(_QWORD *)&v81 = 0x6E6F697461727564;
          *((_QWORD *)&v81 + 1) = 0xE800000000000000;
          v58 = v34;
          v59 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v81, &type metadata for String);
          v60 = objc_msgSend(v58, "__swift_objectForKeyedSubscript:", v59);
          swift_unknownObjectRelease(v59);

          if (v60)
          {
            _bridgeAnyObjectToAny(_:)(v60);
            swift_unknownObjectRelease(v60);
          }
          else
          {
            v81 = 0u;
            v82 = 0u;
          }
          sub_10000FD10((uint64_t)&v81, (uint64_t)&v83, &qword_1004B7068);
          if (!*((_QWORD *)&v84 + 1))
            goto LABEL_32;
          v61 = swift_dynamicCast(&v81, &v83, v65, &type metadata for Int, 6);
          if (v61)
            v39 = v81;
          else
            v39 = 0;
          v40 = v61 ^ 1;
          if (!v37)
          {
LABEL_12:

            swift_bridgeObjectRelease(v28);
            goto LABEL_13;
          }
LABEL_33:
          URL.init(string:)(v38, v37);
          swift_bridgeObjectRelease(v37);
          v41 = v80;
          v42 = v77;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v7, 1, v77) == 1)
          {

            swift_bridgeObjectRelease(v28);
            sub_10000FE2C((uint64_t)v7, &qword_1004B73F8);
          }
          else
          {
            v43 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
            v43(v76, v7, v42);
            if (v28)
            {
              if (v27 == 0x6964754173756C70 && v28 == 0xE90000000000006FLL
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x6964754173756C70, 0xE90000000000006FLL, 0) & 1) != 0|| v27 == 0x647261646E617473 && v28 == 0xED00006F69647541)
              {
                swift_bridgeObjectRelease(v28);
LABEL_42:
                v44 = *(void (**)(uint64_t, char *, uint64_t))(v80 + 16);
                v45 = v72;
                v44(v72, v76, v42);
                v46 = v70;
                v47 = *(int *)(v70 + 48);
                if (v40)
                  v48 = 0.0;
                else
                  v48 = (double)v39;
                *(double *)(v45 + v47) = v48;
                v49 = v68;
                v44((uint64_t)v68, (char *)v45, v77);
                *(double *)&v49[v47] = v48;
                v50 = *(int *)(v46 + 48);
                v51 = (uint64_t)v73;
                v52 = v77;
                v43(v73, v49, v77);
                *(double *)(v51 + v50) = v48;
                v53 = (unint64_t)v75;
                if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) == 0)
                  v53 = sub_100023520(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
                v55 = *(_QWORD *)(v53 + 16);
                v54 = *(_QWORD *)(v53 + 24);
                v75 = (_QWORD *)v53;
                v7 = v67;
                if (v55 >= v54 >> 1)
                  v75 = (_QWORD *)sub_100023520(v54 > 1, v55 + 1, 1, (unint64_t)v75);
                v56 = v75;
                v75[2] = v55 + 1;
                sub_10000FD10((uint64_t)v73, (uint64_t)v56+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v55, &qword_1004B7420);

                sub_10000FE2C(v72, &qword_1004B7420);
                (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v52);
                goto LABEL_13;
              }
              v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x647261646E617473, 0xED00006F69647541, 0);
              swift_bridgeObjectRelease(v28);
              if ((v62 & 1) != 0)
                goto LABEL_42;
            }
            (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v42);

          }
LABEL_13:
          v20 = v78;
          if (v79 == ++v21)
          {
            result = swift_bridgeObjectRelease(v78);
            v12 = v64;
            v13 = v63;
            goto LABEL_4;
          }
        }
        v28 = 0;
        v27 = 0;
LABEL_30:
        swift_bridgeObjectRelease(v22);
LABEL_31:
        v83 = 0u;
        v84 = 0u;
        sub_10000FE2C((uint64_t)&v83, &qword_1004B7068);
        v37 = 0;
        v38 = 0;
        v33 = 0;
        v83 = 0u;
        v84 = 0u;
LABEL_32:
        sub_10000FE2C((uint64_t)&v83, &qword_1004B7068);
        v39 = 0;
        v40 = 1;
        if (!v37)
          goto LABEL_12;
        goto LABEL_33;
      }
      goto LABEL_72;
    }
LABEL_4:
    v14 = v74;
LABEL_5:
    if (++v14 == v13)
    {
      swift_bridgeObjectRelease(v12);
      return (uint64_t)v75;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_100022F4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD v15[2];
  uint64_t v16;

  v0 = sub_1000230C8();
  v1 = v0;
  v2 = v0[2];
  if (v2)
  {
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      v5 = v1[v3 + 4];
      if (*(_QWORD *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        v6 = sub_1000277A0(1701869940, 0xE400000000000000);
        if ((v7 & 1) != 0)
        {
          v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
          swift_unknownObjectRetain(v8);
          swift_bridgeObjectRelease(v5);
          v16 = v8;
          if ((swift_dynamicCast(v15, &v16, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
          {
            v9 = v15[0];
            v10 = v15[1];
            if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
              v4 = sub_100023308(0, v4[2] + 1, 1, v4);
            v12 = v4[2];
            v11 = v4[3];
            if (v12 >= v11 >> 1)
              v4 = sub_100023308((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
            v4[2] = v12 + 1;
            v13 = &v4[2 * v12];
            v13[4] = v9;
            v13[5] = v10;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v5);
        }
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    swift_bridgeObjectRelease(v0);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1000230C8()
{
  void *v0;
  _QWORD *result;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  result = objc_msgSend(v0, "lookupDictionary");
  if (result)
  {
    v2 = result;
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(result, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v7[0] = 0x73726566666FLL;
    v7[1] = 0xE600000000000000;
    AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v3 + 16) && (v4 = sub_100027770((uint64_t)v8), (v5 & 1) != 0))
    {
      sub_10000990C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
    }
    else
    {
      v9 = 0u;
      v10 = 0u;
    }
    swift_bridgeObjectRelease(v3);
    sub_10000FC6C((uint64_t)v8);
    if (*((_QWORD *)&v10 + 1))
    {
      v6 = sub_1000057B4(&qword_1004B8480);
      if (swift_dynamicCast(v7, &v9, (char *)&type metadata for Any + 8, v6, 6))
        return (_QWORD *)v7[0];
    }
    else
    {
      sub_10000FE2C((uint64_t)&v9, &qword_1004B7068);
    }
    return _swiftEmptyArrayStorage;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1000231FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_1000057B4(&qword_1004B7108);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100023960(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100023308(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_1000057B4(&qword_1004B8490);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100023A48(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100023414(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_1000057B4(&qword_1004B7400);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100023960(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100023520(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_1000057B4(&qword_1004B8488);
  v11 = *(_QWORD *)(sub_1000057B4(&qword_1004B7420) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_1000057B4(&qword_1004B7420);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100023B38(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_100023730(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_1000057B4(&qword_1004B8498);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100023D48(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10002383C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_1000057B4(&qword_1004B84A0);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100023C54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_100023960(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100023A48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100023B38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(sub_1000057B4(&qword_1004B7420) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100023C54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100023D48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_1000057B4(&qword_1004B7738);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_100023E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000057B4(&qword_1004B8798);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v13 = *v6;
    v7 = *((id *)v6 - 1);
    swift_retain(*((_QWORD *)&v13 + 1));
    result = sub_1000276F4((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v7;
    *(_OWORD *)(v4[7] + 16 * result) = v13;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4[2] = v12;
    v6 = (_OWORD *)((char *)v6 + 24);
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100023F6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000057B4(&qword_1004B8330);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000FEB4(v7, (uint64_t)v16, &qword_1004B8788);
    result = sub_100027770((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100007EE4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000240AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000057B4((uint64_t *)&unk_1004B7748);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_retain(v7);
    result = sub_100027804((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000241B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000057B4(&qword_1004B8770);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000FEB4(v7, (uint64_t)&v16, &qword_1004B8778);
    v8 = v16;
    v9 = v17;
    result = sub_1000277A0(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100007EE4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000242E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v3 = v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
  v4 = type metadata accessor for URL(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreIdentifier;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v5(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreURL, 1, 1, v4);
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumArtist);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isPlaying) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isExplicit) = 0;
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
  *v11 = 0;
  v11[1] = 0;
  v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser);
  *v12 = 0;
  v12[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_offerTypes) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_100024428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t result;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  _BYTE v52[24];
  char v53[24];

  v1 = v0;
  v2 = sub_1000057B4(&qword_1004B73F8);
  v3 = __chkstk_darwin(v2);
  v48 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v49 = (uint64_t)&v48 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v48 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v48 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v48 - v16;
  v18 = v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL, v53, 0, 0);
  sub_10000FEB4(v18, (uint64_t)v17, &qword_1004B73F8);
  v19 = type metadata accessor for URL(0);
  v50 = *(_QWORD *)(v19 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v21 = v20(v17, 1, v19);
  result = sub_100021558((uint64_t)v17);
  if (v21 == 1)
  {
    if (qword_1004B6EC0 != -1)
      swift_once(&qword_1004B6EC0, sub_10001FEF0);
    v23 = *(void **)(qword_1004F4578 + 24);
    v24 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", *(_QWORD *)(v1 + 16));
    v25 = objc_msgSend(v23, "objectForKey:", v24);

    if (v25)
    {
      v26 = objc_msgSend(v25, "productPageURL");
      if (v26)
      {
        v27 = v26;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v28 = 0;
      }
      else
      {
        v28 = 1;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v12, v28, 1, v19);
      sub_100026620((uint64_t)v12, (uint64_t)v15);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v15, 1, 1, v19);
    }
    swift_beginAccess(v18, v52, 33, 0);
    sub_100026668((uint64_t)v15, v18);
    result = swift_endAccess(v52);
  }
  v29 = OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews;
  if (!*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews) + 16))
  {
    if (qword_1004B6EC0 != -1)
      swift_once(&qword_1004B6EC0, sub_10001FEF0);
    v30 = *(void **)(qword_1004F4578 + 24);
    v31 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", *(_QWORD *)(v1 + 16));
    v32 = objc_msgSend(v30, "objectForKey:", v31);

    if (v32)
    {
      v33 = v32;
      v34 = (_QWORD *)sub_1000226AC();

    }
    else
    {
      v34 = _swiftEmptyArrayStorage;
    }
    v35 = *(_QWORD *)(v1 + v29);
    *(_QWORD *)(v1 + v29) = v34;
    result = swift_bridgeObjectRelease(v35);
  }
  v36 = v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreIdentifier;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreIdentifier + 8) & 1) == 0)
  {
    v37 = v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreURL;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreURL, v52, 0, 0);
    sub_10000FEB4(v37, (uint64_t)v9, &qword_1004B73F8);
    v38 = v20(v9, 1, v19);
    result = sub_100021558((uint64_t)v9);
    if (v38 == 1)
    {
      if (qword_1004B6EC0 == -1)
      {
        if ((*(_BYTE *)(v36 + 8) & 1) == 0)
        {
LABEL_22:
          v39 = *(void **)(qword_1004F4578 + 24);
          v40 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", *(_QWORD *)v36);
          v41 = objc_msgSend(v39, "objectForKey:", v40);

          if (v41)
          {
            v42 = objc_msgSend(v41, "productPageURL");
            if (v42)
            {
              v43 = v42;
              v44 = v48;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              v45 = 0;
            }
            else
            {
              v45 = 1;
              v44 = v48;
            }

            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v44, v45, 1, v19);
            v47 = (uint64_t)v44;
            v46 = v49;
            sub_100026620(v47, v49);
          }
          else
          {
            v46 = v49;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v19);
          }
          swift_beginAccess(v37, v51, 33, 0);
          sub_100026668(v46, v37);
          return swift_endAccess(v51);
        }
      }
      else
      {
        result = swift_once(&qword_1004B6EC0, sub_10001FEF0);
        if ((*(_BYTE *)(v36 + 8) & 1) == 0)
          goto LABEL_22;
      }
      __break(1u);
    }
  }
  return result;
}

double sub_100024950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t inited;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  double result;
  _BYTE v27[40];
  _BYTE v28[24];

  v3 = v2;
  v6 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v2 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL, v28, 0, 0);
  sub_10000FEB4(v9, (uint64_t)v8, &qword_1004B73F8);
  v10 = type metadata accessor for URL(0);
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
  sub_100021558((uint64_t)v8);
  if (v11 != 1)
  {
    v18 = (_QWORD *)swift_allocObject(&unk_100465AB8, 40, 7);
    v18[2] = v3;
    v18[3] = a1;
    v18[4] = a2;
    v19 = *(uint64_t (**)(uint64_t))(v3
                                            + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
    if (v19)
    {
      v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8);
      swift_retain_n(v3, 2);
      swift_retain_n(a2, 2);
      v21 = sub_10000DCE8((uint64_t)v19, v20);
      v22 = (void *)v19(v21);
      sub_10000DCF8((uint64_t)v19, v20);
      if (v22)
      {
        v14 = (_QWORD *)swift_allocObject(&unk_100465B08, 40, 7);
        v14[2] = sub_100026020;
        v14[3] = v18;
        v14[4] = v3;
        swift_retain(v3);
        swift_retain(v18);
        MPArtworkCatalog.requestImage(_:)((uint64_t)sub_100026074, (uint64_t)v14);
        swift_release(a2);
        swift_release(v3);
        swift_release(v18);

        goto LABEL_10;
      }
    }
    else
    {
      swift_retain_n(v3, 2);
      swift_retain_n(a2, 2);
    }
    v23 = sub_100025880();
    v24 = sub_1000256CC();
    objc_msgSend(v24, "setSpecialization:", v23);
    sub_10002602C();
    v14 = (_QWORD *)swift_allocObject(&unk_100465AE0, 40, 7);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v24;
    swift_retain(a2);
    v25 = v24;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10002606C, (uint64_t)v14);
    swift_release(a2);
    swift_release(v3);
    swift_release(v18);

    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v3 + 16);
  if (qword_1004B6EC0 != -1)
    swift_once(&qword_1004B6EC0, sub_10001FEF0);
  v13 = swift_allocObject(&unk_100465A40, 24, 7);
  swift_weakInit(v13 + 16, v3);
  v14 = (_QWORD *)swift_allocObject(&unk_100465A68, 56, 7);
  v14[2] = v13;
  v14[3] = v3;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = v12;
  v15 = sub_1000057B4(&qword_1004B7400);
  inited = swift_initStackObject(v15, v27);
  *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
  *(_QWORD *)(inited + 32) = v12;
  v17 = (_QWORD *)swift_allocObject(&unk_100465A90, 40, 7);
  v17[2] = sub_100025FD0;
  v17[3] = v14;
  v17[4] = v12;
  swift_retain(v3);
  swift_retain(a2);
  swift_retain(v13);
  swift_retain(v14);
  sub_10001FFC4(inited, sub_100026010, (uint64_t)v17);
  swift_release(v17);
  swift_setDeallocating(inited);
  swift_release(v13);
LABEL_10:
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

double sub_100024CE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  id v10;
  Class isa;
  NSString v12;
  id v13;
  id v14;
  _QWORD *v15;
  id v16;
  double result;

  v9 = sub_100025880();
  if (a2 >> 60 != 15)
  {
    v10 = objc_allocWithZone((Class)LPImage);
    sub_10002676C(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "initWithData:MIMEType:", isa, v12);

    objc_msgSend(v9, "setArtwork:", v13);
    sub_10000FC14(a1, a2);
  }
  v14 = sub_1000256CC();
  objc_msgSend(v14, "setSpecialization:", v9);
  sub_10002602C();
  v15 = (_QWORD *)swift_allocObject(&unk_100465C70, 40, 7);
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = v14;
  swift_retain(a5);
  v16 = v14;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10002606C, (uint64_t)v15);

  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_100024E4C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  unint64_t v28;
  NSString v29;
  _QWORD *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  _QWORD *v45;
  id v46;
  id v47;
  _QWORD *v48;
  id v49;
  id v50;
  id v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE v58[24];

  v14 = sub_1000057B4(&qword_1004B73F8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v54 - v18;
  a3 += 16;
  swift_beginAccess(a3, v58, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v21 = Strong;
    if ((a2 & 1) == 0)
    {
      v22 = objc_msgSend(a1, "productPageURL");
      if (v22)
      {
        v23 = v22;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v24 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v19, 0, 1, v24);
      }
      else
      {
        v37 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v19, 1, 1, v37);
      }
      sub_100026620((uint64_t)v19, (uint64_t)v17);
      v38 = v21 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
      swift_beginAccess(v21 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL, &v55, 33, 0);
      sub_100026668((uint64_t)v17, v38);
      swift_endAccess(&v55);
      v39 = (_QWORD *)swift_allocObject(&unk_100465BF8, 40, 7);
      v39[2] = a4;
      v39[3] = a5;
      v39[4] = a6;
      v40 = *(uint64_t (**)(uint64_t))(a4
                                              + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
      if (v40)
      {
        v41 = *(_QWORD *)(a4 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8);
        swift_retain_n(a4, 2);
        swift_retain_n(a6, 2);
        v42 = sub_10000DCE8((uint64_t)v40, v41);
        v43 = (void *)v40(v42);
        sub_10000DCF8((uint64_t)v40, v41);
        if (v43)
        {
          v44 = (_QWORD *)swift_allocObject(&unk_100465C48, 40, 7);
          v44[2] = sub_100026784;
          v44[3] = v39;
          v44[4] = a4;
          swift_retain(a4);
          swift_retain(v39);
          MPArtworkCatalog.requestImage(_:)((uint64_t)sub_100026780, (uint64_t)v44);
          swift_release(v21);
          swift_release(a6);
          swift_release(a4);
          swift_release(v39);

          v45 = v44;
LABEL_17:
          swift_release(v45);
          sub_10000FCC0(a1, 0);
          return;
        }
      }
      else
      {
        swift_retain_n(a4, 2);
        swift_retain_n(a6, 2);
      }
      v50 = sub_100025880();
      v51 = sub_1000256CC();
      objc_msgSend(v51, "setSpecialization:", v50);
      sub_10002602C();
      v52 = (_QWORD *)swift_allocObject(&unk_100465C20, 40, 7);
      v52[2] = a5;
      v52[3] = a6;
      v52[4] = v51;
      swift_retain(a6);
      v53 = v51;
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10002606C, (uint64_t)v52);
      swift_release(v21);
      swift_release(a6);
      swift_release(a4);
      swift_release(v39);

      v45 = v52;
      goto LABEL_17;
    }
    v55 = 0;
    v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease(v56);
    v55 = 0xD00000000000002CLL;
    v56 = 0x80000001003A5D00;
    v57 = a7;
    v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    object = v25._object;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(object);
    v27._countAndFlagsBits = 46;
    v27._object = (void *)0xE100000000000000;
    String.append(_:)(v27);
    v28 = v56;
    v29 = String._bridgeToObjectiveC()();
    MMALog(v29);
    swift_bridgeObjectRelease(v28);

    v30 = (_QWORD *)swift_allocObject(&unk_100465B80, 40, 7);
    v30[2] = a4;
    v30[3] = a5;
    v30[4] = a6;
    v31 = *(uint64_t (**)(uint64_t))(a4
                                            + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing);
    if (v31)
    {
      v32 = *(_QWORD *)(a4 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8);
      swift_retain_n(a4, 2);
      swift_retain_n(a6, 2);
      v33 = sub_10000DCE8((uint64_t)v31, v32);
      v34 = (void *)v31(v33);
      sub_10000DCF8((uint64_t)v31, v32);
      if (v34)
      {
        v35 = (_QWORD *)swift_allocObject(&unk_100465BD0, 40, 7);
        v35[2] = sub_100026784;
        v35[3] = v30;
        v35[4] = a4;
        swift_retain(a4);
        swift_retain(v30);
        MPArtworkCatalog.requestImage(_:)((uint64_t)sub_100026780, (uint64_t)v35);
        swift_release(v21);
        swift_release(a6);
        swift_release(a4);
        swift_release(v30);

        v36 = v35;
LABEL_14:
        swift_release(v36);
        return;
      }
    }
    else
    {
      swift_retain_n(a4, 2);
      swift_retain_n(a6, 2);
    }
    v46 = sub_100025880();
    v47 = sub_1000256CC();
    objc_msgSend(v47, "setSpecialization:", v46);
    sub_10002602C();
    v48 = (_QWORD *)swift_allocObject(&unk_100465BA8, 40, 7);
    v48[2] = a5;
    v48[3] = a6;
    v48[4] = v47;
    swift_retain(a6);
    v49 = v47;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10002606C, (uint64_t)v48);
    swift_release(v21);
    swift_release(a6);
    swift_release(a4);
    swift_release(v30);

    v36 = v48;
    goto LABEL_14;
  }
}

void sub_1000253C8(void *a1, char a2, void (*a3)(uint64_t, unint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSData *v17;
  NSData *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    aBlock[0] = a1;
    v28 = sub_1000057B4(&qword_1004B8088);
    swift_willThrowTypedImpl(aBlock, v28, &protocol self-conformance witness table for Error);
LABEL_9:
    a3(0, 0xF000000000000000);
    return;
  }
  v17 = UIImagePNGRepresentation((UIImage *)a1);
  if (!v17)
  {
    sub_10000FCC0(a1, 0);
    goto LABEL_9;
  }
  v18 = v17;
  v30 = v14;
  v31 = v13;
  v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;

  if ((*(_BYTE *)(a5 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_isNowPlaying) & 1) != 0)
  {
    if (qword_1004B6ED8 != -1)
      swift_once(&qword_1004B6ED8, sub_100025BD4);
    v29[1] = qword_1004B84A8;
    v22 = (_QWORD *)swift_allocObject(&unk_100465B30, 48, 7);
    v22[2] = v19;
    v22[3] = v21;
    v22[4] = a3;
    v22[5] = a4;
    aBlock[4] = sub_1000260F4;
    v35 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011FD0;
    aBlock[3] = &unk_100465B48;
    v23 = _Block_copy(aBlock);
    sub_100026084(v19, v21);
    v24 = swift_retain(a4);
    static DispatchQoS.unspecified.getter(v24);
    v33 = _swiftEmptyArrayStorage;
    v25 = sub_100026160();
    v26 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v27 = sub_1000261A8();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v26, v27, v10, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v23);
    sub_10000FCC0(a1, 0);
    _Block_release(v23);
    sub_10000FC28(v19, v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v31);
    swift_release(v35);
  }
  else
  {
    sub_100026084(v19, v21);
    a3(v19, v21);
    sub_10000FC28(v19, v21);
    sub_10000FC28(v19, v21);
    sub_10000FCC0(a1, 0);
  }
}

id sub_1000256CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSURL *v12;
  void *v13;
  void *v14;
  NSURL *v15;
  void *v16;
  void *v17;
  _BYTE v20[24];

  v1 = sub_1000057B4(&qword_1004B73F8);
  v2 = __chkstk_darwin(v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v20[-v5 - 8];
  v7 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v8 = v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL, v20, 0, 0);
  sub_10000FEB4(v8, (uint64_t)v6, &qword_1004B73F8);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v13 = 0;
  if (v11(v6, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    v13 = v14;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  objc_msgSend(v7, "setURL:", v13);

  sub_10000FEB4(v8, (uint64_t)v4, &qword_1004B73F8);
  if (v11(v4, 1, v9) == 1)
  {
    v16 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v15);
    v16 = v17;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  objc_msgSend(v7, "setOriginalURL:", v16);

  return v7;
}

id sub_100025880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSURL *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  _QWORD v29[2];

  v1 = v0;
  v2 = sub_1000057B4(&qword_1004B7420);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
  v29[1] = *(_QWORD *)(v0 + 16);
  dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v9, "setStoreIdentifier:", v12);

  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v9, "setName:", v14);

  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
  if (v15)
  {
    swift_bridgeObjectRetain();
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v9, "setArtist:", v16);

  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album + 8);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v9, "setAlbum:", v18);

  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews);
  if (*(_QWORD *)(v19 + 16))
  {
    sub_10000FEB4(v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v5, &qword_1004B7420);
    v20 = type metadata accessor for URL(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v8, v5, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v8, 0, 1, v20);
    v23 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20) != 1)
    {
      URL._bridgeToObjectiveC()(v22);
      v23 = v24;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    }
  }
  else
  {
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
    v23 = 0;
  }
  objc_msgSend(v9, "setPreviewURL:", v23);

  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_offerTypes);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  objc_msgSend(v9, "setOffers:", isa);

  return v9;
}

uint64_t sub_100025BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *ObjCClassFromMetadata;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002602C();
  type metadata accessor for SharableTrack(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v11 = NSStringFromClass(ObjCClassFromMetadata);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v16 = static DispatchQoS.userInitiated.getter(v15);
  static OS_dispatch_queue.Attributes.concurrent.getter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v12, v14, v9, v6, v3, 0);
  qword_1004B84A8 = result;
  return result;
}

uint64_t sub_100025D3C()
{
  uint64_t v0;

  sub_100021558(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_trackStoreURL);
  sub_100021558(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumStoreURL);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_album + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_albumArtist + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForSharing + 8));
  sub_10000DCF8(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artworkCatalogForBrowser + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_audioPreviews));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_offerTypes));
  return v0;
}

uint64_t sub_100025E08()
{
  uint64_t v0;

  sub_100025D3C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100025E2C()
{
  return type metadata accessor for SharableTrack(0);
}

uint64_t type metadata accessor for SharableTrack(uint64_t a1)
{
  uint64_t result;

  result = qword_1004B84D8;
  if (!qword_1004B84D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SharableTrack);
  return result;
}

void sub_100025E70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  char *v17;
  char *v18;

  v4 = (char *)&value witness table for Builtin.Int64 + 64;
  sub_100025F24(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = "\t";
    v7 = v5;
    v8 = &unk_1003C6B28;
    v9 = &unk_1003C6B28;
    v10 = &unk_1003C6B28;
    v11 = &unk_1003C6B28;
    v12 = &unk_1003C6B40;
    v13 = &unk_1003C6B40;
    v14 = &unk_1003C6B40;
    v15 = &unk_1003C6B28;
    v16 = &unk_1003C6B28;
    v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 15, &v4, a1 + 80);
  }
}

void sub_100025F24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004B84E8)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004B84E8);
  }
}

uint64_t sub_100025F78()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100025F9C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_100025FD0(void *a1, char a2)
{
  uint64_t *v2;

  sub_100024E4C(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100025FE4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100026010(uint64_t a1)
{
  uint64_t v1;

  sub_10001FF28(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_100026020(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return sub_100024CE4(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_10002602C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B73E0;
  if (!qword_1004B73E0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004B73E0);
  }
  return result;
}

void sub_100026074(void *a1, char a2)
{
  uint64_t v2;

  sub_1000253C8(a1, a2 & 1, *(void (**)(uint64_t, unint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100026084(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000260C8()
{
  _QWORD *v0;

  sub_10000FC28(v0[2], v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000260F4()
{
  _QWORD *v0;
  void (*v1)(void);
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = (void (*)(void))v0[4];
  v2 = sub_1000263F4(v0[2], v0[3], 300.0, 0.8);
  v4 = v3;
  v1();
  return sub_10000FC28(v2, v4);
}

uint64_t sub_100026148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100026158(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100026160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B7168;
  if (!qword_1004B7168)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1004B7168);
  }
  return result;
}

unint64_t sub_1000261A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004B7170;
  if (!qword_1004B7170)
  {
    v1 = sub_100009788((uint64_t *)&unk_1004B73A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1004B7170);
  }
  return result;
}

unint64_t sub_1000261F4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_1000057B4(&qword_1004B8790);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = sub_100027740(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain(v4);
    result = sub_100027740(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000262F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_1000057B4(&qword_1004B8780);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  result = sub_100027740(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  v9 = (_BYTE *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v10 = v3[7] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_BYTE *)(v10 + 8) = v6 & 1;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    sub_10000FCB4(v4, v6 & 1);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *((_QWORD *)v9 - 2);
    v4 = (void *)*((_QWORD *)v9 - 1);
    v6 = *v9;
    result = sub_100027740(v5);
    v9 += 24;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000263F4(uint64_t a1, unint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSDictionary v14;
  __CFData *v15;
  __CFString *v16;
  CGImageDestination *v17;
  const __CFData *isa;
  CGImageSource *v19;
  __CFData *v20;
  uint64_t v22;

  v8 = sub_1000057B4(&qword_1004B8768);
  inited = swift_initStackObject(v8, &v22);
  *(_OWORD *)(inited + 16) = xmmword_1003C6280;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCGImageDestinationImageMaxPixelSize);
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 72) = &type metadata for CGFloat;
  *(double *)(inited + 48) = a3;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCGImageDestinationLossyCompressionQuality);
  *(_QWORD *)(inited + 88) = v11;
  *(_QWORD *)(inited + 120) = &type metadata for CGFloat;
  *(double *)(inited + 96) = a4;
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCGImageSourceShouldCache);
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 0;
  v13 = sub_1000241B4(inited);
  v14.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  v15 = (__CFData *)objc_msgSend(objc_allocWithZone((Class)NSMutableData), "init");
  v16 = (__CFString *)String._bridgeToObjectiveC()();
  v17 = CGImageDestinationCreateWithData(v15, v16, 1uLL, v14.super.isa);

  if (v17)
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    v19 = CGImageSourceCreateWithData(isa, 0);

    if (v19)
    {
      CGImageDestinationAddImageFromSource(v17, v19, 0, v14.super.isa);
      CGImageDestinationFinalize(v17);

      v17 = v19;
    }

  }
  if ((uint64_t)-[__CFData length](v15, "length") < 1)
  {

    sub_100026084(a1, a2);
  }
  else
  {
    v20 = v15;
    a1 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);

  }
  return a1;
}

uint64_t sub_100026620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B73F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100026668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B73F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000266B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000266E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100026718()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100026744()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10002676C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100026084(result, a2);
  return result;
}

_QWORD *sub_100026788()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  v0 = type metadata accessor for NowPlayingObserver();
  v1 = swift_allocObject(v0, 58, 7);
  result = sub_1000268B0();
  qword_1004F45F0 = v1;
  return result;
}

id sub_1000267C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v7 = swift_allocObject(&unk_100465D88, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  swift_beginAccess(v3 + 40, v13, 33, 0);
  v8 = v6;
  swift_retain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 40));
  v12 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0x8000000000000000;
  sub_10002882C((uint64_t)sub_100029258, v7, v8, isUniquelyReferenced_nonNull_native);
  v10 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v12;

  swift_bridgeObjectRelease(v10);
  swift_endAccess(v13);
  return v8;
}

_QWORD *sub_1000268B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *ObjCClassFromMetadata;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000598C(0, &qword_1004B8920, NSDictionary_ptr);
  v11 = NSDictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v11;
  v0[5] = sub_100023E50((uint64_t)_swiftEmptyArrayStorage);
  v23 = sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
  type metadata accessor for NowPlayingObserver();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v13 = NSStringFromClass(ObjCClassFromMetadata);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  static DispatchQoS.userInitiated.getter();
  v26 = _swiftEmptyArrayStorage;
  v17 = sub_100004D8C((unint64_t *)&unk_1004B7450, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_1000057B4(&qword_1004B7178);
  v19 = sub_100009890((unint64_t *)&unk_1004B7460, &qword_1004B7178);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v18, v19, v5, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v25);
  v1[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v14, v16, v10, v7, v4, 0);
  *((_WORD *)v1 + 28) = 0;
  sub_100026BD4();
  if ((*((_BYTE *)v1 + 57) & 1) == 0)
  {
    *((_BYTE *)v1 + 57) = 1;
    v20 = swift_allocObject(&unk_100465D38, 24, 7);
    swift_weakInit(v20 + 16, v1);
    swift_retain(v20);
    sub_1000271A8(0, (void (*)(void *))sub_10002922C, v20);
    swift_release_n(v20, 2, v21);
  }
  return v1;
}

uint64_t sub_100026B40()
{
  uint64_t v0;
  _BYTE v2[8];

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    *(_BYTE *)(v0 + 56) = 0;
    swift_weakInit(v2, v0);
    sub_100026EB8((uint64_t)v2);
    swift_weakDestroy(v2);
  }

  sub_10000DCF8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 58, 7);
}

uint64_t type metadata accessor for NowPlayingObserver()
{
  return objc_opt_self(_TtC16MusicMessagesApp18NowPlayingObserver);
}

double sub_100026BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    *(_BYTE *)(v0 + 56) = 1;
    v20 = *(_QWORD *)(v0 + 48);
    v10 = swift_allocObject(&unk_100465D38, 24, 7);
    v19 = v2;
    v11 = v10;
    swift_weakInit(v10 + 16, v0);
    aBlock[4] = sub_10002766C;
    v23 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011FD0;
    aBlock[3] = &unk_100465D50;
    v12 = _Block_copy(aBlock);
    v13 = swift_retain(v11);
    static DispatchQoS.unspecified.getter(v13);
    v21 = _swiftEmptyArrayStorage;
    v14 = sub_100004D8C((unint64_t *)&qword_1004B7168, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_1000057B4((uint64_t *)&unk_1004B73A0);
    v16 = sub_100009890((unint64_t *)&qword_1004B7170, (uint64_t *)&unk_1004B73A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v1, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v17 = v23;
    swift_release(v11);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

void sub_100026DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  const void *v3;
  __CFNotificationCenter *v4;
  __CFNotificationCenter *v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = (const void *)Strong;
    MRMediaRemoteRegisterForNowPlayingNotifications(*(_QWORD *)(Strong + 48));
    v4 = CFNotificationCenterGetLocalCenter();
    CFNotificationCenterAddObserver(v4, v3, (CFNotificationCallback)sub_100026EB0, kMRMediaRemoteNowPlayingInfoDidChangeNotification, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    v5 = CFNotificationCenterGetLocalCenter();
    CFNotificationCenterAddObserver(v5, v3, (CFNotificationCallback)sub_100026EB0, kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    swift_release(v3);

  }
}

void sub_100026EB0(uint64_t a1, uint64_t a2)
{
  sub_10002918C(a2);
}

void sub_100026EB8(uint64_t a1)
{
  uint64_t Strong;
  const void *v3;
  __CFNotificationCenter *v4;
  __CFNotificationCenter *v5;
  __CFNotificationCenter *v6;
  __CFNotificationCenter *v7;
  _BYTE v8[24];

  swift_beginAccess(a1, v8, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v3 = (const void *)Strong;
    MRMediaRemoteUnregisterForNowPlayingNotifications();
    v4 = CFNotificationCenterGetLocalCenter();
    if (kMRMediaRemoteNowPlayingInfoDidChangeNotification)
    {
      v5 = v4;
      CFNotificationCenterRemoveObserver(v4, v3, kMRMediaRemoteNowPlayingInfoDidChangeNotification, 0);

      v6 = CFNotificationCenterGetLocalCenter();
      if (kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification)
      {
        v7 = v6;
        CFNotificationCenterRemoveObserver(v6, v3, kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification, 0);
        swift_release(v3);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

double sub_100026F70(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    *(_BYTE *)(Strong + 57) = 0;
    sub_100026FD0(a1);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_100026FD0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  id v4;
  void (*v5)(void);
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void **);
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  void *v26;
  _BYTE v27[24];

  v2 = v1;
  v3 = (void *)v1[2];
  v2[2] = a1;
  v4 = a1;

  v5 = (void (*)(void))v2[3];
  if (v5)
  {
    v6 = v2[4];
    v7 = (void *)v2[2];
    sub_10000DCE8(v2[3], v6);
    v8 = v7;
    v5();
    sub_10000DCF8((uint64_t)v5, v6);

  }
  swift_beginAccess(v2 + 5, v27, 0, 0);
  v9 = v2[5];
  v10 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v9 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_7;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v14)
      goto LABEL_23;
    v24 = *(_QWORD *)(v10 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_23;
      v24 = *(_QWORD *)(v10 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v14)
          goto LABEL_23;
        v24 = *(_QWORD *)(v10 + 8 * v15);
        if (!v24)
          break;
      }
    }
LABEL_22:
    v13 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_7:
    v18 = *(_QWORD *)(v9 + 56) + 16 * v17;
    v20 = *(void (**)(void **))v18;
    v19 = *(_QWORD *)(v18 + 8);
    v26 = (void *)v2[2];
    v21 = v26;
    swift_retain(v19);
    v22 = v21;
    v20(&v26);
    swift_release(v19);

  }
  v25 = v23 + 3;
  if (v25 >= v14)
  {
LABEL_23:
    swift_release(v9);
    return;
  }
  v24 = *(_QWORD *)(v10 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v14)
      goto LABEL_23;
    v24 = *(_QWORD *)(v10 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1000271A8(char a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  dispatch_semaphore_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27[24];
  _QWORD aBlock[5];
  uint64_t v29;
  dispatch_semaphore_t v30;

  v26 = a3;
  v6 = type metadata accessor for DispatchTime(0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v30 = 0;
  if ((a1 & 1) != 0)
  {
    v9 = dispatch_semaphore_create(0);
    v30 = v9;
  }
  v10 = swift_allocObject(&unk_100465C98, 24, 7);
  *(_QWORD *)(v10 + 16) = 0;
  v11 = (void **)(v10 + 16);
  v12 = *(_QWORD *)(v3 + 48);
  v13 = swift_allocObject(&unk_100465CC0, 56, 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_BYTE *)(v13 + 24) = a1 & 1;
  *(_QWORD *)(v13 + 32) = v9;
  *(_QWORD *)(v13 + 40) = a2;
  v14 = v26;
  *(_QWORD *)(v13 + 48) = v26;
  aBlock[4] = sub_10002753C;
  v29 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000148C8;
  aBlock[3] = &unk_100465CD8;
  v15 = _Block_copy(aBlock);
  v16 = v29;
  swift_retain(v10);
  sub_10000DCE8((uint64_t)a2, v14);
  v17 = v9;
  v18 = swift_release(v16);
  MRMediaRemoteGetNowPlayingInfo(v12, v15, v18);
  _Block_release(v15);
  if ((a1 & 1) == 0)
    goto LABEL_11;
  swift_beginAccess(&v30, aBlock, 0, 0);
  if (v30)
  {
    v19 = v30;
    static DispatchTime.distantFuture.getter();
    OS_dispatch_semaphore.wait(timeout:)(v8);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
    if (a2)
    {
      swift_beginAccess(v11, v27, 0, 0);
      v20 = *v11;
      if (*v11)
      {
        v21 = *v11;
      }
      else
      {
        sub_10000598C(0, &qword_1004B8920, NSDictionary_ptr);
        v21 = (void *)NSDictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
        v20 = 0;
      }
      v22 = v20;
      a2(v21);

    }
    v17 = v30;
LABEL_11:
    swift_release(v10);

    return;
  }
  __break(1u);
}

uint64_t sub_1000273E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100027408(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  id v13;
  _QWORD *v14;
  _BYTE v15[24];

  swift_beginAccess(a2 + 16, v15, 1, 0);
  v12 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v13 = a1;

  if ((a3 & 1) != 0)
  {
    if (a4)
      OS_dispatch_semaphore.signal()();
    else
      __break(1u);
  }
  else
  {
    sub_10000598C(0, (unint64_t *)&qword_1004B73E0, OS_dispatch_queue_ptr);
    v14 = (_QWORD *)swift_allocObject(&unk_100465D10, 40, 7);
    v14[2] = a5;
    v14[3] = a6;
    v14[4] = a2;
    sub_10000DCE8(a5, a6);
    swift_retain(a2);
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10002763C, (uint64_t)v14);
    swift_release(v14);
  }
}

uint64_t sub_100027500()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10002753C(void *a1)
{
  uint64_t v1;

  sub_100027408(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_100027550(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  if (a1)
  {
    swift_beginAccess(a3 + 16, v8, 0, 0);
    v5 = *(void **)(a3 + 16);
    if (v5)
    {
      v6 = *(void **)(a3 + 16);
    }
    else
    {
      sub_10000598C(0, &qword_1004B8920, NSDictionary_ptr);
      v6 = (void *)NSDictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
      v5 = 0;
    }
    v7 = v5;
    a1(v6);

  }
}

uint64_t sub_1000275F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100027600(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100027608()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10002763C()
{
  uint64_t v0;

  sub_100027550(*(void (**)(void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100027648()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10002766C()
{
  uint64_t v0;

  sub_100026DE0(v0);
}

unint64_t sub_100027674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_100027850(a1, v5);
}

unint64_t sub_1000276F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100027C04(a1, v4, &qword_1004B8928, NSUUID_ptr);
}

unint64_t sub_100027740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_1000279C4(a1, v3);
}

unint64_t sub_100027770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100027A60(a1, v4);
}

unint64_t sub_1000277A0(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_100027B24(a1, a2, v4);
}

unint64_t sub_100027804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100027C04(a1, v4, (unint64_t *)&qword_1004B7740, UIViewController_ptr);
}

unint64_t sub_100027850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000279C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100027A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10000FCD4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10000FC6C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100027B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100027C04(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_10000598C(0, a3, a4);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v9 = static NSObject.== infix(_:_:)();

    if ((v9 & 1) == 0)
    {
      v10 = ~v6;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v12 = static NSObject.== infix(_:_:)();

        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

void sub_100027D14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004B8798);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 64;
    swift_retain(v5);
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v21 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v22 = v21 | (v15 << 6);
      }
      else
      {
        v23 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v13)
          goto LABEL_36;
        v24 = v10[v23];
        ++v15;
        if (!v24)
        {
          v15 = v23 + 1;
          if (v23 + 1 >= v13)
            goto LABEL_36;
          v24 = v10[v15];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v13)
            {
LABEL_36:
              swift_release(v5);
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v33;
                goto LABEL_43;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v15 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v15 >= v13)
                  goto LABEL_36;
                v24 = v10[v15];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v15 = v25;
          }
        }
LABEL_33:
        v12 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v22);
      v34 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v22);
      if ((a2 & 1) == 0)
      {
        v31 = v30;
        swift_retain(*((_QWORD *)&v34 + 1));
      }
      v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
      v17 = -1 << *(_BYTE *)(v8 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v19 == v27;
          if (v19 == v27)
            v19 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v19);
        }
        while (v29 == -1);
        v20 = __clz(__rbit64(~v29)) + (v19 << 6);
      }
      *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v20) = v30;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v20) = v34;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_100027FE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t *v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004B8780);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 0;
    v37 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v10;
    v34 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v36)
          goto LABEL_36;
        v23 = v37[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_36;
          v23 = v37[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v35;
                goto LABEL_43;
              }
              if (v34 >= 64)
                bzero(v37, 8 * v36);
              else
                *v37 = v33;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v36)
                  goto LABEL_36;
                v23 = v37[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v21);
      v30 = *(_QWORD *)(v5 + 56) + 16 * v21;
      v31 = *(void **)v30;
      v32 = *(_BYTE *)(v30 + 8);
      if ((a2 & 1) == 0)
        sub_10000FCB4(*(void **)v30, *(_BYTE *)(v30 + 8));
      v14 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v29);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 16 * v18;
      *(_QWORD *)v19 = v31;
      *(_BYTE *)(v19 + 8) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_1000282A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4(&qword_1004B8790);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v5 + 64), 8 * v36);
                else
                  *v10 = v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v9 >= v36)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v5 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v31 + v30));
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v32);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100028558(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1000057B4((uint64_t *)&unk_1004B7748);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_retain(v33);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10002882C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v5 = v4;
  v9 = *v4;
  v11 = sub_1000276F4((uint64_t)a3);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_100028AD4();
LABEL_7:
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = (_QWORD *)(v17[7] + 16 * v11);
      swift_release(v18[1]);
      *v18 = a1;
      v18[1] = a2;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_QWORD *)(v17[6] + 8 * v11) = a3;
    v21 = (_QWORD *)(v17[7] + 16 * v11);
    *v21 = a1;
    v21[1] = a2;
    v22 = v17[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v17[2] = v24;
      v25 = a3;
      return;
    }
    goto LABEL_14;
  }
  sub_100027D14(v14, a4 & 1);
  v19 = sub_1000276F4((uint64_t)a3);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v26 = sub_10000598C(0, &qword_1004B8928, NSUUID_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v26);
  __break(1u);
}

void sub_10002899C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100027740(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100028E44();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_release(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1000282A4(v13, a3 & 1);
  v18 = sub_100027740(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int64);
  __break(1u);
}

void sub_100028AD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23;

  v1 = v0;
  sub_1000057B4(&qword_1004B8798);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v23 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v23;
    v19 = v17;
    swift_retain(*((_QWORD *)&v23 + 1));
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100028C90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1000057B4(&qword_1004B8780);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    v21 = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v21;
    sub_10000FCB4(v20, v21);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100028E44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1000057B4(&qword_1004B8790);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100028FE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1000057B4((uint64_t *)&unk_1004B7748);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_retain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10002918C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  __n128 v4;

  if (a1)
  {
    v2 = *(unsigned __int8 *)(a1 + 57);
    swift_retain(a1);
    if (v2 == 1)
    {
      swift_release(a1);
    }
    else
    {
      *(_BYTE *)(a1 + 57) = 1;
      v3 = swift_allocObject(&unk_100465D38, 24, 7);
      swift_weakInit(v3 + 16, a1);
      swift_retain(v3);
      sub_1000271A8(0, (void (*)(void *))sub_10002922C, v3);
      v4 = swift_release(a1);
      swift_release_n(v3, 2, v4);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_10002922C(void *a1)
{
  uint64_t v1;

  return sub_100026F70(a1, v1);
}

uint64_t sub_100029234()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100029258(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_100029284()
{
  Swift::String v0;
  Swift::String_optional v1;
  Swift::String v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v5._countAndFlagsBits = 0xD00000000000004CLL;
  v5._object = (void *)0x80000001003A6030;
  v0._object = (void *)0x80000001003A6000;
  v0._countAndFlagsBits = 0xD000000000000023;
  v1.value._countAndFlagsBits = 0;
  v1.value._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 0x206E776F6E6B6E75;
  v2._object = (void *)0xED0000656C746974;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, v1, (NSBundle)qword_1004F44D8, v2, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004F45F8 = (__int128)v4;
  return result;
}

uint64_t sub_10002933C()
{
  Swift::String v0;
  Swift::String_optional v1;
  Swift::String v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v5._countAndFlagsBits = 0xD00000000000004DLL;
  v5._object = (void *)0x80000001003A5FB0;
  v0._object = (void *)0x80000001003A5F80;
  v0._countAndFlagsBits = 0xD000000000000024;
  v1.value._countAndFlagsBits = 0;
  v1.value._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 0x206E776F6E6B6E75;
  v2._object = (void *)0xEE00747369747261;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, v1, (NSBundle)qword_1004F44D8, v2, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004F4608 = (__int128)v4;
  return result;
}

uint64_t sub_1000293F4()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String_optional v2;
  uint64_t result;
  Swift::String v4;
  Swift::String v5;

  if (qword_1004B6E10 != -1)
    swift_once(&qword_1004B6E10, sub_10000996C);
  v5._countAndFlagsBits = 0xD000000000000090;
  v5._object = (void *)0x80000001003A5EE0;
  v0._object = (void *)0x80000001003A5EA0;
  v1._object = (void *)0x80000001003A5EC0;
  v0._countAndFlagsBits = 0xD000000000000015;
  v2.value._countAndFlagsBits = 0;
  v2.value._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x100000000000001CLL;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, v2, (NSBundle)qword_1004F44D8, v1, v5);
  result = v4._countAndFlagsBits;
  xmmword_1004F4618 = (__int128)v4;
  return result;
}

void sub_1000294A4()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  void *v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for MusicMessagesAppViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = (char *)sub_10002B168();
  v2 = &v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate];
  *((_QWORD *)v2 + 1) = &off_100465DA0;
  swift_unknownObjectWeakAssign(v2, v0);
  if (!objc_msgSend(v1, "isViewLoaded"))
  {
LABEL_4:
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v0, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "bounds");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;

        objc_msgSend(v7, "setFrame:", v11, v13, v15, v17);
        objc_msgSend(v7, "setAutoresizingMask:", 18);
        v18 = objc_msgSend(v0, "view");
        if (v18)
        {
          v19 = v18;
          objc_msgSend(v18, "addSubview:", v7);

          objc_msgSend(v0, "addChildViewController:", v1);
          objc_msgSend(v1, "didMoveToParentViewController:", v0);
          v20 = *(void **)&v0[OBJC_IVAR____TtC16MusicMessagesApp30MusicMessagesAppViewController__sharingViewController];
          *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicMessagesApp30MusicMessagesAppViewController__sharingViewController] = v1;

          return;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController__collectionView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, "contentInset");
    objc_msgSend(v4, "setContentOffset:animated:", 0, 0.0, -v5);

    goto LABEL_4;
  }
LABEL_11:
  __break(1u);
}

id sub_1000296C4()
{
  char *v0;
  void *v1;
  char *v2;
  char *v3;
  char *v4;
  id result;
  void *v6;
  char *v7;
  void *v8;
  objc_class *v9;
  _BYTE v10[24];
  Swift::Int v11;
  objc_super v12;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC16MusicMessagesApp30MusicMessagesAppViewController__sharingViewController];
  if (!v2)
  {
LABEL_6:
    v9 = (objc_class *)type metadata accessor for MusicMessagesAppViewController();
    v12.receiver = v1;
    v12.super_class = v9;
    return objc_msgSendSuper2(&v12, "dealloc");
  }
  v3 = &v2[OBJC_IVAR____TtC16MusicMessagesApp34MusicMessagesSharingViewController_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakAssign(v3, 0);
  v4 = v2;
  objc_msgSend(v4, "willMoveToParentViewController:", 0);
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "removeFromSuperview");

    objc_msgSend(v4, "removeFromParentViewController");
    if (qword_1004B6F00 != -1)
      swift_once(&qword_1004B6F00, sub_100029C90);
    swift_beginAccess(&off_1004B8930, v10, 33, 0);
    v7 = v4;
    sub_10002AD78(&v11, v7);
    swift_endAccess(v10);
    v8 = (void *)v11;

    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1000298B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  id v14;
  void *v15;
  NSString v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  NSString v37;
  uint64_t v38;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4(&qword_1004B73F8);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = String._bridgeToObjectiveC()();
  AnalyticsSendEvent(v13, 0);

  v14 = objc_msgSend(a1, "URL");
  if (v14)
  {
    v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
    {
      sub_100021558((uint64_t)v12);
      objc_msgSend(a2, "mma_shareRichLinkMetadata:", a1);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  sub_100021558((uint64_t)v12);
  v16 = String._bridgeToObjectiveC()();
  AnalyticsSendEvent(v16, 0);

  v18 = *(_QWORD *)(a3 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title);
  v17 = *(_QWORD *)(a3 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_title + 8);
  v19 = qword_1004B6EE8;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once(&qword_1004B6EE8, sub_100029284);
  v20 = *((_QWORD *)&xmmword_1004F45F8 + 1);
  v21 = xmmword_1004F45F8;
  if (!v17)
    goto LABEL_12;
  v22 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v22 = v18 & 0xFFFFFFFFFFFFLL;
  if (v22)
  {
    v21 = v18;
    v20 = v17;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v17);
  }
  v24 = *(_QWORD *)(a3 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist);
  v23 = *(_QWORD *)(a3 + OBJC_IVAR____TtC16MusicMessagesApp13SharableTrack_artist + 8);
  v25 = qword_1004B6EF0;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once(&qword_1004B6EF0, sub_10002933C);
  v26 = *((_QWORD *)&xmmword_1004F4608 + 1);
  v27 = xmmword_1004F4608;
  if (!v23)
    goto LABEL_20;
  v28 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v28 = v24 & 0xFFFFFFFFFFFFLL;
  if (v28)
  {
    v27 = v24;
    v26 = v23;
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v23);
  }
  if (qword_1004B6EF8 != -1)
    swift_once(&qword_1004B6EF8, sub_1000293F4);
  v29 = xmmword_1004F4618;
  v30 = sub_1000057B4(&qword_1004B73C0);
  v31 = swift_allocObject(v30, 112, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(v31 + 56) = &type metadata for String;
  v32 = sub_10000FA74();
  *(_QWORD *)(v31 + 32) = v21;
  *(_QWORD *)(v31 + 40) = v20;
  *(_QWORD *)(v31 + 96) = &type metadata for String;
  *(_QWORD *)(v31 + 104) = v32;
  *(_QWORD *)(v31 + 64) = v32;
  *(_QWORD *)(v31 + 72) = v27;
  *(_QWORD *)(v31 + 80) = v26;
  String.init(format:_:)(v29, *((_QWORD *)&v29 + 1), v31);
  v34 = v33;
  objc_msgSend(a2, "requestPresentationStyle:", 0);
  v35 = objc_msgSend(a2, "activeConversation");
  if (v35)
  {
    v36 = v35;
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    objc_msgSend(v36, "insertText:completionHandler:", v37, 0);

  }
  else
  {
    swift_bridgeObjectRelease(v34);
  }
}

void sub_100029C90()
{
  off_1004B8930 = &_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for MusicMessagesAppViewController()
{
  return objc_opt_self(_TtC16MusicMessagesApp30MusicMessagesAppViewController);
}

uint64_t sub_100029DC8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_100029E68(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  void *v4;
  uint64_t *v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  void *v27;

  v5 = v3;
  v8 = a1;
  v9 = *v5;
  if ((*v5 & 0xC000000000000001) == 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v16 = *v5;
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if ((v8 & 0x8000000000000000) != 0 || 1 << *(_BYTE *)(v16 + 32) <= (uint64_t)v8)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v16 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v8) & 1) != 0)
    {
      if (*(_DWORD *)(v16 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(v8, a2) == *(_DWORD *)(v16 + 36))
      {
        v17 = __CocoaSet.Index.element.getter(v8, a2);
        v26 = v17;
        v18 = type metadata accessor for MusicMessagesSharingViewController(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain(v17);
        swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
        v4 = v27;
        swift_unknownObjectRelease(v17);
        v19 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v16 + 40));
        v20 = -1 << *(_BYTE *)(v16 + 32);
        v8 = v19 & ~v20;
        if (((*(_QWORD *)(v16 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
        {
          v21 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v8);
          v22 = static NSObject.== infix(_:_:)(v21, v4);

          if ((v22 & 1) == 0)
          {
            v23 = ~v20;
            do
            {
              v8 = (v8 + 1) & v23;
              if (((*(_QWORD *)(v16 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
                goto LABEL_27;
              v24 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v8);
              v25 = static NSObject.== infix(_:_:)(v24, v4);

            }
            while ((v25 & 1) == 0);
          }

          swift_bridgeObjectRelease(v16);
LABEL_20:
          v27 = (void *)*v5;
          *v5 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
            sub_10002A2B8();
          sub_10002A974(v8);
          v14 = *v5;
          *v5 = (uint64_t)v27;
          goto LABEL_23;
        }
LABEL_27:

        __break(1u);
        goto LABEL_28;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    __break(1u);
    goto LABEL_26;
  }
  if ((a3 & 1) != 0)
  {
    if (v9 < 0)
      v10 = *v5;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    v11 = __CocoaSet.member(for:)(a1, a2, v10);
    v26 = v11;
    v12 = type metadata accessor for MusicMessagesSharingViewController(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain(v11);
    swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
    v13 = v27;
    swift_unknownObjectRelease(v11);
    sub_10002A130(v10, (uint64_t)v13);

    v14 = v9;
LABEL_23:
    swift_bridgeObjectRelease(v14);
    return;
  }
LABEL_28:
  __break(1u);
}

void sub_10002A130(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  Swift::Int v18;

  v3 = v2;
  swift_bridgeObjectRelease(*v3);
  v6 = __CocoaSet.count.getter(a1);
  v7 = swift_unknownObjectRetain(a1);
  v8 = sub_10002AB14(v7, v6);
  v18 = v8;
  v9 = *(_QWORD *)(v8 + 40);
  swift_retain(v8);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    type metadata accessor for MusicMessagesSharingViewController(0);
    v13 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
    v14 = static NSObject.== infix(_:_:)(v13, a2);

    if ((v14 & 1) != 0)
    {
LABEL_6:
      swift_release(v8);
      v8 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v12);
      sub_10002A974(v12);
      if ((static NSObject.== infix(_:_:)(a2, v8) & 1) != 0)
      {
        *v3 = v18;
        return;
      }
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
        v17 = static NSObject.== infix(_:_:)(v16, a2);

        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v8);
    __break(1u);
  }
  swift_release(v8);
  __break(1u);
}

void sub_10002A2B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1000057B4(&qword_1004B8968);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10002A460(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::Int v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1000057B4(&qword_1004B8968);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v31 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  v13 = swift_retain(v3);
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v11)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(_QWORD *)(v6 + 40);
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    v23 = NSObject._rawHashValue(seed:)(v21);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2, v13);
    v2 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_10002A6D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1000057B4(&qword_1004B8968);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

unint64_t sub_10002A974(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

Swift::Int sub_10002AB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_1000057B4(&qword_1004B8968);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for MusicMessagesSharingViewController(0);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_10002A6D8(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()();
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

unint64_t sub_10002ACF8(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_10002AD78(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = type metadata accessor for MusicMessagesSharingViewController(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_10002AB14(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_10002A6D8(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_10002ACF8((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      type metadata accessor for MusicMessagesSharingViewController(0);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10002AFF4((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

void sub_10002AFF4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10002A6D8(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10002A2B8();
      goto LABEL_14;
    }
    sub_10002A460(v9);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for MusicMessagesSharingViewController(0);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

id sub_10002B168()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  if (qword_1004B6F00 != -1)
    swift_once(&qword_1004B6F00, sub_100029C90);
  swift_beginAccess(&off_1004B8930, v10, 33, 0);
  if (((unint64_t)off_1004B8930 & 0xC000000000000001) == 0)
  {
    if (*((_QWORD *)off_1004B8930 + 2))
    {
      v1 = sub_100029DC8((uint64_t)off_1004B8930);
      v3 = v5;
      v4 = v6 & 1;
      goto LABEL_11;
    }
LABEL_12:
    swift_endAccess(v10);
    type metadata accessor for MusicMessagesSharingViewController(0);
    return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  }
  if ((uint64_t)off_1004B8930 < 0)
    v0 = off_1004B8930;
  else
    v0 = (void *)((unint64_t)off_1004B8930 & 0xFFFFFFFFFFFFFF8);
  if (!__CocoaSet.count.getter(v0))
    goto LABEL_12;
  v1 = __CocoaSet.startIndex.getter(v0);
  v3 = v2;
  v4 = 1;
LABEL_11:
  sub_100029E68(v1, v3, v4);
  v8 = v7;
  swift_endAccess(v10);
  sub_10002B28C(v1, v3, v4);
  return (id)v8;
}

uint64_t sub_10002B28C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC16MusicMessagesAppP33_1D2F2B06279F7A461B360F6E63823DD619ResourceBundleClass);
}

uint64_t sub_10002B2B8()
{
  uint64_t result;

  result = sub_10002B2D4();
  qword_1004F4630 = result;
  return result;
}

uint64_t sub_10002B2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  id v46;
  NSURL *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v61 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000057B4(&qword_1004B99B0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v54 - v12;
  v14 = __chkstk_darwin(v11);
  v58 = (void (*)(uint64_t, char *, uint64_t))((char *)&v54 - v15);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - v16;
  v56 = sub_1001CC420((uint64_t)_swiftEmptyArrayStorage);
  v18 = sub_1000057B4(&qword_1004B99B8);
  v19 = *(_QWORD *)(v4 + 72);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 32) & ~v20;
  v62 = v19;
  v22 = swift_allocObject(v18, v21 + 3 * v19, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_1003C6280;
  v57 = v21;
  v55 = v22;
  v23 = v22 + v21;
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = objc_msgSend(v24, "mainBundle");
  v26 = objc_msgSend(v25, "resourceURL");

  v60 = v1;
  if (v26)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 0, 1, v0);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 1, 1, v0);
  }
  sub_10002DB68((uint64_t)v17, v23);
  type metadata accessor for BundleFinder();
  v28 = objc_msgSend(v24, "bundleForClass:", swift_getObjCClassFromMetadata());
  v29 = objc_msgSend(v28, "resourceURL");

  if (v29)
  {
    v30 = (uint64_t)v58;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = 0;
  }
  else
  {
    v31 = 1;
    v30 = (uint64_t)v58;
  }
  v27((char *)v30, v31, 1, v0);
  v32 = v62;
  sub_10002DB68(v30, v23 + v62);
  v33 = v23 + 2 * v32;
  v34 = objc_msgSend(v24, "mainBundle");
  v35 = objc_msgSend(v34, "bundleURL");

  v36 = v61;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

  v37 = v60;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 32);
  v58(v33, v36, v0);
  v27((char *)v33, 0, 1, v0);
  v63 = v56;
  sub_1000AA35C(v55);
  v38 = v63;
  v39 = v63[2];
  if (v39)
  {
    v40 = (uint64_t)v63 + v57;
    v56 = v63;
    v57 = 0x80000001003A72E0;
    v59 = v13;
    do
    {
      sub_10002DBB0(v40, (uint64_t)v10);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      if (v41(v10, 1, v0) == 1)
      {
        sub_10002DBF8((uint64_t)v10);
        v42 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)(0xD000000000000020, v57);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v0);
        v42 = 0;
      }
      v27(v13, v42, 1, v0);
      sub_10002DBB0((uint64_t)v13, (uint64_t)v7);
      if (v41(v7, 1, v0) == 1)
      {
        sub_10002DBF8((uint64_t)v13);
      }
      else
      {
        v43 = v10;
        v44 = v27;
        v45 = v61;
        v58((uint64_t)v61, v7, v0);
        v46 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v47);
        v49 = v48;
        v50 = v46;
        v37 = v60;
        v51 = objc_msgSend(v50, "initWithURL:", v49);

        v52 = v45;
        v27 = v44;
        v10 = v43;
        v13 = v59;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v0);
        sub_10002DBF8((uint64_t)v13);
        if (v51)
        {
          swift_bridgeObjectRelease(v56);
          return (uint64_t)v51;
        }
      }
      v40 += v62;
      --v39;
    }
    while (v39);
    v38 = v56;
  }
  swift_bridgeObjectRelease(v38);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x80000001003A72A0, "MusicCore/resource_bundle_accessor.swift", 40, 2, 44, 0);
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, a1);
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.actionContext()
{
  return 0;
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.page@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for MetricsEvent.Page, a1);
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t variable initialization expression of Notice.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for Notice.Thumbnail, a1);
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

double variable initialization expression of AnyAction.displayConfiguration@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1003C6C70;
  a1[1] = 0u;
  a1[2] = 0u;
  return result;
}

_QWORD *variable initialization expression of Library.Context.playlistVariants()
{
  return _swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

uint64_t variable initialization expression of ArtworkVideoReportingController.signpostsForIndex(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a1, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v5 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v5, a1, &type metadata for ComponentRenderEventSignposts, a2);
}

uint64_t variable initialization expression of MetricsEvent.ComponentRender.componentType()
{
  return 24;
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler()
{
  return sub_10002B8D0(&qword_1004B9488);
}

uint64_t variable initialization expression of MetricsReportingController.pageRenderEventSampler()
{
  return sub_10002B8D0((uint64_t *)&unk_1004B9490);
}

uint64_t sub_10002B8D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1000057B4(a1);
  v2 = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(v2 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  return v2;
}

id variable initialization expression of MetricsReportingController.carFocusedMetricsController()
{
  return objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
}

uint64_t variable initialization expression of MetricsReportingController.carMetricsReporter()
{
  uint64_t v0;

  v0 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  return swift_allocObject(v0, 16, 7);
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.Metadata.URL@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for URL, a1);
}

uint64_t variable initialization expression of MetricsEvent.PageRender.request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

id variable initialization expression of ApplicationCapabilities.hasNetworkConnectivity()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of ApplicationCapabilities.ratingWarning@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0x7FFFFFFFFFFFFFFFLL;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

id variable initialization expression of ApplicationCapabilities.subscriptionStatus()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v1 = objc_msgSend(v0, "musicSubscriptionStatus");

  return v1;
}

char *variable initialization expression of ApplicationCapabilities.tabs()
{
  return sub_1000D8C78((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.storeBag()
{
  uint64_t v1;

  if (qword_1004B8BC0 != -1)
    swift_once(&qword_1004B8BC0, sub_1000E30D8);
  sub_1000057B4(&qword_1004BD040);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10002D3E4);
  return v1;
}

id variable initialization expression of BackgroundRefreshController.cloudClient()
{
  return objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
}

uint64_t variable initialization expression of GroupActivitiesManager.signpostInitiationToFirstAudioFrame@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for Signpost, a1);
}

uint64_t variable initialization expression of BagProvider.durableObservers()
{
  uint64_t v0;

  v0 = type metadata accessor for BagProvider.Observer();
  return WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v0);
}

uint64_t variable initialization expression of BagProvider.logger()
{
  if (qword_1004B8C10 != -1)
    swift_once(&qword_1004B8C10, sub_10010FC5C);
  return Logger.init(_:)((id)static OS_os_log.musicBag);
}

id variable initialization expression of BagProvider.retry()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
}

unint64_t variable initialization expression of Collaboration.ArtworkCachingReference.identifier()
{
  return 0xD000000000000027;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._hasDisregardedBanner()
{
  id v0;
  unint64_t v1;
  _QWORD v3[2];
  char v4;
  uint64_t v5;

  v4 = 2;
  v3[0] = 0xD000000000000014;
  v3[1] = 0x80000001003A71A0;
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_10002D3FC();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v4, (uint64_t)v0, (uint64_t)v3, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v1, (char *)&v5);
  return v5;
}

double variable initialization expression of CloudLibrary.StatusObserver.capabilitiesController()
{
  double result;

  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  *(_QWORD *)&result = swift_retain(static ApplicationCapabilities.Controller.shared).n128_u64[0];
  return result;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._status()
{
  return 0x80000000;
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t variable initialization expression of MusicLibrary.ActionableStateController.currentState()
{
  return 0;
}

void variable initialization expression of MusicLibrary.ActionableStateController.itemStateSubscriptions()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_1000F3624((uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t variable initialization expression of Library.Context.musicLibrary()
{
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.shared.getter();
}

uint64_t variable initialization expression of Library.Context.album@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t variable initialization expression of Library.Context.artist@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t variable initialization expression of Library.Context.composer@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Composer, a1);
}

uint64_t variable initialization expression of Library.Context.genre@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Genre, a1);
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t variable initialization expression of Library.Context.tvShow@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t variable initialization expression of Library.Context.tvSeason@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t static MPIdentifierSet.Purpose.Options.all.getter()
{
  return 3;
}

id variable initialization expression of Library.Menu.Request.librarySource()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

unint64_t variable initialization expression of PushNotificationObserver.registeredHandlers()
{
  return sub_1000B93FC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of PushNotificationObserver.connection()
{
  return 0;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of Player._path()
{
  id v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;
  void *v5;

  v0 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v1 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_1004B8CF8 != -1)
    swift_once(&qword_1004B8CF8, sub_10017052C);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "systemMusicPathWithRoute:playerID:", v0, v2);

  if (objc_msgSend(v0, "isDeviceRoute"))
    v4 = v3;
  else
    v4 = objc_msgSend(v1, "pathWithRoute:bundleID:playerID:", v0, 0, 0);
  v5 = v4;

  return v3;
}

uint64_t variable initialization expression of Player.nowPlayingConfiguration()
{
  uint64_t v0;
  id v1;

  if (qword_1004B8D28 != -1)
    swift_once(&qword_1004B8D28, sub_10019D404);
  v0 = qword_1004BFBB0;
  v1 = (id)qword_1004BFBB0;
  return v0;
}

unint64_t variable initialization expression of Player.failingPlayerPathTimers()
{
  return sub_1000B95AC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t _s9MusicCore6PlayerC4lock33_031AD420BBF8BBF113A2662767DAC2BBLL0A9Utilities10UnfairLockCvpfi_0()
{
  uint64_t v0;

  v0 = type metadata accessor for UnfairLock();
  swift_allocObject(v0, 24, 7);
  return UnfairLock.init()();
}

id sub_10002BFE0()
{
  if (qword_1004B8D28 != -1)
    swift_once(&qword_1004B8D28, sub_10019D404);
  return (id)qword_1004BFBB0;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of Player.NowPlayingConfiguration.BadCountedSet.dictionary(uint64_t a1, uint64_t a2)
{
  return Dictionary.init()(a1, &type metadata for Int, a2);
}

uint64_t variable initialization expression of MusicItemState._playabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of MusicItemState._previewCapabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:);
  v5 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t variable initialization expression of SequentialVocalCommandsFilter.queuedCommand()
{
  return 0x1000000000000;
}

id variable initialization expression of PlaylistCovers.ArtworkDataSource.cache()
{
  return objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
}

double variable initialization expression of PresentationSource.position@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = -1;
  return result;
}

uint64_t ActionMenuItemConfiguring.menuItemImage.getter()
{
  return 0;
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of RequestResponse.Controller.enqueuedRevisionCompletions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t FunctionTypeMetadata2;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  return static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
}

uint64_t variable initialization expression of RequestResponse.Controller.revisionIDCompletionsMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  v9 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v9, 0, 0);
  v11 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v11, &type metadata for Int, v9, &protocol witness table for Int);
}

uint64_t variable initialization expression of SharePlayTogetherSession._host@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for SharePlayTogetherSession.Participant, a1);
}

unint64_t variable initialization expression of SharePlayTogetherSession.participantProfileMap()
{
  return sub_1000B96B4((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SharePlayTogetherSession.Participant.socialProfile@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfile, a1);
}

double variable initialization expression of GroupActivitiesManager.Activity.Metadata.artworkSize()
{
  return 300.0;
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.customMetadata@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for GroupActivitiesManager.Activity.Metadata, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.pendingNoticeAlert()
{
  return 0;
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t variable initialization expression of GroupActivitiesManager.artworkCachingReference()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v1 + 24) = 0x80000001003A71C0;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  return v1;
}

uint64_t variable initialization expression of GroupActivitiesManager.sessionStateObserver()
{
  type metadata accessor for GroupStateObserver(0);
  return GroupStateObserver.__allocating_init()();
}

uint64_t variable initialization expression of GroupActivitiesManager.activity@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0(type metadata accessor for GroupActivitiesManager.Activity, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.autoBugCaptureIntervalBeginDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C3E0((uint64_t (*)(_QWORD))&type metadata accessor for Date, a1);
}

uint64_t sub_10002C3E0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of GroupActivitiesManager.eligibilityContext()
{
  return 0;
}

id variable initialization expression of EnvironmentMonitorObserver.environmentMonitor()
{
  return objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
}

uint64_t variable initialization expression of ExplicitRestrictionsController.symbol()
{
  uint64_t v0;

  if (qword_1004B93E0 != -1)
    swift_once(&qword_1004B93E0, sub_1002107AC);
  v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t variable initialization expression of LaunchURL.Resolver.logger()
{
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0xD000000000000012, 0x80000001003A71E0);
}

void sub_10002C4F0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_10002C4F8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_10002C50C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_10002C53C(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_10002C550(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

unsigned __int8 *sub_10002C564@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10002C574(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_10002C580(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9BD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C85DC);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10002C5C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9BD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C85DC);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10002C600(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10002C640(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003C8FFC, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_10002C67C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003C8FFC, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_10002C6C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable(&unk_1003C8FFC, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_10002C71C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_1003C8FFC, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

BOOL sub_10002C768(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10002C77C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerEnqueueErrorDomain);
}

uint64_t sub_10002C78C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10002C7CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10002C80C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10002C870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10002C8C4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerRequestErrorDomain);
}

uint64_t sub_10002C8D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10002C914(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10002C954(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10002C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10002CA08()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
}

uint64_t sub_10002CA18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10002CA58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10002CA98(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10002CAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10002CB4C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCMusicBehaviorErrorDomain);
}

uint64_t sub_10002CB5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10002CB9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10002CBDC(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10002CC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

_DWORD *sub_10002CC90@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10002CC9C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10002CCA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C((unint64_t *)&qword_1004BF780, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C9138);
  v3 = sub_100004D8C(&qword_1004B9C00, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C8A20);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002CD2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B9C28, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_1003C8464);
  v3 = sub_100004D8C(&qword_1004B9C30, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_1003C8404);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002CDB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B9940, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003C79C8);
  v3 = sub_100004D8C(&qword_1004B9948, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003C7970);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002CE34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B9930, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1003C7E0C);
  v3 = sub_100004D8C(&qword_1004B9938, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1003C7DB4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002CEB8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9BA8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C8708);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10002CEF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9BA8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C8708);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10002CF38(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10002CF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10002CFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10002D028(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B60, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8BB4);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10002D068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B60, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8BB4);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10002D0A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10002D0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10002D140(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9AF8, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E30);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10002D180(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9AF8, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E30);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10002D1C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10002D200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10002D258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C((unint64_t *)&qword_1004B9C18, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003C917C);
  v3 = sub_100004D8C(&qword_1004B9C20, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003C87B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002D2DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B9C08, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003C8928);
  v3 = sub_100004D8C(&qword_1004B9C10, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003C88C8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002D360(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004D8C(&qword_1004B9920, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1003C7F84);
  v3 = sub_100004D8C(&qword_1004B9928, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1003C7F2C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_BYTE *sub_10002D3E4@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *v1;

  return sub_1000E31AC(v1, a1);
}

unint64_t sub_10002D3FC()
{
  unint64_t result;

  result = qword_1004B9500;
  if (!qword_1004B9500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1004B9500);
  }
  return result;
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC9MusicCoreP33_77107B98A7172A040C127BED6BB4A6AC12BundleFinder);
}

{
  return objc_opt_self(_TtC11MusicCoreUIP33_78477A7C4507C6B926161B408121F9AD12BundleFinder);
}

void type metadata accessor for ErrorCorrectionLevel(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9780, (uint64_t)&unk_100468A78);
}

__n128 initializeWithTake for ActionSupportedStatus(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void _s3__C6CGSizeVMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9788, (uint64_t)&unk_100468AF0);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9790, (uint64_t)&unk_100468B18);
}

void type metadata accessor for MSVAutoBugCaptureDomain(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9798, (uint64_t)&unk_100468B48);
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97A0, (uint64_t)&unk_100468B70);
}

uint64_t sub_10002D4D8(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_10002D51C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97A8, (uint64_t)&unk_100468BE8);
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97B0, (uint64_t)&unk_100468C10);
}

void type metadata accessor for ICPrivacyIdentifier(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97B8, (uint64_t)&unk_100468C30);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97C0, (uint64_t)&unk_100468C58);
}

void type metadata accessor for ICMusicSubscriptionStatusType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97C8, (uint64_t)&unk_100468C78);
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97D0, (uint64_t)&unk_100468C98);
}

void type metadata accessor for FeedbackType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97D8, (uint64_t)&unk_100468CC0);
}

void type metadata accessor for MPCPlayerRequestTracklistRange(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97E0, (uint64_t)&unk_100468D38);
}

void type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97E8, (uint64_t)&unk_100468D60);
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97F0, (uint64_t)&unk_100468D80);
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B97F8, (uint64_t)&unk_100468DA0);
}

void type metadata accessor for ICURLBagKey(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9800, (uint64_t)&unk_100468DC0);
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9808, (uint64_t)&unk_100468DE8);
}

void type metadata accessor for MPCPlayerTracklistReplaceIntent(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9810, (uint64_t)&unk_100468E10);
}

void type metadata accessor for MPCPlaybackIntentOptions(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9818, (uint64_t)&unk_100468E30);
}

void type metadata accessor for MPCPlaybackIntentRepeatMode(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9820, (uint64_t)&unk_100468E58);
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9828, (uint64_t)&unk_100468E78);
}

void type metadata accessor for MPCExplicitContentAuthorizationReason(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9830, (uint64_t)&unk_100468E98);
}

__n128 _s12EditPlaylistO7ContextVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void _s3__C6CGRectVMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9838, (uint64_t)&unk_100468F10);
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9840, (uint64_t)&unk_100468F38);
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9848, (uint64_t)&unk_100468F60);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9850, (uint64_t)&unk_100468F80);
}

uint64_t sub_10002D71C()
{
  return sub_100004D8C(&qword_1004B9858, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1003C73A8);
}

uint64_t sub_10002D748()
{
  return sub_100004D8C(&qword_1004B9860, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)"y \n");
}

uint64_t sub_10002D774()
{
  return sub_100004D8C(&qword_1004B9868, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1003C73D0);
}

uint64_t sub_10002D7A0()
{
  return sub_100004D8C(&qword_1004B9870, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1003C7408);
}

uint64_t sub_10002D7CC()
{
  return sub_100004D8C(&qword_1004B9878, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1003C75C0);
}

uint64_t sub_10002D7F8()
{
  return sub_100004D8C(&qword_1004B9880, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1003C758C);
}

uint64_t sub_10002D824()
{
  return sub_100004D8C(&qword_1004B9888, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1003C75EC);
}

uint64_t sub_10002D850()
{
  return sub_100004D8C(&qword_1004B9890, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1003C7628);
}

uint64_t sub_10002D87C()
{
  return sub_100004D8C(&qword_1004B9898, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003C77A0);
}

uint64_t sub_10002D8A8()
{
  return sub_100004D8C(&qword_1004B98A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003C776C);
}

uint64_t sub_10002D8D4()
{
  return sub_100004D8C(&qword_1004B98A8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003C77CC);
}

uint64_t sub_10002D900()
{
  return sub_100004D8C(&qword_1004B98B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003C7808);
}

uint64_t sub_10002D92C()
{
  return sub_100004D8C(&qword_1004B98B8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003C7938);
}

uint64_t sub_10002D958()
{
  return sub_100004D8C(&qword_1004B98C0, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003C7910);
}

uint64_t sub_10002D984()
{
  return sub_100004D8C(&qword_1004B98C8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003C79A0);
}

uint64_t sub_10002D9B0()
{
  return sub_100004D8C(&qword_1004B98D0, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_1003C7B2C);
}

uint64_t sub_10002D9DC()
{
  return sub_100004D8C(&qword_1004B98D8, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_1003C7AFC);
}

uint64_t sub_10002DA08()
{
  return sub_100004D8C(&qword_1004B98E0, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_1003C7B54);
}

uint64_t sub_10002DA34()
{
  return sub_100004D8C(&qword_1004B98E8, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_1003C7B8C);
}

uint64_t sub_10002DA60()
{
  return sub_100004D8C(&qword_1004B98F0, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1003C7D7C);
}

uint64_t sub_10002DA8C()
{
  return sub_100004D8C(&qword_1004B98F8, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1003C7D54);
}

uint64_t sub_10002DAB8()
{
  return sub_100004D8C(&qword_1004B9900, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1003C7DE4);
}

uint64_t sub_10002DAE4()
{
  return sub_100004D8C(&qword_1004B9908, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1003C7EF4);
}

uint64_t sub_10002DB10()
{
  return sub_100004D8C(&qword_1004B9910, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1003C7ECC);
}

uint64_t sub_10002DB3C()
{
  return sub_100004D8C(&qword_1004B9918, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1003C7F5C);
}

uint64_t sub_10002DB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B99B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002DBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B99B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002DBF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004B99B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s3__C16os_unfair_lock_sVMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99C0, (uint64_t)&unk_100468FA8);
}

void type metadata accessor for MPCMusicBehaviorError(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99C8, (uint64_t)&unk_100468FD0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99D0, (uint64_t)&unk_100468FF8);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99D8, (uint64_t)&unk_100469018);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99E0, (uint64_t)&unk_100469038);
}

void type metadata accessor for MPModelCuratorKind(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99E8, (uint64_t)&unk_100469068);
}

void type metadata accessor for MPCSharedListeningSessionEventKind(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99F0, (uint64_t)&unk_100469088);
}

void type metadata accessor for MPCSharedListeningPlaybackEventKind(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B99F8, (uint64_t)&unk_1004690A8);
}

void type metadata accessor for MPCSharedListeningEventType(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A00, (uint64_t)&unk_1004690C8);
}

void type metadata accessor for MPCError(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A08, (uint64_t)&unk_1004690E8);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A10, (uint64_t)&unk_100469110);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A18, (uint64_t)&unk_100469138);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A20, (uint64_t)&unk_100469160);
}

__n128 _s12AddToLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10002DD50(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10002DD70(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A28, (uint64_t)&unk_1004691E0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A30, (uint64_t)&unk_100469218);
}

void type metadata accessor for MPCPlayerEnqueueError(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A38, (uint64_t)&unk_100469248);
}

void type metadata accessor for MPCPlayerRequestError(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A40, (uint64_t)&unk_100469270);
}

void _s3__C4NameVMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A48, (uint64_t)&unk_100469298);
}

_QWORD *initializeBufferWithCopyOfBuffer for CloudLibrary.UpdateContext(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s29CompressionResistancePriorityVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s29CompressionResistancePriorityVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A50, (uint64_t)&unk_100469318);
}

void _s3__C7CGPointVMa_0(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9A58, (uint64_t)&unk_100469398);
}

uint64_t sub_10002DE88()
{
  return sub_100004D8C(&qword_1004B9A60, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_1003C83C8);
}

uint64_t sub_10002DEB4()
{
  return sub_100004D8C(&qword_1004B9A68, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_1003C839C);
}

uint64_t sub_10002DEE0()
{
  return sub_100004D8C(&qword_1004B9A70, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_1003C8438);
}

uint64_t sub_10002DF0C()
{
  return sub_100004D8C(&qword_1004B9A78, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C84F4);
}

uint64_t sub_10002DF38()
{
  return sub_100004D8C(&qword_1004B9A80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C8520);
}

uint64_t sub_10002DF64()
{
  return sub_100004D8C(&qword_1004B9A88, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C8620);
}

uint64_t sub_10002DF90()
{
  return sub_100004D8C(&qword_1004B9A90, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C864C);
}

uint64_t sub_10002DFBC()
{
  return sub_100004D8C(&qword_1004B9A98, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003C8778);
}

uint64_t sub_10002DFE8()
{
  return sub_100004D8C(&qword_1004B9AA0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003C874C);
}

uint64_t sub_10002E014()
{
  return sub_100004D8C(&qword_1004B9AA8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003C888C);
}

uint64_t sub_10002E040()
{
  return sub_100004D8C(&qword_1004B9AB0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003C8860);
}

uint64_t sub_10002E06C()
{
  return sub_100004D8C(&qword_1004B9AB8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003C88FC);
}

uint64_t sub_10002E098()
{
  return sub_100004D8C(&qword_1004B9AC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C89E4);
}

uint64_t sub_10002E0C4()
{
  return sub_100004D8C(&qword_1004B9AC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C89B8);
}

uint64_t sub_10002E0F0()
{
  return sub_100004D8C(&qword_1004B9AD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8ACC);
}

uint64_t sub_10002E11C()
{
  return sub_100004D8C(&qword_1004B9AD8, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8AF8);
}

uint64_t sub_10002E148()
{
  return sub_100004D8C(&qword_1004B9AE0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1003C8C08);
}

uint64_t sub_10002E174()
{
  return sub_100004D8C(&qword_1004B9AE8, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8D48);
}

uint64_t sub_10002E1A0()
{
  return sub_100004D8C(&qword_1004B9AF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8D74);
}

uint64_t sub_10002E1CC()
{
  return sub_100004D8C(&qword_1004B9AF8, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E30);
}

uint64_t sub_10002E1F8()
{
  return sub_100004D8C(&qword_1004B9B00, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8DFC);
}

uint64_t sub_10002E224()
{
  return sub_100004D8C(&qword_1004B9B08, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8DB8);
}

uint64_t sub_10002E250()
{
  return sub_100004D8C(&qword_1004B9B10, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_1003C8F1C);
}

void _s3__C4CodeOMa_3(uint64_t a1)
{
  sub_1000055E4(a1, (unint64_t *)&unk_1004B9C40, (uint64_t)&unk_1004693E0);
}

uint64_t sub_10002E290()
{
  return sub_100004D8C(&qword_1004B9B18, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_1003C8EE0);
}

unint64_t sub_10002E2C0()
{
  unint64_t result;

  result = qword_1004B9B20;
  if (!qword_1004B9B20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1004B9B20);
  }
  return result;
}

uint64_t sub_10002E304()
{
  return sub_100004D8C(&qword_1004B9B28, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_1003C8F58);
}

uint64_t sub_10002E330()
{
  return sub_100004D8C(&qword_1004B9B30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_1003C8E74);
}

uint64_t sub_10002E35C()
{
  return sub_100004D8C(&qword_1004B9B38, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1003C8CE0);
}

uint64_t sub_10002E388()
{
  return sub_100004D8C(&qword_1004B9B40, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C922C);
}

uint64_t sub_10002E3B4()
{
  return sub_100004D8C(&qword_1004B9B48, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_1003C8C78);
}

uint64_t sub_10002E3E0()
{
  return sub_100004D8C(&qword_1004B9B50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C91C0);
}

uint64_t sub_10002E40C()
{
  return sub_100004D8C(&qword_1004B9B58, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1003C8C34);
}

uint64_t sub_10002E438()
{
  return sub_100004D8C(&qword_1004B9B60, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8BB4);
}

uint64_t sub_10002E464()
{
  return sub_100004D8C(&qword_1004B9B68, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8B80);
}

uint64_t sub_10002E490()
{
  return sub_100004D8C(&qword_1004B9B70, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C8B3C);
}

uint64_t sub_10002E4BC()
{
  return sub_100004D8C(&qword_1004B9B78, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_1003C90D0);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
  sub_1000055E4(a1, &qword_1004B9C38, (uint64_t)&unk_1004693C0);
}

uint64_t sub_10002E4FC()
{
  return sub_100004D8C(&qword_1004B9B80, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_1003C9094);
}

uint64_t sub_10002E528()
{
  return sub_100004D8C(&qword_1004B9B88, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_1003C910C);
}

uint64_t sub_10002E554()
{
  return sub_100004D8C(&qword_1004B9B90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003C9028);
}

uint64_t sub_10002E580()
{
  return sub_100004D8C(&qword_1004B9B98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C8A54);
}

uint64_t sub_10002E5AC()
{
  return sub_100004D8C(&qword_1004B9BA0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003C87E8);
}

uint64_t sub_10002E5D8()
{
  return sub_100004D8C(&qword_1004B9BA8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C8708);
}

uint64_t sub_10002E604()
{
  return sub_100004D8C(&qword_1004B9BB0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C86D4);
}

uint64_t sub_10002E630()
{
  return sub_100004D8C(&qword_1004B9BB8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003C8690);
}

uint64_t sub_10002E65C()
{
  return sub_100004D8C(&qword_1004B9BC0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_1003C8FC0);
}

uint64_t sub_10002E688()
{
  return sub_100004D8C(&qword_1004B9BC8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_1003C8CA4);
}

uint64_t sub_10002E6B4()
{
  return sub_100004D8C(&qword_1004B9BD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C85DC);
}

uint64_t sub_10002E6E0()
{
  return sub_100004D8C(&qword_1004B9BD8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C85A8);
}

uint64_t sub_10002E70C()
{
  return sub_100004D8C(&qword_1004B9BE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003C8564);
}

uint64_t sub_10002E738()
{
  return sub_100004D8C(&qword_1004B9BE8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1003C8F84);
}

uint64_t sub_10002E764()
{
  return sub_100004D8C((unint64_t *)&unk_1004B9BF0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1003C8D0C);
}

double static Actions.ReportConcern.action(context:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  double result;
  __int128 v7;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 6);
  *(_BYTE *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v3;
  v5 = *((_OWORD *)a1 + 1);
  v7 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v4;
  *(_BYTE *)(a2 + 56) = v2;
  *(_QWORD *)(a2 + 64) = sub_10002E86C;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0x4014000000000000;
  *(_QWORD *)(a2 + 88) = &unk_1004B9D70;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = &unk_1004B9D78;
  *(_QWORD *)(a2 + 112) = 0;
  swift_retain(v5);
  swift_retain(v7);
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

uint64_t sub_10002E86C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_10002E88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 24);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002E8E0;
  return v6();
}

uint64_t sub_10002E8E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002E928(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 40);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return v5();
}

uint64_t (*Actions.ReportConcern.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100469680, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001003A7310;
  v1 = swift_allocObject(&unk_1004696A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001003A7310;
  return sub_10002F080;
}

uint64_t (*sub_10002EA04())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004697D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001003A7310;
  v1 = swift_allocObject(&unk_1004697F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001003A7310;
  return sub_10002F6E4;
}

uint64_t Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;

  v16 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (*(_QWORD *)(v16 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1004696D0, v20 + 16, v17 | 7);
  result = sub_10002F244(a11, v21 + v18);
  v23 = (_QWORD *)(v21 + v19);
  *v23 = a1;
  v23[1] = a2;
  v24 = (_QWORD *)(v21 + v20);
  *v24 = a3;
  v24[1] = a4;
  *(_BYTE *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a7;
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  *(_QWORD *)(a9 + 40) = &unk_1004B9D90;
  *(_QWORD *)(a9 + 48) = v21;
  return result;
}

uint64_t sub_10002EB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_1000057B4(&qword_1004B99B0);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004B9D88);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002EC38, 0, 0);
}

uint64_t sub_10002EC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  sub_10002F5C4(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 144), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    sub_10002F60C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v8;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003C6C80;
    *(_BYTE *)(inited + 72) = 3;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_100053464(inited);
    *(_QWORD *)(v0 + 184) = v13;
    *(_QWORD *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_10002EDD8, v18, v19);
  }
}

uint64_t sub_10002EDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(uint64_t **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100053874(v7, v6, 5, 32, v5, v3, v2, v1, v8, v4);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  sub_10000FE2C(v5, &qword_1004B99B0);
  return swift_task_switch(sub_10002EEA0, 0, 0);
}

uint64_t sub_10002EEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10002F6A8(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO13ReportConcernO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x80000001003A7330);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10002F05C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002F080()
{
  uint64_t v0;

  return sub_10005D70C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10002F088()
{
  uint64_t v0;

  return sub_10005D78C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002F090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v12 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 16, v2 | 7);
}

uint64_t sub_10002F244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B9D88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = (uint64_t *)(v0 + v4);
  v8 = *v7;
  v9 = v7[1];
  v10 = v0 + v5;
  v11 = *(_QWORD *)(v0 + v5);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc(dword_1004B9D84);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10002E8E0;
  return sub_10002EB88(v6, v8, v9, v11, v12);
}

unint64_t sub_10002F340()
{
  unint64_t result;

  result = qword_1004B9D98;
  if (!qword_1004B9D98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1004B9D98);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern()
{
  return &type metadata for Actions.ReportConcern;
}

uint64_t _s13ReportConcernO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[2]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t _s13ReportConcernO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 _s13ReportConcernO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13ReportConcernO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ReportConcernO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern.Context()
{
  return &type metadata for Actions.ReportConcern.Context;
}

uint64_t sub_10002F5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004B9D88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10002F650(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 3:
      return (void *)swift_bridgeObjectRelease(result);
    case 2:
      result = (void *)a2;
      return (void *)swift_bridgeObjectRelease(result);
    case 1:
      return sub_10002F67C(result, a2, a3);
  }
  return result;
}

void *sub_10002F67C(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_10002F6A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double static Actions.AddToLibrary.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10002F788;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1004B9DD8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1004B9DE0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10002F788(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t sub_10002F7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002E8E0;
  return v6();
}

uint64_t sub_10002F7FC(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 32);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return v5();
}

void Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(unint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)();
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (**v53)();
  uint64_t v54;
  uint64_t v55;

  v51 = a4;
  v52 = a8;
  v48 = a7;
  v49 = a5;
  v54 = a2;
  v55 = a6;
  v50 = a3;
  v43 = a1;
  v53 = a9;
  v46 = a11;
  v47 = a12;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v44 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  (*(void (**)(char *))(v12 + 16))((char *)&v42 - v15);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 40) & ~v17;
  v45 = v17 | 7;
  v19 = v13 + 7;
  v20 = (v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (uint64_t (*)())swift_allocObject(&unk_100469838, v20 + 8, v17 | 7);
  *((_QWORD *)v21 + 2) = a10;
  *((_QWORD *)v21 + 3) = a11;
  *((_QWORD *)v21 + 4) = a12;
  v22 = (char *)v21 + v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v22, v16, a10);
  *(_QWORD *)((char *)v21 + v20) = v54;
  v24 = v44;
  v23(v44, (char *)v43, a10);
  v25 = (v17 + 56) & ~v17;
  v26 = (v19 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 79) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (((v28 + 47) & 0xFFFFFFFFFFFFFFF8) + v30 + 40) & ~v30;
  v32 = (uint64_t (*)())swift_allocObject(&unk_100469860, v31 + *(_QWORD *)(v29 + 64), v45 | v30);
  v33 = v46;
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = v33;
  v34 = v55;
  *((_QWORD *)v32 + 4) = v47;
  *((_QWORD *)v32 + 5) = v34;
  v35 = (char *)v32 + v25;
  v36 = v48;
  *((_QWORD *)v32 + 6) = v48;
  v23(v35, v24, a10);
  v37 = v54;
  *(_QWORD *)((char *)v32 + v26) = v54;
  sub_10000FD10(v49, (uint64_t)v32 + v27, &qword_1004B9DF0);
  sub_100033620(v50, (uint64_t)v32 + v28);
  sub_10000FD10(v51, (uint64_t)v32 + v43, &qword_1004B9DF8);
  sub_10000FD10(v52, (uint64_t)v32 + v31, &qword_1004B9D88);
  v38 = swift_allocObject(&unk_100469888, 32, 7);
  v39 = v55;
  *(_QWORD *)(v38 + 16) = v55;
  *(_QWORD *)(v38 + 24) = v36;
  v40 = swift_allocObject(&unk_1004698B0, 32, 7);
  *(_QWORD *)(v40 + 16) = &unk_1004B9E10;
  *(_QWORD *)(v40 + 24) = v38;
  swift_unknownObjectRetain(v39);
  swift_retain(v37);
  v41 = v53;
  *v53 = sub_10002FDE4;
  v41[1] = v21;
  v41[2] = (uint64_t (*)())&unk_1004B9E00;
  v41[3] = v32;
  v41[4] = (uint64_t (*)())&unk_1004B9E20;
  v41[5] = (uint64_t (*)())v40;
}

uint64_t sub_10002FAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a2;
  v7 = type metadata accessor for MusicLibrary.AddAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000057B4(&qword_1004B9E28);
  v31 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004B9E98);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v14);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a3);
  v24 = swift_dynamicCast(v16, v19, a3, v20, 6);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v20);
    v27 = sub_10000FE2C((uint64_t)v16, &qword_1004B9E98);
    goto LABEL_5;
  }
  v25(v16, 0, 1, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v16, v20);
  v26 = Album.childrenAddStatus(_:)(v36);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v26 != 1)
  {
LABEL_5:
    static MusicLibraryAction<>.add.getter(v27);
    v29 = v32;
    MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v10, a3, v32, v35, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v29);
    v28 = sub_1000302D8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v34);
    return v28;
  }
  return 0;
}

uint64_t sub_10002FD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10002FDE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_10002FAE4((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t Album.childrenAddStatus(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[4];
  uint64_t v60;

  v56 = a1;
  v1 = type metadata accessor for MusicLibrary.AddAction(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000057B4(&qword_1004B9E28);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v58 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Track(0);
  v57 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v49 = (char *)&v45 - v8;
  v9 = sub_1000057B4(&qword_1004B9E30);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_1000057B4(&qword_1004B9E38);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000057B4(&qword_1004B9E40);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v45 - v24;
  Album.tracks.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10000FE2C((uint64_t)v17, &qword_1004B9E38);
    return 0;
  }
  v48 = v14;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  v26 = sub_100034AA8((unint64_t *)&qword_1004B9E48, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v18);
  dispatch thunk of Collection.endIndex.getter(&v60, v18, v26);
  if (v59[0] == v60)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    return 0;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v47 = v19;
  v46(v12, v25, v18);
  v45 = v25;
  dispatch thunk of Collection.startIndex.getter(v18);
  *(_QWORD *)&v12[*(int *)(v9 + 36)] = v59[0];
  v28 = (uint64_t)v48;
  sub_10000FD10((uint64_t)v12, (uint64_t)v48, &qword_1004B9E30);
  v29 = (uint64_t *)(v28 + *(int *)(v9 + 36));
  v30 = v57;
  v31 = v50;
  while (1)
  {
    v32 = *v29;
    dispatch thunk of Collection.endIndex.getter(v59, v18, v26);
    if (v32 == v59[0])
      break;
    v33 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v59, v29, v18, v26);
    v34 = v49;
    (*(void (**)(char *))(v30 + 16))(v49);
    v33(v59, 0);
    v46(v22, (char *)v28, v18);
    dispatch thunk of Collection.formIndex(after:)(v29, v18, v26);
    v35 = *(void (**)(char *, uint64_t))(v47 + 8);
    v35(v22, v18);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v31, v34, v5);
    v37 = v53;
    static MusicLibraryAction<>.add.getter(v36);
    v38 = v55;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v31, v37, v5, v55, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
    v39 = v37;
    v40 = v58;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v41 = sub_1000302D8();
    v43 = v42;
    v44 = v40;
    v30 = v57;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v52);
    sub_100033EC4(v41, v43);
    v28 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v5);
    if (v43 == 1)
    {
      sub_10000FE2C(v28, &qword_1004B9E30);
      v35(v45, v18);
      return 1;
    }
  }
  sub_10000FE2C(v28, &qword_1004B9E30);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v18);
  return 2;
}

BOOL static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1000302D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  int v28;
  int v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - v5;
  v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v32 - v12;
  v14 = sub_1000057B4(&qword_1004B9E28);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v19 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      v28 = v19;
      v26 = 0xD000000000000010;
      if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return 0xD000000000000012;
      }
      else
      {
        v29 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
        v30 = *(void (**)(char *, uint64_t))(v8 + 8);
        v30(v13, v7);
        if (v28 != v29)
        {
          v26 = 0x206E776F6E6B6E55;
          v30(v11, v7);
        }
      }
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v6, v11, v2);
    v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v6, v2);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v2);
    if (v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v34 = 0;
      v35 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(v35);
      v34 = 0xD000000000000016;
      v35 = 0x80000001003A73A0;
      v23 = sub_1000349EC(&qword_1004B9E88, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v23);
      object = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(object);
      v26 = v34;
      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v27(v21, v2);
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 0;
  }
  if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+AddToLibrary.swift", 36, 2, 158, 0);
  __break(1u);
  return result;
}

uint64_t sub_10003074C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8[81] = v33;
  v8[80] = v32;
  v8[79] = v31;
  v8[78] = a8;
  v8[77] = a7;
  v8[76] = a6;
  v8[75] = a5;
  v8[74] = a4;
  v8[73] = a3;
  v8[72] = a2;
  v8[71] = a1;
  v9 = sub_1000057B4(&qword_1004B99B0);
  v8[82] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4(&qword_1004B9D88);
  v8[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Actions.MetricsReportingContext(0);
  v8[84] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[85] = v12;
  v8[86] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice.Variant(0);
  v8[87] = v13;
  v8[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[89] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[90] = v15;
  v8[91] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000057B4(&qword_1004B9E90);
  v8[92] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[93] = swift_task_alloc(v17);
  v8[94] = swift_task_alloc(v17);
  v18 = type metadata accessor for MusicLibrary.AddAction(0);
  v8[95] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[96] = v19;
  v8[97] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004B9E28);
  v8[98] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[99] = v21;
  v8[100] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000057B4(&qword_1004B9E38);
  v8[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9E40);
  v8[102] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v8[103] = v24;
  v8[104] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000057B4(&qword_1004B9E98);
  v8[105] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v31 - 8);
  v8[106] = v26;
  v8[107] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v8[108] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v8[109] = v28;
  v8[110] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9EA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[111] = swift_task_alloc(v29);
  v8[112] = swift_task_alloc(v29);
  v8[113] = swift_task_alloc(v29);
  v8[114] = swift_task_alloc(v29);
  v8[115] = swift_task_alloc(v29);
  v8[116] = swift_task_alloc(v29);
  v8[117] = swift_task_alloc(v29);
  return swift_task_switch(sub_100030A28, 0, 0);
}

uint64_t sub_100030A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  char v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, _QWORD, uint64_t);
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  void (*v98)(uint64_t, uint64_t);
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  void (*v114)(uint64_t, uint64_t);
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t WitnessTable;
  uint64_t v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t inited;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int16 v151;
  uint64_t v152;
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v180;

  if (*(_QWORD *)(v0 + 568))
  {
    v1 = *(_QWORD *)(v0 + 576);
    *(_QWORD *)(v0 + 944) = swift_getObjectType();
    *(_BYTE *)(v0 + 516) = 0;
    *(_QWORD *)(v0 + 952) = *(_QWORD *)(v1 + 8);
    v2 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 960) = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v6 = v5;
    v7 = sub_100031850;
    return swift_task_switch(v7, v4, v6);
  }
  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v9 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003C9418);
  v11 = swift_getKeyPath(&unk_1003C9440);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v9, KeyPath, v11);
  swift_release(v11);
  swift_release(KeyPath);
  v12 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(void **)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);

  if ((v12 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_10003492C(v0 + 472);
    v19 = *(_QWORD *)(v0 + 928);
    v20 = *(_QWORD *)(v0 + 920);
    v21 = *(_QWORD *)(v0 + 912);
    v22 = *(_QWORD *)(v0 + 904);
    v23 = *(_QWORD *)(v0 + 896);
    v24 = *(_QWORD *)(v0 + 888);
    v25 = *(_QWORD *)(v0 + 880);
    v26 = *(_QWORD *)(v0 + 856);
    v27 = *(_QWORD *)(v0 + 840);
    v164 = *(_QWORD *)(v0 + 832);
    v165 = *(_QWORD *)(v0 + 808);
    v166 = *(_QWORD *)(v0 + 800);
    v167 = *(_QWORD *)(v0 + 776);
    v168 = *(_QWORD *)(v0 + 752);
    v169 = *(_QWORD *)(v0 + 744);
    v170 = *(_QWORD *)(v0 + 728);
    v171 = *(_QWORD *)(v0 + 704);
    v173 = *(_QWORD *)(v0 + 688);
    v175 = *(_QWORD *)(v0 + 664);
    v178 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v164);
    swift_task_dealloc(v165);
    swift_task_dealloc(v166);
    swift_task_dealloc(v167);
    swift_task_dealloc(v168);
    swift_task_dealloc(v169);
    swift_task_dealloc(v170);
    swift_task_dealloc(v171);
    swift_task_dealloc(v173);
    swift_task_dealloc(v175);
    swift_task_dealloc(v178);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v28 = *(_QWORD *)(v0 + 872);
  v29 = *(_QWORD *)(v0 + 864);
  v30 = *(_QWORD *)(v0 + 856);
  v31 = *(_QWORD *)(v0 + 848);
  v32 = *(_QWORD *)(v0 + 840);
  v33 = *(_QWORD *)(v0 + 632);
  v34 = *(_QWORD *)(v0 + 584);
  v179 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v179(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  *(_QWORD *)(v0 + 968) = v35;
  v35(v30, v34, v33);
  v36 = swift_dynamicCast(v32, v30, v33, v29, 6);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if ((v36 & 1) == 0)
  {
    v48 = *(_QWORD *)(v0 + 840);
    v37(v48, 1, 1, *(_QWORD *)(v0 + 864));
    v49 = (uint64_t *)&unk_1004B9E98;
    goto LABEL_13;
  }
  v38 = *(_QWORD *)(v0 + 880);
  v39 = *(_QWORD *)(v0 + 872);
  v40 = *(_QWORD *)(v0 + 864);
  v41 = *(_QWORD *)(v0 + 840);
  v42 = *(_QWORD *)(v0 + 592);
  v37(v41, 0, 1, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v38, v41, v40);
  v43 = Album.childrenAddStatus(_:)(v42);
  v44 = *(_QWORD *)(v0 + 880);
  if (v43 != 1)
  {
    v50 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v44, *(_QWORD *)(v0 + 864));
    goto LABEL_15;
  }
  v45 = *(_QWORD *)(v0 + 824);
  v46 = *(_QWORD *)(v0 + 816);
  v47 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v44);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v47, 1, v46) == 1)
  {
    v48 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v49 = &qword_1004B9E38;
LABEL_13:
    v50 = sub_10000FE2C(v48, v49);
LABEL_15:
    v51 = *(_QWORD *)(v0 + 920);
    v52 = *(_QWORD *)(v0 + 800);
    v172 = *(_QWORD *)(v0 + 792);
    v174 = *(_QWORD *)(v0 + 784);
    v176 = *(_QWORD *)(v0 + 936);
    v53 = *(_QWORD *)(v0 + 776);
    v54 = *(_QWORD *)(v0 + 768);
    v55 = *(_QWORD *)(v0 + 760);
    v56 = *(_QWORD *)(v0 + 648);
    v57 = *(_QWORD *)(v0 + 632);
    v58 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v50);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v58, v53, v57, v55, v56, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v51);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v52, v174);
    sub_10000FE2C(v176, &qword_1004B9EA0);
    sub_10000FD10(v51, v176, &qword_1004B9EA0);
    goto LABEL_16;
  }
  v135 = *(_QWORD *)(v0 + 832);
  v136 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v135, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v180 = (char *)_swiftEmptyArrayStorage;
  swift_retain(v136);
  LOBYTE(v135) = sub_100034664(v135, v136, &v180);
  v137 = swift_release(v136);
  if ((v135 & 1) != 0)
  {
    v138 = *(_QWORD *)(v0 + 880);
    v139 = *(_QWORD *)(v0 + 872);
    v140 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v137);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
    v141 = v180;
  }
  else
  {
    v141 = v180;
    if (*((_QWORD *)v180 + 2))
    {
      (*(void (**)(_QWORD, char *, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), &v180[(*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)], *(_QWORD *)(v0 + 712), v137);
      v155 = 0;
    }
    else
    {
      v155 = 1;
    }
    v156 = *(_QWORD *)(v0 + 936);
    v157 = *(_QWORD *)(v0 + 928);
    v158 = *(_QWORD *)(v0 + 880);
    v159 = *(_QWORD *)(v0 + 872);
    v160 = *(_QWORD *)(v0 + 864);
    v161 = *(_QWORD *)(v0 + 832);
    v162 = *(_QWORD *)(v0 + 824);
    v163 = *(_QWORD *)(v0 + 816);
    v179(v157, v155, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v161, v163);
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v158, v160);
    sub_10000FE2C(v156, &qword_1004B9EA0);
    sub_10000FD10(v157, v156, &qword_1004B9EA0);
  }
  swift_bridgeObjectRelease(v141);
LABEL_16:
  v59 = *(_QWORD *)(v0 + 936);
  v60 = *(_QWORD *)(v0 + 912);
  v61 = *(_QWORD *)(v0 + 752);
  v62 = *(_QWORD *)(v0 + 736);
  v63 = *(_QWORD *)(v0 + 720);
  v64 = *(_QWORD *)(v0 + 712);
  v65 = *(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104);
  v65(v60, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v64);
  v179(v60, 0, 1, v64);
  v66 = v61 + *(int *)(v62 + 48);
  sub_10000FEB4(v59, v61, &qword_1004B9EA0);
  sub_10000FEB4(v60, v66, &qword_1004B9EA0);
  v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v67(v61, 1, v64) == 1)
  {
    v68 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 912), &qword_1004B9EA0);
    if (v67(v66, 1, v68) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 752), &qword_1004B9EA0);
LABEL_31:
      sub_10000FEB4(*(_QWORD *)(v0 + 600), v0 + 288, &qword_1004B9DF0);
      if (*(_QWORD *)(v0 + 344) == 1)
      {
        v99 = *(_QWORD **)(v0 + 608);
        sub_10000FE2C(v0 + 288, &qword_1004B9DF0);
        v100 = v99[3];
        *(_QWORD *)(v0 + 976) = v100;
        *(_QWORD *)(v0 + 984) = v99[4];
        *(_QWORD *)(v0 + 992) = sub_1000096A0(v99, v100);
        v101 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v102);
        v4 = dispatch thunk of Actor.unownedExecutor.getter(v101, &protocol witness table for MainActor);
        v6 = v103;
        v7 = sub_100032698;
        return swift_task_switch(v7, v4, v6);
      }
      sub_100034A2C(v0 + 288, v0 + 216);
      v104 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1016) = v104;
      *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v105);
      v106 = dispatch thunk of Actor.unownedExecutor.getter(v104, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 1032) = v106;
      *(_QWORD *)(v0 + 1040) = v107;
      return swift_task_switch(sub_10003277C, v106, v107);
    }
    goto LABEL_21;
  }
  v69 = *(_QWORD *)(v0 + 712);
  sub_10000FEB4(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_1004B9EA0);
  v70 = v67(v66, 1, v69);
  v71 = *(_QWORD *)(v0 + 912);
  v72 = *(_QWORD *)(v0 + 904);
  if (v70 == 1)
  {
    v73 = *(_QWORD *)(v0 + 720);
    v74 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 912), &qword_1004B9EA0);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
LABEL_21:
    sub_10000FE2C(*(_QWORD *)(v0 + 752), &qword_1004B9E90);
    goto LABEL_22;
  }
  v177 = *(_QWORD *)(v0 + 752);
  v93 = *(_QWORD *)(v0 + 728);
  v94 = *(_QWORD *)(v0 + 720);
  v95 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v93, v66, v95);
  v96 = sub_1000349EC(&qword_1004B9EA8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v97 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v93, v95, v96);
  v98 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v98(v93, v95);
  sub_10000FE2C(v71, &qword_1004B9EA0);
  v98(v72, v95);
  sub_10000FE2C(v177, &qword_1004B9EA0);
  if ((v97 & 1) != 0)
    goto LABEL_31;
LABEL_22:
  v75 = *(_QWORD *)(v0 + 936);
  v76 = *(_QWORD *)(v0 + 896);
  v77 = *(_QWORD *)(v0 + 744);
  v78 = *(_QWORD *)(v0 + 712);
  v65(v76, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v78);
  v179(v76, 0, 1, v78);
  v79 = v77 + *(int *)(v62 + 48);
  sub_10000FEB4(v75, v77, &qword_1004B9EA0);
  sub_10000FEB4(v76, v79, &qword_1004B9EA0);
  if (v67(v77, 1, v78) == 1)
  {
    v80 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 896), &qword_1004B9EA0);
    if (v67(v79, 1, v80) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 744), &qword_1004B9EA0);
LABEL_35:
      v115 = *(_QWORD **)(v0 + 608);
      v116 = v115[3];
      *(_QWORD *)(v0 + 1072) = v116;
      *(_QWORD *)(v0 + 1080) = v115[4];
      *(_QWORD *)(v0 + 1088) = sub_1000096A0(v115, v116);
      v117 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v118);
      v4 = dispatch thunk of Actor.unownedExecutor.getter(v117, &protocol witness table for MainActor);
      v6 = v119;
      v7 = sub_100032A60;
      return swift_task_switch(v7, v4, v6);
    }
    goto LABEL_27;
  }
  v81 = *(_QWORD *)(v0 + 712);
  sub_10000FEB4(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_1004B9EA0);
  v82 = v67(v79, 1, v81);
  v83 = *(_QWORD *)(v0 + 896);
  v84 = *(_QWORD *)(v0 + 888);
  if (v82 == 1)
  {
    v85 = *(_QWORD *)(v0 + 720);
    v86 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 896), &qword_1004B9EA0);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v86);
LABEL_27:
    sub_10000FE2C(*(_QWORD *)(v0 + 744), &qword_1004B9E90);
    goto LABEL_28;
  }
  v108 = *(_QWORD *)(v0 + 744);
  v109 = *(_QWORD *)(v0 + 728);
  v110 = *(_QWORD *)(v0 + 720);
  v111 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v109, v79, v111);
  v112 = sub_1000349EC(&qword_1004B9EA8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v113 = dispatch thunk of static Equatable.== infix(_:_:)(v84, v109, v111, v112);
  v114 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v114(v109, v111);
  sub_10000FE2C(v83, &qword_1004B9EA0);
  v114(v84, v111);
  sub_10000FE2C(v108, &qword_1004B9EA0);
  if ((v113 & 1) != 0)
    goto LABEL_35;
LABEL_28:
  sub_10000FEB4(*(_QWORD *)(v0 + 616), v0 + 520, &qword_1004B9DF8);
  v87 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v87;
  if (v87)
  {
    v88 = *(_QWORD *)(v0 + 704);
    v89 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_1000096A0((_QWORD *)(v0 + 520), v87);
    swift_storeEnumTagMultiPayload(v88, v89, 7);
    v90 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v91);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v90, &protocol witness table for MainActor);
    v6 = v92;
    v7 = sub_100032CB0;
    return swift_task_switch(v7, v4, v6);
  }
  sub_10000FE2C(v0 + 520, &qword_1004B9DF8);
  v120 = *(_QWORD *)(v0 + 680);
  v121 = *(_QWORD *)(v0 + 672);
  v122 = *(_QWORD *)(v0 + 664);
  sub_10000FEB4(*(_QWORD *)(v0 + 624), v122, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v122, 1, v121) != 1)
  {
    v142 = *(_QWORD *)(v0 + 656);
    v143 = *(_QWORD *)(v0 + 632);
    sub_10002F60C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v143);
    *(_QWORD *)(v0 + 1152) = v144;
    v145 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v142, 1, 1, v145);
    v146 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v146, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v143);
    *(_QWORD *)(inited + 40) = v148;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 1168) = v149;
    *(_QWORD *)(v0 + 1176) = v150;
    *(_WORD *)(v0 + 514) = v151;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v152 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v153);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v152, &protocol witness table for MainActor);
    v6 = v154;
    v7 = sub_100032FBC;
    return swift_task_switch(v7, v4, v6);
  }
  sub_10000FE2C(*(_QWORD *)(v0 + 664), &qword_1004B9D88);
  v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
  v124 = *(_QWORD *)(v0 + 848);
  v125 = *(_QWORD *)(v0 + 632);
  v126 = *(_QWORD *)(v0 + 584);
  v127 = sub_100143100(v125, v125);
  v128 = swift_allocObject(v127, ((*(unsigned __int8 *)(v124 + 80) + (unint64_t)*(unsigned int *)(v127 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72), *(unsigned __int8 *)(v124 + 80) | (unint64_t)*(unsigned __int16 *)(v127 + 52));
  v129 = static Array._adoptStorage(_:count:)(v128, 1);
  v123(v130, v126, v125);
  v131 = sub_100050060(v129);
  *(_QWORD *)(v0 + 1192) = v131;
  *(_QWORD *)(v0 + 560) = v131;
  v132 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  *(_QWORD *)(v0 + 1200) = v132;
  v133 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v133);
  *v132 = v0;
  v132[1] = sub_1000331B0;
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v133, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
}

uint64_t sub_100031850()
{
  char *v0;
  void (*v1)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))*((_QWORD *)v0 + 119);
  v2 = *((_QWORD *)v0 + 118);
  v3 = *((_QWORD *)v0 + 72);
  swift_release(*((_QWORD *)v0 + 120));
  v4 = sub_10002F340();
  v1(v0 + 516, &type metadata for ActionType, v4, v2, v3);
  return swift_task_switch(sub_1000318D0, 0, 0);
}

uint64_t sub_1000318D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t);
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)();
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  void (*v94)(uint64_t, uint64_t);
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void (*v110)(uint64_t, uint64_t);
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t WitnessTable;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t inited;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int16 v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v176;

  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003C9418);
  v3 = swift_getKeyPath(&unk_1003C9440);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(void **)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  if ((v4 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_10003492C(v0 + 472);
    v11 = *(_QWORD *)(v0 + 928);
    v12 = *(_QWORD *)(v0 + 920);
    v13 = *(_QWORD *)(v0 + 912);
    v14 = *(_QWORD *)(v0 + 904);
    v15 = *(_QWORD *)(v0 + 896);
    v16 = *(_QWORD *)(v0 + 888);
    v17 = *(_QWORD *)(v0 + 880);
    v18 = *(_QWORD *)(v0 + 856);
    v19 = *(_QWORD *)(v0 + 840);
    v160 = *(_QWORD *)(v0 + 832);
    v161 = *(_QWORD *)(v0 + 808);
    v162 = *(_QWORD *)(v0 + 800);
    v163 = *(_QWORD *)(v0 + 776);
    v164 = *(_QWORD *)(v0 + 752);
    v165 = *(_QWORD *)(v0 + 744);
    v166 = *(_QWORD *)(v0 + 728);
    v167 = *(_QWORD *)(v0 + 704);
    v169 = *(_QWORD *)(v0 + 688);
    v171 = *(_QWORD *)(v0 + 664);
    v174 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v163);
    swift_task_dealloc(v164);
    swift_task_dealloc(v165);
    swift_task_dealloc(v166);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v171);
    swift_task_dealloc(v174);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v21 = *(_QWORD *)(v0 + 872);
  v22 = *(_QWORD *)(v0 + 864);
  v23 = *(_QWORD *)(v0 + 856);
  v24 = *(_QWORD *)(v0 + 848);
  v25 = *(_QWORD *)(v0 + 840);
  v26 = *(_QWORD *)(v0 + 632);
  v27 = *(_QWORD *)(v0 + 584);
  v175 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v175(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(_QWORD *)(v0 + 968) = v28;
  v28(v23, v27, v26);
  v29 = swift_dynamicCast(v25, v23, v26, v22, 6);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v29 & 1) == 0)
  {
    v41 = *(_QWORD *)(v0 + 840);
    v30(v41, 1, 1, *(_QWORD *)(v0 + 864));
    v42 = (uint64_t *)&unk_1004B9E98;
    goto LABEL_10;
  }
  v31 = *(_QWORD *)(v0 + 880);
  v32 = *(_QWORD *)(v0 + 872);
  v33 = *(_QWORD *)(v0 + 864);
  v34 = *(_QWORD *)(v0 + 840);
  v35 = *(_QWORD *)(v0 + 592);
  v30(v34, 0, 1, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v34, v33);
  v36 = Album.childrenAddStatus(_:)(v35);
  v37 = *(_QWORD *)(v0 + 880);
  if (v36 != 1)
  {
    v43 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v37, *(_QWORD *)(v0 + 864));
    goto LABEL_12;
  }
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v39) == 1)
  {
    v41 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v42 = &qword_1004B9E38;
LABEL_10:
    v43 = sub_10000FE2C(v41, v42);
LABEL_12:
    v44 = *(_QWORD *)(v0 + 920);
    v45 = *(_QWORD *)(v0 + 800);
    v168 = *(_QWORD *)(v0 + 792);
    v170 = *(_QWORD *)(v0 + 784);
    v172 = *(_QWORD *)(v0 + 936);
    v46 = *(_QWORD *)(v0 + 776);
    v47 = *(_QWORD *)(v0 + 768);
    v48 = *(_QWORD *)(v0 + 760);
    v49 = *(_QWORD *)(v0 + 648);
    v50 = *(_QWORD *)(v0 + 632);
    v51 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v43);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v51, v46, v50, v48, v49, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v44);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v45, v170);
    sub_10000FE2C(v172, &qword_1004B9EA0);
    sub_10000FD10(v44, v172, &qword_1004B9EA0);
    goto LABEL_13;
  }
  v131 = *(_QWORD *)(v0 + 832);
  v132 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v131, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v176 = (char *)_swiftEmptyArrayStorage;
  swift_retain(v132);
  LOBYTE(v131) = sub_100034664(v131, v132, &v176);
  v133 = swift_release(v132);
  if ((v131 & 1) != 0)
  {
    v134 = *(_QWORD *)(v0 + 880);
    v135 = *(_QWORD *)(v0 + 872);
    v136 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v133);
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v136);
    v137 = v176;
  }
  else
  {
    v137 = v176;
    if (*((_QWORD *)v176 + 2))
    {
      (*(void (**)(_QWORD, char *, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), &v176[(*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)], *(_QWORD *)(v0 + 712), v133);
      v151 = 0;
    }
    else
    {
      v151 = 1;
    }
    v152 = *(_QWORD *)(v0 + 936);
    v153 = *(_QWORD *)(v0 + 928);
    v154 = *(_QWORD *)(v0 + 880);
    v155 = *(_QWORD *)(v0 + 872);
    v156 = *(_QWORD *)(v0 + 864);
    v157 = *(_QWORD *)(v0 + 832);
    v158 = *(_QWORD *)(v0 + 824);
    v159 = *(_QWORD *)(v0 + 816);
    v175(v153, v151, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v154, v156);
    sub_10000FE2C(v152, &qword_1004B9EA0);
    sub_10000FD10(v153, v152, &qword_1004B9EA0);
  }
  swift_bridgeObjectRelease(v137);
LABEL_13:
  v52 = *(_QWORD *)(v0 + 936);
  v53 = *(_QWORD *)(v0 + 912);
  v54 = *(_QWORD *)(v0 + 752);
  v55 = *(_QWORD *)(v0 + 736);
  v56 = *(_QWORD *)(v0 + 720);
  v57 = *(_QWORD *)(v0 + 712);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 104);
  v58(v53, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v57);
  v175(v53, 0, 1, v57);
  v59 = v54 + *(int *)(v55 + 48);
  sub_10000FEB4(v52, v54, &qword_1004B9EA0);
  sub_10000FEB4(v53, v59, &qword_1004B9EA0);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v60(v54, 1, v57) == 1)
  {
    v61 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 912), &qword_1004B9EA0);
    if (v60(v59, 1, v61) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 752), &qword_1004B9EA0);
LABEL_28:
      sub_10000FEB4(*(_QWORD *)(v0 + 600), v0 + 288, &qword_1004B9DF0);
      if (*(_QWORD *)(v0 + 344) != 1)
      {
        sub_100034A2C(v0 + 288, v0 + 216);
        v100 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1016) = v100;
        *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v101);
        v102 = dispatch thunk of Actor.unownedExecutor.getter(v100, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 1032) = v102;
        *(_QWORD *)(v0 + 1040) = v103;
        return swift_task_switch(sub_10003277C, v102, v103);
      }
      v95 = *(_QWORD **)(v0 + 608);
      sub_10000FE2C(v0 + 288, &qword_1004B9DF0);
      v96 = v95[3];
      *(_QWORD *)(v0 + 976) = v96;
      *(_QWORD *)(v0 + 984) = v95[4];
      *(_QWORD *)(v0 + 992) = sub_1000096A0(v95, v96);
      v97 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v98);
      v85 = dispatch thunk of Actor.unownedExecutor.getter(v97, &protocol witness table for MainActor);
      v87 = v99;
      v88 = sub_100032698;
      return swift_task_switch(v88, v85, v87);
    }
    goto LABEL_18;
  }
  v62 = *(_QWORD *)(v0 + 712);
  sub_10000FEB4(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_1004B9EA0);
  v63 = v60(v59, 1, v62);
  v64 = *(_QWORD *)(v0 + 912);
  v65 = *(_QWORD *)(v0 + 904);
  if (v63 == 1)
  {
    v66 = *(_QWORD *)(v0 + 720);
    v67 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 912), &qword_1004B9EA0);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
LABEL_18:
    sub_10000FE2C(*(_QWORD *)(v0 + 752), &qword_1004B9E90);
    goto LABEL_19;
  }
  v173 = *(_QWORD *)(v0 + 752);
  v89 = *(_QWORD *)(v0 + 728);
  v90 = *(_QWORD *)(v0 + 720);
  v91 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v89, v59, v91);
  v92 = sub_1000349EC(&qword_1004B9EA8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v93 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v89, v91, v92);
  v94 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v94(v89, v91);
  sub_10000FE2C(v64, &qword_1004B9EA0);
  v94(v65, v91);
  sub_10000FE2C(v173, &qword_1004B9EA0);
  if ((v93 & 1) != 0)
    goto LABEL_28;
LABEL_19:
  v68 = *(_QWORD *)(v0 + 936);
  v69 = *(_QWORD *)(v0 + 896);
  v70 = *(_QWORD *)(v0 + 744);
  v71 = *(_QWORD *)(v0 + 712);
  v58(v69, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v71);
  v175(v69, 0, 1, v71);
  v72 = v70 + *(int *)(v55 + 48);
  sub_10000FEB4(v68, v70, &qword_1004B9EA0);
  sub_10000FEB4(v69, v72, &qword_1004B9EA0);
  if (v60(v70, 1, v71) == 1)
  {
    v73 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 896), &qword_1004B9EA0);
    if (v60(v72, 1, v73) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 744), &qword_1004B9EA0);
LABEL_32:
      v111 = *(_QWORD **)(v0 + 608);
      v112 = v111[3];
      *(_QWORD *)(v0 + 1072) = v112;
      *(_QWORD *)(v0 + 1080) = v111[4];
      *(_QWORD *)(v0 + 1088) = sub_1000096A0(v111, v112);
      v113 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v114);
      v85 = dispatch thunk of Actor.unownedExecutor.getter(v113, &protocol witness table for MainActor);
      v87 = v115;
      v88 = sub_100032A60;
      return swift_task_switch(v88, v85, v87);
    }
    goto LABEL_24;
  }
  v74 = *(_QWORD *)(v0 + 712);
  sub_10000FEB4(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_1004B9EA0);
  v75 = v60(v72, 1, v74);
  v76 = *(_QWORD *)(v0 + 896);
  v77 = *(_QWORD *)(v0 + 888);
  if (v75 == 1)
  {
    v78 = *(_QWORD *)(v0 + 720);
    v79 = *(_QWORD *)(v0 + 712);
    sub_10000FE2C(*(_QWORD *)(v0 + 896), &qword_1004B9EA0);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
LABEL_24:
    sub_10000FE2C(*(_QWORD *)(v0 + 744), &qword_1004B9E90);
    goto LABEL_25;
  }
  v104 = *(_QWORD *)(v0 + 744);
  v105 = *(_QWORD *)(v0 + 728);
  v106 = *(_QWORD *)(v0 + 720);
  v107 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v105, v72, v107);
  v108 = sub_1000349EC(&qword_1004B9EA8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v109 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v105, v107, v108);
  v110 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
  v110(v105, v107);
  sub_10000FE2C(v76, &qword_1004B9EA0);
  v110(v77, v107);
  sub_10000FE2C(v104, &qword_1004B9EA0);
  if ((v109 & 1) != 0)
    goto LABEL_32;
LABEL_25:
  sub_10000FEB4(*(_QWORD *)(v0 + 616), v0 + 520, &qword_1004B9DF8);
  v80 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v80;
  if (v80)
  {
    v81 = *(_QWORD *)(v0 + 704);
    v82 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_1000096A0((_QWORD *)(v0 + 520), v80);
    swift_storeEnumTagMultiPayload(v81, v82, 7);
    v83 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v84);
    v85 = dispatch thunk of Actor.unownedExecutor.getter(v83, &protocol witness table for MainActor);
    v87 = v86;
    v88 = sub_100032CB0;
  }
  else
  {
    sub_10000FE2C(v0 + 520, &qword_1004B9DF8);
    v116 = *(_QWORD *)(v0 + 680);
    v117 = *(_QWORD *)(v0 + 672);
    v118 = *(_QWORD *)(v0 + 664);
    sub_10000FEB4(*(_QWORD *)(v0 + 624), v118, &qword_1004B9D88);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v118, 1, v117) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 664), &qword_1004B9D88);
      v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
      v120 = *(_QWORD *)(v0 + 848);
      v121 = *(_QWORD *)(v0 + 632);
      v122 = *(_QWORD *)(v0 + 584);
      v123 = sub_100143100(v121, v121);
      v124 = swift_allocObject(v123, ((*(unsigned __int8 *)(v120 + 80) + (unint64_t)*(unsigned int *)(v123 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72), *(unsigned __int8 *)(v120 + 80) | (unint64_t)*(unsigned __int16 *)(v123 + 52));
      v125 = static Array._adoptStorage(_:count:)(v124, 1);
      v119(v126, v122, v121);
      v127 = sub_100050060(v125);
      *(_QWORD *)(v0 + 1192) = v127;
      *(_QWORD *)(v0 + 560) = v127;
      v128 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
      *(_QWORD *)(v0 + 1200) = v128;
      v129 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v129);
      *v128 = v0;
      v128[1] = sub_1000331B0;
      return MusicLibrary.add<A, B>(_:)(v0 + 560, v129, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
    }
    v138 = *(_QWORD *)(v0 + 656);
    v139 = *(_QWORD *)(v0 + 632);
    sub_10002F60C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v139);
    *(_QWORD *)(v0 + 1152) = v140;
    v141 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v138, 1, 1, v141);
    v142 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v142, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v139);
    *(_QWORD *)(inited + 40) = v144;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 1168) = v145;
    *(_QWORD *)(v0 + 1176) = v146;
    *(_WORD *)(v0 + 514) = v147;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v148 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v149);
    v85 = dispatch thunk of Actor.unownedExecutor.getter(v148, &protocol witness table for MainActor);
    v87 = v150;
    v88 = sub_100032FBC;
  }
  return swift_task_switch(v88, v85, v87);
}

uint64_t sub_100032698()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[123];
  swift_release(v0[125]);
  sub_1000FD26C(0, (uint64_t)(v0 + 52));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[126] = v3;
  *v3 = v0;
  v3[1] = sub_10003271C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 52, v0[122], v0[123]);
}

uint64_t sub_10003271C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 416);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1008));
  sub_10003499C(v1);
  return swift_task_switch(sub_100034AEC, 0, 0);
}

uint64_t sub_10003277C(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[131] = v2;
  v3 = swift_task_alloc(48);
  v1[132] = v3;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v1 + 27;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to withCheckedContinuation<A>(isolation:function:_:)
                                  + 1));
  v1[133] = v4;
  *v4 = v1;
  v4[1] = sub_10003283C;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 513, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003A7400, sub_100034A68, v3, &type metadata for Bool);
}

uint64_t sub_10003283C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1056);
  v3 = *(_QWORD *)(*v0 + 1048);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1064));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000328AC, *(_QWORD *)(v1 + 1032), *(_QWORD *)(v1 + 1040));
}

uint64_t sub_1000328AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 1024));
  return swift_task_switch(sub_1000328E8, 0, 0);
}

uint64_t sub_1000328E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  sub_100034A74(v0 + 216);
  sub_10000FE2C(v1, &qword_1004B9EA0);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v10 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100032A60()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[135];
  swift_release(v0[137]);
  sub_1000FD460(0, (uint64_t)(v0 + 45));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[138] = v3;
  *v3 = v0;
  v3[1] = sub_100032AE4;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 45, v0[134], v0[135]);
}

uint64_t sub_100032AE4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1104));
  sub_10003499C(v1);
  return swift_task_switch(sub_100032B44, 0, 0);
}

uint64_t sub_100032B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10000FE2C(*(_QWORD *)(v0 + 936), &qword_1004B9EA0);
  v1 = *(_QWORD *)(v0 + 928);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 912);
  v4 = *(_QWORD *)(v0 + 904);
  v5 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 888);
  v7 = *(_QWORD *)(v0 + 880);
  v8 = *(_QWORD *)(v0 + 856);
  v9 = *(_QWORD *)(v0 + 840);
  v11 = *(_QWORD *)(v0 + 832);
  v12 = *(_QWORD *)(v0 + 808);
  v13 = *(_QWORD *)(v0 + 800);
  v14 = *(_QWORD *)(v0 + 776);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD *)(v0 + 744);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 704);
  v19 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 664);
  v21 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100032CB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[140];
  v2 = v0[139];
  v3 = v0[88];
  swift_release(v0[142]);
  sub_1000A4544(v3, 0, v2, v1);
  sub_100034960(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_100032D28, 0, 0);
}

uint64_t sub_100032D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  sub_10000970C((_QWORD *)(v0 + 520));
  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 664);
  sub_10000FEB4(*(_QWORD *)(v0 + 624), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 664), &qword_1004B9D88);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
    v5 = *(_QWORD *)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = *(_QWORD *)(v0 + 584);
    v8 = sub_100143100(v6, v6);
    v9 = swift_allocObject(v8, ((*(unsigned __int8 *)(v5 + 80) + (unint64_t)*(unsigned int *)(v8 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | (unint64_t)*(unsigned __int16 *)(v8 + 52));
    v10 = static Array._adoptStorage(_:count:)(v9, 1);
    v4(v11, v7, v6);
    v12 = sub_100050060(v10);
    *(_QWORD *)(v0 + 1192) = v12;
    *(_QWORD *)(v0 + 560) = v12;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
    *(_QWORD *)(v0 + 1200) = v13;
    v14 = type metadata accessor for Array(0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
    *v13 = v0;
    v13[1] = sub_1000331B0;
    return MusicLibrary.add<A, B>(_:)(v0 + 560, v14, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 656);
    v18 = *(_QWORD *)(v0 + 632);
    sub_10002F60C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v18);
    *(_QWORD *)(v0 + 1152) = v19;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    v21 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v21, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v18);
    *(_QWORD *)(inited + 40) = v23;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 1168) = v24;
    *(_QWORD *)(v0 + 1176) = v25;
    *(_WORD *)(v0 + 514) = v26;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v27 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v28);
    v29 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    return swift_task_switch(sub_100032FBC, v29, v30);
  }
}

uint64_t sub_100032FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 1176);
  v2 = *(_QWORD *)(v0 + 1168);
  v3 = *(void **)(v0 + 1160);
  v4 = *(_QWORD *)(v0 + 1152);
  v5 = *(_QWORD *)(v0 + 1144);
  v6 = *(uint64_t **)(v0 + 688);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(unsigned __int16 *)(v0 + 514);
  swift_release(*(_QWORD *)(v0 + 1184));
  sub_100053874(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_100033098, 0, 0);
}

uint64_t sub_100033098()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t WitnessTable;

  sub_100034960(v0[86], type metadata accessor for Actions.MetricsReportingContext);
  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[121];
  v2 = v0[106];
  v3 = v0[79];
  v4 = v0[73];
  v5 = sub_100143100(v3, v3);
  v6 = swift_allocObject(v5, ((*(unsigned __int8 *)(v2 + 80) + (unint64_t)*(unsigned int *)(v5 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72), *(unsigned __int8 *)(v2 + 80) | (unint64_t)*(unsigned __int16 *)(v5 + 52));
  v7 = static Array._adoptStorage(_:count:)(v6, 1);
  v1(v8, v4, v3);
  v9 = sub_100050060(v7);
  v0[149] = v9;
  v0[70] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  v0[150] = v10;
  v11 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v11);
  *v10 = v0;
  v10[1] = sub_1000331B0;
  return MusicLibrary.add<A, B>(_:)(v0 + 70, v11, v0[79], WitnessTable, v0[80]);
}

uint64_t sub_1000331B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 1200);
  *(_QWORD *)(*v2 + 1208) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 1192));
    v6 = sub_10003323C;
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 1192);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v7);
    v6 = sub_100034AEC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10003323C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v11 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  sub_10000FE2C(v1, &qword_1004B9EA0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000333B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v23 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v23 + 56) & ~v23;
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(_QWORD *)(v0 + v4));
  v10 = v0 + v5;
  if (*(_QWORD *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v5);
    v11 = *(unsigned __int8 *)(v10 + 48);
    if (v11 != 255)
      sub_1000335FC(*(id *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), v11);
    if (*(_QWORD *)(v10 + 56))
      swift_release(*(_QWORD *)(v10 + 64));
  }
  v12 = (v9 + v7 + 40) & ~v9;
  sub_10000970C((_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_10000970C((_QWORD *)(v0 + v7));
  v13 = v0 + v12;
  v14 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v0 + v12, 1, v14))
  {
    v15 = *(_QWORD *)(v13 + 8);
    if (v15 >= 0xA)
      swift_bridgeObjectRelease(v15);
    v16 = v13 + v14[5];
    v17 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v17 - 1) + 48))(v16, 1, v17))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 24));
      v18 = v16 + v17[6];
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8]));
  }
  return swift_deallocObject(v0, v12 + v22, v23 | v9 | 7);
}

void sub_1000335FC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (a6 <= 1u)
  {

  }
}

uint64_t sub_100033620(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100033638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0[2] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8) + 80);
  v9 = v8 + v7 + 40;
  v10 = v0[5];
  v11 = v0[6];
  v12 = (uint64_t)v0 + v3;
  v13 = *(_QWORD *)((char *)v0 + v4);
  v14 = (uint64_t)v0 + v5;
  v15 = (uint64_t)v0 + v6;
  v16 = (uint64_t)v0 + v7;
  v17 = (uint64_t)v0 + (v9 & ~v8);
  v18 = (_QWORD *)swift_task_alloc(dword_1004B9DEC);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10002E8E0;
  return sub_10003074C(v10, v11, v12, v13, v14, v15, v16, v17);
}

BOOL sub_100033750(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  char **v25;
  char *v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v35;
  char *v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a3;
  v38 = a2;
  v4 = sub_1000057B4(&qword_1004B9EA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for MusicLibrary.AddAction(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000057B4(&qword_1004B9E28);
  v39 = *(_QWORD *)(v17 - 8);
  v40 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.add.getter(v18);
  v21 = type metadata accessor for Track(0);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v16, v21, v13, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000FE2C((uint64_t)v6, &qword_1004B9EA0);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v12, v6, v7);
    v23 = v36;
    v24 = v7;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v36, v12, v7);
    v25 = v37;
    v26 = *v37;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
    *v25 = v26;
    v28 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v26 = (char *)sub_10005DE44(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
      *v25 = v26;
    }
    v30 = *((_QWORD *)v26 + 2);
    v29 = *((_QWORD *)v26 + 3);
    if (v30 >= v29 >> 1)
    {
      v26 = (char *)sub_10005DE44(v29 > 1, v30 + 1, 1, v26);
      *v37 = v26;
    }
    *((_QWORD *)v26 + 2) = v30 + 1;
    v22(&v26[((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30], v28, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v24);
  }
  v31 = sub_1000302D8();
  v33 = v32 == 1;
  sub_100033EC4(v31, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  return v33;
}

uint64_t MusicLibrary.SupportedStatus<>.unaddableReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_1000057B4(&qword_1004B9E28);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v14, v7, v8);
    v15(v12, v14, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) == enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      v16 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
      v17 = *(_QWORD *)(v16 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t sub_100033C34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100033CA0, v5, v6);
}

uint64_t sub_100033CA0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 40) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_10002F340();
    v5(v0 + 40, &type metadata for ActionType, v6, ObjectType, v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100033D24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100033D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1004B9E0C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002E8E0;
  return sub_100033C34(v2, v3);
}

uint64_t sub_100033D98(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100033DF0;
  return v4();
}

uint64_t sub_100033DF0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100033E3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100033E60()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004B9E1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return ((uint64_t (*)(int *))((char *)&dword_1004B9E18 + dword_1004B9E18))(v2);
}

uint64_t sub_100033EC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t Actions.AddToLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.AddToLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004698D8, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100469900, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10002F080;
}

uint64_t (*sub_1000340C4())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100469A90, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100469AB8, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10002F6E4;
}

void NSDirectionalEdgeInsets.Edge.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int MPCPlaybackEngine.Option.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL sub_1000341A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000341B8()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000341FC()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100034224()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100034264()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10003428C()
{
  unint64_t result;

  result = qword_1004B9E80;
  if (!qword_1004B9E80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Album.ChildrenAddStatus, &type metadata for Album.ChildrenAddStatus);
    atomic_store(result, (unint64_t *)&qword_1004B9E80);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary()
{
  return &type metadata for Actions.AddToLibrary;
}

uint64_t _s12AddToLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t _s12AddToLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s12AddToLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AddToLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary.Context()
{
  return &type metadata for Actions.AddToLibrary.Context;
}

_BYTE *initializeBufferWithCopyOfBuffer for ActionType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17ChildrenAddStatusOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17ChildrenAddStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000345CC + 4 * byte_1003C9335[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100034600 + 4 * asc_1003C9330[v4]))();
}

uint64_t sub_100034600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100034608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100034610);
  return result;
}

uint64_t sub_10003461C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100034624);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100034628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100034630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003463C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100034644(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Album.ChildrenAddStatus()
{
  return &type metadata for Album.ChildrenAddStatus;
}

BOOL sub_100034664(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  uint64_t v47;

  v42 = a2;
  v43 = a3;
  v4 = type metadata accessor for Track(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v39 = (char *)&v34 - v8;
  v9 = sub_1000057B4(&qword_1004B9E40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004B9E30);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v10;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36(v12, a1, v9);
  v16 = sub_100034AA8(&qword_1004B9EB0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v37 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v16);
  v17 = &v15[*(int *)(v13 + 36)];
  v18 = sub_100034AA8((unint64_t *)&qword_1004B9E48, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v35 = v15;
  v19 = v39;
  while (1)
  {
    v20 = *(_QWORD *)v17;
    dispatch thunk of Collection.endIndex.getter(v46, v9, v18);
    v44 = v46[0];
    v45 = v20;
    if (v20 == v46[0])
    {
LABEL_5:
      v32 = (uint64_t)v15;
      goto LABEL_7;
    }
    v21 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v46, v17, v9, v18);
    v22 = v40;
    v23 = v9;
    v24 = v17;
    v25 = v15;
    v26 = v41;
    (*(void (**)(char *))(v40 + 16))(v19);
    v21(v46, 0);
    v27 = v37;
    v28 = v25;
    v17 = v24;
    v9 = v23;
    v36(v37, (uint64_t)v28, v23);
    dispatch thunk of Collection.formIndex(after:)(v17, v23, v18);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v23);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v19, v26);
    v29 = v47;
    v30 = sub_100033750((uint64_t)v7, v42, v43);
    v47 = v29;
    if (v29)
      break;
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
    v15 = v35;
    if (v31)
      goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
  v32 = (uint64_t)v35;
LABEL_7:
  sub_10000FE2C(v32, &qword_1004B9E30);
  return v45 != v44;
}

uint64_t sub_10003492C(uint64_t a1)
{
  destroy for SubscriptionUpsellPresenter.Placement(a1);
  return a1;
}

uint64_t sub_100034960(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *sub_10003499C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  return a1;
}

uint64_t sub_1000349EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100034A2C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PresentationSource(a2, a1);
  return a2;
}

double sub_100034A68(uint64_t a1)
{
  uint64_t v1;

  return sub_10011BDFC(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100034A74(uint64_t a1)
{
  destroy for PresentationSource(a1);
  return a1;
}

uint64_t sub_100034AA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100009788(&qword_1004B9E40);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double static Actions.AddToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 2;
  *(_QWORD *)(a2 + 56) = sub_10002F788;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1004B9EB8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1004B9EC0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t (*Actions.AddToPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100469B38, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_100469B60, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10002F080;
}

uint64_t (*sub_100034C1C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100469C60, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_100469C88, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10002F6E4;
}

double Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v14;
  double result;
  _OWORD v16[2];
  __int128 v17;

  sub_100039950(a1, a2, a3, a4, a5, a6, a7, a8, (unint64_t (**)())v16, a10, a11, a12);
  swift_release(a2);
  v14 = v16[1];
  *a9 = v16[0];
  a9[1] = v14;
  result = *(double *)&v17;
  a9[2] = v17;
  return result;
}

unint64_t sub_100034D00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  int v45;
  int v46;
  void (*v47)(char *, uint64_t);
  int v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v57 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v55 = *(_QWORD *)(v57 - 8);
  v2 = __chkstk_darwin(v57);
  v56 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v54 = (char *)&v51 - v4;
  v5 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v51 - v10;
  v12 = sub_1000057B4(&qword_1004B9E28);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v52 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v53 = (char *)&v51 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v51 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21 = a1;
  v20((char *)&v51 - v18, a1, v12);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v19, v12);
  if (v22 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v22 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      if (qword_1004B8A30 != -1)
        swift_once(&qword_1004B8A30, sub_1000A6660);
      v32 = type metadata accessor for Logger(0);
      sub_100039D34(v32, (uint64_t)static Logger.actions);
      v33 = v53;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v53, v21, v12);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v58 = v38;
        *(_DWORD *)v37 = 136315138;
        v39 = v52;
        v20(v52, (uint64_t)v33, v12);
        v40 = (char *)String.init<A>(describing:)(v39, v12);
        v41 = v33;
        v43 = v42;
        *(_QWORD *)(v37 + 4) = sub_1000393D0(v40, v42, &v58);
        swift_bridgeObjectRelease(v43);
        v44 = *(void (**)(char *, uint64_t))(v13 + 8);
        v44(v41, v12);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unknown status=%s", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v44 = *(void (**)(char *, uint64_t))(v13 + 8);
        v44(v33, v12);
      }

      v31 = 0x206E776F6E6B6E55;
      v44(v19, v12);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v19, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v23 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
  {
    v45 = v23;
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
    {
      v31 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v31;
    }
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      goto LABEL_27;
    v46 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
    v47 = *(void (**)(char *, uint64_t))(v6 + 8);
    v47(v11, v5);
    if (v45 != v46)
    {
      v31 = 0x206E776F6E6B6E55;
      v47(v9, v5);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
  v25 = v54;
  v24 = v55;
  v26 = v9;
  v27 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v26, v57);
  v28 = v56;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v56, v25, v27);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v27);
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
    goto LABEL_26;
  v30 = v29;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
    goto LABEL_26;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001CLL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001ELL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000014;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000025;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000016;
  }
  else
  {
    v31 = 0x206E776F6E6B6E55;
    v49 = enum case for MusicLibrary.AddStatus.UnaddableReason.unknown(_:);
    v50 = *(void (**)(char *, uint64_t))(v24 + 8);
    v50(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    if (v30 != v49)
      v50(v28, v27);
  }
  return v31;
}

uint64_t sub_100035404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[48] = v17;
  v8[49] = v18;
  v8[46] = a7;
  v8[47] = a8;
  v8[44] = a5;
  v8[45] = a6;
  v8[42] = a3;
  v8[43] = a4;
  v8[40] = a1;
  v8[41] = a2;
  v9 = sub_1000057B4(&qword_1004B9E38);
  v8[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4(&qword_1004B9E40);
  v8[51] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[52] = v11;
  v8[53] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004B9EA0);
  v8[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[55] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[56] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[57] = swift_task_alloc(v15);
  v8[58] = swift_task_alloc(v15);
  v8[59] = swift_task_alloc(v15);
  return swift_task_switch(sub_100035508, 0, 0);
}

uint64_t sub_100035508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 432);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 432), &qword_1004B9EA0);
    v4 = (_QWORD *)swift_task_alloc(dword_1004B9ECC);
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_1000359EC;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 360));
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 448);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 432), v8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v10(v6, v7, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v6, v8);
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
  {
    v12 = *(_QWORD **)(v0 + 328);
    v13 = v12[3];
    *(_QWORD *)(v0 + 488) = v13;
    *(_QWORD *)(v0 + 496) = v12[4];
    *(_QWORD *)(v0 + 504) = sub_1000096A0(v12, v13);
    v14 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v15);
    v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
    v18 = v17;
    v19 = sub_100035B30;
    return swift_task_switch(v19, v16, v18);
  }
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
  {
    sub_10000FEB4(*(_QWORD *)(v0 + 336), v0 + 88, &qword_1004B9DF0);
    if (*(_QWORD *)(v0 + 144) == 1)
    {
      v20 = *(_QWORD **)(v0 + 328);
      sub_10000FE2C(v0 + 88, &qword_1004B9DF0);
      v21 = v20[3];
      *(_QWORD *)(v0 + 528) = v21;
      *(_QWORD *)(v0 + 536) = v20[4];
      *(_QWORD *)(v0 + 544) = sub_1000096A0(v20, v21);
      v22 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v23);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
      v18 = v24;
      v19 = sub_100035C98;
      return swift_task_switch(v19, v16, v18);
    }
    sub_100034A2C(v0 + 88, v0 + 16);
    v28 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 568) = v28;
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v29);
    v30 = dispatch thunk of Actor.unownedExecutor.getter(v28, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 584) = v30;
    *(_QWORD *)(v0 + 592) = v31;
    return swift_task_switch(sub_100035D7C, v30, v31);
  }
  else
  {
    if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v25 = *(_QWORD *)(v0 + 472);
      v26 = *(_QWORD *)(v0 + 440);
      v27 = *(_QWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 272) = 0u;
      *(_OWORD *)(v0 + 288) = 0u;
      *(_QWORD *)(v0 + 304) = 0;
      *(_BYTE *)(v0 + 312) = -2;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 272);
      sub_10003492C(v0 + 272);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    else
    {
      if (qword_1004B8A30 != -1)
        swift_once(&qword_1004B8A30, sub_1000A6660);
      v32 = *(_QWORD *)(v0 + 472);
      v33 = *(_QWORD *)(v0 + 456);
      v34 = *(_QWORD *)(v0 + 440);
      v35 = type metadata accessor for Logger(0);
      sub_100039D34(v35, (uint64_t)static Logger.actions);
      v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v33, v32, v34);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.fault.getter();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(_QWORD *)(v0 + 472);
      v42 = *(_QWORD *)(v0 + 448);
      v41 = *(_QWORD *)(v0 + 456);
      v43 = *(_QWORD *)(v0 + 440);
      if (v39)
      {
        v44 = swift_slowAlloc(12, -1);
        v45 = swift_slowAlloc(32, -1);
        v56 = v45;
        *(_DWORD *)v44 = 136315138;
        v46 = sub_100004D8C(&qword_1004B9E88, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v47 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v43, v46);
        v49 = v48;
        *(_QWORD *)(v44 + 4) = sub_1000393D0(v47, v48, &v56);
        swift_bridgeObjectRelease(v49);
        v50 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v50(v41, v43);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unhandled unaddableReason=%s", (uint8_t *)v44, 0xCu);
        swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v45, -1, -1);
        swift_slowDealloc(v44, -1, -1);

      }
      else
      {

        v50 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v50(v41, v43);
      }
      v50(v40, v43);
      v50(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    }
    v51 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 456);
    v54 = *(_QWORD *)(v0 + 424);
    v53 = *(_QWORD *)(v0 + 432);
    v55 = *(_QWORD *)(v0 + 400);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000359EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  return swift_task_switch(sub_100035A40, 0, 0);
}

uint64_t sub_100035A40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v8;

  v1 = v0[51];
  v2 = v0[52];
  v3 = v0[50];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v4, &protocol witness table for Track);
    sub_10000FE2C(v3, &qword_1004B9E38);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
  }
  v5 = *(int **)(v0[49] + 8);
  v8 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  v0[78] = v6;
  *v6 = v0;
  v6[1] = sub_100035F84;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v8)(v0[53], v0[43], v0[45], v0[47], v0[48], v0[46], v0[49]);
}

uint64_t sub_100035B30()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[62];
  swift_release(v0[64]);
  sub_1000FD460(0, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[65] = v3;
  *v3 = v0;
  v3[1] = sub_100035BB0;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[61], v0[62]);
}

uint64_t sub_100035BB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  sub_10003499C(v1);
  return swift_task_switch(sub_100035C10, 0, 0);
}

uint64_t sub_100035C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100035C98()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release(v0[69]);
  sub_1000FD26C(2, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_100035D1C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[66], v0[67]);
}

uint64_t sub_100035D1C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_10003499C(v1);
  return swift_task_switch(sub_10003A2E4, 0, 0);
}

uint64_t sub_100035D7C(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_100035E40;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 313, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003A7400, sub_100034A68, v3, &type metadata for Bool);
}

uint64_t sub_100035E40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  v3 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100035EB0, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_100035EB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 576));
  return swift_task_switch(sub_100035EEC, 0, 0);
}

uint64_t sub_100035EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  sub_100034A74(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100035F84()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 624));
  return swift_task_switch(sub_100035FD8, 0, 0);
}

uint64_t sub_100035FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 408));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MusicPlaylistAddable.tracks.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = sub_1000057B4(&qword_1004B9ED0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry(0);
  v3[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[12] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v11);
  v3[14] = swift_task_alloc(v11);
  v12 = sub_1000057B4(&qword_1004B9ED8);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Track(0);
  v3[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[17] = v14;
  v3[18] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004B9EE0);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v3[20] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[21] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v18);
  v3[23] = swift_task_alloc(v18);
  v19 = sub_1000057B4(&qword_1004B9EE8);
  v3[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Song(0);
  v3[25] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[26] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v22);
  v3[28] = swift_task_alloc(v22);
  v23 = sub_1000057B4(&qword_1004B9E40);
  v3[29] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[30] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[31] = swift_task_alloc(v25);
  v3[32] = swift_task_alloc(v25);
  v26 = (*(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9E38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v26);
  v3[34] = swift_task_alloc(v26);
  v3[35] = swift_task_alloc(v26);
  v27 = sub_1000057B4(&qword_1004BD700);
  v3[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Playlist(0);
  v3[37] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[38] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[39] = swift_task_alloc(v30);
  v3[40] = swift_task_alloc(v30);
  v3[41] = swift_task_alloc(v30);
  v31 = sub_1000057B4(&qword_1004B9E98);
  v3[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(a2 - 8);
  v3[43] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v33);
  v3[45] = swift_task_alloc(v33);
  v3[46] = swift_task_alloc(v33);
  v3[47] = swift_task_alloc(v33);
  v3[48] = swift_task_alloc(v33);
  v3[49] = swift_task_alloc(v33);
  v3[50] = swift_task_alloc(v33);
  v3[51] = swift_task_alloc(v33);
  v34 = type metadata accessor for Album(0);
  v3[52] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[53] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v36);
  v3[55] = swift_task_alloc(v36);
  return swift_task_switch(sub_1000363EC, 0, 0);
}

uint64_t sub_1000363EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  void (*v167)(uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 344) + 16);
  *(_QWORD *)(v0 + 448) = v7;
  v7(v3, v5, v6);
  v8 = swift_dynamicCast(v4, v3, v6, v1, 6);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 416);
    v12 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 336);
    v9(v13, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v13, v11);
    v14 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1003C6240;
    sub_1000057B4(&qword_1004B9F10);
    v16 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v204 = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v0 + 456) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v0 + 464) = v18;
    v19 = sub_100004D8C(&qword_1004B9F18, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    *v18 = v0;
    v18[1] = sub_1000370D8;
    return MusicItem<>.with(_:)(*(_QWORD *)(v0 + 432), v17, *(_QWORD *)(v0 + 416), &protocol witness table for Album, &protocol witness table for Album, v19);
  }
  v21 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 336);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v27 = *(_QWORD *)(v0 + 32);
  v26 = *(_QWORD *)(v0 + 40);
  v9(v22, 1, 1, *(_QWORD *)(v0 + 416));
  sub_10000FE2C(v22, &qword_1004B9E98);
  v7(v21, v26, v27);
  v28 = swift_dynamicCast(v25, v21, v27, v23, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v28)
  {
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 288);
    v29(v33, 0, 1, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v33, v31);
    v34 = sub_1000057B4((uint64_t *)&unk_1004BDDB0);
    *(_QWORD *)(v0 + 480) = v34;
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1003C6240;
    *(_QWORD *)(v0 + 488) = sub_1000057B4(&qword_1004B9F00);
    v36 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v35 + 32) = v36;
    v204 = v35;
    specialized Array._endMutation()(v36);
    *(_QWORD *)(v0 + 496) = v35;
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 504) = v37;
    *v37 = v0;
    v37[1] = sub_10003735C;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 320), v35, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
  }
  v38 = *(_QWORD *)(v0 + 392);
  v39 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 32);
  v43 = *(_QWORD *)(v0 + 40);
  v29(v39, 1, 1, *(_QWORD *)(v0 + 296));
  sub_10000FE2C(v39, &qword_1004BD700);
  v7(v38, v43, v44);
  v45 = swift_dynamicCast(v42, v38, v44, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if (v45)
  {
    v47 = *(_QWORD *)(v0 + 240);
    v201 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 200);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v46(v51, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v51, v49);
    v55 = sub_1000057B4(&qword_1004B9EF8);
    v56 = *(unsigned __int8 *)(v52 + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = swift_allocObject(v55, v57 + *(_QWORD *)(v52 + 72), v56 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_1003C64D0;
    v59 = v58 + v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.song(_:);
  }
  else
  {
    v61 = *(_QWORD *)(v0 + 384);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 152);
    v67 = *(_QWORD *)(v0 + 32);
    v66 = *(_QWORD *)(v0 + 40);
    v46(v62, 1, 1, *(_QWORD *)(v0 + 200));
    sub_10000FE2C(v62, &qword_1004B9EE8);
    v7(v61, v66, v67);
    v68 = swift_dynamicCast(v65, v61, v67, v63, 6);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    if (!v68)
    {
      v87 = *(_QWORD *)(v0 + 376);
      v88 = *(_QWORD *)(v0 + 152);
      v89 = *(_QWORD *)(v0 + 128);
      v90 = *(_QWORD *)(v0 + 136);
      v91 = *(_QWORD *)(v0 + 120);
      v93 = *(_QWORD *)(v0 + 32);
      v92 = *(_QWORD *)(v0 + 40);
      v69(v88, 1, 1, *(_QWORD *)(v0 + 160));
      sub_10000FE2C(v88, &qword_1004B9EE0);
      v7(v87, v92, v93);
      v94 = swift_dynamicCast(v91, v87, v93, v89, 6);
      v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      if (v94)
      {
        v96 = *(_QWORD *)(v0 + 232);
        v97 = *(_QWORD *)(v0 + 240);
        v99 = *(_QWORD *)(v0 + 136);
        v98 = *(_QWORD *)(v0 + 144);
        v101 = *(_QWORD *)(v0 + 120);
        v100 = *(_QWORD *)(v0 + 128);
        v102 = *(_QWORD *)(v0 + 24);
        v95(v101, 0, 1, v100);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v98, v101, v100);
        v103 = sub_1000057B4(&qword_1004B9EF8);
        v104 = *(unsigned __int8 *)(v99 + 80);
        v105 = (v104 + 32) & ~v104;
        v106 = swift_allocObject(v103, v105 + *(_QWORD *)(v99 + 72), v104 | 7);
        *(_OWORD *)(v106 + 16) = xmmword_1003C64D0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v106 + v105, v98, v100);
        MusicItemCollection.init(arrayLiteral:)(v106, v100, &protocol witness table for Track);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
        v75 = v102;
        v76 = 0;
      }
      else
      {
        v107 = *(_QWORD *)(v0 + 368);
        v108 = *(_QWORD *)(v0 + 120);
        v109 = *(_QWORD *)(v0 + 88);
        v110 = *(_QWORD *)(v0 + 96);
        v111 = *(_QWORD *)(v0 + 80);
        v113 = *(_QWORD *)(v0 + 32);
        v112 = *(_QWORD *)(v0 + 40);
        v95(v108, 1, 1, *(_QWORD *)(v0 + 128));
        sub_10000FE2C(v108, &qword_1004B9ED8);
        v7(v107, v112, v113);
        v114 = swift_dynamicCast(v111, v107, v113, v109, 6);
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        if (v114)
        {
          v116 = *(_QWORD *)(v0 + 112);
          v117 = *(_QWORD *)(v0 + 88);
          v118 = *(_QWORD *)(v0 + 96);
          v120 = *(_QWORD *)(v0 + 72);
          v119 = *(_QWORD *)(v0 + 80);
          v121 = *(_QWORD *)(v0 + 48);
          v122 = *(_QWORD *)(v0 + 56);
          v115(v119, 0, 1, v117);
          v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32))(v116, v119, v117);
          Playlist.Entry.internalItem.getter(v123);
          v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 88))(v120, v121);
          if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
          {
            v199 = *(_QWORD *)(v0 + 240);
            v201 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 168);
            v126 = *(_QWORD *)(v0 + 176);
            v127 = *(_QWORD *)(v0 + 160);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v193 = *(_QWORD *)(v0 + 88);
            v196 = *(_QWORD *)(v0 + 112);
            v131 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v131, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v131, v127);
            v133 = sub_1000057B4(&qword_1004B9EF8);
            v134 = *(unsigned __int8 *)(v128 + 80);
            v135 = (v134 + 32) & ~v134;
            v136 = swift_allocObject(v133, v135 + *(_QWORD *)(v128 + 72), v134 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_1003C64D0;
            v137 = v136 + v135;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.musicVideo(_:);
          }
          else
          {
            if (v124 != enum case for Playlist.Entry.InternalItem.song(_:))
            {
              if (qword_1004B8A30 != -1)
                swift_once(&qword_1004B8A30, sub_1000A6660);
              v146 = *(_QWORD *)(v0 + 104);
              v147 = *(_QWORD *)(v0 + 112);
              v148 = *(_QWORD *)(v0 + 88);
              v149 = *(_QWORD *)(v0 + 96);
              v150 = type metadata accessor for Logger(0);
              sub_100039D34(v150, (uint64_t)static Logger.actions);
              v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v146, v147, v148);
              v152 = Logger.logObject.getter(v151);
              v153 = static os_log_type_t.fault.getter();
              v154 = os_log_type_enabled(v152, v153);
              v156 = *(_QWORD *)(v0 + 104);
              v155 = *(_QWORD *)(v0 + 112);
              v158 = *(_QWORD *)(v0 + 88);
              v157 = *(_QWORD *)(v0 + 96);
              if (v154)
              {
                v159 = *(_QWORD *)(v0 + 64);
                v197 = *(_QWORD *)(v0 + 56);
                v203 = *(_QWORD *)(v0 + 112);
                v160 = *(_QWORD *)(v0 + 48);
                v161 = swift_slowAlloc(12, -1);
                v200 = swift_slowAlloc(32, -1);
                v204 = v200;
                *(_DWORD *)v161 = 136315138;
                v194 = v157;
                Playlist.Entry.internalItem.getter(v200);
                v162 = sub_100004D8C(&qword_1004B9EF0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
                v163 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v160, v162);
                v164 = v158;
                v166 = v165;
                (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v159, v160);
                *(_QWORD *)(v161 + 4) = sub_1000393D0(v163, v166, &v204);
                swift_bridgeObjectRelease(v166);
                v167 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
                v167(v156, v164);
                _os_log_impl((void *)&_mh_execute_header, v152, v153, "Unsupported Playlist.Entry.InternalItem=%s", (uint8_t *)v161, 0xCu);
                swift_arrayDestroy(v200, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v200, -1, -1);
                swift_slowDealloc(v161, -1, -1);

                v168 = v203;
                v169 = v164;
              }
              else
              {

                v167 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
                v167(v156, v158);
                v168 = v155;
                v169 = v158;
              }
              v167(v168, v169);
              v170 = *(_QWORD *)(v0 + 72);
              v171 = *(_QWORD *)(v0 + 48);
              v172 = *(_QWORD *)(v0 + 56);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
              (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
              goto LABEL_12;
            }
            v199 = *(_QWORD *)(v0 + 240);
            v201 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 208);
            v126 = *(_QWORD *)(v0 + 216);
            v127 = *(_QWORD *)(v0 + 200);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v193 = *(_QWORD *)(v0 + 88);
            v196 = *(_QWORD *)(v0 + 112);
            v142 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v142, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v142, v127);
            v143 = sub_1000057B4(&qword_1004B9EF8);
            v144 = *(unsigned __int8 *)(v128 + 80);
            v145 = (v144 + 32) & ~v144;
            v136 = swift_allocObject(v143, v145 + *(_QWORD *)(v128 + 72), v144 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_1003C64D0;
            v137 = v136 + v145;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.song(_:);
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v128 + 104))(v137, *v138, v129);
          MusicItemCollection.init(arrayLiteral:)(v136, v129, &protocol witness table for Track);
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v127);
          (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v196, v193);
          v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56);
          v75 = v132;
          goto LABEL_10;
        }
        v96 = *(_QWORD *)(v0 + 232);
        v139 = *(_QWORD *)(v0 + 240);
        v140 = *(_QWORD *)(v0 + 80);
        v141 = *(_QWORD *)(v0 + 24);
        v115(v140, 1, 1, *(_QWORD *)(v0 + 88));
        sub_10000FE2C(v140, &qword_1004B9ED0);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56);
        v75 = v141;
        v76 = 1;
      }
      v77 = v96;
      goto LABEL_11;
    }
    v47 = *(_QWORD *)(v0 + 240);
    v201 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 184);
    v49 = *(_QWORD *)(v0 + 160);
    v50 = *(_QWORD *)(v0 + 168);
    v70 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v69(v70, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v70, v49);
    v71 = sub_1000057B4(&qword_1004B9EF8);
    v72 = *(unsigned __int8 *)(v52 + 80);
    v73 = (v72 + 32) & ~v72;
    v58 = swift_allocObject(v71, v73 + *(_QWORD *)(v52 + 72), v72 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_1003C64D0;
    v59 = v58 + v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.musicVideo(_:);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v59, *v60, v53);
  MusicItemCollection.init(arrayLiteral:)(v58, v53, &protocol witness table for Track);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v75 = v54;
LABEL_10:
  v76 = 0;
  v77 = v201;
LABEL_11:
  v74(v75, v76, 1, v77);
LABEL_12:
  v78 = *(_QWORD *)(v0 + 432);
  v80 = *(_QWORD *)(v0 + 400);
  v79 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 384);
  v82 = *(_QWORD *)(v0 + 392);
  v84 = *(_QWORD *)(v0 + 368);
  v83 = *(_QWORD *)(v0 + 376);
  v86 = *(_QWORD *)(v0 + 352);
  v85 = *(_QWORD *)(v0 + 360);
  v173 = *(_QWORD *)(v0 + 336);
  v174 = *(_QWORD *)(v0 + 328);
  v175 = *(_QWORD *)(v0 + 320);
  v176 = *(_QWORD *)(v0 + 312);
  v177 = *(_QWORD *)(v0 + 288);
  v178 = *(_QWORD *)(v0 + 280);
  v179 = *(_QWORD *)(v0 + 272);
  v180 = *(_QWORD *)(v0 + 264);
  v181 = *(_QWORD *)(v0 + 256);
  v182 = *(_QWORD *)(v0 + 248);
  v183 = *(_QWORD *)(v0 + 224);
  v184 = *(_QWORD *)(v0 + 216);
  v185 = *(_QWORD *)(v0 + 192);
  v186 = *(_QWORD *)(v0 + 184);
  v187 = *(_QWORD *)(v0 + 176);
  v188 = *(_QWORD *)(v0 + 152);
  v189 = *(_QWORD *)(v0 + 144);
  v190 = *(_QWORD *)(v0 + 120);
  v191 = *(_QWORD *)(v0 + 112);
  v192 = *(_QWORD *)(v0 + 104);
  v195 = *(_QWORD *)(v0 + 80);
  v198 = *(_QWORD *)(v0 + 72);
  v202 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v187);
  swift_task_dealloc(v188);
  swift_task_dealloc(v189);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v192);
  swift_task_dealloc(v195);
  swift_task_dealloc(v198);
  swift_task_dealloc(v202);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000370D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1000386FC;
  else
    v4 = sub_100037144;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100037144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  Album.tracks.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100037708;
  else
    v4 = sub_1000373C8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000373C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  ((void (*)(void))Playlist.tracks.getter)();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 520) = v4;
  v5 = v4(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 280);
  if (v5 == 1)
  {
    v7 = sub_10000FE2C(*(_QWORD *)(v0 + 280), &qword_1004B9E38);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 240);
    v10 = MusicItemCollection.hasNextBatch.getter(v8);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v0 + 528) = v11;
    v7 = v11(v6, v8);
    if ((v10 & 1) != 0)
    {
      v12 = swift_allocObject(*(_QWORD *)(v0 + 480), 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_1003C6240;
      v13 = static PartialMusicProperty<A>.tracks.getter();
      v14 = MusicRelationshipProperty.limit(_:)(10000);
      swift_release(v13);
      *(_QWORD *)(v12 + 32) = v14;
      specialized Array._endMutation()(v15);
      *(_QWORD *)(v0 + 536) = v12;
      v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
      *(_QWORD *)(v0 + 544) = v16;
      *v16 = v0;
      v16[1] = sub_100037B38;
      return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 312), v12, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
    }
  }
  v19 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 328);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  Playlist.tracks.getter(v7);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v22(v19, v20);
  v22(v18, v20);
  v23 = *(_QWORD *)(v0 + 432);
  v25 = *(_QWORD *)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 408);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 368);
  v28 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 352);
  v30 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 320);
  v35 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 256);
  v41 = *(_QWORD *)(v0 + 248);
  v42 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 216);
  v44 = *(_QWORD *)(v0 + 192);
  v45 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 120);
  v50 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 80);
  v53 = *(_QWORD *)(v0 + 72);
  v54 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100037708()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  v1 = *(_QWORD *)(v0 + 512);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_100039D34(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v57 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v60[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_1000393D0(v16, v17, v60);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_1000393D0(v20, v21, v60);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v26 = *(_QWORD *)(v0 + 432);
  v28 = *(_QWORD *)(v0 + 400);
  v27 = *(_QWORD *)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 392);
  v32 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 376);
  v34 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 336);
  v37 = *(_QWORD *)(v0 + 328);
  v38 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 312);
  v40 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 280);
  v42 = *(_QWORD *)(v0 + 272);
  v43 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 256);
  v45 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(v0 + 152);
  v52 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 120);
  v54 = *(_QWORD *)(v0 + 112);
  v55 = *(_QWORD *)(v0 + 104);
  v56 = *(_QWORD *)(v0 + 80);
  v58 = *(_QWORD *)(v0 + 72);
  v59 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100037B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100037F0C;
  else
    v4 = sub_100037BA8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100037BA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 232);
  Playlist.tracks.getter();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 560) = v7;
  v7(v2, v4);
  v8 = v1(v5, 1, v6);
  v9 = *(_QWORD *)(v0 + 272);
  if (v8 == 1)
  {
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, *(_QWORD *)(v0 + 128), &protocol witness table for Track);
    sub_10000FE2C(v9, &qword_1004B9E38);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 232));
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v10;
    v11 = sub_100004D8C(&qword_1004B9F08, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v10 = v0;
    v10[1] = sub_10003834C;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v11);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v14 = *(_QWORD *)(v0 + 328);
    v15 = *(_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 24);
    v13(*(_QWORD *)(v0 + 320), v15);
    v13(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v16, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    v20 = *(_QWORD *)(v0 + 432);
    v22 = *(_QWORD *)(v0 + 400);
    v21 = *(_QWORD *)(v0 + 408);
    v23 = *(_QWORD *)(v0 + 384);
    v24 = *(_QWORD *)(v0 + 392);
    v26 = *(_QWORD *)(v0 + 368);
    v25 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 352);
    v27 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 336);
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 320);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 272);
    v36 = *(_QWORD *)(v0 + 264);
    v37 = *(_QWORD *)(v0 + 256);
    v38 = *(_QWORD *)(v0 + 248);
    v39 = *(_QWORD *)(v0 + 224);
    v40 = *(_QWORD *)(v0 + 216);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 144);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = *(_QWORD *)(v0 + 112);
    v48 = *(_QWORD *)(v0 + 104);
    v49 = *(_QWORD *)(v0 + 80);
    v50 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100037F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
  v3(*(_QWORD *)(v0 + 320), v2);
  v3(v1, v2);
  v4 = *(_QWORD *)(v0 + 552);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v9 = type metadata accessor for Logger(0);
  sub_100039D34(v9, (uint64_t)static Logger.actions);
  v5(v6, v7, v8);
  swift_errorRetain(v4);
  v10 = swift_errorRetain(v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v15 = *(_QWORD *)(v0 + 352);
    v14 = *(_QWORD *)(v0 + 360);
    v60 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 32);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v63[0] = v18;
    *(_DWORD *)v17 = 136446466;
    v13(v15, v14, v16);
    v19 = (char *)String.init<A>(describing:)(v15, v16);
    v21 = v20;
    *(_QWORD *)(v17 + 4) = sub_1000393D0(v19, v20, v63);
    swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v14, v16);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v4;
    swift_errorRetain(v4);
    v22 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v23 = (char *)String.init<A>(describing:)(v0 + 16, v22);
    v25 = v24;
    *(_QWORD *)(v17 + 14) = sub_1000393D0(v23, v24, v63);
    swift_bridgeObjectRelease(v25);
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 344);
    v28 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v4);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v29 = *(_QWORD *)(v0 + 432);
  v31 = *(_QWORD *)(v0 + 400);
  v30 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 384);
  v33 = *(_QWORD *)(v0 + 392);
  v35 = *(_QWORD *)(v0 + 368);
  v34 = *(_QWORD *)(v0 + 376);
  v37 = *(_QWORD *)(v0 + 352);
  v36 = *(_QWORD *)(v0 + 360);
  v39 = *(_QWORD *)(v0 + 336);
  v40 = *(_QWORD *)(v0 + 328);
  v41 = *(_QWORD *)(v0 + 320);
  v42 = *(_QWORD *)(v0 + 312);
  v43 = *(_QWORD *)(v0 + 288);
  v44 = *(_QWORD *)(v0 + 280);
  v45 = *(_QWORD *)(v0 + 272);
  v46 = *(_QWORD *)(v0 + 264);
  v47 = *(_QWORD *)(v0 + 256);
  v48 = *(_QWORD *)(v0 + 248);
  v49 = *(_QWORD *)(v0 + 224);
  v50 = *(_QWORD *)(v0 + 216);
  v51 = *(_QWORD *)(v0 + 192);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(_QWORD *)(v0 + 176);
  v54 = *(_QWORD *)(v0 + 152);
  v55 = *(_QWORD *)(v0 + 144);
  v56 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 112);
  v58 = *(_QWORD *)(v0 + 104);
  v59 = *(_QWORD *)(v0 + 80);
  v61 = *(_QWORD *)(v0 + 72);
  v62 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003834C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100038B2C;
  else
    v3 = sub_1000383B0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000383B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 520))(v1, 1, v2) == 1)
  {
    sub_10000FE2C(v1, &qword_1004B9E38);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 32))(v5, v1, v2);
    static MusicItemCollection.+= infix(_:_:)(v4, v5, v6, &protocol witness table for Track);
    v3(v5, v2);
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v7;
    v8 = sub_100004D8C(&qword_1004B9F08, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v7 = v0;
    v7[1] = sub_10003834C;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v8);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 24);
    v10(*(_QWORD *)(v0 + 320), v12);
    v10(v11, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v13, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 376);
    v25 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 360);
    v26 = *(_QWORD *)(v0 + 336);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 320);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 192);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 104);
    v46 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000386FC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
  v1 = *(_QWORD *)(v0 + 472);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_100039D34(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v57 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v60[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_1000393D0(v16, v17, v60);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_1000393D0(v20, v21, v60);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v26 = *(_QWORD *)(v0 + 432);
  v28 = *(_QWORD *)(v0 + 400);
  v27 = *(_QWORD *)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 392);
  v32 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 376);
  v34 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 336);
  v37 = *(_QWORD *)(v0 + 328);
  v38 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 312);
  v40 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 280);
  v42 = *(_QWORD *)(v0 + 272);
  v43 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 256);
  v45 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(v0 + 152);
  v52 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 120);
  v54 = *(_QWORD *)(v0 + 112);
  v55 = *(_QWORD *)(v0 + 104);
  v56 = *(_QWORD *)(v0 + 80);
  v58 = *(_QWORD *)(v0 + 72);
  v59 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100038B2C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD))(v0 + 528))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  v1(v2, v4);
  v1(v3, v4);
  v5 = *(_QWORD *)(v0 + 576);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = type metadata accessor for Logger(0);
  sub_100039D34(v10, (uint64_t)static Logger.actions);
  v6(v7, v8, v9);
  swift_errorRetain(v5);
  v11 = swift_errorRetain(v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v16 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v64[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v14(v16, v15, v17);
    v20 = (char *)String.init<A>(describing:)(v16, v17);
    v22 = v21;
    *(_QWORD *)(v18 + 4) = sub_1000393D0(v20, v21, v64);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v15, v17);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v23 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v24 = (char *)String.init<A>(describing:)(v0 + 16, v23);
    v26 = v25;
    *(_QWORD *)(v18 + 14) = sub_1000393D0(v24, v25, v64);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v30 = *(_QWORD *)(v0 + 432);
  v32 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 408);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 376);
  v38 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 360);
  v40 = *(_QWORD *)(v0 + 336);
  v41 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 312);
  v44 = *(_QWORD *)(v0 + 288);
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 256);
  v49 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 152);
  v56 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 104);
  v60 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 72);
  v63 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100038F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_1000057B4(&qword_1004B99B0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004B9D88);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003902C, 0, 0);
}

uint64_t sub_10003902C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000FEB4(*(_QWORD *)(v0 + 96), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10002F60C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003C6C90;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000391FC, v19, v20);
  }
}

uint64_t sub_1000391FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_1000392CC, 0, 0);
}

uint64_t sub_1000392CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10002F6A8(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003931C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_10003932C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t static MPPropertySet.with(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100039380(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  uint64_t result;

  v6 = (char *)a4();
  v8 = v7;
  v9 = sub_1000393D0(v6, v7, a3);
  v10 = (_QWORD *)*a1;
  *(_QWORD *)*a1 = v9;
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10 + 1;
  return result;
}

char *sub_1000393D0(char *a1, char *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v12[3];
  void *ObjectType;

  v6 = sub_1000394A0(v12, 0, 0, 1, (uint64_t)a1, (unint64_t)a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000990C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000990C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000970C(v12);
  return v7;
}

char *sub_1000394A0(char **a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char *result;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          result = 0;
          *((_BYTE *)__dst + v10) = 0;
          *a1 = (char *)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_10003959C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = (char *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = (char *)_StringObject.sharedUTF8.getter(a5, a6);
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (char *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

char *sub_10003959C(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (char *)sub_100039630(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_1000396C8(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1000396C8((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

_QWORD *sub_100039630(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *result;
  char v7;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10020A228(v4, 0);
      result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v7 & 1) != 0)
        break;
      if (result == (_QWORD *)v4)
        return v5;
      __break(1u);
LABEL_9:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_1000396C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004B9F50);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_BYTE **sub_1000397B0(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t _s9MusicCore7ActionsO13AddToPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000014, 0x80000001003A74F0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10003992C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100039950@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t (*v55)();
  uint64_t v56;
  uint64_t result;
  unint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t (**v73)();
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a2;
  v66 = a8;
  v71 = a3;
  v72 = a6;
  v68 = a4;
  v69 = a5;
  v73 = a9;
  v67 = a12;
  v79 = a10;
  v80 = a7;
  v75 = *(_QWORD *)(a7 - 8);
  v76 = a11;
  v78 = *(_QWORD *)(v75 + 64);
  v13 = __chkstk_darwin(a1);
  v70 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v77 = (char *)&v60 - v15;
  v16 = type metadata accessor for MusicLibrary.AddAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004B9E28);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v74 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v60 - v28;
  static MusicLibraryAction<>.add.getter(v27);
  v64 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, v80, v16, a11, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v29, v20);
  v30 = *(unsigned __int8 *)(v21 + 80);
  v31 = (v30 + 16) & ~v30;
  v62 = v30 | 7;
  v65 = swift_allocObject(&unk_100469CB0, v31 + v22, v30 | 7);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v63 = v20;
  v32(v65 + v31, v26, v20);
  v32((uint64_t)v74, v29, v20);
  v33 = v75;
  v34 = v80;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v77, a1, v80);
  v35 = (v30 + 56) & ~v30;
  v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v33 + 80);
  v39 = (v37 + v38 + 72) & ~v38;
  v40 = v66;
  v41 = *(_QWORD *)(v66 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v61 = (v39 + v78 + v42) & ~v42;
  v43 = (char *)swift_allocObject(&unk_100469CD8, v61 + *(_QWORD *)(v41 + 64), v62 | v38 | v42);
  *((_QWORD *)v43 + 2) = v34;
  *((_QWORD *)v43 + 3) = v40;
  v44 = v76;
  *((_QWORD *)v43 + 4) = v79;
  *((_QWORD *)v43 + 5) = v44;
  v45 = &v43[v35];
  v46 = v67;
  *((_QWORD *)v43 + 6) = v67;
  v32((uint64_t)v45, v74, v63);
  sub_100033620(v68, (uint64_t)&v43[v36]);
  sub_10000FD10(v69, (uint64_t)&v43[v37], &qword_1004B9DF0);
  v47 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v48 = v80;
  v47(&v43[v39], v77, v80);
  v49 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v43[v61], v71, v40);
  v50 = v70;
  v47(v70, v64, v48);
  v51 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v52 = *(unsigned __int8 *)(v51 + 80);
  v53 = (v52 + 56) & ~v52;
  v54 = (*(_QWORD *)(v51 + 64) + v38 + v53) & ~v38;
  v55 = (unint64_t (*)())swift_allocObject(&unk_100469D00, v54 + v78, v38 | v52 | 7);
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v49;
  v56 = v76;
  *((_QWORD *)v55 + 4) = v79;
  *((_QWORD *)v55 + 5) = v56;
  *((_QWORD *)v55 + 6) = v46;
  sub_10000FD10(v72, (uint64_t)v55 + v53, &qword_1004B9D88);
  result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v55 + v54, v50, v48);
  v58 = v73;
  v59 = v65;
  *v73 = sub_100039DD0;
  v58[1] = (unint64_t (*)())v59;
  v58[2] = (unint64_t (*)())&unk_1004B9F60;
  v58[3] = (unint64_t (*)())v43;
  v58[4] = (unint64_t (*)())&unk_1004B9F70;
  v58[5] = v55;
  return result;
}

uint64_t sub_100039D34(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist()
{
  return &type metadata for Actions.AddToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist.Context()
{
  return &type metadata for Actions.AddToPlaylist.Context;
}

uint64_t sub_100039D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000057B4(&qword_1004B9E28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100039DD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9E28) - 8) + 80);
  return sub_100034D00(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100039E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_1000057B4(&qword_1004B9E28);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = (*(_QWORD *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v2 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v1 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_QWORD *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v3);
  sub_10000970C((_QWORD *)(v0 + v7));
  v14 = v0 + v8;
  if (*(_QWORD *)(v0 + v8 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v8);
    v15 = *(unsigned __int8 *)(v14 + 48);
    if (v15 != 255)
      sub_1000335FC(*(id *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), v15);
    if (*(_QWORD *)(v14 + 56))
      v13 = swift_release(*(_QWORD *)(v14 + 64));
  }
  v16 = (v10 + v8 + 72) & ~v10;
  v17 = (v20 + v12 + v16) & ~v12;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v0 + v16, v2, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v17, v1);
  return swift_deallocObject(v0, v17 + v19, v5 | v10 | v12 | 7);
}

uint64_t sub_100039F4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v3 = v0[2];
  v2 = v0[3];
  v18 = v0[4];
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9E28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v11 = (uint64_t)v0 + v5;
  v12 = (uint64_t)v0 + v6;
  v13 = (uint64_t)v0 + v7;
  v14 = (uint64_t)v0 + v9;
  v15 = (uint64_t)v0 + ((*(_QWORD *)(v8 + 64) + v10 + v9) & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_1004B9F5C);
  *(_QWORD *)(v1 + 16) = v16;
  *v16 = v1;
  v16[1] = sub_10002E8E0;
  return sub_100035404(v11, v12, v13, v14, v15, v3, v2, v18);
}

uint64_t sub_10003A058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10003A218()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1004B9F6C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10002F6EC;
  return sub_100038F80(v8, v9, v2, v3, v4);
}

uint64_t Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a7, a1, v12);
  v15 = (int *)type metadata accessor for Actions.Collaborate.Context(0);
  v16 = (_QWORD *)(a7 + v15[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = swift_allocObject(&unk_100469D40, 32, 7);
  v18 = v29;
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = (_QWORD *)(a7 + v15[6]);
  *v19 = &unk_1004B9F80;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v20((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v21 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v23 + *(_QWORD *)(v21 + 64) + v24) & ~v24;
  v26 = swift_allocObject(&unk_100469D68, v25 + v14, v22 | v24 | 7);
  sub_10002F244(v30, v26 + v23);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v26 + v25, (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v28 = (_QWORD *)(a7 + v15[7]);
  *v28 = &unk_1004B9F90;
  v28[1] = v26;
  return result;
}

uint64_t type metadata accessor for Actions.Collaborate.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1004BA038;
  if (!qword_1004BA038)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.Collaborate.Context);
  return result;
}

uint64_t sub_10003A4A0(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return sub_10003B474(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10003A4D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003A4FC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;

  v2 = *(void (**)(void))(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004B9F7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return ((uint64_t (*)(void (*)(void)))((char *)&dword_1004B9F78 + dword_1004B9F78))(v2);
}

uint64_t sub_10003A560(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_1000057B4(&qword_1004B99B0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004B9D88);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003A608, 0, 0);
}

uint64_t sub_10003A608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10002F5C4(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 96), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = sub_10002F60C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = Playlist.catalogID.getter(v8);
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = sub_100051FDC();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_100053464(inited);
    *(_QWORD *)(v0 + 152) = v15;
    *(_QWORD *)(v0 + 160) = v16;
    *(_WORD *)(v0 + 176) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10003A798, v20, v21);
  }
}

uint64_t sub_10003A798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 168));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_100053874(v9, v4, 5, 8, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10003A88C, 0, 0);
}

uint64_t sub_10003A88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10002F6A8(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003A8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_10003AAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1004B9F8C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002E8E0;
  return sub_10003A560(v7, v8);
}

int *static Actions.Collaborate.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *result;
  uint64_t (**v4)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;

  sub_10003ABC0(a1, a2);
  result = (int *)sub_1000057B4(&qword_1004B9FA8);
  *(_BYTE *)(a2 + result[13]) = 7;
  *(_QWORD *)(a2 + result[15]) = 0x4014000000000000;
  v4 = (uint64_t (**)(uint64_t))(a2 + result[14]);
  *v4 = sub_10003AC04;
  v4[1] = 0;
  v5 = (_QWORD *)(a2 + result[16]);
  *v5 = &unk_1004B9F98;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + result[17]);
  *v6 = &unk_1004B9FA0;
  v6[1] = 0;
  return result;
}

uint64_t sub_10003ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.Collaborate.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003AC04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.Collaborate.Context(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 20)))();
}

uint64_t sub_10003AC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch(sub_10003AC50, 0, 0);
}

uint64_t sub_10003AC50()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 24));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_10003ACB8;
  return v5();
}

uint64_t sub_10003ACB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10003AD00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10003AD18, 0, 0);
}

uint64_t sub_10003AD18()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_10003B488;
  return v5();
}

uint64_t Actions.Collaborate.Context.menuItemTitle.getter()
{
  char active;

  active = Playlist.hasActiveCollaboration.getter();
  return _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(active & 1);
}

uint64_t (*Actions.Collaborate.Context.menuItemImage.getter())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001003A7510;
  v3 = swift_allocObject(&unk_100469D90, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100469DB8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10003AF20;
}

uint64_t (*sub_10003AE5C())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001003A7510;
  v3 = swift_allocObject(&unk_100469E30, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100469E58, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10003B480;
}

uint64_t sub_10003AF20()
{
  uint64_t v0;

  return sub_10005D950(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10003AF28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10003AF4C()
{
  uint64_t v0;

  return sub_10005D980(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for Actions.Collaborate()
{
  return &type metadata for Actions.Collaborate;
}

uint64_t *_s11CollaborateO7ContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain(v12);
    swift_retain(v15);
  }
  swift_retain(v19);
  return v4;
}

uint64_t _s11CollaborateO7ContextVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t _s11CollaborateO7ContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  swift_release(v12);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003B2FC);
}

uint64_t sub_10003B2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s11CollaborateO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003B384);
}

uint64_t sub_10003B384(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10003B3FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10003B474(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static Actions.DeleteFromLibrary.action(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v4 = *a1;
  v5 = a1[7];
  v6 = (_OWORD *)swift_allocObject(&unk_100469E98, 80, 7);
  v7 = *(_OWORD *)(a1 + 1);
  v11 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 5);
  v8 = *((_OWORD *)a1 + 1);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v8;
  v9 = *((_OWORD *)a1 + 3);
  v6[3] = *((_OWORD *)a1 + 2);
  v6[4] = v9;
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v5;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_10003B5E8;
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1004BA078;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1004BA080;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v7, 2);
  swift_retain_n(v11, 2);
  swift_retain_n(v12, 2);
  return swift_retain_n(v5, 2);
}

uint64_t sub_10003B584(uint64_t (**a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*a1)();
  if (v4 == 1)
  {
    v5 = (*(uint64_t (**)(uint64_t))(a2 + 32))(result);
    v7 = v6;
    sub_100033EC4(v5, v6);
    if (v7 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_10003B5E8(uint64_t (**a1)(void))
{
  uint64_t v1;

  return sub_10003B584(a1, v1 + 16);
}

uint64_t sub_10003B5F0(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 48);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return v5();
}

uint64_t sub_10003B644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004BA0D8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_10003B76C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_10003B76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = sub_1000057B4(&qword_1004BA0D8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v14;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+DeleteFromLibrary.swift", 41, 2, 94, 0);
  __break(1u);
  return result;
}

uint64_t sub_10003B94C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v10 = a1[6];
  v9 = a1[7];
  v11 = (_QWORD *)swift_allocObject(&unk_10046A0D8, 80, 7);
  v11[2] = v4;
  v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v7;
  v11[8] = v10;
  v11[9] = v9;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_10003CD04;
  *(_QWORD *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1004BA078;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1004BA080;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v3, 2);
  swift_retain_n(v5, 2);
  swift_retain_n(v7, 2);
  return swift_retain_n(v9, 2);
}

uint64_t (*Actions.DeleteFromLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100469EC0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100469EE8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F080;
}

uint64_t (*sub_10003BAB0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A088, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_10046A0B0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F6E4;
}

uint64_t Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (**v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v81 = a7;
  v82 = a8;
  v76 = a4;
  v77 = a9;
  v72 = a3;
  v83 = a2;
  v63 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = __chkstk_darwin(a1);
  v75 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v71 = (char *)&v63 - v17;
  v18 = __chkstk_darwin(v16);
  v66 = (char *)&v63 - v19;
  v21 = v20;
  v74 = v20;
  __chkstk_darwin(v18);
  v23 = (char *)&v63 - v22;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v65 = a1;
  v80((char *)&v63 - v22, (uint64_t)a1, v24);
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = v25;
  v64 = v21 + 7;
  v28 = (v21 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v69 = v28 + 8;
  v70 = v26;
  v68 = v28;
  v29 = v25 | 7;
  v79 = v25 | 7;
  v30 = (_QWORD *)swift_allocObject(&unk_100469F10, v28 + 8, v25 | 7);
  v30[2] = a5;
  v30[3] = a6;
  v31 = v82;
  v30[4] = v81;
  v30[5] = v31;
  v30[6] = a10;
  v32 = v30;
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30;
  v78 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v78((char *)v30 + v26, v23, a5);
  *(_QWORD *)((char *)v32 + v28) = v83;
  v33 = v66;
  v80(v66, (uint64_t)a1, a5);
  v34 = a6;
  v35 = *(_QWORD *)(a6 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = *(_QWORD *)(v35 + 64);
  v67 = v27;
  v39 = (v38 + v27 + v37) & ~v27;
  v40 = v29 | v36;
  v41 = (v64 + v39) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject(&unk_100469F38, v41 + 8, v40);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = v34;
  v43 = v34;
  v45 = v81;
  v44 = v82;
  *((_QWORD *)v42 + 4) = v81;
  *((_QWORD *)v42 + 5) = v44;
  v46 = v63;
  *((_QWORD *)v42 + 6) = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v42[v37], v72, v43);
  v47 = v78;
  v78(&v42[v39], v33, a5);
  v48 = v83;
  *(_QWORD *)&v42[v41] = v83;
  v49 = v71;
  v50 = v65;
  v80(v71, (uint64_t)v65, a5);
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_100469F60, v69, v79);
  *((_QWORD *)v51 + 2) = a5;
  *((_QWORD *)v51 + 3) = v43;
  *((_QWORD *)v51 + 4) = v45;
  v52 = v82;
  *((_QWORD *)v51 + 5) = v82;
  v53 = (char *)v51 + v70;
  *((_QWORD *)v51 + 6) = v46;
  v47(v53, v49, a5);
  *(_QWORD *)((char *)v51 + v68) = v48;
  v54 = v75;
  v47(v75, v50, a5);
  v55 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 56) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v67 + v57) & ~v67;
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_100469F88, v58 + v74, v79 | v56);
  *((_QWORD *)v59 + 2) = a5;
  *((_QWORD *)v59 + 3) = v43;
  *((_QWORD *)v59 + 4) = v81;
  *((_QWORD *)v59 + 5) = v52;
  *((_QWORD *)v59 + 6) = v46;
  sub_10002F244(v76, (uint64_t)v59 + v57);
  v78((char *)v59 + v58, v54, a5);
  result = swift_retain_n(v83, 2);
  v61 = v77;
  v62 = v73;
  *v77 = sub_10003C578;
  v61[1] = v62;
  v61[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_1004BA090;
  v61[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42;
  v61[4] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10003C790;
  v61[5] = v51;
  v61[6] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_1004BA0A0;
  v61[7] = v59;
  return result;
}

uint64_t sub_10003BEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a6;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v8[16] = v9;
  v8[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003BF0C, 0, 0);
}

uint64_t sub_10003BF0C()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[10], v0[12]);
  v1 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10003BF88, v3, v4);
}

uint64_t sub_10003BF88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[17];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  swift_release(v0[18]);
  sub_1000F6664(v1, v6, v5, v4, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  v7 = *(int **)(v3 + 8);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[19] = v8;
  *v8 = v0;
  v8[1] = sub_10003C044;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v10)(v0 + 2, v0[13], v0[15]);
}

uint64_t sub_10003C044()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + 16);
  v2 = *(_QWORD *)(*v0 + 136);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  sub_10003499C(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10003C0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_1000057B4(&qword_1004B99B0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004B9D88);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003C154, 0, 0);
}

uint64_t sub_10003C154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10002F5C4(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10002F60C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10003C314, v19, v20);
  }
}

uint64_t sub_10003C314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 14, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_1000392CC, 0, 0);
}

uint64_t _s9MusicCore7ActionsO17DeleteFromLibraryO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003A7560);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10003C550()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_10003B644(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 40));
}

uint64_t sub_10003C5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v3 | v6 | 7;
  v9 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_10003C654()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 - 8);
  v10 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t)v0 + v8;
  v12 = (uint64_t)v0 + v10;
  v13 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1004BA08C);
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_10002E8E0;
  return sub_10003BEAC(v11, v12, v13, v2, v3, v4, v5, v6);
}

uint64_t sub_10003C724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 56) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10003C790()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_100044F34((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[4], v0[5]);
}

uint64_t sub_10003C7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10003C984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1004BA09C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10002F6EC;
  return sub_10003C0A8(v8, v9, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary()
{
  return &type metadata for Actions.DeleteFromLibrary;
}

uint64_t _s17DeleteFromLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s17DeleteFromLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s17DeleteFromLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

__n128 _s17DeleteFromLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17DeleteFromLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];
  swift_release(v7);
  return a1;
}

uint64_t _s17DeleteFromLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17DeleteFromLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary.Context()
{
  return &type metadata for Actions.DeleteFromLibrary.Context;
}

uint64_t sub_10003CCBC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10003CD08(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v19[-v12];
  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      v15 = 0x80000001003A79A0;
      v14 = 0xD000000000000010;
    }
    else
    {
      v14 = 0x442065766F6D6552;
      v15 = 0xEF64616F6C6E776FLL;
    }
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    v14 = 0xD000000000000013;
    v15 = 0x80000001003A7560;
LABEL_10:
    String.LocalizationValue.init(stringLiteral:)(v14, v15);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v17 = qword_1004F4630;
    static Locale.current.getter((id)qword_1004F4630);
    v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    return v16;
  }
  if (qword_1004B92F0 != -1)
    swift_once(&qword_1004B92F0, sub_10020C0C0);
  v16 = static String.cancelButtonTitle;
  swift_bridgeObjectRetain();
  return v16;
}

_UNKNOWN **static Actions.DeleteOrRemoveDownload.Choice.allCases.getter()
{
  return &off_1004660D8;
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F4465766F6D6572;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x6C65636E6163;
}

uint64_t sub_10003CF98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100047B40(*a1, *a2);
}

Swift::Int sub_10003CFA4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001003A6150;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10003D050(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001003A6150;
  v3 = 0xD000000000000011;
  if (*v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10003D0D8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001003A6150;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_10003D180@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10003D1AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE0064616F6C6E77;
  v4 = 0x80000001003A6150;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x6C65636E6163;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F4465766F6D6572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_10003D218(_QWORD *a1@<X8>)
{
  *a1 = &off_100466100;
}

uint64_t static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_100040268(a1, a2);
  result = swift_allocObject(&unk_10046A118, 32, 7);
  *(_QWORD *)(result + 16) = &unk_1004BA0E0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10003D2A0;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_1004BA0F8;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_1004BA0E8;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

unint64_t sub_10003D2A0(uint64_t (**a1)(void))
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v2 = sub_1000057B4(&qword_1004BA1C8);
  inited = swift_initStackObject(v2, &v8);
  *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
  *(_QWORD *)(inited + 32) = (*a1)();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = a1[4]();
  *(_QWORD *)(inited + 56) = v5;
  v6 = _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for ActionSupportedStatus);
  return v6;
}

uint64_t sub_10003D344(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[28] = a1;
  v2[29] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[30] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[31] = v5;
  v2[32] = v6;
  return swift_task_switch(sub_10003D3B0, v5, v6);
}

uint64_t sub_10003D3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  sub_100040268(*(_QWORD *)(v0 + 224), v0 + 16);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 264) = v2;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v0 + 16;
  *(_QWORD *)(v4 + 24) = v1;
  swift_bridgeObjectRetain();
  v5 = sub_10003DB50((void (*)(uint64_t *__return_ptr, char *))sub_1000410C8, v4, (uint64_t)&off_100466128);
  *(_QWORD *)(v0 + 272) = v5;
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_QWORD *)(v0 + 176) = v3;
  *(_QWORD *)(v0 + 184) = v2;
  *(_BYTE *)(v0 + 192) = 1;
  *(_QWORD *)(v0 + 200) = v5;
  *(_QWORD *)(v0 + 208) = 0;
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  sub_1000096A0((_QWORD *)(v0 + 96), v6);
  v8 = *(int **)(v7 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  *(_QWORD *)(v0 + 280) = v9;
  *v9 = v0;
  v9[1] = sub_10003D4BC;
  return v11(v0 + 160, v6, v7);
}

uint64_t sub_10003D4BC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 280));
  return swift_task_switch(sub_10003D508, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_10003D508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_release(v3);
  sub_1000410E4((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003D570@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _OWORD v29[7];
  _OWORD v30[2];

  v8 = sub_1000057B4(&qword_1004BA188);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *a1;
  if (*a1)
  {
    if (v11 == 1)
    {
      v28 = 0x80000001003A6150;
      v12 = 0xD000000000000011;
    }
    else
    {
      v28 = 0xE600000000000000;
      v12 = 0x6C65636E6163;
    }
  }
  else
  {
    v28 = 0xEE0064616F6C6E77;
    v12 = 0x6F4465766F6D6572;
  }
  v27 = v12;
  v26 = sub_10003CD08(*(_BYTE *)(a2 + 136), v11);
  v25 = v13;
  sub_100040268(a2, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 161) & ~v14;
  v16 = swift_allocObject(&unk_10046A470, v15 + v10, v14 | 7);
  v17 = v29[4];
  *(_OWORD *)(v16 + 104) = v29[5];
  v18 = v30[0];
  *(_OWORD *)(v16 + 120) = v29[6];
  *(_OWORD *)(v16 + 136) = v18;
  *(_OWORD *)(v16 + 145) = *(_OWORD *)((char *)v30 + 9);
  v19 = v29[0];
  *(_OWORD *)(v16 + 40) = v29[1];
  v20 = v29[3];
  *(_OWORD *)(v16 + 56) = v29[2];
  *(_OWORD *)(v16 + 72) = v20;
  *(_OWORD *)(v16 + 88) = v17;
  *(_BYTE *)(v16 + 16) = v11;
  *(_OWORD *)(v16 + 24) = v19;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v22 = v28;
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v22;
  v23 = v25;
  *(_QWORD *)(a4 + 16) = v26;
  *(_QWORD *)(a4 + 24) = v23;
  *(_BYTE *)(a4 + 32) = v11 < 2;
  *(_QWORD *)(a4 + 40) = &unk_1004BA1B0;
  *(_QWORD *)(a4 + 48) = v16;
  return result;
}

uint64_t sub_10003D764(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = a3;
  *(_BYTE *)(v3 + 153) = a1;
  v4 = sub_1000057B4(&qword_1004BA188);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 184) = v5;
  v6 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 192) = v6;
  *(_QWORD *)(v3 + 200) = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003D7F4, 0, 0);
}

uint64_t sub_10003D7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_BYTE *)(v0 + 153);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_100040268(v7, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 177) & ~v10;
  v12 = swift_allocObject(&unk_10046A498, v11 + v4, v10 | 7);
  v13 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v12 + 136) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v12 + 152) = v14;
  *(_OWORD *)(v12 + 161) = *(_OWORD *)(v0 + 137);
  v15 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v0 + 32);
  v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v12 + 88) = v16;
  *(_OWORD *)(v12 + 104) = v13;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = v8;
  *(_OWORD *)(v12 + 40) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v11, v2, v5);
  v17 = sub_1001CC790(v1, (uint64_t)&unk_1004BA1C0, v12);
  swift_release(v17);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003D938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = a5;
  *(_QWORD *)(v6 + 24) = a6;
  *(_BYTE *)(v6 + 49) = a4;
  return swift_task_switch(sub_10003D954, 0, 0);
}

uint64_t sub_10003D954()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v3)();
  int *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t (*v8)(void);

  if (*(_BYTE *)(v0 + 49))
  {
    if (*(_BYTE *)(v0 + 49) != 1)
    {
      *(_BYTE *)(v0 + 48) = 2;
      v6 = sub_1000057B4(&qword_1004BA188);
      CheckedContinuation.resume(returning:)(v0 + 48, v6);
      v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    v1 = *(int **)(*(_QWORD *)(v0 + 16) + 16);
    v8 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    v3 = sub_10003DAE4;
  }
  else
  {
    v4 = *(int **)(*(_QWORD *)(v0 + 16) + 48);
    v8 = (uint64_t (*)(void))((char *)v4 + *v4);
    v2 = (_QWORD *)swift_task_alloc(v4[1]);
    *(_QWORD *)(v0 + 32) = v2;
    v3 = sub_10003DA24;
  }
  *v2 = v0;
  v2[1] = v3;
  v5 = v8;
  return v5();
}

uint64_t sub_10003DA24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_10003DA90, 0, 0);
}

uint64_t sub_10003DA90()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v0 + 49);
  v1 = sub_1000057B4(&qword_1004BA188);
  CheckedContinuation.resume(returning:)(v0 + 48, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003DAE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_100041378, 0, 0);
}

_QWORD *sub_10003DB50(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  __int128 v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  _QWORD *v32;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_100097310(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (char *)(a3 + 32);
    while (1)
    {
      v9 = *v8++;
      v25 = v9;
      a1(&v26, &v25);
      if (v4)
        break;
      v4 = 0;
      v11 = v26;
      v10 = v27;
      v13 = v28;
      v12 = v29;
      v14 = v30;
      v15 = v31;
      v32 = v6;
      v17 = v6[2];
      v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        v23 = v31;
        v22 = v27;
        v19 = v29;
        v21 = v30;
        sub_100097310((char *)(v16 > 1), v17 + 1, 1);
        v14 = v21;
        v12 = v19;
        v10 = v22;
        v15 = v23;
        v6 = v32;
      }
      v6[2] = v17 + 1;
      v18 = &v6[7 * v17];
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v13;
      v18[7] = v12;
      *((_BYTE *)v18 + 64) = v14;
      *(_OWORD *)(v18 + 9) = v15;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

uint64_t sub_10003DC90(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10003DCA8, 0, 0);
}

uint64_t sub_10003DCA8()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 64);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_10003ACB8;
  return v4();
}

uint64_t sub_10003DD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_100040268(a1, a2);
  result = swift_allocObject(&unk_10046A420, 32, 7);
  *(_QWORD *)(result + 16) = &unk_1004BA0E0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10003D2A0;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_1004BA178;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_1004BA0E8;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t (*v43)();
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)();
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)();
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  void (*v87)(uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (**v100)();
  uint64_t (*v101)();
  uint64_t (*v102)();
  uint64_t (*v103)();
  uint64_t (*v104)();
  uint64_t result;
  uint64_t (*v106)();
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)();
  char *v126;
  uint64_t (*v127)();
  char *v128;
  uint64_t (*v129)();
  uint64_t v130;
  uint64_t (**v131)();
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t (*v142)();
  __int128 v143;
  uint64_t v144;
  uint64_t v145;

  v137 = a4;
  v138 = a8;
  v130 = a2;
  v131 = a9;
  v139 = a1;
  v141 = a10;
  v142 = a3;
  v113 = type metadata accessor for Playlist(0);
  v108 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v112 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Album(0);
  v111 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v128 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000057B4(&qword_1004B9D88);
  v122 = *(_QWORD *)(v17 - 8);
  v123 = *(_QWORD *)(v122 + 64);
  v18 = __chkstk_darwin(v17);
  v121 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 - 8);
  v21 = __chkstk_darwin(v18);
  v109 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v132 = (char *)&v107 - v24;
  v25 = __chkstk_darwin(v23);
  v126 = (char *)&v107 - v26;
  v27 = __chkstk_darwin(v25);
  v120 = (char *)&v107 - v28;
  v29 = __chkstk_darwin(v27);
  v118 = (char *)&v107 - v30;
  v31 = __chkstk_darwin(v29);
  v116 = (char *)&v107 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v107 - v34;
  v125 = (uint64_t (*)())((char *)&v107 - v34);
  v37 = v36;
  v117 = v36;
  __chkstk_darwin(v33);
  v39 = (char *)&v107 - v38;
  v140 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v140((char *)&v107 - v38, a1, a5);
  v119 = *(unsigned __int8 *)(v20 + 80);
  v40 = ((v119 + 64) & ~v119) + v37;
  v41 = (v119 + 64) & ~v119;
  v133 = (_QWORD *)v41;
  v134 = v119 | 7;
  v42 = (uint64_t (*)())swift_allocObject(&unk_10046A140, v40, v119 | 7);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = a6;
  v114 = a6;
  *((_QWORD *)v42 + 4) = a7;
  *((_QWORD *)v42 + 5) = a8;
  v43 = v142;
  *((_QWORD *)v42 + 6) = v141;
  *((_QWORD *)v42 + 7) = v43;
  v129 = v42;
  v110 = v20;
  v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v45 = v39;
  v46 = a5;
  v44((char *)v42 + v41, v45, a5);
  v136 = v44;
  v47 = v35;
  v48 = v139;
  v49 = v140;
  v140(v47, v139, v46);
  v115 = v40;
  v50 = v134;
  v51 = (uint64_t (*)())swift_allocObject(&unk_10046A168, v40, v134);
  v52 = v46;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = a6;
  v53 = a7;
  v135 = a7;
  v54 = v138;
  *((_QWORD *)v51 + 4) = a7;
  *((_QWORD *)v51 + 5) = v54;
  v55 = v133;
  v56 = (char *)v133 + (_QWORD)v51;
  v57 = v141;
  *((_QWORD *)v51 + 6) = v141;
  *((_QWORD *)v51 + 7) = v43;
  v127 = v51;
  v58 = v52;
  ((void (*)(char *, uint64_t (*)()))v44)(v56, v125);
  v59 = v116;
  v49(v116, v48, v58);
  v60 = (char *)swift_allocObject(&unk_10046A190, v40, v50);
  v61 = v58;
  *((_QWORD *)v60 + 2) = v58;
  v62 = v114;
  *((_QWORD *)v60 + 3) = v114;
  *((_QWORD *)v60 + 4) = v53;
  *((_QWORD *)v60 + 5) = v54;
  v63 = v54;
  v64 = (char *)v55 + (_QWORD)v60;
  v65 = v57;
  *((_QWORD *)v60 + 6) = v57;
  v125 = (uint64_t (*)())v60;
  v66 = v142;
  *((_QWORD *)v60 + 7) = v142;
  v67 = v136;
  v136(v64, v59, v61);
  v68 = v118;
  v69 = v139;
  v49(v118, v139, v61);
  v70 = (_QWORD *)swift_allocObject(&unk_10046A1B8, v115, v50);
  v70[2] = v61;
  v70[3] = v62;
  v71 = v135;
  v70[4] = v135;
  v70[5] = v63;
  v72 = (char *)v133 + (_QWORD)v70;
  v70[6] = v65;
  v70[7] = v66;
  v133 = v70;
  v67(v72, v68, v61);
  v73 = v121;
  sub_10000FEB4(v137, v121, &qword_1004B9D88);
  v74 = v120;
  v140(v120, v69, v61);
  v75 = *(unsigned __int8 *)(v122 + 80);
  v76 = (v75 + 56) & ~v75;
  v77 = (v123 + v119 + v76) & ~v119;
  v78 = (uint64_t (*)())swift_allocObject(&unk_10046A1E0, v77 + v117, v134 | v75);
  *((_QWORD *)v78 + 2) = v61;
  *((_QWORD *)v78 + 3) = v62;
  v79 = v138;
  *((_QWORD *)v78 + 4) = v71;
  *((_QWORD *)v78 + 5) = v79;
  v80 = v141;
  *((_QWORD *)v78 + 6) = v141;
  sub_10002F244(v73, (uint64_t)v78 + v76);
  v67((char *)v78 + v77, v74, v61);
  v144 = v62;
  v145 = v80;
  v81 = sub_1000407CC(&v143);
  v82 = *(_QWORD *)(v62 - 8);
  v83 = v130;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 16))(v81, v130, v62);
  swift_retain_n(v142, 3);
  v84 = v139;
  v85 = sub_10003EB3C(v139, v61);
  v142 = v86;
  sub_10000FE2C(v137, &qword_1004B9D88);
  v87 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v88 = v128;
  v87(v83, v62);
  v89 = v126;
  v140(v126, v84, v61);
  v90 = v124;
  if (swift_dynamicCast(v88, v89, v61, v124, 6))
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v88, v90);
    v91 = v132;
    v136(v132, (char *)v84, v61);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v91, v61);
    v92 = 1;
  }
  else
  {
    v93 = v85;
    v94 = v132;
    v95 = v136;
    v136(v132, (char *)v84, v61);
    v96 = v109;
    v95(v109, v94, v61);
    v97 = v112;
    v98 = v61;
    v99 = v113;
    if (swift_dynamicCast(v112, v96, v98, v113, 6))
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v99);
      v92 = 1;
    }
    else
    {
      v92 = 0;
    }
    v85 = v93;
  }
  v100 = v131;
  v101 = v129;
  *v131 = sub_100040344;
  v100[1] = v101;
  v102 = v127;
  v100[2] = (uint64_t (*)())&unk_1004BA108;
  v100[3] = v102;
  v103 = v125;
  v100[4] = sub_100040400;
  v100[5] = v103;
  v104 = (uint64_t (*)())v133;
  v100[6] = (uint64_t (*)())&unk_1004BA118;
  v100[7] = v104;
  v100[8] = (uint64_t (*)())&unk_1004BA128;
  v100[9] = v78;
  result = sub_100033620(&v143, (uint64_t)(v100 + 10));
  v106 = v142;
  v100[15] = (uint64_t (*)())v85;
  v100[16] = v106;
  *((_BYTE *)v100 + 136) = v92;
  return result;
}

uint64_t sub_10003E484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004BA0D8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_10003B76C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10003E5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10002F6EC;
  return MusicLibrary.remove<A>(_:)(a2, a3, a5);
}

uint64_t sub_10003E61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004BA180);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_10004505C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10003E744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10002F6EC;
  return MusicLibrary.removeDownload<A>(_:)(a2, a3, a5);
}

uint64_t sub_10003E7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  v6 = sub_1000057B4(&qword_1004B99B0);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004B9D88);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003E860, 0, 0);
}

uint64_t sub_10003E860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000FEB4(*(_QWORD *)(v0 + 72), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10002F60C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10003EA1C, v19, v20);
  }
}

uint64_t sub_10003EA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 30, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10003EAEC, 0, 0);
}

uint64_t sub_10003EAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10002F6A8(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003EB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  char *v124;
  char *v125;
  void (*v126)(char *, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;

  v159 = a1;
  v131 = type metadata accessor for Genre(0);
  v128 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v130 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Composer(0);
  v129 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v133 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Artist(0);
  v132 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v136 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for TVEpisode(0);
  v135 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v139 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for TVSeason(0);
  v138 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for TVShow(0);
  v141 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for MusicMovie(0);
  v146 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v148 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for Song(0);
  v147 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v152 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Playlist(0);
  v150 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v155 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v153 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v158 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v125 - v22;
  v24 = type metadata accessor for Album(0);
  v156 = *(char **)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v125 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v127 = (char *)&v125 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v125 - v32;
  v157 = v34;
  v126 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v126((char *)&v125 - v32, v159, a2);
  if (swift_dynamicCast(v27, v33, a2, v24, 0))
  {
    v159 = a2;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003A7900);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    v35 = v17;
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v36 = qword_1004F4630;
    v37 = (id)qword_1004F4630;
    v38 = v158;
    static Locale.current.getter(v37);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v35);
    (*((void (**)(char *, uint64_t))v156 + 1))(v27, v24);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v33, v159);
    return v39;
  }
  v40 = v33;
  if (swift_dynamicCast(v14, v33, a2, v12, 0))
  {
    v41 = v12;
    v42 = v14;
    v43 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003A78A0);
    v44 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v45 = qword_1004F4630;
    v46 = (id)qword_1004F4630;
    v47 = v158;
    static Locale.current.getter(v46);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v45, v47, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v17);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v42, v41);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v157 + 8))(v40, a2);
    return v39;
  }
  v48 = v154;
  v49 = v21;
  if (swift_dynamicCast(v155, v33, a2, v154, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003A7840);
    v50 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v51 = qword_1004F4630;
    v52 = (id)qword_1004F4630;
    v53 = v158;
    static Locale.current.getter(v52);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v51, v53, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v155, v48);
    goto LABEL_17;
  }
  v54 = v151;
  if (swift_dynamicCast(v152, v33, a2, v151, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x80000001003A75A0);
    v55 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v56 = qword_1004F4630;
    v57 = (id)qword_1004F4630;
    v58 = v158;
    static Locale.current.getter(v57);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v152, v54);
    goto LABEL_17;
  }
  v60 = v17;
  if (swift_dynamicCast(v148, v33, a2, v149, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003A77E0);
    v61 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v23, v17);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v62 = qword_1004F4630;
    v63 = (id)qword_1004F4630;
    v64 = v158;
    static Locale.current.getter(v63);
    v65 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v62, v64, 0, 0, 256);
    v66 = *(void (**)(char *, uint64_t))(v61 + 8);
    v39 = v65;
    v66(v23, v17);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v149);
    goto LABEL_17;
  }
  v156 = v23;
  v67 = v144;
  v68 = v145;
  if (swift_dynamicCast(v144, v33, a2, v145, 0))
  {
    (*(void (**)(char *, uint64_t))(v141 + 8))(v67, v68);
LABEL_27:
    v72 = v156;
    (*(void (**)(char *, uint64_t))(v157 + 8))(v40, a2);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000001003A7780);
    v73 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v72, v60);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v74 = qword_1004F4630;
    v75 = (id)qword_1004F4630;
    v76 = v158;
    static Locale.current.getter(v75);
    v39 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v74, v76, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v60);
    return v39;
  }
  v69 = v60;
  v70 = v142;
  v71 = v143;
  if (swift_dynamicCast(v142, v40, a2, v143, 0))
  {
    (*(void (**)(char *, uint64_t))(v138 + 8))(v70, v71);
    v60 = v69;
    goto LABEL_27;
  }
  v77 = swift_dynamicCast(v139, v40, a2, v140, 0);
  v78 = v156;
  if (v77)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000056, 0x80000001003A7720);
    v79 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v80 = qword_1004F4630;
    v81 = (id)qword_1004F4630;
    v82 = v158;
    static Locale.current.getter(v81);
    v83 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v80, v82, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39 = v83;
    v84(v78, v69);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v139, v140);
    goto LABEL_17;
  }
  v85 = v69;
  if (swift_dynamicCast(v136, v40, a2, v137, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000001003A76C0);
    v86 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v87 = qword_1004F4630;
    v88 = (id)qword_1004F4630;
    v89 = v158;
    static Locale.current.getter(v88);
    v90 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v87, v89, 0, 0, 256);
    v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    v39 = v90;
    v91(v78, v69);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v136, v137);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v133, v40, a2, v134, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003A7660);
    v92 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v93 = qword_1004F4630;
    v94 = (id)qword_1004F4630;
    v95 = v158;
    static Locale.current.getter(v94);
    v96 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v93, v95, 0, 0, 256);
    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
    v39 = v96;
    v97(v78, v69);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v133, v134);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v130, v40, a2, v131, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003A7600);
    v98 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1004B8A10 != -1)
      swift_once(&qword_1004B8A10, sub_10002B2B8);
    v99 = qword_1004F4630;
    v100 = (id)qword_1004F4630;
    v101 = v158;
    static Locale.current.getter(v100);
    v102 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v99, v101, 0, 0, 256);
    v103 = *(void (**)(char *, uint64_t))(v98 + 8);
    v39 = v102;
    v103(v78, v69);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v131);
    goto LABEL_17;
  }
  v156 = v40;
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v104 = type metadata accessor for Logger(0);
  sub_100039D34(v104, (uint64_t)static Logger.actions);
  v105 = v127;
  v106 = v126;
  v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v126)(v127, v159, a2);
  v108 = Logger.logObject.getter(v107);
  v109 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v108, v109))
  {
    v110 = swift_slowAlloc(12, -1);
    v159 = swift_slowAlloc(32, -1);
    v160 = v159;
    *(_DWORD *)v110 = 136315138;
    v111 = (void (*)(char *, char *, uint64_t))v106;
    v112 = v125;
    v111(v125, v105, a2);
    v113 = (char *)String.init<A>(describing:)(v112, a2);
    v114 = v105;
    v116 = v115;
    *(_QWORD *)(v110 + 4) = sub_1000393D0(v113, v115, &v160);
    swift_bridgeObjectRelease(v116);
    v117 = *(void (**)(char *, uint64_t))(v157 + 8);
    v117(v114, a2);
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "DeleteOrRemoveDownload: unhandled item type=%s", (uint8_t *)v110, 0xCu);
    v118 = v159;
    swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v118, -1, -1);
    swift_slowDealloc(v110, -1, -1);
  }
  else
  {
    v119 = v105;
    v117 = *(void (**)(char *, uint64_t))(v157 + 8);
    v117(v119, a2);
  }

  v120 = v156;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x80000001003A75A0);
  v121 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v85);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v122 = qword_1004F4630;
  v123 = (id)qword_1004F4630;
  v124 = v158;
  static Locale.current.getter(v123);
  v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v122, v124, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v23, v85);
  v117(v120, a2);
  return v39;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x80E265766F6D6552, 0xA9000000000000A6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.DeleteOrRemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A208, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_10046A230, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F080;
}

uint64_t (*sub_10003FDE8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A3D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_10046A3F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F6E4;
}

double sub_10003FE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _OWORD v27[12];
  uint64_t v28;

  v8 = sub_1000057B4(&qword_1004BA188);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_10000FEB4(a4, (uint64_t)v27, &qword_1004BA190);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 248) & ~v15;
  v17 = swift_allocObject(&unk_10046A448, v16 + v10, v15 | 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  v18 = v27[11];
  *(_OWORD *)(v17 + 208) = v27[10];
  *(_OWORD *)(v17 + 224) = v18;
  *(_QWORD *)(v17 + 240) = v28;
  v19 = v27[7];
  *(_OWORD *)(v17 + 144) = v27[6];
  *(_OWORD *)(v17 + 160) = v19;
  v20 = v27[9];
  *(_OWORD *)(v17 + 176) = v27[8];
  *(_OWORD *)(v17 + 192) = v20;
  v21 = v27[3];
  *(_OWORD *)(v17 + 80) = v27[2];
  *(_OWORD *)(v17 + 96) = v21;
  v22 = v27[5];
  *(_OWORD *)(v17 + 112) = v27[4];
  *(_OWORD *)(v17 + 128) = v22;
  v23 = v27[1];
  *(_OWORD *)(v17 + 48) = v27[0];
  *(_OWORD *)(v17 + 64) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(a3);
  v24 = sub_1001CC790((uint64_t)v13, (uint64_t)&unk_1004BA1A0, v17);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_10004002C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10002E8E0;
  return v12(a6, a7);
}

uint64_t sub_10004009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1000400B8, 0, 0);
}

uint64_t sub_1000400B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_100040168;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000003ALL, 0x80000001003A7960, sub_100040F38, v2, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_100040168()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000401EC, 0, 0);
  v5 = *(_BYTE **)(v3 + 16);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  *v5 = *(_BYTE *)(v3 + 72);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000401EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466070, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100040268(uint64_t a1, uint64_t a2)
{
  _s22DeleteOrRemoveDownloadO7ContextVwcp(a2, a1);
  return a2;
}

uint64_t sub_10004029C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000402C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1004BA0F4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004BA0F0 + dword_1004BA0F0))(a1, a2, v7, v6);
}

uint64_t sub_100040344()
{
  return sub_10004040C((uint64_t (*)(_QWORD, uint64_t))sub_10003E484);
}

uint64_t sub_100040354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BA104);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002F6EC;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10002F6EC;
  return MusicLibrary.remove<A>(_:)(v5, v2, v3);
}

uint64_t sub_100040400()
{
  return sub_10004040C((uint64_t (*)(_QWORD, uint64_t))sub_10003E61C);
}

uint64_t sub_10004040C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 56), v1 + ((v2 + 64) & ~v2));
}

uint64_t sub_100040438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000404A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BA114);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002F6EC;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10002F6EC;
  return MusicLibrary.removeDownload<A>(_:)(v5, v2, v3);
}

uint64_t sub_10004054C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10004070C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1004BA124);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10002F6EC;
  return sub_10003E7B4(v8, v9, v2, v3, v4);
}

_QWORD *sub_1000407CC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100040808()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100040830()
{
  unint64_t result;

  result = qword_1004BA130;
  if (!qword_1004BA130)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.DeleteOrRemoveDownload.Choice, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    atomic_store(result, (unint64_t *)&qword_1004BA130);
  }
  return result;
}

unint64_t sub_100040878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA138;
  if (!qword_1004BA138)
  {
    v1 = sub_100009788(&qword_1004BA140);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1004BA138);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload()
{
  return &type metadata for Actions.DeleteOrRemoveDownload;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  sub_10000970C(a1 + 10);
  return swift_bridgeObjectRelease(a1[16]);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v13 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v13;
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v14;
  v5 = *(_QWORD *)(a2 + 72);
  v15 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 72) = v5;
  v6 = a1 + 80;
  v7 = a2 + 80;
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v4);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v5);
  v10(v6, v7, v9);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_100040AF0((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

_QWORD *sub_100040AF0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 _s22DeleteOrRemoveDownloadO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  sub_10000970C((_QWORD *)(a1 + 80));
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v10 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Context()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Context;
}

uint64_t _s22DeleteOrRemoveDownloadO6ChoiceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100040E38 + 4 * byte_1003C9545[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100040E6C + 4 * asc_1003C9540[v4]))();
}

uint64_t sub_100040E6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040E74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100040E7CLL);
  return result;
}

uint64_t sub_100040E88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100040E90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100040E94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040E9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Choice()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t sub_100040EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1004BA0F4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004BA0F0 + dword_1004BA0F0))(a1, a2, v7, v6);
}

double sub_100040F38(uint64_t a1)
{
  uint64_t *v1;

  return sub_10003FE64(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100040F44()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1000057B4(&qword_1004BA188);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 248) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 5));
  swift_release(*((_QWORD *)v0 + 7));
  swift_release(*((_QWORD *)v0 + 9));
  swift_release(*((_QWORD *)v0 + 11));
  swift_release(*((_QWORD *)v0 + 13));
  swift_release(*((_QWORD *)v0 + 15));
  sub_10000970C((_QWORD *)v0 + 16);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 22));
  swift_release(*((_QWORD *)v0 + 25));
  swift_release(*((_QWORD *)v0 + 28));
  v7 = swift_release(*((_QWORD *)v0 + 30));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100041014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BA188) - 8) + 80);
  v3 = *(int **)(v0 + 32);
  v4 = v0 + 48;
  v5 = v0 + ((v2 + 248) & ~v2);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BA19C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002F6EC;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v7 = (_QWORD *)swift_task_alloc(v3[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10002E8E0;
  return v9(v4, v5);
}

uint64_t sub_1000410C8@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10003D570(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_1000410E4(_QWORD *a1)
{
  _s22DeleteOrRemoveDownloadO7ContextVwxx(a1);
  return a1;
}

uint64_t sub_100041110()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000057B4(&qword_1004BA188);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 161) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 4));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  sub_10000970C((_QWORD *)v0 + 13);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 19));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000411B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BA188) - 8) + 80);
  v3 = v0 + 24;
  v4 = v0 + ((v2 + 161) & ~v2);
  v5 = *(_BYTE *)(v0 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BA1AC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002E8E0;
  return sub_10003D764(v5, v3, v4);
}

uint64_t sub_100041238()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000057B4(&qword_1004BA188);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 177) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  swift_release(*((_QWORD *)v0 + 14));
  sub_10000970C((_QWORD *)v0 + 15);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 21));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000412E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BA188) - 8) + 80);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = v0 + 40;
  v5 = v0 + ((v2 + 177) & ~v2);
  v6 = swift_task_alloc(dword_1004BA1BC);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10002F6EC;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 49) = v3;
  return swift_task_switch(sub_10003D954, 0, 0);
}

double static Actions.Download.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10002F788;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1004BA1D0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1004BA1D8;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t (**a8)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t (*v58)();
  uint64_t v59;
  uint64_t result;
  unint64_t (**v61)();
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  __int128 *v67;
  char *v68;
  uint64_t v69;
  unint64_t (**v70)();
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v77 = a6;
  v69 = a4;
  v70 = a8;
  v66 = a2;
  v67 = a3;
  v72 = *(_QWORD *)(a5 - 8);
  v73 = a7;
  v74 = *(_QWORD *)(v72 + 64);
  v11 = __chkstk_darwin(a1);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v78 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  v71 = (char *)&v62 - v15;
  v16 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000057B4(&qword_1004BA1E0);
  v64 = *(_QWORD *)(v79 - 8);
  v20 = *(_QWORD *)(v64 + 64);
  v21 = __chkstk_darwin(v79);
  v76 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v62 - v23;
  v62 = (char *)&v62 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v62 - v26;
  static MusicLibraryAction<>.download.getter(v25);
  v75 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, a5, v16, a7, &protocol witness table for MusicLibrary.DownloadAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v28 = v72;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v29 = a5;
  v65(v71, a1, a5);
  v30 = v64;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v24, v27, v79);
  v31 = *(unsigned __int8 *)(v28 + 80);
  v32 = (v31 + 40) & ~v31;
  v33 = *(unsigned __int8 *)(v30 + 80);
  v34 = v30;
  v35 = v74;
  v36 = (v74 + v32 + v33) & ~v33;
  v63 = v31 | v33 | 7;
  v37 = (unint64_t (*)())swift_allocObject(&unk_10046A550, v36 + v20, v63);
  v38 = v29;
  *((_QWORD *)v37 + 2) = v29;
  v39 = v77;
  v40 = v73;
  *((_QWORD *)v37 + 3) = v77;
  *((_QWORD *)v37 + 4) = v40;
  v41 = (char *)v37 + v32;
  v72 = *(_QWORD *)(v72 + 32);
  v42 = v38;
  ((void (*)(char *, char *))v72)(v41, v71);
  v43 = (char *)v37 + v36;
  v44 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v45 = v79;
  v44(v43, v62, v79);
  v44(v76, v27, v45);
  v65(v78, v75, v42);
  v46 = (v33 + 80) & ~v33;
  v47 = (v20 + v31 + v46) & ~v31;
  v48 = (v35 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (unint64_t (*)())swift_allocObject(&unk_10046A578, v48 + 8, v63);
  *((_QWORD *)v49 + 2) = v42;
  *((_QWORD *)v49 + 3) = v39;
  v50 = v73;
  *((_QWORD *)v49 + 4) = v73;
  sub_100033620(v67, (uint64_t)v49 + 40);
  v44((char *)v49 + v46, v76, v79);
  v51 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(char *, char *, uint64_t))v72)((char *)v49 + v47, v78, v42);
  *(_QWORD *)((char *)v49 + v48) = v66;
  v52 = v68;
  v51(v68, v75, v42);
  v53 = (uint64_t (*)(char *, char *, uint64_t))v51;
  v54 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (v55 + 40) & ~v55;
  v57 = (*(_QWORD *)(v54 + 64) + v31 + v56) & ~v31;
  v58 = (unint64_t (*)())swift_allocObject(&unk_10046A5A0, v57 + v74, v31 | v55 | 7);
  v59 = v77;
  *((_QWORD *)v58 + 2) = v42;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v50;
  sub_10002F244(v69, (uint64_t)v58 + v56);
  result = v53((char *)v58 + v57, v52, v42);
  v61 = v70;
  *v70 = sub_100041B68;
  v61[1] = v37;
  v61[2] = (unint64_t (*)())&unk_1004BA1F0;
  v61[3] = v49;
  v61[4] = (unint64_t (*)())&unk_1004BA200;
  v61[5] = v58;
  return result;
}

unint64_t sub_1000417F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v35 = a2;
  v36 = a1;
  v4 = sub_1000057B4(&qword_1004BA268);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000057B4(&qword_1004BD6F0);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4(&qword_1004BD700);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, a3);
  v21 = swift_dynamicCast(v13, v16, a3, v17, 6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, v17);
    v26 = &qword_1004BD700;
    v27 = (uint64_t)v13;
    goto LABEL_5;
  }
  v23 = v9;
  v22(v13, 0, 1, v17);
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v13, v17);
  Playlist.entries.getter(v24);
  v25 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v26 = &qword_1004BA268;
    v27 = (uint64_t)v6;
LABEL_5:
    sub_10000FE2C(v27, v26);
    return sub_100041BE0();
  }
  v29 = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v6, v7);
  v30 = sub_1000446F4();
  dispatch thunk of Collection.startIndex.getter(v7);
  dispatch thunk of Collection.endIndex.getter(v37, v7, v30);
  v32 = v37[0];
  v31 = v37[1];
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v31 == v32)
    return 0xD000000000000011;
  return sub_100041BE0();
}

uint64_t sub_100041AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1000057B4(&qword_1004BA1E0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_100041B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BA1E0) - 8) + 80);
  return sub_1000417F8(v0 + v3, v0 + ((v3 + v4 + v5) & ~v5), v1);
}

uint64_t sub_100041BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41[2];

  v1 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v37 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v37 - v9;
  v11 = sub_1000057B4(&qword_1004BA1E0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v39 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v37 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v40 = v0;
  v19((char *)&v37 - v17, v0, v11);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v18, v1);
    v21 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v21(v8, v10, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v8, v1) != enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v21(v5, v10, v1);
      v22 = String.init<A>(describing:)(v5, v1);
      v23 = *(void (**)(char *, uint64_t))(v2 + 8);
      v23(v10, v1);
      v23(v8, v1);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v24 = type metadata accessor for Logger(0);
  sub_100039D34(v24, (uint64_t)static Logger.actions);
  v25 = v39;
  v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v39, v40, v11);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v41[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v31 = v38;
    v19(v38, (uint64_t)v25, v11);
    v32 = (char *)String.init<A>(describing:)(v31, v11);
    v34 = v33;
    *(_QWORD *)(v29 + 4) = sub_1000393D0(v32, v33, v41);
    swift_bridgeObjectRelease(v34);
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v25, v11);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unknown status=%s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v25, v11);
  }

  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(v40, v41, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v22 = v41[0];
  v35(v18, v11);
  return v22;
}

uint64_t sub_100041FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  v9 = type metadata accessor for Locale(0);
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v7[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[28] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[29] = swift_task_alloc(v12);
  v7[30] = swift_task_alloc(v12);
  v13 = *(_QWORD *)(a5 - 8);
  v7[31] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[32] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[33] = swift_task_alloc(v15);
  v7[34] = swift_task_alloc(v15);
  v16 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v7[35] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[36] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[37] = swift_task_alloc(v18);
  v7[38] = swift_task_alloc(v18);
  v7[39] = swift_task_alloc(v18);
  v7[40] = swift_task_alloc(v18);
  v19 = sub_1000057B4(&qword_1004BA1E0);
  v7[41] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[42] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[43] = swift_task_alloc(v21);
  v7[44] = swift_task_alloc(v21);
  v7[45] = swift_task_alloc(v21);
  return swift_task_switch(sub_100042120, 0, 0);
}

uint64_t sub_100042120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unsigned __int8 v58;
  void *v59;
  id v60;
  NSString v61;
  unsigned __int8 v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 160), v2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v6 = *(_QWORD *)(v0 + 360);
    v8 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 288);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 96))(v6, *(_QWORD *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v6, v9);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v11(v8, v7, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v8, v9) == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v12 = *(_QWORD *)(v0 + 152);
      v13 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 368) = v13;
      *(_QWORD *)(v13 + 16) = v12;
      v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 376) = v14;
      *v14 = v0;
      v14[1] = sub_1000429B4;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 440, 0, 0, 0xD00000000000001DLL, 0x80000001003A7AB0, sub_1000444A0, v13, &type metadata for Bool);
    }
    else
    {
      if (qword_1004B8A30 != -1)
        swift_once(&qword_1004B8A30, sub_1000A6660);
      v33 = *(_QWORD *)(v0 + 320);
      v34 = *(_QWORD *)(v0 + 304);
      v35 = *(_QWORD *)(v0 + 280);
      v36 = type metadata accessor for Logger(0);
      sub_100039D34(v36, (uint64_t)static Logger.actions);
      v37 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v34, v33, v35);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter();
      v40 = os_log_type_enabled(v38, v39);
      v41 = *(_QWORD *)(v0 + 320);
      v42 = *(_QWORD *)(v0 + 304);
      if (v40)
      {
        v43 = *(_QWORD *)(v0 + 296);
        v101 = *(_QWORD *)(v0 + 288);
        v44 = *(_QWORD *)(v0 + 280);
        v45 = swift_slowAlloc(12, -1);
        v46 = swift_slowAlloc(32, -1);
        v104 = v46;
        *(_DWORD *)v45 = 136315138;
        v11(v43, v42, v44);
        v47 = (char *)String.init<A>(describing:)(v43, v44);
        v49 = v48;
        *(_QWORD *)(v45 + 4) = sub_1000393D0(v47, v48, &v104);
        swift_bridgeObjectRelease(v49);
        v50 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
        v50(v42, v44);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Couldn't download for reason: %s", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v45, -1, -1);

      }
      else
      {
        v44 = *(_QWORD *)(v0 + 280);
        v64 = *(_QWORD *)(v0 + 288);

        v50 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v50(v42, v44);
      }
      v50(v41, v44);
      v50(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
      v65 = *(_QWORD *)(v0 + 352);
      v66 = *(_QWORD *)(v0 + 344);
      v68 = *(_QWORD *)(v0 + 312);
      v67 = *(_QWORD *)(v0 + 320);
      v70 = *(_QWORD *)(v0 + 296);
      v69 = *(_QWORD *)(v0 + 304);
      v72 = *(_QWORD *)(v0 + 264);
      v71 = *(_QWORD *)(v0 + 272);
      v73 = *(_QWORD *)(v0 + 240);
      v98 = *(_QWORD *)(v0 + 232);
      v102 = *(_QWORD *)(v0 + 208);
      swift_task_dealloc(*(_QWORD *)(v0 + 360));
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v98);
      swift_task_dealloc(v102);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if (v5 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    if (qword_1004B8A30 != -1)
      swift_once(&qword_1004B8A30, sub_1000A6660);
    v16 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = type metadata accessor for Logger(0);
    sub_100039D34(v19, (uint64_t)static Logger.actions);
    v20 = v4(v16, v18, v17);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 352);
    if (v23)
    {
      v25 = *(_QWORD *)(v0 + 344);
      v100 = *(_QWORD *)(v0 + 336);
      v26 = *(_QWORD *)(v0 + 328);
      v27 = swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v104 = v28;
      *(_DWORD *)v27 = 136315138;
      v4(v25, v24, v26);
      v29 = (char *)String.init<A>(describing:)(v25, v26);
      v31 = v30;
      *(_QWORD *)(v27 + 4) = sub_1000393D0(v29, v30, &v104);
      swift_bridgeObjectRelease(v31);
      v32 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v32(v24, v26);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unknown status=%s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 8);
      v32(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
    }

    v32(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 328));
  }
  v51 = *(_QWORD *)(v0 + 272);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v53(v51, *(_QWORD *)(v0 + 168), v52);
  v54 = sub_1000057B4(&qword_1004BA238);
  if ((swift_dynamicCast(v0 + 112, v51, v52, v54, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_10000FE2C(v0 + 112, &qword_1004BA240);
    goto LABEL_21;
  }
  sub_100033620((__int128 *)(v0 + 112), v0 + 72);
  v56 = *(_QWORD *)(v0 + 96);
  v55 = *(_QWORD *)(v0 + 104);
  sub_1000096A0((_QWORD *)(v0 + 72), v56);
  if (!sub_10010C98C(v56, v55))
    goto LABEL_19;
  v57 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v58 = objc_msgSend(v57, "prefersSpatialDownloads");

  if ((v58 & 1) != 0
    || (v59 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v59,
        v60 = objc_msgSend(v59, "standardUserDefaults"),
        v61 = String._bridgeToObjectiveC()(),
        v62 = objc_msgSend(v60, "BOOLForKey:", v61),
        v61,
        v60,
        (v62 & 1) != 0))
  {
LABEL_19:
    sub_10000970C((_QWORD *)(v0 + 72));
LABEL_21:
    v63 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v63;
    *v63 = v0;
    v63[1] = sub_1000431A0;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v74 = *(_QWORD *)(v0 + 232);
  v75 = *(_QWORD *)(v0 + 240);
  v76 = *(_QWORD *)(v0 + 216);
  v77 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x80000001003A7A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v74, v75, v76);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v78 = *(_QWORD *)(v0 + 248);
  v95 = *(_QWORD *)(v0 + 264);
  v96 = *(_QWORD *)(v0 + 256);
  v80 = *(_QWORD *)(v0 + 232);
  v79 = *(_QWORD *)(v0 + 240);
  v82 = *(_QWORD *)(v0 + 216);
  v81 = *(_QWORD *)(v0 + 224);
  v83 = *(_QWORD *)(v0 + 208);
  v84 = *(_QWORD *)(v0 + 168);
  v97 = *(_QWORD *)(v0 + 176);
  v99 = *(_QWORD *)(v0 + 200);
  v85 = qword_1004F4630;
  v86 = (id)qword_1004F4630;
  v103 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v86);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v80, 0, 0, v85, v83, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v87;
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v82);
  v53(v95, v84, v103);
  v88 = *(unsigned __int8 *)(v78 + 80);
  v89 = (v88 + 48) & ~v88;
  v90 = swift_allocObject(&unk_10046A740, v89 + v96, v88 | 7);
  *(_QWORD *)(v0 + 408) = v90;
  *(_OWORD *)(v90 + 16) = v103;
  *(_QWORD *)(v90 + 32) = v99;
  *(_QWORD *)(v90 + 40) = v97;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v78 + 32))(v90 + v89, v95, v103);
  v91 = type metadata accessor for MainActor(0);
  v92 = swift_retain(v97);
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v92);
  v93 = dispatch thunk of Actor.unownedExecutor.getter(v91, &protocol witness table for MainActor);
  return swift_task_switch(sub_100042F00, v93, v94);
}

uint64_t sub_1000429B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100042A10, 0, 0);
}

uint64_t sub_100042A10()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  NSString v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;

  v1 = *(unsigned __int8 *)(v0 + 440);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100039D34(v2, (uint64_t)static Logger.actions);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109120;
    *(_DWORD *)(v6 + 4) = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Cellular data enablement: %{BOOL}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (!v1)
  {
    v22 = *(_QWORD *)(v0 + 352);
    v23 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD *)(v0 + 296);
    v26 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 264);
    v28 = *(_QWORD *)(v0 + 272);
    v30 = *(_QWORD *)(v0 + 240);
    v57 = *(_QWORD *)(v0 + 232);
    v59 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v12(v10, *(_QWORD *)(v0 + 168), v11);
  v13 = sub_1000057B4(&qword_1004BA238);
  if ((swift_dynamicCast(v0 + 112, v10, v11, v13, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_10000FE2C(v0 + 112, &qword_1004BA240);
    goto LABEL_13;
  }
  sub_100033620((__int128 *)(v0 + 112), v0 + 72);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 104);
  sub_1000096A0((_QWORD *)(v0 + 72), v14);
  if (!sub_10010C98C(v14, v15))
    goto LABEL_10;
  v16 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v17 = objc_msgSend(v16, "prefersSpatialDownloads");

  if ((v17 & 1) != 0
    || (v18 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v18,
        v19 = objc_msgSend(v18, "standardUserDefaults"),
        v20 = String._bridgeToObjectiveC()(),
        v21 = objc_msgSend(v19, "BOOLForKey:", v20),
        v20,
        v19,
        (v21 & 1) != 0))
  {
LABEL_10:
    sub_10000970C((_QWORD *)(v0 + 72));
LABEL_13:
    v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v32;
    *v32 = v0;
    v32[1] = sub_1000431A0;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v33 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 240);
  v35 = *(_QWORD *)(v0 + 216);
  v36 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x80000001003A7A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v37 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 256);
  v39 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 240);
  v41 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 208);
  v43 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 200);
  v44 = qword_1004F4630;
  v45 = (id)qword_1004F4630;
  v60 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v45);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, v44, v42, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v46;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  v12(v54, v43, v60);
  v47 = *(unsigned __int8 *)(v37 + 80);
  v48 = (v47 + 48) & ~v47;
  v49 = swift_allocObject(&unk_10046A740, v48 + v55, v47 | 7);
  *(_QWORD *)(v0 + 408) = v49;
  *(_OWORD *)(v49 + 16) = v60;
  *(_QWORD *)(v49 + 32) = v58;
  *(_QWORD *)(v49 + 40) = v56;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v37 + 32))(v49 + v48, v54, v60);
  v50 = type metadata accessor for MainActor(0);
  v51 = swift_retain(v56);
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v51);
  v52 = dispatch thunk of Actor.unownedExecutor.getter(v50, &protocol witness table for MainActor);
  return swift_task_switch(sub_100042F00, v52, v53);
}

uint64_t sub_100042F00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[51];
  v3 = v0[49];
  v2 = v0[50];
  swift_release(v0[52]);
  sub_1000FDDF4(v3, v2, (uint64_t)&unk_1004BA250, v1, (uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v2);
  swift_release(v1);
  return swift_task_switch(sub_100042F78, 0, 0);
}

uint64_t sub_100042F78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  sub_1000096A0(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 424) = v5;
  *v5 = v0;
  v5[1] = sub_100043000;
  return v7(v0 + 16, v2, v3);
}

uint64_t sub_100043000()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_100043054, 0, 0);
}

uint64_t sub_100043054()
{
  uint64_t v0;
  id v1;
  Class isa;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 384), "standardUserDefaults");
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

  sub_10003499C((_QWORD *)(v0 + 16));
  sub_10000970C((_QWORD *)(v0 + 72));
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000431A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(*v0 + 432);
  v2 = *v0;
  swift_task_dealloc(v1);
  v3 = *(_QWORD *)(v2 + 352);
  v4 = *(_QWORD *)(v2 + 344);
  v6 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 320);
  v8 = *(_QWORD *)(v2 + 296);
  v7 = *(_QWORD *)(v2 + 304);
  v9 = *(_QWORD *)(v2 + 272);
  v11 = *(_QWORD *)(v2 + 264);
  v12 = *(_QWORD *)(v2 + 240);
  v13 = *(_QWORD *)(v2 + 232);
  v14 = *(_QWORD *)(v2 + 208);
  swift_task_dealloc(*(_QWORD *)(v2 + 360));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004329C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1000057B4(&qword_1004BA1E0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 80) & ~v4;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + *(_QWORD *)(v3 + 64) + v7) & ~v7;
  v9 = v4 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10000970C((_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v9);
}

uint64_t sub_100043368()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004BA1E0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)(v0 + 5);
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v8;
  v12 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_1004BA1EC);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10002E8E0;
  return sub_100041FB8(v9, v10, v11, v12, v2, v3, v4);
}

double sub_10004343C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21[2];

  v4 = sub_1000057B4(&qword_1004BE670);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1000444A8(a2, (uint64_t)v21);
  type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_10046A768, v16 + 40, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v7, v4);
  sub_100033620(v21, v17 + v16);
  v18 = sub_1000E6084((uint64_t)v10, (uint64_t)&unk_1004BA260, v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1000435BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_1000057B4(&qword_1004BE670);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[13] = v8;
  v5[14] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[15] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[16] = v11;
  v5[17] = v12;
  return swift_task_switch(sub_100043658, v11, v12);
}

uint64_t sub_100043658()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t **v18;
  uint64_t (*v20)(uint64_t *, uint64_t, uint64_t);

  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100039D34(v1, (uint64_t)static Logger.actions);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will present cellular data enablement alert", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[13];
  v6 = v0[14];
  v8 = v0[11];
  v9 = v0[12];
  v11 = v0[9];
  v10 = (_QWORD *)v0[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v11, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_10046A790, v13 + v7, v12 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v6, v8);
  sub_1000FE198((uint64_t)sub_10004468C, v14, v0 + 2);
  swift_release(v14);
  v15 = v10[3];
  v16 = v10[4];
  sub_1000096A0(v10, v15);
  v17 = *(int **)(v16 + 8);
  v20 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v17 + *v17);
  v18 = (uint64_t **)swift_task_alloc(v17[1]);
  v0[18] = (uint64_t)v18;
  *v18 = v0;
  v18[1] = (uint64_t *)sub_100043810;
  return v20(v0 + 2, v15, v16);
}

uint64_t sub_100043810()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_10004385C, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10004385C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  sub_10003499C((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000438A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  *(_QWORD *)(v5 + 24) = v9;
  *v9 = v5;
  v9[1] = sub_100043910;
  return MusicLibrary.download<A>(_:)(a3, a4, a5);
}

uint64_t sub_100043910()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10004397C, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10004397C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v15;

  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for Logger(0);
  sub_100039D34(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 32);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v11 = (char *)String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v8 + 4) = sub_1000393D0(v11, v12, &v15);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Download: perform failed: %{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 32));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100043B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100043BEC, 0, 0);
}

uint64_t sub_100043BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10002F5C4(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10002F60C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100043DA0, v19, v20);
  }
}

uint64_t sub_100043DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 12, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10003EAEC, 0, 0);
}

uint64_t sub_100043E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_100044030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BA1FC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100043B40(v7, v8, v2, v3);
}

uint64_t Actions.Download.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.Download.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A5C8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x80000001003A79C0;
  v1 = swift_allocObject(&unk_10046A5F0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x80000001003A79C0;
  return sub_10002F080;
}

uint64_t (*sub_1000442C8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A6F0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x80000001003A79C0;
  v1 = swift_allocObject(&unk_10046A718, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x80000001003A79C0;
  return sub_10002F6E4;
}

uint64_t sub_10004434C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.Download()
{
  return &type metadata for Actions.Download;
}

ValueMetadata *type metadata accessor for Actions.Download.Context()
{
  return &type metadata for Actions.Download.Context;
}

uint64_t sub_100044390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000443FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 48) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BA24C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002F6EC;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_100043910;
  return MusicLibrary.download<A>(_:)(v5, v2, v3);
}

double sub_1000444A0(uint64_t a1)
{
  uint64_t v1;

  return sub_10004343C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000444A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000444EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_1000057B4(&qword_1004BE670);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10000970C((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_100044580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004BE670) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_1004BA25C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10002E8E0;
  return sub_1000435BC(a1, v6, v7, v8, v9);
}

uint64_t sub_100044628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000057B4(&qword_1004BE670);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004468C(char a1)
{
  uint64_t v2;
  char v4;

  sub_1000057B4(&qword_1004BE670);
  v4 = a1;
  v2 = sub_1000057B4(&qword_1004BE670);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

unint64_t sub_1000446F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BD720;
  if (!qword_1004BD720)
  {
    v1 = sub_100009788(&qword_1004BD6F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1004BD720);
  }
  return result;
}

uint64_t NSUserDefaults.ValueTransformer.transform.getter(uint64_t a1, uint64_t a2)
{
  swift_retain(a2);
  return a1;
}

uint64_t NSUserDefaults.ValueTransformer.transform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.color.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a4);
  return a3;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.radius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.init(canEditPlaylist:presentEditPlaylistView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = swift_allocObject(&unk_10046A7D0, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  return a1;
}

uint64_t sub_100044890(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000448FC, v5, v6);
}

uint64_t sub_1000448FC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100044934()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1004BA274);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1004BA270 + dword_1004BA270))(v2, v3);
}

double static Actions.EditPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 25;
  *(_QWORD *)(a5 + 40) = sub_10002F788;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_1004BA280;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_1004BA288;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain(a2);
  *(_QWORD *)&result = swift_retain(a4).n128_u64[0];
  return result;
}

uint64_t sub_100044A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100033DF0;
  return v6();
}

uint64_t sub_100044A74()
{
  uint64_t v0;

  return sub_10003B474(*(uint64_t (**)(void))(v0 + 8));
}

double sub_100044A84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 25;
  *(_QWORD *)(a2 + 40) = sub_10002F788;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_1004BA280;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_1004BA288;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain(v3);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.EditPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.EditPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A7F8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_10046A820, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10002F080;
}

uint64_t (*sub_100044CD0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A918, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_10046A940, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10002F6E4;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist()
{
  return &type metadata for Actions.EditPlaylist;
}

uint64_t _s12EditPlaylistO7ContextVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t _s12EditPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *_s12EditPlaylistO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12EditPlaylistO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist.Context()
{
  return &type metadata for Actions.EditPlaylist.Context;
}

uint64_t sub_100044F04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004BA180);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_10004505C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_10004505C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_1000057B4(&qword_1004BA180);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
    {
      v15 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
      {
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        v15 = 0xD000000000000015;
      }
      else
      {
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
        {
          v15 = 0x6E776F6420746F4ELL;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v15;
        }
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
        {
          v15 = 0x61685320656D6F48;
        }
        else
        {
          v15 = 0x206E776F6E6B6E55;
          v16(v6, v2);
        }
      }
      v16(v8, v2);
    }
    return v15;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+RemoveDownload.swift", 38, 2, 109, 0);
  __break(1u);
  return result;
}

double static Actions.RemoveDownload.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  v6 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 56) = v2;
  *(_BYTE *)(a2 + 64) = 40;
  *(_QWORD *)(a2 + 72) = sub_1000453E4;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1004BA2C0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1004BA2C8;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1000453E4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(uint64_t))a1;
  result = (*(uint64_t (**)(void))(a1 + 16))();
  if (v3 == 1)
  {
    v4 = v1(result);
    v6 = v5;
    sub_100033EC4(v4, v5);
    if (v6 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_10004544C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002F6EC;
  return v6();
}

uint64_t sub_1000454A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10002E8E0;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t Actions.RemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x442065766F6D6552, 0xEF64616F6C6E776FLL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046A980, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_10046A9A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F080;
}

uint64_t (*sub_100045700())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046AB48, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_10046AB70, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10002F6E4;
}

uint64_t Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t result;
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;

  v67 = a6;
  v64 = a3;
  v65 = a7;
  v69 = a2;
  v11 = *(_QWORD *)(a4 - 8);
  v12 = __chkstk_darwin(a1);
  v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v59 = (char *)&v54 - v15;
  v16 = __chkstk_darwin(v14);
  v58 = (char *)&v54 - v17;
  v19 = v18;
  v60 = v18;
  __chkstk_darwin(v16);
  v21 = (char *)&v54 - v20;
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v68((char *)&v54 - v20, a1, v22);
  v61 = *(unsigned __int8 *)(v11 + 80);
  v23 = (v61 + 40) & ~v61;
  v66 = v61 | 7;
  v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  v56 = v24;
  v57 = v24 + 8;
  v26 = (_QWORD *)swift_allocObject(&unk_10046A9D0, v24 + 8, v61 | 7);
  v26[2] = a4;
  v26[3] = a5;
  v27 = a5;
  v54 = a5;
  v26[4] = a6;
  v28 = v26;
  v62 = (uint64_t (*)())v26;
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v29((char *)v26 + v23, v21, a4);
  v30 = v29;
  v55 = (void (*)(char *, uint64_t, uint64_t))v29;
  v31 = v68;
  v32 = v69;
  *(_QWORD *)((char *)v28 + v24) = v69;
  v33 = v58;
  v31(v58, a1, a4);
  v34 = v25;
  v35 = v66;
  v36 = (uint64_t (*)())swift_allocObject(&unk_10046A9F8, v34, v66);
  *((_QWORD *)v36 + 2) = a4;
  *((_QWORD *)v36 + 3) = v27;
  v37 = v67;
  *((_QWORD *)v36 + 4) = v67;
  v30((char *)v36 + v23, v33, a4);
  v38 = v56;
  *(_QWORD *)((char *)v36 + v56) = v32;
  v39 = v59;
  v40 = a1;
  v68(v59, a1, a4);
  v41 = (uint64_t (*)())swift_allocObject(&unk_10046AA20, v57, v35);
  v42 = v54;
  *((_QWORD *)v41 + 2) = a4;
  *((_QWORD *)v41 + 3) = v42;
  *((_QWORD *)v41 + 4) = v37;
  v43 = v55;
  v55((char *)v41 + v23, (uint64_t)v39, a4);
  v44 = v69;
  *(_QWORD *)((char *)v41 + v38) = v69;
  v45 = v63;
  v43(v63, v40, a4);
  v46 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v47 = *(unsigned __int8 *)(v46 + 80);
  v48 = (v47 + 40) & ~v47;
  v49 = (*(_QWORD *)(v46 + 64) + v61 + v48) & ~v61;
  v50 = (uint64_t (*)())swift_allocObject(&unk_10046AA48, v49 + v60, v66 | v47);
  *((_QWORD *)v50 + 2) = a4;
  *((_QWORD *)v50 + 3) = v42;
  *((_QWORD *)v50 + 4) = v67;
  sub_10002F244(v64, (uint64_t)v50 + v48);
  v43((char *)v50 + v49, (uint64_t)v45, a4);
  result = swift_retain_n(v44, 2);
  v52 = v65;
  v53 = v62;
  *v65 = sub_100045E70;
  v52[1] = v53;
  v52[2] = (uint64_t (*)())sub_100045EA8;
  v52[3] = v36;
  v52[4] = (uint64_t (*)())&unk_1004BA2D8;
  v52[5] = v41;
  v52[6] = (uint64_t (*)())&unk_1004BA2E8;
  v52[7] = v50;
  return result;
}

uint64_t sub_100045A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_task_alloc(dword_1004BA324);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10002F6EC;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_10002E8E0;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t sub_100045B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100045BC4, 0, 0);
}

uint64_t sub_100045BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10002F5C4(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10002F60C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100045D78, v19, v20);
  }
}

uint64_t sub_100045D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 29, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10003EAEC, 0, 0);
}

uint64_t sub_100045E48()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100045E70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_10003B644((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t sub_100045EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100044F34(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_100045EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100045F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v5;
  v7 = *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_1004BA2D4);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10002E8E0;
  return sub_100045A80(v6, v7, v2, v3);
}

uint64_t sub_100045FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000461A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BA2E4);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100045B18(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload()
{
  return &type metadata for Actions.RemoveDownload;
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload.Context()
{
  return &type metadata for Actions.RemoveDownload.Context;
}

double static Actions.RemoveFromPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 41;
  *(_QWORD *)(a2 + 56) = sub_10002F788;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1004BA328;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1004BA330;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t (*Actions.RemoveFromPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046ABB0, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_10046ABD8, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10002F080;
}

uint64_t (*sub_100046398())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046AD50, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_10046AD78, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10002F6E4;
}

uint64_t Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t (**v48)();
  char *v49;
  uint64_t v50;

  v46 = a3;
  v47 = a4;
  v42 = a2;
  v48 = a5;
  v49 = a1;
  v43 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v43 - 8);
  v50 = *(_QWORD *)(v6 + 64);
  v7 = __chkstk_darwin(v43);
  v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - v9;
  v40 = (char *)&v39 - v9;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v39 - v15, a2, v11);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v17 | 7;
  v44 = swift_allocObject(&unk_10046AC00, v18 + v13, v17 | 7);
  v20 = v44 + v18;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v21(v20, v16, v11);
  v22 = v10;
  v23 = v43;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v49, v43);
  v21((uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v11);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = (v50 + v17 + v25) & ~v17;
  v27 = swift_allocObject(&unk_10046AC28, v26 + v13, v19 | v24);
  *(_QWORD *)(v27 + 16) = v46;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v29 = v23;
  v28(v27 + v25, v40, v23);
  v21(v27 + v26, v41, v11);
  v30 = v45;
  v28((uint64_t)v45, v49, v29);
  v31 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 16) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v24 + v33) & ~v24;
  v35 = swift_allocObject(&unk_10046AC50, v34 + v50, v24 | v32 | 7);
  sub_10002F244(v47, v35 + v33);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v35 + v34, v30, v29);
  v37 = v48;
  v38 = v44;
  *v48 = sub_100047174;
  v37[1] = (unint64_t (*)())v38;
  v37[2] = (unint64_t (*)())&unk_1004BA340;
  v37[3] = (unint64_t (*)())v27;
  v37[4] = (unint64_t (*)())&unk_1004BA350;
  v37[5] = (unint64_t (*)())v35;
  return result;
}

unint64_t sub_1000466AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v0 = type metadata accessor for Playlist.EditableComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4((uint64_t *)&unk_1004BDAE0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_10000FE2C((uint64_t)v7, (uint64_t *)&unk_1004BDAE0);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v8 = sub_100047578();
    v9 = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v8);
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    v10(v7, v0);
    if ((v9 & 1) != 0)
      return 0;
  }
  return 0xD00000000000001ALL;
}

uint64_t sub_1000467EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[3] = a2;
  v3[4] = a3;
  v6 = type metadata accessor for Playlist(0);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v3[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v3[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[9] = v9;
  v3[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove(_:from:)[1]);
  v3[11] = v10;
  *v10 = v3;
  v10[1] = sub_1000468A8;
  return MusicLibrary.remove(_:from:)(a2, a3);
}

uint64_t sub_1000468A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10004692C, 0, 0);
  v5 = *(_QWORD *)(v3 + 56);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10004692C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  os_log_type_t type;
  NSObject *log;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v37 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = type metadata accessor for Logger(0);
  sub_100039D34(v9, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v37, v7, v6);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  if (v13)
  {
    log = v11;
    v21 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(96, -1);
    v39 = v38;
    *(_DWORD *)v21 = 136446722;
    v22 = (char *)Playlist.Entry.description.getter();
    type = v12;
    v24 = v23;
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v22, v23, &v39);
    swift_bridgeObjectRelease(v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = (char *)Playlist.description.getter(v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_1000393D0(v26, v27, &v39);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v20);
    *(_WORD *)(v21 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v14;
    swift_errorRetain(v14);
    v29 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v30 = (char *)String.init<A>(describing:)(v0 + 16, v29);
    v32 = v31;
    *(_QWORD *)(v21 + 24) = sub_1000393D0(v30, v31, &v39);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    swift_errorRelease(v14);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v20);
    swift_errorRelease(v14);
    swift_errorRelease(v14);

  }
  v33 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100046BF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_1000057B4(&qword_1004B99B0);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000057B4(&qword_1004B9D88);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100046C9C, 0, 0);
}

uint64_t sub_100046C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10002F5C4(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 120), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = sub_10002F60C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    v9 = Playlist.Entry.catalogID.getter(v8);
    *(_QWORD *)(v0 + 152) = v10;
    *(_QWORD *)(v0 + 160) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = Playlist.Entry.metricsContentType.getter();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003C6C90;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 168) = sub_100053464(inited);
    *(_QWORD *)(v0 + 176) = v15;
    *(_QWORD *)(v0 + 184) = v16;
    *(_WORD *)(v0 + 200) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_100046E40, v20, v21);
  }
}

uint64_t sub_100046E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 192));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_100053874(v9, v4, 5, 31, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_100046F34, 0, 0);
}

uint64_t sub_100046F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10002F6A8(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO18RemoveFromPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003A7B60);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000470F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100047114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100047174()
{
  type metadata accessor for Playlist(0);
  return sub_1000466AC();
}

uint64_t sub_1000471A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10004725C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_1004BA33C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10002E8E0;
  return sub_1000467EC(v7, v8, v9);
}

uint64_t sub_1000472F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_1000474C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BA34C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100046BF4(v7, v8);
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist()
{
  return &type metadata for Actions.RemoveFromPlaylist;
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist.Context()
{
  return &type metadata for Actions.RemoveFromPlaylist.Context;
}

unint64_t sub_100047578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA388;
  if (!qword_1004BA388)
  {
    v1 = type metadata accessor for Playlist.EditableComponents(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.EditableComponents, v1);
    atomic_store(result, (unint64_t *)&qword_1004BA388);
  }
  return result;
}

uint64_t sub_1000475CC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if (v2)
    v4 = 0x80000001003A6F70;
  else
    v4 = 0x80000001003A6F90;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001CLL;
  else
    v5 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003A6F90;
  else
    v6 = 0x80000001003A6F70;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100047674(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1000476C4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_100047728 + 4 * byte_1003C97B4[a2]))(v2 + 16);
}

uint64_t sub_100047728(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001003A6C30;
  if (a1 == v1 + 16 && v2 == 0x80000001003A6C30)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 16, 0x80000001003A6C30, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_1000477C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100047820(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100047888 + 4 * byte_1003C97BC[a2]))(0x6C61727475656ELL);
}

uint64_t sub_100047888(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C61727475656ELL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_100047938(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xE900000000000073;
  v3 = 7105633;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x657469726F766166;
    else
      v4 = 0x64616F6C6E776F64;
    v5 = 0xE900000000000073;
    v6 = a2;
    if (a2)
    {
LABEL_6:
      if (v6 == 1)
        v3 = 0x657469726F766166;
      else
        v3 = 0x64616F6C6E776F64;
      if (v4 != v3)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7105633;
    v6 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE300000000000000;
  if (v4 != 7105633)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v3, v2, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v5 != v2)
    goto LABEL_15;
  v7 = 1;
  v2 = v5;
LABEL_16:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  return v7 & 1;
}

uint64_t sub_100047A38(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64657463656C6573;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 7105633;
    else
      v4 = 0x6E6F6973726576;
    if (v3 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 7105633;
      else
        v2 = 0x6E6F6973726576;
      if (v6 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x64657463656C6573;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x64657463656C6573)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_100047B40(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE0064616F6C6E77;
  v3 = 0x6F4465766F6D6572;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000011;
    else
      v5 = 0x6C65636E6163;
    if (v4 == 1)
      v6 = 0x80000001003A6150;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F4465766F6D6572;
  v6 = 0xEE0064616F6C6E77;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x6C65636E6163;
    if (v7 == 1)
      v2 = 0x80000001003A6150;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_100047C60(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100047CCC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100047D40 + 4 * byte_1003C97C5[a2]))(0x656C746974);
}

uint64_t sub_100047D40(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_100047E00(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_100047E4C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_100047EB0 + 4 * byte_1003C97CE[a2]))(v2 + 11);
}

uint64_t sub_100047EB0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001003A6D20;
  if (a1 == v1 + 11 && v2 == 0x80000001003A6D20)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 11, 0x80000001003A6D20, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_100047F4C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001003A6CB0;
  else
    v4 = 0x80000001003A6CD0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003A6CD0;
  else
    v6 = 0x80000001003A6CB0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100047FF8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100048048(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000480D0 + 4 * byte_1003C97D8[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_1000480D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4E6E657473696CLL, 0xE900000000000077, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  return v2 & 1;
}

void sub_1000481A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000481F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100048294 + 4 * byte_1003C97E5[a2]))(0x756F795F726F66);
}

uint64_t sub_100048294(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x756F795F726F66 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x756F795F726F66, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_100048384(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000483E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100048450 + 4 * byte_1003C97F0[a2]))(0x63697373616C63);
}

uint64_t sub_100048450(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x63697373616C63 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x63697373616C63, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_100048508(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100048554(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000485C0 + 4 * byte_1003C97F8[a2]))(0x6E776F6E6B6E75);
}

uint64_t sub_1000485C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E776F6E6B6E75 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_100048670(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001003A7130;
  else
    v4 = 0x80000001003A7150;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003A7150;
  else
    v6 = 0x80000001003A7130;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100048718(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D75626C61;
  else
    v3 = 0x747369747261;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D75626C61;
  else
    v5 = 0x747369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000487B4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E69646E6570;
  else
    v3 = 1852403562;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E69646E6570;
  else
    v5 = 1852403562;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100048850(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7473696C79616C70;
  else
    v5 = 0x7972617262696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1000488F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10004893C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000489A8 + 4 * byte_1003C9800[a2]))(0x747369747241);
}

uint64_t sub_1000489A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x747369747241 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x747369747241, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_100048A58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100048A98(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100048B10 + 4 * byte_1003C9808[a2]))(0x6C616974726170);
}

uint64_t sub_100048B10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616974726170 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616974726170, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t LaunchURL.Resolver.option.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Actions.SortPlaylist.Context.sortOption.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t Actions.SortPlaylist.Context.currentSort.getter()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 2))
    v1 = 256;
  else
    v1 = 0;
  return v1 | *(unsigned __int8 *)(v0 + 1);
}

uint64_t Actions.SortPlaylist.Context.currentSort.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  *(_BYTE *)(v1 + 2) = BYTE1(result) & 1;
  return result;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.currentSort.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_100048C84(v3, a1);
}

uint64_t type metadata accessor for Actions.SortPlaylist.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1004BA478;
  if (!qword_1004BA478)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.SortPlaylist.Context);
  return result;
}

uint64_t sub_100048C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BA390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_100048CFC(a1, v3);
}

uint64_t sub_100048CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BA390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.playlistVariant.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

void Actions.SortPlaylist.Context.didSelectSort.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  swift_release(v5[1]);
  *v5 = a1;
  v5[1] = a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.didSelectSort.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)@<X0>(char a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v12 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v13 = (uint64_t)&a6[*(int *)(v12 + 24)];
  v14 = type metadata accessor for Playlist.Variant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = HIBYTE(a2) & 1;
  result = sub_100048CFC(a3, v13);
  v16 = &a6[*(int *)(v12 + 28)];
  *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Actions.SortPlaylist.action(context:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t result;
  uint64_t (**v17)();
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  sub_100049014((uint64_t)a1, (uint64_t)&v20 - v9);
  v11 = 0x1D1B1C1E1FuLL >> (8 * *a1);
  sub_100049014((uint64_t)a1, (uint64_t)v8);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_10046ADB8, v13 + v6, v12 | 7);
  sub_10004926C((uint64_t)v8, v14 + v13);
  v15 = (int *)sub_1000057B4(&qword_1004BA3B0);
  *(_BYTE *)(a2 + v15[13]) = v11;
  result = sub_10004926C((uint64_t)v10, a2);
  *(_QWORD *)(a2 + v15[15]) = 0x4014000000000000;
  v17 = (uint64_t (**)())(a2 + v15[14]);
  *v17 = variable initialization expression of _NSRange.NSRangeIterator.current;
  v17[1] = 0;
  v18 = (_QWORD *)(a2 + v15[16]);
  *v18 = &unk_1004BA3A0;
  v18[1] = v14;
  v19 = (_QWORD *)(a2 + v15[17]);
  *v19 = &unk_1004BA3A8;
  v19[1] = 0;
  return result;
}

uint64_t sub_100049014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a3;
  return swift_task_switch(sub_100049070, 0, 0);
}

uint64_t sub_100049070()
{
  uint64_t v0;
  unsigned int v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = **(unsigned __int8 **)(v0 + 16);
  *(_BYTE *)(v0 + 52) = v1;
  sub_100047C60(v1);
  if ((v2 & 1) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_BYTE *)(v4 + 2);
    v6 = 256;
  }
  else
  {
    v6 = 0;
    v5 = v1 < 4;
    v4 = *(_QWORD *)(v0 + 16);
    v3 = 256;
  }
  *(_BYTE *)(v0 + 53) = v5;
  *(_WORD *)(v0 + 50) = v3;
  *(_WORD *)(v0 + 48) = v6;
  v7 = (_QWORD *)(v4 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  *(_QWORD *)(v0 + 24) = *v7;
  *(_QWORD *)(v0 + 32) = v7[1];
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100049148, v10, v11);
}

uint64_t sub_100049148()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  unsigned int v2;
  unsigned __int16 *v3;
  int v4;

  v1 = *(void (**)(_QWORD))(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 52);
  if (*(_BYTE *)(v0 + 53))
    v3 = (unsigned __int16 *)(v0 + 50);
  else
    v3 = (unsigned __int16 *)(v0 + 48);
  v4 = *v3;
  swift_release(*(_QWORD *)(v0 + 40));
  v1(v4 | v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000491AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10004926C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000492B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actions.SortPlaylist.Context(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1004BA39C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10002E8E0;
  v4[2] = v3;
  return swift_task_switch(sub_100049070, 0, 0);
}

uint64_t Actions.SortPlaylist.TrackListSort.init(option:isAscending:)(unsigned __int8 a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFF00 | a1;
}

void Actions.SortPlaylist.Context.menuItemTitle.getter()
{
  char *v0;
  char v1;
  uint64_t v2;

  v1 = *v0;
  v2 = (uint64_t)&v0[*(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24)];
  sub_100049374(v2, v1);
}

void sub_100049374(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[1] = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v11[3] = *(_QWORD *)(v5 - 8);
  v11[4] = v5;
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin(v7);
  v8 = sub_1000057B4(&qword_1004BA4F0);
  __chkstk_darwin(v8);
  v9 = sub_1000057B4(&qword_1004BA390);
  v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  __asm { BR              X10 }
}

uint64_t sub_10004950C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v0, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v0, 0, 1, v1);
  v10 = v5 + *(int *)(v3 + 48);
  sub_100048C84(*(_QWORD *)(v9 - 120), v5);
  sub_100048C84(v0, v10);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v11(v5, 1, v1) != 1)
  {
    sub_100048C84(v5, v8);
    if (v11(v10, 1, v1) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v10, v1);
      v14 = sub_10004BC34();
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v1, v14);
      v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v16(v6, v1);
      sub_10000FE2C(v0, &qword_1004BA390);
      v16(v8, v1);
      sub_10000FE2C(v5, &qword_1004BA390);
      if ((v15 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v12 = 0x7473696C79616C50;
      v13 = 0x726564724F20;
      goto LABEL_10;
    }
    sub_10000FE2C(v0, &qword_1004BA390);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v1);
LABEL_6:
    sub_10000FE2C(v5, &qword_1004BA4F0);
    goto LABEL_7;
  }
  sub_10000FE2C(v0, &qword_1004BA390);
  if (v11(v10, 1, v1) != 1)
    goto LABEL_6;
  sub_10000FE2C(v5, &qword_1004BA390);
LABEL_9:
  v12 = 0x7661462065746144;
  v13 = 0x64657469726FLL;
LABEL_10:
  String.LocalizationValue.init(stringLiteral:)(v12, v13 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000);
  v18 = *(_QWORD *)(v9 - 104);
  v17 = *(_QWORD *)(v9 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v2, v17);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v19 = qword_1004F4630;
  v20 = (id)qword_1004F4630;
  v21 = *(_QWORD *)(v9 - 112);
  static Locale.current.getter(v20);
  v22 = String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, v19, v21, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  return v22;
}

void Actions.SortPlaylist.Context.menuItemImage.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_100049860@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_1000498C0 + *((int *)qword_100049B30 + a1)))(0x656C746974);
}

uint64_t (*sub_1000498D0(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    goto LABEL_5;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v3 & 1) != 0)
  {
LABEL_5:
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
    if (*(_BYTE *)(v1 + 2) == 1)
    {
      v5 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v6)
        goto LABEL_9;
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (v6)
      {
LABEL_9:
        v8 = objc_msgSend(v6, "imageWithConfiguration:", v4);

LABEL_11:
        v9 = swift_allocObject(&unk_10046ADE0, 24, 7);
        *(_QWORD *)(v9 + 16) = v8;
        v10 = swift_allocObject(&unk_10046AE08, 32, 7);
        *(_QWORD *)(v10 + 16) = Artwork.Placeholder.image.getter;
        *(_QWORD *)(v10 + 24) = v9;
        swift_retain(v9);
        return sub_10004AA84;
      }
    }

    v8 = 0;
    goto LABEL_11;
  }
  return 0;
}

void Actions.SortPlaylist.Context.menuItemState.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_100049BB4@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100049C24 + 4 * byte_1003C9816[a1]))(0x656C746974);
}

uint64_t sub_100049C24(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    return 1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(0xE500000000000000);
    return v3 & 1;
  }
}

void sub_100049CEC(uint64_t a1)
{
  char *v1;

  sub_100049374((uint64_t)&v1[*(int *)(a1 + 24)], *v1);
}

uint64_t sub_100049D00()
{
  uint64_t v0;
  char v1;

  sub_100047C60(*(_BYTE *)(v0 + 1));
  return v1 & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

_UNKNOWN **static Actions.SortPlaylist.TrackListSort.Option.allCases.getter()
{
  return &off_1004661E8;
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100049D80 + 4 * byte_1003C981B[a1]))(0x7473696C79616C70, 0xED0000726564724FLL);
}

uint64_t sub_100049D80()
{
  return 0x656C746974;
}

uint64_t sub_100049D94()
{
  return 0x747369747261;
}

uint64_t sub_100049DA8()
{
  return 0x6D75626C61;
}

uint64_t sub_100049DBC()
{
  return 0x44657361656C6572;
}

uint64_t sub_100049DDC(char *a1)
{
  char v1;

  sub_100047C60(*a1);
  return v1 & 1;
}

void sub_100049DFC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100049E54()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_100049ED8()
{
  __asm { BR              X10 }
}

uint64_t sub_100049F20(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C746974, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_100049F90()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100049FE4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10004A068@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10004A094()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10004A0D0 + 4 * byte_1003C982F[*v0]))();
}

void sub_10004A0D0(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_10004A0E8(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747261;
  a1[1] = 0xE600000000000000;
}

void sub_10004A100(_QWORD *a1@<X8>)
{
  *a1 = 0x6D75626C61;
  a1[1] = 0xE500000000000000;
}

void sub_10004A118(_QWORD *a1@<X8>)
{
  *a1 = 0x44657361656C6572;
  a1[1] = 0xEB00000000657461;
}

uint64_t sub_10004A13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10004BBAC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10004A198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10004BBAC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_10004A1E4(_QWORD *a1@<X8>)
{
  *a1 = &off_100466210;
}

void Actions.SortPlaylist.TrackListSort.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_10004A248()
{
  __int16 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
}

void static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10004A348@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10004A3B8 + 4 * byte_1003C983E[a1]))(0x656C746974);
}

uint64_t sub_10004A3B8(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t result;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(0xE500000000000000);
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  return ((v1 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

BOOL sub_10004A494(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10004A4AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E656373417369;
  else
    return 0x6E6F6974706FLL;
}

uint64_t sub_10004A4EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10004AB5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10004A510(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10004A51C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10004AAD4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004A544(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10004AAD4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Actions.SortPlaylist.TrackListSort.encode(to:)(_QWORD *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = sub_1000057B4(&qword_1004BA3B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000096A0(a1, v9);
  v11 = sub_10004AAD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v11, v9, v10);
  v17 = a2;
  v16 = 0;
  v12 = sub_10004AB18();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v16, v5, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v12);
  if (!v2)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v15, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void Actions.SortPlaylist.TrackListSort.hashValue.getter(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_10004A6F4()
{
  __int16 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
  return Hasher._finalize()();
}

uint64_t Actions.SortPlaylist.TrackListSort.init(from:)(_QWORD *a1)
{
  return sub_10004AC5C(a1) & 0x1FF;
}

void sub_10004A79C()
{
  char *v0;

  Actions.SortPlaylist.TrackListSort.hashValue.getter(*v0);
}

void sub_10004A7B8()
{
  __asm { BR              X10 }
}

void sub_10004A80C()
{
  Swift::UInt8 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
}

void sub_10004A894()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_10004A8F0()
{
  Swift::UInt8 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

uint64_t sub_10004A984@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10004AC5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_10004A9B4(_QWORD *a1)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return Actions.SortPlaylist.TrackListSort.encode(to:)(a1, v2 | *v1);
}

uint64_t sub_10004A9E0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_100047C60(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_10004AA18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *Artwork.Placeholder.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_10004AA60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004AA84()
{
  uint64_t v0;

  return sub_10005D8DC(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466150, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_10004AAD4()
{
  unint64_t result;

  result = qword_1004BA3C0;
  if (!qword_1004BA3C0)
  {
    result = swift_getWitnessTable(&unk_1003C9BA0, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004BA3C0);
  }
  return result;
}

unint64_t sub_10004AB18()
{
  unint64_t result;

  result = qword_1004BA3C8;
  if (!qword_1004BA3C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1004BA3C8);
  }
  return result;
}

uint64_t sub_10004AB5C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E6F6974706FLL && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974706FLL, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x646E656373417369 && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease(0xEB00000000676E69);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646E656373417369, 0xEB00000000676E69, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10004AC5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  char v12;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v3 = sub_1000057B4(&qword_1004BA4E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1000096A0(a1, v7);
  v9 = sub_10004AAD4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v9, v7, v8);
  if (v1)
    return sub_10000970C(a1);
  v17 = 0;
  v10 = sub_10004BBF0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v18, &type metadata for Actions.SortPlaylist.TrackListSort.Option, &v17, v3, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v10);
  v11 = v18;
  v16 = 1;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10000970C(a1);
  if ((v12 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  return v14 | v11;
}

unint64_t sub_10004ADD0()
{
  unint64_t result;

  result = qword_1004BA400;
  if (!qword_1004BA400)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1004BA400);
  }
  return result;
}

unint64_t sub_10004AE18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA408;
  if (!qword_1004BA408)
  {
    v1 = sub_100009788(&qword_1004BA410);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1004BA408);
  }
  return result;
}

unint64_t sub_10004AE68()
{
  unint64_t result;

  result = qword_1004BA418;
  if (!qword_1004BA418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_1004BA418);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist()
{
  return &type metadata for Actions.SortPlaylist;
}

_QWORD *_s12SortPlaylistO7ContextVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Playlist.Variant(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_1000057B4(&qword_1004BA390);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v13 = v16[1];
    *v15 = *v16;
    v15[1] = v13;
  }
  swift_retain(v13);
  return v4;
}

uint64_t _s12SortPlaylistO7ContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Playlist.Variant(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t _s12SortPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_1000057B4(&qword_1004BA390);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  return a1;
}

_BYTE *_s12SortPlaylistO7ContextVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000057B4(&qword_1004BA390);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v17[1];
  v19 = v16[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_1000057B4(&qword_1004BA390);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000057B4(&qword_1004BA390);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = *(_QWORD *)(a1 + v15 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_release(v16);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004B4A8);
}

uint64_t sub_10004B4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1000057B4(&qword_1004BA390);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s12SortPlaylistO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004B538);
}

uint64_t sub_10004B538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1000057B4(&qword_1004BA390);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_10004B5B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1003C9A98;
  v4[1] = &unk_1003C9AB0;
  sub_10004B640(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_10004B640(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004BA488)
  {
    v2 = type metadata accessor for Playlist.Variant(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004BA488);
  }
}

_WORD *_s12SortPlaylistO13TrackListSortVwCP(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s12SortPlaylistO13TrackListSortVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10004B790 + 4 * byte_1003C9857[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10004B7C4 + 4 * byte_1003C9852[v4]))();
}

uint64_t sub_10004B7C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10004B7CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10004B7D4);
  return result;
}

uint64_t sub_10004B7E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10004B7E8);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_10004B7EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10004B7F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort;
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10004B8EC + 4 * byte_1003C9861[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10004B920 + 4 * byte_1003C985C[v4]))();
}

uint64_t sub_10004B920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004B930);
  return result;
}

uint64_t sub_10004B93C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004B944);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10004B948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort.Option()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort.Option;
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10004BA48 + 4 * byte_1003C986B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10004BA7C + 4 * byte_1003C9866[v4]))();
}

uint64_t sub_10004BA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004BA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004BA8CLL);
  return result;
}

uint64_t sub_10004BA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004BAA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10004BAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004BAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10004BAB8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s12SortPlaylistO13TrackListSortV10CodingKeysOMa()
{
  return &_s12SortPlaylistO13TrackListSortV10CodingKeysON;
}

unint64_t sub_10004BAD8()
{
  unint64_t result;

  result = qword_1004BA4C0;
  if (!qword_1004BA4C0)
  {
    result = swift_getWitnessTable(&unk_1003C9B78, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004BA4C0);
  }
  return result;
}

unint64_t sub_10004BB20()
{
  unint64_t result;

  result = qword_1004BA4C8;
  if (!qword_1004BA4C8)
  {
    result = swift_getWitnessTable(&unk_1003C9AE8, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004BA4C8);
  }
  return result;
}

unint64_t sub_10004BB68()
{
  unint64_t result;

  result = qword_1004BA4D0;
  if (!qword_1004BA4D0)
  {
    result = swift_getWitnessTable(&unk_1003C9B10, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004BA4D0);
  }
  return result;
}

unint64_t sub_10004BBAC()
{
  unint64_t result;

  result = qword_1004BA4D8;
  if (!qword_1004BA4D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1004BA4D8);
  }
  return result;
}

unint64_t sub_10004BBF0()
{
  unint64_t result;

  result = qword_1004BA4E8;
  if (!qword_1004BA4E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1004BA4E8);
  }
  return result;
}

unint64_t sub_10004BC34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BD030;
  if (!qword_1004BD030)
  {
    v1 = type metadata accessor for Playlist.Variant(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.Variant, v1);
    atomic_store(result, (unint64_t *)&qword_1004BD030);
  }
  return result;
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v28[4];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(a9, a1, a11);
  v28[0] = a11;
  v28[1] = a12;
  v28[2] = a13;
  v28[3] = a14;
  v21 = (int *)type metadata accessor for Action(0, (uint64_t)v28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(a9 + v21[13], a2, a12);
  *(double *)(a9 + v21[15]) = a10;
  v23 = (_QWORD *)(a9 + v21[14]);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(a9 + v21[16]);
  *v24 = a5;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + v21[17]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

{
  _QWORD *v21;

  v21 = (_QWORD *)swift_allocObject(&unk_10046B128, 64, 7);
  v21[2] = a11;
  v21[3] = a12;
  v21[4] = a13;
  v21[5] = a14;
  v21[6] = a5;
  v21[7] = a6;
  return Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, a2, a3, a4, (uint64_t)&unk_1004BA518, (uint64_t)v21, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t type metadata accessor for Action(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Action);
}

uint64_t AnyAction.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Action.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Action.supportedStatus()(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 56)))(v1);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 340) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  v6 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v4 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 80) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 88) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 96) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 112) = swift_task_alloc(v10);
  v11 = sub_1000057B4(&qword_1004BA528);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v4 + 128) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 136) = v13;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v4 + 152) = v14;
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v4 + 160) = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 200) = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 208) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v4 + 216) = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 240) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 248) = swift_task_alloc(v19);
  return swift_task_switch(sub_10004C040, 0, 0);
}

uint64_t sub_10004C040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int **v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t type;
  os_log_type_t typea;
  os_log_type_t typeb[8];
  NSObject *log;
  os_log_t loga;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, __n128);
  int *v115;
  uint64_t v116;
  uint64_t v117[2];

  if ((*(_BYTE *)(v0 + 340) & 1) != 0
    || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56)))(), v2 == 1))
  {
    if (qword_1004B8A18 != -1)
      swift_once(&qword_1004B8A18, sub_10004E5A4);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = sub_100039D34(v4, (uint64_t)qword_1004BA4F8);
    *(_QWORD *)(v0 + 256) = v10;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 264) = v11;
    v11(v3, v10, v4);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
    *(_QWORD *)(v0 + 272) = v12;
    v114 = v12;
    v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v6, v8, v9);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 152);
    if (v16)
    {
      v22 = *(_QWORD *)(v0 + 144);
      v98 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 128);
      v110 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 48);
      v106 = *(_QWORD *)(v0 + 208);
      v25 = swift_slowAlloc(12, -1);
      type = swift_slowAlloc(32, -1);
      v117[0] = type;
      *(_DWORD *)v25 = 136446210;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v22, v20 + *(int *)(v24 + 52), v23);
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v20, v24);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, *(_QWORD *)(*(_QWORD *)(v24 + 40) + 8));
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v22, v23);
      *(_QWORD *)(v25 + 4) = sub_1000393D0(v27, v29, v117);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: performing…", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v110, v106);
    }
    else
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 48));

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    *(_QWORD *)(v0 + 280) = v26;
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 120);
    v107 = *(_QWORD *)(v0 + 72);
    v111 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 56);
    sub_10004E9E8();
    v36 = *(double *)(v34 + *(int *)(v35 + 60));
    v37 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 1, 1, v38);
    v39 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v37, NSRunLoopCommonModes, v33, v36);

    sub_10000FE2C(v33, &qword_1004BA528);
    *(_QWORD *)(v0 + 16) = v39;
    v40 = type metadata accessor for NSTimer.TimerPublisher(0);
    v41 = sub_10004EA24();
    v42 = ConnectablePublisher.autoconnect()(v40, v41);
    v43 = swift_release(v39);
    *(_QWORD *)(v0 + 24) = v42;
    v114(v30, v34, v35, v43);
    LODWORD(v44) = *(_DWORD *)(v31 + 80);
    *(_DWORD *)(v0 + 336) = v44;
    v44 = v44;
    v45 = (v44 + 48) & ~v44;
    v46 = (char *)swift_allocObject(&unk_10046B150, v45 + v32, v44 | 7);
    v47 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)(v0 + 288) = v47;
    *((_QWORD *)v46 + 2) = v47;
    *((_QWORD *)v46 + 3) = v111;
    *((_QWORD *)v46 + 4) = v107;
    v48 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v0 + 296) = v48;
    *((_QWORD *)v46 + 5) = v48;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    *(_QWORD *)(v0 + 304) = v49;
    v49(&v46[v45], v30, v35);
    v50 = sub_1000057B4(&qword_1004BA540);
    v51 = sub_10004FFFC(&qword_1004BA548, &qword_1004BA540, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 312) = Publisher<>.sink(receiveValue:)(sub_10004EA70, v46, v50, v51);
    swift_release(v46);
    swift_release(*(_QWORD *)(v0 + 24));
    v52 = (int **)(v34 + *(int *)(v35 + 64));
    v115 = (int *)((char *)*v52 + **v52);
    v53 = (_QWORD *)swift_task_alloc((*v52)[1]);
    *(_QWORD *)(v0 + 320) = v53;
    *v53 = v0;
    v53[1] = sub_10004C860;
    return ((uint64_t (*)(_QWORD, _QWORD))v115)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v55 = v1;
    v56 = v2;
    if (qword_1004B8A18 != -1)
      swift_once(&qword_1004B8A18, sub_10004E5A4);
    v57 = *(_QWORD *)(v0 + 248);
    v58 = *(_QWORD *)(v0 + 208);
    v59 = *(_QWORD *)(v0 + 216);
    v60 = *(_QWORD *)(v0 + 200);
    v61 = *(_QWORD *)(v0 + 152);
    v63 = *(_QWORD *)(v0 + 48);
    v62 = *(_QWORD *)(v0 + 56);
    v64 = sub_100039D34(v58, (uint64_t)qword_1004BA4F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v64, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v62, v63);
    sub_10004ECD4(v55, v56);
    v65 = swift_bridgeObjectRetain();
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter();
    v68 = os_log_type_enabled(v66, v67);
    v69 = *(_QWORD *)(v0 + 248);
    v70 = *(_QWORD *)(v0 + 208);
    v71 = *(_QWORD *)(v0 + 216);
    v72 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 152);
    if (v68)
    {
      v112 = *(_QWORD *)(v0 + 208);
      v116 = *(_QWORD *)(v0 + 248);
      log = v66;
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 144);
      v76 = *(_QWORD *)(v0 + 128);
      typea = v67;
      v77 = *(_QWORD *)(v0 + 48);
      v108 = *(_QWORD *)(v0 + 216);
      v78 = swift_slowAlloc(22, -1);
      v99 = swift_slowAlloc(64, -1);
      v117[0] = v99;
      *(_DWORD *)v78 = 136446466;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v75, v72 + *(int *)(v77 + 52), v76);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v77);
      v79 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v76, *(_QWORD *)(*(_QWORD *)(v77 + 40) + 8));
      v81 = v80;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      *(_QWORD *)(v78 + 4) = sub_1000393D0(v79, v81, v117);
      swift_bridgeObjectRelease(v81);
      *(_WORD *)(v78 + 12) = 2082;
      swift_bridgeObjectRetain();
      v82 = (char *)Optional<A>.description.getter(v55, v56);
      v84 = v83;
      sub_100033EC4(v55, v56);
      *(_QWORD *)(v78 + 14) = sub_1000393D0(v82, v84, v117);
      swift_bridgeObjectRelease(v84);
      sub_100033EC4(v55, v56);
      sub_100033EC4(v55, v56);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v99, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v116, v112);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 48));
      sub_100033EC4(v55, v56);
      sub_100033EC4(v55, v56);

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
    }
    v85 = sub_10004ECE8();
    swift_allocError(&type metadata for ActionError, v85, 0, 0);
    *v86 = v55;
    v86[1] = v56;
    v88 = *(_QWORD *)(v0 + 240);
    v87 = *(_QWORD *)(v0 + 248);
    v90 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 232);
    v91 = *(_QWORD *)(v0 + 192);
    v92 = *(_QWORD *)(v0 + 200);
    v93 = *(_QWORD *)(v0 + 176);
    v94 = *(_QWORD *)(v0 + 184);
    v96 = *(_QWORD *)(v0 + 168);
    v97 = *(_QWORD *)(v0 + 144);
    v100 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 112);
    loga = *(os_log_t *)(v0 + 104);
    v109 = *(_QWORD *)(v0 + 96);
    v113 = *(_QWORD *)(v0 + 64);
    swift_willThrow(v95);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v91);
    swift_task_dealloc(v94);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v100);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(loga);
    swift_task_dealloc(v109);
    swift_task_dealloc(v113);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10004C860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10004CE38;
  else
    v3 = sub_10004C8C4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10004C8C4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *object;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  _QWORD v94[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v88 = *(_QWORD *)(v0 + 112);
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v82 = *(_QWORD *)(v0 + 80);
  v85 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v91(v5, v6, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v10 = v9(v88, v8, v85);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v92 = v9;
  if (os_log_type_enabled(v11, v12))
  {
    v86 = v12;
    v89 = v11;
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 104);
    v78 = *(_QWORD *)(v0 + 296);
    v80 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v83 = swift_slowAlloc(64, -1);
    v93 = v83;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v13 + *(int *)(v20 + 52), v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, *(_QWORD *)(v78 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v22, v24, &v93);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    v25 = v92(v18, v80, v19);
    v26 = swift_dynamicCast(v25, v18, v19, (char *)&type metadata for () + 8, 6);
    v27 = (char *)0xE000000000000000;
    if ((v26 & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 112);
      v36 = *(_QWORD *)(v0 + 96);
      v37 = *(_QWORD *)(v0 + 72);
      v94[0] = 0;
      v94[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v94[1]);
      strcpy((char *)v94, " with result: ");
      HIBYTE(v94[1]) = -18;
      v92(v36, v35, v37);
      v38._countAndFlagsBits = String.init<A>(describing:)(v36, v37);
      object = v38._object;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(object);
      v28 = (char *)v94[0];
      v27 = (char *)v94[1];
    }
    v40 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 72);
    v44 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v21 + 14) = sub_1000393D0(v28, v27, &v93);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    _os_log_impl((void *)&_mh_execute_header, v89, v86, "%{public}s: perform success%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 208);
    v30 = *(_QWORD *)(v0 + 216);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 72);
    v34 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 304);
  v70 = *(_QWORD *)(v0 + 312);
  v67 = *(_QWORD *)(v0 + 288);
  v68 = *(_QWORD *)(v0 + 296);
  v46 = *(unsigned __int8 *)(v0 + 336);
  v71 = *(_QWORD *)(v0 + 248);
  v72 = *(_QWORD *)(v0 + 240);
  v73 = *(_QWORD *)(v0 + 232);
  v74 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 184);
  v75 = *(_QWORD *)(v0 + 200);
  v76 = *(_QWORD *)(v0 + 192);
  v77 = *(_QWORD *)(v0 + 176);
  v79 = *(_QWORD *)(v0 + 168);
  v63 = *(_QWORD *)(v0 + 160);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v81 = *(_QWORD *)(v0 + 144);
  v66 = *(_QWORD *)(v0 + 128);
  v84 = *(_QWORD *)(v0 + 120);
  v87 = *(_QWORD *)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 96);
  v90 = *(_QWORD *)(v0 + 104);
  v49 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 88);
  v50 = *(_QWORD *)(v0 + 64);
  v51 = *(_QWORD *)(v0 + 72);
  v65 = v50;
  v53 = *(_QWORD *)(v0 + 48);
  v52 = *(_QWORD *)(v0 + 56);
  v54 = *(_QWORD *)(v0 + 40);
  v55 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v50, 1, 1, v55);
  v64(v47, v52, v53);
  v92(v48, v54, v51);
  v56 = (v46 + 64) & ~v46;
  v57 = *(unsigned __int8 *)(v49 + 80);
  v58 = (v63 + v56 + v57) & ~v57;
  v59 = (char *)swift_allocObject(&unk_10046B178, v58 + v62, v46 | v57 | 7);
  *((_QWORD *)v59 + 2) = 0;
  *((_QWORD *)v59 + 3) = 0;
  *((_QWORD *)v59 + 4) = v67;
  *((_QWORD *)v59 + 5) = v66;
  *((_QWORD *)v59 + 6) = v51;
  *((_QWORD *)v59 + 7) = v68;
  v69(&v59[v56], v47, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(&v59[v58], v48, v51);
  v60 = sub_10004DE78(v65, (uint64_t)&unk_1004BA558, (uint64_t)v59);
  swift_release(v60);
  swift_release(v70);
  sub_10000FE2C(v65, (uint64_t *)&unk_1004BFBC0);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v47);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v48);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004CE38()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 264);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = swift_release(*(_QWORD *)(v0 + 312));
  v3(v5, v4, v6, v10);
  v2(v7, v8, v9);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 216);
    v53 = *(_QWORD *)(v0 + 208);
    v55 = *(_QWORD *)(v0 + 224);
    type = v13;
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(64, -1);
    v56[0] = v47;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v15 + *(int *)(v20 + 52), v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v45 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v22, v24, v56);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v14;
    swift_errorRetain(v14);
    v25 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v26 = (char *)String.init<A>(describing:)(v0 + 32, v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_1000393D0(v26, v27, v56);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v51 + 8))(v55, v53);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 328);
    v32 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 48));
    swift_errorRelease(v30);
    swift_errorRelease(v30);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v35 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 120);
  v48 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 96);
  v54 = *(_QWORD *)(v0 + 64);
  swift_willThrow(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(*(_QWORD *)typea);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004D19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v8[13] = a8;
  v8[14] = v21;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v12 = sub_1000057B4(&qword_1004BA528);
  v8[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = v21;
  v13 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  v8[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[17] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[18] = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[19] = swift_task_alloc(v16);
  v8[20] = swift_task_alloc(v16);
  v8[21] = swift_task_alloc(v16);
  v8[22] = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  v8[23] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[24] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v19);
  v8[26] = swift_task_alloc(v19);
  v8[27] = swift_task_alloc(v19);
  return swift_task_switch(sub_10004D2C4, 0, 0);
}

uint64_t sub_10004D2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int **v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, __n128);
  int *v58;
  uint64_t v59;

  if (qword_1004B8A18 != -1)
    swift_once(&qword_1004B8A18, sub_10004E5A4);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = sub_100039D34(v2, (uint64_t)qword_1004BA4F8);
  *(_QWORD *)(v0 + 224) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v9;
  v9(v1, v8, v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  *(_QWORD *)(v0 + 240) = v10;
  v57 = v10;
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  if (v14)
  {
    v55 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 96);
    v53 = *(_QWORD *)(v0 + 184);
    v22 = swift_slowAlloc(12, -1);
    v52 = v17;
    v23 = swift_slowAlloc(32, -1);
    v59 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, *(_QWORD *)(v21 + 8));
    v26 = v25;
    *(_QWORD *)(v22 + 4) = sub_1000393D0(v24, v25, &v59);
    swift_bridgeObjectRelease(v26);
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(v18, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    v28 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v28(v55, v53);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128));

    v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v15, v16);
  }
  *(_QWORD *)(v0 + 248) = v28;
  *(_QWORD *)(v0 + 256) = v27;
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 72);
  sub_10004E9E8();
  v35 = *(double *)(v34 + *(int *)(v32 + 60));
  v54 = *(_OWORD *)(v0 + 104);
  v56 = *(_OWORD *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v33, v35);

  sub_10000FE2C(v33, &qword_1004BA528);
  *(_QWORD *)(v0 + 48) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_10004EA24();
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  v42 = swift_release(v38);
  *(_QWORD *)(v0 + 56) = v41;
  v57(v29, v34, v32, v42);
  v43 = *(unsigned __int8 *)(v30 + 80);
  v44 = (v43 + 48) & ~v43;
  v45 = swift_allocObject(&unk_10046B340, v44 + v31, v43 | 7);
  *(_OWORD *)(v45 + 16) = v56;
  *(_OWORD *)(v45 + 32) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v45 + v44, v29, v32);
  v46 = sub_1000057B4(&qword_1004BA540);
  v47 = sub_10004FFFC(&qword_1004BA548, &qword_1004BA540, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 264) = Publisher<>.sink(receiveValue:)(sub_10004FCB4, v45, v46, v47);
  swift_release(v45);
  swift_release(*(_QWORD *)(v0 + 56));
  v48 = (int **)(v34 + *(int *)(v32 + 68));
  v58 = (int *)((char *)*v48 + **v48);
  v49 = (_QWORD *)swift_task_alloc((*v48)[1]);
  *(_QWORD *)(v0 + 272) = v49;
  *v49 = v0;
  v49[1] = sub_10004D6C0;
  return ((uint64_t (*)(_QWORD, _QWORD))v58)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10004D6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10004D95C;
  else
    v3 = sub_10004D724;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10004D724()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 72);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v9 = v1(v6, v8, v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v16 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 128);
  if (v12)
  {
    v38 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 264);
    v21 = swift_slowAlloc(12, -1);
    v37 = v17;
    v22 = swift_slowAlloc(32, -1);
    v39 = v22;
    *(_DWORD *)v21 = 136446210;
    v35 = v15;
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v34, *(_QWORD *)(v20 + 8));
    v25 = v24;
    *(_QWORD *)(v21 + 4) = sub_1000393D0(v23, v24, &v39);
    swift_bridgeObjectRelease(v25);
    v13(v18, v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    swift_release(v36);

    v35(v38, v37);
  }
  else
  {
    v13(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
    swift_release(v14);

    v15(v16, v17);
  }
  v26 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004D95C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = swift_release(*(_QWORD *)(v0 + 264));
  v3(v5, v4, v6, v10);
  v2(v7, v9, v8);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 280);
    v42 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v45 = *(_QWORD *)(v0 + 200);
    v46 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v44 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = swift_slowAlloc(22, -1);
    v43 = swift_slowAlloc(64, -1);
    v47 = v43;
    *(_DWORD *)v19 = 136446466;
    v20 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v17 + 8));
    v22 = v21;
    *(_QWORD *)(v19 + 4) = sub_1000393D0(v20, v21, &v47);
    swift_bridgeObjectRelease(v22);
    v42(v15, v16);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 64) = v14;
    swift_errorRetain(v14);
    v23 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v24 = (char *)String.init<A>(describing:)(v0 + 64, v23);
    v26 = v25;
    *(_QWORD *)(v19 + 14) = sub_1000393D0(v24, v25, &v47);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v14);
    v46(v45, v44);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 280);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v30 = *(_QWORD *)(v0 + 200);
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v27);
    v28(v32, v33);
    swift_errorRelease(v27);
    swift_errorRelease(v27);

    v29(v30, v31);
  }
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004DC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[4];

  v32 = a4;
  v33[0] = a3;
  v33[1] = a4;
  v33[2] = a5;
  v31 = a6;
  v33[3] = a6;
  v9 = type metadata accessor for Action(0, (uint64_t)v33);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - v11;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004B8A18 != -1)
    swift_once(&qword_1004B8A18, sub_10004E5A4);
  v17 = sub_100039D34(v13, (uint64_t)qword_1004BA4F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v29 = a7;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v30 = v14;
    v24 = v23;
    v33[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v32, *(_QWORD *)(v31 + 8));
    v27 = v26;
    *(_QWORD *)(v22 + 4) = sub_1000393D0(v25, v26, v33);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v29, (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_10004DE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v6 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FAE8(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000FE2C((uint64_t)v8, (uint64_t *)&unk_1004BFBC0);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v18 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = swift_allocObject(&unk_10046B318, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, (char *)&type metadata for () + 8, &unk_1004BDA80, v19);
}

uint64_t sub_10004E008(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, a1[1], *a2, a2[1]);
}

unint64_t ActionError.description.getter(uint64_t a1, void *a2)
{
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    a1 = 0x6E776F6E6B6E75;
    v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 0xD000000000000020;
}

BOOL static ActionError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
    return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0);
  if (a4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

uint64_t sub_10004E128(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

unint64_t sub_10004E18C()
{
  uint64_t v0;

  return ActionError.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

uint64_t sub_10004E194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch(sub_10004E1B8, 0, 0);
}

uint64_t sub_10004E1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 64) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_10004E260;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000003ALL, 0x80000001003A7960, sub_10004FD8C, v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_10004E260()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10004E2D4, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10004E2D4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10004E308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];

  v42 = a6;
  v43 = a8;
  v41 = a5;
  v39 = a4;
  v45 = a2;
  v46 = a3;
  v44 = a1;
  v12 = sub_100009788((uint64_t *)&unk_1004BD690);
  v40 = a7;
  v13 = type metadata accessor for CheckedContinuation(0, a7, v12, &protocol self-conformance witness table for Error);
  v14 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v47[0] = a5;
  v47[1] = a6;
  v47[2] = a7;
  v47[3] = a8;
  v18 = type metadata accessor for Action(0, (uint64_t)v47);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  v23 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v23);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v39, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v44, v13);
  v27 = *(unsigned __int8 *)(v19 + 80);
  v28 = (v27 + 80) & ~v27;
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v20 + v28 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_10046B368, v30 + v15, v27 | v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v42;
  *((_QWORD *)v31 + 4) = v41;
  *((_QWORD *)v31 + 5) = v32;
  v33 = v43;
  *((_QWORD *)v31 + 6) = v40;
  *((_QWORD *)v31 + 7) = v33;
  v34 = v46;
  *((_QWORD *)v31 + 8) = v45;
  *((_QWORD *)v31 + 9) = v34;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[v28], v22, v18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v31[v30], v17, v38);
  swift_retain(v34);
  v35 = sub_1001CC790((uint64_t)v25, (uint64_t)&unk_1004BA5F0, (uint64_t)v31);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_10004E534(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10002E8E0;
  return v12(a6, a7);
}

uint64_t sub_10004E5A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004BA4F8);
  sub_100039D34(v0, (uint64_t)qword_1004BA4F8);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x6E6F69746341, 0xE600000000000000);
}

uint64_t _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1)
      return 1;
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0))
        return 1;
    }
    else
    {
      if (!a4)
        return 1;
      sub_100033EC4(a1, 0);
    }
  }
  return 0;
}

unint64_t _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25[64];

  v1 = a1[2];
  if (!v1)
    return 0xD000000000000015;
  v4 = a1[4];
  v3 = a1[5];
  swift_bridgeObjectRetain();
  sub_10004ECD4(v4, v3);
  v5 = v1 - 1;
  v24 = a1;
  if (v1 != 1)
  {
    v8 = a1 + 7;
    while (1)
    {
      v6 = *(v8 - 1);
      v15 = *v8;
      if (v3 == 1 && v15 == 1)
      {
        sub_10005003C(v4, 1);
        v3 = 1;
        goto LABEL_10;
      }
      v16 = sub_1000057B4(&qword_1004BA1C8);
      inited = swift_initStackObject(v16, v25);
      *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v3;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v15;
      if (v3 == 1)
      {
        sub_10004ECD4(v6, v15);
      }
      else
      {
        sub_10004ECD4(v6, v15);
        if (v3)
        {
          sub_10005004C(v4, v3);
          sub_10004ECD4(v6, v15);
          sub_10005004C(v4, v3);
          v18 = sub_10005DE58(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          v20 = *((_QWORD *)v18 + 2);
          v19 = *((_QWORD *)v18 + 3);
          if (v20 >= v19 >> 1)
            v18 = sub_10005DE58((char *)(v19 > 1), v20 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v20 + 1;
          v21 = &v18[16 * v20];
          *((_QWORD *)v21 + 4) = v4;
          *((_QWORD *)v21 + 5) = v3;
          if (v15 < 2)
            goto LABEL_9;
LABEL_22:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v18 = sub_10005DE58(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
          v23 = *((_QWORD *)v18 + 2);
          v22 = *((_QWORD *)v18 + 3);
          if (v23 >= v22 >> 1)
            v18 = sub_10005DE58((char *)(v22 > 1), v23 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v23 + 1;
          v9 = &v18[16 * v23];
          *((_QWORD *)v9 + 4) = v6;
          *((_QWORD *)v9 + 5) = v15;
          goto LABEL_9;
        }
      }
      sub_10004ECD4(v6, v15);
      v18 = (char *)_swiftEmptyArrayStorage;
      if (v15 >= 2)
        goto LABEL_22;
LABEL_9:
      swift_release(inited);
      v10 = sub_1000057B4(&qword_1004BA5F8);
      v11 = sub_10004FFFC((unint64_t *)&qword_1004BDD10, &qword_1004BA5F8, (uint64_t)&protocol conformance descriptor for [A]);
      v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
      v14 = v13;
      swift_bridgeObjectRelease(v18);
      sub_100033EC4(v6, v15);
      sub_10005003C(v4, v3);
      v6 = v12;
      v3 = v14;
LABEL_10:
      v8 += 2;
      v4 = v6;
      if (!--v5)
        goto LABEL_4;
    }
  }
  v6 = v4;
LABEL_4:
  swift_bridgeObjectRelease(v24);
  return v6;
}

uint64_t sub_10004E948()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10004E96C(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v6 = swift_task_alloc(dword_1004BA514);
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[1];
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_10002E8E0;
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch(sub_10004E1B8, 0, 0);
}

unint64_t sub_10004E9E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA530;
  if (!qword_1004BA530)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004BA530);
  }
  return result;
}

unint64_t sub_10004EA24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA538;
  if (!qword_1004BA538)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSTimer.TimerPublisher, v1);
    atomic_store(result, (unint64_t *)&qword_1004BA538);
  }
  return result;
}

uint64_t sub_10004EA70(uint64_t a1)
{
  return sub_10004FCC0(a1, "%{public}s: waiting for perform to return…");
}

uint64_t sub_10004EA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;

  v2 = *(_QWORD *)(v0 + 40);
  v16[0] = *(_QWORD *)(v0 + 32);
  v1 = v16[0];
  v16[1] = v2;
  v17 = *(_OWORD *)(v0 + 48);
  v15 = v17;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v16);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 64) & ~v5;
  v7 = *(_QWORD *)(v15 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v6 + *(_QWORD *)(v4 + 64) + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v5 | v8 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v12, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v12 + v3[13], v2);
  swift_release(*(_QWORD *)(v12 + v3[14] + 8));
  swift_release(*(_QWORD *)(v12 + v3[16] + 8));
  v13 = swift_release(*(_QWORD *)(v12 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v15, v13);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10004EBA8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v11 = v1[2];
  v12 = v1[3];
  v13 = (uint64_t)v1 + v9;
  v14 = (uint64_t)v1 + ((v9 + *(_QWORD *)(v8 + 64) + v10) & ~v10);
  v15 = (_QWORD *)swift_task_alloc(dword_1004BA554);
  v2[6] = v15;
  *v15 = v2;
  v15[1] = sub_10004EC8C;
  return sub_10004D19C(a1, v11, v12, v13, v14, v4, v5, v6);
}

uint64_t sub_10004EC8C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t sub_10004ECE8()
{
  unint64_t result;

  result = qword_1004BA560[0];
  if (!qword_1004BA560[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionError, &type metadata for ActionError);
    atomic_store(result, qword_1004BA560);
  }
  return result;
}

uint64_t sub_10004ED2C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
}

uint64_t sub_10004ED38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_10004ED40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for () + 64;
      v5[5] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 6, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10004EDEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v26 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain(v18);
    swift_retain(v23);
  }
  swift_retain(v26);
  return v4;
}

uint64_t sub_10004EF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = (((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  return swift_release(*(_QWORD *)(((v9 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10004EFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain(v16);
  swift_retain(v21);
  swift_retain(v24);
  return a1;
}

uint64_t sub_10004F0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  v23 = v20[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  v27 = v24[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

uint64_t sub_10004F1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *v18;
  _OWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10004F2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 + v12;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v16);
  v18 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (v17 & 0xFFFFFFFFFFFFF8) + 15;
  *v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 8);
  v22 = (v19 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v20 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)(v23 + 8);
  *(_OWORD *)v23 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFF8);
  swift_release(v24);
  return a1;
}

uint64_t sub_10004F390(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10004F448 + 4 * byte_1003C9BF0[v15]))();
  }
}

void sub_10004F4F0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_10004F624()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10004F6B4);
}

void sub_10004F62C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10004F634);
  JUMPOUT(0x10004F6B4);
}

void sub_10004F678()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10004F6B4);
}

void sub_10004F680()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10004F6B4);
}

uint64_t sub_10004F688(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x10004F6B4);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x10004F694);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

unint64_t destroy for ActionSupportedStatus(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s9MusicCore21ActionSupportedStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionSupportedStatus(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 + 1;
  if (v7 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_12;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSupportedStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionSupportedStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_10004F928(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_10004F948(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSupportedStatus()
{
  return &type metadata for ActionSupportedStatus;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ActionError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t sub_10004FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004FB30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004FB54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1004C2AEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1004C2AE8 + dword_1004C2AE8))(a1, v4);
}

uint64_t sub_10004FBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 16);
  v1 = v12;
  v13 = *(_OWORD *)(v0 + 24);
  v11 = v13;
  v14 = v2;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)&v12);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v6, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9 + v3[13]);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_10004FCB4(uint64_t a1)
{
  return sub_10004FCC0(a1, "%{public}s: waiting for finish to return…");
}

uint64_t sub_10004FCC0(uint64_t a1, const char *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v11) - 8) + 80);
  return sub_10004DC2C(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

uint64_t *sub_10004FD4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

double sub_10004FD8C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10004E308(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10004FDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  _QWORD v20[2];
  __int128 v21;

  v1 = *(_QWORD *)(v0 + 40);
  v20[0] = *(_QWORD *)(v0 + 32);
  v2 = v20[0];
  v20[1] = v1;
  v21 = *(_OWORD *)(v0 + 48);
  v19 = v21;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v20);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 80) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = sub_100009788((uint64_t *)&unk_1004BD690);
  v9 = type metadata accessor for CheckedContinuation(0, v19, v8, &protocol self-conformance witness table for Error);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v5 | v11 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v15 = swift_release(*(_QWORD *)(v0 + 72));
  v16 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 8) + 8))(v16, v2, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v16 + v3[13], v1);
  swift_release(*(_QWORD *)(v16 + v3[14] + 8));
  swift_release(*(_QWORD *)(v16 + v3[16] + 8));
  v17 = swift_release(*(_QWORD *)(v16 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v0 + v12, v9, v17);
  return swift_deallocObject(v0, v13, v14);
}

uint64_t sub_10004FEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v14;
  v2 = *(_QWORD *)(type metadata accessor for Action(0, v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100009788((uint64_t *)&unk_1004BD690);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v14, v5, &protocol self-conformance witness table for Error)- 8)+ 80);
  v7 = v3 + v4 + v6;
  v8 = *(int **)(v0 + 64);
  v9 = v0 + v3;
  v10 = v0 + (v7 & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1004BA5EC);
  *(_QWORD *)(v1 + 48) = v11;
  *v11 = v1;
  v11[1] = sub_10004EC8C;
  *(_QWORD *)&v14 = (char *)v8 + *v8;
  v12 = (_QWORD *)swift_task_alloc(v8[1]);
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v9, v10);
}

uint64_t sub_10004FFFC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100009788(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005003C(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_100033EC4(a1, a2);
  return a1;
}

uint64_t sub_10005004C(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_10004ECD4(a1, a2);
  return a1;
}

uint64_t sub_100050060(uint64_t a1)
{
  type metadata accessor for Array(0);
  return a1;
}

uint64_t sub_100050088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_100051DD0(a1);
    v10 = 7168;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v10, v17, a4, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v10 = v18 | 0x1C00;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
      goto LABEL_6;
  }
  v12 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v11);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v12);
  v16 = v15;
  swift_unknownObjectRelease(v11);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v10, v17, a4, a2, a3);
}

uint64_t ActionMenu.Element.id.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v5 = v4;
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = type metadata accessor for ActionMenu.Item(0, v8, v7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v15, v5, a1);
  if (swift_getEnumCaseMultiPayload(v15, a1) == 1)
  {
    v17 = *v15;
    v18 = v15[3];
    v19 = v15[5];
    v20 = (void *)v15[6];
    swift_release(v15[9]);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v13, v15, v9);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v8, *(_QWORD *)(v7 + 8));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return v17;
}

uint64_t static ActionMenu.Element.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[5];
  _OWORD v40[6];

  v38 = a2;
  v35 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v34 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v33 = (char *)&v33 - v7;
  v36 = a3;
  v37 = a4;
  v9 = type metadata accessor for ActionMenu.Element(0, a3, a4, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v33 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v9, 0, 0);
  v17 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = __chkstk_darwin(TupleTypeMetadata2);
  v20 = (char *)&v33 - v19;
  v21 = (char *)&v33 + *(int *)(v18 + 48) - v19;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22((char *)&v33 - v19, a1, v9);
  v22(v21, v38, v9);
  if (swift_getEnumCaseMultiPayload(v20, v9) != 1)
  {
    v22(v15, (uint64_t)v20, v9);
    if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
    {
      v28 = v34;
      v29 = (uint64_t)v33;
      v30 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v21, v35);
      v27 = static ActionMenu.Item.== infix(_:_:)((uint64_t)v15, v29, v36, v37);
      v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v31(v29, v30);
      v31((uint64_t)v15, v30);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v35);
    goto LABEL_7;
  }
  v22(v13, (uint64_t)v20, v9);
  v23 = *((_OWORD *)v13 + 3);
  v39[2] = *((_OWORD *)v13 + 2);
  v39[3] = v23;
  v39[4] = *((_OWORD *)v13 + 4);
  v24 = *((_OWORD *)v13 + 1);
  v39[0] = *(_OWORD *)v13;
  v39[1] = v24;
  if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
  {
    sub_100050D78(v39);
LABEL_7:
    v27 = 0;
    v10 = v17;
    v9 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v25 = *((_OWORD *)v21 + 3);
  v40[2] = *((_OWORD *)v21 + 2);
  v40[3] = v25;
  v40[4] = *((_OWORD *)v21 + 4);
  v26 = *((_OWORD *)v21 + 1);
  v40[0] = *(_OWORD *)v21;
  v40[1] = v26;
  v27 = static ActionMenu.== infix(_:_:)((uint64_t *)v39, v40);
  sub_100050D78(v40);
  sub_100050D78(v39);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
  return v27 & 1;
}

uint64_t sub_1000505E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = ActionMenu.Element.id.getter(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_100050608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Element.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t static ActionMenu.ElementBuilder.buildBlock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005062C(a1, a2, a3, (uint64_t)sub_100051E40);
}

uint64_t static ActionMenu.ElementBuilder.buildArray(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005062C(a1, a2, a3, (uint64_t)sub_100050DD8);
}

uint64_t sub_10005062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v5 = type metadata accessor for Array(255);
  v6 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  return Sequence.flatMap<A>(_:)(a4, v10, v6, v5, WitnessTable, v8);
}

uint64_t static ActionMenu.ElementBuilder.buildIf(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    v5 = type metadata accessor for ActionMenu.Element(0, a2, a3, a4);
    v4 = static Array._allocateUninitialized(_:)(0, v5);
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];

  v69 = a3;
  v70 = a6;
  v71[0] = a3;
  v71[1] = a2;
  v71[2] = a4;
  v71[3] = a5;
  v59 = a5;
  v10 = type metadata accessor for Action(0, (uint64_t)v71);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  v13 = *(_QWORD *)(v11 + 64);
  v14 = __chkstk_darwin(v10);
  v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v62 = (char *)&v52 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v52 - v18;
  v57 = (char *)&v52 - v18;
  v20 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v22;
  v24 = type metadata accessor for ActionMenu.Element(255, a2, a5, v23);
  v65 = v24;
  v25 = type metadata accessor for _ContiguousArrayStorage(0, v24);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  v63 = static Array._adoptStorage(_:count:)(v26, 1);
  v61 = v27;
  v28 = *(int *)(v12 + 52);
  v68 = a1;
  v29 = a1 + v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v56 = a2;
  v30(v22, v29, a2);
  v31 = v11;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v32 = v12;
  v58(v19, a1, v12);
  v33 = *(unsigned __int8 *)(v11 + 80);
  v34 = (v33 + 56) & ~v33;
  v35 = v34 + v13;
  v67 = v33 | 7;
  v54 = v34 + v13;
  v36 = (char *)swift_allocObject(&unk_10046B400, v34 + v13, v33 | 7);
  v37 = v69;
  v38 = v70;
  *((_QWORD *)v36 + 2) = a2;
  *((_QWORD *)v36 + 3) = v37;
  v55 = a4;
  v39 = v59;
  *((_QWORD *)v36 + 4) = a4;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v38;
  v53 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v66 = v32;
  v53(&v36[v34], v57, v32);
  v40 = v62;
  v41 = v58;
  v58(v62, v68, v32);
  v42 = (char *)swift_allocObject(&unk_10046B428, v35, v67);
  v43 = v56;
  *((_QWORD *)v42 + 2) = v56;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = a4;
  *((_QWORD *)v42 + 5) = v39;
  *((_QWORD *)v42 + 6) = v38;
  v44 = v40;
  v45 = v66;
  v46 = v53;
  v53(&v42[v34], v44, v66);
  v47 = v64;
  v41(v64, v68, v45);
  v48 = (char *)swift_allocObject(&unk_10046B450, v54, v67);
  v49 = v69;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v49;
  *((_QWORD *)v48 + 4) = v55;
  *((_QWORD *)v48 + 5) = v39;
  *((_QWORD *)v48 + 6) = v70;
  v46(&v48[v34], v47, v66);
  v50 = v61;
  sub_10005CA38((uint64_t)v60, (uint64_t)sub_100050DF8, (uint64_t)v36, (uint64_t)sub_100050E78, (uint64_t)v42, (uint64_t)&unk_1004BA608, (uint64_t)v48, v43, v61, v39);
  swift_storeEnumTagMultiPayload(v50, v65, 0);
  type metadata accessor for Array(0);
  return v63;
}

uint64_t sub_100050A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = a4;
  v6[5] = a5;
  v7 = type metadata accessor for Action(0, (uint64_t)(v6 + 2));
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[14] = v9;
  v6[15] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100050AE0, 0, 0);
}

uint64_t sub_100050AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 56);
  v15 = *(_OWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v7, v5);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 72) & ~v9;
  v11 = swift_allocObject(&unk_10046B4E8, v10 + v3, v9 | 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v15;
  *(_QWORD *)(v11 + 64) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v5);
  v12 = sub_100050088(v1, (uint64_t)&unk_1004BA718, v11, v15);
  swift_release(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100050BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v14;
  uint64_t v15;

  v14 = (_QWORD *)swift_task_alloc(dword_1004BA524);
  v8[2] = a6;
  v8[3] = a5;
  v8[4] = a7;
  v8[5] = a8;
  v8[6] = v14;
  v15 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  *v14 = v8;
  v14[1] = sub_10004EC8C;
  return Action.execute(bypassSupportedStatusCheck:)(a1, 0, v15);
}

uint64_t static ActionMenu.ElementBuilder.buildExpression(_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v5 = type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = *a1;
  v10 = a1[4];
  v12 = a1[1];
  v11 = a1[2];
  v9[3] = a1[3];
  v9[4] = v10;
  v9[1] = v12;
  v9[2] = v11;
  swift_storeEnumTagMultiPayload(v9, v5, 1);
  type metadata accessor for Array(0);
  sub_10005107C((uint64_t)a1);
  return v8;
}

uint64_t sub_100050D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CustomStringConvertible.description.getter(a2, a3);
}

uint64_t type metadata accessor for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Element);
}

_QWORD *sub_100050D78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  return a1;
}

uint64_t sub_100050DD8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100050DF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];
  __int128 v11;

  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 48);
  v10[0] = *(_QWORD *)(v1 + 24);
  v4 = v10[0];
  v10[1] = v3;
  v11 = *(_OWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v10) - 8) + 80);
  v7 = v1 + ((v6 + 56) & ~v6);
  a1[3] = v4;
  a1[4] = v5;
  v8 = sub_1000407CC(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v8, v7, v4);
}

uint64_t sub_100050E78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v7 = v0[3];
  v2 = v7;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  type metadata accessor for Action(0, (uint64_t)&v7);
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  v5 = type metadata accessor for Action(0, (uint64_t)&v7);
  return Action.supportedStatus()(v5);
}

uint64_t sub_100050EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 16);
  v11[0] = *(_QWORD *)(v0 + 24);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 32);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + v6, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100050FD8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v8 = (uint64_t)v0 + ((v7 + 56) & ~v7);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BA604);
  v1[6] = v9;
  *v9 = v1;
  v9[1] = sub_10004EC8C;
  return sub_100050A3C(v8, v2, v3, v4, v5, v6);
}

uint64_t sub_10005107C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(id *)(a1 + 48);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *sub_1000510E0()
{
  return &protocol witness table for String;
}

uint64_t sub_1000510EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000510F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "P";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_100051164(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) & 0xF8;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4 + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~(_WORD)v3 & 0x1F8);
  swift_retain(v4);
  return v5;
}

uint64_t sub_1000511B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = 80;
  if (((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x50)
    v5 = ((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = v5 & 0xFFFFFFF8;
  if (v6 >= 2 && v7 != 0)
    v6 = *(_DWORD *)a1 + 2;
  if (v6 == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    v9 = (_QWORD *)(a1 + 72);
  }
  else
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
    v10 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v10 + 8));
    v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v11 + 8));
    v9 = (_QWORD *)(((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  return swift_release(*v9);
}

uint64_t sub_10005128C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v11;
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v12;
    v13 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v15 = v13;
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v17 = (_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v24[1];
    *v23 = *v24;
    v23[1] = v14;
    swift_retain(v19);
    swift_retain(v22);
    v16 = 0;
  }
  swift_retain(v14);
  *(_BYTE *)(a1 + v7) = v16;
  return a1;
}

uint64_t sub_1000513E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v18 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v18;
      v19 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v19;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v20;
      *(_QWORD *)(a1 + 72) = v21;
      *(_BYTE *)(a1 + v8) = 1;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v22 = v19;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v23 = (_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      v21 = v30[1];
      *v29 = *v30;
      v29[1] = v21;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain(v25);
      swift_retain(v28);
    }
    swift_retain(v21);
  }
  return a1;
}

_OWORD *sub_1000515F8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_OWORD *)(a2 + 48);
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v10;
    a1[4] = *(_OWORD *)(a2 + 64);
    v11 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v11;
    v12 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, uint64_t))(v5 + 32))(a1, a2);
    v12 = 0;
    v13 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v14 = (_OWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v7) = v12;
  return a1;
}

uint64_t sub_1000516F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      LOBYTE(v14) = 0;
      v18 = (_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v19 = (_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *v18 = *v19;
      v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
      v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
      *v20 = *v21;
      *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    }
    *(_BYTE *)(a1 + v8) = v14;
  }
  return a1;
}

uint64_t sub_100051898(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  int v7;
  int v9;
  int v10;
  unsigned int v11;

  v3 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v3 <= 0x50)
    v3 = 80;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_20;
  v4 = v3 | 1;
  v5 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    v6 = (a2 + ~(-1 << v5) - 254) >> v5;
    if (v6 > 0xFFFE)
    {
      v7 = *(_DWORD *)&a1[v4];
      if (!v7)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v6 > 0xFE)
    {
      v7 = *(unsigned __int16 *)&a1[v4];
      if (!*(_WORD *)&a1[v4])
        goto LABEL_20;
      goto LABEL_13;
    }
    if (!v6)
      goto LABEL_20;
  }
  v7 = a1[v4];
  if (!a1[v4])
  {
LABEL_20:
    v11 = a1[v3];
    if (v11 >= 2)
      return (v11 ^ 0xFF) + 1;
    else
      return 0;
  }
LABEL_13:
  v9 = (v7 - 1) << v5;
  if (v4 >= 4)
    v9 = 0;
  if ((_DWORD)v4 == 1)
    v10 = *a1;
  else
    v10 = *(_DWORD *)a1;
  return (v10 | v9) + 255;
}

void sub_100051980(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v5 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v5 <= 0x50)
    v5 = 80;
  v6 = v5 | 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    v8 &= ~(-1 << (8 * v6));
    bzero(a1, v6);
    if ((_DWORD)v6 == 1)
    {
      *a1 = v8;
      goto LABEL_18;
    }
  }
  else
  {
    bzero(a1, v5 | 1);
  }
  *(_DWORD *)a1 = v8;
LABEL_18:
  __asm { BR              X10 }
}

uint64_t sub_100051B24(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 80;
  if (((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x50)
    v2 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v3 = *((unsigned __int8 *)a1 + v2);
  v4 = v2 & 0xFFFFFFF8;
  if (v3 >= 2 && v4 != 0)
    return (*a1 + 2);
  return v3;
}

void sub_100051B7C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char v5;
  unsigned int v6;

  v4 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v4 <= 0x50)
    v4 = 80;
  if (a2 > 1)
  {
    if ((_DWORD)v4)
      v5 = 2;
    else
      v5 = a2;
    if ((_DWORD)v4)
      v6 = a2 - 2;
    else
      v6 = 0;
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_100051C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for ActionMenu.ElementBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.ElementBuilder);
}

uint64_t sub_100051C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 32);
  v11[0] = *(_QWORD *)(v0 + 40);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 48);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 72) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v9, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100051D04(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v5;
  v2[3] = v4;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + ((v8 + 72) & ~v8);
  v12 = (_QWORD *)swift_task_alloc(dword_1004BA714);
  v2[6] = v12;
  *v12 = v2;
  v12[1] = sub_100051E3C;
  return sub_100050BFC(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_100051DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100051E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100051E40@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_100050DD8(a1, a2);
}

void *MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  void *v2;

  v2 = sub_100053464(a1);
  swift_bridgeObjectRelease(a1);
  return v2;
}

uint64_t static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  return sub_100053874(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t MusicItem.metricsTargetIdentifier.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  __chkstk_darwin(a1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v5 = sub_1000057B4(&qword_1004BA720);
  if ((swift_dynamicCast(&v12, v3, a1, v5, 6) & 1) == 0)
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_10000FE2C((uint64_t)&v12, (uint64_t *)&unk_1004C0560);
    return 0x497972617262694CLL;
  }
  v6 = *((_QWORD *)&v13 + 1);
  v7 = v14;
  sub_1000096A0(&v12, *((uint64_t *)&v13 + 1));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v9)
  {
    sub_10000970C(&v12);
    return 0x497972617262694CLL;
  }
  v10 = v8;
  sub_10000970C(&v12);
  return v10;
}

uint64_t sub_100051FDC()
{
  return sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, qword_1004BA838);
}

uint64_t sub_100051FF0()
{
  return sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for Album, &qword_1004BA800);
}

uint64_t sub_100052004(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = a1(0);
  v3 = sub_1000057B4(a2);
  v4 = String.init<A>(describing:)(v19, v3);
  v6 = v5;
  sub_100053ABC(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_100053B44(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_100053BE0();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t MusicItem.metricsContentType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t MetatypeMetadata;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = swift_getDynamicType(v1, a1, 0);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v4 = String.init<A>(describing:)(v19, MetatypeMetadata);
  v6 = v5;
  sub_100053ABC(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_100053B44(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_100053BE0();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t Playlist.Entry.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v0 = type metadata accessor for UploadedVideo(0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v31 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UploadedAudio(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v18);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v21 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    if (v21 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
      v23 = v42;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v20, v42);
      v22 = sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_1004BA810);
      v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    }
    else
    {
      if (v21 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v25 = v40;
        v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v15, v20, v41);
        v22 = sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_1004BA808);
        v24 = *(void (**)(char *, uint64_t))(v25 + 8);
        v26 = v15;
LABEL_15:
        v24(v26, v23);
        return v22;
      }
      if (v21 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v37;
        v27 = v38;
        v23 = v39;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v20, v39);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode;
        v29 = (uint64_t *)&unk_1004BA820;
      }
      else if (v21 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v34;
        v27 = v35;
        v23 = v36;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v20, v36);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio;
        v29 = (uint64_t *)&unk_1004BA828;
      }
      else
      {
        if (v21 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
          return 1735290739;
        }
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v31;
        v27 = v32;
        v23 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v20, v33);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo;
        v29 = (uint64_t *)&unk_1004BA830;
      }
      v22 = sub_100052004(v28, v29);
      v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    }
    v26 = v12;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v20, v6);
  v22 = sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, &qword_1004BA818);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v22;
}

uint64_t Actions.MetricsReportingContext.actionContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_100053C24(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Actions.MetricsReportingContext.actionContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_100053C48(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t Actions.MetricsReportingContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Actions.MetricsReportingContext(0);
  return sub_10000FEB4(v1 + *(int *)(v3 + 20), a1, &qword_1004BA730);
}

uint64_t Actions.MetricsReportingContext.page.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  return sub_100053CA8(a1, v3);
}

CFRange (__swiftcall *Actions.MetricsReportingContext.page.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.pageContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.MetricsReportingContext.pageContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.pageContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.locations.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 28);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.locations.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.impressions.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.impressions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 32);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.impressions.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 36));
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for Actions.MetricsReportingContext(0);
  v8 = v3 + *(int *)(result + 36);
  *(_BYTE *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_QWORD *)(v8 + 16) = a3;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.sharedListeningContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char *v23;

  v16 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[6]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v16[7];
  *(_QWORD *)((char *)a9 + v20) = 0;
  v21 = v16[8];
  *(_QWORD *)((char *)a9 + v21) = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_100053CA8(a3, v17);
  swift_bridgeObjectRelease(v19[1]);
  *v19 = a4;
  v19[1] = a5;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v20));
  *(_QWORD *)((char *)a9 + v20) = a6;
  result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v21));
  *(_QWORD *)((char *)a9 + v21) = a7;
  v23 = (char *)a9 + v16[9];
  *v23 = a8;
  *((_QWORD *)v23 + 1) = a10;
  *((_QWORD *)v23 + 2) = a11;
  return result;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466390, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C79616C70;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_100052B4C(char *a1, char *a2)
{
  return sub_100048850(*a1, *a2);
}

Swift::Int sub_100052B58()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100052BD8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100052C34()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100052CB0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466390, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100052D0C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7972617262696CLL;
  if (*v1)
    v2 = 0x7473696C79616C70;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

BOOL MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004663E0, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.PlayType.rawValue.getter()
{
  return 0x7453657461657263;
}

Swift::Int sub_100052DB4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_100052E10(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7453657461657263, 0xED00006E6F697461);
}

Swift::Int sub_100052E34()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_100052E8C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466418, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100052EDC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "createStation");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.NavigationType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100052F38 + 4 * byte_1003C9E30[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_100052F38()
{
  return 0x747369747241;
}

uint64_t sub_100052F4C()
{
  return 0x7473696C79616C50;
}

uint64_t sub_100052F64()
{
  return 0x434174726F706552;
}

void sub_100052F88(char *a1)
{
  sub_1000488F4(*a1);
}

void sub_100052F94()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100052FDC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_100053054()
{
  __asm { BR              X10 }
}

uint64_t sub_10005308C(uint64_t a1)
{
  String.hash(into:)(a1, 0x747369747241, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1000530F0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100053134()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1000531AC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000531D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100053204 + 4 * byte_1003C9E40[*v0]))();
}

void sub_100053204(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747241;
  a1[1] = 0xE600000000000000;
}

void sub_10005321C(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C50;
  a1[1] = 0xE800000000000000;
}

void sub_100053238(char *a1@<X8>)
{
  strcpy(a1, "ReportAConcern");
  a1[15] = -18;
}

uint64_t Track.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for MusicVideo(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Track(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    v15 = sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_1004BA808);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    v15 = sub_100052004((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_1004BA810);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 1735290739;
  }
  return v15;
}

void *sub_100053464(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_100053534 + *((int *)qword_100053850 + *(unsigned __int8 *)(swift_bridgeObjectRetain() + 48));
    __asm { BR              X8 }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100053874(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;

  v35 = a6;
  v36 = a8;
  v38 = a3;
  v39 = a4;
  v31 = a2;
  v37 = a1;
  v12 = sub_1000057B4(&qword_1004BA730);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v14;
  v15 = sub_1000057B4(&qword_1004B99B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v17;
  v18 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v18);
  v33 = (uint64_t)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FEB4(a5, (uint64_t)v17, &qword_1004B99B0);
  v20 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v21 = *(uint64_t *)((char *)a10 + v20[7]);
  v22 = *a10;
  v23 = a10[1];
  sub_10000FEB4((uint64_t)a10 + v20[5], (uint64_t)v14, &qword_1004BA730);
  v24 = *(uint64_t *)((char *)a10 + v20[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100053C24(v22, v23);
  v25 = v35;
  v26 = v36;
  sub_100055608(v35, a7, v36, a9);
  swift_bridgeObjectRetain();
  v30 = v24;
  v27 = v33;
  *((_QWORD *)&v29 + 1) = a7;
  *(_QWORD *)&v29 = v25;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(v37, v31, v38, v39, (uint64_t)v34, v21, v22, v23, v33, v29, v26, a9, (uint64_t)v32, v30);
  if (qword_1004B8AE8 != -1)
    swift_once(&qword_1004B8AE8, sub_1000BF680);
  MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(v27, *(uint64_t *)((char *)a10 + v20[6]), *(uint64_t *)((char *)a10 + v20[6] + 8), *((_BYTE *)a10 + v20[9]), *(uint64_t *)((char *)a10 + v20[9] + 8), *(uint64_t *)((char *)a10 + v20[9] + 16));
  return sub_100034960(v27, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_100053ABC(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_100053B44(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v8 & 1) != 0)
      result = v7;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

unint64_t sub_100053BE0()
{
  unint64_t result;

  result = qword_1004BA728;
  if (!qword_1004BA728)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1004BA728);
  }
  return result;
}

uint64_t sub_100053C24(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_100053C34(a1, a2);
  return a1;
}

uint64_t sub_100053C34(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100053C48(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_100053C58(a1, a2);
  return a1;
}

uint64_t sub_100053C58(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t type metadata accessor for Actions.MetricsReportingContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1004BA7B0;
  if (!qword_1004BA7B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.MetricsReportingContext);
  return result;
}

uint64_t sub_100053CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BA730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100466450, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_100053D3C()
{
  unint64_t result;

  result = qword_1004BA738;
  if (!qword_1004BA738)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.DestinationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType);
    atomic_store(result, (unint64_t *)&qword_1004BA738);
  }
  return result;
}

unint64_t sub_100053D84()
{
  unint64_t result;

  result = qword_1004BA740;
  if (!qword_1004BA740)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.PlayType, &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType);
    atomic_store(result, (unint64_t *)&qword_1004BA740);
  }
  return result;
}

unint64_t sub_100053DCC()
{
  unint64_t result;

  result = qword_1004BA748;
  if (!qword_1004BA748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.NavigationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType);
    atomic_store(result, (unint64_t *)&qword_1004BA748);
  }
  return result;
}

uint64_t *_s23MetricsReportingContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    if (v7 > 9)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_1000057B4(&qword_1004BA730);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v42 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v11[6];
      __dst = (char *)v9 + v17;
      v18 = (char *)v10 + v17;
      v19 = type metadata accessor for URL(0);
      v39 = *(_QWORD *)(v19 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40(v18, 1, v19))
      {
        v20 = sub_1000057B4(&qword_1004B99B0);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v19);
      }
      *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
      v21 = v11[8];
      v22 = (_QWORD *)((char *)v9 + v21);
      v23 = (_QWORD *)((char *)v10 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
      v25 = v11[10];
      v26 = (_QWORD *)((char *)v9 + v25);
      v27 = (_QWORD *)((char *)v10 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v9, 0, 1, v11);
    }
    v30 = a3[6];
    v31 = a3[7];
    v32 = (uint64_t *)((char *)a1 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    v35 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s23MetricsReportingContextVwxx(uint64_t a1, int *a2)
{
  unint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >= 0xA)
    swift_bridgeObjectRelease(v4);
  v5 = a1 + a2[5];
  v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
    v7 = v5 + v6[6];
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[10] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

_QWORD *_s23MetricsReportingContextVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v40;

  v6 = a2[1];
  if (v6 > 9)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_1000057B4(&qword_1004BA730);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = v10[6];
    __dst = (char *)v8 + v15;
    v16 = (char *)v9 + v15;
    v17 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v17 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v16, 1, v17))
    {
      v18 = sub_1000057B4(&qword_1004B99B0);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
    }
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    v19 = v10[8];
    v20 = (_QWORD *)((char *)v8 + v19);
    v21 = (_QWORD *)((char *)v9 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v8 + v10[9]) = *((_BYTE *)v9 + v10[9]);
    v23 = v10[10];
    v24 = (_QWORD *)((char *)v8 + v23);
    v25 = (_QWORD *)((char *)v9 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v8, 0, 1, v10);
  }
  v28 = a3[6];
  v29 = a3[7];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v33 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23MetricsReportingContextVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v61;
  char *v62;
  void *v63;
  char *__dst;
  int *v65;
  int *v66;

  v6 = a1[1];
  v7 = a2[1];
  if (v6 == 9)
  {
    if (v7 >= 0xA)
      goto LABEL_16;
    goto LABEL_6;
  }
  if (v7 == 9)
  {
    sub_100054900((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6 < 9)
  {
    if (v7 >= 9)
    {
LABEL_16:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  if (v7 < 9)
  {
    sub_10000FE2C((uint64_t)a1, &qword_1004BA750);
    goto LABEL_6;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
LABEL_7:
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100034960((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_13;
    }
    v66 = a3;
    *v9 = *v10;
    v21 = v9[1];
    v9[1] = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v21);
    v9[2] = v10[2];
    v22 = v9[3];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v22);
    v23 = v11[6];
    v24 = (char *)v9 + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v63 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v63, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v63, 0, 1, v26);
        goto LABEL_30;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B99B0) - 8) + 64);
      v31 = v63;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v63, v25, v26);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v63, v26);
      v30 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B99B0) - 8) + 64);
      v31 = v63;
    }
    memcpy(v31, v25, v30);
LABEL_30:
    v39 = v11[7];
    v40 = *(_QWORD *)((char *)v9 + v39);
    *(_QWORD *)((char *)v9 + v39) = *(_QWORD *)((char *)v10 + v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    v41 = v11[8];
    v42 = (_QWORD *)((char *)v9 + v41);
    v43 = (_QWORD *)((char *)v10 + v41);
    *v42 = *v43;
    v44 = v42[1];
    v42[1] = v43[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v44);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v45 = v11[10];
    v46 = (_QWORD *)((char *)v9 + v45);
    v47 = (_QWORD *)((char *)v10 + v45);
    *v46 = *v47;
    v48 = v46[1];
    v46[1] = v47[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v48);
    a3 = v66;
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_13:
    v20 = sub_1000057B4(&qword_1004BA730);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_31;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v16 = v11[6];
  __dst = (char *)v9 + v16;
  v65 = a3;
  v62 = (char *)v10 + v16;
  v17 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v62, 1, v17))
  {
    v19 = sub_1000057B4(&qword_1004B99B0);
    memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v62, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v17);
  }
  a3 = v65;
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  v32 = v11[8];
  v33 = (_QWORD *)((char *)v9 + v32);
  v34 = (_QWORD *)((char *)v10 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  v35 = v11[10];
  v36 = (_QWORD *)((char *)v9 + v35);
  v37 = (_QWORD *)((char *)v10 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v9, 0, 1, v11);
LABEL_31:
  v49 = a3[6];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  *v50 = *v51;
  v52 = v50[1];
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v52);
  v53 = a3[7];
  v54 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v54);
  v55 = a3[8];
  v56 = *(_QWORD *)((char *)a1 + v55);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v56);
  v57 = a3[9];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *v58 = *v59;
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
  return a1;
}

uint64_t sub_100054900(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionContext(a1);
  return a1;
}

_OWORD *_s23MetricsReportingContextVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_1000057B4(&qword_1004BA730);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = v9[6];
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1000057B4(&qword_1004B99B0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *((_BYTE *)v7 + v9[9]) = *((_BYTE *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  return a1;
}

uint64_t _s23MetricsReportingContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 == 9)
    goto LABEL_7;
  if (v7 == 9)
  {
    sub_100054900(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 9)
    goto LABEL_7;
  if (v7 < 9)
  {
    sub_10000FE2C(a1, &qword_1004BA750);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRelease(v6);
LABEL_8:
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100034960((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_14;
    }
    v23 = v10[1];
    v24 = v9[1];
    *v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = v10[3];
    v26 = v9[3];
    v9[2] = v10[2];
    v9[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = v11[6];
    v28 = (char *)v9 + v27;
    v29 = (char *)v10 + v27;
    v30 = type metadata accessor for URL(0);
    v63 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
    __dsta = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 32))(__dsta, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v30);
        goto LABEL_26;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B99B0) - 8) + 64);
      v34 = __dsta;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 40))(__dsta, v29, v30);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v63 + 8))(__dsta, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_1000057B4(&qword_1004B99B0) - 8) + 64);
      v34 = __dsta;
    }
    memcpy(v34, v29, v33);
LABEL_26:
    v35 = v11[7];
    v36 = *(_QWORD *)((char *)v9 + v35);
    *(_QWORD *)((char *)v9 + v35) = *(_QWORD *)((char *)v10 + v35);
    swift_bridgeObjectRelease(v36);
    v37 = v11[8];
    v38 = (_QWORD *)((char *)v9 + v37);
    v39 = (_QWORD *)((char *)v10 + v37);
    v41 = *v39;
    v40 = v39[1];
    v42 = v38[1];
    *v38 = v41;
    v38[1] = v40;
    swift_bridgeObjectRelease(v42);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v43 = v11[10];
    v44 = (_QWORD *)((char *)v9 + v43);
    v45 = (_QWORD *)((char *)v10 + v43);
    v47 = *v45;
    v46 = v45[1];
    v48 = v44[1];
    *v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease(v48);
    goto LABEL_27;
  }
  if (v15)
  {
LABEL_14:
    v22 = sub_1000057B4(&qword_1004BA730);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_27;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  v17 = v11[6];
  __dst = (char *)v9 + v17;
  v18 = (char *)v10 + v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_1000057B4(&qword_1004B99B0);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  *(_OWORD *)((char *)v9 + v11[10]) = *(_OWORD *)((char *)v10 + v11[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_27:
  v49 = a3[6];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  v55 = a3[7];
  v56 = *(_QWORD *)(a1 + v55);
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  swift_bridgeObjectRelease(v56);
  v57 = a3[8];
  v58 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  swift_bridgeObjectRelease(v58);
  v59 = a3[9];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  *(_OWORD *)(v60 + 8) = *(_OWORD *)(v61 + 8);
  return a1;
}

uint64_t _s23MetricsReportingContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054EE8);
}

uint64_t sub_100054EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1000057B4(&qword_1004BA730);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s23MetricsReportingContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054F88);
}

uint64_t sub_100054F88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1000057B4(&qword_1004BA730);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_10005500C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1003CA068;
  sub_1000550A0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1003CA080;
    v4[3] = &unk_1003CA098;
    v4[4] = &unk_1003CA098;
    v4[5] = &unk_1003CA0B0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_1000550A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1004BA7C0)
  {
    v2 = type metadata accessor for MetricsEvent.Page(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1004BA7C0);
  }
}

uint64_t sub_1000550F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_10005511C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_10005511C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000550F8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000550F8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10005511C(v6, v7, v8);
  return a1;
}

__n128 _s3KeyOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10005511C(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1000552B0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1000552C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key;
}

uint64_t _s3KeyO15DestinationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10005533C + 4 * byte_1003C9E49[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100055370 + 4 * byte_1003C9E44[v4]))();
}

uint64_t sub_100055370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100055378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100055380);
  return result;
}

uint64_t sub_10005538C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100055394);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100055398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000553A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page.DisplayType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s3KeyO8PlayTypeOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100055450 + 4 * byte_1003C9E4E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100055470 + 4 * byte_1003C9E53[v4]))();
}

_BYTE *sub_100055450(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100055470(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100055478(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100055480(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100055488(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100055490(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType;
}

uint64_t _s3KeyO14NavigationTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s3KeyO14NavigationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100055588 + 4 * byte_1003C9E5D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1000555BC + 4 * byte_1003C9E58[v4]))();
}

uint64_t sub_1000555BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000555C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000555CCLL);
  return result;
}

uint64_t sub_1000555D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000555E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000555E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000555EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType;
}

id sub_100055608(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (BYTE1(a4) != 255)
    return sub_10005561C(result, a2, a3, a4, SBYTE1(a4));
  return result;
}

id sub_10005561C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a5 == 1)
    return sub_100055648(result, a2, a3);
  return result;
}

id sub_100055648(id result, uint64_t a2, uint64_t a3)
{
  id v3;

  if (result)
  {
    v3 = result;
    swift_bridgeObjectRetain(a3);
    return v3;
  }
  return result;
}

uint64_t View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_OWORD *, uint64_t, uint64_t);
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  char **v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v58;
  char *v59;
  char **v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t (*v71)(_OWORD *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(_QWORD, _QWORD, _QWORD);
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[10];
  _OWORD v91[5];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;

  v75 = a9;
  v78 = a7;
  v68 = a2;
  v69 = (char *)a4;
  v67 = a1;
  v13 = type metadata accessor for ActionMenu(255, a6, a8, a4);
  v14 = type metadata accessor for Optional(0, v13);
  v71 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15 = v71(v90, a3, v14);
  v64 = v90[1];
  v65 = v90[3];
  v66 = v90[5];
  v62 = (id)v90[6];
  v63 = v90[9];
  v60 = *(char ***)(a5 - 8);
  v16 = __chkstk_darwin(v15);
  v59 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v58 = (char *)&v58 - v18;
  v20 = type metadata accessor for ActionMenuView(255, a6, a8, v19);
  *(_QWORD *)&v92 = a6;
  *((_QWORD *)&v92 + 1) = a6;
  *(_QWORD *)&v93 = a8;
  *((_QWORD *)&v93 + 1) = a8;
  v21 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v92);
  v22 = type metadata accessor for Optional(255, v21);
  v23 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v22);
  v24 = type metadata accessor for ModifiedContent(255, v20, v23);
  v25 = type metadata accessor for Section(255, &type metadata for Text, v24, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v20);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v23);
  v88 = WitnessTable;
  v89 = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v85 = &protocol witness table for Text;
  v86 = v28;
  v87 = &protocol witness table for EmptyView;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v25);
  *(_QWORD *)&v92 = a5;
  *((_QWORD *)&v92 + 1) = v25;
  v77 = v25;
  v30 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))v29;
  *(_QWORD *)&v93 = v78;
  *((_QWORD *)&v93 + 1) = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v92, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v61 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v32 = __chkstk_darwin(OpaqueTypeMetadata2);
  v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v36 = (char *)&v58 - v35;
  v37 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a5);
  v72 = *(_QWORD *)(v37 - 8);
  v73 = v37;
  __chkstk_darwin(v37);
  v76 = (char *)&v58 - v38;
  v70 = a3;
  v39 = v71(v91, a3, v14);
  if (*((_QWORD *)&v91[0] + 1))
  {
    v60 = &v58;
    v94 = v91[2];
    v95 = v91[3];
    v96 = v91[4];
    v92 = v91[0];
    v93 = v91[1];
    __chkstk_darwin(v39);
    v71 = v30;
    *(&v58 - 10) = (char *)a5;
    *(&v58 - 9) = (char *)a6;
    v40 = (uint64_t)v78;
    *(&v58 - 8) = v78;
    *(&v58 - 7) = (char *)a8;
    *(&v58 - 6) = v74;
    *(&v58 - 5) = (char *)&v92;
    v41 = v68;
    *(&v58 - 4) = v67;
    *(&v58 - 3) = v41;
    *(&v58 - 2) = v69;
    v42 = v62;
    swift_retain(v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = swift_checkMetadataState(0, v77);
    v30 = v71;
    View.contextMenu<A>(menuItems:)(sub_10005607C, &v58 - 12, a5, v43, v40, v71);
    v81 = a5;
    v82 = v43;
    v83 = v40;
    v84 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v45 = v61;
    v46 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v46(v36, v34, OpaqueTypeMetadata2);
    v47 = *(void (**)(char *, uint64_t))(v45 + 8);
    v47(v34, OpaqueTypeMetadata2);
    v46(v34, v36, OpaqueTypeMetadata2);
    sub_100055EF4((uint64_t)v34, OpaqueTypeMetadata2, a5, OpaqueTypeConformance2, v40);
    sub_100056A20(v70);
    v47(v34, OpaqueTypeMetadata2);
    v47(v36, OpaqueTypeMetadata2);
  }
  else
  {
    v48 = v60;
    v49 = v60[2];
    v50 = v58;
    ((void (*)(char *, char *, uint64_t))v49)(v58, v74, a5);
    v51 = (uint64_t)v59;
    ((void (*)(char *, char *, uint64_t))v49)(v59, v50, a5);
    v40 = (uint64_t)v78;
    *(_QWORD *)&v92 = a5;
    *((_QWORD *)&v92 + 1) = v77;
    *(_QWORD *)&v93 = v78;
    *((_QWORD *)&v93 + 1) = v30;
    v52 = swift_getOpaqueTypeConformance2(&v92, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    sub_100055FB8(v51, OpaqueTypeMetadata2, a5, v52, v40);
    v53 = v48[1];
    ((void (*)(uint64_t, uint64_t))v53)(v51, a5);
    ((void (*)(char *, uint64_t))v53)(v50, a5);
  }
  v81 = a5;
  v82 = v77;
  v83 = v40;
  v84 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
  v79 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v80 = v40;
  v54 = v73;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v73);
  v55 = v72;
  v56 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v75, v76, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v54);
}

uint64_t type metadata accessor for ActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView);
}

uint64_t type metadata accessor for ActionMenuView.Excluding(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ActionMenuView.Excluding);
}

uint64_t sub_100055BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a6;
  v35 = a8;
  v31 = a4;
  v32 = a5;
  v30 = a3;
  v33 = a1;
  v36 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_100055DA4(a2, v30, v31, v32, v34, a7, v35, a10);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_100055DA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  unint64_t v18;
  _QWORD v20[10];
  _QWORD v21[4];
  _QWORD v22[2];

  if (a3)
    v10 = a2;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (a3)
    v11 = a3;
  v22[0] = v10;
  v22[1] = v11;
  v20[2] = a5;
  v20[3] = a6;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a1;
  v20[7] = a4;
  v12 = type metadata accessor for ActionMenuView(255, a6, a8, a4);
  swift_bridgeObjectRetain();
  v21[0] = a6;
  v21[1] = a6;
  v21[2] = a8;
  v21[3] = a8;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v21);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v20[8] = swift_getWitnessTable(&unk_1003CA1D0, v12);
  v20[9] = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v18 = sub_10002D3FC();
  return Section<>.init<A>(_:content:)(v22, sub_10005A5E8, v20, v16, &type metadata for String, WitnessTable, v18);
}

uint64_t sub_100055EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100055EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100055FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_10005607C@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_100055BBC(v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[5];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v81 = a9;
  v76 = a7;
  v77 = a8;
  v74 = a5;
  v75 = a6;
  v72 = a2;
  v73 = a4;
  v85 = a3;
  v71 = a1;
  v15 = a13;
  v78 = a12;
  v16 = a10;
  v69 = *(_QWORD *)(a10 - 8);
  v17 = __chkstk_darwin(a1);
  v68 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v67 = (char *)&v66 - v19;
  v21 = type metadata accessor for ActionMenuView(255, a11, a14, v20);
  *(_QWORD *)&v101 = a11;
  *((_QWORD *)&v101 + 1) = a11;
  *(_QWORD *)&v102 = a14;
  *((_QWORD *)&v102 + 1) = a14;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v101);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v21, v24);
  v26 = type metadata accessor for Section(255, &type metadata for Text, v25, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v21);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v98 = WitnessTable;
  v99 = v28;
  v29 = v25;
  v30 = v78;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v95 = &protocol witness table for Text;
  v96 = v31;
  v97 = &protocol witness table for EmptyView;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v26);
  *(_QWORD *)&v101 = a10;
  *((_QWORD *)&v101 + 1) = v26;
  v83 = v26;
  v84 = a15;
  *(_QWORD *)&v102 = v30;
  *((_QWORD *)&v102 + 1) = a13;
  v86 = v32;
  *(_QWORD *)&v103 = v32;
  *((_QWORD *)&v103 + 1) = a15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v70 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v34 = __chkstk_darwin(OpaqueTypeMetadata2);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v66 - v37;
  v39 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a10);
  v80 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v79 = (char *)&v66 - v40;
  v42 = type metadata accessor for ActionMenu(255, a11, a14, v41);
  v43 = type metadata accessor for Optional(0, v42);
  v44 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v100, v85, v43);
  if (*((_QWORD *)&v100[0] + 1))
  {
    v68 = (char *)&v66;
    v103 = v100[2];
    v104 = v100[3];
    v105 = v100[4];
    v101 = v100[0];
    v102 = v100[1];
    v45 = __chkstk_darwin(v44);
    v66 = &v66 - 14;
    v67 = v38;
    *(&v66 - 12) = (_QWORD *)a10;
    *(&v66 - 11) = (_QWORD *)a11;
    *(&v66 - 10) = v30;
    *(&v66 - 9) = (_QWORD *)a13;
    v46 = v30;
    v47 = v84;
    *(&v66 - 8) = (_QWORD *)a14;
    *(&v66 - 7) = v47;
    v69 = v39;
    *(&v66 - 6) = v82;
    *(&v66 - 5) = &v101;
    __chkstk_darwin(v45);
    *(&v66 - 8) = (_QWORD *)a10;
    *(&v66 - 7) = (_QWORD *)a11;
    *(&v66 - 6) = v46;
    *(&v66 - 5) = (_QWORD *)a13;
    v48 = swift_allocObject(&unk_10046B800, 32, 7);
    v49 = v77;
    *(_QWORD *)(v48 + 16) = v76;
    *(_QWORD *)(v48 + 24) = v49;
    sub_100056980(v85);
    swift_retain(v49);
    v50 = swift_checkMetadataState(0, v83);
    View.contextMenu<A, B>(menuItems:preview:previewAction:)(sub_100056844, v66, sub_100056948, &v66 - 10, sub_10001122C, v48, a10, v50, v46, a13, v86, v47);
    swift_release(v48);
    v89 = a10;
    v90 = v50;
    v91 = v46;
    v92 = a13;
    v93 = v86;
    v94 = v47;
    v30 = v46;
    v15 = a13;
    v16 = a10;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v52 = v70;
    v53 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v54 = v67;
    v53(v67, v36, OpaqueTypeMetadata2);
    v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v36, OpaqueTypeMetadata2);
    v53(v36, v54, OpaqueTypeMetadata2);
    v56 = v79;
    v57 = OpaqueTypeConformance2;
    v39 = v69;
    sub_100055EF4((uint64_t)v36, OpaqueTypeMetadata2, a10, v57, a13);
    sub_100056A20(v85);
    v55(v36, OpaqueTypeMetadata2);
    v55(v54, OpaqueTypeMetadata2);
  }
  else
  {
    v58 = v69;
    v59 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v60 = v67;
    v59(v67, (char *)v82, a10);
    v61 = (uint64_t)v68;
    v59(v68, v60, a10);
    *(_QWORD *)&v101 = a10;
    *((_QWORD *)&v101 + 1) = v83;
    *(_QWORD *)&v102 = v30;
    *((_QWORD *)&v102 + 1) = a13;
    *(_QWORD *)&v103 = v86;
    *((_QWORD *)&v103 + 1) = v84;
    v62 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v56 = v79;
    sub_100055FB8(v61, OpaqueTypeMetadata2, a10, v62, a13);
    v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v63(v61, a10);
    v63((uint64_t)v60, a10);
  }
  v89 = v16;
  v90 = v83;
  v91 = v30;
  v92 = v15;
  v93 = v86;
  v94 = v84;
  v87 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  v88 = v15;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39);
  v64 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v81, v56, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v56, v39);
}

uint64_t sub_100056660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a1;
  v35 = a6;
  v32 = a4;
  v33 = a5;
  v36 = a8;
  v30 = a3;
  v31 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_100055DA4(a2, v30, v32, v33, v35, a7, v31, a10);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_100056844@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_100056660(v1[8], v1[9], v1[10], v1[11], v1[12], v1[2], v1[3], a1, v1[5], v1[6]);
}

uint64_t sub_100056880@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void (*)(void))__chkstk_darwin(v5);
  v10 = (char *)&v14 - v9;
  v8();
  v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t sub_100056948@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100056880(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10005695C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100056980(uint64_t a1)
{
  sub_1000569C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_1000569C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v13;
  uint64_t result;

  if (a2)
  {
    v13 = a7;
    swift_retain(a10);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_100056A20(uint64_t a1)
{
  sub_100056A68(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

void sub_100056A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_release(a10);

  }
}

_QWORD *sub_100056ACC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, __int128 *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *, __int128 *, uint64_t);
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[7];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  sub_10005107C((uint64_t)a1);
  sub_100056D34(a1, 1, 0, 0, a3, a4, (uint64_t)v39);
  v45 = v39[4];
  v46 = v39[5];
  v47 = v39[6];
  *(_QWORD *)&v48 = v40;
  v41 = v39[0];
  v42 = v39[1];
  v43 = v39[2];
  v44 = v39[3];
  *(_QWORD *)&v50 = a3;
  *((_QWORD *)&v50 + 1) = a3;
  *(_QWORD *)&v51 = a4;
  *((_QWORD *)&v51 + 1) = a4;
  v10 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)&v50);
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)(v11 + 16) = a2;
  v13 = type metadata accessor for ActionMenuView(0, a3, a4, v12);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v13);
  v15 = swift_getWitnessTable(&unk_1003CA198, v10);
  View.environmentObject<A>(_:)(&v50, v11, v13, v10, WitnessTable, v15);
  swift_release(v11);
  sub_10005A5F8(v39);
  v47 = v56;
  v48 = v57;
  v43 = v52;
  v44 = v53;
  v45 = v54;
  v46 = v55;
  v41 = v50;
  v42 = v51;
  v27 = v56;
  v28 = v57;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v49 = v58;
  v29 = v58;
  v21 = v50;
  v22 = v51;
  v16 = type metadata accessor for Optional(255, v10);
  v17 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v16);
  v18 = type metadata accessor for ModifiedContent(0, v13, v17);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v19 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(&v30, &v21, v18);
  sub_10005A67C(&v41);
  v56 = v36;
  v57 = v37;
  v52 = v32;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  v50 = v30;
  v51 = v31;
  v27 = v36;
  v28 = v37;
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v58 = v38;
  v29 = v38;
  v21 = v30;
  v22 = v31;
  v19(a5, &v21, v18);
  return sub_10005A67C(&v50);
}

__n128 sub_100056D34@<Q0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  __n128 result;
  uint64_t v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];

  v21 = a1[1];
  v22 = *a1;
  v20 = a1[2];
  v12 = *((_QWORD *)a1 + 6);
  v13 = *((_BYTE *)a1 + 56) & 1;
  v23[0] = a5;
  v23[1] = a5;
  v23[2] = a6;
  v23[3] = a6;
  v14 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v23);
  WitnessTable = swift_getWitnessTable(&unk_1003CA198, v14);
  v19 = (__n128)a1[4];
  v16 = EnvironmentObject.init()(v14, WitnessTable);
  *(_OWORD *)a7 = v22;
  *(_OWORD *)(a7 + 16) = v21;
  *(_OWORD *)(a7 + 32) = v20;
  *(_QWORD *)(a7 + 48) = v12;
  *(_BYTE *)(a7 + 56) = v13;
  result = v19;
  *(__n128 *)(a7 + 64) = v19;
  *(_BYTE *)(a7 + 80) = a2;
  *(_QWORD *)(a7 + 88) = a3;
  *(_QWORD *)(a7 + 96) = a4;
  *(_QWORD *)(a7 + 104) = v16;
  *(_QWORD *)(a7 + 112) = v18;
  return result;
}

uint64_t sub_100056E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73[16];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;

  v63 = a7;
  v66 = a6;
  v67 = a5;
  v65 = a4;
  v68 = a3;
  v62 = a2;
  v61 = a1;
  v72 = a9;
  v55 = a11;
  v54 = a10;
  v71 = type metadata accessor for MenuOrder(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a8 + 16);
  v13 = *(_QWORD *)(a8 + 24);
  v16 = type metadata accessor for ActionMenuView(255, v14, v13, v15);
  v17 = type metadata accessor for Section(255, &type metadata for Text, v16, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v16);
  v87 = &protocol witness table for Text;
  v88 = WitnessTable;
  v89 = &protocol witness table for EmptyView;
  v58 = v17;
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v83 = a10;
  v84 = v17;
  v85 = a11;
  v86 = v57;
  v19 = type metadata accessor for Menu(0, &v83);
  v60 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v56 = (char *)&v51 - v20;
  v21 = v14;
  v83 = v14;
  v84 = v14;
  v85 = v13;
  v86 = v13;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v83);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(0, v19, v24);
  v59 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v51 - v26);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v19);
  v51 = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v81 = v28;
  v82 = v29;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v83 = v25;
  v84 = v52;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v83, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 0);
  v53 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v31 = __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v51 - v34;
  v36 = v54;
  v74 = v21;
  v75 = v54;
  v37 = v55;
  v76 = v13;
  v77 = v55;
  v78 = v61;
  v79 = v62;
  v80 = v64;
  v38 = v63;
  v39 = swift_retain(v63);
  v50 = v37;
  v40 = v56;
  Menu.init(onPresentationChanged:content:label:)(v66, v38, sub_1000574A8, v73, v65, v67, v36, v58, v39, v50, v57);
  v41 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v41 + 16) = v68;
  swift_bridgeObjectRetain();
  v42 = swift_getWitnessTable(&unk_1003CA198, v22);
  View.environmentObject<A>(_:)(v27, v41, v19, v22, v51, v42);
  v43 = swift_release(v41);
  v44 = (*(uint64_t (**)(char *, uint64_t, __n128))(v60 + 8))(v40, v19, v43);
  v45 = v69;
  static MenuOrder.fixed.getter(v44);
  View.menuOrder(_:)(v45, v25, v52);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v71);
  (*(void (**)(_QWORD *, uint64_t))(v59 + 8))(v27, v25);
  v46 = v53;
  v47 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v47(v35, v33, OpaqueTypeMetadata2);
  v48 = *(void (**)(char *, uint64_t))(v46 + 8);
  v48(v33, OpaqueTypeMetadata2);
  v47(v72, v35, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v48)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_1000572E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t WitnessTable;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  _QWORD v40[2];

  v28 = a3;
  v29 = a7;
  v27 = a5;
  v30 = a8;
  v12 = type metadata accessor for ActionMenuView(255, a4, a6, a4);
  v13 = type metadata accessor for Section(0, &type metadata for Text, v12, &type metadata for EmptyView);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if (a2)
    v20 = a1;
  else
    v20 = 0;
  v21 = 0xE000000000000000;
  if (a2)
    v21 = a2;
  v40[0] = v20;
  v40[1] = v21;
  v32 = a4;
  v33 = v27;
  v34 = a6;
  v35 = v29;
  v36 = v28;
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v12);
  v23 = sub_10002D3FC();
  Section<>.init<A>(_:content:)(v40, sub_10005A5D8, v31, v12, &type metadata for String, WitnessTable, v23);
  v37 = &protocol witness table for Text;
  v38 = WitnessTable;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v19, v17, v13);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v24(v30, v19, v13);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v13);
}

uint64_t sub_1000574A8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1000572E4(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

double sub_1000574BC@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, __int128 *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *, __int128 *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[7];
  uint64_t v38;

  sub_10005107C((uint64_t)a1);
  sub_100056D34(a1, 1, 0, 0, a2, a3, (uint64_t)v37);
  v24 = v37[4];
  v25 = v37[5];
  *(_OWORD *)v26 = v37[6];
  *(_QWORD *)&v26[16] = v38;
  v20 = v37[0];
  v21 = v37[1];
  v22 = v37[2];
  v23 = v37[3];
  v8 = type metadata accessor for ActionMenuView(0, a2, a3, v7);
  swift_getWitnessTable(&unk_1003CA1D0, v8);
  v9 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(&v27, &v20, v8);
  sub_10005A5F8(v37);
  v10 = *((_QWORD *)&v27 + 1);
  v11 = *((_QWORD *)&v28 + 1);
  v12 = *((_QWORD *)&v29 + 1);
  v13 = v30;
  v14 = *((_QWORD *)&v32 + 1);
  v15 = v34;
  v16 = v35;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  *(_QWORD *)&v23 = v30;
  BYTE8(v23) = v31;
  v24 = v32;
  LOBYTE(v25) = v33;
  *((_QWORD *)&v25 + 1) = v34;
  *(_QWORD *)v26 = v35;
  v18 = v36;
  *(_OWORD *)&v26[8] = v36;
  v9(a4, &v20, v8);
  swift_release(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);

  sub_10000DCF8(v15, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_100057644@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t result;
  _OWORD v6[2];

  v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  v4 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v6);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_100057694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  void (*v51)(uint64_t);
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t WitnessTable;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void (*v144)(uint64_t);
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _QWORD v156[2];
  uint64_t v157[13];
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;

  v3 = v2;
  v150 = a2;
  v5 = sub_100009788(&qword_1004BA940);
  v6 = *(_QWORD *)(a1 + 24);
  v151 = *(_QWORD *)(a1 + 16);
  v146 = v6;
  type metadata accessor for ActionMenu.Element(255, v151, v6, v7);
  v8 = type metadata accessor for Array(255);
  v10 = type metadata accessor for ActionMenuView.ItemView(255, v151, v6, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v10, a1);
  *(_QWORD *)&v158 = v8;
  *((_QWORD *)&v158 + 1) = &type metadata for String;
  *(_QWORD *)&v159 = v11;
  *((_QWORD *)&v159 + 1) = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v133 = *((_QWORD *)&v159 + 1);
  *(_QWORD *)&v160 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v158);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_10005A218();
  v157[11] = swift_getWitnessTable(&unk_1003CA288, v10);
  v157[12] = swift_getWitnessTable(&unk_1003CA1D0, a1);
  v134 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  v157[10] = WitnessTable;
  v132 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v157[8] = v132;
  v157[9] = (uint64_t)&protocol witness table for _AppearanceActionModifier;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v128 = v5;
  *(_QWORD *)&v158 = v5;
  *((_QWORD *)&v158 + 1) = v13;
  v127 = v14;
  *(_QWORD *)&v159 = v14;
  *((_QWORD *)&v159 + 1) = v15;
  v137 = v15;
  v16 = type metadata accessor for Menu(0, &v158);
  v121 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v124 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v123 = (char *)&v115 - v19;
  v20 = sub_100009788(&qword_1004BA960);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v20, 0, 0);
  v22 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v126 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v125 = (char *)&v115 - v24;
  v120 = v20;
  v25 = __chkstk_darwin(v23);
  v119 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v122 = (char *)&v115 - v27;
  v145 = v16;
  v28 = type metadata accessor for _ConditionalContent(0, v22, v16);
  v140 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v139 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v138 = (char *)&v115 - v32;
  v136 = v12;
  v130 = *(_QWORD *)(v12 - 8);
  v33 = __chkstk_darwin(v31);
  v129 = (char *)&v115 - v34;
  v141 = v13;
  v143 = *(_QWORD *)(v13 - 8);
  v35 = __chkstk_darwin(v33);
  v118 = (char *)&v115 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v142 = (char *)&v115 - v38;
  __chkstk_darwin(v37);
  v147 = (char *)&v115 - v39;
  v149 = type metadata accessor for _ConditionalContent(0, &type metadata for EmptyView, v28);
  v148 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v41 = (char *)&v115 - v40;
  v42 = *(_OWORD *)(v3 + 48);
  v160 = *(_OWORD *)(v3 + 32);
  v161 = v42;
  v162 = *(_OWORD *)(v3 + 64);
  v43 = *(_OWORD *)(v3 + 16);
  v158 = *(_OWORD *)v3;
  v159 = v43;
  v44 = *(_QWORD *)(sub_10005A29C(a1) + 16);
  v45 = v146;
  v47 = type metadata accessor for ActionMenu(0, v151, v146, v46);
  v48 = swift_bridgeObjectRetain();
  v49 = ActionMenu.elements(excluding:)(v48, v47);
  v144 = v50;
  v52 = v51;
  swift_bridgeObjectRelease(v44);
  v157[0] = v49;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v135 = v8;
  v54 = Collection.isEmpty.getter(v8, v53);
  if ((v54 & 1) != 0)
  {
    v55 = swift_bridgeObjectRelease(v49);
    v144(v55);
    v56 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v57 = v145;
    v58 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v145);
    v152 = v56;
    v153 = v58;
    v59 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
    sub_100055EF4(v59, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v59);
    swift_release(v52);
    v60 = v41;
  }
  else
  {
    v117 = v41;
    v116 = v28;
    v61 = v145;
    v157[0] = v49;
    __chkstk_darwin(v54);
    v62 = v151;
    v113 = v151;
    v114 = v45;
    KeyPath = swift_getKeyPath(&unk_1003CA220);
    v64 = swift_allocObject(&unk_10046B938, 152, 7);
    *(_QWORD *)(v64 + 16) = v62;
    *(_QWORD *)(v64 + 24) = v45;
    v65 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v64 + 96) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v64 + 112) = v65;
    *(_OWORD *)(v64 + 128) = *(_OWORD *)(v3 + 96);
    *(_QWORD *)(v64 + 144) = *(_QWORD *)(v3 + 112);
    v66 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v64 + 32) = *(_OWORD *)v3;
    *(_OWORD *)(v64 + 48) = v66;
    v67 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v64 + 64) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v64 + 80) = v67;
    sub_10005A3CC(v3);
    v68 = v129;
    ForEach<>.init(_:id:content:)(v157, KeyPath, sub_10005A3C0, v64, v135, v134, v133, &protocol witness table for String, WitnessTable);
    v69 = swift_allocObject(&unk_10046B960, 32, 7);
    *(_QWORD *)(v69 + 16) = v144;
    *(_QWORD *)(v69 + 24) = v52;
    v144 = v52;
    v70 = swift_retain(v52);
    v71 = v147;
    v72 = v136;
    View.onAppear(perform:)(sub_10005B69C, v69, v136, v132, v70);
    v73 = swift_release(v69);
    v74 = (*(uint64_t (**)(char *, uint64_t, __n128))(v130 + 8))(v68, v72, v73);
    if ((BYTE8(v161) & 1) != 0)
    {
      v75 = __chkstk_darwin(v74);
      *(&v115 - 4) = v62;
      *(&v115 - 3) = v45;
      __chkstk_darwin(v75);
      *(&v115 - 4) = v62;
      *(&v115 - 3) = v45;
      v113 = v3;
      v76 = (uint64_t)v124;
      v77 = v141;
      Menu.init(content:label:)(sub_10005A454);
      v57 = v61;
      v78 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v61);
      v79 = v121;
      v80 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      v81 = v123;
      v80(v123, v76, v61);
      v82 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
      v82(v76, v61);
      v80((char *)v76, (uint64_t)v81, v61);
      v83 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v84 = v138;
      sub_100055FB8(v76, v22, v57, v83, v78);
      v82(v76, v57);
      v82((uint64_t)v81, v57);
      v60 = v117;
      v85 = v143;
    }
    else
    {
      v86 = *(uint64_t (**)(char *, char *, uint64_t))(v143 + 16);
      v77 = v141;
      v87 = v86(v142, v71, v141);
      v57 = v61;
      v84 = v138;
      if ((*(_BYTE *)(v3 + 80) & 1) != 0)
      {
        v89 = (uint64_t)v122;
        Divider.init()(v87);
        v90 = type metadata accessor for Divider(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 0, 1, v90);
      }
      else
      {
        v88 = type metadata accessor for Divider(0);
        v89 = (uint64_t)v122;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v122, 1, 1, v88);
      }
      v60 = v117;
      v91 = (uint64_t)v118;
      v86(v118, v142, v77);
      v157[0] = v91;
      v92 = v119;
      sub_10005A46C(v89, v119);
      v157[1] = v92;
      v156[0] = v77;
      v156[1] = v120;
      v154 = v137;
      v155 = sub_10005A4B4();
      v93 = (uint64_t)v125;
      sub_1000588C8(v157, 2uLL, (uint64_t)v156);
      sub_10005A560(v92);
      v94 = v143;
      v95 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
      v95(v91, v77);
      v96 = v89;
      v97 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v98 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
      sub_100055EF4(v93, v22, v57, v97, v98);
      v99 = v93;
      v85 = v94;
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v99, v22);
      sub_10005A560(v96);
      v95((uint64_t)v142, v77);
    }
    v100 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v101 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
    v157[6] = v100;
    v157[7] = v101;
    v28 = v116;
    v102 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v116);
    v103 = v140;
    v104 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v139, v84, v28);
    sub_100055FB8(v104, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v102);
    v105 = swift_release(v144);
    v106 = *(void (**)(uint64_t, uint64_t, __n128))(v103 + 8);
    v106(v104, v28, v105);
    ((void (*)(char *, uint64_t))v106)(v84, v28);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v147, v77);
  }
  v107 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
  v108 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
  v157[4] = v107;
  v157[5] = v108;
  v109 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
  v157[2] = (uint64_t)&protocol witness table for EmptyView;
  v157[3] = v109;
  v110 = v149;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v149);
  v111 = v148;
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v150, v60, v110);
  return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v60, v110);
}

uint64_t sub_100058294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__int128 *, __int128 *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v60;
  id v61;
  __int128 v62;
  uint64_t v63;
  uint64_t WitnessTable;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  char v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[2];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100;
  __int128 v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  _OWORD v106[7];
  uint64_t v107;
  __int128 v108[6];

  v68 = a1;
  v69 = a2;
  v74 = a5;
  v7 = type metadata accessor for ActionMenuView.ItemView(0, a3, a4, a4);
  v65 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (char *)&v60 - v11;
  v66 = type metadata accessor for ActionMenu.Item(0, a3, a4, v12);
  *(_QWORD *)&v70 = *(_QWORD *)(v66 - 8);
  v13 = __chkstk_darwin(v66);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v60 - v16;
  v19 = type metadata accessor for ActionMenu.Element(0, a3, a4, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (__int128 *)((char *)&v60 - v21);
  v24 = type metadata accessor for ActionMenuView(255, a3, a4, v23);
  v71 = v7;
  v75 = v24;
  v25 = type metadata accessor for _ConditionalContent(0, v7, v24);
  v72 = *(_QWORD *)(v25 - 8);
  v73 = v25;
  __chkstk_darwin(v25);
  v76 = (char *)&v60 - v26;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v20 + 16))(v22, v68, v19);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 1)
  {
    v27 = v22[3];
    v108[2] = v22[2];
    v108[3] = v27;
    v108[4] = v22[4];
    v28 = v22[1];
    v108[0] = *v22;
    v108[1] = v28;
    v29 = *(_QWORD *)(v69 + 88);
    v30 = *(_QWORD *)(v69 + 96);
    sub_10005107C((uint64_t)v108);
    sub_10000DCE8(v29, v30);
    sub_100056D34(v108, 1, v29, v30, a3, a4, (uint64_t)v106);
    v93 = v106[4];
    v94 = v106[5];
    v95[0] = v106[6];
    *(_QWORD *)&v95[1] = v107;
    v89 = v106[0];
    v90 = v106[1];
    v91 = v106[2];
    v92 = v106[3];
    v31 = v75;
    WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v75);
    v32 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(&v96, &v89, v31);
    sub_10005A5F8(v106);
    v66 = *((_QWORD *)&v97 + 1);
    v67 = (char *)*((_QWORD *)&v96 + 1);
    v65 = *((_QWORD *)&v98 + 1);
    v61 = v99;
    v63 = *((_QWORD *)&v101 + 1);
    v68 = v104;
    v69 = v103;
    v79 = v96;
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    v84 = v101;
    v85 = v102;
    v86 = v103;
    v87 = v104;
    v70 = v105;
    v88 = v105;
    v32(&v89, &v79, v31);
    v33 = *((_QWORD *)&v89 + 1);
    v34 = *((_QWORD *)&v90 + 1);
    v35 = *((_QWORD *)&v91 + 1);
    v36 = (void *)v92;
    v37 = *((_QWORD *)&v93 + 1);
    v39 = *((_QWORD *)&v94 + 1);
    v38 = *(_QWORD *)&v95[0];
    v79 = v89;
    v80 = v90;
    v81 = v91;
    v82 = (void *)v92;
    v83 = BYTE8(v92);
    v84 = v93;
    v85 = v94;
    v86 = *((_QWORD *)&v94 + 1);
    v87 = *(_QWORD *)&v95[0];
    v62 = *(_OWORD *)((char *)v95 + 8);
    v88 = *(_OWORD *)((char *)v95 + 8);
    v40 = v71;
    v41 = swift_getWitnessTable(&unk_1003CA288, v71);
    sub_100055FB8((uint64_t)&v79, v40, v31, v41, WitnessTable);
    sub_100050D78(v108);
    swift_release(v37);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v33);

    sub_10000DCF8(v39, v38);
    swift_release(v63);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v66);
    swift_bridgeObjectRelease(v67);
    swift_release(v62);

    sub_10000DCF8(v69, v68);
    swift_release(v70);
  }
  else
  {
    v42 = v70;
    v43 = v66;
    (*(void (**)(char *, __int128 *, uint64_t))(v70 + 32))(v17, v22, v66);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v15, v17, v43);
    v44 = *(_QWORD *)(v69 + 88);
    v45 = *(_QWORD *)(v69 + 96);
    sub_100058844((uint64_t)v15, v44, v45, a3, a4, (uint64_t)v10);
    v46 = v71;
    v69 = swift_getWitnessTable(&unk_1003CA288, v71);
    v47 = v65;
    v48 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    v49 = v67;
    v48(v67, v10, v46);
    sub_10000DCE8(v44, v45);
    v50 = *(void (**)(char *, uint64_t))(v47 + 8);
    v50(v10, v46);
    v48(v10, v49, v46);
    v51 = v75;
    v52 = swift_getWitnessTable(&unk_1003CA1D0, v75);
    sub_100055EF4((uint64_t)v10, v46, v51, v69, v52);
    v53 = v10;
    v40 = v46;
    v50(v53, v46);
    v50(v49, v46);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v43);
  }
  v54 = swift_getWitnessTable(&unk_1003CA288, v40);
  v55 = swift_getWitnessTable(&unk_1003CA1D0, v75);
  v77 = v54;
  v78 = v55;
  v56 = v73;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v73);
  v57 = v72;
  v58 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v74, v76, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
}

uint64_t sub_100058844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v12 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for ActionMenuView.ItemView(0, a4, a5, v13);
  v15 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t sub_1000588C8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_100058A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t WitnessTable;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD v24[5];
  _QWORD v25[5];

  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v9 = type metadata accessor for Array(255);
  v11 = type metadata accessor for ActionMenuView.ItemView(255, a2, a3, v10);
  v13 = type metadata accessor for ActionMenuView(255, a2, a3, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v11, v13);
  v25[0] = v9;
  v25[1] = &type metadata for String;
  v25[2] = v14;
  v25[3] = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v25[4] = &protocol witness table for String;
  v15 = type metadata accessor for ForEach(255, v25);
  v16 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _AppearanceActionModifier);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v24 - v18;
  WitnessTable = swift_getWitnessTable(&unk_1003CA288, v11);
  v21 = swift_getWitnessTable(&unk_1003CA1D0, v13);
  v24[3] = WitnessTable;
  v24[4] = v21;
  v24[2] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
  v24[0] = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v15);
  v24[1] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v22(v19, a1, v16);
  v22(a5, (uint64_t)v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_100058C44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];

  v8 = sub_1000057B4(&qword_1004BA958);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(qword_1004BA978);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[6])
  {
    v16 = __chkstk_darwin(v13);
    v27[1] = a4;
    v27[-4] = a2;
    v27[-3] = a3;
    v27[-2] = a1;
    __chkstk_darwin(v16);
    v27[-2] = v17;
    v18 = v17;
    Label.init(title:icon:)(sub_10005A5A0, &v27[-6], sub_10005A5AC, &v27[-4], &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
    swift_storeEnumTagMultiPayload(v15, v12, 0);
    v19 = sub_10004FFFC(&qword_1004BA950, &qword_1004BA958, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v19, &protocol witness table for Text);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v21 = a1[5];
    v28[0] = a1[4];
    v28[1] = v21;
    v22 = sub_10002D3FC();
    swift_bridgeObjectRetain();
    *(_QWORD *)v15 = Text.init<A>(_:)(v28, &type metadata for String, v22);
    *((_QWORD *)v15 + 1) = v23;
    v15[16] = v24 & 1;
    *((_QWORD *)v15 + 3) = v25;
    swift_storeEnumTagMultiPayload(v15, v12, 1);
    v26 = sub_10004FFFC(&qword_1004BA950, &qword_1004BA958, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    return _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v26, &protocol witness table for Text);
  }
}

uint64_t sub_100058EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 40);
  v9[0] = *(_QWORD *)(a1 + 32);
  v9[1] = v3;
  v4 = sub_10002D3FC();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_100058F1C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = sub_1000057B4(&qword_1004BAA00);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1000057B4(&qword_1004BAA08);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v10 = __chkstk_darwin(v9);
  v35 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v34 = (char *)&v32 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(int *)(type metadata accessor for ActionMenu.Item(0, v13, v14, v15) + 36);
  v33 = v2;
  (*(void (**)(_QWORD *__return_ptr))(v2 + v16))(v39);
  v17 = v40;
  v18 = v41;
  sub_1000096A0(v39, v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18) & 1) != 0)
  {
    static ButtonRole.destructive.getter(v8);
    v20 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  }
  else
  {
    v19 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v33, a1);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(&unk_10046B9E0, v22 + v5, v21 | 7);
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __chkstk_darwin(v24);
  *(&v32 - 2) = (uint64_t)v39;
  v25 = sub_1000057B4(&qword_1004BAA10);
  v26 = sub_10004FFFC(&qword_1004BAA18, &qword_1004BAA10, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v27 = v35;
  Button.init(role:action:label:)(v8, sub_10005B3F4, v23, sub_10005B444, &v32 - 4, v25, v26);
  v28 = v37;
  v29 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v30 = v34;
  v29(v34, v27, v37);
  v29(v38, v30, v28);
  return sub_10000970C(v39);
}

uint64_t ActionMenuItemStyle.buttonRole.getter@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    static ButtonRole.destructive.getter(a2);
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  else
  {
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_100059240(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 112);
}

uint64_t sub_100059284(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, v5, v6, a4);
  v18 = v5;
  v19 = v5;
  v20 = v6;
  v21 = v6;
  v9 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v18);
  v10 = type metadata accessor for Optional(255, v9);
  v11 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v10);
  v12 = type metadata accessor for ModifiedContent(255, v8, v11);
  v13 = type metadata accessor for Section(255, &type metadata for Text, v12, &type metadata for EmptyView);
  swift_getWitnessTable(&unk_1003CA1D0, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v16 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16);
}

uint64_t sub_100059408(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = type metadata accessor for ActionMenuView(255, v5, v8, a4);
  v23 = v5;
  v24 = v5;
  v25 = v8;
  v26 = v8;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v23);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  v15 = type metadata accessor for Section(255, &type metadata for Text, v14, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v10);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v32 = WitnessTable;
  v33 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v29 = &protocol witness table for Text;
  v30 = v18;
  v31 = &protocol witness table for EmptyView;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v15);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v21 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
}

uint64_t sub_1000595A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t WitnessTable;
  void *v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, *a1, v6, a4);
  v9 = type metadata accessor for Section(255, &type metadata for Text, v8, &type metadata for EmptyView);
  v21 = &protocol witness table for Text;
  WitnessTable = swift_getWitnessTable(&unk_1003CA1D0, v8);
  v23 = &protocol witness table for EmptyView;
  v17 = v5;
  v18 = v9;
  v19 = v7;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
  v10 = type metadata accessor for Menu(255, &v17);
  v17 = v4;
  v18 = v4;
  v19 = v6;
  v20 = v6;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v17);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v17 = v14;
  v18 = v15;
  return swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
}

uint64_t sub_1000596F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100059700(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_release(*(_QWORD *)(a1 + 72));
  if (*(_QWORD *)(a1 + 88))
    swift_release(*(_QWORD *)(a1 + 96));
  return swift_release(*(_QWORD *)(a1 + 104));
}

uint64_t sub_100059758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v11 = v7;
  swift_retain(v8);
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v9;
  }
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v13);
  return a1;
}

uint64_t sub_100059820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  if (!v15)
  {
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v16;
      *(_QWORD *)(a1 + 96) = v19;
      swift_retain(v19);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v16)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_retain(v17);
  swift_release(v18);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v21;
  swift_retain(v21);
  swift_release(v20);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for ApplicationCapabilities(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_10005998C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v11)
  {
    if (v10)
    {
      v14 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  swift_release(v13);
LABEL_8:
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t sub_100059A7C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100059AC4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *sub_100059B20()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100059B2C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003EC650, 1);
}

double sub_100059B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for ActionMenuView.ItemView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_10046BA08, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  v21 = sub_1001CC790((uint64_t)v14, (uint64_t)&unk_1004BAA58, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100059CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v9;
  v6[7] = v10;
  return swift_task_switch(sub_100059D34, v9, v10);
}

uint64_t sub_100059D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_100059DA0;
  return v9();
}

uint64_t sub_100059DA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100059E68;
  else
    v4 = sub_100059E00;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100059E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v5 = *(void (**)(void))(v3 + *(int *)(type metadata accessor for ActionMenuView.ItemView(0, v2, v1, v4) + 36));
  if (v5)
    v5();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100059E68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100059E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[4];
  _BYTE v7[16];
  uint64_t v8;

  v8 = a1;
  v6[2] = a1;
  v1 = sub_1000057B4(&qword_1004BAA20);
  v2 = sub_1000057B4(&qword_1004BAA28);
  v3 = sub_10004FFFC(&qword_1004BAA30, &qword_1004BAA20, (uint64_t)&protocol conformance descriptor for LabelGroup<A>);
  v4 = sub_10005B45C();
  return Label.init(title:icon:)(sub_10005B44C, v7, sub_10005B454, v6, v1, v2, v3, v4);
}

uint64_t sub_100059F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v1 = sub_1000057B4(&qword_1004BAA40);
  v2 = sub_10004FFFC(&qword_1004BAA48, &qword_1004BAA40, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return LabelGroup.init(content:)(sub_10005B4B8, v4, v1, v2);
}

uint64_t sub_100059FBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v29;
  unint64_t v30;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000096A0(a1, v4);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v30 = v6;
  v7 = sub_10002D3FC();
  v8 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = a1[3];
  v15 = a1[4];
  sub_1000096A0(a1, v16);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  if (v18)
    v19 = v17;
  else
    v19 = 0;
  v20 = 0xE000000000000000;
  if (v18)
    v20 = v18;
  v29 = v19;
  v30 = v20;
  v21 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v23 = v22;
  v25 = v24;
  LOBYTE(v29) = v14;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v26 & 1;
  *(_QWORD *)(a2 + 56) = v24;
  sub_10005B4C0(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_10005B4C0(v21, v23, v27);
  swift_bridgeObjectRetain();
  sub_10005B4D0(v21, v23, v27);
  swift_bridgeObjectRelease(v25);
  sub_10005B4D0(v8, v10, v29);
  return swift_bridgeObjectRelease(v12);
}

void sub_10005A12C(_QWORD *a1@<X0>, uint64_t (**a2)(__n128)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000096A0(a1, v3);
  v7 = (uint64_t (*)(__n128))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v7)
  {
    v8 = v5;
    v9 = swift_release(v6);
    v7 = (uint64_t (*)(__n128))v7(v9);
    swift_release(v8);
  }
  *a2 = v7;
}

uint64_t sub_10005A1A0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10005A1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100057694(a1, a2);
}

uint64_t type metadata accessor for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView.ItemView);
}

unint64_t sub_10005A218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA948;
  if (!qword_1004BA948)
  {
    v1 = sub_100009788(&qword_1004BA940);
    sub_10004FFFC(&qword_1004BA950, &qword_1004BA958, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004BA948);
  }
  return result;
}

uint64_t sub_10005A29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t result;
  _QWORD v8[4];

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(a1 + 24);
  v8[0] = *(_QWORD *)(a1 + 16);
  v8[1] = v8[0];
  v8[2] = v4;
  v8[3] = v4;
  v5 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v8);
  WitnessTable = swift_getWitnessTable(&unk_1003CA198, v5);
  if (v3)
    return v3;
  result = EnvironmentObject.error()(0, v2, v5, WitnessTable);
  __break(1u);
  return result;
}

uint64_t sub_10005A314@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = type metadata accessor for ActionMenu.Element(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = ActionMenu.Element.id.getter(v5, v6, v7, v8);
  *a4 = result;
  a4[1] = v10;
  return result;
}

uint64_t sub_10005A34C()
{
  return 16;
}

__n128 sub_10005A358(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10005A364()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 120))
    swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10005A3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100058294(a1, v2 + 32, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10005A3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(id *)(a1 + 48);
  swift_retain(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10000DCE8(v3, v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_10005A454@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_100058A7C(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_10005A460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100058C44(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10005A46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000057B4(&qword_1004BA960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005A4B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA968;
  if (!qword_1004BA968)
  {
    v1 = sub_100009788(&qword_1004BA960);
    sub_10005A518();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1004BA968);
  }
  return result;
}

unint64_t sub_10005A518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BA970;
  if (!qword_1004BA970)
  {
    v1 = type metadata accessor for Divider(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Divider, v1);
    atomic_store(result, (unint64_t *)&qword_1004BA970);
  }
  return result;
}

uint64_t sub_10005A560(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000057B4(&qword_1004BA960);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005A5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100058EB4(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10005A5AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Image.init(uiImage:)(*(id *)(v1 + 16));
  *a1 = result;
  return result;
}

double sub_10005A5D8@<D0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_1000574BC(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

_QWORD *sub_10005A5E8@<X0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_100056ACC(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

_QWORD *sub_10005A5F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10000DCF8(v6, v7);
  swift_release(v8);
  return a1;
}

_QWORD *sub_10005A67C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[16];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10000DCF8(v6, v7);
  swift_release(v9);
  swift_release(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_10005A71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = &unk_1003CA260;
    swift_initStructMetadata(a1, 0, 2, v7, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_10005A790(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    v11 = v7 + 16;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (char *)a2 + 7;
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v12 = *v14;
    v12[1] = v15;
    v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = ((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (unint64_t *)((unint64_t)&v13[v11] & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v21);
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      return v4;
    }
    v10 = v23[1];
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v10;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_10005A8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + 7;
  v5 = (v4 + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + 8));
  result = swift_release(*(_QWORD *)(((v6 + 23) & 0xFFFFFFFFFFFFF8) + 8));
  v8 = (_QWORD *)((a1 + (((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL)
    return swift_release(v8[1]);
  return result;
}

uint64_t sub_10005A98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v17 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v18;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  if (v19 < 0xFFFFFFFF)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v20 = v18[1];
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    swift_retain(v20);
  }
  return a1;
}

uint64_t sub_10005AA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v20 = (_QWORD *)((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)((a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      swift_retain(v25);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release(v20[1]);
    goto LABEL_7;
  }
  v23 = v21[1];
  v24 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_10005ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v12 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (uint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if ((unint64_t)*v13 < 0xFFFFFFFF)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v15 = v13[1];
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
  }
  return a1;
}

uint64_t sub_10005ACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *v8;
  swift_release(v9);
  v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(v10 + 8);
  *(_OWORD *)v10 = *v11;
  swift_release(v12);
  v13 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  v15 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = (_QWORD *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  if (*v16 < 0xFFFFFFFFuLL)
  {
    if (v18 >= 0xFFFFFFFF)
    {
      v21 = v17[1];
      *v16 = v18;
      v16[1] = v21;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  if (v18 < 0xFFFFFFFF)
  {
    swift_release(v16[1]);
    goto LABEL_7;
  }
  v19 = v17[1];
  v20 = v16[1];
  *v16 = v18;
  v16[1] = v19;
  swift_release(v20);
  return a1;
}

uint64_t sub_10005ADE8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10005AE7C + 4 * byte_1003CA0F8[v10]))();
  }
}

void sub_10005AF00(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10005B00C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10005B084);
}

void sub_10005B014(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10005B01CLL);
  JUMPOUT(0x10005B084);
}

void sub_10005B05C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005B084);
}

void sub_10005B064()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005B084);
}

uint64_t sub_10005B06C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10005B084);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10005B080);
    JUMPOUT(0x10005B078);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_10005B09C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t WitnessTable;
  void *v28;

  v4 = *a1;
  v5 = a1[1];
  type metadata accessor for ActionMenu.Element(255, *a1, v5, a4);
  v6 = type metadata accessor for Array(255);
  v8 = type metadata accessor for ActionMenuView.ItemView(255, v4, v5, v7);
  v10 = type metadata accessor for ActionMenuView(255, v4, v5, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v8, v10);
  v24 = v6;
  v25 = &type metadata for String;
  v26 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v28 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v24);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_100009788(&qword_1004BA960);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = sub_100009788(&qword_1004BA940);
  v18 = sub_10005A218();
  swift_getWitnessTable(&unk_1003CA288, v8);
  swift_getWitnessTable(&unk_1003CA1D0, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v24 = v17;
  v25 = (_QWORD *)v13;
  v26 = v18;
  WitnessTable = v19;
  v20 = type metadata accessor for Menu(255, &v24);
  v21 = type metadata accessor for _ConditionalContent(255, v16, v20);
  v22 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v21);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v20);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v22);
}

uint64_t sub_10005B2E4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003EC684, 1);
}

uint64_t sub_10005B318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v10, v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)(v4 + v10 + v13[9] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[10] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[11] + 8));
  v14 = (_QWORD *)(v4 + v10 + *(int *)(v7 + 36));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

double sub_10005B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4) - 8) + 80);
  return sub_100059B60(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_10005B444()
{
  uint64_t v0;

  return sub_100059E9C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005B44C()
{
  uint64_t v0;

  return sub_100059F44(*(_QWORD *)(v0 + 16));
}

void sub_10005B454(uint64_t (**a1)(__n128)@<X8>)
{
  uint64_t v1;

  sub_10005A12C(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_10005B45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004BAA38;
  if (!qword_1004BAA38)
  {
    v1 = sub_100009788(&qword_1004BAA28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1004BAA38);
  }
  return result;
}

uint64_t sub_10005B4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100059FBC(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_10005B4C0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10005B4D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10005B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  char *v14;

  v5 = *((_QWORD *)v4 + 4);
  v6 = *((_QWORD *)v4 + 5);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 48) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v4[v10], v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[9]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[10]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[11]]);
  v14 = &v4[v10 + *(int *)(v7 + 36)];
  if (*(_QWORD *)v14)
    swift_release(*((_QWORD *)v14 + 1));
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

uint64_t sub_10005B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1004BAA54);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10002E8E0;
  return sub_100059CC4(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_10005B664()
{
  return sub_10004FFFC(&qword_1004BAA60, &qword_1004BAA08, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t sub_10005B6A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::Int v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  uint64_t v44;

  v32 = a5;
  v33 = a8;
  v38 = a1;
  v39 = a2;
  v31 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8));
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = __chkstk_darwin(AssociatedTypeWitness);
  v36 = (char *)&v29 - v16;
  v41 = a4;
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness(0, a6);
  v34 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v21)
    return static Array._allocateUninitialized(_:)(0, v41);
  v22 = v21;
  v30 = v18;
  v23 = v41;
  v44 = ContiguousArray.init()(v41);
  v37 = type metadata accessor for ContiguousArray(0, v23);
  ContiguousArray.reserveCapacity(_:)(v22);
  v41 = v20;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v35;
    v25 = v36;
    while (1)
    {
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v43, v41, a3, a6);
      (*(void (**)(char *))(v14 + 16))(v25);
      v27(v43, 0);
      v28 = v42;
      v38(v25, v40);
      if (v28)
        break;
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v26, v37);
      dispatch thunk of Collection.formIndex(after:)(v41, a3, a6);
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
        return v44;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
    swift_release(v44);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v40, v32);
  }
  return result;
}

UIMenu_optional __swiftcall ActionMenu.uiMenu(excluding:)(Swift::OpaquePointer excluding)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  UIMenuElementSize preferredElementSize;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _BOOL8 v30;
  id v31;
  Swift::String v32;
  UIMenu v33;
  Swift::Bool v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *isa;
  Swift::OpaquePointer v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  void *rawValue;
  UIMenuElementSize v43;
  UIMenu_optional result;
  UIImage_optional v45;

  v3 = v2;
  v4 = v1;
  v6 = ActionMenu.elements(excluding:)((uint64_t)excluding._rawValue, v1);
  v8 = v7;
  v10 = v9;
  v43 = v6;
  v11 = *(_QWORD *)(v4 + 24);
  v40 = *(_QWORD *)(v4 + 16);
  v41 = v11;
  rawValue = excluding._rawValue;
  type metadata accessor for ActionMenu.Element(255, v40, v11, v12);
  v13 = type metadata accessor for Array(0);
  v14 = (char *)sub_1000057B4(&qword_1004BAA68);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v17 = sub_10005B6A0((void (*)(char *, char *))sub_10005BBDC, (uint64_t)v39, v13, v14, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v16);
  swift_bridgeObjectRelease();
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v43 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v19; ++i)
    {
      v22 = *(void **)(v17 + 8 * i + 32);
      if (v22)
      {
        v23 = v22;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v25 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v21);
      }
    }
    swift_bridgeObjectRelease();
    preferredElementSize = v43;
  }
  v26 = swift_bridgeObjectRelease();
  v8(v26);
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v35 = preferredElementSize;
    else
      v35 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_11;
LABEL_16:
    swift_release(v10);
    swift_bridgeObjectRelease();
    v33.super.super.isa = 0;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_11:
  sub_10000598C(0, &qword_1004BAA70, UIMenu_ptr);
  v27 = *(_QWORD *)(v3 + 32);
  v28 = *(void **)(v3 + 40);
  v29 = *(void **)(v3 + 48);
  v30 = (*(_BYTE *)(v3 + 56) & 1) == 0;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v27;
  v32._object = v28;
  v45.value.super.isa = (Class)v29;
  v45.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)v30, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v38).super.super.isa;
  swift_release(v10);
LABEL_17:
  isa = v33.super.super.isa;
  result.value.super.super.isa = isa;
  result.is_nil = v34;
  return result;
}

id sub_10005BBDC@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::OpaquePointer v8;
  uint64_t v9;
  uint64_t v10;
  id result;

  v4 = v2[2];
  v5 = v2[3];
  v6 = (void *)v2[4];
  v7 = type metadata accessor for ActionMenu.Element(0, v4, v5, a1);
  v8._rawValue = v6;
  result = sub_10005BC30(v8, v7, v9, v10);
  *a2 = result;
  return result;
}

id sub_10005BC30(Swift::OpaquePointer a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  id v22;
  id v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(Swift::String *__return_ptr, __n128);
  __n128 v36;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(__n128);
  uint64_t v49;
  uint64_t (*v50)(__n128);
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  void *v69;
  Swift::String v70;
  void *v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  NSString v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, Swift::String *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String v93;

  v5 = v4;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for ActionMenu.Item(0, v9, v8, a4);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin();
  v86 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v77 - v13;
  __chkstk_darwin();
  v16 = (Swift::String *)((char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(Swift::String *, uint64_t, uint64_t))(v17 + 16))(v16, v5, a2);
  if (swift_getEnumCaseMultiPayload(v16, a2) == 1)
  {
    v19 = v16[3];
    v91 = v16[2];
    v92 = v19;
    v93 = v16[4];
    v20 = v16[1];
    v89 = *v16;
    v90 = v20;
    type metadata accessor for ActionMenu(0, v9, v8, v18);
    v21 = (void *)ActionMenu.uiMenu(excluding:)(a1);
    v22 = v21;
    if (v21)
    {
      v87 = 0;
      v88 = 0xE000000000000000;
      v23 = v21;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      v87 = 0xD000000000000012;
      v88 = 0x80000001003A7BD0;
      v24 = v89;
      swift_bridgeObjectRetain();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v26 = v87;
      v25 = (void *)v88;
      if (qword_1004B8E20 != -1)
        swift_once(&qword_1004B8E20, sub_1001FB168);
      v87 = qword_1004C2A98;
      v88 = unk_1004C2AA0;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = 46;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v26;
      v28._object = v25;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, "setAccessibilityIdentifier:", v29);
      sub_100050D78(&v89);

    }
    else
    {
      sub_100050D78(&v89);
    }
  }
  else
  {
    v84 = v8;
    v85 = v11;
    v83 = *(void (**)(char *, Swift::String *, uint64_t))(v11 + 32);
    v83(v14, v16, v10);
    v30 = v10;
    v31 = *(int *)(v10 + 36);
    v32 = v14;
    v33 = &v14[v31];
    v35 = *(void (**)(Swift::String *__return_ptr, __n128))v33;
    v34 = *((_QWORD *)v33 + 1);
    v36 = swift_retain(v34);
    v35(&v89, v36);
    swift_release(v34);
    object = v90._object;
    countAndFlagsBits = v91._countAndFlagsBits;
    sub_1000096A0(&v89, (uint64_t)v90._object);
    v39 = (*(uint64_t (**)(void *, uint64_t))(countAndFlagsBits + 8))(object, countAndFlagsBits);
    v81 = v40;
    v82 = v39;
    v41 = v90._object;
    v42 = v91._countAndFlagsBits;
    sub_1000096A0(&v89, (uint64_t)v90._object);
    v43 = (*(uint64_t (**)(void *, uint64_t))(v42 + 16))(v41, v42);
    v79 = v44;
    v80 = v43;
    v45 = v90._object;
    v46 = v91._countAndFlagsBits;
    sub_1000096A0(&v89, (uint64_t)v90._object);
    if ((*(uint64_t (**)(void *, uint64_t))(v46 + 24))(v45, v46))
    {
      v50 = v48;
      v51 = v49;
      v52 = swift_release(v47);
      v78 = v50(v52);
      swift_release(v51);
    }
    else
    {
      v78 = 0;
    }
    v53 = v90._object;
    v54 = v91._countAndFlagsBits;
    sub_1000096A0(&v89, (uint64_t)v90._object);
    v55 = 2 * ((*(uint64_t (**)(void *, uint64_t))(v54 + 32))(v53, v54) & 1);
    sub_10000598C(0, &qword_1004BE630, UIAction_ptr);
    v57 = v90._object;
    v56 = v91._countAndFlagsBits;
    sub_1000096A0(&v89, (uint64_t)v90._object);
    v58 = (*(uint64_t (**)(void *, uint64_t))(v56 + 40))(v57, v56);
    v60 = v85;
    v59 = v86;
    v61 = v32;
    v62 = v32;
    v63 = v30;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v62, v30);
    v64 = *(unsigned __int8 *)(v60 + 80);
    v65 = (v64 + 32) & ~v64;
    v66 = swift_allocObject(&unk_10046BA98, v65 + v12, v64 | 7);
    v67 = (void (*)(uint64_t, char *, uint64_t))v83;
    v68 = v84;
    *(_QWORD *)(v66 + 16) = v9;
    *(_QWORD *)(v66 + 24) = v68;
    v67(v66 + v65, v59, v63);
    v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v82, v81, v80, v79, v78, 0, 0, 0, 0, v55, v58, sub_10005C534, v66);
    v87 = 0;
    v88 = 0xE000000000000000;
    v22 = v69;
    _StringGuts.grow(_:)(20);
    v70._object = (void *)0x80000001003A7BD0;
    v70._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v70);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v61, v9, *(_QWORD *)(v68 + 8));
    v72 = v87;
    v71 = (void *)v88;
    if (qword_1004B8E20 != -1)
      swift_once(&qword_1004B8E20, sub_1001FB168);
    v87 = qword_1004C2A98;
    v88 = unk_1004C2AA0;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = 46;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    swift_bridgeObjectRetain();
    v74._countAndFlagsBits = v72;
    v74._object = v71;
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, "setAccessibilityIdentifier:", v75);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v61, v63);
    sub_10000970C(&v89);
  }
  return v22;
}

double sub_10005C1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v22 - v10;
  sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  __chkstk_darwin();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  type metadata accessor for MainActor(0);
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = (char *)swift_allocObject(&unk_10046BAC0, v18 + v9, v17 | 7);
  *((_QWORD *)v19 + 2) = v16;
  *((_QWORD *)v19 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v19 + 4) = a3;
  *((_QWORD *)v19 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v11, v7);
  v20 = sub_1001CC790((uint64_t)v13, (uint64_t)&unk_1004BAA80, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_10005C318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v9;
  v6[7] = v10;
  return swift_task_switch(sub_10005C388, v9, v10);
}

uint64_t sub_10005C388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_10005C3F4;
  return v9();
}

uint64_t sub_10005C3F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100059E68;
  else
    v4 = sub_10005C454;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_10005C454()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  swift_release(*(_QWORD *)(v12 + v6[9] + 8));
  swift_release(*(_QWORD *)(v12 + v6[10] + 8));
  swift_release(*(_QWORD *)(v12 + v6[11] + 8));
  return swift_deallocObject(v4, v10, v11);
}

double sub_10005C534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v6, v7, a4) - 8) + 80);
  return sub_10005C1AC(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_10005C58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v5 = v4[4];
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v4[5], a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  swift_unknownObjectRelease(v4[2]);
  v12 = (char *)v4 + v9;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12, v5);
  swift_release(*(_QWORD *)&v12[v6[9] + 8]);
  swift_release(*(_QWORD *)&v12[v6[10] + 8]);
  swift_release(*(_QWORD *)&v12[v6[11] + 8]);
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_10005C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1004BAA7C);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10002E8E0;
  return sub_10005C318(a1, v10, v11, v12, v7, v8);
}

uint64_t (*ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject(&unk_10046BAE8, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject(&unk_10046BB10, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return sub_10005D760;
}

uint64_t (*ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_10046BB38, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain(a2);
  return sub_10005D928;
}

uint64_t static ActionMenu.Item.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v7 = (*(_QWORD *(**)(_QWORD *__return_ptr))(a1 + *(int *)(v6 + 36)))(v41);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(a2 + *(int *)(v6 + 36)))(v38, v7);
  v8 = v42;
  v9 = v43;
  sub_1000096A0(v41, v42);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v12 = v11;
  v13 = v39;
  v14 = v40;
  sub_1000096A0(v38, v39);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v10 == v15 && v12 == v16)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    sub_1000444A8((uint64_t)v41, (uint64_t)v35);
    sub_1000444A8((uint64_t)v38, (uint64_t)v32);
  }
  else
  {
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v15, v16, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v18);
    sub_1000444A8((uint64_t)v41, (uint64_t)v35);
    sub_1000444A8((uint64_t)v38, (uint64_t)v32);
    v20 = 0;
    if ((v19 & 1) == 0)
      goto LABEL_18;
  }
  v21 = v36;
  v22 = v37;
  sub_1000096A0(v35, v36);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  v25 = v24;
  v26 = v33;
  v27 = v34;
  sub_1000096A0(v32, v33);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v30 = v29;
  if (v25)
  {
    if (v29)
    {
      if (v23 == v28 && v25 == v29)
      {
        swift_bridgeObjectRelease(v25);
        v20 = 1;
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v28, v29, 0);
        swift_bridgeObjectRelease(v25);
      }
    }
    else
    {
      v20 = 0;
      v30 = v25;
    }
  }
  else
  {
    if (!v29)
    {
      v20 = 1;
      goto LABEL_18;
    }
    v20 = 0;
  }
  swift_bridgeObjectRelease(v30);
LABEL_18:
  sub_10000970C(v35);
  sub_10000970C(v32);
  sub_10000970C(v38);
  sub_10000970C(v41);
  return v20 & 1;
}

uint64_t static ActionMenu.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

int *sub_10005CA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  result = (int *)type metadata accessor for ActionMenu.Item(0, a8, a10, v18);
  v20 = (_QWORD *)(a9 + result[9]);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(a9 + result[10]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)(a9 + result[11]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t ActionMenu.elements(excluding:)(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(void);
  uint64_t (**v3)(void);
  Swift::String v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;
  unint64_t v30;

  v3 = v2;
  v29 = 0;
  v30 = 0xE000000000000000;
  v6._countAndFlagsBits = 8254;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  v7 = *((_OWORD *)v2 + 3);
  v28[2] = *((_OWORD *)v2 + 2);
  v28[3] = v7;
  v28[4] = *((_OWORD *)v2 + 4);
  v8 = *((_OWORD *)v2 + 1);
  v28[0] = *(_OWORD *)v2;
  v28[1] = v8;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v28, a2);
  v9 = v29;
  v10 = v30;
  v11 = sub_10005DE58(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v13 = *((_QWORD *)v11 + 2);
  v12 = *((_QWORD *)v11 + 3);
  if (v13 >= v12 >> 1)
    v11 = sub_10005DE58((char *)(v12 > 1), v13 + 1, 1, v11);
  v14 = swift_allocObject(&unk_10046BB60, 24, 7);
  *((_QWORD *)v11 + 2) = v13 + 1;
  v15 = &v11[16 * v13];
  *((_QWORD *)v15 + 4) = v9;
  *((_QWORD *)v15 + 5) = v10;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)&v28[0] = v3[8]();
  __chkstk_darwin(*(_QWORD *)&v28[0]);
  v16 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = v16;
  v26 = a1;
  v27 = v14 + 16;
  type metadata accessor for ActionMenu.Element(255, v24, v16, v17);
  v18 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  v20 = _ArrayProtocol.filter(_:)(sub_10005DF7C, &v23, v18, WitnessTable);
  *(_QWORD *)&v28[0] = v20;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  result = Collection.isEmpty.getter(v18, v21);
  if ((result & 1) == 0)
    return v20;
  if (*(_QWORD *)(*(_QWORD *)(v14 + 16) + 16))
  {
    sub_10005F2CC(1uLL, 1, 0xD00000000000001CLL, 0x80000001003A7BF0);
    return v20;
  }
  __break(1u);
  return result;
}

BOOL static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LaunchURL.Resolver.PerformOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int LaunchURL.Resolver.PerformOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL sub_10005CD50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10005CD5C()
{
  char *v0;

  return LaunchURL.Resolver.PerformOption.hashValue.getter(*v0);
}

void sub_10005CD64(uint64_t a1)
{
  char *v1;

  LaunchURL.Resolver.PerformOption.hash(into:)(a1, *v1);
}

Swift::Int sub_10005CD6C()
{
  char *v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  LaunchURL.Resolver.PerformOption.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t ActionMenu.init(_:image:style:id:debugDescription:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  void *v17;
  id v19;
  id v20;
  Swift::String v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];

  strcpy((char *)v26, "ActionMenu: ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  if (a8)
  {
    v17 = a8;
    v19 = a3;
  }
  else
  {
    v20 = a3;
    swift_bridgeObjectRetain(a6);
    a7 = a5;
    v17 = a6;
  }
  v21._countAndFlagsBits = a7;
  v21._object = v17;
  String.append(_:)(v21);

  result = swift_bridgeObjectRelease(v17);
  v23 = v26[0];
  v24 = v26[1];
  *(_QWORD *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  *(_QWORD *)(a9 + 32) = a1;
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_BYTE *)(a9 + 56) = a4 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

uint64_t Actions.GoToArtist.Context.menuItemSubtitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t Alert.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_10005CEF4(uint64_t a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t WitnessTable;
  Swift::String v24;
  Swift::String v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  char **v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char **v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char **v57;
  uint64_t v58;
  unint64_t v59;

  v57 = a3;
  v9 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v14 = type metadata accessor for ActionMenu.Element(0, a4, a5, v13);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v56 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v56 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v18 = v16[1];
    v19 = v16[3];
    v20 = v16[5];
    v21 = (void *)v16[6];
    swift_release(v16[9]);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

    return 1;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v16, v9);
  v58 = a2;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  if ((Sequence<>.contains(_:)(v12, v22, WitnessTable, *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8)) & 1) != 0)
  {
    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v24._countAndFlagsBits = 544743456;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v25._countAndFlagsBits = 0x756C637865202D20;
    v25._object = (void *)0xEB00000000646564;
    String.append(_:)(v25);
  }
  else
  {
    v26 = &v12[*(int *)(v9 + 40)];
    v28 = *(uint64_t (**)(__n128))v26;
    v27 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v27);
    v30 = v28(v29);
    v32 = v31;
    swift_release(v27);
    if (v32 == 1)
    {
      v58 = 0;
      v59 = 0xE000000000000000;
      v33._countAndFlagsBits = 0x20939CE22020;
      v33._object = (void *)0xA600000000000000;
      String.append(_:)(v33);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
      v34 = v58;
      v35 = v59;
      v36 = v57;
      v37 = *v57;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
      *v36 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_10005DE58(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        *v36 = v37;
      }
      v40 = *((_QWORD *)v37 + 2);
      v39 = *((_QWORD *)v37 + 3);
      if (v40 >= v39 >> 1)
      {
        v37 = sub_10005DE58((char *)(v39 > 1), v40 + 1, 1, v37);
        *v36 = v37;
      }
      *((_QWORD *)v37 + 2) = v40 + 1;
      v41 = &v37[16 * v40];
      *((_QWORD *)v41 + 4) = v34;
      *((_QWORD *)v41 + 5) = v35;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 1;
    }
    v58 = 0;
    v59 = 0xE000000000000000;
    v43._countAndFlagsBits = 544743456;
    v43._object = (void *)0xE400000000000000;
    String.append(_:)(v43);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v44._countAndFlagsBits = 2108704;
    v44._object = (void *)0xE300000000000000;
    String.append(_:)(v44);
    if (v32)
      v45 = v30;
    else
      v45 = 0x6E776F6E6B6E75;
    if (v32)
      v46 = v32;
    else
      v46 = 0xE700000000000000;
    v47 = v46;
    String.append(_:)(*(Swift::String *)&v45);
    swift_bridgeObjectRelease(v46);
  }
  v48 = v58;
  v49 = v59;
  v50 = v57;
  v51 = *v57;
  v52 = swift_isUniquelyReferenced_nonNull_native(*v57);
  *v50 = v51;
  if ((v52 & 1) == 0)
  {
    v51 = sub_10005DE58(0, *((_QWORD *)v51 + 2) + 1, 1, v51);
    *v50 = v51;
  }
  v54 = *((_QWORD *)v51 + 2);
  v53 = *((_QWORD *)v51 + 3);
  if (v54 >= v53 >> 1)
  {
    v51 = sub_10005DE58((char *)(v53 > 1), v54 + 1, 1, v51);
    *v50 = v51;
  }
  *((_QWORD *)v51 + 2) = v54 + 1;
  v55 = &v51[16 * v54];
  *((_QWORD *)v55 + 4) = v48;
  *((_QWORD *)v55 + 5) = v49;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

void sub_10005D2CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char **v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v29, 0, 0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = qword_1004B8A20;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      swift_once(&qword_1004B8A20, sub_10005DA20);
    v23 = v6;
    v10 = (char **)(v6 + 40);
    v11 = qword_1004BAA88;
    *(_QWORD *)&v9 = 136446210;
    v25 = v9;
    v24 = (char *)&type metadata for Any + 8;
    v26 = v3;
    v27 = v2;
    do
    {
      v13 = *(v10 - 1);
      v12 = *v10;
      v14 = sub_100039D34(v2, (uint64_t)v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
      v15 = swift_bridgeObjectRetain_n(v12, 2);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc(12, -1);
        v19 = v11;
        v20 = swift_slowAlloc(32, -1);
        v28 = v20;
        *(_DWORD *)v18 = v25;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v18 + 4) = sub_1000393D0(v13, v12, &v28);
        swift_bridgeObjectRelease_n(v12, 3);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy(v20, 1, v24);
        v21 = v20;
        v11 = v19;
        swift_slowDealloc(v21, -1, -1);
        v22 = v18;
        v3 = v26;
        v2 = v27;
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v12, 2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v10 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v23);
  }
}

uint64_t sub_10005D50C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t ActionMenu.Item.menuItemConfiguring.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

uint64_t ActionMenu.Item.execute.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtFront(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  v5 = swift_allocObject(&unk_10046BB88, 56, 7);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(Swift::OpaquePointer *)(v5 + 32) = a1;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = sub_10005F424;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_10005D5E0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a2();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(a1, v8, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtEnd(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v3 = v1;
  v5 = swift_allocObject(&unk_10046BBB0, 56, 7);
  v6 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(Swift::OpaquePointer *)(v5 + 48) = a1;
  *(_QWORD *)(v2 + 64) = sub_10005F45C;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_10005D6A4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a1();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(v8, a3, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

uint64_t sub_10005D70C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(systemName:)(a1, a2);
}

uint64_t sub_10005D73C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005D760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  return Image.init(systemName:)(v1, v2);
}

id sub_10005D78C(uint64_t a1, uint64_t a2)
{
  return sub_10005D98C(a1, a2, (SEL *)&selRef_systemImageNamed_);
}

id sub_10005D798()
{
  uint64_t v0;

  return sub_10005D98C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_systemImageNamed_);
}

uint64_t sub_10005D7B8()
{
  return sub_10005D87C(0x696D2E636973756DLL, 0xE900000000000063, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10005D7DC()
{
  return sub_10005D87C(0xD000000000000016, 0x80000001003A7C10, (SEL *)&selRef_imageNamed_);
}

uint64_t sub_10005D800()
{
  return sub_10005D87C(0x6F6E2E636973756DLL, 0xEF7473696C2E6574, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10005D82C()
{
  return sub_10005D87C(0x75622E65746F7571, 0xEC000000656C6262, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10005D854()
{
  return sub_10005D87C(0x71732E636973756DLL, 0xEC00000065726175, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10005D87C(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v4);

  if (v5)
    return Image.init(uiImage:)(v5);
  else
    return 0;
}

uint64_t sub_10005D8DC(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_10005D904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005D928()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_10005D950(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(_internalSystemName:)(a1, a2);
}

id sub_10005D980(uint64_t a1, uint64_t a2)
{
  return sub_10005D98C(a1, a2, (SEL *)&selRef__systemImageNamed_);
}

id sub_10005D98C(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v5;
  id v6;

  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v5);

  return v6;
}

uint64_t type metadata accessor for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Item);
}

uint64_t sub_10005DA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Item.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_10005DA20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FD4C(v0, qword_1004BAA88);
  sub_100039D34(v0, (uint64_t)qword_1004BAA88);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003A7200, 0x654D6E6F69746341, 0xEA0000000000756ELL);
}

size_t sub_10005DA98(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_1000057B4(&qword_1004B99B8);
  v11 = *(_QWORD *)(sub_1000057B4(&qword_1004B99B0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = sub_1000057B4(&qword_1004B99B0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_10005DC14(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10005E8F0(a1, a2, a3, a4, &qword_1004BACE0);
}

char *sub_10005DC20(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC38);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10005DD14(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BF6E0);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10005DE30(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005EE14(a1, a2, a3, a4, &qword_1004BACD0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

size_t sub_10005DE44(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005EE14(a1, a2, a3, a4, &qword_1004BAD10, (uint64_t (*)(_QWORD))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
}

char *sub_10005DE58(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4((uint64_t *)&unk_1004BDBA0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_10005DF58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005DF7C(uint64_t a1)
{
  uint64_t v1;

  return sub_10005CEF4(a1, *(_QWORD *)(v1 + 32), *(char ***)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

void sub_10005DF9C()
{
  uint64_t v0;

  sub_10005D2CC(v0);
}

char *sub_10005DFA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAD08);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E0A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACF8);
    v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[11 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 88 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(&qword_1004BAD00);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E1DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACC0);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    type metadata accessor for ICURLBagKey(0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E2F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005E684(a1, a2, a3, a4, &qword_1004BAC90);
}

_QWORD *sub_10005E304(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005F09C(a1, a2, a3, a4, (uint64_t *)&unk_1004C0590, &qword_1004BF5C0);
}

_QWORD *sub_10005E318(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACC8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(&qword_1004BA5F8);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E438(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACE8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(&qword_1004BACF0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E558(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACD8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4((uint64_t *)&unk_1004BD690);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10005E678(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005E684(a1, a2, a3, a4, &qword_1004BACB8);
}

_QWORD *sub_10005E684(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = a4[3];
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = a4[2];
  if (v8 <= v9)
    v10 = a4[2];
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_1000057B4(a5);
    v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    v12[2] = v9;
    v12[3] = 2 * (v14 >> 4);
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v12 + 4 >= &a4[2 * v9 + 4])
      memmove(v12 + 4, a4 + 4, 16 * v9);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(&qword_1004BAC40);
    swift_arrayInitWithCopy(v12 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

_QWORD *sub_10005E7A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BACB0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = a4 + 4;
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&v15[2 * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v14, v15, v8, &type metadata for CloudLibrary.StatusObserver.InternalObserver);
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10005E8C4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10005E8F0(a1, a2, a3, a4, &qword_1004BACA0);
}

_QWORD *sub_10005E8D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005F09C(a1, a2, a3, a4, &qword_1004BD090, &qword_1004BACA8);
}

char *sub_10005E8E4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10005E8F0(a1, a2, a3, a4, &qword_1004BAC98);
}

char *sub_10005E8F0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_1000057B4(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v9);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

char *sub_10005E9D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC30);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10005EACC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC88);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10005EBE8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC80);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_10005ECE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC70);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(&qword_1004BAC78);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_10005EE00(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005EE14(a1, a2, a3, a4, &qword_1004BAC28, type metadata accessor for SharePlayTogetherSession.Participant);
}

size_t sub_10005EE14(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_1000057B4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = a6(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v23);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

char *sub_10005EF88(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC68);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_10005F088(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10005F09C(a1, a2, a3, a4, &qword_1004BAC58, &qword_1004BAC60);
}

_QWORD *sub_10005F09C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_1000057B4(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4])
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    sub_1000057B4(a6);
    swift_arrayInitWithCopy(v14 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v14;
}

char *sub_10005F1D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1000057B4(&qword_1004BAC50);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_10005F2CC(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  char *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_10005DE58(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[16 * v8 + 32];
  result = swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_19;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_25;
  result = (unint64_t)(v16 + 16);
  v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19])
    result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  v21 = *((_QWORD *)v6 + 2);
  v18 = __OFADD__(v21, v10);
  v22 = v21 + v10;
  if (!v18)
  {
    *((_QWORD *)v6 + 2) = v22;
LABEL_19:
    *(_QWORD *)v16 = a3;
    *((_QWORD *)v16 + 1) = a4;
    *v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10005F3F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005F424()
{
  return sub_10005F468((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005D5E0);
}

uint64_t sub_10005F430()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005F45C()
{
  return sub_10005F468((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005D6A4);
}

uint64_t sub_10005F468(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_10005F47C(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for ActionMenu<A>.Style, a1);
}

uint64_t sub_10005F48C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
}

unint64_t sub_10005F49C()
{
  unint64_t result;

  result = qword_1004BAAA0[0];
  if (!qword_1004BAAA0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenuItemStyle, &type metadata for ActionMenuItemStyle);
    atomic_store(result, qword_1004BAAA0);
  }
  return result;
}

uint64_t sub_10005F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10005F4E8(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t sub_10005F528(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t sub_10005F5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v15);
  return a1;
}

__n128 initializeWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_10005F684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CAPackageDefinition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CAPackageDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu);
}

uint64_t type metadata accessor for ActionMenu.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051E10(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Style);
}

uint64_t sub_10005F7BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10005F838(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain(v11);
    swift_retain(v14);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_10005F938(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  return swift_release(*(_QWORD *)(((v5 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10005F998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  return a1;
}

uint64_t sub_10005FA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t sub_10005FAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10005FB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v9);
  v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFF8uLL;
  v12 = *(_QWORD *)(v11 + 8);
  *(_OWORD *)v11 = *(_OWORD *)v10;
  swift_release(v12);
  v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  return a1;
}

uint64_t sub_10005FC0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10005FC98 + 4 * byte_1003CA2E0[v10]))();
  }
}

void sub_10005FD1C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10005FE20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10005FE98);
}

void sub_10005FE28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10005FE30);
  JUMPOUT(0x10005FE98);
}

void sub_10005FE70()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005FE98);
}

void sub_10005FE78()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005FE98);
}

uint64_t sub_10005FE80(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10005FE98);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10005FE94);
    JUMPOUT(0x10005FE8CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

ValueMetadata *type metadata accessor for ActionMenuItemImage()
{
  return &type metadata for ActionMenuItemImage;
}

uint64_t _s9MusicCore19ActionMenuItemStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10005FF0C + 4 * byte_1003CA2F4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10005FF40 + 4 * byte_1003CA2EF[v4]))();
}

uint64_t sub_10005FF40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005FF48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005FF50);
  return result;
}

uint64_t sub_10005FF5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005FF64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10005FF68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005FF70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuItemStyle()
{
  return &type metadata for ActionMenuItemStyle;
}

char *sub_10005FF8C(char *result, int64_t a2, char a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = result;
  v8 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v10)
      v12 = v6 + v9;
    else
      v12 = v6;
    result = sub_10005E8F0(result, v12, 1, v5, &qword_1004BACA0);
    v5 = result;
  }
  v13 = v5 + 32;
  v14 = &v7[(_QWORD)(v5 + 32)];
  if (!v9)
    goto LABEL_19;
  v15 = *((_QWORD *)v5 + 2);
  v16 = v15 - a2;
  if (__OFSUB__(v15, a2))
    goto LABEL_25;
  result = v14 + 1;
  v17 = &v13[a2];
  if (v14 + 1 != &v13[a2] || result >= &v17[v16])
    result = (char *)memmove(result, v17, v16);
  v18 = *((_QWORD *)v5 + 2);
  v19 = __OFADD__(v18, v9);
  v20 = v18 + v9;
  if (!v19)
  {
    *((_QWORD *)v5 + 2) = v20;
LABEL_19:
    *v14 = a3;
    *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_10006009C(char *result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  char *v6;
  int64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char *v16;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = &result[-a2];
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = (int64_t)&v8[v5];
    else
      v10 = v5;
    result = sub_10005E8F0(result, v10, 1, v4, &qword_1004BACA0);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *((_QWORD *)v4 + 2);
  v12 = v11 - a2;
  if (__OFSUB__(v11, a2))
    goto LABEL_26;
  result = &v6[(_QWORD)(v4 + 32)];
  v13 = &v4[a2 + 32];
  if (v6 != (char *)a2 || result >= &v13[v12])
    result = (char *)memmove(result, v13, v12);
  v14 = *((_QWORD *)v4 + 2);
  v15 = __OFADD__(v14, v8);
  v16 = &v8[v14];
  if (!v15)
  {
    *((_QWORD *)v4 + 2) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000601A4(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10005E1DC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for ICURLBagKey(0);
  result = swift_arrayDestroy(&v4[v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[a2 + 4];
  if (v6 != a2 || &v4[v6 + 4] >= (_QWORD *)&v16[8 * v15])
    result = (uint64_t)memmove(&v4[v6 + 4], v16, 8 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000602BC(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10005E684(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_1004BAC48);
  }
  v12 = sub_1000057B4(&qword_1004BAC40);
  result = swift_arrayDestroy(&v4[2 * v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[2 * a2 + 4];
  if (v6 != a2 || &v4[2 * v6 + 4] >= (_QWORD *)&v16[16 * v15])
    result = (uint64_t)memmove(&v4[2 * v6 + 4], v16, 16 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1000603E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_33;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_41:
    __break(1u);
LABEL_42:
    if (v5 < 0)
      v22 = v5;
    else
      v22 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_36:
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_41;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_42;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for BagProvider.Observer();
  result = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return (void *)specialized Array._endMutation()(result);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v5 < 0)
    v23 = v5;
  else
    v23 = v11;
  swift_bridgeObjectRetain();
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  result = (void *)swift_bridgeObjectRelease(v5);
  v16 = v24 - v2;
  if (__OFSUB__(v24, v2))
    goto LABEL_51;
LABEL_21:
  v17 = (const void *)(v11 + 32 + 8 * v2);
  if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
    result = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
  if ((unint64_t)v5 >> 62)
  {
LABEL_52:
    if (v5 < 0)
      v25 = v5;
    else
      v25 = v11;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    result = (void *)swift_bridgeObjectRelease(v5);
    v19 = v26 + v6;
    if (!__OFADD__(v26, v6))
      goto LABEL_26;
    goto LABEL_57;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v19 = v18 + v6;
  if (!__OFADD__(v18, v6))
  {
LABEL_26:
    *(_QWORD *)(v11 + 16) = v19;
    return (void *)specialized Array._endMutation()(result);
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_100060658(uint64_t result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v4 + 3) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10005DE58(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy(&v4[16 * v6 + 32], v7, &type metadata for String);
  if (!v7)
    goto LABEL_19;
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_25;
  v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14])
    result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  v16 = *((_QWORD *)v4 + 2);
  v13 = __OFADD__(v16, v8);
  v17 = v16 - v7;
  if (!v13)
  {
    *((_QWORD *)v4 + 2) = v17;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_10006076C(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_10005F1D4((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFSUB__(v11, a2);
  v13 = v11 - a2;
  if (v12)
    goto LABEL_26;
  result = v4 + 32 + 16 * v6;
  v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13)
    result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  v15 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v15, v8);
  v16 = v15 + v8;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10006087C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C9D0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C9F8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046CA20, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000740B4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAFB8;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000609C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046CB10, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046CB38, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046CB60, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100074550;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAFD8;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100060B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_10046CCC8, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_10046CCF0, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_10046CD18, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100074AE4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000734B8;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1004BB028;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100074B6C((_QWORD *)a1);
  sub_100074B6C((_QWORD *)a1);
  sub_100074B6C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100060C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_10046CD90, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_10046CDB8, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_10046CDE0, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100074CB0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000734B8;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1004BB048;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100074D9C((_QWORD *)a1);
  sub_100074D9C((_QWORD *)a1);
  sub_100074D9C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100060D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046CE58, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046CE80, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046CEA8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100074F90;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BB068;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100060ED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046CC00, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046CC28, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046CC50, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000748A4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAFF8;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 72);
  v5 = swift_allocObject(&unk_10046C318, 152, 7);
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = swift_allocObject(&unk_10046C340, 152, 7);
  v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v10 + 96) = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_10046C368, 152, 7);
  v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v19;
  *(_BYTE *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = sub_100072704;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100072710;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1004BAEA8;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007282C(a1);
  sub_10007282C(a1);
  sub_10007282C(a1);
  return v3;
}

uint64_t sub_100061170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C868, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C890, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C8B8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000737C8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAF80;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000612B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C6D8, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_10046C700, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_10046C728, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100073478;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_10007335C;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1004BAF40;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100073580((_QWORD *)a1);
  sub_100073580((_QWORD *)a1);
  sub_100073580((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000613F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C610, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_10046C638, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_10046C660, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_10007331C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_10007335C;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1004BAF20;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100073580((_QWORD *)a1);
  sub_100073580((_QWORD *)a1);
  sub_100073580((_QWORD *)a1);
  return v3;
}

uint64_t sub_10006153C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C4F8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C520, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C548, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000730AC;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAEF0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C7A0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C7C8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C7F0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000736AC;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAF60;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000617C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C250, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C278, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C2A0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000724B8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAE80;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C188, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C1B0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C1D8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_10007239C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAE60;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061A4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046C0C0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C0E8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C110, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100072268;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_10007229C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAE40;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061B90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_10046BFF8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046C020, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046C048, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_10007214C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000756AC;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAE20;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  sub_10007506C((_QWORD *)a1);
  return v3;
}

uint64_t sub_100061CD4(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_1000057B4(&qword_1004BACF8);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1003C64D0;
  v4 = *((_BYTE *)a1 + 32);
  v5 = (_OWORD *)swift_allocObject(&unk_10046BF30, 112, 7);
  v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_10046BF58, 112, 7);
  v10 = a1[3];
  v9[3] = a1[2];
  v9[4] = v10;
  v11 = a1[5];
  v9[5] = a1[4];
  v9[6] = v11;
  v12 = a1[1];
  v9[1] = *a1;
  v9[2] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_10046BF80, 112, 7);
  v14 = a1[3];
  v13[3] = a1[2];
  v13[4] = v14;
  v15 = a1[5];
  v13[5] = a1[4];
  v13[6] = v15;
  v16 = *a1;
  v17 = a1[1];
  *(_BYTE *)(v3 + 32) = v4;
  v13[1] = v16;
  v13[2] = v17;
  *(_QWORD *)(v3 + 40) = sub_100071F34;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100071F40;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1004BAE00;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100071FE8(a1);
  sub_100071FE8(a1);
  sub_100071FE8(a1);
  return v3;
}

uint64_t sub_100061E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 216) = a1;
  v2 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100061E5C, 0, 0);
}

uint64_t sub_100061E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_10000FEB4(v2, v0 + 16, &qword_1004BA190);
  v4 = swift_allocObject(&unk_10046C5C0, 232, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  v11 = sub_1001CC7A0(v1, (uint64_t)&unk_1004BAF10, v4);
  swift_release(v11);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1004BADA0;
  if (!qword_1004BADA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistContext);
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

CFRange (__swiftcall *PlaylistContext.playlist.modify())(__C::_NSRange)
{
  type metadata accessor for PlaylistContext(0);
  return CFRange.init(_:);
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v8 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;
  __n128 v40;

  v33 = a4;
  v32 = a7;
  *(_QWORD *)&v36 = a6;
  *(_QWORD *)&v35 = a5;
  v31 = a9;
  v30 = a10;
  v18 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000057B4(&qword_1004BAD18);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_10006DA54(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  v35 = v37[1];
  v36 = v37[0];
  v34 = v37[2];
  v26 = v38;
  v27 = v39;
  sub_10000FE2C((uint64_t)v20, &qword_1004B9D88);
  sub_10000FE2C((uint64_t)v23, &qword_1004BAD18);
  result = v40;
  v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(_QWORD *)(a8 + 48) = v26;
  *(_QWORD *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  void *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  unint64_t v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  uint64_t v255;

  v230 = a8;
  v239 = a7;
  v235 = a6;
  v234 = a5;
  v209 = a4;
  v233 = a3;
  v232 = a2;
  v231 = a1;
  v237 = a9;
  v226 = a15;
  v227 = a14;
  v228 = a13;
  v229 = a12;
  v236 = a11;
  v225 = type metadata accessor for UploadedVideo(0);
  v184 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v183 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for TVShow(0);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v186 = (char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for TVSeason(0);
  v190 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v189 = (char *)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for TVEpisode(0);
  v192 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v191 = (char *)&v182 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for Station(0);
  v195 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v194 = (char *)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for Song(0);
  v198 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v197 = (char *)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for RadioShow(0);
  v202 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v201 = (char *)&v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for Playlist(0);
  v204 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v203 = (char *)&v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for MusicVideo(0);
  v207 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v206 = (char *)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for MusicMovie(0);
  v212 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v211 = (char *)&v182 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = type metadata accessor for Genre(0);
  v214 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v213 = (char *)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for EditorialItem(0);
  v217 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v216 = (char *)&v182 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for Curator(0);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for Artist(0);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v29 = (char *)&v182 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v30);
  v32 = (char *)&v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1000057B4(&qword_1004BAD18);
  __chkstk_darwin(v33);
  v35 = (char *)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Album(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v182 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GenericMusicItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = __chkstk_darwin(v40);
  v185 = (char *)&v182 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v45 = (char *)&v182 - v44;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v46((char *)&v182 - v44, v238, v40);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v45, v40);
  if (v47 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v45, v36);
    v48 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v35, 1, 1, v48);
    v49 = type metadata accessor for Actions.MetricsReportingContext(0);
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v32, 1, 1, v49);
    sub_10006971C((uint64_t)v39, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, v236, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v50 = v250;
    v235 = v249;
    v51 = v251;
    v52 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C((uint64_t)v32, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C((uint64_t)v35, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
    v56 = v52;
    v57 = v50;
    v58 = v39;
LABEL_3:
    v59 = v36;
LABEL_29:
    result = v55(v58, v59);
    goto LABEL_30;
  }
  v60 = v236;
  v61 = v225;
  if (v47 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v62 = v223;
    v63 = v224;
    (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v29, v45, v224);
    v64 = type metadata accessor for PlaylistContext(0);
    v65 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v35, 1, 1, v64);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v66 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v67 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v32, 1, 1, v66);
    sub_100069B8C((uint64_t)v29, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v68 = v254;
    v234 = v255;
    sub_10000FE2C(v67, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v65, &qword_1004BAD18);
    v69 = v29;
    v54 = v68;
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v69, v63);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v71 = v220;
    v72 = (uint64_t)v219;
    v36 = v221;
    (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v219, v45, v221);
    v73 = type metadata accessor for PlaylistContext(0);
    v74 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v35, 1, 1, v73);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v75 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v76 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v32, 1, 1, v75);
    sub_100069FFC(v72, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v76, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v74, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v71 + 8);
    v58 = (char *)v72;
    goto LABEL_3;
  }
  if (v47 == enum case for GenericMusicItem.editorialItem(_:))
  {
    v77 = v40;
    v78 = (uint64_t)v35;
    v79 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v77);
    v80 = v217;
    v81 = (uint64_t)v216;
    (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v216, v45, v222);
    v82 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v35, 1, 1, v82);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v83 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v84 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v32, 1, 1, v83);
    sub_10006A46C(v81, v231, v232, v233, (uint64_t)v35, v234, v235, v79, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v84, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v78, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
    v58 = (char *)v81;
    v85 = (uint64_t *)&v249;
LABEL_28:
    v59 = *(v85 - 32);
    goto LABEL_29;
  }
  if (v47 == enum case for GenericMusicItem.genre(_:))
  {
    v86 = v40;
    v87 = (uint64_t)v35;
    v88 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v86);
    v89 = v214;
    v90 = (uint64_t)v213;
    (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v213, v45, v218);
    v91 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v35, 1, 1, v91);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v92 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v93 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v32, 1, 1, v92);
    sub_10006A8F8(v90, v231, v232, v233, (uint64_t)v35, v234, v235, v88, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v93, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v87, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v89 + 8);
    v58 = (char *)v90;
    v85 = &v245;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v94 = v40;
    v95 = (uint64_t)v35;
    v96 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v94);
    v97 = v212;
    v98 = (uint64_t)v32;
    v99 = (uint64_t)v211;
    (*(void (**)(char *, char *, uint64_t))(v212 + 32))(v211, v45, v215);
    v100 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v35, 1, 1, v100);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v101 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v32, 1, 1, v101);
    sub_10006AD68(v99, v231, v232, v233, (uint64_t)v35, v234, v235, v96, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v98, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v95, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v97 + 8);
    v58 = (char *)v99;
    v85 = (uint64_t *)&v243 + 1;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v102 = v40;
    v103 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v102);
    v104 = v207;
    v105 = (uint64_t)v206;
    (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v206, v45, v210);
    v106 = type metadata accessor for Actions.MetricsReportingContext(0);
    v107 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v32, 1, 1, v106);
    sub_10006B1F4(v105, v231, v232, v233, v209, v234, v235, v103, &v246, v230, a10, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v107, &qword_1004B9D88);
    v55 = *(uint64_t (**)(char *, uint64_t))(v104 + 8);
    v58 = (char *)v105;
    v85 = (uint64_t *)&v241;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.playlist(_:))
  {
    v108 = v40;
    v109 = (uint64_t)v35;
    v110 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v108);
    v111 = v204;
    v112 = (uint64_t)v203;
    (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v203, v45, v208);
    v113 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v35, 1, 1, v113);
    v114 = type metadata accessor for Actions.MetricsReportingContext(0);
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    v115 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v32, 1, 1, v114);
    sub_10006B664(v112, v231, v232, v233, (uint64_t)v35, v234, v235, v110, &v246, v230, (uint64_t)&v243, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v115, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v109, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
    v58 = (char *)v112;
    v85 = (uint64_t *)&v240;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.radioShow(_:))
  {
    v116 = v40;
    v117 = (uint64_t)v35;
    v118 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v116);
    v119 = v202;
    v120 = (uint64_t)v201;
    (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v201, v45, v205);
    v121 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v35, 1, 1, v121);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v122 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v123 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v32, 1, 1, v122);
    sub_10006BAD4(v120, v231, v232, v233, (uint64_t)v35, v234, v235, v118, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v123, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v117, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v119 + 8);
    v58 = (char *)v120;
    v85 = (uint64_t *)&v237;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.song(_:))
  {
    v124 = v40;
    v125 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v124);
    v126 = v198;
    v127 = (uint64_t)v197;
    (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v197, v45, v200);
    v128 = type metadata accessor for Actions.MetricsReportingContext(0);
    v129 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v32, 1, 1, v128);
    sub_10006BF44(v127, v231, v232, v233, v209, v234, v235, v125, &v246, v230, a10, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v129, &qword_1004B9D88);
    v55 = *(uint64_t (**)(char *, uint64_t))(v126 + 8);
    v58 = (char *)v127;
    v85 = (uint64_t *)&v232;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.station(_:))
  {
    v130 = v40;
    v131 = (uint64_t)v35;
    v132 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v130);
    v133 = v195;
    v134 = (uint64_t)v194;
    (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v45, v199);
    v135 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v35, 1, 1, v135);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v136 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v137 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v32, 1, 1, v136);
    sub_10006C3B4(v134, v231, v232, v233, (uint64_t)v35, v234, v235, v132, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v137, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v131, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v133 + 8);
    v58 = (char *)v134;
    v85 = (uint64_t *)&v231;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v138 = v40;
    v139 = (uint64_t)v35;
    v140 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v138);
    v141 = v192;
    v142 = (uint64_t)v191;
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v191, v45, v196);
    v143 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v35, 1, 1, v143);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v144 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v145 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v32, 1, 1, v144);
    sub_10006C824(v142, v231, v232, v233, (uint64_t)v35, v234, v235, v140, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v145, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v139, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v141 + 8);
    v58 = (char *)v142;
    v85 = &v228;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v146 = v40;
    v147 = (uint64_t)v35;
    v148 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v146);
    v149 = v190;
    v150 = (uint64_t)v189;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))(v189, v45, v193);
    v151 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v35, 1, 1, v151);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v152 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v153 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v32, 1, 1, v152);
    sub_10006CCB0(v150, v231, v232, v233, (uint64_t)v35, v234, v235, v148, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v153, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    sub_10000FE2C(v147, &qword_1004BAD18);
    v55 = *(uint64_t (**)(char *, uint64_t))(v149 + 8);
    v58 = (char *)v150;
    v85 = &v225;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvShow(_:))
  {
    v158 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v159 = v187;
    v160 = (uint64_t)v186;
    v161 = v188;
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v186, v45, v188);
    v162 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v35, 1, 1, v162);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v163 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v164 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v32, 1, 1, v163);
    sub_10006D13C(v160, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v164, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    v165 = (uint64_t)v158;
LABEL_35:
    sub_10000FE2C(v165, &qword_1004BAD18);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v159 + 8))(v160, v161);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v159 = v184;
    v160 = (uint64_t)v183;
    v161 = v61;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, v45, v61);
    v166 = type metadata accessor for PlaylistContext(0);
    v167 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v35, 1, 1, v166);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v168 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v169 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 56))(v32, 1, 1, v168);
    sub_10006D5C8(v160, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_10000FE2C(v169, &qword_1004B9D88);
    sub_10000FE2C((uint64_t)&v240, &qword_1004BAD28);
    sub_10000FE2C((uint64_t)&v243, &qword_1004BAD30);
    v165 = (uint64_t)v167;
    goto LABEL_35;
  }
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v170 = type metadata accessor for Logger(0);
  sub_100039D34(v170, (uint64_t)static Logger.actions);
  v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v185, v238, v40);
  v172 = Logger.logObject.getter(v171);
  v173 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v172, v173))
  {
    v174 = swift_slowAlloc(12, -1);
    v175 = swift_slowAlloc(32, -1);
    v246 = v175;
    *(_DWORD *)v174 = 136315138;
    v176 = sub_100004D8C(&qword_1004BAD20, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v177 = v185;
    v178 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v176);
    v180 = v179;
    *(_QWORD *)(v174 + 4) = sub_1000393D0(v178, v179, &v246);
    swift_bridgeObjectRelease(v180);
    v181 = *(void (**)(char *, uint64_t))(v41 + 8);
    v181(v177, v40);
    _os_log_impl((void *)&_mh_execute_header, v172, v173, "GenericMusicItem %s actions not handled.", (uint8_t *)v174, 0xCu);
    swift_arrayDestroy(v175, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v175, -1, -1);
    swift_slowDealloc(v174, -1, -1);
  }
  else
  {
    v181 = *(void (**)(char *, uint64_t))(v41 + 8);
    v181(v185, v40);
  }

  result = ((uint64_t (*)(char *, uint64_t))v181)(v45, v40);
  v238 = 0;
  v239 = 0;
  v236 = 0;
  v235 = 0;
  v57 = 0;
  v51 = 0;
  v56 = 0;
  v53 = 0;
  v54 = 0;
  v234 = 0;
LABEL_30:
  v154 = v237;
  v155 = v239;
  *v237 = v238;
  v154[1] = v155;
  v156 = v235;
  v154[2] = v236;
  v154[3] = v156;
  v154[4] = v57;
  v154[5] = v51;
  v154[6] = v56;
  v154[7] = v53;
  v157 = v234;
  v154[8] = v54;
  v154[9] = v157;
  return result;
}

_QWORD *sub_100064600(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  unint64_t v120;
  id v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Swift::String v127;
  void *v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *result;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  int64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182[2];
  __int128 v183[2];
  uint64_t v184;
  __int128 v185[2];
  uint64_t v186;
  __int128 v187[3];
  uint64_t v188;
  unsigned __int8 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  unsigned __int8 v195;
  __int128 v196;
  __int128 v197[3];
  uint64_t v198;
  unsigned __int8 v199;
  __int128 v200;

  v165 = a8;
  v171 = a6;
  *(_QWORD *)&v180 = a5;
  v167 = a4;
  *(_QWORD *)&v181 = a3;
  v19 = sub_1000057B4(&qword_1004BAD18);
  __chkstk_darwin(v19);
  *(_QWORD *)&v168 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for PlaylistContext(0);
  *(_QWORD *)&v169 = *(_QWORD *)(v166 - 8);
  v21 = __chkstk_darwin(v166);
  v163 = v22;
  v164 = (_QWORD *)((char *)&v156 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  *(_QWORD *)&v170 = (char *)&v156 - v23;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000057B4(&qword_1004B9D88);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v31 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = a1;
  sub_10000FEB4(a1, (uint64_t)&v191, &qword_1004BAD30);
  v178 = a7;
  *(_QWORD *)&v179 = a2;
  v176 = v25;
  *(_QWORD *)&v177 = v24;
  v174 = v31;
  v175 = v27;
  v172 = v29;
  v173 = v30;
  if (*((_QWORD *)&v192 + 1))
  {
    sub_100033620(&v191, (uint64_t)v197);
    sub_1000444A8(a2, (uint64_t)&v191);
    v32 = sub_1000057B4(&qword_1004BF920);
    v162 = String.init<A>(describing:)(&v191, v32);
    v33 = v27;
    v35 = v34;
    sub_1000444A8(a2, (uint64_t)&v191);
    sub_1000444A8((uint64_t)v197, (uint64_t)v187);
    sub_10000FEB4(v181, (uint64_t)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
    v36 = *(unsigned __int8 *)(v29 + 80);
    v37 = (v36 + 96) & ~v36;
    v38 = swift_allocObject(&unk_10046C9A8, v37 + v30, v36 | 7);
    sub_100033620(&v191, v38 + 16);
    sub_100033620(v187, v38 + 56);
    sub_10000FD10((uint64_t)v31, v38 + v37, &qword_1004B9D88);
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v40 = UUID.uuidString.getter(v39);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    strcpy((char *)&v191, "ActionMenu: ");
    BYTE13(v191) = 0;
    HIWORD(v191) = -5120;
    v43._countAndFlagsBits = v162;
    v43._object = v35;
    String.append(_:)(v43);
    swift_bridgeObjectRelease(v35);
    v44 = v191;
    v45 = sub_1000057B4(&qword_1004BACF8);
    v46 = swift_allocObject(v45, 120, 7);
    *(_OWORD *)(v46 + 16) = xmmword_1003C64D0;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_OWORD *)(v46 + 48) = v44;
    *(_OWORD *)(v46 + 64) = xmmword_1003C6CA0;
    *(_QWORD *)(v46 + 80) = 0;
    *(_QWORD *)(v46 + 88) = 0;
    *(_QWORD *)(v46 + 96) = sub_100074078;
    *(_QWORD *)(v46 + 104) = v38;
    *(_BYTE *)(v46 + 112) = 1;
    *(_QWORD *)&v191 = _swiftEmptyArrayStorage;
    sub_1000AA460((_QWORD *)v46);
    v159 = (_QWORD *)v191;
    sub_10000970C(v197);
  }
  else
  {
    sub_10000FE2C((uint64_t)&v191, &qword_1004BAD30);
    v159 = _swiftEmptyArrayStorage;
  }
  v47 = v169;
  v48 = v168;
  v49 = v166;
  sub_10000FEB4((uint64_t)v167, v168, &qword_1004BAD18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v49) == 1)
  {
    sub_10000FE2C(v48, &qword_1004BAD18);
    v50 = _swiftEmptyArrayStorage;
    v51 = v178;
    v52 = v179;
    v53 = (_OWORD *)&unk_1003C6000;
  }
  else
  {
    v54 = v48;
    v55 = v170;
    sub_100073BA8(v54, v170);
    v52 = v179;
    sub_1000444A8(v179, (uint64_t)v197);
    v56 = sub_1000057B4(&qword_1004BF920);
    *(_QWORD *)&v169 = String.init<A>(describing:)(v197, v56);
    v58 = v57;
    v59 = (uint64_t)v164;
    sub_100073BEC(v55, (uint64_t)v164);
    v60 = (uint64_t)v174;
    sub_10000FEB4(v181, (uint64_t)v174, &qword_1004B9D88);
    v61 = *(unsigned __int8 *)(v47 + 80);
    v62 = (v61 + 16) & ~v61;
    v63 = ((unint64_t)v163 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = *(unsigned __int8 *)(v172 + 80);
    v65 = (v64 + v63 + 8) & ~v64;
    v66 = swift_allocObject(&unk_10046C980, v65 + v173, v61 | v64 | 7);
    sub_100073BA8(v59, v66 + v62);
    v67 = v180;
    *(_QWORD *)(v66 + v63) = v180;
    sub_10000FD10(v60, v66 + v65, &qword_1004B9D88);
    swift_retain(v67);
    v68 = v175;
    v69 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v70 = UUID.uuidString.getter(v69);
    v72 = v71;
    (*(void (**)(char *, _QWORD))(v176 + 8))(v68, v177);
    strcpy((char *)v197, "ActionMenu: ");
    BYTE13(v197[0]) = 0;
    HIWORD(v197[0]) = -5120;
    v73._countAndFlagsBits = v169;
    v73._object = v58;
    String.append(_:)(v73);
    swift_bridgeObjectRelease(v58);
    v75 = *((_QWORD *)&v197[0] + 1);
    v74 = *(_QWORD *)&v197[0];
    v76 = sub_1000057B4(&qword_1004BACF8);
    v77 = swift_allocObject(v76, 120, 7);
    *(_OWORD *)(v77 + 16) = xmmword_1003C64D0;
    *(_QWORD *)(v77 + 32) = v70;
    *(_QWORD *)(v77 + 40) = v72;
    *(_OWORD *)(v77 + 48) = __PAIR128__(v75, v74);
    *(_OWORD *)(v77 + 64) = xmmword_1003C6CA0;
    *(_QWORD *)(v77 + 80) = 0;
    *(_QWORD *)(v77 + 88) = 0;
    *(_QWORD *)(v77 + 96) = sub_100073E38;
    *(_QWORD *)(v77 + 104) = v66;
    *(_BYTE *)(v77 + 112) = 1;
    v53 = &unk_1003C6000;
    *(_QWORD *)&v197[0] = _swiftEmptyArrayStorage;
    sub_1000AA460((_QWORD *)v77);
    v50 = *(_QWORD **)&v197[0];
    sub_100073EAC(v170);
    v51 = v178;
  }
  v78 = (uint64_t)a16;
  sub_1000444A8(v52, (uint64_t)v187);
  v79 = sub_1000057B4(&qword_1004BF920);
  v80 = sub_1000057B4(&qword_1004BAEC0);
  if ((swift_dynamicCast(&v191, v187, v79, v80, 6) & 1) != 0)
  {
    sub_100071E7C(&v191, v197);
    sub_1000444A8(v51, (uint64_t)&v191);
    v81 = v181;
    sub_100070B00(v197, v180, v171, (uint64_t)&v191, v165, a9, v181, (uint64_t)v187);
    v169 = v187[1];
    v170 = v187[0];
    v168 = v187[2];
    v82 = v188;
    v83 = v189;
    sub_10000FE2C((uint64_t)&v191, &qword_1004B9DF8);
    v84 = sub_1000057B4(&qword_1004BACF8);
    v85 = swift_allocObject(v84, 120, 7);
    v86 = v170;
    *(_OWORD *)(v85 + 16) = v53[77];
    *(_OWORD *)(v85 + 32) = v86;
    v87 = v168;
    *(_OWORD *)(v85 + 48) = v169;
    *(_OWORD *)(v85 + 64) = v87;
    *(_QWORD *)(v85 + 80) = v82;
    *(_QWORD *)(v85 + 88) = v83;
    *(_OWORD *)(v85 + 96) = v190;
    *(_BYTE *)(v85 + 112) = 1;
    *(_QWORD *)&v191 = _swiftEmptyArrayStorage;
    sub_1000AA460((_QWORD *)v85);
    v88 = (_QWORD *)v191;
    sub_10000970C(v197);
  }
  else
  {
    v192 = 0u;
    v193 = 0u;
    v191 = 0u;
    sub_10000FE2C((uint64_t)&v191, &qword_1004BAF98);
    v88 = _swiftEmptyArrayStorage;
    v81 = v181;
  }
  *(_QWORD *)&v170 = a15;
  *(_QWORD *)&v169 = a14;
  *(_QWORD *)&v168 = a13;
  v166 = a12;
  v167 = a11;
  sub_1000444A8(v52, (uint64_t)&v191);
  v89 = sub_1000057B4(&qword_1004BAD38);
  v90 = swift_dynamicCast(v185, &v191, v79, v89, 6);
  v163 = v88;
  v164 = v50;
  if ((v90 & 1) == 0)
  {
    v186 = 0;
    memset(v185, 0, sizeof(v185));
    sub_10000FE2C((uint64_t)v185, &qword_1004BAFA0);
LABEL_15:
    *(_QWORD *)&v158 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  sub_100033620(v185, (uint64_t)v197);
  if (!a10)
  {
    sub_10000970C(v197);
    goto LABEL_15;
  }
  v91 = a10;
  v160 = a16;
  v92 = v91;
  sub_100070FD4((uint64_t)v197, v91, v167, v51, v166, v168, v169, (uint64_t)&v191, v170, v81);
  v157 = v192;
  v158 = v191;
  v156 = v193;
  v93 = v194;
  v94 = v195;
  v95 = sub_1000057B4(&qword_1004BACF8);
  v96 = swift_allocObject(v95, 120, 7);
  v97 = v158;
  *(_OWORD *)(v96 + 16) = v53[77];
  *(_OWORD *)(v96 + 32) = v97;
  v98 = v156;
  *(_OWORD *)(v96 + 48) = v157;
  *(_OWORD *)(v96 + 64) = v98;
  *(_QWORD *)(v96 + 80) = v93;
  *(_QWORD *)(v96 + 88) = v94;
  v78 = (uint64_t)v160;
  *(_OWORD *)(v96 + 96) = v196;
  *(_BYTE *)(v96 + 112) = 1;
  *(_QWORD *)&v185[0] = _swiftEmptyArrayStorage;
  sub_1000AA460((_QWORD *)v96);

  *(_QWORD *)&v158 = *(_QWORD *)&v185[0];
  sub_10000970C(v197);
LABEL_16:
  v99 = v161;
  v101 = v172;
  v100 = v173;
  v162 = v79;
  sub_1000444A8(v52, (uint64_t)v197);
  v102 = String.init<A>(describing:)(v197, v79);
  v160 = v103;
  v161 = v102;
  sub_1000444A8(v52, (uint64_t)v197);
  sub_1000444A8(v78, (uint64_t)v185);
  v104 = (uint64_t)v174;
  sub_10000FEB4(v81, (uint64_t)v174, &qword_1004B9D88);
  sub_10000FEB4(v99, (uint64_t)v183, &qword_1004BAD30);
  sub_1000444A8(v51, (uint64_t)v182);
  v105 = *(unsigned __int8 *)(v101 + 80);
  v106 = (v105 + 96) & ~v105;
  v107 = (v100 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
  v108 = (v107 + 47) & 0xFFFFFFFFFFFFFFF8;
  v109 = (v108 + 15) & 0xFFFFFFFFFFFFFFF8;
  v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v110 + 47) & 0xFFFFFFFFFFFFFFF8;
  v112 = (v111 + 23) & 0xFFFFFFFFFFFFFFF8;
  v113 = swift_allocObject(&unk_10046C958, v112 + 16, v105 | 7);
  sub_100033620(v197, v113 + 16);
  sub_100033620(v185, v113 + 56);
  sub_10000FD10(v104, v113 + v106, &qword_1004B9D88);
  sub_10000FD10((uint64_t)v183, v113 + v107, &qword_1004BAD30);
  v114 = v180;
  *(_QWORD *)(v113 + v108) = v180;
  v115 = v167;
  *(_QWORD *)(v113 + v109) = v167;
  sub_100033620(v182, v113 + v110);
  v116 = (_QWORD *)(v113 + v111);
  v117 = v168;
  *v116 = v166;
  v116[1] = v117;
  v118 = (_QWORD *)(v113 + v112);
  v119 = v169;
  v120 = v170;
  *v118 = v169;
  v118[1] = v120;
  swift_retain(v114);
  v121 = v115;
  swift_bridgeObjectRetain();
  sub_10002676C(v119, v120);
  v122 = v175;
  v123 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v124 = UUID.uuidString.getter(v123);
  v126 = v125;
  (*(void (**)(char *, _QWORD))(v176 + 8))(v122, v177);
  strcpy((char *)v197, "ActionMenu: ");
  BYTE13(v197[0]) = 0;
  HIWORD(v197[0]) = -5120;
  v128 = v160;
  v127._countAndFlagsBits = v161;
  v127._object = v160;
  String.append(_:)(v127);
  swift_bridgeObjectRelease(v128);
  v129 = v197[0];
  v130 = sub_1000057B4(&qword_1004BACF8);
  v131 = swift_allocObject(v130, 120, 7);
  v177 = xmmword_1003C64D0;
  *(_OWORD *)(v131 + 16) = xmmword_1003C64D0;
  *(_QWORD *)(v131 + 32) = v124;
  *(_QWORD *)(v131 + 40) = v126;
  *(_OWORD *)(v131 + 48) = v129;
  *(_OWORD *)(v131 + 64) = xmmword_1003C6CA0;
  *(_QWORD *)(v131 + 80) = 0;
  *(_QWORD *)(v131 + 88) = 0;
  *(_QWORD *)(v131 + 96) = sub_100073B04;
  *(_QWORD *)(v131 + 104) = v113;
  *(_BYTE *)(v131 + 112) = 1;
  sub_1000444A8(v179, (uint64_t)v197);
  v132 = sub_1000057B4(&qword_1004BAD40);
  if ((swift_dynamicCast(v183, v197, v162, v132, 6) & 1) != 0)
  {
    sub_100033620(v183, (uint64_t)v185);
    sub_1000444A8(v178, (uint64_t)v183);
    sub_100071218((uint64_t)v185, v114, v171, (uint64_t)v183, v165, v181, 0, 0, (uint64_t)v197);
    v180 = v197[1];
    v181 = v197[0];
    v179 = v197[2];
    v133 = v198;
    v134 = v199;
    sub_10000FE2C((uint64_t)v183, &qword_1004B9DF8);
    v135 = swift_allocObject(v130, 120, 7);
    v136 = v181;
    *(_OWORD *)(v135 + 16) = v177;
    *(_OWORD *)(v135 + 32) = v136;
    v137 = v179;
    *(_OWORD *)(v135 + 48) = v180;
    *(_OWORD *)(v135 + 64) = v137;
    *(_QWORD *)(v135 + 80) = v133;
    *(_QWORD *)(v135 + 88) = v134;
    *(_OWORD *)(v135 + 96) = v200;
    *(_BYTE *)(v135 + 112) = 1;
    *(_QWORD *)&v183[0] = _swiftEmptyArrayStorage;
    sub_1000AA460((_QWORD *)v135);
    v138 = *(_QWORD **)&v183[0];
    sub_10000970C(v185);
  }
  else
  {
    v184 = 0;
    memset(v183, 0, sizeof(v183));
    sub_10000FE2C((uint64_t)v183, &qword_1004BAFA8);
    v138 = _swiftEmptyArrayStorage;
  }
  v139 = sub_1000057B4(&qword_1004BADE8);
  result = (_QWORD *)swift_allocObject(v139, 80, 7);
  v141 = result;
  result[4] = v159;
  *(_QWORD *)&v181 = result + 4;
  v142 = v163;
  result[5] = v164;
  result[6] = v142;
  result[7] = v158;
  result[8] = v131;
  result[9] = v138;
  v143 = 4;
  v144 = _swiftEmptyArrayStorage;
  while (1)
  {
    v145 = v141[v143];
    v146 = *(_QWORD *)(v145 + 16);
    v147 = v144[2];
    v148 = v147 + v146;
    if (__OFADD__(v147, v146))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v144);
    if ((_DWORD)result && v148 <= v144[3] >> 1)
    {
      if (*(_QWORD *)(v145 + 16))
        goto LABEL_31;
    }
    else
    {
      if (v147 <= v148)
        v149 = v147 + v146;
      else
        v149 = v147;
      result = sub_10005E0A4(result, v149, 1, v144);
      v144 = result;
      if (*(_QWORD *)(v145 + 16))
      {
LABEL_31:
        v150 = v144[2];
        if ((v144[3] >> 1) - v150 < v146)
          goto LABEL_38;
        v151 = (uint64_t)&v144[11 * v150 + 4];
        sub_1000057B4(&qword_1004BAD00);
        result = (_QWORD *)swift_arrayInitWithCopy(v151);
        if (v146)
        {
          v152 = v144[2];
          v153 = __OFADD__(v152, v146);
          v154 = v152 + v146;
          if (v153)
            goto LABEL_39;
          v144[2] = v154;
        }
        goto LABEL_21;
      }
    }
    if (v146)
      goto LABEL_37;
LABEL_21:
    result = (_QWORD *)swift_bridgeObjectRelease(v145);
    if (++v143 == 10)
    {
      swift_setDeallocating(v141);
      v155 = sub_1000057B4(&qword_1004BADF0);
      swift_arrayDestroy(v181, 6, v155);
      swift_deallocClassInstance(v141, 32, 7);
      return v144;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_100065314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_1000096A0(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_1000096A0(a2, v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v17 + 16))(v16, v11, v9);
  __chkstk_darwin(v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 16))(v20, v14, v12);
  sub_10000FEB4(a3, (uint64_t)v8, &qword_1004B9D88);
  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v22 = static ApplicationCapabilities.Controller.shared;
  swift_retain(static ApplicationCapabilities.Controller.shared);
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v16, v22, (uint64_t)v20, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v23 = v32;
  v33 = v29;
  v27 = v30;
  v26 = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_10007B69C;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_1004BB0C0;
  v42 = 0;
  v43 = &unk_1004BB0C8;
  v44 = 0;
  v24 = (_QWORD *)sub_10006087C((uint64_t)&v33);
  swift_release(v23);
  swift_release(v26);
  swift_release(v27);
  v28 = _swiftEmptyArrayStorage;
  sub_1000AA460(v24);
  return v28;
}

_QWORD *sub_100065568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];
  char v68;
  uint64_t (*v69)(uint64_t (**)(void));
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  v60 = a3;
  v65 = a2;
  v4 = sub_1000057B4(&qword_1004B9D88);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for Playlist.Entry(0);
  v18 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  v57 = v18;
  v20 = __chkstk_darwin(v17);
  v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v64 = (char *)&v52 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v52 - v23;
  v56 = *(void (**)(char *, uint64_t))(v25 + 16);
  v54 = (char *)&v52 - v23;
  v56((char *)&v52 - v23, a1);
  v26 = a1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27(v16, v26, v8);
  sub_10000FEB4(v60, (uint64_t)v7, &qword_1004B9D88);
  v27(v14, (uint64_t)v16, v8);
  v28 = *(unsigned __int8 *)(v9 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = v28 | 7;
  v60 = swift_allocObject(&unk_10046CA98, v29 + v10, v28 | 7);
  v31 = v60 + v29;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v33 = v8;
  v53 = v8;
  v32(v31, v14, v8);
  v34 = v55;
  ((void (*)(char *, char *, uint64_t))v56)(v64, v24, v55);
  v35 = v58;
  v32((uint64_t)v58, v16, v33);
  v36 = v57;
  v37 = *(unsigned __int8 *)(v57 + 80);
  v38 = (v37 + 24) & ~v37;
  v39 = (v19 + v28 + v38) & ~v28;
  v40 = swift_allocObject(&unk_10046CAC0, v39 + v10, v30 | v37);
  v41 = v64;
  *(_QWORD *)(v40 + 16) = v65;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v42(v40 + v38, v41, v34);
  v32(v40 + v39, v35, v53);
  v43 = v61;
  v44 = v34;
  v42((uint64_t)v61, v54, v34);
  v45 = *(unsigned __int8 *)(v62 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = (v63 + v37 + v46) & ~v37;
  v48 = swift_allocObject(&unk_10046CAE8, v47 + v19, v37 | v45 | 7);
  sub_10000FD10((uint64_t)v59, v48 + v46, &qword_1004B9D88);
  v42(v48 + v47, v43, v44);
  v49 = v60;
  v67[0] = sub_100047174;
  v67[1] = v60;
  v67[2] = &unk_1004BA340;
  v67[3] = v40;
  v67[4] = &unk_1004BA350;
  v67[5] = v48;
  v68 = 41;
  v69 = sub_10002F788;
  v70 = 0;
  v71 = 0x4014000000000000;
  v72 = &unk_1004BA328;
  v73 = 0;
  v74 = &unk_1004BA330;
  v75 = 0;
  swift_retain(v65);
  v50 = (_QWORD *)sub_1000609C0((uint64_t)v67);
  swift_release(v48);
  swift_release(v40);
  swift_release(v49);
  v66 = _swiftEmptyArrayStorage;
  sub_1000AA460(v50);
  return v66;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v9;
  __n128 result;
  _OWORD v11[5];

  sub_100070B00(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_1000659AC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(char *, char *, uint64_t), int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  __int128 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  int64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  _QWORD *v102;
  _OWORD v103[3];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _QWORD v111[8];
  _OWORD v112[4];
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[8];
  char v118;
  uint64_t (*v119)(uint64_t (**)(void));
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  _QWORD v126[18];

  *(_QWORD *)&v99 = a8;
  *(_QWORD *)&v98 = a7;
  v101 = a5;
  v97 = a11;
  v96 = (_QWORD *)a10;
  v100 = a9;
  v16 = (char *)v111;
  v17 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000444A8(a1, (uint64_t)v112);
  v20 = sub_1000057B4(&qword_1004BF920);
  v21 = sub_1000057B4(&qword_1004BB010);
  v22 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast(&v113, v112, v20, v21, 6) & 1) == 0)
  {
    v115 = 0;
    v113 = 0u;
    v114 = 0u;
    sub_10000FE2C((uint64_t)&v113, &qword_1004BB018);
    v95 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_100033620(&v113, (uint64_t)v103);
  sub_1000444A8((uint64_t)v103, (uint64_t)v126);
  sub_1000444A8(a2, (uint64_t)v117);
  sub_10000FEB4(a3, (uint64_t)v19, &qword_1004B9D88);
  if (qword_1004B8AF8 != -1)
    goto LABEL_47;
  while (1)
  {
    v23 = static ApplicationCapabilities.Controller.shared;
    swift_retain(static ApplicationCapabilities.Controller.shared);
    sub_100097E18(v126, v23, v117, (uint64_t)v19, v111);
    v24 = v111[6];
    v25 = v111[7];
    v26 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v26;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v117[6] = v24;
    v117[7] = v25;
    v118 = 42;
    v119 = sub_10002F788;
    v120 = 0;
    v121 = 0x4014000000000000;
    v122 = &unk_1004BB628;
    v123 = 0;
    v124 = &unk_1004BB630;
    v125 = 0;
    v27 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v27;
    v28 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v28;
    v29 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v29;
    v30 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v30;
    v31 = (_QWORD *)sub_100060B04((uint64_t)v126);
    sub_100074A44(v117, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_QWORD *)&v109 = v22;
    sub_1000AA460(v31);
    v95 = (char *)v109;
    sub_10000970C(v103);
LABEL_5:
    v93 = v19;
    sub_10000FEB4((uint64_t)a4, (uint64_t)&v109, &qword_1004BAD30);
    v94 = a3;
    if (v110)
    {
      sub_100033620(&v109, (uint64_t)&v113);
      v32 = *(_QWORD *)(a1 + 24);
      v91 = *(_QWORD *)(a1 + 32);
      v33 = sub_1000096A0((_QWORD *)a1, v32);
      v92 = a6;
      v34 = v33;
      v35 = *((_QWORD *)&v114 + 1);
      v89 = v115;
      v36 = (_QWORD *)a1;
      v37 = sub_1000096A0(&v113, *((uint64_t *)&v114 + 1));
      v90 = &v88;
      __chkstk_darwin(v37);
      v39 = (char *)&v88 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      v41 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v40 + 16))(v39, v34, v32);
      __chkstk_darwin(v41);
      v43 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v44 + 16))(v43, v37, v35);
      v45 = (uint64_t)v93;
      sub_10000FEB4(a3, (uint64_t)v93, &qword_1004B9D88);
      v46 = (uint64_t)v43;
      a6 = v92;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v39, v46, v45, v32, v35, v91, v89, v112);
      v47 = *((_OWORD *)v16 + 6);
      v48 = *((_OWORD *)v16 + 7);
      v49 = *((_OWORD *)v16 + 5);
      v103[0] = *((_OWORD *)v16 + 4);
      v103[1] = v49;
      v103[2] = v47;
      v104 = v48;
      LOBYTE(v105) = 17;
      *((_QWORD *)&v105 + 1) = sub_10007B68C;
      *(_QWORD *)&v106 = 0;
      *((_QWORD *)&v106 + 1) = 0x4014000000000000;
      *(_QWORD *)&v107 = &unk_1004BB0E0;
      *((_QWORD *)&v107 + 1) = 0;
      *(_QWORD *)&v108 = &unk_1004BB0E8;
      *((_QWORD *)&v108 + 1) = 0;
      v50 = v106;
      *((_OWORD *)v16 + 15) = v105;
      *((_OWORD *)v16 + 16) = v50;
      v51 = v108;
      *((_OWORD *)v16 + 17) = v107;
      *((_OWORD *)v16 + 18) = v51;
      v52 = v103[1];
      *((_OWORD *)v16 + 11) = v103[0];
      *((_OWORD *)v16 + 12) = v52;
      v53 = v104;
      *((_OWORD *)v16 + 13) = v103[2];
      *((_OWORD *)v16 + 14) = v53;
      v54 = (_QWORD *)sub_100060C48((uint64_t)v117);
      sub_1000749BC(v103);
      v102 = _swiftEmptyArrayStorage;
      sub_1000AA460(v54);
      v55 = v102;
      sub_10000970C(&v113);
    }
    else
    {
      sub_10000FE2C((uint64_t)&v109, &qword_1004BAD30);
      v55 = _swiftEmptyArrayStorage;
      v36 = (_QWORD *)a1;
      v45 = (uint64_t)v93;
    }
    v56 = v36[3];
    v57 = v36[4];
    v58 = sub_1000096A0(v36, v56);
    v19 = (char *)&v88;
    __chkstk_darwin(v58);
    v60 = (char *)&v88 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v61 + 16))(v60);
    sub_1000444A8(v98, (uint64_t)v103);
    sub_10000FEB4(v94, v45, &qword_1004B9D88);
    v87 = v45;
    v62 = (uint64_t)v60;
    v63 = v101;
    v22 = v96;
    a1 = v97;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v62, v101, (void *)a6, (uint64_t)v103, v99, v100, (uint64_t)v96, v97, (unint64_t (**)())&v113, v87, v56, v57);
    v64 = v116;
    v65 = *(_OWORD *)(v16 + 136);
    v98 = *(_OWORD *)(v16 + 152);
    v99 = v65;
    *(_QWORD *)&v103[0] = v113;
    *(_OWORD *)((char *)v103 + 8) = v65;
    *(_OWORD *)((char *)&v103[1] + 8) = v98;
    *((_QWORD *)&v103[2] + 1) = v116;
    LOBYTE(v104) = 5;
    *((_QWORD *)&v104 + 1) = sub_10002F788;
    *(_QWORD *)&v105 = 0;
    *((_QWORD *)&v105 + 1) = 0x4014000000000000;
    *(_QWORD *)&v106 = &unk_1004BB460;
    *((_QWORD *)&v106 + 1) = 0;
    *(_QWORD *)&v107 = &unk_1004BB468;
    *((_QWORD *)&v107 + 1) = 0;
    swift_retain(v63);
    v66 = (id)a6;
    swift_bridgeObjectRetain();
    sub_10002676C((uint64_t)v22, a1);
    v67 = sub_100060D8C((uint64_t)v103);
    swift_release(v64);
    swift_release(v98);
    swift_release(v99);
    v68 = sub_1000057B4(&qword_1004BADE8);
    v69 = (_QWORD *)swift_allocObject(v68, 56, 7);
    v16 = v95;
    v69[4] = v95;
    a3 = (uint64_t)(v69 + 4);
    v69[5] = v55;
    v69[6] = v67;
    v70 = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
    v71 = sub_10005E0A4(0, v70, 1, _swiftEmptyArrayStorage);
    a4 = v71;
    if (*((_QWORD *)v16 + 2))
    {
      v72 = v71[2];
      if ((v71[3] >> 1) - v72 < v70)
        goto LABEL_44;
      v73 = (uint64_t)&v71[11 * v72 + 4];
      sub_1000057B4(&qword_1004BAD00);
      result = swift_arrayInitWithCopy(v73);
      if (v70)
      {
        v75 = a4[2];
        v76 = __OFADD__(v75, v70);
        v77 = v75 + v70;
        if (v76)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v77;
      }
    }
    else if (v70)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease(v16);
    v78 = v69[5];
    v19 = *(char **)(v78 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19)
          goto LABEL_17;
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16)
      v81 = (int64_t)&v19[a6];
    else
      v81 = a6;
    a4 = sub_10005E0A4((_QWORD *)1, v81, 1, a4);
    a6 = a4[2];
    if (*(_QWORD *)(v78 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19)
        goto LABEL_45;
      sub_1000057B4(&qword_1004BAD00);
      result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
      if (v19)
      {
        v79 = a4[2];
        v76 = __OFADD__(v79, v19);
        v80 = &v19[v79];
        if (v76)
          goto LABEL_49;
        a4[2] = v80;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19)
      goto LABEL_42;
LABEL_27:
    swift_bridgeObjectRelease(v78);
    v82 = v69[6];
    v19 = *(char **)(v82 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19)
          goto LABEL_39;
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16)
      v85 = (int64_t)&v19[a6];
    else
      v85 = a6;
    a4 = sub_10005E0A4((_QWORD *)1, v85, 1, a4);
    a6 = a4[2];
    if (!*(_QWORD *)(v82 + 16))
    {
LABEL_39:
      if (!v19)
        goto LABEL_40;
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  }
  sub_1000057B4(&qword_1004BAD00);
  result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease(v82);
    swift_setDeallocating(v69);
    v86 = sub_1000057B4(&qword_1004BADF0);
    swift_arrayDestroy(a3, 3, v86);
    swift_deallocClassInstance(v69, 32, 7);
    return (uint64_t)a4;
  }
  v83 = a4[2];
  v76 = __OFADD__(v83, v19);
  v84 = &v19[v83];
  if (!v76)
  {
    a4[2] = v84;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v10;
  __n128 result;
  _OWORD v12[5];

  sub_100071218(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

_QWORD *sub_100066264(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  unint64_t (*v89)();
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[8];
  _BYTE v95[136];
  uint64_t v96;
  _QWORD v97[8];
  _BYTE v98[136];
  uint64_t v99;
  _QWORD v100[8];
  _BYTE v101[136];
  _BYTE v102[16];
  id v103;
  _BYTE v104[16];
  id v105;
  _BYTE v106[16];
  id v107;
  unint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char v112;
  uint64_t (*v113)(uint64_t (**)(void));
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;

  v84 = a6;
  v85 = a8;
  v87 = a7;
  v88 = (_QWORD *)a4;
  v79 = a5;
  v86 = a9;
  v13 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v83 = a1[4];
  v17 = sub_1000096A0(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  v21 = a8;
  v22 = (uint64_t)v15;
  sub_10000FEB4(v21, (uint64_t)v15, &qword_1004B9D88);
  v23 = a2;
  v24 = a3;
  v25 = v79;
  swift_bridgeObjectRetain();
  v26 = v84;
  v27 = v87;
  sub_10002676C(v84, v87);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, (uint64_t)v23, (uint64_t)v24, (uint64_t)v88, v25, v26, v27, v22, &v89, v16, v83);
  v28 = v92;
  v82 = v90;
  v109 = v90;
  v81 = v91;
  v110 = v91;
  v108 = v89;
  v111 = v92;
  v112 = 23;
  v113 = sub_10007B69C;
  v114 = 0;
  v115 = 0x4014000000000000;
  v116 = &unk_1004BB498;
  v117 = 0;
  v118 = &unk_1004BB4A0;
  v119 = 0;
  v83 = sub_100060ED0((uint64_t)&v108);
  swift_release(v28);
  swift_release(v81);
  swift_release(v82);
  v29 = a1[3];
  *(_QWORD *)&v82 = a1[4];
  v30 = sub_1000096A0(a1, v29);
  __chkstk_darwin(v30);
  v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000444A8(v86, (uint64_t)v101);
  sub_10000FEB4(v85, v22, &qword_1004B9D88);
  v34 = v23;
  v35 = v24;
  *(_QWORD *)&v81 = v35;
  swift_bridgeObjectRetain();
  v36 = v84;
  v37 = v87;
  sub_10002676C(v84, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v32, v34, (uint64_t)v35, (uint64_t)v101, (uint64_t)v88, v25, v36, &v93, v37, v22, v29, v82);
  sub_100084208(&v93, (uint64_t)v95);
  sub_1000725D0(&v93, &v107);
  sub_10007260C(&v107);
  sub_10000FD10((uint64_t)v94, (uint64_t)v106, &qword_1004BAE98);
  sub_100072644((uint64_t)v106);
  swift_release(v94[3]);
  swift_release(v94[5]);
  swift_release(v94[7]);
  *(_QWORD *)&v82 = sub_100061014((uint64_t)v95);
  sub_10007266C((uint64_t)v95);
  v38 = a1[3];
  v78 = a1[4];
  v39 = sub_1000096A0(a1, v38);
  __chkstk_darwin(v39);
  v41 = (char *)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_1000444A8(v86, (uint64_t)v101);
  v43 = v22;
  v80 = v22;
  sub_10000FEB4(v85, v22, &qword_1004B9D88);
  v44 = v34;
  v45 = (id)v81;
  v46 = v25;
  swift_bridgeObjectRetain();
  v47 = v87;
  sub_10002676C(v36, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v41, v44, (uint64_t)v45, (uint64_t)v101, (uint64_t)v88, v46, v36, &v96, v47, v43, v38, v78);
  sub_100084208(&v96, (uint64_t)v98);
  sub_1000725D0(&v96, &v105);
  sub_10007260C(&v105);
  sub_10000FD10((uint64_t)v97, (uint64_t)v104, &qword_1004BAE98);
  sub_100072644((uint64_t)v104);
  swift_release(v97[3]);
  swift_release(v97[5]);
  swift_release(v97[7]);
  *(_QWORD *)&v81 = sub_100061014((uint64_t)v98);
  sub_10007266C((uint64_t)v98);
  v49 = a1[3];
  v48 = a1[4];
  v50 = sub_1000096A0(a1, v49);
  __chkstk_darwin(v50);
  v52 = (char *)&v77 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v53 + 16))(v52);
  sub_1000444A8(v86, (uint64_t)v101);
  v54 = v80;
  sub_10000FEB4(v85, v80, &qword_1004B9D88);
  v55 = v44;
  v56 = v45;
  swift_bridgeObjectRetain();
  v57 = v84;
  v58 = v87;
  sub_10002676C(v84, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v52, v55, (uint64_t)v56, (uint64_t)v101, (uint64_t)v88, v46, v57, &v99, v58, v54, v49, v48);
  sub_100084208(&v99, (uint64_t)v101);
  sub_1000725D0(&v99, &v103);
  sub_10007260C(&v103);
  sub_10000FD10((uint64_t)v100, (uint64_t)v102, &qword_1004BAE98);
  sub_100072644((uint64_t)v102);
  swift_release(v100[3]);
  swift_release(v100[5]);
  swift_release(v100[7]);
  v59 = sub_100061014((uint64_t)v101);
  sub_10007266C((uint64_t)v101);
  v60 = sub_1000057B4(&qword_1004BADE8);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v83;
  v88 = result + 4;
  v63 = v81;
  result[5] = v82;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_10005E0A4(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        sub_1000057B4(&qword_1004BAD00);
        result = (_QWORD *)swift_arrayInitWithCopy(v72);
        if (v67)
        {
          v73 = v64[2];
          v74 = __OFADD__(v73, v67);
          v75 = v73 + v67;
          if (v74)
            goto LABEL_21;
          v64[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v76 = sub_1000057B4(&qword_1004BADF0);
      swift_arrayDestroy(v88, 4, v76);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51[3];

  v46 = a5;
  v47 = a6;
  v42 = a3;
  v44 = a8;
  v45 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000057B4(&qword_1004B9D88);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000444A8(a1, (uint64_t)v51);
  v21 = sub_1000057B4(&qword_1004BAD38);
  v43 = String.init<A>(describing:)(v51, v21);
  v23 = v22;
  sub_1000444A8(a1, (uint64_t)v51);
  sub_10000FEB4(a4, (uint64_t)v50, &qword_1004B9DF8);
  sub_10000FEB4(a10, (uint64_t)v20, &qword_1004B9D88);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 144) & ~v24;
  v26 = (_QWORD *)swift_allocObject(&unk_10046BE78, v25 + v19, v24 | 7);
  sub_100033620(v51, (uint64_t)(v26 + 2));
  v27 = v42;
  v26[7] = a2;
  v26[8] = v27;
  sub_10000FD10((uint64_t)v50, (uint64_t)(v26 + 9), &qword_1004B9DF8);
  v28 = v47;
  v26[14] = v46;
  v26[15] = v28;
  v29 = (uint64_t)v26 + v25;
  v31 = v44;
  v30 = v45;
  v26[16] = v44;
  v26[17] = v30;
  sub_10000FD10((uint64_t)v20, v29, &qword_1004B9D88);
  v32 = a2;
  v33 = v27;
  swift_bridgeObjectRetain();
  sub_10002676C(v31, v30);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v38._countAndFlagsBits = v43;
  v38._object = v23;
  String.append(_:)(v38);
  result = swift_bridgeObjectRelease(v23);
  v40 = v51[0];
  *(_QWORD *)a7 = v35;
  *(_QWORD *)(a7 + 8) = v37;
  *(_OWORD *)(a7 + 16) = v40;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = 0xE000000000000000;
  *(_QWORD *)(a7 + 48) = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = sub_1000716C4;
  *(_QWORD *)(a7 + 72) = v26;
  return result;
}

_QWORD *sub_100066BF8(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[8];
  _BYTE v92[136];
  uint64_t v93;
  _QWORD v94[8];
  _BYTE v95[136];
  uint64_t v96;
  _QWORD v97[8];
  _BYTE v98[136];
  uint64_t v99;
  _QWORD v100[8];
  _BYTE v101[136];
  _BYTE v102[16];
  id v103;
  _BYTE v104[16];
  id v105;
  _BYTE v106[16];
  id v107;
  _BYTE v108[16];
  id v109[2];

  v85 = a8;
  v86 = a4;
  v88 = a7;
  v89 = (_QWORD *)a5;
  v79 = a6;
  v87 = a9;
  v13 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v84 = a1[4];
  v17 = sub_1000096A0(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  sub_10000FEB4(a4, (uint64_t)v101, &qword_1004B9DF8);
  sub_10000FEB4(a9, (uint64_t)v15, &qword_1004B9D88);
  v21 = a2;
  v22 = a3;
  v23 = v79;
  swift_bridgeObjectRetain();
  v24 = v88;
  v25 = v85;
  sub_10002676C(v88, v85);
  v77 = v25;
  v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v101, (uint64_t)v89, v23, v24, &v90, v77, (uint64_t)v15, v16, v84);
  sub_100084208(&v90, (uint64_t)v92);
  sub_1000725D0(&v90, v109);
  sub_10007260C(v109);
  sub_10000FD10((uint64_t)v91, (uint64_t)v108, &qword_1004BAE98);
  sub_100072644((uint64_t)v108);
  swift_release(v91[3]);
  swift_release(v91[5]);
  swift_release(v91[7]);
  v84 = sub_100061014((uint64_t)v92);
  sub_10007266C((uint64_t)v92);
  v27 = a1[3];
  v83 = a1[4];
  v28 = sub_1000096A0(a1, v27);
  __chkstk_darwin(v28);
  v30 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_10000FEB4(v86, (uint64_t)v101, &qword_1004B9DF8);
  v32 = (uint64_t)v15;
  sub_10000FEB4(v87, (uint64_t)v15, &qword_1004B9D88);
  v33 = v21;
  v34 = v26;
  v35 = v23;
  swift_bridgeObjectRetain();
  v36 = v88;
  v37 = v85;
  sub_10002676C(v88, v85);
  v78 = v37;
  v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v101, (uint64_t)v89, v35, v36, &v93, v78, v32, v27, v83);
  sub_100084208(&v93, (uint64_t)v95);
  sub_1000725D0(&v93, &v107);
  sub_10007260C(&v107);
  sub_10000FD10((uint64_t)v94, (uint64_t)v106, &qword_1004BAE98);
  sub_100072644((uint64_t)v106);
  swift_release(v94[3]);
  swift_release(v94[5]);
  swift_release(v94[7]);
  v83 = sub_100061014((uint64_t)v95);
  sub_10007266C((uint64_t)v95);
  v39 = a1[3];
  v82 = a1[4];
  v40 = sub_1000096A0(a1, v39);
  __chkstk_darwin(v40);
  v42 = (char *)&v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_10000FEB4(v86, (uint64_t)v101, &qword_1004B9DF8);
  v44 = v32;
  sub_10000FEB4(v87, v32, &qword_1004B9D88);
  v45 = v38;
  v80 = v45;
  v46 = v34;
  v81 = v46;
  v47 = v35;
  swift_bridgeObjectRetain();
  v48 = v88;
  v49 = v85;
  sub_10002676C(v88, v85);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v101, (uint64_t)v89, v47, v48, &v96, v49, v44, v39, v82);
  sub_100084208(&v96, (uint64_t)v98);
  sub_1000725D0(&v96, &v105);
  sub_10007260C(&v105);
  sub_10000FD10((uint64_t)v97, (uint64_t)v104, &qword_1004BAE98);
  sub_100072644((uint64_t)v104);
  swift_release(v97[3]);
  swift_release(v97[5]);
  swift_release(v97[7]);
  v82 = sub_100061014((uint64_t)v98);
  sub_10007266C((uint64_t)v98);
  v51 = a1[3];
  v50 = a1[4];
  v52 = sub_1000096A0(a1, v51);
  __chkstk_darwin(v52);
  v54 = (char *)&v79 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  sub_10000FEB4(v86, (uint64_t)v101, &qword_1004B9DF8);
  sub_10000FEB4(v87, v44, &qword_1004B9D88);
  v56 = v80;
  v57 = v81;
  swift_bridgeObjectRetain();
  v58 = v88;
  sub_10002676C(v88, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v101, (uint64_t)v89, v47, v58, &v99, v49, v44, v51, v50);
  sub_100084208(&v99, (uint64_t)v101);
  sub_1000725D0(&v99, &v103);
  sub_10007260C(&v103);
  sub_10000FD10((uint64_t)v100, (uint64_t)v102, &qword_1004BAE98);
  sub_100072644((uint64_t)v102);
  swift_release(v100[3]);
  swift_release(v100[5]);
  swift_release(v100[7]);
  v59 = sub_100061014((uint64_t)v101);
  sub_10007266C((uint64_t)v101);
  v60 = sub_1000057B4(&qword_1004BADE8);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v84;
  v89 = result + 4;
  v63 = v82;
  result[5] = v83;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_10005E0A4(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        sub_1000057B4(&qword_1004BAD00);
        result = (_QWORD *)swift_arrayInitWithCopy(v72);
        if (v67)
        {
          v73 = v64[2];
          v74 = __OFADD__(v73, v67);
          v75 = v73 + v67;
          if (v74)
            goto LABEL_21;
          v64[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v76 = sub_1000057B4(&qword_1004BADF0);
      swift_arrayDestroy(v89, 4, v76);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100067364(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  int64_t v100;
  char *v101;
  int64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  int64_t v132;
  uint64_t result;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  uint64_t v142;
  int64_t v143;
  int64_t v144;
  int64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[12];
  uint64_t v165;
  __int128 v166[3];
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  _OWORD v171[5];
  uint64_t v172;
  __int128 v173[3];
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  __int128 v184[3];
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  _BYTE v189[25];
  char v190;
  unint64_t (*v191)(uint64_t (**)(void));
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  _OWORD v198[4];
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211[2];
  _OWORD v212[4];
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  _OWORD v217[8];
  _OWORD v218[9];

  *(_QWORD *)&v162 = a6;
  *(_QWORD *)&v163 = a5;
  v160 = a4;
  v13 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v13);
  v161 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100061170(a1);
  v16 = v15;
  v17 = _swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    v152 = a7;
    v153 = a8;
    v154 = v15;
    v18 = a3[3];
    *(_QWORD *)&v158 = a3[4];
    *(_QWORD *)&v157 = a3[5];
    v19 = sub_1000096A0(a3, v18);
    v20 = v160[3];
    *(_QWORD *)&v156 = v160[4];
    v21 = sub_1000096A0(v160, v20);
    *(_QWORD *)&v155 = &v151;
    __chkstk_darwin(v21);
    v159 = a3;
    v23 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v28 + 16))(v27, v21, v20);
    v29 = v161;
    sub_10000FEB4(v162, v161, &qword_1004B9D88);
    v30 = v163;
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v163, (uint64_t)v27, v29, v18, v20, v158, v157, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v212, v156);
    v31 = *(_QWORD *)&v212[0];
    v32 = *((_QWORD *)&v212[3] + 1);
    v156 = *(_OWORD *)((char *)v212 + 8);
    v157 = *(_OWORD *)((char *)&v212[1] + 8);
    v158 = *(_OWORD *)((char *)&v212[2] + 8);
    v33 = (_OWORD *)swift_allocObject(&unk_10046C430, 80, 7);
    v34 = v212[1];
    v33[1] = v212[0];
    v33[2] = v34;
    v35 = v212[3];
    v33[3] = v212[2];
    v33[4] = v35;
    *(_OWORD *)((char *)v198 + 8) = v156;
    *(_OWORD *)((char *)&v198[1] + 8) = v157;
    *(_OWORD *)((char *)&v198[2] + 8) = v158;
    *(_QWORD *)&v198[0] = v31;
    *((_QWORD *)&v198[3] + 1) = v32;
    LOBYTE(v199) = 8;
    *((_QWORD *)&v199 + 1) = sub_10003B5E8;
    *(_QWORD *)&v200 = v33;
    *((_QWORD *)&v200 + 1) = 0x4014000000000000;
    *(_QWORD *)&v201 = &unk_1004BA078;
    *((_QWORD *)&v201 + 1) = 0;
    *(_QWORD *)&v202 = &unk_1004BA080;
    *((_QWORD *)&v202 + 1) = 0;
    v218[2] = v198[2];
    v218[3] = v198[3];
    v218[0] = v198[0];
    v218[1] = v198[1];
    v218[4] = v199;
    v218[5] = v200;
    v218[6] = v201;
    v218[7] = v202;
    swift_retain(v30);
    swift_retain(v156);
    swift_retain(v157);
    swift_retain(v158);
    swift_retain(v32);
    *(_QWORD *)&v158 = sub_1000612B4((uint64_t)v218);
    sub_100074A44(v198, (void (*)(uint64_t))&_swift_release);
    v36 = v159;
    v37 = v159[3];
    v38 = v159[4];
    v39 = v159[5];
    v40 = sub_1000096A0(v159, v37);
    __chkstk_darwin(v40);
    v42 = (char *)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    v44 = v161;
    sub_10000FEB4(v162, v161, &qword_1004B9D88);
    v45 = (uint64_t)v42;
    v46 = v163;
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v45, v163, v44, v37, v38, v39, (uint64_t (**)())&v213);
    v203 = v213;
    v204 = v214;
    v205 = v215;
    v206 = v216;
    LOBYTE(v207) = 40;
    *((_QWORD *)&v207 + 1) = sub_1000453E4;
    *(_QWORD *)&v208 = 0;
    *((_QWORD *)&v208 + 1) = 0x4014000000000000;
    *(_QWORD *)&v209 = &unk_1004BA2C0;
    *((_QWORD *)&v209 + 1) = 0;
    *(_QWORD *)&v210 = &unk_1004BA2C8;
    *((_QWORD *)&v210 + 1) = 0;
    v217[4] = v207;
    v217[5] = v208;
    v217[6] = v209;
    v217[7] = v210;
    v217[0] = v213;
    v217[1] = v214;
    v217[2] = v215;
    v217[3] = v216;
    swift_retain(v46);
    *(_QWORD *)&v157 = sub_1000613F8((uint64_t)v217);
    sub_100074A44(&v203, (void (*)(uint64_t))&_swift_release);
    v47 = v36[3];
    *(_QWORD *)&v156 = v36[4];
    *(_QWORD *)&v155 = v36[5];
    v48 = sub_1000096A0(v36, v47);
    v50 = v160[3];
    v49 = v160[4];
    v51 = sub_1000096A0(v160, v50);
    __chkstk_darwin(v51);
    v53 = (char *)&v151 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v54 + 16))(v53, v48, v47);
    __chkstk_darwin(v55);
    v57 = (char *)&v151 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v57, v51, v50);
    v59 = v161;
    sub_10000FEB4(v162, v161, &qword_1004B9D88);
    v60 = (uint64_t (*)())v163;
    swift_retain(v163);
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v53, (uint64_t)v57, v60, v59, v47, v50, v156, v155, (uint64_t (**)())v173, v49);
    sub_100040268((uint64_t)v173, (uint64_t)v166);
    v61 = 4;
    v62 = swift_allocObject(&unk_10046C458, 32, 7);
    *(_QWORD *)(v62 + 16) = &unk_1004BA0E0;
    *(_QWORD *)(v62 + 24) = 0;
    v190 = 39;
    v187 = v169;
    v188 = v170;
    *(_OWORD *)v189 = v171[0];
    *(_OWORD *)&v189[9] = *(_OWORD *)((char *)v171 + 9);
    v184[2] = v166[2];
    v185 = v167;
    v186 = v168;
    v184[0] = v166[0];
    v184[1] = v166[1];
    v191 = sub_10003D2A0;
    v192 = 0;
    v193 = 0x403E000000000000;
    v194 = &unk_1004BA0F8;
    v195 = v62;
    v196 = &unk_1004BA0E8;
    v197 = 0;
    sub_1000410E4(v173);
    v63 = sub_1000057B4(&qword_1004BACF8);
    v64 = swift_allocObject(v63, 120, 7);
    *(_OWORD *)(v64 + 16) = xmmword_1003C64D0;
    LOBYTE(v57) = v190;
    sub_10000FEB4((uint64_t)v184, (uint64_t)v173, &qword_1004BA190);
    v65 = swift_allocObject(&unk_10046C480, 216, 7);
    v66 = v182;
    *(_OWORD *)(v65 + 176) = v181;
    *(_OWORD *)(v65 + 192) = v66;
    *(_QWORD *)(v65 + 208) = v183;
    v67 = v178;
    *(_OWORD *)(v65 + 112) = v177;
    *(_OWORD *)(v65 + 128) = v67;
    v68 = v180;
    *(_OWORD *)(v65 + 144) = v179;
    *(_OWORD *)(v65 + 160) = v68;
    v69 = v174;
    *(_OWORD *)(v65 + 48) = v173[2];
    *(_OWORD *)(v65 + 64) = v69;
    v70 = v176;
    *(_OWORD *)(v65 + 80) = v175;
    *(_OWORD *)(v65 + 96) = v70;
    v71 = v173[1];
    *(_OWORD *)(v65 + 16) = v173[0];
    *(_OWORD *)(v65 + 32) = v71;
    sub_10000FEB4((uint64_t)v184, (uint64_t)v166, &qword_1004BA190);
    v72 = swift_allocObject(&unk_10046C4A8, 216, 7);
    v73 = v171[4];
    *(_OWORD *)(v72 + 176) = v171[3];
    *(_OWORD *)(v72 + 192) = v73;
    *(_QWORD *)(v72 + 208) = v172;
    v74 = v171[0];
    *(_OWORD *)(v72 + 112) = v170;
    *(_OWORD *)(v72 + 128) = v74;
    v75 = v171[2];
    *(_OWORD *)(v72 + 144) = v171[1];
    *(_OWORD *)(v72 + 160) = v75;
    v76 = v167;
    *(_OWORD *)(v72 + 48) = v166[2];
    *(_OWORD *)(v72 + 64) = v76;
    v77 = v169;
    *(_OWORD *)(v72 + 80) = v168;
    *(_OWORD *)(v72 + 96) = v77;
    v78 = v166[1];
    *(_OWORD *)(v72 + 16) = v166[0];
    *(_OWORD *)(v72 + 32) = v78;
    sub_10000FEB4((uint64_t)v184, (uint64_t)v164, &qword_1004BA190);
    v79 = swift_allocObject(&unk_10046C4D0, 216, 7);
    v80 = v164[11];
    *(_OWORD *)(v79 + 176) = v164[10];
    *(_OWORD *)(v79 + 192) = v80;
    *(_QWORD *)(v79 + 208) = v165;
    v81 = v164[7];
    *(_OWORD *)(v79 + 112) = v164[6];
    *(_OWORD *)(v79 + 128) = v81;
    v82 = v164[9];
    *(_OWORD *)(v79 + 144) = v164[8];
    *(_OWORD *)(v79 + 160) = v82;
    v83 = v164[3];
    *(_OWORD *)(v79 + 48) = v164[2];
    *(_OWORD *)(v79 + 64) = v83;
    v84 = v164[5];
    *(_OWORD *)(v79 + 80) = v164[4];
    *(_OWORD *)(v79 + 96) = v84;
    v85 = v164[1];
    *(_OWORD *)(v79 + 16) = v164[0];
    *(_OWORD *)(v79 + 32) = v85;
    *(_BYTE *)(v64 + 32) = (_BYTE)v57;
    *(_QWORD *)(v64 + 40) = sub_100072F70;
    *(_QWORD *)(v64 + 48) = v65;
    *(_QWORD *)(v64 + 56) = sub_100073034;
    *(_QWORD *)(v64 + 64) = v72;
    *(_QWORD *)(v64 + 72) = &unk_1004BAEE0;
    *(_QWORD *)(v64 + 80) = v79;
    *(_BYTE *)(v64 + 112) = 0;
    sub_10000FE2C((uint64_t)v184, &qword_1004BA190);
    v86 = v159[3];
    v87 = v159[4];
    v88 = v159[5];
    v89 = sub_1000096A0(v159, v86);
    __chkstk_darwin(v89);
    v91 = (char *)&v151 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v92 + 16))(v91);
    sub_1000444A8((uint64_t)v160, (uint64_t)v184);
    v93 = v59;
    sub_10000FEB4(v162, v59, &qword_1004B9D88);
    v94 = v163;
    swift_retain(v163);
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v91, v94, v184, v93, v86, v87, v88, (unint64_t (**)())v164);
    v95 = *((_QWORD *)&v164[2] + 1);
    v155 = *(_OWORD *)((char *)&v164[1] + 8);
    v156 = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)v184 + 8) = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)&v184[1] + 8) = *(_OWORD *)((char *)&v164[1] + 8);
    *(_QWORD *)&v184[0] = *(_QWORD *)&v164[0];
    *((_QWORD *)&v184[2] + 1) = *((_QWORD *)&v164[2] + 1);
    LOBYTE(v185) = 9;
    *((_QWORD *)&v185 + 1) = sub_10002F788;
    *(_QWORD *)&v186 = 0;
    *((_QWORD *)&v186 + 1) = 0x4014000000000000;
    *(_QWORD *)&v187 = &unk_1004BA1D0;
    *((_QWORD *)&v187 + 1) = 0;
    *(_QWORD *)&v188 = &unk_1004BA1D8;
    *((_QWORD *)&v188 + 1) = 0;
    v96 = sub_10006153C((uint64_t)v184);
    swift_release(v95);
    swift_release(v155);
    swift_release(v156);
    v97 = sub_1000057B4(&qword_1004BADE8);
    v98 = (_QWORD *)swift_allocObject(v97, 64, 7);
    v98[4] = v158;
    *(_QWORD *)&v156 = v98 + 4;
    v98[5] = v157;
    v98[6] = v64;
    v98[7] = v96;
    v17 = _swiftEmptyArrayStorage;
    v99 = 88;
    v100 = (int64_t)&qword_1004BAD00;
    while (1)
    {
      v101 = (char *)v98[v61];
      v102 = *((_QWORD *)v101 + 2);
      v103 = (_QWORD *)v17[2];
      v104 = (_QWORD *)((char *)v103 + v102);
      if (__OFADD__(v103, v102))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v17);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && (uint64_t)v104 <= v17[3] >> 1)
      {
        if (*((_QWORD *)v101 + 2))
          goto LABEL_14;
      }
      else
      {
        if ((uint64_t)v103 <= (uint64_t)v104)
          v106 = (int64_t)v103 + v102;
        else
          v106 = (int64_t)v103;
        v17 = sub_10005E0A4(isUniquelyReferenced_nonNull_native, v106, 1, v17);
        if (*((_QWORD *)v101 + 2))
        {
LABEL_14:
          v107 = v17[2];
          if ((v17[3] >> 1) - v107 < v102)
            goto LABEL_40;
          v103 = &v17[11 * v107 + 4];
          v104 = v101 + 32;
          sub_1000057B4(&qword_1004BAD00);
          swift_arrayInitWithCopy(v103);
          if (v102)
          {
            v108 = v17[2];
            v109 = __OFADD__(v108, v102);
            v110 = v108 + v102;
            if (v109)
              goto LABEL_41;
            v17[2] = v110;
          }
          goto LABEL_4;
        }
      }
      if (v102)
        goto LABEL_39;
LABEL_4:
      swift_bridgeObjectRelease(v101);
      if (++v61 == 8)
      {
        swift_setDeallocating(v98);
        v111 = sub_1000057B4(&qword_1004BADF0);
        swift_arrayDestroy(v156, 4, v111);
        swift_deallocClassInstance(v98, 32, 7);
        a8 = v153;
        v16 = v154;
        a7 = v152;
        a3 = v159;
        break;
      }
    }
  }
  sub_100072C60((uint64_t)a3, (uint64_t)v173);
  v112 = sub_1000057B4(&qword_1004BAEC0);
  v113 = sub_1000057B4(&qword_1004BAEC8);
  if (swift_dynamicCast(v166, v173, v112, v113, 6))
  {
    sub_100071E7C(v166, &v203);
    sub_10000FEB4(a7, (uint64_t)v173, &qword_1004BAD28);
    if (*((_QWORD *)&v173[1] + 1))
    {
      sub_100033620(v173, (uint64_t)v198);
      v114 = *((_QWORD *)&v204 + 1);
      *(_QWORD *)&v158 = *((_QWORD *)&v205 + 1);
      v159 = (_QWORD *)v205;
      v115 = sub_1000096A0(&v203, *((uint64_t *)&v204 + 1));
      v116 = *((_QWORD *)&v198[1] + 1);
      *(_QWORD *)&v156 = *(_QWORD *)&v198[2];
      v117 = sub_1000096A0(v198, *((uint64_t *)&v198[1] + 1));
      *(_QWORD *)&v157 = &v151;
      __chkstk_darwin(v117);
      v119 = (char *)&v151 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
      v121 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v120 + 16))(v119, v115, v114);
      __chkstk_darwin(v121);
      v123 = (char *)&v151 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v124 + 16))(v123, v117, v116);
      sub_1000444A8((uint64_t)v160, (uint64_t)v211);
      sub_10000FEB4(a8, (uint64_t)v173, &qword_1004B9DF0);
      v125 = v161;
      sub_10000FEB4(v162, v161, &qword_1004B9D88);
      v126 = v163;
      swift_retain(v163);
      sub_100039950(v119, v126, (uint64_t)v123, v211, (uint64_t)v173, v125, v114, v116, (unint64_t (**)())v166, (uint64_t)v159, v158, v156);
      v127 = *(_QWORD *)&v166[0];
      v128 = *((_QWORD *)&v166[2] + 1);
      swift_release(v126);
      v162 = *(__int128 *)((char *)&v166[1] + 8);
      v163 = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)v173 + 8) = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)&v173[1] + 8) = *(__int128 *)((char *)&v166[1] + 8);
      *(_QWORD *)&v173[0] = v127;
      *((_QWORD *)&v173[2] + 1) = v128;
      LOBYTE(v174) = 2;
      *((_QWORD *)&v174 + 1) = sub_10002F788;
      *(_QWORD *)&v175 = 0;
      *((_QWORD *)&v175 + 1) = 0x4014000000000000;
      *(_QWORD *)&v176 = &unk_1004B9EB8;
      *((_QWORD *)&v176 + 1) = 0;
      *(_QWORD *)&v177 = &unk_1004B9EC0;
      *((_QWORD *)&v177 + 1) = 0;
      v129 = (_QWORD *)sub_100061680((uint64_t)v173);
      swift_release(v128);
      swift_release(v162);
      swift_release(v163);
      *(_QWORD *)&v211[0] = _swiftEmptyArrayStorage;
      sub_1000AA460(v129);
      v130 = *(_QWORD **)&v211[0];
      sub_10000970C(v198);
      sub_10000970C(&v203);
      goto LABEL_25;
    }
    sub_10000FE2C((uint64_t)v173, &qword_1004BAD28);
    sub_10000970C(&v203);
  }
  else
  {
    memset(v166, 0, sizeof(v166));
    sub_10000FE2C((uint64_t)v166, &qword_1004BAED0);
  }
  v130 = _swiftEmptyArrayStorage;
LABEL_25:
  v131 = sub_1000057B4(&qword_1004BADE8);
  v103 = (_QWORD *)swift_allocObject(v131, 56, 7);
  v103[4] = v16;
  v104 = v103 + 4;
  v103[5] = v17;
  v103[6] = v130;
  v132 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_10005E0A4(0, v132, 1, _swiftEmptyArrayStorage);
  v99 = result;
  if (*(_QWORD *)(v16 + 16))
  {
    v134 = *(_QWORD *)(result + 16);
    if ((*(_QWORD *)(result + 24) >> 1) - v134 < v132)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v135 = result + 88 * v134 + 32;
    sub_1000057B4(&qword_1004BAD00);
    result = swift_arrayInitWithCopy(v135);
    if (v132)
    {
      v136 = *(_QWORD *)(v99 + 16);
      v109 = __OFADD__(v136, v132);
      v137 = v136 + v132;
      if (v109)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      *(_QWORD *)(v99 + 16) = v137;
    }
  }
  else if (v132)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v16);
  v102 = v17[2];
  v100 = *(_QWORD *)(v99 + 16);
  v101 = (char *)(v100 + v102);
  if (__OFADD__(v100, v102))
    goto LABEL_42;
  v138 = *(_QWORD *)(v99 + 24);
  result = swift_bridgeObjectRetain();
  if ((uint64_t)v101 > (uint64_t)(v138 >> 1))
  {
LABEL_43:
    if (v100 <= (uint64_t)v101)
      v141 = (int64_t)v101;
    else
      v141 = v100;
    result = (uint64_t)sub_10005E0A4((_QWORD *)1, v141, 1, (_QWORD *)v99);
    v99 = result;
    v100 = *(_QWORD *)(result + 16);
    if (v17[2])
      goto LABEL_34;
    goto LABEL_47;
  }
  if (!v102)
  {
LABEL_47:
    if (!v102)
      goto LABEL_48;
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v100 < v102)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  sub_1000057B4(&qword_1004BAD00);
  result = swift_arrayInitWithCopy(v99 + 88 * v100 + 32);
  if (v102)
  {
    v139 = *(_QWORD *)(v99 + 16);
    v109 = __OFADD__(v139, v102);
    v140 = v139 + v102;
    if (v109)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    *(_QWORD *)(v99 + 16) = v140;
  }
LABEL_48:
  swift_bridgeObjectRelease(v17);
  v142 = v103[6];
  v143 = *(_QWORD *)(v142 + 16);
  v144 = *(_QWORD *)(v99 + 16);
  v145 = v144 + v143;
  if (__OFADD__(v144, v143))
  {
    __break(1u);
  }
  else
  {
    v146 = *(_QWORD *)(v99 + 24);
    result = swift_bridgeObjectRetain();
    if (v145 <= (uint64_t)(v146 >> 1))
    {
      if (v143)
        goto LABEL_51;
      goto LABEL_60;
    }
  }
  if (v144 <= v145)
    v149 = v144 + v143;
  else
    v149 = v144;
  result = (uint64_t)sub_10005E0A4((_QWORD *)1, v149, 1, (_QWORD *)v99);
  v99 = result;
  v144 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v142 + 16))
  {
LABEL_60:
    if (!v143)
      goto LABEL_61;
    goto LABEL_64;
  }
LABEL_51:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v144 < v143)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  sub_1000057B4(&qword_1004BAD00);
  result = swift_arrayInitWithCopy(v99 + 88 * v144 + 32);
  if (!v143)
  {
LABEL_61:
    swift_bridgeObjectRelease(v142);
    swift_setDeallocating(v103);
    v150 = sub_1000057B4(&qword_1004BADF0);
    swift_arrayDestroy(v104, 3, v150);
    swift_deallocClassInstance(v103, 32, 7);
    return v99;
  }
  v147 = *(_QWORD *)(v99 + 16);
  v109 = __OFADD__(v147, v143);
  v148 = v147 + v143;
  if (!v109)
  {
    *(_QWORD *)(v99 + 16) = v148;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

_QWORD *sub_100068378(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *result;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t (*v80)();
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t (*v84)();
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t (*v88)();
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t (*v92)();
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t (*v96)();
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  char v100;
  uint64_t (*v101)(uint64_t (**)(void));
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char v112;
  uint64_t (*v113)(uint64_t (**)(void));
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t (*v120)();
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  char v124;
  uint64_t (*v125)(uint64_t (**)(void));
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t (*v132)();
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char v136;
  uint64_t (*v137)(uint64_t (**)(void));
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;

  v73 = a7;
  *(_QWORD *)&v74 = a8;
  v75 = a6;
  *(_QWORD *)&v76 = a5;
  v77 = a3;
  *(_QWORD *)&v79 = a2;
  v13 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  v18 = sub_1000096A0(a1, v16);
  __chkstk_darwin(v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  sub_1000444A8(a3, (uint64_t)&v120);
  v22 = a4;
  sub_10000FEB4(a4, (uint64_t)&v108, &qword_1004B9DF8);
  sub_10000FEB4(a5, (uint64_t)&v132, &qword_1004B9DF0);
  sub_10000FEB4(a6, (uint64_t)v15, &qword_1004B9D88);
  v23 = v79;
  v24 = v73;
  v25 = v74;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v20, v79, (__int128 *)&v120, (uint64_t)&v108, (uint64_t)&v132, (uint64_t)v15, v73, v74, &v80, v16, v17);
  v26 = v83;
  v72 = v81;
  v133 = v81;
  v71 = v82;
  v134 = v82;
  v132 = v80;
  v135 = v83;
  v136 = 10;
  v137 = sub_10007B69C;
  v138 = 0;
  v139 = 0x4014000000000000;
  v140 = &unk_1004BBAF8;
  v141 = 0;
  v142 = &unk_1004BBB00;
  v143 = 0;
  swift_retain(v23);
  sub_10000DCE8(v24, v25);
  v78 = sub_1000617C4((uint64_t)&v132);
  swift_release(v26);
  swift_release(v71);
  swift_release(v72);
  v27 = a1[3];
  v28 = a1[4];
  v29 = sub_1000096A0(a1, v27);
  __chkstk_darwin(v29);
  v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  sub_1000444A8(v77, (uint64_t)&v108);
  sub_10000FEB4(v22, (uint64_t)&v96, &qword_1004B9DF8);
  sub_10000FEB4(v76, (uint64_t)&v120, &qword_1004B9DF0);
  v33 = v75;
  sub_10000FEB4(v75, (uint64_t)v15, &qword_1004B9D88);
  v34 = (uint64_t)v31;
  v35 = v79;
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v34, v79, (__int128 *)&v108, (uint64_t)&v96, (uint64_t)&v120, (uint64_t)v15, v24, v25, &v84, v27, v28);
  v36 = v87;
  v76 = v85;
  v121 = v85;
  v72 = v86;
  v122 = v86;
  v120 = v84;
  v123 = v87;
  v124 = 55;
  v125 = sub_10007B69C;
  v126 = 0;
  v127 = 0x4014000000000000;
  v128 = &unk_1004BBB28;
  v129 = 0;
  v130 = &unk_1004BBB30;
  v131 = 0;
  swift_retain(v35);
  sub_10000DCE8(v24, v25);
  v77 = sub_100061908((uint64_t)&v120);
  swift_release(v36);
  swift_release(v72);
  swift_release(v76);
  v37 = a1[3];
  v38 = a1[4];
  v39 = sub_1000096A0(a1, v37);
  __chkstk_darwin(v39);
  v41 = (char *)&v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_10000FEB4(v22, (uint64_t)&v108, &qword_1004B9DF8);
  v43 = v33;
  sub_10000FEB4(v33, (uint64_t)v15, &qword_1004B9D88);
  v44 = v79;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v41, v79, (uint64_t)&v108, (uint64_t)v15, v37, v38, &v88);
  v45 = v91;
  v76 = v89;
  v109 = v89;
  v74 = v90;
  v110 = v90;
  v112 = 54;
  v108 = v88;
  v111 = v91;
  v113 = sub_10002F788;
  v114 = 0;
  v115 = 0x4014000000000000;
  v116 = &unk_1004BBB58;
  v117 = 0;
  v118 = &unk_1004BBB60;
  v119 = 0;
  swift_retain(v44);
  v46 = sub_100061A4C((uint64_t)&v108);
  swift_release(v45);
  swift_release(v74);
  swift_release(v76);
  v47 = a1[3];
  v48 = a1[4];
  v49 = sub_1000096A0(a1, v47);
  __chkstk_darwin(v49);
  v51 = (char *)&v71 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v52 + 16))(v51);
  sub_10000FEB4(v22, (uint64_t)&v96, &qword_1004B9DF8);
  sub_10000FEB4(v43, (uint64_t)v15, &qword_1004B9D88);
  swift_retain(v44);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v51, v44, (uint64_t)v15, v47, v48, &v92);
  v53 = v95;
  v79 = v93;
  v97 = v93;
  v76 = v94;
  v98 = v94;
  v96 = v92;
  v99 = v95;
  v100 = 56;
  v101 = sub_10007B69C;
  v102 = 0;
  v103 = 0x4014000000000000;
  v104 = &unk_1004BBB88;
  v105 = 0;
  v106 = &unk_1004BBB90;
  v107 = 0;
  v54 = sub_100061B90((uint64_t)&v96);
  swift_release(v53);
  swift_release(v76);
  swift_release(v79);
  v55 = sub_1000057B4(&qword_1004BADE8);
  result = (_QWORD *)swift_allocObject(v55, 64, 7);
  v57 = result;
  result[4] = v78;
  *(_QWORD *)&v79 = result + 4;
  result[5] = v77;
  result[6] = v46;
  result[7] = v54;
  v58 = _swiftEmptyArrayStorage;
  v59 = 4;
  while (1)
  {
    v60 = v57[v59];
    v61 = *(_QWORD *)(v60 + 16);
    v62 = v58[2];
    v63 = v62 + v61;
    if (__OFADD__(v62, v61))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v58);
    if ((_DWORD)result && v63 <= v58[3] >> 1)
    {
      if (*(_QWORD *)(v60 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v62 <= v63)
        v64 = v62 + v61;
      else
        v64 = v62;
      result = sub_10005E0A4(result, v64, 1, v58);
      v58 = result;
      if (*(_QWORD *)(v60 + 16))
      {
LABEL_13:
        v65 = v58[2];
        if ((v58[3] >> 1) - v65 < v61)
          goto LABEL_20;
        v66 = (uint64_t)&v58[11 * v65 + 4];
        sub_1000057B4(&qword_1004BAD00);
        result = (_QWORD *)swift_arrayInitWithCopy(v66);
        if (v61)
        {
          v67 = v58[2];
          v68 = __OFADD__(v67, v61);
          v69 = v67 + v61;
          if (v68)
            goto LABEL_21;
          v58[2] = v69;
        }
        goto LABEL_3;
      }
    }
    if (v61)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v60);
    if (++v59 == 8)
    {
      swift_setDeallocating(v57);
      v70 = sub_1000057B4(&qword_1004BADF0);
      swift_arrayDestroy(v79, 4, v70);
      swift_deallocClassInstance(v57, 32, 7);
      return v58;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];
  _BYTE v54[40];
  __int128 v55[2];
  __int128 v56[2];

  v44 = a8;
  v50 = a6;
  v49 = a5;
  v45 = a2;
  v48 = a11;
  v47 = a10;
  v52 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000057B4(&qword_1004B9D88);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000444A8(a1, (uint64_t)v53);
  v22 = sub_1000057B4(&qword_1004BAD40);
  v46 = String.init<A>(describing:)(v53, v22);
  v24 = v23;
  sub_1000444A8(a1, (uint64_t)v56);
  sub_1000444A8(a3, (uint64_t)v55);
  sub_10000FEB4(a4, (uint64_t)v54, &qword_1004B9DF8);
  sub_100071718(a7, (uint64_t)v53);
  sub_10000FEB4(v44, (uint64_t)v21, &qword_1004B9D88);
  v25 = *(unsigned __int8 *)(v19 + 80);
  v26 = (v25 + 216) & ~v25;
  v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_10046BEA0, v28 + 16, v25 | 7);
  sub_100033620(v56, v29 + 16);
  v30 = v45;
  *(_QWORD *)(v29 + 56) = v45;
  sub_100033620(v55, v29 + 64);
  sub_10000FD10((uint64_t)v54, v29 + 104, &qword_1004B9DF8);
  sub_100034A2C((uint64_t)v53, v29 + 144);
  sub_10000FD10((uint64_t)v21, v29 + v26, &qword_1004B9D88);
  v31 = (uint64_t *)(v29 + v27);
  v32 = v47;
  v33 = v48;
  *v31 = v47;
  v31[1] = v33;
  v34 = (_QWORD *)(v29 + v28);
  v35 = v50;
  *v34 = v49;
  v34[1] = v35;
  swift_retain(v30);
  sub_10000DCE8(v32, v33);
  swift_retain(v35);
  v36 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
  strcpy((char *)v53, "ActionMenu: ");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  v40._countAndFlagsBits = v46;
  v40._object = v24;
  String.append(_:)(v40);
  result = swift_bridgeObjectRelease(v24);
  v42 = v53[0];
  v43 = v53[1];
  *(_QWORD *)a9 = v37;
  *(_QWORD *)(a9 + 8) = v39;
  *(_QWORD *)(a9 + 16) = v42;
  *(_QWORD *)(a9 + 24) = v43;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_100071960;
  *(_QWORD *)(a9 + 72) = v29;
  return result;
}

_QWORD *sub_100068DF4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *result;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  _QWORD v98[5];
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)();
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t (*v107)();
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t (*v111)();
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t (*v115)();
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t (*v128)();
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  char v132;
  uint64_t (*v133)(uint64_t (**)(void));
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t (*v140)();
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  uint64_t (*v145)(uint64_t (**)(void));
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t (*v152)();
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char v156;
  uint64_t (*v157)(uint64_t (**)(void));
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t (*v164)();
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  uint64_t (*v169)(uint64_t (**)(void));
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;

  v92 = a8;
  v93 = a3;
  *(_QWORD *)&v90 = a7;
  v96 = a5;
  *(_QWORD *)&v97 = a4;
  v95 = a2;
  v15 = sub_1000057B4(&qword_1004B9D88);
  __chkstk_darwin(v15);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v20 = sub_1000096A0(a1, v19);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  sub_1000444A8(a3, (uint64_t)&v152);
  sub_10000FEB4(a4, (uint64_t)&v140, &qword_1004B9DF8);
  sub_100071718(a5, (uint64_t)&v164);
  *(_QWORD *)&v91 = a6;
  v24 = v95;
  sub_10000FEB4(a6, (uint64_t)v17, &qword_1004B9D88);
  v25 = v90;
  v26 = v92;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (__int128 *)&v152, (uint64_t)&v140, (uint64_t)&v164, (uint64_t)v17, v90, v92, &v103, v19, v18);
  v27 = v106;
  v89 = v104;
  v165 = v104;
  v88 = v105;
  v166 = v105;
  v164 = v103;
  v167 = v106;
  v168 = 10;
  v169 = sub_10007B69C;
  v170 = 0;
  v171 = 0x4014000000000000;
  v172 = &unk_1004BBAF8;
  v173 = 0;
  v174 = &unk_1004BBB00;
  v175 = 0;
  swift_retain(v24);
  sub_10000DCE8(v25, v26);
  v94 = sub_1000617C4((uint64_t)&v164);
  swift_release(v27);
  swift_release(v88);
  swift_release(v89);
  v28 = a1[3];
  v29 = a1[4];
  v30 = sub_1000096A0(a1, v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000444A8(v93, (uint64_t)&v140);
  sub_10000FEB4(v97, (uint64_t)&v128, &qword_1004B9DF8);
  sub_100071718(v96, (uint64_t)&v152);
  sub_10000FEB4(a6, (uint64_t)v17, &qword_1004B9D88);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v32, v24, (__int128 *)&v140, (uint64_t)&v128, (uint64_t)&v152, (uint64_t)v17, v25, v26, &v107, v28, v29);
  v34 = v110;
  v89 = v108;
  v153 = v108;
  v88 = v109;
  v154 = v109;
  v156 = 55;
  v152 = v107;
  v155 = v110;
  v157 = sub_10007B69C;
  v158 = 0;
  v159 = 0x4014000000000000;
  v160 = &unk_1004BBB28;
  v161 = 0;
  v162 = &unk_1004BBB30;
  v163 = 0;
  swift_retain(v24);
  sub_10000DCE8(v25, v26);
  v93 = sub_100061908((uint64_t)&v152);
  swift_release(v34);
  swift_release(v88);
  swift_release(v89);
  v35 = a1[3];
  v36 = a1[4];
  v37 = sub_1000096A0(a1, v35);
  __chkstk_darwin(v37);
  v39 = (char *)&v88 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v39);
  v41 = v97;
  sub_10000FEB4(v97, (uint64_t)&v140, &qword_1004B9DF8);
  v42 = v91;
  sub_10000FEB4(v91, (uint64_t)v17, &qword_1004B9D88);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v24, (uint64_t)&v140, (uint64_t)v17, v35, v36, &v111);
  v43 = v114;
  v90 = v112;
  v141 = v112;
  v89 = v113;
  v142 = v113;
  v144 = 54;
  v140 = v111;
  v143 = v114;
  v145 = sub_10002F788;
  v146 = 0;
  v147 = 0x4014000000000000;
  v148 = &unk_1004BBB58;
  v149 = 0;
  v150 = &unk_1004BBB60;
  v151 = 0;
  swift_retain(v24);
  v92 = sub_100061A4C((uint64_t)&v140);
  swift_release(v43);
  swift_release(v89);
  swift_release(v90);
  v44 = a1[3];
  v45 = a1[4];
  v46 = sub_1000096A0(a1, v44);
  __chkstk_darwin(v46);
  v48 = (char *)&v88 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v49 + 16))(v48);
  sub_10000FEB4(v41, (uint64_t)&v128, &qword_1004B9DF8);
  sub_10000FEB4(v42, (uint64_t)v17, &qword_1004B9D88);
  swift_retain(v24);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v48, v24, (uint64_t)v17, v44, v45, &v115);
  v50 = v118;
  v97 = v116;
  v129 = v116;
  v91 = v117;
  v130 = v117;
  v128 = v115;
  v131 = v118;
  v132 = 56;
  v133 = sub_10007B69C;
  v134 = 0;
  v135 = 0x4014000000000000;
  v136 = &unk_1004BBB88;
  v137 = 0;
  v138 = &unk_1004BBB90;
  v139 = 0;
  v51 = sub_100061B90((uint64_t)&v128);
  swift_release(v50);
  swift_release(v91);
  swift_release(v97);
  sub_1000444A8((uint64_t)a1, (uint64_t)v98);
  v52 = sub_1000057B4(&qword_1004BAD40);
  v53 = sub_1000057B4(&qword_1004BADD8);
  if ((swift_dynamicCast(&v119, v98, v52, v53, 6) & 1) != 0)
  {
    sub_100071E7C(&v119, &v99);
    v54 = v100;
    v55 = v101;
    v56 = v102;
    v57 = sub_1000096A0(&v99, v100);
    __chkstk_darwin(v57);
    v59 = (char *)&v88 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v60 + 16))(v59);
    sub_100071718(v96, (uint64_t)&v119);
    v61 = (_QWORD *)swift_allocObject(&unk_10046BF08, 56, 7);
    v61[2] = v54;
    v61[3] = v55;
    v61[4] = v56;
    v61[5] = a9;
    v61[6] = a10;
    v62 = v95;
    v63 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v59, v95, (uint64_t)sub_100071EB8, (uint64_t)v61, (uint64_t)&v119, v54, v55, v56);
    v65 = v64;
    v67 = v66;
    *(_QWORD *)&v119 = v63;
    *((_QWORD *)&v119 + 1) = v64;
    *(_QWORD *)&v120 = v68;
    *((_QWORD *)&v120 + 1) = v66;
    LOBYTE(v121) = 38;
    *((_QWORD *)&v121 + 1) = sub_10002F788;
    v122 = 0;
    v123 = 0x4014000000000000;
    v124 = &unk_1004BBC88;
    v125 = 0;
    v126 = &unk_1004BBC90;
    v127 = 0;
    swift_retain(v62);
    swift_retain(a10);
    v69 = (_QWORD *)sub_100061CD4(&v119);
    swift_release(v67);
    swift_release(v65);
    v98[0] = _swiftEmptyArrayStorage;
    sub_1000AA460(v69);
    v70 = (_QWORD *)v98[0];
    sub_10000970C(&v99);
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
    v119 = 0u;
    sub_10000FE2C((uint64_t)&v119, &qword_1004BADE0);
    v70 = _swiftEmptyArrayStorage;
  }
  v71 = sub_1000057B4(&qword_1004BADE8);
  result = (_QWORD *)swift_allocObject(v71, 72, 7);
  v73 = result;
  result[4] = v94;
  *(_QWORD *)&v97 = result + 4;
  v74 = v92;
  result[5] = v93;
  result[6] = v74;
  result[7] = v51;
  result[8] = v70;
  v75 = _swiftEmptyArrayStorage;
  v76 = 4;
  while (1)
  {
    v77 = v73[v76];
    v78 = *(_QWORD *)(v77 + 16);
    v79 = v75[2];
    v80 = v79 + v78;
    if (__OFADD__(v79, v78))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v75);
    if ((_DWORD)result && v80 <= v75[3] >> 1)
    {
      if (*(_QWORD *)(v77 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v79 <= v80)
        v81 = v79 + v78;
      else
        v81 = v79;
      result = sub_10005E0A4(result, v81, 1, v75);
      v75 = result;
      if (*(_QWORD *)(v77 + 16))
      {
LABEL_16:
        v82 = v75[2];
        if ((v75[3] >> 1) - v82 < v78)
          goto LABEL_23;
        v83 = (uint64_t)&v75[11 * v82 + 4];
        sub_1000057B4(&qword_1004BAD00);
        result = (_QWORD *)swift_arrayInitWithCopy(v83);
        if (v78)
        {
          v84 = v75[2];
          v85 = __OFADD__(v84, v78);
          v86 = v84 + v78;
          if (v85)
            goto LABEL_24;
          v75[2] = v86;
        }
        goto LABEL_6;
      }
    }
    if (v78)
      goto LABEL_22;
LABEL_6:
    result = (_QWORD *)swift_bridgeObjectRelease(v77);
    if (++v76 == 9)
    {
      swift_setDeallocating(v73);
      v87 = sub_1000057B4(&qword_1004BADF0);
      swift_arrayDestroy(v97, 5, v87);
      swift_deallocClassInstance(v73, 32, 7);
      return v75;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10006971C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Album;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046C930, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_100069B8C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Artist;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CF20, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_100069FFC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Curator;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CF48, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006A46C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EditorialItem(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB080, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CF70, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006A8F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Genre(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Genre;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CF98, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006AD68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicMovie(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB088, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CFC0, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006B1F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicVideo(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for MusicVideo;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046CFE8, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006B664@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Playlist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Playlist;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D010, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006BAD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RadioShow(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for RadioShow;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D038, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006BF44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Song;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D060, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006C3B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Station(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Station;
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v64, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D088, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v65, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v66, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_100033620(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006C824@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVEpisode(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB090, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D0B0, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006CCB0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVSeason(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB098, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D0D8, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006D13C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVShow(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB0A0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D100, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006D5C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000057B4(&qword_1004BAD18);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000057B4(&qword_1004B9D88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UploadedVideo(0);
  v94[3] = v26;
  v94[4] = sub_100004D8C(&qword_1004BB0A8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  v27 = sub_1000407CC(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000444A8((uint64_t)v94, (uint64_t)v89);
  v28 = sub_1000057B4(&qword_1004BF920);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10000FEB4(v66, (uint64_t)v93, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v94, (uint64_t)v92);
  sub_10000FEB4(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v69, (uint64_t)v91);
  sub_1000444A8(v70, (uint64_t)v90);
  sub_10000FEB4(v73, (uint64_t)v89, &qword_1004B9DF0);
  sub_10000FEB4(v71, (uint64_t)v88, &qword_1004BAD28);
  sub_1000444A8(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_10046D128, v72 + 40, v31 | v33 | 7);
  sub_10000FD10((uint64_t)v93, v41 + 16, &qword_1004BAD30);
  sub_100033620(v92, v41 + 56);
  sub_10000FD10(v64, v41 + v32, &qword_1004B9D88);
  sub_10000FD10(v65, v41 + v34, &qword_1004BAD18);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_100033620(v91, v41 + v36);
  sub_100033620(v90, v41 + v37);
  sub_10000FD10((uint64_t)v89, v41 + v38, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v88, v41 + v39, &qword_1004BAD28);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_100033620(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_10002676C(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000970C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000738E4;
  v63[9] = v41;
  return result;
}

uint64_t sub_10006DA54@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  __int128 v88[2];
  _BYTE v89[40];
  _QWORD v90[9];
  __int128 v91[2];
  __int128 v92[2];
  __int128 v93[2];
  _BYTE v94[40];
  _QWORD v95[6];

  v74 = a8;
  v70 = a6;
  v71 = a7;
  v69 = a5;
  v77 = a4;
  v82 = a3;
  v80 = a2;
  v87 = a9;
  v83 = a15;
  v79 = a14;
  v78 = a13;
  v72 = a12;
  v81 = a16;
  v68 = a17;
  v73 = a10;
  v65 = a11;
  v20 = type metadata accessor for UUID(0);
  v85 = *(_QWORD *)(v20 - 8);
  v86 = v20;
  __chkstk_darwin(v20);
  v84 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000057B4(&qword_1004BAD18);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v67 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000057B4(&qword_1004B9D88);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v66 = (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95[3] = a18;
  v95[4] = a19;
  v28 = sub_1000407CC(v95);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v28, a1, a18);
  sub_1000444A8((uint64_t)v95, (uint64_t)v90);
  v29 = sub_1000057B4(&qword_1004BF920);
  v30 = String.init<A>(describing:)(v90, v29);
  v75 = v31;
  v76 = v30;
  sub_10000FEB4(v65, (uint64_t)v94, &qword_1004BAD30);
  sub_1000444A8((uint64_t)v95, (uint64_t)v93);
  sub_10000FEB4(v68, (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004B9D88);
  sub_10000FEB4(v69, (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1004BAD18);
  sub_1000444A8(v70, (uint64_t)v92);
  sub_1000444A8(v71, (uint64_t)v91);
  sub_10000FEB4(v74, (uint64_t)v90, &qword_1004B9DF0);
  sub_10000FEB4(v72, (uint64_t)v89, &qword_1004BAD28);
  sub_1000444A8(v73, (uint64_t)v88);
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (v32 + 96) & ~v32;
  v34 = *(unsigned __int8 *)(v23 + 80);
  v35 = (v27 + v34 + v33) & ~v34;
  v36 = (v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v71 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_10046D150, v73 + 40, v32 | v34 | 7);
  sub_10000FD10((uint64_t)v94, v42 + 16, &qword_1004BAD30);
  sub_100033620(v93, v42 + 56);
  sub_10000FD10(v66, v42 + v33, &qword_1004B9D88);
  sub_10000FD10(v67, v42 + v35, &qword_1004BAD18);
  v43 = v77;
  *(_QWORD *)(v42 + v36) = v77;
  sub_100033620(v92, v42 + v37);
  sub_100033620(v91, v42 + v38);
  sub_10000FD10((uint64_t)v90, v42 + v39, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v89, v42 + v40, &qword_1004BAD28);
  v45 = v80;
  v44 = v81;
  *(_QWORD *)(v42 + v74) = v80;
  v47 = v82;
  v46 = v83;
  *(_QWORD *)(v42 + v72) = v82;
  v48 = (_QWORD *)(v42 + v41);
  v49 = v79;
  *v48 = v78;
  v48[1] = v49;
  v50 = (uint64_t *)(v42 + v71);
  v51 = v42 + v73;
  *v50 = v46;
  v50[1] = v44;
  sub_100033620(v88, v51);
  v52 = v45;
  v53 = v47;
  swift_bridgeObjectRetain();
  swift_retain(v43);
  sub_10002676C(v46, v44);
  v54 = v84;
  v55 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v56 = UUID.uuidString.getter(v55);
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
  strcpy((char *)v90, "ActionMenu: ");
  BYTE5(v90[1]) = 0;
  HIWORD(v90[1]) = -5120;
  v60 = v75;
  v59._countAndFlagsBits = v76;
  v59._object = v75;
  String.append(_:)(v59);
  swift_bridgeObjectRelease(v60);
  v61 = v90[0];
  v62 = v90[1];
  result = sub_10000970C(v95);
  v64 = v87;
  *v87 = v56;
  v64[1] = v58;
  v64[2] = v61;
  v64[3] = v62;
  v64[4] = 0;
  v64[5] = 0xE000000000000000;
  v64[6] = 0;
  *((_BYTE *)v64 + 56) = 0;
  v64[8] = (uint64_t)sub_1000738E4;
  v64[9] = v42;
  return result;
}

uint64_t sub_10006DEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006DF44, 0, 0);
}

uint64_t sub_10006DF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046CA48, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAFC8, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006E090(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE94C;
  v12 = (char *)&dword_1004BE948 + dword_1004BE948;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006E120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006E1B0, 0, 0);
}

uint64_t sub_10006E1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046CB88, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAFE8, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006E2FC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE96C;
  v12 = (char *)&dword_1004BE968 + dword_1004BE968;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006E38C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006E41C, 0, 0);
}

uint64_t sub_10006E41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046CED0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BB078, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006E568(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE9EC;
  v12 = (char *)&dword_1004BE9E8 + dword_1004BE9E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006E5F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  v8 = swift_allocObject(&unk_10046CE30, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v10;
  v11 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v7);
}

uint64_t sub_10006E6B0(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10006E72C, 0, 0);
}

uint64_t sub_10006E72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_10046CE08, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100074D9C((_QWORD *)(v0 + 16));
  v8 = sub_1001CC790(v1, (uint64_t)&unk_1004BB058, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006E7F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1004BE9CC;
  v13 = (char *)&dword_1004BE9C8 + dword_1004BE9C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000756A8;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10006E880@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  v8 = swift_allocObject(&unk_10046CD68, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 24) = v9;
  v11 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v7;
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v5);
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_10006E930(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10006E9AC, 0, 0);
}

uint64_t sub_10006E9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_10046CD40, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100074B6C((_QWORD *)(v0 + 16));
  v8 = sub_1001CC790(v1, (uint64_t)&unk_1004BB038, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006EA70(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1004BE9AC;
  v13 = (char *)&dword_1004BE9A8 + dword_1004BE9A8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000756A8;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

double sub_10006EB00@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  v9 = swift_allocObject(&unk_10046C3B8, 88, 7);
  *a2 = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 80) = v8;
  sub_1000728C0(v4);
  swift_bridgeObjectRetain();
  swift_retain(v11);
  swift_retain(v12);
  *(_QWORD *)&result = swift_retain(v8).n128_u64[0];
  return result;
}

uint64_t sub_10006EBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(v1 + 152) = v4;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v8;
  return swift_task_switch(sub_10006EC3C, 0, 0);
}

uint64_t sub_10006EC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_10046C390, 168, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v0 + 144);
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_10007282C(v0 + 16);
  v8 = sub_1001CC790(v1, (uint64_t)&unk_1004BAEB8, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  v9 = *(_OWORD *)(a4 + 16);
  v10 = unk_1004BE8AC;
  v13 = (char *)&dword_1004BE8A8 + dword_1004BE8A8;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 152) = v11;
  *v11 = v4;
  v11[1] = sub_10006EDA0;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10006EDA0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006EDE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006EE78, 0, 0);
}

uint64_t sub_10006EE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046CC78, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BB008, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006EFC4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE98C;
  v12 = (char *)&dword_1004BE988 + dword_1004BE988;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006F054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006F0E4, 0, 0);
}

uint64_t sub_10006F0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C818, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAF70, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F230(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE90C;
  v12 = (char *)&dword_1004BE908 + dword_1004BE908;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006F2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006F350, 0, 0);
}

uint64_t sub_10006F350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C570, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAF00, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F49C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE714;
  v12 = (char *)&dword_1004BE710 + dword_1004BE710;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006F52C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(char);

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (*)(char))((char *)&dword_1004BE700 + dword_1004BE700);
  v2 = (_QWORD *)swift_task_alloc(unk_1004BE704);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10006F590;
  return v4(0);
}

uint64_t sub_10006F590(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10006F5EC(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10006F668, 0, 0);
}

uint64_t sub_10006F668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_10046C688, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100073580((_QWORD *)(v0 + 16));
  v8 = sub_1001CC790(v1, (uint64_t)&unk_1004BAF30, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F72C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1004BE8CC;
  v13 = (char *)&dword_1004BE8C8 + dword_1004BE8C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_10006F7BC;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10006F7BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006F804@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v7 = *a1;
  v8 = a1[7];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 80, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 72) = v8;
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  return swift_retain(v8);
}

uint64_t sub_10006F8A0(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10006F91C, 0, 0);
}

uint64_t sub_10006F91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_10046C750, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100073580((_QWORD *)(v0 + 16));
  v8 = sub_1001CC790(v1, (uint64_t)&unk_1004BAF50, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F9E0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1004BE8EC;
  v13 = (char *)&dword_1004BE8E8 + dword_1004BE8E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000756A8;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10006FA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006FB00, 0, 0);
}

uint64_t sub_10006FB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C8E0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAF90, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006FC4C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE92C;
  v12 = (char *)&dword_1004BE928 + dword_1004BE928;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006FCDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006FD6C, 0, 0);
}

uint64_t sub_10006FD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C070, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAE30, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006FEB8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE82C;
  v12 = (char *)&dword_1004BE828 + dword_1004BE828;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10006FF48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10006FFD8, 0, 0);
}

uint64_t sub_10006FFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C138, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAE50, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070124(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE84C;
  v12 = (char *)&dword_1004BE848 + dword_1004BE848;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000701B4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000701B4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000701FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10007028C, 0, 0);
}

uint64_t sub_10007028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C200, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAE70, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000703D8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE86C;
  v12 = (char *)&dword_1004BE868 + dword_1004BE868;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_100070468@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;

  v7 = *a1;
  v8 = a1[5];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 64, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 56) = v8;
  swift_retain(v10);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_1000704EC(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 48);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_100070544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000705D4, 0, 0);
}

uint64_t sub_1000705D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046C2C8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAE90, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070720(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004BE88C;
  v12 = (char *)&dword_1004BE888 + dword_1004BE888;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000756A4;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000707B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  v6 = swift_allocObject(&unk_10046BFD0, 48, 7);
  *a2 = v6;
  *(_QWORD *)(v6 + 16) = v4;
  v7 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain(v7);
  return swift_retain(v5);
}

uint64_t sub_100070828(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_100070878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_1000057B4((uint64_t *)&unk_1004BFBC0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 112) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  return swift_task_switch(sub_100070900, 0, 0);
}

uint64_t sub_100070900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10046BFA8, 128, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_QWORD *)(v11 + 56) = v7;
  *(_BYTE *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v4;
  *(_QWORD *)(v11 + 88) = v3;
  *(_QWORD *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 120) = v1;
  swift_retain(v14);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v15);
  swift_retain(v1);
  v12 = sub_1001CC790(v8, (uint64_t)&unk_1004BAE10, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070A30(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  v8 = a4[1];
  v9 = unk_1004BE80C;
  v12 = (char *)&dword_1004BE808 + dword_1004BE808;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 112) = v10;
  *v10 = v4;
  v10[1] = sub_100070AB8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_100070AB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100070B00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70[3];
  _QWORD v71[9];
  __int128 v72[2];
  uint64_t (*v73)();
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[3];

  v67 = a7;
  v68 = a5;
  v60 = a6;
  *(_QWORD *)&v66 = a4;
  v12 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000057B4(&qword_1004B9D88);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = v17;
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  *(_QWORD *)&v65 = a1[4];
  v20 = a1[5];
  v21 = sub_1000096A0(a1, v19);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v59 = a3;
  sub_1000444A8(a3, (uint64_t)v70);
  sub_10000FEB4(v66, (uint64_t)v72, &qword_1004B9DF8);
  sub_10000FEB4(v68, (uint64_t)v71, &qword_1004B9DF0);
  sub_10000FEB4(v67, (uint64_t)v18, &qword_1004B9D88);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, a2, v70, (uint64_t)v72, (uint64_t)v71, 0, 0, (uint64_t)v18, &v73, v19, v65, v20);
  v65 = v74;
  v66 = v75;
  v55 = v73;
  v25 = v76;
  sub_100072C60((uint64_t)a1, (uint64_t)v71);
  v61 = a2;
  v26 = a2;
  v27 = v56;
  swift_retain(v26);
  v28 = sub_1000057B4(&qword_1004BAEC0);
  if ((swift_dynamicCast(v27, v71, v28, v14, 6) & 1) != 0)
  {
    v29 = v73;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v14);
    v31 = ((uint64_t (*)(uint64_t))v29)(v30);
    v33 = v32 != 1;
    sub_100033EC4(v31, v32);
  }
  else
  {
    v33 = 1;
  }
  sub_100072C60((uint64_t)a1, (uint64_t)v71);
  v56 = (char *)String.init<A>(describing:)(v71, v28);
  v35 = v34;
  sub_100072C60((uint64_t)a1, (uint64_t)v70);
  sub_1000444A8(v59, (uint64_t)v72);
  sub_10000FEB4(v67, (uint64_t)v18, &qword_1004B9D88);
  sub_10000FEB4(v60, (uint64_t)v69, &qword_1004BAD28);
  sub_10000FEB4(v68, (uint64_t)v71, &qword_1004B9DF0);
  v36 = *(unsigned __int8 *)(v57 + 80);
  v37 = (v36 + 232) & ~v36;
  v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_10046C408, v39 + 72, v36 | 7);
  *(_QWORD *)(v40 + 16) = v55;
  *(_OWORD *)(v40 + 24) = v65;
  *(_OWORD *)(v40 + 40) = v66;
  *(_QWORD *)(v40 + 56) = v25;
  *(_BYTE *)(v40 + 64) = 0;
  *(_DWORD *)(v40 + 65) = v77[0];
  *(_DWORD *)(v40 + 68) = *(_DWORD *)((char *)v77 + 3);
  *(_QWORD *)(v40 + 72) = sub_10002F788;
  *(_QWORD *)(v40 + 80) = 0;
  *(_QWORD *)(v40 + 88) = 0x4014000000000000;
  *(_QWORD *)(v40 + 96) = &unk_1004B9DD8;
  *(_QWORD *)(v40 + 104) = 0;
  *(_QWORD *)(v40 + 112) = &unk_1004B9DE0;
  *(_QWORD *)(v40 + 120) = 0;
  *(_BYTE *)(v40 + 128) = v33;
  sub_100071E7C(v70, (_OWORD *)(v40 + 136));
  sub_100033620(v72, v40 + 184);
  v41 = v61;
  *(_QWORD *)(v40 + 224) = v61;
  sub_10000FD10((uint64_t)v18, v40 + v37, &qword_1004B9D88);
  sub_10000FD10((uint64_t)v69, v40 + v38, &qword_1004BAD28);
  sub_10000FD10((uint64_t)v71, v40 + v39, &qword_1004B9DF0);
  swift_retain(v41);
  v42 = v65;
  swift_retain(v65);
  v43 = v66;
  swift_retain(v66);
  swift_retain(v25);
  v44 = v62;
  v45 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v46 = UUID.uuidString.getter(v45);
  v48 = v47;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  strcpy((char *)v71, "ActionMenu: ");
  BYTE5(v71[1]) = 0;
  HIWORD(v71[1]) = -5120;
  v49._countAndFlagsBits = (uint64_t)v56;
  v49._object = v35;
  String.append(_:)(v49);
  swift_release(v25);
  swift_release(v43);
  swift_release(v42);
  result = swift_bridgeObjectRelease(v35);
  v51 = v71[0];
  v52 = v71[1];
  *(_QWORD *)a8 = v46;
  *(_QWORD *)(a8 + 8) = v48;
  *(_QWORD *)(a8 + 16) = v51;
  *(_QWORD *)(a8 + 24) = v52;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_100072ED4;
  *(_QWORD *)(a8 + 72) = v40;
  return result;
}

uint64_t sub_100070FD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  void *v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  __int128 v51[3];

  v41 = a4;
  v42 = a7;
  v46 = a5;
  v47 = a6;
  v44 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000057B4(&qword_1004B9D88);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000444A8(a1, (uint64_t)v51);
  v21 = sub_1000057B4(&qword_1004BAD38);
  v45 = String.init<A>(describing:)(v51, v21);
  v43 = v22;
  sub_1000444A8(a1, (uint64_t)v51);
  sub_10000FEB4(a10, (uint64_t)v20, &qword_1004B9D88);
  sub_1000444A8(v41, (uint64_t)v50);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 104) & ~v23;
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_10046CBD8, v25 + 40, v23 | 7);
  sub_100033620(v51, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v27 = v47;
  v26[9] = v46;
  v26[10] = v27;
  v28 = (uint64_t)v26 + v24;
  v29 = v42;
  v30 = v44;
  v26[11] = v42;
  v26[12] = v30;
  sub_10000FD10((uint64_t)v20, v28, &qword_1004B9D88);
  sub_100033620(v50, (uint64_t)v26 + v25);
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  sub_10002676C(v29, v30);
  v33 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v34 = UUID.uuidString.getter(v33);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v37._countAndFlagsBits = v45;
  v38 = v43;
  v37._object = v43;
  String.append(_:)(v37);
  result = swift_bridgeObjectRelease(v38);
  v40 = v51[0];
  *(_QWORD *)a8 = v34;
  *(_QWORD *)(a8 + 8) = v36;
  *(_OWORD *)(a8 + 16) = v40;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_10007483C;
  *(_QWORD *)(a8 + 72) = v26;
  return result;
}

uint64_t sub_100071218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[9];
  _BYTE v47[40];
  __int128 v48[2];
  __int128 v49[3];

  v43 = a8;
  v42 = a7;
  v39 = a6;
  v40 = a2;
  v45 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000057B4(&qword_1004B9D88);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000444A8(a1, (uint64_t)v46);
  v20 = sub_1000057B4(&qword_1004BAD40);
  v41 = String.init<A>(describing:)(v46, v20);
  v22 = v21;
  sub_1000444A8(a1, (uint64_t)v49);
  sub_1000444A8(a3, (uint64_t)v48);
  sub_10000FEB4(a4, (uint64_t)v47, &qword_1004B9DF8);
  sub_10000FEB4(a5, (uint64_t)v46, &qword_1004B9DF0);
  sub_10000FEB4(v39, (uint64_t)v19, &qword_1004B9D88);
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = (v23 + 216) & ~v23;
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_10046C3E0, v25 + 16, v23 | 7);
  sub_100033620(v49, v26 + 16);
  v27 = v40;
  *(_QWORD *)(v26 + 56) = v40;
  sub_100033620(v48, v26 + 64);
  sub_10000FD10((uint64_t)v47, v26 + 104, &qword_1004B9DF8);
  sub_10000FD10((uint64_t)v46, v26 + 144, &qword_1004B9DF0);
  sub_10000FD10((uint64_t)v19, v26 + v24, &qword_1004B9D88);
  v28 = (uint64_t *)(v26 + v25);
  v29 = v42;
  v30 = v43;
  *v28 = v42;
  v28[1] = v30;
  swift_retain(v27);
  sub_10000DCE8(v29, v30);
  v31 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
  strcpy((char *)v46, "ActionMenu: ");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  v35._countAndFlagsBits = v41;
  v35._object = v22;
  String.append(_:)(v35);
  result = swift_bridgeObjectRelease(v22);
  v37 = v46[0];
  v38 = v46[1];
  *(_QWORD *)a9 = v32;
  *(_QWORD *)(a9 + 8) = v34;
  *(_QWORD *)(a9 + 16) = v37;
  *(_QWORD *)(a9 + 24) = v38;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_100072C04;
  *(_QWORD *)(a9 + 72) = v26;
  return result;
}

uint64_t sub_1000714FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_10000970C((_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 96))
    sub_10000970C((_QWORD *)(v0 + 72));
  v4 = (v2 + 144) & ~v2;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  v5 = *(_QWORD *)(v0 + 136);
  if (v5 >> 60 != 15)
    sub_10000FC28(*(_QWORD *)(v0 + 128), v5);
  v6 = v0 + v4;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v4, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  return swift_deallocObject(v0, v4 + v3, v2 | 7);
}

_QWORD *sub_1000716C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8) + 80);
  return sub_100066BF8((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v0 + ((v1 + 144) & ~v1));
}

uint64_t sub_100071718(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_100071754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000970C((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_10000970C((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_10000970C((_QWORD *)(v0 + 104));
  v5 = v4 + v3;
  swift_unknownObjectWeakDestroy(v0 + 144);
  v6 = *(unsigned __int8 *)(v0 + 192);
  if (v6 != 255)
    sub_1000335FC(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
  v7 = v5 + 7;
  if (*(_QWORD *)(v0 + 200))
    swift_release(*(_QWORD *)(v0 + 208));
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v14 = v12 + v13[6];
      v15 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
  }
  if (*(_QWORD *)(v0 + v8))
    swift_release(*(_QWORD *)(v0 + v8 + 8));
  v17 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 16;
  swift_release(*(_QWORD *)(v0 + v17 + 8));
  return swift_deallocObject(v0, v18, v2 | 7);
}

_QWORD *sub_100071960()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100068DF4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100071CEC);
}

uint64_t sub_100071CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100071D6C);
}

uint64_t sub_100071D6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Playlist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_100071DE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

_OWORD *sub_100071E7C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_100071E94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100071EB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(_QWORD *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  v6 = sub_1000407CC(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, a1, v3);
  v7 = v5(v9);
  sub_10000970C(v9);
  return v7;
}

uint64_t sub_100071F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000707B0((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100071F40()
{
  uint64_t v0;

  return sub_100070828(v0 + 16);
}

uint64_t sub_100071F4C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100071F90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BADFC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BADF8 + dword_1004BADF8))(v0 + 16);
}

_QWORD *sub_100071FE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = a1[11];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100072050()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10007209C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAE0C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAE08 + dword_1004BAE08))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10007211C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10007214C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, (uint64_t)&unk_10046C098, a1);
}

uint64_t sub_100072184()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAE1C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAE18 + dword_1004BAE18))(v0 + 16);
}

uint64_t sub_1000721E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAE2C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAE28 + dword_1004BAE28))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100072268@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, (uint64_t)&unk_10046C160, a1);
}

uint64_t sub_10007229C()
{
  uint64_t v0;

  return sub_1000704EC(v0 + 16);
}

uint64_t sub_1000722B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAE3C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002E8E0;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAE38 + dword_1004BAE38))(v0 + 16);
}

uint64_t sub_100072314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAE4C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAE48 + dword_1004BAE48))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10007239C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, (uint64_t)&unk_10046C228, a1);
}

uint64_t sub_1000723D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAE5C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAE58 + dword_1004BAE58))(v0 + 16);
}

uint64_t sub_100072430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAE6C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAE68 + dword_1004BAE68))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000724B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, (uint64_t)&unk_10046C2F0, a1);
}

uint64_t sub_1000724F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAE7C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAE78 + dword_1004BAE78))(v0 + 16);
}

uint64_t sub_10007254C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAE8C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAE88 + dword_1004BAE88))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000725D0(_QWORD *a1, _QWORD *a2)
{
  _s13InsertCommandV8LocationOwtk(a2, a1);
  return a2;
}

id *sub_10007260C(id *a1)
{
  sub_100072634(*a1);
  return a1;
}

void sub_100072634(id a1)
{
  if ((unint64_t)a1 >= 4)

}

uint64_t sub_100072644(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_10007266C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  sub_100072634(*(id *)a1);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

double sub_100072704@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10006EB00(v1 + 16, a1);
}

uint64_t sub_100072710()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  _OWORD v7[5];
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  v4 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 112);
  v11 = v5;
  v12 = *(_QWORD *)(v0 + 144);
  v8 = v4;
  v9 = v3;
  return v4(v7);
}

uint64_t sub_100072770()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[16]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1000727D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAEA4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAEA0 + dword_1004BAEA0))(v0 + 16);
}

uint64_t sub_10007282C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 128);
  sub_1000728C0(*(id *)a1);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

id sub_1000728C0(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_1000728D0()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_10007293C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAEB4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004BAEB0 + dword_1004BAEB0))(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000729BC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100072A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + v3;
  sub_10000970C((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_10000970C((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_10000970C((_QWORD *)(v0 + 104));
  v5 = v4 + 7;
  if (*(_QWORD *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + 144);
    v6 = *(unsigned __int8 *)(v0 + 192);
    if (v6 != 255)
      sub_1000335FC(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
    if (*(_QWORD *)(v0 + 200))
      swift_release(*(_QWORD *)(v0 + 208));
  }
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v10 = *(_QWORD *)(v8 + 8);
    if (v10 >= 0xA)
      swift_bridgeObjectRelease(v10);
    v11 = v8 + v9[5];
    v12 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));
      v13 = v11 + v12[6];
      v14 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8]));
  }
  if (*(_QWORD *)(v0 + v7))
    swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v2 | 7);
}

_QWORD *sub_100072C04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100068378((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *v3, v3[1]);
}

uint64_t sub_100072C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100072CA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int *v6;
  unint64_t v7;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  int v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 232) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  sub_10000970C(v0 + 17);
  sub_10000970C(v0 + 23);
  swift_release(v0[28]);
  v5 = (char *)v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    v7 = *((_QWORD *)v5 + 1);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = &v5[v6[5]];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 3));
      v10 = &v8[v9[6]];
      v11 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[8]]);
  }
  v12 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((char *)v0 + v4 + 24))
    sub_10000970C((_QWORD *)((char *)v0 + v4));
  v13 = (char *)v0 + v12;
  if (*(_QWORD *)((char *)v0 + v12 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy((char *)v0 + v12);
    v14 = v13[48];
    if (v14 != 255)
      sub_1000335FC(*((id *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5), v14);
    if (*((_QWORD *)v13 + 7))
      swift_release(*((_QWORD *)v13 + 8));
  }
  return swift_deallocObject(v0, v12 + 72, v2 | 7);
}

uint64_t sub_100072ED4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100067364(v0 + 16, *(_BYTE *)(v0 + 128), (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100072F38()
{
  return sub_100074F40((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100072F48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100072F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  v3 = swift_allocObject(&unk_10046C5E8, 153, 7);
  *a1 = v3;
  return sub_100040268(v1 + 16, v3 + 16);
}

uint64_t sub_100072FC8()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_10000970C(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  swift_release(v0[21]);
  swift_release(v0[24]);
  swift_release(v0[26]);
  return swift_deallocObject(v0, 216, 7);
}

uint64_t sub_100073034()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_10007305C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAEDC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return sub_100061E00(v0 + 16);
}

uint64_t sub_1000730AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, (uint64_t)&unk_10046C598, a1);
}

uint64_t sub_1000730E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAEEC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAEE8 + dword_1004BAEE8))(v0 + 16);
}

uint64_t sub_100073140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAEFC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAEF8 + dword_1004BAEF8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000731C4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  sub_10000970C(v0 + 14);
  swift_bridgeObjectRelease(v0[20]);
  swift_release(v0[23]);
  swift_release(v0[26]);
  swift_release(v0[28]);
  return swift_deallocObject(v0, 232, 7);
}

uint64_t sub_100073238(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1004BAF0C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAF08 + dword_1004BAF08))(a1);
}

uint64_t sub_1000732B8()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_10000970C(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  return swift_deallocObject(v0, 153, 7);
}

uint64_t sub_10007330C()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10007331C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10006F804((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, (uint64_t)&unk_10046C6B0, a1);
}

uint64_t sub_10007334C()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073360()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073370()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAF1C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1004BAF18 + dword_1004BAF18))((_OWORD *)(v0 + 16));
}

uint64_t sub_1000733C8()
{
  return sub_100074E38((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000733D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAF2C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAF28 + dword_1004BAF28))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100073458()
{
  return sub_100074F40((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073468()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10006F804((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, (uint64_t)&unk_10046C778, a1);
}

uint64_t sub_1000734A8()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000734B8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  v14 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v12 = *(_OWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = v5;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  return v4(v8);
}

uint64_t sub_100073518()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073528()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAF3C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1004BAF38 + dword_1004BAF38))((_OWORD *)(v0 + 16));
}

_QWORD *sub_100073580(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100073608()
{
  return sub_100074E38((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100073618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAF4C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAF48 + dword_1004BAF48))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100073698()
{
  return sub_100074F40((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000736AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, (uint64_t)&unk_10046C840, a1);
}

uint64_t sub_1000736E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAF5C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAF58 + dword_1004BAF58))(v0 + 16);
}

uint64_t sub_100073740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAF6C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAF68 + dword_1004BAF68))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000737C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, (uint64_t)&unk_10046C908, a1);
}

uint64_t sub_100073800()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAF7C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAF78 + dword_1004BAF78))(v0 + 16);
}

uint64_t sub_10007385C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAF8C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAF88 + dword_1004BAF88))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000738E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int *v11;
  unint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 23;
  sub_10000970C((_QWORD *)(v0 + 16));
  sub_10000970C((_QWORD *)(v0 + 56));
  v10 = v0 + v3;
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v22 = v8 + 23;
    v12 = *(_QWORD *)(v10 + 8);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = v10 + v11[5];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 24));
      v21 = v13 + v14[6];
      v15 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v15 - 8);
      v20 = v15;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v19 + 48))(v21, 1))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[8]));
    v9 = v22;
    v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  }
  v16 = v9 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000970C((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v5));

  sub_10000970C((_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  v17 = *(_QWORD *)(v0 + v16 + 8);
  if (v17 >> 60 != 15)
    sub_10000FC28(*(_QWORD *)(v0 + v16), v17);
  return swift_deallocObject(v0, v16 + 16, v2 | 7);
}

uint64_t sub_100073B04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000659AC(v0 + 16, v0 + 56, v0 + v2, (_QWORD *)(v0 + v3), *(void (**)(char *, char *, uint64_t))(v0 + v4), *(_QWORD *)(v0 + v5), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100073BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100073BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100073C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = type metadata accessor for PlaylistContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 8) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v4;
  v11 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(v1 + 20);
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v5));
  v14 = v0 + v8;
  v15 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v0 + v8, 1, v15))
  {
    v16 = *(_QWORD *)(v14 + 8);
    if (v16 >= 0xA)
      swift_bridgeObjectRelease(v16);
    v17 = v14 + v15[5];
    v18 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v18 - 1) + 48))(v17, 1, v18))
    {
      v23 = v9;
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 24));
      v19 = v17 + v18[6];
      v20 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[10] + 8));
      v9 = v23;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[8]));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

_QWORD *sub_100073E38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8) + 80);
  return sub_100065568(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_100073EAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100073EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000970C((_QWORD *)(v0 + 16));
  sub_10000970C((_QWORD *)(v0 + 56));
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

_QWORD *sub_100074078()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8) + 80);
  return sub_100065314((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_1000740B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, (uint64_t)&unk_10046CA70, a1);
}

uint64_t sub_1000740EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAFB4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAFB0 + dword_1004BAFB0))(v0 + 16);
}

uint64_t sub_100074148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAFC4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAFC0 + dword_1004BAFC0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000741CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007422C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000742E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_1004BA33C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10002F6EC;
  return sub_1000467EC(v7, v8, v9);
}

uint64_t sub_100074384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_100074550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, (uint64_t)&unk_10046CBB0, a1);
}

uint64_t sub_100074588()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAFD4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAFD0 + dword_1004BAFD0))(v0 + 16);
}

uint64_t sub_1000745E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BAFE4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BAFE0 + dword_1004BAFE0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100074668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 104) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000970C((_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 >> 60 != 15)
    sub_10000FC28(*(_QWORD *)(v0 + 88), v5);
  v6 = v0 + v3;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v3, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  v13 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 40;
  sub_10000970C((_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v14, v2 | 7);
}

_QWORD *sub_10007483C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100066264((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1000748A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, (uint64_t)&unk_10046CCA0, a1);
}

uint64_t sub_1000748DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BAFF4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BAFF0 + dword_1004BAFF0))(v0 + 16);
}

uint64_t sub_100074938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BB004);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BB000 + dword_1004BB000))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000749BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[10];
  v7 = a1[13];
  swift_release(a1[15]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_100074A44(_QWORD *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[1];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v8 = a1[10];
  v9 = a1[13];
  swift_release(a1[15]);
  swift_release(v9);
  swift_release(v8);
  a2(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

uint64_t sub_100074AD0()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100074AE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10006E880((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100074AEC()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100074B00()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100074B14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BB024);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1004BB020 + dword_1004BB020))((_OWORD *)(v0 + 16));
}

_QWORD *sub_100074B6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100074BF4()
{
  return sub_100074E38((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100074C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BB034);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BB030 + dword_1004BB030))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100074C88()
{
  return sub_100074F40((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100074C9C()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100074CB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10006E5F8((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100074CB8()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100074CCC()
{
  return sub_100074CE0((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100074CE0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  swift_release(v2[12]);
  swift_release(v2[15]);
  swift_release(v2[17]);
  return swift_deallocObject(v2, 144, 7);
}

uint64_t sub_100074D44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BB044);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1004BB040 + dword_1004BB040))((_OWORD *)(v0 + 16));
}

_QWORD *sub_100074D9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100074E24()
{
  return sub_100074E38((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100074E38(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_unknownObjectRelease(v2[2]);
  a1(v2[5]);
  swift_release(v2[7]);
  swift_release(v2[9]);
  a2(v2[11]);
  swift_release(v2[14]);
  swift_release(v2[17]);
  swift_release(v2[19]);
  return swift_deallocObject(v2, 160, 7);
}

uint64_t sub_100074EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BB054);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BB050 + dword_1004BB050))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100074F2C()
{
  return sub_100074F40((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100074F40(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_100074F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100070468((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, (uint64_t)&unk_10046CEF8, a1);
}

uint64_t sub_100074FC8()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100075014()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1004BB064);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1004BB060 + dword_1004BB060))(v0 + 16);
}

_QWORD *sub_10007506C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_1000750E4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100075138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BB074);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10002F6EC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004BB070 + dword_1004BB070))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000751BC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000751F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  int *v11;
  unint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004BAD18) - 8);
  v35 = *(unsigned __int8 *)(v5 + 80);
  v6 = (v3 + v4 + v35) & ~v35;
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 79) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*((_QWORD *)v0 + 5))
    sub_10000970C((_QWORD *)v0 + 2);
  sub_10000970C((_QWORD *)v0 + 7);
  v10 = &v0[v3];
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v31 = v2;
    v12 = *((_QWORD *)v10 + 1);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = &v10[v11[5]];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 3));
      v30 = &v13[v14[6]];
      v15 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v15 - 8);
      v29 = v15;
      if (!(*(unsigned int (**)(char *, uint64_t))(v28 + 48))(v30, 1))
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[8]]);
    v2 = v31;
  }
  v16 = (((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = type metadata accessor for PlaylistContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(&v0[v6], 1, v17))
  {
    v18 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(&v0[v6], v18);
    v19 = &v0[v6 + *(int *)(v17 + 20)];
    v20 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  swift_release(*(_QWORD *)&v0[v7]);
  sub_10000970C(&v0[v8]);
  sub_10000970C(&v0[v9]);
  v21 = &v0[v32];
  if (*(_QWORD *)&v0[v32 + 56] != 1)
  {
    swift_unknownObjectWeakDestroy(&v0[v32]);
    v22 = v21[48];
    if (v22 != 255)
      sub_1000335FC(*((id *)v21 + 1), *((_QWORD *)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), v22);
    if (*((_QWORD *)v21 + 7))
      swift_release(*((_QWORD *)v21 + 8));
  }
  v23 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)&v0[v33 + 24])
    sub_10000970C(&v0[v33]);

  swift_bridgeObjectRelease(*(_QWORD *)&v0[v16 + 8]);
  v24 = *(_QWORD *)&v0[v23 + 8];
  if (v24 >> 60 != 15)
    sub_10000FC28(*(_QWORD *)&v0[v23], v24);
  v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = v25 + 40;
  sub_10000970C(&v0[v25]);
  return swift_deallocObject(v0, v26, v2 | v35 | 7);
}

_QWORD *sub_100075590()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004BAD18) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100064600(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v5), *(_QWORD *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void **)(v0 + v12), *(_QWORD *)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1000756B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB108, &qword_1004BB3D0, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_1000756CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB3C0, &qword_1004BB3C8, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_1000756E8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_1000057B4(a1);
  v9 = sub_10007B64C(a2, a1);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v17, v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_1000757F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB3B0, &qword_1004BB3B8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_100075814@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB3A0, &qword_1004BB3A8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_100075830@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB390, &qword_1004BB398, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_10007584C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB380, &qword_1004BB388, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_100075868@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB360, &qword_1004BB368, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_100075884@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB350, &qword_1004BB358, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_1000758A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB340, &qword_1004BB348, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_1000758BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB330, &qword_1004BB338, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_1000758D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB320, &qword_1004BB328, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_1000758F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000756E8(&qword_1004BB370, &qword_1004BB378, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;

  v47 = a9;
  v48 = a8;
  v40 = a7;
  v42 = a2;
  v43 = a6;
  v45 = a3;
  v46 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v44 = (uint64_t)&v39 - v18;
  v19 = *(void (**)(void))(v12 + 16);
  v19();
  ((void (*)(char *, char *, uint64_t))v19)(v17, a1, a5);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 56) & ~v20;
  v39 = v20 | 7;
  v22 = (char *)swift_allocObject(&unk_10046D180, v21 + v13, v20 | 7);
  v23 = v43;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = v23;
  v24 = v48;
  *((_QWORD *)v22 + 4) = a7;
  *((_QWORD *)v22 + 5) = v24;
  *((_QWORD *)v22 + 6) = v42;
  v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v25(&v22[v21], v17, a5);
  v26 = v41;
  v25(v41, a1, a5);
  v27 = (v20 + 48) & ~v20;
  v28 = v23;
  v29 = *(_QWORD *)(v23 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v27 + v13 + v30) & ~v30;
  v32 = (char *)swift_allocObject(&unk_10046D1A8, v31 + *(_QWORD *)(v29 + 64), v39 | v30);
  *((_QWORD *)v32 + 2) = a5;
  *((_QWORD *)v32 + 3) = v28;
  v33 = v28;
  v34 = v40;
  v35 = v48;
  *((_QWORD *)v32 + 4) = v40;
  *((_QWORD *)v32 + 5) = v35;
  v25(&v32[v27], v26, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v32[v31], v45, v33);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v44, (uint64_t)sub_100078A50, (uint64_t)v22, (uint64_t)&unk_1004BB0B8, (uint64_t)v32, v46, a5, v34, v49);
  v36 = v49[1];
  v37 = v47;
  *v47 = v49[0];
  v37[1] = v36;
  result = *(double *)&v50;
  v37[2] = v50;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A490(a1, 4, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB0C0, (uint64_t)&unk_1004BB0C8, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  double result;
  __int128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;

  v41 = a8;
  v42 = a7;
  v39 = a2;
  v40 = a3;
  v37 = a1;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v15 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  v38 = (uint64_t)&v37 - v19;
  v20 = *(void (**)(void))(v12 + 16);
  v20();
  ((void (*)(char *, char *, uint64_t))v20)(v18, a1, a4);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 48) & ~v21;
  v23 = v22 + v13;
  v24 = v21 | 7;
  v25 = (char *)swift_allocObject(&unk_10046D1D0, v22 + v13, v21 | 7);
  *((_QWORD *)v25 + 2) = a4;
  *((_QWORD *)v25 + 3) = a5;
  v26 = v42;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27(&v25[v22], v18, a4);
  v27(v15, v37, a4);
  v28 = *(_QWORD *)(a5 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = (v23 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_10046D1F8, v30 + *(_QWORD *)(v28 + 64), v24 | v29);
  *((_QWORD *)v31 + 2) = a4;
  *((_QWORD *)v31 + 3) = a5;
  v32 = v42;
  *((_QWORD *)v31 + 4) = a6;
  *((_QWORD *)v31 + 5) = v32;
  v27(&v31[v22], v15, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(&v31[v30], v39, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v38, 0, 0, (uint64_t)sub_100079474, (uint64_t)v25, (uint64_t)&unk_1004BB0D8, (uint64_t)v31, v40, v43, a4, a6);
  v33 = v43[1];
  v34 = v41;
  *v41 = v43[0];
  v34[1] = v33;
  result = *(double *)&v44;
  v36 = v45;
  v34[2] = v44;
  v34[3] = v36;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100077924(a1, 17, (uint64_t)sub_10007B68C, (uint64_t)&unk_1004BB0E0, (uint64_t)&unk_1004BB0E8, a2).n128_u64[0];
  return result;
}

uint64_t sub_100075D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100079B48(a1, 17, (uint64_t)sub_10007B68C, (uint64_t)&unk_1004BB0E0, (uint64_t)&unk_1004BB0E8, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_10046D220, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_10000FD10(a8, v21 + v17, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1004BB0F8;
  a9[7] = v21;
  return result;
}

uint64_t sub_100075E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100075F1C, 0, 0);
}

uint64_t sub_100075F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000FEB4(*(_QWORD *)(v0 + 96), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10002F60C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000760E0, v19, v20);
  }
}

uint64_t sub_1000760E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 41, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007B6A0, 0, 0);
}

unint64_t sub_1000761B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  v4 = sub_1000057B4(&qword_1004B9EE0);
  __chkstk_darwin(v4);
  v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004B9EE8);
  __chkstk_darwin(v8);
  v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v61 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004B9ED8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 - 8);
  v17 = __chkstk_darwin(v13);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v54 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v54 - v22;
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v63 = a1;
  v28(v23, a1, a2);
  v29 = swift_dynamicCast(v15, v23, a2, v24, 6);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if ((v29 & 1) != 0)
  {
    v30(v15, 0, 1, v24);
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v27, v15, v24);
    Track.albumTitle.getter(v31);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    swift_bridgeObjectRelease(v33);
    if (v33)
      return 0;
  }
  else
  {
    v30(v15, 1, 1, v24);
    sub_10000FE2C((uint64_t)v15, &qword_1004B9ED8);
  }
  v34 = v63;
  v28(v21, v63, a2);
  v35 = (uint64_t)v62;
  v36 = swift_dynamicCast(v62, v21, a2, v10, 6);
  v37 = v61;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if ((v36 & 1) == 0)
  {
    v38(v35, 1, 1, v10);
    sub_10000FE2C(v35, &qword_1004B9EE8);
    goto LABEL_9;
  }
  v38(v35, 0, 1, v10);
  v39 = v56;
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 32))(v56, v35, v10);
  Song.albumTitle.getter(v40);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v10);
  swift_bridgeObjectRelease(v42);
  if (v42)
    return 0;
LABEL_9:
  v43 = v57;
  v28(v57, v34, a2);
  v45 = v59;
  v44 = (uint64_t)v60;
  v46 = swift_dynamicCast(v60, v43, a2, v59, 6);
  v47 = v58;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v44, 0, 1, v45);
    v49 = v55;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v55, v44, v45);
    MusicVideo.albumTitle.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v44, 1, 1, v45);
    sub_10000FE2C(v44, &qword_1004B9EE0);
  }
  return 0xD000000000000010;
}

uint64_t sub_100076608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_1000057B4(&qword_1004B9EE0);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004B9EE8);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004B9ED8);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007678C, 0, 0);
}

uint64_t sub_10007678C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 1);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_100076B84;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_10000FE2C(v20, &qword_1004B9ED8);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_100076BEC;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10000FE2C(v39, &qword_1004B9EE8);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 1);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_100076C54;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_10000FE2C(v58, &qword_1004B9EE0);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100076B84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10007B6AC, 0, 0);
}

uint64_t sub_100076BEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10007B6B0, 0, 0);
}

uint64_t sub_100076C54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10007B6A8, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_10007A140(0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_10005D854;
}

id sub_100076CF8()
{
  return sub_10007ACC4();
}

uint64_t sub_100076D18(uint64_t a1, uint64_t a2)
{
  return sub_10007A304(a1, a2, 0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  if (a1)
    return sub_100076D6C() & 1;
  else
    return 1;
}

uint64_t sub_100076D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v25[15];

  v0 = type metadata accessor for MusicPropertySource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v25[-1] - v6;
  v8 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v5);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  if ((v8 & 1) != 0)
  {
    v10 = enum case for MusicPropertySource.library(_:);
    v9(v7, enum case for MusicPropertySource.library(_:), v0);
  }
  else
  {
    v9(v7, enum case for MusicPropertySource.catalog(_:), v0);
    v10 = enum case for MusicPropertySource.library(_:);
  }
  v9(v4, v10, v0);
  v11 = static MusicPropertySource.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v7, v0);
  if ((v11 & 1) != 0)
    return 1;
  if (qword_1004B8AF8 != -1)
    swift_once(&qword_1004B8AF8, sub_1000D365C);
  v14 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003CA740);
  v16 = swift_getKeyPath(&unk_1003CA768);
  static Published.subscript.getter(v25, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v13 = BYTE1(v25[0]);
  v17 = v25[3];
  v18 = v25[4];
  v19 = v25[7];
  v20 = v25[9];
  v21 = (void *)v25[10];
  v22 = v25[12];
  swift_bridgeObjectRelease(v25[14]);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);

  return v13;
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = sub_1000057B4(&qword_1004BB100);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000057B4(&qword_1004B9E98);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = sub_100076D6C();
    if ((v10 & 1) == 0)
      return 0;
  }
  MusicVideo.albums.getter(v10);
  v13 = sub_1000057B4(&qword_1004BB108);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
  {
    sub_10000FE2C((uint64_t)v4, &qword_1004BB100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    sub_10000FE2C((uint64_t)v7, &qword_1004B9E98);
    return 0;
  }
  sub_1000756E8(&qword_1004BB108, &qword_1004BB3D0, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v17 = Album.isSingleMusicVideo.getter(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v17 == 2)
    return 0;
  return (v17 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v0 = sub_1000057B4(&qword_1004BB100);
  __chkstk_darwin(v0);
  v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1000057B4(&qword_1004B9E98);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100076D6C() & 1) == 0)
    return 0;
  v33 = v7;
  v34 = v5;
  v35 = v4;
  v36 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 != enum case for Track.song(_:))
  {
    if (v16 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
      v18 = v11;
      v19 = v8;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v11, v15, v8);
      v21 = (uint64_t)v38;
      MusicVideo.albums.getter(v20);
      v22 = sub_1000057B4(&qword_1004BB108);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_10000FE2C(v21, &qword_1004BB100);
        v24 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
      }
      else
      {
        v24 = v37;
        sub_1000756E8(&qword_1004BB108, &qword_1004BB3D0, (uint64_t (*)(_QWORD))&type metadata accessor for Album, v37);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        v27 = v34;
        v26 = v35;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35) != 1)
        {
          v29 = v33;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32))(v33, v24, v26);
          v31 = Album.isSingleMusicVideo.getter(v30);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
          v28 = v36;
          v17 = v31 != 2 && (v31 & 1) == 0;
          goto LABEL_12;
        }
      }
      sub_10000FE2C(v24, &qword_1004B9E98);
      v17 = 0;
      v28 = v36;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
      return v17;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 1;
}

uint64_t Playlist.supportsContainerNavigation(itemState:)()
{
  return sub_100076D6C() & 1;
}

BOOL Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v0 = sub_1000057B4(&qword_1004BB100);
  __chkstk_darwin(v0);
  v45 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1000057B4(&qword_1004B9E98);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000057B4(&qword_1004BB110);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  if ((sub_100076D6C() & 1) != 0)
  {
    v38 = v8;
    v39 = v6;
    v41 = v5;
    v42 = v12;
    v40 = v4;
    v43 = v10;
    v44 = v9;
    Playlist.Entry.item.getter();
    v19 = type metadata accessor for Playlist.Entry.Item(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      v21 = 0;
LABEL_12:
      sub_10000FE2C((uint64_t)v18, &qword_1004BB110);
      return v21;
    }
    sub_10000FEB4((uint64_t)v18, (uint64_t)v16, &qword_1004BB110);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v16, v19);
    if (v22 != enum case for Playlist.Entry.Item.musicVideo(_:))
    {
      v21 = v22 == enum case for Playlist.Entry.Item.song(_:);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v20 + 96))(v16, v19);
    v23 = v42;
    v24 = v43;
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v42, v16, v44);
    v26 = (uint64_t)v45;
    MusicVideo.albums.getter(v25);
    v27 = sub_1000057B4(&qword_1004BB108);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      sub_10000FE2C(v26, &qword_1004BB100);
      v29 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1, 1, v41);
    }
    else
    {
      v29 = (uint64_t)v40;
      sub_1000756E8(&qword_1004BB108, &qword_1004BB3D0, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v40);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      v30 = v39;
      v31 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v29, 1, v41) != 1)
      {
        v34 = v38;
        v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 32))(v38, v29, v31);
        v36 = Album.isSingleMusicVideo.getter(v35);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v31);
        v32 = v44;
        v21 = v36 != 2 && (v36 & 1) == 0;
        goto LABEL_11;
      }
    }
    sub_10000FE2C(v29, &qword_1004B9E98);
    v21 = 0;
    v32 = v44;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v32);
    goto LABEL_12;
  }
  return 0;
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100077924(a1, 15, (uint64_t)sub_10007B68C, (uint64_t)&unk_1004BB118, (uint64_t)&unk_1004BB120, a2).n128_u64[0];
  return result;
}

__n128 sub_100077924@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];

  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v18 = *(__n128 *)(a1 + 48);
  sub_10000FD10(a1, (uint64_t)v21, &qword_1004BAE98);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  sub_1000795C8((uint64_t)v21);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v13;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v19;
  result = v18;
  *(__n128 *)(a6 + 48) = v18;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_100077A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100079B48(a1, 15, (uint64_t)sub_10007B68C, (uint64_t)&unk_1004BB118, (uint64_t)&unk_1004BB120, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_10046D248, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_10000FD10(a8, v21 + v17, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1004BB130;
  a9[7] = v21;
  return result;
}

uint64_t sub_100077B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100077BD8, 0, 0);
}

uint64_t sub_100077BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000FEB4(*(_QWORD *)(v0 + 96), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10002F60C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003C6CB0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100077DA4, v19, v20);
  }
}

uint64_t sub_100077DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007B6A0, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_10007A140(0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_10005D800;
}

id sub_100077EB4()
{
  return sub_10007ACC4();
}

uint64_t sub_100077ED8(uint64_t a1, uint64_t a2)
{
  return sub_10007A304(a1, a2, 0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t sub_100077EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002F6EC;
  return v6();
}

uint64_t sub_100077F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A524(a1, 4, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB0C0, (uint64_t)&unk_1004BB0C8, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_10046D270, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_10000FD10(a6, v21 + v17, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1004BB140;
  a9[5] = v21;
  return result;
}

uint64_t sub_100078070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007811C, 0, 0);
}

uint64_t sub_10007811C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000FEB4(*(_QWORD *)(v0 + 72), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10002F60C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000782D4, v19, v20);
  }
}

uint64_t sub_1000782D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007B6A4, 0, 0);
}

unint64_t sub_1000783A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;

  v87 = a2;
  v5 = sub_1000057B4(&qword_1004B9EE0);
  __chkstk_darwin(v5);
  v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for MusicVideo(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v73 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000057B4(&qword_1004B9EE8);
  __chkstk_darwin(v8);
  v83 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Song(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v74 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000057B4(&qword_1004B9ED8);
  v12 = __chkstk_darwin(v11);
  v86 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = a3;
  v84 = *(_QWORD *)(a3 - 8);
  v14 = __chkstk_darwin(v12);
  v75 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v80 = (char *)&v73 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - v18;
  v20 = type metadata accessor for Track(0);
  v85 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v79 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1003CA740);
  v23 = swift_getKeyPath(&unk_1003CA768);
  v24 = a1;
  static Published.subscript.getter(&v89, a1, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v25 = v90;
  v26 = v91;
  v27 = v92;
  v28 = v93;
  v30 = v94;
  v29 = v95;
  v31 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v30);

  if ((v25 & 1) == 0)
    return 0xD00000000000003CLL;
  v33 = swift_getKeyPath(&unk_1003CA740);
  v34 = swift_getKeyPath(&unk_1003CA768);
  static Published.subscript.getter(&v89, v24, v33, v34);
  swift_release(v33);
  swift_release(v34);
  v35 = BYTE1(v89);
  v36 = v91;
  v37 = v92;
  v38 = v93;
  v39 = v94;
  v40 = v95;
  v41 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);

  if (v35 != 1)
    return 0xD000000000000016;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v44 = v87;
  v43 = v88;
  v42(v19, v87, v88);
  v45 = (uint64_t)v86;
  v46 = swift_dynamicCast(v86, v19, v43, v20, 6);
  v47 = v85;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v45, 0, 1, v20);
    v49 = v79;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v79, v45, v20);
    Track.catalogID.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v20);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v45, 1, 1, v20);
    sub_10000FE2C(v45, &qword_1004B9ED8);
  }
  v53 = v80;
  v42(v80, v44, v43);
  v54 = (uint64_t)v83;
  v55 = v82;
  v56 = swift_dynamicCast(v83, v53, v43, v82, 6);
  v57 = v81;
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  if ((v56 & 1) == 0)
  {
    v58(v54, 1, 1, v55);
    sub_10000FE2C(v54, &qword_1004B9EE8);
    goto LABEL_13;
  }
  v58(v54, 0, 1, v55);
  v59 = v74;
  v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 32))(v74, v54, v55);
  Song.catalogID.getter(v60);
  v62 = v61;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v55);
  swift_bridgeObjectRelease(v62);
  if (v62)
    return 0;
LABEL_13:
  v63 = v75;
  v42(v75, v44, v43);
  v64 = (uint64_t)v78;
  v65 = v77;
  v66 = swift_dynamicCast(v78, v63, v43, v77, 6);
  v67 = v76;
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
  if ((v66 & 1) != 0)
  {
    v68(v64, 0, 1, v65);
    v69 = v73;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 32))(v73, v64, v65);
    MusicVideo.catalogID.getter(v70);
    v72 = v71;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v65);
    swift_bridgeObjectRelease(v72);
    if (v72)
      return 0;
  }
  else
  {
    v68(v64, 1, 1, v65);
    sub_10000FE2C(v64, &qword_1004B9EE0);
  }
  return 0xD000000000000010;
}

uint64_t sub_1000789E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100078A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000783A4(*(_QWORD *)(v0 + 48), v0 + ((v2 + 56) & ~v2), v1);
}

uint64_t sub_100078A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_1000057B4(&qword_1004B9EE0);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000057B4(&qword_1004B9EE8);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004B9ED8);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100078BF8, 0, 0);
}

uint64_t sub_100078BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 0);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_100078FF0;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_10000FE2C(v20, &qword_1004B9ED8);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_10007911C;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10000FE2C(v39, &qword_1004B9EE8);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_100079248;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_10000FE2C(v58, &qword_1004B9EE0);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100078FF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_100079058, 0, 0);
}

uint64_t sub_100079058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007911C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_100079184, 0, 0);
}

uint64_t sub_100079184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079248()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_100034960(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000792B0, 0, 0);
}

uint64_t sub_1000792B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079378()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_1004BB0B4);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10002F6EC;
  return sub_100078A74(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_10007941C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

unint64_t sub_100079474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000761B0(v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_100079498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v9);
}

uint64_t sub_100079524()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_1004BB0D4);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10002F6EC;
  return sub_100076608(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1000795C8(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1000795F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB0F4);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100075E70(v7, v8, v2, v3);
}

uint64_t sub_100079694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB12C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100077B2C(v7, v8, v2, v3);
}

uint64_t sub_100079734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB13C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_100078070(v7, v8, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_10007A140(0x6572432077656956, 0xEC00000073746964);
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046D298, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_10046D2C0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10002F080;
}

uint64_t sub_100079878()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007989C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6572432077656956, 0xEC00000073746964);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*sub_100079A0C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046D770, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_10046D798, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10002F6E4;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100077924(a1, 16, (uint64_t)sub_100079AB4, (uint64_t)&unk_1004BB148, (uint64_t)&unk_1004BB150, a2).n128_u64[0];
  return result;
}

uint64_t sub_100079AB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100079AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002E8E0;
  return v6();
}

uint64_t sub_100079B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100079B48(a1, 16, (uint64_t)sub_100079AB4, (uint64_t)&unk_1004BB148, (uint64_t)&unk_1004BB150, a2);
}

uint64_t sub_100079B48@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 56) = v8;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  swift_bridgeObjectRetain(v6);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v8);
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_10046D2E8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_10000FD10(a8, v21 + v17, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1004BB160;
  a9[7] = v21;
  return result;
}

uint64_t sub_100079CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100079D8C, 0, 0);
}

uint64_t sub_100079D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000FEB4(*(_QWORD *)(v0 + 96), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10002F60C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003C6C90;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100079F58, v19, v20);
  }
}

uint64_t sub_100079F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007A028, 0, 0);
}

uint64_t sub_10007A028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100034960(*(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB15C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002E8E0;
  return sub_100079CE0(v7, v8, v2, v3);
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_10007A140(0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_10007A140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v17[-v12];
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v14 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_10005D7B8;
}

id sub_10007A2C8()
{
  return sub_10007ACC4();
}

uint64_t sub_10007A2E4(uint64_t a1, uint64_t a2)
{
  return sub_10007A304(a1, a2, 0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_10007A304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v19[-v14];
  String.LocalizationValue.init(stringLiteral:)(a3, a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v16 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v17 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v17;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A490(a1, 57, (uint64_t)sub_10002F788, (uint64_t)&unk_1004BB168, (uint64_t)&unk_1004BB170, a2);
}

uint64_t sub_10007A490@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t sub_10007A504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A524(a1, 57, (uint64_t)sub_10002F788, (uint64_t)&unk_1004BB168, (uint64_t)&unk_1004BB170, a2);
}

uint64_t sub_10007A524@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_10046D310, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_10000FD10(a6, v21 + v17, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1004BB180;
  a9[5] = v21;
  return result;
}

uint64_t sub_10007A698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007A744, 0, 0);
}

uint64_t sub_10007A744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000FEB4(*(_QWORD *)(v0 + 72), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10002F60C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007A8FC, v19, v20);
  }
}

uint64_t sub_10007A8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007A9CC, 0, 0);
}

uint64_t sub_10007A9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100034960(*(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007AA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10007ABE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB17C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_10007A698(v7, v8, v2, v3);
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_10005D82C;
}

id sub_10007ACA4()
{
  return sub_10007ACC4();
}

id sub_10007ACC4()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003A7C30);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Track(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100034960(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1004BB2E8;
  if (!qword_1004BB2E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationItem);
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100034960(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10007B294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10007B2A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  v5 = a1[7];
  a1[7] = v4;
  swift_release(v5);
  return a1;
}

uint64_t _s9GoToAlbumO7ContextVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10007B5C4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t sub_10007B64C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100009788(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

double static Actions.OpenInClassical.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10002F788;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1004BB3D8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1004BB3E0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  unint64_t (**v62)();
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t (**v75)();
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v72 = a2;
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v73 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v10;
  __chkstk_darwin(v9);
  v70 = (char *)&v64 - v11;
  v66 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000057B4(&qword_1004BB3E8);
  v67 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v71 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v69 = (uint64_t)&v64 - v19;
  v20 = __chkstk_darwin(v18);
  v68 = (uint64_t)&v64 - v21;
  v76 = v22;
  v23 = __chkstk_darwin(v20);
  v25 = (uint64_t *)((char *)&v64 - v24);
  v77 = a1;
  v26 = Album.catalogID.getter(v23);
  v74 = a3;
  v75 = a4;
  if (v27)
  {
    v28 = v27;
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v25, v14, v66);
    v33 = 0;
    v34 = v67;
  }
  else
  {
    v29 = sub_10007BB90();
    v30 = swift_allocError(&type metadata for ClassicalBridge.Error, v29, 0, 0);
    *(_QWORD *)v31 = 2;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 2;
    swift_willThrow(v32);
    v34 = v67;
    *v25 = v30;
    v33 = 1;
  }
  swift_storeEnumTagMultiPayload(v25, v15, v33);
  v35 = v70;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v70, v77, v7);
  v36 = v68;
  sub_10000FEB4((uint64_t)v25, v68, &qword_1004BB3E8);
  v37 = *(unsigned __int8 *)(v8 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = v8;
  v40 = v7;
  v41 = *(unsigned __int8 *)(v34 + 80);
  v42 = (v78 + v41 + v38) & ~v41;
  v43 = v76;
  v65 = v41 | 7;
  v66 = v41 | 7 | v37;
  v44 = swift_allocObject(&unk_10046D7E0, v42 + v76, v66);
  v45 = v44 + v38;
  v46 = v44;
  v67 = v44;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v47(v45, v35, v40);
  sub_10000FD10(v36, v46 + v42, &qword_1004BB3E8);
  v48 = v69;
  sub_10000FEB4((uint64_t)v25, v69, &qword_1004BB3E8);
  v49 = (v41 + 16) & ~v41;
  v50 = (v43 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = swift_allocObject(&unk_10046D808, v50 + 72, v65);
  sub_10000FD10(v48, v51 + v49, &qword_1004BB3E8);
  sub_100034A2C(v72, v51 + v50);
  v52 = v71;
  sub_10000FD10((uint64_t)v25, v71, &qword_1004BB3E8);
  v53 = v73;
  v47((uint64_t)v73, v77, v40);
  v54 = (uint64_t (*)(uint64_t, char *, uint64_t))v47;
  v55 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v37 + v58) & ~v37;
  v60 = swift_allocObject(&unk_10046D830, v59 + v78, v66 | v56);
  sub_10000FD10(v74, v60 + v57, &qword_1004B9D88);
  sub_10000FD10(v52, v60 + v58, &qword_1004BB3E8);
  result = v54(v60 + v59, v53, v40);
  v62 = v75;
  v63 = v67;
  *v75 = sub_10007BE14;
  v62[1] = (unint64_t (*)())v63;
  v62[2] = (unint64_t (*)())&unk_1004BB3F8;
  v62[3] = (unint64_t (*)())v51;
  v62[4] = (unint64_t (*)())&unk_1004BB408;
  v62[5] = (unint64_t (*)())v60;
  return result;
}

unint64_t sub_10007BB90()
{
  unint64_t result;

  result = qword_1004C2B60;
  if (!qword_1004C2B60)
  {
    result = swift_getWitnessTable(&unk_1003D4144, &type metadata for ClassicalBridge.Error);
    atomic_store(result, (unint64_t *)&qword_1004C2B60);
  }
  return result;
}

unint64_t sub_10007BBD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = 0xD000000000000021;
  v4 = sub_1000057B4(&qword_1004BB3E8);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((Album.isClassicalExperienceAvailable.getter(v5) & 1) != 0)
  {
    sub_10000FEB4(a2, (uint64_t)v7, &qword_1004BB3E8);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      v8 = *v7;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v9._countAndFlagsBits = 0xD000000000000028;
      v9._object = (void *)0x80000001003A7D40;
      String.append(_:)(v9);
      v14 = v8;
      v10 = sub_1000057B4((uint64_t *)&unk_1004BD690);
      _print_unlocked<A, B>(_:_:)(&v14, v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_errorRelease(v8);
      return v15[0];
    }
    else
    {
      sub_10000FE2C((uint64_t)v7, &qword_1004BB3E8);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10007BD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_1000057B4(&qword_1004BB3E8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v9));
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v9, v11);
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

unint64_t sub_10007BE14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000057B4(&qword_1004BB3E8) - 8) + 80);
  return sub_10007BBD4(v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_10007BE78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1000057B4(&qword_1004BB3E8);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v8;
  v2[11] = v9;
  return swift_task_switch(sub_10007BF34, v8, v9);
}

uint64_t sub_10007BF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  char *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_10000FEB4(*(_QWORD *)(v0 + 16), v2, &qword_1004BB3E8);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 72));
    sub_10000FE2C(v3, &qword_1004BB3E8);
    v4 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    *(_QWORD *)(v0 + 96) = Strong;
    v9 = (char *)&dword_1004C2B70 + dword_1004C2B70;
    v8 = (_QWORD *)swift_task_alloc(unk_1004C2B74);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_10007C038;
    return ((uint64_t (*)(_QWORD, uint64_t))v9)(*(_QWORD *)(v0 + 64), Strong);
  }
}

uint64_t sub_10007C038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_10007C108;
  else
    v5 = sub_10007C0A4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10007C0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007C108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007C16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = sub_1000057B4(&qword_1004BB3E8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (_QWORD *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v9 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v9 != 255)
    sub_1000335FC(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v5 + 72, v3 | 7);
}

uint64_t sub_10007C23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004BB3E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_1004BB3F4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002E8E0;
  return sub_10007BE78(v4, v5);
}

uint64_t sub_10007C2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_1000057B4(&qword_1004BB3E8);
  v3[12] = v4;
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000057B4(&qword_1004B99B0);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007C390, 0, 0);
}

uint64_t sub_10007C390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10000FEB4(*(_QWORD *)(v0 + 72), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 120), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_10002F60C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    sub_10000FEB4(v10, v9, &qword_1004BB3E8);
    if (swift_getEnumCaseMultiPayload(v9, v8) == 1)
    {
      sub_10000FE2C(*(_QWORD *)(v0 + 104), &qword_1004BB3E8);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = 1;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 112);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
      v13 = 0;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(_QWORD *)(v0 + 112), v13, 1, v11);
    v16 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = sub_100051FF0();
    *(_QWORD *)(inited + 40) = v18;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 152) = sub_100053464(inited);
    *(_QWORD *)(v0 + 160) = v19;
    *(_QWORD *)(v0 + 168) = v20;
    *(_WORD *)(v0 + 184) = v21;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v22 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v23);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007C5AC, v24, v25);
  }
}

uint64_t sub_10007C5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(uint64_t **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 176));
  sub_100053874(0xD000000000000014, 0x80000001003A7CF0, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_10002F650(v3, v2, v1, v6, SBYTE1(v6));
  return swift_task_switch(sub_10007C668, 0, 0);
}

uint64_t sub_10007C668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B99B0);
  sub_10002F6A8(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007C6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  unint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_1000057B4(&qword_1004BB3E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v28 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v27 = *(_QWORD *)(v10 + 64);
  v12 = v0 + v3;
  v13 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
  {
    v25 = v8;
    v26 = v9;
    v14 = *(_QWORD *)(v12 + 8);
    if (v14 >= 0xA)
      swift_bridgeObjectRelease(v14);
    v15 = v12 + v13[5];
    v16 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v15, 1, v16))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
      v24 = v15 + v16[6];
      v17 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v17 - 8);
      v23 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v24, 1))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8]));
    v8 = v25;
    v9 = v26;
  }
  if (swift_getEnumCaseMultiPayload(v0 + v8, v5) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v8));
  }
  else
  {
    v18 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v8, v18);
  }
  v19 = (v8 + v28 + v11) & ~v11;
  v20 = v19 + v27;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v19, v9);
  return swift_deallocObject(v0, v20, v2 | v7 | v11 | 7);
}

uint64_t sub_10007C920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_1000057B4(&qword_1004BB3E8) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  v9 = v6 + v7 + v8;
  v10 = v0 + v3;
  v11 = v0 + v6;
  v12 = v0 + (v9 & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_1004BB404);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10002F6EC;
  return sub_10007C2BC(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046D858, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_10046D880, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10002F080;
}

uint64_t (*sub_10007CA74())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046D980, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_10046D9A8, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10002F6E4;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001003A7CD0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1004B8A10 != -1)
    swift_once(&qword_1004B8A10, sub_10002B2B8);
  v10 = qword_1004F4630;
  static Locale.current.getter((id)qword_1004F4630);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10007CC6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t (*v24)();
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id result;
  unint64_t (**v48)();
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unint64_t (*v52)();
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t (**v60)();
  uint64_t v61;
  uint64_t v62;
  id v63;

  v57 = a7;
  v58 = a8;
  v54 = a5;
  v55 = a6;
  v56 = a4;
  v51 = a2;
  v60 = a9;
  v62 = a12;
  v63 = a3;
  v59 = a10;
  v13 = *(_QWORD *)(a11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(a1);
  v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v50 = a1;
  v21((char *)&v50 - v19, a1, a11);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = (v22 + 48) & ~v22;
  v61 = v22 | 7;
  v24 = (unint64_t (*)())swift_allocObject(&unk_10046D9E8, v23 + v14, v22 | 7);
  v52 = v24;
  *((_QWORD *)v24 + 2) = a11;
  *((_QWORD *)v24 + 3) = a12;
  v25 = v63;
  *((_QWORD *)v24 + 4) = v51;
  *((_QWORD *)v24 + 5) = v25;
  v51 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v51((char *)v24 + v23, v20, a11);
  v21(v18, a1, a11);
  v26 = (v22 + 32) & ~v22;
  v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_10046DA10, v30 + 40, v61);
  v32 = v62;
  *(_QWORD *)(v31 + 16) = a11;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v31 + v26;
  v34 = (void (*)(char *, uint64_t, uint64_t))v51;
  v51((char *)v33, v18, a11);
  *(_QWORD *)(v31 + v27) = v63;
  v35 = (_QWORD *)(v31 + v28);
  v37 = v55;
  v36 = v56;
  *v35 = v54;
  v35[1] = v37;
  v38 = (_QWORD *)(v31 + v29);
  v39 = v58;
  *v38 = v57;
  v38[1] = v39;
  sub_10000FD10(v36, v31 + v30, &qword_1004B9DF8);
  v40 = v53;
  v34(v53, v50, a11);
  v41 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = (*(_QWORD *)(v41 + 64) + v22 + v43) & ~v22;
  v45 = swift_allocObject(&unk_10046DA38, v44 + v14, v61 | v42);
  v46 = v62;
  *(_QWORD *)(v45 + 16) = a11;
  *(_QWORD *)(v45 + 24) = v46;
  sub_10000FD10(v59, v45 + v43, &qword_1004B9D88);
  v34((char *)(v45 + v44), (uint64_t)v40, a11);
  result = v63;
  v48 = v60;
  v49 = v52;
  *v60 = sub_10007E978;
  v48[1] = v49;
  v48[2] = (unint64_t (*)())&unk_1004BB448;
  v48[3] = (unint64_t (*)())v31;
  v48[4] = (unint64_t (*)())&unk_1004BB458;
  v48[5] = (unint64_t (*)())v45;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A490(a1, 5, (uint64_t)sub_10002F788, (uint64_t)&unk_1004BB460, (uint64_t)&unk_1004BB468, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  unint64_t (**v67)();
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v84 = a8;
  v85 = a9;
  v81 = a6;
  v82 = a7;
  v78 = a4;
  v79 = a5;
  v77 = a2;
  v87 = a1;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v83 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v76 = (char *)&v69 - v16;
  v86 = v17;
  __chkstk_darwin(v15);
  v19 = (char *)&v69 - v18;
  v20 = sub_1000057B4(&qword_1004BB470);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v75 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  v28 = (void (**)(uint64_t, char *, uint64_t))((char *)&v69 - v27);
  v80 = a3;
  v29 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v29, v89, 0, 0);
  v30 = *v29;
  v88 = a11;
  if (v30)
  {
    swift_retain(v30);
    v31 = Player.state<A>(for:)(v87, a10, a11);
    swift_release(v30);
    MusicItemState.playabilityStatus.getter(v28);
    swift_release(v31);
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v28, 0, 1, v32);
  }
  else
  {
    v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  sub_10000FEB4((uint64_t)v28, (uint64_t)v26, &qword_1004BB470);
  v70 = v28;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v87;
  v73(v19, v87, a10);
  v35 = *(unsigned __int8 *)(v21 + 80);
  v36 = *(unsigned __int8 *)(v12 + 80);
  v37 = (v35 + 32) & ~v35;
  v38 = (v22 + v36 + v37) & ~v36;
  v39 = v38 + v86;
  v71 = v36 | v35 | 7;
  v72 = v37;
  v40 = swift_allocObject(&unk_10046DA60, v38 + v86, v71);
  v41 = v88;
  *(_QWORD *)(v40 + 16) = a10;
  *(_QWORD *)(v40 + 24) = v41;
  v42 = v40 + v37;
  v43 = v40;
  v74 = v40;
  sub_10000FD10((uint64_t)v26, v42, &qword_1004BB470);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v69(v43 + v38, v19, a10);
  v44 = v75;
  sub_10000FD10((uint64_t)v70, v75, &qword_1004BB470);
  v45 = v76;
  v73(v76, v34, a10);
  v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_10046DA88, v49 + 8, v71);
  v51 = v88;
  *(_QWORD *)(v50 + 16) = a10;
  *(_QWORD *)(v50 + 24) = v51;
  sub_10000FD10(v44, v50 + v72, &qword_1004BB470);
  v52 = v45;
  v53 = (void (*)(char *, uint64_t, uint64_t))v69;
  v69(v50 + v38, v52, a10);
  v54 = v78;
  *(_QWORD *)(v50 + v46) = v77;
  v55 = (_QWORD *)(v50 + v47);
  v56 = v79;
  *v55 = v54;
  v55[1] = v56;
  v57 = (_QWORD *)(v50 + v48);
  v58 = v82;
  v59 = v83;
  *v57 = v81;
  v57[1] = v58;
  *(_QWORD *)(v50 + v49) = v80;
  v53(v59, v87, a10);
  v60 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (*(_QWORD *)(v60 + 64) + v36 + v62) & ~v36;
  v64 = swift_allocObject(&unk_10046DAB0, v63 + v86, v36 | v61 | 7);
  v65 = v88;
  *(_QWORD *)(v64 + 16) = a10;
  *(_QWORD *)(v64 + 24) = v65;
  sub_10000FD10(v84, v64 + v62, &qword_1004B9D88);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v64 + v63, v59, a10);
  v67 = v85;
  v68 = v74;
  *v85 = sub_1000836F8;
  v67[1] = (unint64_t (*)())v68;
  v67[2] = (unint64_t (*)())&unk_1004BB480;
  v67[3] = (unint64_t (*)())v50;
  v67[4] = (unint64_t (*)())&unk_1004BB490;
  v67[5] = (unint64_t (*)())v64;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A490(a1, 23, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB498, (uint64_t)&unk_1004BB4A0, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  char v90[32];

  v80 = a6;
  v81 = a7;
  v82 = a4;
  v88 = a2;
  v13 = a1;
  v78 = a9;
  v79 = a5;
  v15 = *(_QWORD *)(a11 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(a1);
  v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  v77 = v22;
  v84 = a10;
  v85 = a8;
  v86 = v18;
  v87 = v23;
  if (v22 == (void *)3
    && (v24 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player),
        v19 = swift_beginAccess(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v90, 0, 0),
        (v25 = *v24) != 0))
  {
    v76 = v15;
    KeyPath = swift_getKeyPath(&unk_1003CA7D8);
    v27 = swift_getKeyPath(&unk_1003CA800);
    swift_retain(v25);
    static Published.subscript.getter(&v89, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v19 = swift_release(v27);
    v29 = v89;
    if (v89)
    {
      v30 = objc_msgSend(v89, "tracklist", v19.n128_f64[0]);

      v31 = objc_msgSend(v30, "insertCommand");
      if (v31)
      {
        v32 = objc_msgSend(v31, "insertAfterLastSection");
        swift_unknownObjectRelease(v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "section");
          swift_unknownObjectRelease(v32);
          v34 = objc_msgSend(v33, "metadataObject");

          if (v34)
          {
            v35 = objc_msgSend(v34, "flattenedGenericObject");

            v15 = v76;
            if (!v35)
              goto LABEL_20;
            v36 = objc_msgSend(v35, "anyObject");

            if (!v36)
              goto LABEL_20;
            objc_opt_self(MPModelAlbum);
            v37 = swift_dynamicCastObjCClass(v36);
            if (v37)
            {
              v38 = (void *)v37;
              v39 = v36;
              v40 = objc_msgSend(v38, "title");
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              v66 = swift_dynamicCastObjCClass(v36);
              if (!v66)
              {

                goto LABEL_20;
              }
              v67 = (void *)v66;
              v39 = v36;
              v40 = objc_msgSend(v67, "name");
            }
            v68 = v40;
            if (v68)
            {
              v69 = v68;
              v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
              v72 = v71;
              v73 = v70;

LABEL_21:
              v13 = v86;
              goto LABEL_13;
            }

LABEL_20:
            v72 = 0;
            v73 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    v72 = 0;
    v73 = 0;
    v13 = v86;
    v15 = v76;
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v21, v13, a11, v19);
  v41 = *(unsigned __int8 *)(v15 + 80);
  v42 = (v41 + 40) & ~v41;
  v74 = v41 | 7;
  v76 = v16 + 7;
  v43 = (v16 + 7 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject(&unk_10046DAD8, v44 + 8, v41 | 7);
  v45[2] = a11;
  v45[3] = a12;
  v75 = a12;
  v46 = v87;
  v45[4] = v87;
  v47 = (char *)v45 + v42;
  v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v48(v47, v21, a11);
  v49 = v77;
  *(_QWORD *)((char *)v45 + v43) = v77;
  v50 = v88;
  *(_QWORD *)((char *)v45 + v44) = v88;
  v51 = (_QWORD *)swift_allocObject(&unk_10046DB00, 112, 7);
  v52 = v79;
  v51[2] = v50;
  v51[3] = v52;
  v53 = v81;
  v51[4] = v80;
  v51[5] = v53;
  v51[6] = v78;
  v51[7] = v46;
  v51[8] = v49;
  sub_10000FD10(v82, (uint64_t)(v51 + 9), &qword_1004B9DF8);
  v54 = v83;
  v48(v83, (char *)v86, a11);
  v55 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v58) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_10046DB28, v59 + 8, v74 | v56);
  v61 = v75;
  *(_QWORD *)(v60 + 16) = a11;
  *(_QWORD *)(v60 + 24) = v61;
  sub_10000FD10(v84, v60 + v57, &qword_1004B9D88);
  v48((char *)(v60 + v58), v54, a11);
  *(_QWORD *)(v60 + v59) = v49;
  sub_1000728C0(v49);
  sub_1000728C0(v49);
  sub_1000728C0(v49);
  v62 = v87;
  result = v88;
  v64 = v85;
  v65 = v73;
  *v85 = v49;
  v64[1] = v65;
  v64[2] = v72;
  v64[3] = sub_100083AF4;
  v64[4] = v45;
  v64[5] = &unk_1004BB4B0;
  v64[6] = v51;
  v64[7] = &unk_1004BB4C0;
  v64[8] = v60;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[8];
  uint64_t v8;

  sub_100084208(a1, (uint64_t)v7);
  v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(_QWORD *)(a2 + 128) = v8;
  v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v15 = swift_allocObject(&unk_10046DB50, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(_QWORD *)(a7 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v18 + *(_QWORD *)(v16 + 64) + v20) & ~v20;
  v22 = swift_allocObject(&unk_10046DB78, v21 + *(_QWORD *)(v19 + 64), v17 | v20 | 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  sub_10000FD10(a6, v22 + v18, &qword_1004B9D88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v21, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_1004B9F80;
  a9[3] = v15;
  a9[4] = &unk_1004BB4D0;
  a9[5] = v22;
  return result;
}

uint64_t sub_10007DA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007DAF8, 0, 0);
}

uint64_t sub_10007DAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000FEB4(*(_QWORD *)(v0 + 72), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 112), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_100084888(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C64D0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100053464(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007DCB8, v19, v20);
  }
}

uint64_t sub_10007DCB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100053874(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007B6A4, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A490(a1, 36, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB4D8, (uint64_t)&unk_1004BB4E0, a2);
}

uint64_t sub_10007DDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A524(a1, 36, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB4D8, (uint64_t)&unk_1004BB4E0, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046DBA0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_10046DBC8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10002F080;
}

uint64_t (*sub_10007DE54())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046E138, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_10046E160, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10002F6E4;
}

uint64_t sub_10007DEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A524(a1, 5, (uint64_t)sub_10002F788, (uint64_t)&unk_1004BB460, (uint64_t)&unk_1004BB468, a2);
}

unint64_t sub_10007DEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  Swift::String v32;
  _QWORD v34[11];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];

  v40 = a3;
  v7 = type metadata accessor for Artist(0);
  __chkstk_darwin(v7);
  v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34[10] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[9] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v37 - 8);
  v9 = __chkstk_darwin(v37);
  v10 = __chkstk_darwin(v9);
  v34[8] = (char *)v34 - v11;
  v12 = __chkstk_darwin(v10);
  v41 = a4;
  v39 = *(_QWORD *)(a4 - 8);
  v13 = __chkstk_darwin(v12);
  v38 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)v34 - v15;
  type metadata accessor for MusicLibrary(0);
  v17 = static MusicLibrary.shared.getter();
  v18 = static MusicLibrary.== infix(_:_:)(a1, v17);
  swift_release(v17);
  if ((v18 & 1) == 0)
    return 0xD000000000000016;
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v20 = swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v53, 0, 0);
  v21 = *v19;
  if (*v19)
  {
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v16, v40, v41, v20);
    swift_retain(v21);
    v23 = sub_1000057B4(&qword_1004BA720);
    if ((swift_dynamicCast(v42, v16, v22, v23, 6) & 1) != 0)
    {
      sub_100033620(v42, (uint64_t)&v50);
      v24 = v51;
      v25 = v52;
      sub_1000096A0(&v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        v34[7] = v21;
        if (qword_1004B8AF8 != -1)
          swift_once(&qword_1004B8AF8, sub_1000D365C);
        v28 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_1003CA900);
        v30 = swift_getKeyPath(&unk_1003CA928);
        static Published.subscript.getter(v42, v28, KeyPath, v30);
        swift_release(KeyPath);
        swift_release(v30);
        v34[3] = v43;
        v34[5] = v44;
        v34[6] = v45;
        v34[4] = v46;
        v34[2] = v48;
        v34[1] = v49;
        __asm { BR              X10 }
      }
      sub_10000970C(&v50);
    }
    else
    {
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      sub_10000FE2C((uint64_t)v42, (uint64_t *)&unk_1004C0560);
    }
    swift_release(v21);
    return 0xD00000000000001DLL;
  }
  else
  {
    *(_QWORD *)&v42[0] = 0;
    *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x80000001003A7F50;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, v41);
    return *(_QWORD *)&v42[0];
  }
}

uint64_t sub_10007E904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_10007E978()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_10007DEFC(v0[4], v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_10007E998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  unint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v18 = 0;
    v19 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, &v18, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_1004B8A30 != -1)
      swift_once(&qword_1004B8A30, sub_1000A6660);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100039D34(v12, (uint64_t)static Logger.actions);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unknown playability status", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v18 = 0;
    v19 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v1, &v18, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v11;
}

uint64_t sub_10007EBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[46] = v10;
  v8[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[48] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v12);
  v8[50] = swift_task_alloc(v12);
  v13 = sub_1000057B4(&qword_1004BB5C8);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v8[52] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[53] = v15;
  v8[54] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice.Variant(0);
  v8[55] = v16;
  v8[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000057B4(&qword_1004B9EE8);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  v8[59] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[60] = swift_task_alloc(v20);
  v8[61] = swift_task_alloc(v20);
  v21 = type metadata accessor for Song(0);
  v8[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[63] = v22;
  v8[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007ED98, 0, 0);
}

uint64_t sub_10007ED98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  unint64_t v35;
  NSString v36;
  Class v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString v61;
  uint64_t v62;
  void *v63;
  Class isa;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
  v6(v3, *(_QWORD *)(v0 + 304), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) == 0)
  {
    v38 = *(_QWORD *)(v0 + 464);
    v8(v38, 1, 1, *(_QWORD *)(v0 + 496));
    sub_10000FE2C(v38, &qword_1004B9EE8);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 464);
  v13 = *(_QWORD *)(v0 + 312);
  v8(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v15 = swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 256, 0, 0);
  v16 = *v14;
  if (!*v14)
    goto LABEL_15;
  KeyPath = swift_getKeyPath(&unk_1003CA7D8);
  v18 = swift_getKeyPath(&unk_1003CA800);
  swift_retain(v16);
  static Published.subscript.getter((_QWORD *)(v0 + 280), v19, KeyPath, v18);
  swift_release(v18);
  swift_release(KeyPath);
  v15 = swift_release(v16);
  v20 = *(void **)(v0 + 280);
  if (!v20)
    goto LABEL_15;
  MPCPlayerResponse.playState(for:)(*(_QWORD *)(v0 + 512), v15);
  v22 = v21;

  if ((v22 & 1) != 0)
    goto LABEL_15;
  v23 = *v14;
  if (!*v14)
    goto LABEL_15;
  v24 = swift_getKeyPath(&unk_1003CA7D8);
  v25 = swift_getKeyPath(&unk_1003CA800);
  swift_retain(v23);
  static Published.subscript.getter((_QWORD *)(v0 + 288), v26, v24, v25);
  swift_release(v25);
  swift_release(v24);
  v15 = swift_release(v23);
  v27 = *(void **)(v0 + 288);
  if (!v27)
    goto LABEL_15;
  v28 = objc_msgSend(*(id *)(v0 + 288), "tracklist", v15.n128_f64[0]);

  v29 = objc_msgSend(v28, "playingItem");
  if (!v29)
    goto LABEL_15;
  v30 = objc_msgSend(v29, "metadataObject");

  if (!v30)
    goto LABEL_15;
  v31 = objc_msgSend(v30, "innermostModelObject");
  *(_QWORD *)(v0 + 520) = v31;

  objc_opt_self(MPModelSong);
  v32 = swift_dynamicCastObjCClass(v31);
  if (!v32)
  {

LABEL_15:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496), v15);
    goto LABEL_16;
  }
  v33 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "radioPlaybackIntentFromSong:", v32);
  *(_QWORD *)(v0 + 528) = v33;
  if (!v33)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

LABEL_16:
    v39 = *(_QWORD *)(v0 + 480);
    v40 = *(_QWORD *)(v0 + 360);
    v6(v39, *(_QWORD *)(v0 + 304), v40);
    v41 = sub_1000057B4(&qword_1004BB5D0);
    if ((swift_dynamicCast(v0 + 56, v39, v40, v41, 6) & 1) != 0)
    {
      sub_100033620((__int128 *)(v0 + 56), v0 + 16);
      sub_1000444A8(v0 + 16, v0 + 96);
      MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 96);
      v53 = *(_QWORD *)(v0 + 424);
      v52 = *(_QWORD *)(v0 + 432);
      v55 = *(_QWORD *)(v0 + 408);
      v54 = *(_QWORD *)(v0 + 416);
      v57 = *(_QWORD *)(v0 + 336);
      v56 = *(_QWORD *)(v0 + 344);
      v58 = *(_QWORD *)(v0 + 328);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v54);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v55, v54);
      v59 = swift_bridgeObjectRetain();
      v60 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v59);
      v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
      objc_msgSend(v60, "setPlayActivityFeatureName:", v61);

      v62 = sub_10002676C(v57, v56);
      v63 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v62);
      if (v56 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        v65 = *(_QWORD *)(v0 + 336);
        v66 = *(_QWORD *)(v0 + 344);
        sub_100026084(v65, v66);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_10000FC14(v65, v66);
      }
      v67 = *(_QWORD *)(v0 + 424);
      v68 = *(_QWORD *)(v0 + 416);
      v69 = *(_QWORD *)(v0 + 392);
      v78 = *(_QWORD *)(v0 + 432);
      v80 = *(_QWORD *)(v0 + 400);
      v70 = *(_QWORD *)(v0 + 376);
      v71 = *(int **)(v0 + 384);
      v77 = *(_QWORD *)(v0 + 368);
      v72 = *(_QWORD *)(v0 + 336);
      v73 = *(_QWORD *)(v0 + 344);
      objc_msgSend(v63, "setPlayActivityRecommendationData:", isa);
      sub_10000FC14(v72, v73);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v70, v78, v68);
      swift_storeEnumTagMultiPayload(v70, v77, 1);
      *(_QWORD *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      v74 = v69 + v71[7];
      *(_QWORD *)(v74 + 32) = 0;
      *(_OWORD *)v74 = 0u;
      *(_OWORD *)(v74 + 16) = 0u;
      *(_BYTE *)(v69 + v71[8]) = 0;
      *(_BYTE *)(v69 + v71[9]) = 0;
      sub_1000847FC(v70, v69);
      sub_100084840(v0 + 136, v74);
      *(_QWORD *)(v69 + v71[5]) = 2;
      *(_QWORD *)(v69 + v71[6]) = 1;
      sub_10000FE2C(v0 + 136, &qword_1004BF910);
      sub_100034960(v70, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_100084888(v69, v80, type metadata accessor for PlaybackIntentDescriptor);
      v75 = (_QWORD *)swift_task_alloc(dword_1004BF5A4);
      *(_QWORD *)(v0 + 584) = v75;
      *v75 = v0;
      v75[1] = sub_10007F85C;
      return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 400), 0);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_10000FE2C(v0 + 56, &qword_1004BB5D8);
      v42 = *(_QWORD *)(v0 + 480);
      v43 = *(_QWORD *)(v0 + 488);
      v45 = *(_QWORD *)(v0 + 456);
      v44 = *(_QWORD *)(v0 + 464);
      v46 = *(_QWORD *)(v0 + 448);
      v47 = *(_QWORD *)(v0 + 432);
      v49 = *(_QWORD *)(v0 + 400);
      v48 = *(_QWORD *)(v0 + 408);
      v50 = *(_QWORD *)(v0 + 392);
      v79 = *(_QWORD *)(v0 + 376);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v43);
      swift_task_dealloc(v42);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v79);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v34 = v33;
  v35 = *(_QWORD *)(v0 + 344);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setPlayActivityFeatureName:", v36);

  if (v35 >> 60 == 15)
    v37 = 0;
  else
    v37 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setPlayActivityRecommendationData:", v37);

  v76 = (_QWORD *)swift_task_alloc(dword_1004BF56C);
  *(_QWORD *)(v0 + 536) = v76;
  *v76 = v0;
  v76[1] = sub_10007F4C4;
  return PlaybackController.insert(_:location:)((uint64_t)v34, 0);
}

uint64_t sub_10007F4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10007FC14;
  else
    v3 = sub_10007F528;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10007F528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_10000FEB4(*(_QWORD *)(v0 + 352), v0 + 176, &qword_1004B9DF8);
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 552) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 568) = sub_1000096A0((_QWORD *)(v0 + 176), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_100034960(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007F6EC, v6, v7);
  }
  else
  {
    v9 = *(void **)(v0 + 528);
    v10 = *(void **)(v0 + 520);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

    sub_10000FE2C(v0 + 176, &qword_1004B9DF8);
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10007F6EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[57];
  swift_release(v0[72]);
  sub_1000A45E0(v3, 0, v2, v1);
  sub_100034960(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_10007F764, 0, 0);
}

uint64_t sub_10007F764()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000970C((_QWORD *)(v0 + 176));
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 432);
  v12 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007F85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10007FE7C;
  else
    v3 = sub_10007F8C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10007F8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10000FEB4(*(_QWORD *)(v0 + 352), v0 + 216, &qword_1004B9DF8);
  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 616) = sub_1000096A0((_QWORD *)(v0 + 216), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_100034960(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 624) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007FA98, v6, v7);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 424);
    v9 = *(_QWORD *)(v0 + 432);
    v11 = *(_QWORD *)(v0 + 416);
    sub_100034960(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_10000970C((_QWORD *)(v0 + 16));
    sub_10000FE2C(v0 + 216, &qword_1004B9DF8);
    v12 = *(_QWORD *)(v0 + 480);
    v13 = *(_QWORD *)(v0 + 488);
    v15 = *(_QWORD *)(v0 + 456);
    v14 = *(_QWORD *)(v0 + 464);
    v16 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 392);
    v21 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10007FA98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[57];
  swift_release(v0[78]);
  sub_1000A45E0(v3, 0, v2, v1);
  sub_100034960(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_10007FB10, 0, 0);
}

uint64_t sub_10007FB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_100034960(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10000970C((_QWORD *)(v0 + 16));
  sub_10000970C((_QWORD *)(v0 + 216));
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007FC14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(_QWORD *)(v0 + 544);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v6 = type metadata accessor for Logger(0);
  sub_100039D34(v6, (uint64_t)static Logger.actions);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v27 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 296) = v5;
    swift_errorRetain(v5);
    v12 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v13 = (char *)String.init<A>(describing:)(v0 + 296, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_1000393D0(v13, v14, &v27);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to Create Station with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 456);
  v18 = *(_QWORD *)(v0 + 464);
  v20 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007FE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_100034960(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10000970C((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 592);
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v5 = type metadata accessor for Logger(0);
  sub_100039D34(v5, (uint64_t)static Logger.actions);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 296) = v4;
    swift_errorRetain(v4);
    v11 = sub_1000057B4((uint64_t *)&unk_1004BD690);
    v12 = (char *)String.init<A>(describing:)(v0 + 296, v11);
    v14 = v13;
    *(_QWORD *)(v9 + 4) = sub_1000393D0(v12, v13, &v26);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v15 = *(_QWORD *)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 488);
  v18 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000800F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v8 = *(_QWORD *)(v0 + v6 + 8);
  if (v8 >> 60 != 15)
    sub_10000FC28(*(_QWORD *)(v0 + v6), v8);
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_10000970C((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v2 | 7);
}

uint64_t sub_1000801AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(v0 + v5);
  v10 = *(_QWORD *)(v0 + v6);
  v11 = *(_QWORD *)(v0 + v6 + 8);
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v7 + 8);
  v14 = v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)swift_task_alloc(dword_1004BB444);
  *(_QWORD *)(v1 + 16) = v15;
  *v15 = v1;
  v15[1] = sub_10002E8E0;
  return sub_10007EBEC(v8, v9, v10, v11, v12, v13, v14, v2);
}

uint64_t sub_10008028C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_1000057B4(&qword_1004B99B0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000057B4(&qword_1004B9D88);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100080338, 0, 0);
}

uint64_t sub_100080338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000FEB4(*(_QWORD *)(v0 + 96), v3, &qword_1004B9D88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000FE2C(*(_QWORD *)(v0 + 136), &qword_1004B9D88);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_100084888(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_1000057B4(&qword_1004B9DD0);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1003C6BD0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 4;
    *(_QWORD *)(v0 + 184) = sub_100053464(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100080504, v19, v20);
  }
}

uint64_t sub_100080504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100053874(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_10002F650(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_10000FE2C(v7, &qword_1004B99B0);
  return swift_task_switch(sub_10007A028, 0, 0);
}

uint64_t sub_1000805D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_1000057B4(&qword_1004B9D88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004BB454);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10002F6EC;
  return sub_10008028C(v7, v8, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_10007A140(0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046DBF0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000001003A7D70;
  v1 = swift_allocObject(&unk_10046DC18, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000001003A7D70;
  return sub_10002F6E4;
}

uint64_t sub_10008071C(uint64_t a1, uint64_t a2)
{
  return sub_10007A304(a1, a2, 0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*sub_100080740())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10046E0E8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000001003A7D70;
  v1 = swift_allocObject(&unk_10046E110, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000001003A7D70;
  return sub_10002F6E4;
}

uint64_t sub_1000807C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A524(a1, 23, (uint64_t)sub_10007B69C, (uint64_t)&unk_1004BB498, (uint64_t)&unk_1004BB4A0, a2);
}

uint64_t sub_1000807E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_100080804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 40);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002F6EC;
  return v6();
}

uint64_t sub_100080858(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 56);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002F6EC;
  return v5();
}

__n128 sub_1000808AC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[8];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v12 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_100084208((uint64_t *)v11, (uint64_t)v9);
  v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v10;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_100080930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  Swift::String v28;
  void *object;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  int v39;
  char *v40;
  Swift::String v41;
  void *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  char *v49;
  Swift::String v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v60 = a4;
  v61 = a2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  v7 = __chkstk_darwin(v6);
  v55 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v57 = (char *)&v54 - v10;
  v11 = __chkstk_darwin(v9);
  v56 = (char *)&v54 - v12;
  v13 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000057B4(&qword_1004BB470);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v54 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v54 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v54 - v26;
  sub_10000FEB4(a1, (uint64_t)v18, &qword_1004BB470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10000FE2C((uint64_t)v18, &qword_1004BB470);
    v62 = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease(v63);
    v62 = 0xD000000000000022;
    v63 = 0x80000001003A7EC0;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v61, a3);
    v28._countAndFlagsBits = String.init<A>(describing:)(v15, a3);
    object = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(object);
    return v62;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_100080EB4(v61, a3) & 1) == 0)
  {
    v30 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v30;
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v32 = v25;
  v31(v25, v27, v19);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v34 = v58;
    v35 = v59;
    v36 = v56;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v56, v25, v59);
    v37 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v38 = v57;
    v37(v57, v36, v35);
    v39 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v38, v35);
    if (v39 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v39 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v62 = 0;
      v63 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease(v63);
      v62 = 0xD000000000000018;
      v63 = 0x80000001003A7F10;
      v40 = v55;
      v37(v55, v36, v35);
      v41._countAndFlagsBits = String.init<A>(describing:)(v40, v35);
      v42 = v41._object;
      String.append(_:)(v41);
      swift_bridgeObjectRelease(v42);
      v30 = v62;
      v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v36, v35);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      v43(v38, v35);
      return v30;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    goto LABEL_16;
  if (qword_1004B8A30 != -1)
    swift_once(&qword_1004B8A30, sub_1000A6660);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_100039D34(v44, (uint64_t)static Logger.actions);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unknown playability status", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

  v62 = 0;
  v63 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v63);
  v62 = 0xD000000000000010;
  v63 = 0x80000001003A7EF0;
  v49 = v54;
  v31(v54, v27, v19);
  v50._countAndFlagsBits = String.init<A>(describing:)(v49, v19);
  v51 = v50._object;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v51);
  v30 = v62;
  v52 = *(void (**)(char *, uint64_t))(v20 + 8);
  v52(v27, v19);
  v52(v32, v19);
  return v30;
}

uint64_t sub_100080EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v24 = type metadata accessor for Station(0);
  v22 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast(v13, v16, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast(v8, v16, a2, v5, 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v18 = v23;
    v17 = v24;
    if (!swift_dynamicCast(v23, v16, a2, v24, 0))
    {
      v19 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v17);
  }
  v19 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v19;
}

